file_path,api_count,code
setup.py,0,"b'try:\n    from setuptools import setup\nexcept ImportError:\n    from distutils.core import setup\n\nwith open(""README.md"", \'r\') as f:\n    long_description = f.read()\n\nwith open(\'requirements.txt\', \'r\') as f:\n    requirements = [line.strip() for line in f.readlines()]\n\nsetup(\n   name=\'DatScan\',\n   version=\'1.0.0\',\n   description=""An automated data scraper and  Analyser tool"",\n   long_description=long_description,\n   url=\'https://github.com/DevelopedByAnurag/Datscan/\',\n   packages=[\'/\'],\n   install_requires=requirements\n)\n'"
src/datscan.py,0,"b'\ntry:\n    from os import system, name \n    import os\nexcept:\n    print(""\\033[31m \\033[1m Error importing OS Module !! \\033[0m"")\n\ndef cls():\n    if name == \'nt\':\n        os.system(""cls"")\n    else:\n        os.system(""clear"")\n    \ndef ERR0R(T3MP):\n    cls()\n    print(""\\033[31m \\033[1m""+T3MP+""\\033[0m"")\n\ndef T4KE_1NPUT(T3MP):\n    T3MP1 = input(T3MP)\n    return T3MP1\n    \ndef B0LD_T3XT(T3MP):\n    print(""\\033[1m""+ T3MP +""\\033[0m"")\n\ndef PR1NT_T3XT(T3MP):\n    print(T3MP)\n       \n    \ndef L04D_M0DUL3(T3MP):\n    try:\n       exec(T3MP, globals())\n    except:\n        ERR0R(""Failed to run ""+ T3MP)\n        PR1NT_T3XT(""Please install the desired module and press any key to Continue..."")\n        t = T4KE_1NPUT(""You can also press # to exit DatScan "")\n        if t == ""#"":\n            exit()\n        else:\n            L04D_M0DUL3(T3MP)   \n\n\n\ndef ACCESS_CH3CK(L0C,L0C_N):\n    CH3CK = os.access(L0C, os.F_OK)\n    if CH3CK == False:\n        ERR0R(""Access check could not be performed at ""+L0C_N+"" folder"")\n    else:\n        CH3CK = os.access(L0C, os.R_OK)\n        if CH3CK == False:\n            ERR0R(""Error Access Program does not have Read Acess to ""+L0C_N)\n            PR1NT_T3XT(""Please check the desired permissions and press any key to Continue..."")\n            t = T4KE_1NPUT(""You can also press # to exit DatScan "")\n            if t == ""#"":\n                exit()\n            else:\n                ACCESS_CH3CK(L0C,L0C_N)\n        else:\n            CH3CK = os.access(L0C, os.W_OK)\n            if CH3CK == False:\n                ERR0R(""Error Access Program does not have Write Acess to ""+L0C_N)\n                PR1NT_T3XT(""Please check the desired permissions and press any key to Continue..."")\n                t = T4KE_1NPUT(""You can also press # to exit DatScan "")\n                if t == ""#"":\n                    exit()\n                else:\n                    ACCESS_CH3CK(L0C,L0C_N)\n\nACCESS_CH3CK(""accesscheck"",""core"")\nACCESS_CH3CK(""data/accesscheck"",""Data"")\nACCESS_CH3CK(""Modules/accesscheck"",""Modules folder"")\n##libraries\nB0LD_T3XT(""INitializing...."")\ncls()\nL04D_M0DUL3(""from header import HE4D3R"")\nL04D_M0DUL3(""import csv"")\nL04D_M0DUL3(""import pandas as pd"")\n\ndef G3T_US3R_CH0IC3_S0L0(T3MP):\n    T3MPR4RY = 0\n    with open(T3MP, newline=\'\') as f:\n        reader = csv.reader(f)\n        head = next(reader)\n        B0LD_T3XT(""Select one head you want us to process:"")\n    for T3MP1 in head:\n        T3MPR4RY = T3MPR4RY + 1\n        PR1NT_T3XT(""\\t ""+str(T3MPR4RY)+"" ""+str(T3MP1))\n    TM = T4KE_1NPUT(""Enter the row numbers: "")\n    try:\n        TM = head[int(TM)-1]\n    except:\n        cls()\n        ERR0R(""Error try again !!"")\n        G3T_US3R_CH0IC3_S0L0(T3MP)\n    return TM\n\ndef give_head():\n    row = [likes, comment, id, tim, image_src ]\n    with open(\'insta.csv\', \'a\') as csvFile:\n        writer = csv.writer(csvFile)\n        writer.writerow(row)\n    csvFile.close()\n    \n    \ndef ST4ND4R7IS3_CSV(S4V3):\n    T3MP = S4V3+""/""+S4V3.replace(\'data/\', \'\')+"".csv""\n    return T3MP\n\n\n#basic functions\n\ndef R34D3R(M0DLESL1ST):\n    global M0DUL3_L1ST\n    M0DUL3_L1ST = []\n    M0DUL3_F1l3 = open(M0DLESL1ST,\'r\')\n    L1N3 = M0DUL3_F1l3.readline()\n    while L1N3:\n        M0DUL3_L1ST.append(L1N3.rstrip())\n        L1N3 = M0DUL3_F1l3.readline()\n    M0DUL3_F1l3.close()\n    \ndef D1SPL4Y_M0DUL3(T3MP):\n    R34D3R(T3MP)\n    T3MPR4RY = 0\n    for T3MP in M0DUL3_L1ST:\n        T3MPR4RY = T3MPR4RY + 1\n        PR1NT_T3XT(""\\t ""+str(T3MPR4RY)+"" ""+str(T3MP))\n        \ndef M0DUL3_CH3CK3R(M0DUL3):\n    global MODULE_L1 , MODULE_L2 ,MODULE_L3 ,MODULE_L4\n    R34D3R(""4N4M0DLESL1ST.txt"")\n    MODULE_L1 = M0DUL3_L1ST\n    R34D3R(""FM0DLESL1ST.txt"")\n    MODULE_L2 = M0DUL3_L1ST\n    R34D3R(""PR3M0DLESL1ST.txt"")\n    MODULE_L3 = M0DUL3_L1ST\n    R34D3R(""S3RM0DLESL1ST.txt"")\n    MODULE_L4 = M0DUL3_L1ST\n    return M0DUL3 in MODULE_L1+MODULE_L2+MODULE_L3+MODULE_L4\n\n\ndef UN1_F1N4L1Z3(T3MP,UN1,IN):\n    F1L7 = [""4N4M0DLESL1ST.txt"",""FM0DLESL1ST.txt"",""PR3M0DLESL1ST.txt"",""S3RM0DLESL1ST.txt""]\n    if T3MP in eval(UN1):\n        eval(UN1).remove(T3MP)\n        L3N7 = len(eval(UN1))\n        INCR3=1\n        F1L3_M0D = open(F1L7[IN], ""w"")\n        for L1N3 in eval(UN1):\n            F1L3_M0D.write(L1N3)\n            if INCR3 < L3N7:\n                INCR3=INCR3+1\n                F1L3_M0D.write(""\\n"")\n        F1L3_M0D.close()\n\ndef M4N4G3_D474():\n    if ENTRY_0PTI0N ==""3"":\n        B0LD_T3XT(""Here is the List Of Existing DataSet"")\n        PR1NT_T3XT(""press the number which dataset to delete"")\n        D1SPL4Y_M0DUL3(\'D474S37.txt\')\n        PR1NT_T3XT(""to go back press # : "")\n        OPTI0N = T4KE_1NPUT(""Enter your Choice:- "")\n        cls()\n        D47A_M4N4G3R(M0DUL3_L1ST[int(OPTI0N)-1])\n\n\n\n\n#base setup\ndef ST4ND4R7IS3_CSV(S4V3):\n    T3MP = S4V3+""/""+S4V3.replace(\'data/\', \'\')+"".csv""\n    return T3MP\n\ndef G37_1NPUT():\n    T3MP = T4KE_1NPUT(""Enter the tags you want to scrape and diffrencitate with help of spaces"")\n    T3MP0 = T3MP.split("" "")\n    return T3MP0\n\ndef G3T_R0WN4M3(T3MP):\n    with open(\'T3MP\', newline=\'\') as f:\n        reader = csv.reader(f)\n        head = next(reader)\n\n\ndef M3NU():\n    HE4D3R()\n    global ENTRY_0PTI0N\n    ENTRY_0PTI0N = 0\n    B0LD_T3XT(""select one of the following task"")\n    PR1NT_T3XT(""\\t 1. Get New Data"")\n    PR1NT_T3XT(""\\t 2. Process Existing Data"")\n    PR1NT_T3XT(""\\t 3. Install/Uninstall Module"")\n    PR1NT_T3XT(""\\t 0. Exit"")\n    #dis={1:[""Get New Data""],2:[""Get New Data2""]}\n    ENTRY_0PTI0N = T4KE_1NPUT(""Enter Your Choice:- "")\n    cls()\n    M3NU2()\n\n\ndef M3NU2():\n    global OPTI0N\n    OPTI0N = 0\n    if ENTRY_0PTI0N ==""1"":\n        B0LD_T3XT(""Which Data feching module to use"")\n        D1SPL4Y_M0DUL3(\'FM0DLESL1ST.txt\')\n        CH0IC3 = T4KE_1NPUT(""Enter your Choice:- "")\n        try:\n            G3T_M0DULE(M0DUL3_L1ST[int(CH0IC3)-1])\n        except:\n            ERR0R(""Invalid choice Try again !!!"")\n            M3NU2()\n\n    elif ENTRY_0PTI0N ==""2"":\n        B0LD_T3XT(""What you want to do with Dataset"")\n        PR1NT_T3XT(""\\t 1. Pre-Process Data"")\n        PR1NT_T3XT(""\\t 2. Sentiment analysis"")\n        PR1NT_T3XT(""\\t 3. Data Translation"")\n        OPTI0N = input(""Enter your Choice:- "")\n        cls()\n        AN4LYSE_M3NU()\n\n    elif ENTRY_0PTI0N ==""3"":\n        B0LD_T3XT(""Select one of the following"")\n        PR1NT_T3XT(""\\t 1. Import a module "")\n        PR1NT_T3XT(""\\t 2. Uninstall a module "")\n        OPTI0N = T4KE_1NPUT(""Enter your Choice:- "")\n        cls()\n        M0DULE_M3NU()\n\n    elif ENTRY_0PTI0N ==""0"":\n        cls()\n        exit()\n\n    else:\n        ERR0R(""Invalid choice try again \\n"")\n        M3NU()\n\n\ndef AN4LYSE_M3NU():\n    CH0IC3 = ""0""\n    if OPTI0N ==\'1\':\n        B0LD_T3XT(""Choose the module for Data Prepocessing:"")\n        D1SPL4Y_M0DUL3(""PR3PR0C3SSL1ST.txt"")\n        CH0IC3 = T4KE_1NPUT(""Enter your Choice:- "")\n        try:\n            G3T_M0DULE(M0DUL3_L1ST[int(CH0IC3)-1])\n        except:\n            ERR0R(""Invalid choice Try again !!!"")\n            AN4LYSE_M3NU()\n            \n    if OPTI0N ==\'2\':\n        B0LD_T3XT(""Choose the module for Sentimental Analysis: "")\n        D1SPL4Y_M0DUL3(""4N4M0DLESL1ST.txt"")\n        CH0IC3 = T4KE_1NPUT(""Enter your Choice:- "")\n        try:\n            G3T_M0DULE(M0DUL3_L1ST[int(CH0IC3)-1])\n        except:\n            ERR0R(""Invalid choice Try again !!!"")\n            AN4LYSE_M3NU()\n\n    elif OPTI0N ==\'3\':\n        B0LD_T3XT("" Choose the module for translating data:"")\n        D1SPL4Y_M0DUL3(""TR4NSL4TI0NL1ST.txt"")\n        CH0IC3 = T4KE_1NPUT(""Enter your Choice:- "")\n        try:\n            G3T_M0DULE(M0DUL3_L1ST[int(CH0IC3)-1])\n        except:\n            ERR0R(""Invalid choice Try again !!!"")\n            AN4LYSE_M3NU()\n    else:\n        ERR0R(""Invalid choice try again \\n"")\n        M3NU2()\n\n\n\ndef G3T_M0DULE(T3MP):\n    cls()\n    B0LD_T3XT(""Enter the Name of Folder to Store Data"")\n    T3MP0 = T4KE_1NPUT(""Enter your Choice:- "")\n    if os.path.isdir(""data/""+T3MP0):\n        ERR0R(""DataSet With Same Name Might Exist"")\n        PR1NT_T3XT(""1. Enter New Name"")\n        PR1NT_T3XT(""2. Append New Data"")\n        PR1NT_T3XT(""3. Delete Old Data and Continue"")\n        T3MP1 = T4KE_1NPUT(""Enter your Choice:- "")\n        if T3MP1 == ""1"":\n            G3T_M0DULE(T3MP)\n        elif T3MP1 == ""2"":\n            D474_S37UP(T3MP0)\n            M0DUL3_C4LL3R(T3MP ,T3MP0)\n        elif T3MP1 == ""3"":\n            R34D3R(\'D474S37.txt\')\n            D47A_M4N4G3R(T3MP0)\n            D474_S37UP(T3MP0)\n            M0DUL3_C4LL3R(T3MP ,T3MP0)\n        else:\n            ERR0R(""Invalid Choice"")\n    else:\n        D474_S37UP(T3MP0)\n        B0LD_T3XT(""Feching Module Further Everything will be handled by "" + T3MP)\n        M0DUL3_C4LL3R(T3MP ,T3MP0)\n\n\ndef D474_S37UP(T3MP):\n    F1L3_M0D = open(""D474S37.txt"",""a"")\n    F1L3_M0D.write(""\\n"")\n    F1L3_M0D.write(T3MP)\n    F1L3_M0D.close()\n    os.system(""mkdir data/""+T3MP)\n\n\ndef M0DUL3_C4LL3R(T3MP ,T3MP0):\n    try:\n        exec(""from Modules.""+T3MP + "" import RUNN3R"")\n    except:\n        ERR0R(""Error Importing the Module Try Reinstalling it..."")\n        M3NU()\n    T3MP1 = ""data/""+T3MP0\n    try:\n        RUNN3R(T3MP1)\n    except:\n        ERR0R(""Error starting module might be Corrupt..."")\n        M3NU()\n    PR1NT_T3XT(""Data Scrapping Completed !!"")\n    M3NU()\n\n\ndef UN1NST4LL(T3MP):\n    PR1NT_T3XT(""uninstalling the module please wait..."")\n    os.system(""rm -rf ""+ T3MP)\n    IN = 0\n    L1S7 = [""MODULE_L1"" , ""MODULE_L2"" ,""MODULE_L3"" ,""MODULE_L4""]\n    for UN1 in L1S7:\n        UN1_F1N4L1Z3(T3MP,UN1,IN)\n        IN = IN+1\n    M3NU()\n\n\ndef M0DULE_M3NU():\n    if OPTI0N ==\'1\':\n        B0LD_T3XT(""Enter the link to import module (under development): "")\n    \n    elif OPTI0N ==\'2\':\n        B0LD_T3XT(""Enter the name of module to be uninstalled: "")\n        T3MP = T4KE_1NPUT(""Enter your Choice:- "")\n        #G37_M0DUL3S()\n        T3MP0 = M0DUL3_CH3CK3R(T3MP)\n        if T3MP0 == True:\n            UN1NST4LL(T3MP)\n        else:\n            cls()\n            ERR0R(""Module not found please check it again"")\n    else:\n        ERR0R(""Invalid choice try again \\n"")\n        M3NU2()\n\ndef D47A_M4N4G3R(T3MP):\n    if OPTI0N == ""#"":\n        cls()\n        M3NU()\n    else:\n        os.system(""rm -rf data/""+T3MP)\n        R34D3R(\'D474S37.txt\')\n        M0DUL3_L1ST.remove(T3MP)\n        L3N7 = len(M0DUL3_L1ST)\n        INCR3=1\n        F1L3_M0D = open(""D474S37.txt"", ""w"")\n        for L1N3 in M0DUL3_L1ST:\n            F1L3_M0D.write(L1N3)\n            if INCR3 < L3N7:\n                INCR3=INCR3+1\n                F1L3_M0D.write(""\\n"")\n        F1L3_M0D.close()\n        M4N4G3_D474()\n\ncls()\nM3NU()\n\n'"
src/header.py,0,"b'def HE4D3R() :\n    print(\'\'\' \\033[34m \\033[1m\n    \\033[34mDDDDDDDDDDDDD          \\033[31m TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT\n    \\033[34m   D        DD         \\033[31m           TTT                                                             \\033[31m TT \n    \\033[34m   D         DD    \\033[32m   AAAA      \\033[31m  TTT \\033[97m SSSSSSSSSS  CCCCCCCCCCCC       AAA       NNNN       NN     \\033[31m TT\n    \\033[34m   D          DD   \\033[32m  AA  AA      \\033[31m TTT \\033[97m SS          CC                AA AA      NN NN      NN     \\033[31m TT\n    \\033[34m   D           DD  \\033[32m AA    AA    \\033[31m  TTT \\033[97m SS          CC               AA   AA     NN  NN     NN     \\033[31m TT\n    \\033[34m   D           DD \\033[32m AA      AA   \\033[31m  TTT \\033[97m SS          CC              AA     AA    NN   NN    NN \\033[32m AA \\033[31m TT\n    \\033[34m   D          DD \\033[32m AAAAAAAAAAA    \\033[31m TTT \\033[97m SSSSSSSSSS  CC             AA       AA   NN    NN   NN \\033[32m AA \\033[31m TT\n    \\033[34m   D         DD \\033[32m AA         AA   \\033[31m TTT \\033[97m         SS  CC            AAAAAAAAAAAA   NN     NN  NN \\033[32m AA \\033[31m TT\n    \\033[34m   D        DD \\033[32m AA           AA  \\033[31m TTT \\033[97m         SS  CC            AA         AA  NN      NN NN \\033[32m AA \\033[31m TT\n    \\033[34mDDDDDDDDDDDDD \\033[32m AA             AA \\033[31m TTT \\033[97m         SS  CC            AA         AA  NN       NNNN \\033[32m AA \\033[31m TT\n                \\033[32m  AA               AA     \\033[97m SSSSSSSSSS \\033[97m CCCCCCCCCCCC  AA         AA  NN       NNNN \\033[32m AA\n                \\033[32m AA                 AA                                                             AA\n               \\033[32m AA                  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\'\'\')\n    print(""\\033[35m \\n \\n                                     An Initiative by Anurag batra \\033[0m"")  \n\n'"
src/Modules/insta_unofficial.py,0,"b'\n# coding: utf-8\n\n# In[4]:\n\n\ndef Runner(S4V3):\n    L04D_M0DUL3(""import pandas as pd"")\n    L04D_M0DUL3(""import json"")\n    L04D_M0DUL3(""import requests"")\n    L04D_M0DUL3(""import time"")\n    L04D_M0DUL3(""from datetime import datetime"")\n    L04D_M0DUL3(""from bs4 import BeautifulSoup"")\n    L04D_M0DUL3(""import re"")\n    L04D_M0DUL3(""import random"")\n    temp0 = G37_1NPUT()\n    BURL = \'https://www.instagram.com/accounts/login/\'\n    LURL = BURL + \'ajax/\'\n    headers_list = [\n        ""Mozilla/5.0 (Windows NT 5.1; rv:41.0) Gecko/20100101""\\\n        "" Firefox/41.0"",\n        ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2)""\\\n        "" AppleWebKit/601.3.9 (KHTML, like Gecko) Version/9.0.2""\\\n        "" Safari/601.3.9"",\n        ""Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:15.0)""\\\n        "" Gecko/20100101 Firefox/15.0.1"",\n        ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36""\\\n        "" (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36""\\\n        "" Edge/12.246""\n        ]\n        \n    print(""Enter details to login required To crawl some tags..."")\n    USERNAME = input(""Enter Your insta username (try to use fake account)"")\n    PASSWD =  input(""Enter Your insta Password"")\n    AGENT = headers_list[random.randrange(0,4)]\n    session = requests.Session()\n    session.headers = {\'User-Agent\': AGENT}\n    session.headers.update({\'Referer\': BURL})    \n    req = session.get(BURL)\n    soup = BeautifulSoup(req.content, \'html.parser\') \n    body = soup.find(\'body\')\n    pattern = re.compile(\'window._sharedData\')\n    script = body.find(""script"", text=pattern)\n    script = script.get_text().replace(\'window._sharedData = \', \'\')[:-1]\n    data = json.loads(script)\n\n    csrf = data[\'config\'].get(\'csrf_token\')\n    login_data = {\'username\': USERNAME, \'password\': PASSWD}\n    session.headers.update({\'X-CSRFToken\': csrf})\n    login = session.post(LURL, data=login_data, allow_redirects=True)\n    session.headers={""Cookie"":login.headers[\'Set-Cookie\']}\n    login.content\n\n    \n    for temp1 in temp0:\n        url = ""https://www.instagram.com/tags/""+temp1+""/""\n        print(""crawling ""+temp1+"" tag...."")\n        r = session.get(url)\n        soup = BeautifulSoup(r.text, \'lxml\')\n        script = soup.find(\'script\', text=lambda t: t.startswith(\'window._sharedData\'))\n        page_json = script.text.split(\' = \', 1)[1].rstrip(\';\')\n        data = json.loads(page_json)\n        total_post = data[\'entry_data\'][\'TagPage\'][0][\'graphql\'][\'hashtag\'][\'edge_hashtag_to_media\'][\'count\']\n        print(str(total_post)+""post found"")\n        \n    for post in data[\'entry_data\'][\'TagPage\'][0][\'graphql\'][\'hashtag\'][\'edge_hashtag_to_media\'][\'edges\']:\n        image_src = post[\'node\'][\'thumbnail_resources\'][1][\'src\']\n        likes = post[\'node\'][\'edge_liked_by\'][\'count\']\n        comment = post[\'node\'][\'edge_media_to_comment\'][\'count\']\n        if comment > 1:\n            k = post[\'node\'][\'shortcode\']\n            link = ""https://www.instagram.com/p/""+k+""/""\n            t = post[\'node\'][\'taken_at_timestamp\']\n        tex = post[\'node\'][\'edge_media_to_caption\'][\'edges\'][0][\'node\'][\'text\']\n        tim = time.ctime(t)\n        id = post[\'node\'][\'owner\'][\'id\']\n        row = [likes, comment, id, tim, image_src ]\n        file = ST4ND4R7IS3_CSV(S4V3)\n        with open(file, \'a\') as csvFile:\n            writer = csv.writer(csvFile)\n            writer.writerow(row)\n        csvFile.close()\n\n'"
src/Modules/twitter_official.py,0,"b'\n# coding: utf-8\n\n# In[1]:\n\n\ndef RUNN3R(S4V3):\n    L04D_M0DUL3(""import tweepy"")\n    L04D_M0DUL3(""import pandas as pd"")\n    ####input your credentials here\n    C0NSUM3R_K3Y = input(""Enter Consumer Key: "")\n    C0NSUM3R_S3CR37 = input(""Enter Consumer Secret Key: "")\n    ACC3SS_T0K3N = input(""Enter Access Token: "")\n    ACCESS_T0KEN_S3CR3T = input(""Enter Secret Access Token: "")\n\n    AU7H = tweepy.OAuthHandler(C0NSUM3R_K3Y, C0NSUM3R_S3CR37)\n    AU7H.set_access_token(ACC3SS_T0K3N, ACCESS_T0KEN_S3CR3T)\n    API = tweepy.API(AU7H,wait_on_rate_limit=True)\n    file = ST4ND4R7IS3_CSV(S4V3)\n    csvFile = open(file, \'a\')\n    #Use csv Writer\n    temp0 = G37_1NPUT()\n    for temp1 in temp0:\n        csvWriter = csv.writer(csvFile)\n        for tweet in tweepy.Cursor(api.search,q=temp1,count=10, lang=""en"", since=""2001-04-03"").items():\n            print (tweet.created_at, tweet.text)\n            csvWriter.writerow([tweet.created_at, tweet.text.encode(\'utf-8\')])\n\n'"
src/Modules/twitter_unofficial.py,0,"b'\n# coding: utf-8\n\n# In[ ]:\n\n\ndef RUNN3R(S4V3):\n    L04D_M0DUL3(""import twitterscraper"")\n    L04D_M0DUL3(""import os"")\n    L04D_M0DUL3(""import json"")\n    T3MP0 = G37_1NPUT()\n    for T3MP1 in T3MP0:\n        os.system(""twitterscraper ""+T3MP1.strip()+"" --output=""+S4V3+""/""+T3MP1.strip()+"".json"")\n        file = standartise_tsv(S4V3)\n        \n    DA74 = """"\n    for T3MP1 in T3MP0:\n        DT3MP = json.loads(open(S4V3+""/""+T3MP1.strip()+\'.json\').read())\n        DA74 = DA74 + DT3MP\n        \n        \n    ## getting unique tweets removing tweets with similar tags \n\n    UNIQUE_D474 = """"\n    UNIQUE_D474 = { each[\'id\'] : each for each in data }.values()\n    I = 0\n    for D4T in UNIQUE_D474:\n        I = I+1\n    print(I +"" Unique Tweets Found !!! \\n Saving them...."")\n    file = ST4ND4R7IS3_CSV(S4V3)  \n    I = 0\n    for D4T in UNIQUE_D474:\n        NAME = dat[""fullname""].strip().lower()\n        LIKES = dat[""likes""]\n        REPLIES = dat[""replies""]\n        RETWEETS  = dat[""retweets""]\n        TEXT = dat[""text""].strip().lower()\n        TIMESTAMP = dat[""timestamp""]\n        URL = dat[""url""]\n        USERNAME = dat[""user""].strip().lower()\n        row = [NAME, LIKES, REPLIES, RETWEETS, TEXT, TIMESTAMP, URL, USERNAME ]\n        with open(file, \'a\') as csvFile:\n            writer = csv.writer(csvFile)\n            writer.writerow(row)\n        csvFile.close()\n\n'"
src/data/__init__.py,0,b'pass\n'
