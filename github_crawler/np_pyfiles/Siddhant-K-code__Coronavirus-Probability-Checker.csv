file_path,api_count,code
main.py,0,"b'from flask import Flask, render_template, request\r\napp = Flask(__name__)\r\nimport pickle\r\n\r\n\r\nfile = open(\'model.pkl\', \'rb\')\r\n\r\nclf = pickle.load(file)\r\nfile.close()\r\n@app.route(\'/\', methods=[""GET"", ""POST""])\r\ndef hello_world():\r\n    if request.method == ""POST"":\r\n        myDict = request.form\r\n        fever = int(myDict[\'fever\'])\r\n        age = int(myDict[\'age\'])\r\n        pain = int(myDict[\'pain\'])\r\n        runnyNose = int(myDict[\'runnyNose\'])\r\n        diffBreath = int(myDict[\'diffBreath\'])\r\n        # Code for Inference\r\n        inputFeatures = [fever, pain, age, runnyNose, diffBreath]\r\n        infProb =clf.predict_proba([inputFeatures])[0][1]\r\n        print(infProb)\r\n        return render_template(\'show.html\', inf=round(infProb)*100)\r\n    return render_template(\'index.html\')\r\n    \r\n   # return \'Hello, World!\' + str(infProb)\r\n\r\n\r\n\r\nif __name__==""__main__"":\r\n    app.run(debug=True)'"
myTraining.py,2,"b'import pandas as pd\r\nimport numpy as np\r\nfrom sklearn.linear_model import LogisticRegression\r\nimport pickle\r\n\r\ndef data_split(data, ratio):\r\n    np.random.seed(42)\r\n    shuffled = np.random.permutation(len(data))\r\n    test_set_size = int(len(data) * ratio)\r\n    test_indices = shuffled[:test_set_size]\r\n    train_indices = shuffled[test_set_size:]\r\n    return data.iloc[train_indices], data.iloc[test_indices]\r\n\r\nif __name__== ""__main__"":\r\n\r\n    # Read The Data\r\n    df = pd.read_csv(\'C:\\mystuff\\data.csv\')\r\n    train, test = data_split(df, 0.2)\r\n    X_train = train[[\'fever\', \'bodyPain\', \'age\', \'runnyNose\', \'diffBreath\']].to_numpy()\r\n    X_test = test[[\'fever\', \'bodyPain\', \'age\', \'runnyNose\', \'diffBreath\']].to_numpy()\r\n\r\n    Y_train = train[[\'infectionProb\']].to_numpy().reshape(2312,)\r\n    Y_test = test[[\'infectionProb\']].to_numpy().reshape(577,)\r\n\r\n    clf = LogisticRegression()\r\n    clf.fit(X_train, Y_train)\r\n\r\n    # open a file, where yu want to store the data\r\n    file = open(\'model.pkl\',\'wb\')\r\n\r\n    #dump information to that file\r\n    pickle.dump(clf, file)\r\n    file.close()\r\n   \r\n\r\n   '"
