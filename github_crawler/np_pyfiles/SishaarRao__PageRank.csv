file_path,api_count,code
main.py,5,"b'#!/bin/env python3\n\nimport numpy as np\nfrom scipy.sparse.linalg import eigs\nimport os\nimport time\n\n\ndef main():    \n    # Figure out how many files there are to read, construct matrix with that size\n    count = int(os.popen(""ls Pages/ | wc -l"").read().strip())\n    matrix = [x[:] for x in [[0]*count]*count]\n\n    # Parse the text files and populate matrix with data from Parser\n    parserOutput = os.popen(""./parser.sh"").read().split()\n    i = 0\n    while i < len(parserOutput):\n        matrix[int(parserOutput[i])][int(parserOutput[i+1])] = float(parserOutput[i+2])\n        i += 3\n        \n    # Output Data while calculating the Eigenvectors\n    print(""Constructed Matrix:\\n"" + str(np.matrix(matrix)) + ""\\n\\n"")\n    vals, vecs = eigs(np.array(matrix), k=1)\n    print(""Eigenvalues:\\n"" + str(np.matrix(vals)) + ""\\n\\n"")\n    print(""Eigenvectors:\\n""+ str(np.matrix(vecs)) + ""\\n\\n"")\n\n    # Discard Complex variables\n    eigenvector = []\n    for vec in vecs:\n        eigenvector.append(float(vec[0]))\n\n    # Print Search Results\n    print(""\\nSearch Results:"")\n    for page in np.argsort(eigenvector)[::-1]:\n        print(""Page "" + str(page+1))\n\nstart_time = time.time()\nmain()\nprint(""--- %s seconds ---"" % (time.time() - start_time))\n\n'"
