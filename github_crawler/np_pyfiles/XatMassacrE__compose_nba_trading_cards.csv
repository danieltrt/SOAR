file_path,api_count,code
compose_image.py,1,"b'#coding=utf-8\n__author__=\'xat\'\n\nimport os\nimport numpy as np\nfrom PIL import Image, ImageFont, ImageDraw\n\nneed_manual_compose = []\n\nteam_path = \'./logo/\'\nplayer_path = \'./player_img/\'\noutput_path = \'./trading_cards/\'\nfont_file = \'./assets/msyh.ttf\'\ncard_decorate_path = \'./assets/\'\n\nplayer_category = [""SUPER"", ""CORE"", ""BLUE"", ""SIX"", ""BENCH""]\n\n\nmock_data = [\n    {\n        \'id\': 1966,\n        \'cn_name\': \'\xe5\x8b\x92\xe5\xb8\x83\xe6\x9c\x97-\xe8\xa9\xb9\xe5\xa7\x86\xe6\x96\xaf\',\n        \'team_id\': 5,\n        \'category\': \'SUPER\'\n    },\n    {\n        \'id\': 1977,\n        \'cn_name\': \'\xe5\x85\x8b\xe9\x87\x8c\xe6\x96\xaf-\xe6\xb3\xa2\xe4\xbb\x80\',\n        \'team_id\': 14,\n        \'category\': \'SUPER\'\n    }\n]\n\ndef compose(player_img, name, team_logo, category_img, output_name):\n    \n    card_bg = card_decorate_path + \'bg.png\'\n    player_img_offset_height = 15\n\n    if not os.path.isfile(player_path + player_img):\n        need_manual_compose.append(player_img)\n        print(player_path + player_img + \' is not exist\')\n        return \n \n    # deal with high player image\n    h = calculateUsefulHeight(player_img)\n    if h > 310:\n        offset = h - 310\n        player_img_offset_height += offset \n\n    player_img = Image.open(player_path + player_img).convert(\'RGBA\')\n    bg_img = Image.open(card_decorate_path + category_img).convert(\'RGBA\')\n    card_bg_img = Image.open(card_bg).convert(\'RGBA\')\n    logo = Image.open(team_path + team_logo).convert(\'RGBA\')\n\n    logo = logo.resize((100,100), Image.ANTIALIAS)\n\n    card_bg_img.paste(player_img, (35,player_img_offset_height), player_img)\n    card_bg_img.paste(bg_img, (0,0), bg_img)\n    card_bg_img.paste(logo, (95,315), logo)\n\n    font = ImageFont.truetype(font_file, 20)\n    d = ImageDraw.Draw(card_bg_img) \n\n    try:\n        name = unicode(name, \'utf-8\')\n    except NameError:\n        name = name\n    d.text((12, 12), name, font=font, fill=(255,255,255))\n    \n    card_bg_img.save(output_path + output_name, quality=100)\n\ndef compose_all(all):\n    for player in all:\n        id = player[\'id\']\n        # if id == 1966:\n        if True:\n            category = player[\'category\']\n            player_img =  str(id) + \'.png\'\n            \n            team_id = player[\'team_id\']\n            team_img = str(team_id) + \'.png\'\n            name = player[\'cn_name\']            \n            category = player_category.index(category) + 1\n            category_img = \'card_bg_\' + str(category) + \'.png\'\n\n            output_name = str(id) + \'.png\'\n            print(\'start compose \' + str(id))\n            compose(player_img, name, team_img, category_img, output_name)\n\ndef calculateUsefulHeight(img):\n    img = Image.open(player_path + img).convert(\'RGBA\')\n    w, h = img.size\n    mat = np.array(img)\n\n    for i in range(mat.shape[0]):\n        if not allEqual(mat[i]):\n            return h - i\n \ndef allEqual(line):\n    w = len(line)\n    if not w:\n        return True\n    init_value = line[0][3]\n    step = 10\n    for i in range(int(round(w/step))):\n        if line[i * step][3] == init_value:\n            continue\n        else:\n            return False\n    return True       \n\nif __name__ == \'__main__\':\n    \n    compose_all(mock_data)\n    if need_manual_compose:\n        print(need_manual_compose)\n'"
