file_path,api_count,code
colordetect.py,10,"b""import RPi.GPIO as GPIO\n#CONNECT THESE TWO PINS TO ARDUINO PINS\npin=11\npin1=13\n#GPIO PINS TO SEND TWO BINARY DATA TO ARDUINO 10,01 OR 11 DEPENDING ON COLOR\nGPIO.setmode(GPIO.BOARD)\nGPIO.setwarnings(False)\nGPIO.setup(pin,GPIO.OUT)\nGPIO.setup(pin1,GPIO.OUT)\n\na=0\nimport cv2\nimport numpy as np\nimport time\ncap = cv2.VideoCapture(0)\nwhile True:\n    cr=0\n    cb=0\n    cg=0\n    ret,im = cap.read() #READ FRAMES\n    hsv = cv2.cvtColor(im,cv2.COLOR_BGR2HSV) #CONVERT FRAMES FROM COLOR TO HSV\n   #lower mask red (IF YOU WANT TO ADD RED COLOR TO THIS PROGROM UNCOMMENT IT)\n    '''\n    THE PIXELS IN THE IMAGE IN THE RANGE IN cv2.inRange() will be converted to white pixels and rest black\n    \n    \n    \n    lower_red = np.array([0,50,50])\n    upper_red = np.array([20,255,255])\n    mask0 = cv2.inRange(hsv, lower_red ,upper_red)\n   \n     #upper mask red\n    lower_red = np.array([170,50,50])\n    upper_red = np.array([180,255,255])\n    mask1 = cv2.inRange(hsv, lower_red ,upper_red)\n    mask=mask0+mask1'''\n    #yellow\n    lowyellow=np.array([20,50,100],dtype=np.uint8)\n    highyellow=np.array([42,255,255],dtype=np.uint8)\n    mask = cv2.inRange(hsv, lowyellow,highyellow)\n    #blue\n    lowblue=np.array([110,130,50],dtype=np.uint8)\n    highblue=np.array([130,255,255],dtype=np.uint8)\n    maskb = cv2.inRange(hsv, lowblue,highblue)\n    #green\n    lowgreen=np.array([44,54,63],dtype=np.uint8)\n    highgreen=np.array([90,255,255],dtype=np.uint8)\n    maskg = cv2.inRange(hsv, lowgreen,highgreen)\n    \n    cv2.imshow('mask red',mask)\n    #cv2.imshow('mask blue',maskb)\n    #cv2.imshow('mask green',maskg)\n    cr=cv2.countNonZero(mask) #COUNTS THE WHITE PIXELS IN IMAGE THAT CONTAINS WHITE AND BLACK PIXELS\n    cb=cv2.countNonZero(maskb)\n    cg=cv2.countNonZero(maskg)\n    if(cb>4000):\n        print 'blue' #SEND 1 0 TO ARDUINO\n        GPIO.output(pin,GPIO.HIGH)\n        GPIO.output(pin1,GPIO.LOW)\n        time.sleep(1)\n        GPIO.output(pin,GPIO.LOW)\n        GPIO.output(pin1,GPIO.LOW)\n    elif(cg>4000):\n        print 'green'#SEND 0 1 TO ARDUINO\n        GPIO.output(pin,GPIO.LOW)\n        GPIO.output(pin1,GPIO.HIGH)\n        time.sleep(1)\n        GPIO.output(pin,GPIO.LOW)\n        GPIO.output(pin1,GPIO.LOW)\n    elif(cr>8000):\n        print 'yellow' #SEND 1 1 TO ARDUINO\n        GPIO.output(pin,GPIO.HIGH)\n        GPIO.output(pin1,GPIO.HIGH)\n        time.sleep(1)\n        GPIO.output(pin,GPIO.LOW)\n        GPIO.output(pin1,GPIO.LOW)\n    GPIO.output(pin,GPIO.LOW)\n    GPIO.output(pin1,GPIO.LOW)\n        \n    #print ('red=',cr)\n    #print ('blue',cb)\n    #print ('green',cg)\n    if cv2.waitKey(1) & 0xff==ord('q'):      \n        break    \n#cv2.waitKey()\ncap.release()\ncv2.destroyAllWindows()\n    \n\n"""
