file_path,api_count,code
app.py,0,"b'from flask import Flask,render_template,url_for,request\nfrom flask_bootstrap import Bootstrap \nimport pandas as pd \nimport numpy as np \n\n# ML Packages\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.externals import joblib\n\n\napp = Flask(__name__)\nBootstrap(app)\n\n\n@app.route(\'/\')\ndef index():\n\treturn render_template(\'index.html\')\n\n@app.route(\'/predict\', methods=[\'POST\'])\ndef predict():\n\tdf= pd.read_csv(""data/gender.csv"")\n\t# Features and Labels\n\tdf_X = df.name\n\tdf_Y = df.sex\n    \n    # Vectorization\n\tcorpus = df_X\n\tcv = CountVectorizer()\n\tX = cv.fit_transform(corpus) \n\t\n\t# Loading our ML Model\n\tnaivebayes_model = open(""models/naivebayesgendermodel.pkl"",""rb"")\n\tclf = joblib.load(naivebayes_model)\n\n\t# Receives the input query from form\n\tif request.method == \'POST\':\n\t\tnamequery = request.form[\'namequery\']\n\t\tdata = [namequery]\n\t\tvect = cv.transform(data).toarray()\n\t\tmy_prediction = clf.predict(vect)\n\treturn render_template(\'results.html\',prediction = my_prediction,name = namequery.upper())\n\n\nif __name__ == \'__main__\':\n\tapp.run(debug=True, port=33507)\n'"
