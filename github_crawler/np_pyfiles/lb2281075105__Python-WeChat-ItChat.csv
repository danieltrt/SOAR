file_path,api_count,code
01 itchat获取微信好友或者微信群分享文章/PythonItChat.py,0,"b'#coding=utf-8\n\'\'\'\nitchat:\xe8\x8e\xb7\xe5\x8f\x96\xe5\x88\x86\xe4\xba\xab\xe7\xbb\x99\xe7\xbe\xa4\xe6\x88\x96\xe8\x80\x85\xe4\xb8\xaa\xe4\xba\xba\xe7\x9a\x84\xe6\x8a\x80\xe6\x9c\xaf\xe6\x96\x87\xe7\xab\xa0\n(0) \xe7\x86\x9f\xe6\x82\x89itchat,(https://www.cnblogs.com/Chenjiabing/p/6907397.html)\n(1) itchat \xe6\x89\xab\xe7\xa0\x81\xe6\xac\xa1\xe6\x95\xb0\xe5\xa4\xaa\xe5\xa4\x9a\xe4\xbc\x9a\xe8\xa2\xab\xe9\x99\x90\xe5\x88\xb6\xe6\x89\xab\xe7\xa0\x81\xe7\x99\xbb\xe5\xbd\x95\xe5\xbe\xae\xe4\xbf\xa1\xe3\x80\x82\n(2) itchat:\xe8\x8e\xb7\xe5\x8f\x96\xe5\x88\x86\xe4\xba\xab\xe7\xbb\x99\xe7\xbe\xa4\xe6\x88\x96\xe8\x80\x85\xe4\xb8\xaa\xe4\xba\xba\xe7\x9a\x84\xe6\x8a\x80\xe6\x9c\xaf\xe6\x96\x87\xe7\xab\xa0,\xe6\x8f\x90\xe5\x8f\x96\xe5\x87\xba\xe6\x96\x87\xe7\xab\xa0\xe9\x93\xbe\xe6\x8e\xa5\xe3\x80\x81\xe6\x96\x87\xe7\xab\xa0\xe6\xa0\x87\xe9\xa2\x98\xe3\x80\x81\xe6\x96\x87\xe7\xab\xa0\xe9\xa6\x96\xe9\xa1\xb5\xe5\x9b\xbe\xe7\x89\x87\xe3\x80\x81\xe6\x96\x87\xe7\xab\xa0\xe5\x86\x85\xe5\xae\xb9\n(3) \xe9\x80\x9a\xe8\xbf\x87\xe8\x8e\xb7\xe5\x8f\x96\xe5\x88\xb0\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0\xe9\x93\xbe\xe6\x8e\xa5\xef\xbc\x8c\xe7\x88\xac\xe8\x99\xab\xe6\x96\x87\xe7\xab\xa0\xe5\x86\x85\xe5\xae\xb9\xe3\x80\x82\n(4) \xe5\x88\xa4\xe6\x96\xad\xe6\x98\xaf\xe6\x8e\xa5\xe6\x94\xb6\xe6\x96\xb9(ToUserName)\xe6\x98\xaf\xe8\xb0\x81\xe3\x80\x81\xe5\x8f\x91\xe9\x80\x81\xe6\x96\xb9(FromUserName)\xe6\x98\xaf\xe8\xb0\x81\xe5\xb0\xb1\xe6\x98\xaf\xe9\x80\x9a\xe8\xbf\x87\xe5\x94\xaf\xe4\xb8\x80\xe7\x9a\x84ID\xe6\x9d\xa5\xe5\x88\xa4\xe5\x88\xab\xe7\x9a\x84\xe3\x80\x82\n(5) python itchat \xe7\x83\xad\xe7\x99\xbb\xe9\x99\x86(itchat.auto_login(hotReload=True))\n(6) xpath\xe6\xa8\xa1\xe5\x9d\x97\xe7\x88\xac\xe5\x8f\x96\xe6\x96\x87\xe7\xab\xa0\xe6\xa0\x87\xe9\xa2\x98\xe3\x80\x81\xe6\x96\x87\xe7\xab\xa0\xe5\x86\x85\xe5\x9b\xbe\xe7\x89\x87\n(7) \xe6\x90\xad\xe5\xbb\xbaweb\xe6\x9c\x8d\xe5\x8a\xa1\xe5\x99\xa8\xe7\x8e\xaf\xe5\xa2\x83(Mac\xe4\xbd\xbf\xe7\x94\xa8XAMPP)\n(8) pymysql\xe6\xa8\xa1\xe5\x9d\x97\xe8\x87\xaa\xe5\x8a\xa8\xe5\x88\x9b\xe5\xbb\xba\xe6\x95\xb0\xe6\x8d\xae\xe5\xba\x93\xe3\x80\x81\xe5\x88\x9b\xe5\xbb\xba\xe5\xad\x97\xe6\xae\xb5\xe3\x80\x81\xe4\xbf\x9d\xe5\xad\x98\xe5\x86\x85\xe5\xae\xb9\xe5\x88\xb0\xe5\xad\x97\xe6\xae\xb5\n(9) navicat \xe7\x9a\x84\xe4\xbd\xbf\xe7\x94\xa8\n(10) python \xe7\x9b\xb8\xe5\x85\xb3\xe6\xa8\xa1\xe5\x9d\x97\xe7\x9a\x84\xe4\xbd\xbf\xe7\x94\xa8\n\'\'\'\n\n# \xe7\x88\xac\xe5\x8f\x96\xe5\xbe\xae\xe4\xbf\xa1\xe7\xbe\xa4\xe6\x88\x96\xe8\x80\x85\xe6\x98\xaf\xe5\xa5\xbd\xe5\x8f\x8b\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0\n# \xe7\x9b\x91\xe5\x90\xac\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0\nimport re\nimport itchat\n# import\xe5\x85\xa8\xe9\x83\xa8\xe6\xb6\x88\xe6\x81\xaf\xe7\xb1\xbb\xe5\x9e\x8b\nfrom itchat.content import *\nimport urllib\nimport lxml.etree\nimport os\nimport pymysql\nimport uuid\nimport json\nimport requests\nimport io\n# import cStringIO\nfrom pyquery import PyQuery as pq\n# mongodb\nfrom pymongo import MongoClient\nfrom bson.objectid import ObjectId\nfrom gridfs import *\n# import sys\nimport reload\n# reload(sys)\n# sys.setdefaultencoding(\'utf8\')\n# \xe8\xbf\x9e\xe6\x8e\xa5\xe6\x95\xb0\xe6\x8d\xae\xe5\xba\x93mysql\ntable_cms_news = \'cms_news\'\ntable_cms_news_pic = \'cms_news_pic\'\n# db = pymysql.connect(host=\'127.0.0.1\', user=\'root\', passwd=\'\', db=\'itchat\', charset=\'utf8\')\ndb = pymysql.connect(host=\'xxx\', user=\'xxx\', passwd=\'xxx\', db=\'fz_afmcms\', charset=\'utf8\')\ncur = db.cursor()\n\nurlHost = \'xxx\'\n# \xe8\xbf\x9e\xe6\x8e\xa5\xe5\x88\xb0MongoDB\nclient = MongoClient(\'xxx\', xxx)\ndb = client.images\nfs = GridFS(db, \'fs\')\n\n# \xe5\xa4\x84\xe7\x90\x86\xe4\xb8\xaa\xe4\xba\xba\xe5\x88\x86\xe4\xba\xab\xe6\xb6\x88\xe6\x81\xaf\n# \xe5\x8c\x85\xe6\x8b\xac\xe6\x96\x87\xe6\x9c\xac\xe3\x80\x81\xe4\xbd\x8d\xe7\xbd\xae\xe3\x80\x81\xe5\x90\x8d\xe7\x89\x87\xe3\x80\x81\xe9\x80\x9a\xe7\x9f\xa5\xe3\x80\x81\xe5\x88\x86\xe4\xba\xab(49\xe9\x87\x8d\xe7\x82\xb9)\n@itchat.msg_register([TEXT, MAP, CARD, NOTE, SHARING])\ndef text_reply(msg):\n    print(msg)\n    # \xe5\xbe\xae\xe4\xbf\xa1\xe9\x87\x8c\xef\xbc\x8c\xe6\xaf\x8f\xe4\xb8\xaa\xe7\x94\xa8\xe6\x88\xb7\xe5\x92\x8c\xe7\xbe\xa4\xe8\x81\x8a\xef\xbc\x8c\xe9\x83\xbd\xe4\xbd\xbf\xe7\x94\xa8\xe5\xbe\x88\xe9\x95\xbf\xe7\x9a\x84ID\xe6\x9d\xa5\xe5\x8c\xba\xe5\x88\x86\n    if msg[""MsgType""] == 49:\n        print(""\xe4\xb8\xaa\xe4\xba\xba\xe5\x88\x86\xe4\xba\xab\xe6\x96\x87\xe7\xab\xa0\xe5\x9c\xb0\xe5\x9d\x80\xe9\x93\xbe\xe6\x8e\xa5Url:"" + ""---------------------------"")\n\n        xmlcontent = lxml.etree.HTML(get_html(msg[""Url""]))\n            title = xmlcontent.xpath(\'//h2[@class=""rich_media_title""]/text()\')\n            imgArray = xmlcontent.xpath(\'//img/@data-src\')\n        \n            # \xe6\x9d\xa5\xe6\xba\x90\n            source = xmlcontent.xpath(\'//span[@class=""rich_media_meta rich_media_meta_text rich_media_meta_nickname""]/text()\')\n                time = xmlcontent.xpath(\'//em[@class=""rich_media_meta rich_media_meta_text""]/text()\')\n                content = xmlcontent.xpath(\'//div[@class=""rich_media_content ""]\')[0]\n                print (msg[""Content""])\n                print(""\xe6\x9d\xa5\xe6\xba\x90"")\n                print (source, time)\n                # \xe4\xb8\x8b\xe8\xbd\xbd\xe5\x9b\xbe\xe7\x89\x87\n                print(""\xe4\xb8\x8b\xe8\xbd\xbd\xe5\x9b\xbe\xe7\x89\x87"")\n                # print imgArray\n                # print title[0]\n                get_image(title, imgArray, source, time,msg[""Url""],content)\n            \n                print (""\xe4\xb8\xaa\xe4\xba\xba\xe5\x88\x86\xe4\xba\xab\xe6\x96\x87\xe7\xab\xa0\xe7\xb1\xbb\xe5\x9e\x8b\xe7\xbc\x96\xe5\x8f\xb7MsgType:"" + ""---------------------------"")\n                print (msg[""MsgType""])\n                print (""\xe4\xb8\xaa\xe4\xba\xba\xe5\x88\x86\xe4\xba\xabContent:"" + ""---------------------------"")\n                print (msg[""Content""])\n                print (""\xe4\xb8\xaa\xe4\xba\xba\xe5\x88\x86\xe4\xba\xabFromUserName:"" + ""---------------------------"")\n                print (msg[""FromUserName""])\n                print (""\xe4\xb8\xaa\xe4\xba\xba\xe5\x88\x86\xe4\xba\xabToUserName:"" + ""---------------------------"")\n                print (msg[""ToUserName""])\n                print (""\xe4\xb8\xaa\xe4\xba\xba\xe5\x88\x86\xe4\xba\xab\xe9\x93\xbe\xe6\x8e\xa5\xe6\xa0\x87\xe9\xa2\x98FileName:"" + ""---------------------------"")\n                print (msg[""FileName""])\n            \n                # return msg[\'Text\']\n                # itchat.send(\'%s: %s : %s\' % (msg[\'Type\'], msg[\'Text\'],msg[\'Url\']), msg[\'FromUserName\'])\n                print (""------------\xe4\xb8\xaa\xe4\xba\xba"")\n                    # \xe8\x8e\xb7\xe5\x8f\x96\xe5\x88\xb0\xe7\x9a\x84\xe4\xbf\xa1\xe6\x81\xaf\xe6\x98\xaf\xe6\x9f\x90\xe6\x9f\x90\xe4\xba\xba\xe5\x92\x8c\xe7\x99\xbb\xe5\xbd\x95\xe8\x80\x85\xe4\xb9\x8b\xe9\x97\xb4\xe7\x9a\x84\xe9\x80\x9a\xe8\xae\xaf\xef\xbc\x8c\xe5\xa6\x82\xe6\x9e\x9c\xe4\xb8\x8d\xe6\x98\xaf\xe5\x92\x8c\xe7\x99\xbb\xe5\xbd\x95\xe8\xbf\x99\xe9\x80\x9a\xe8\xae\xaf\xe5\xb0\xb1\xe8\x8e\xb7\xe5\x8f\x96\xe4\xb8\x8d\xe5\x88\xb0\n                print (itchat.search_friends(userName=msg[\'FromUserName\'])[\'NickName\'])\n                print (itchat.search_friends(userName=msg[\'ToUserName\'])[\'NickName\'])\n                    \n    else:\n        print (""\xe4\xb8\x8d\xe6\x98\xaf\xe4\xb8\xaa\xe4\xba\xba\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0"")\n\n\n# \xe5\xa4\x84\xe7\x90\x86\xe7\xbe\xa4\xe8\x81\x8a\xe6\xb6\x88\xe6\x81\xaf\n@itchat.msg_register([TEXT, MAP, CARD, NOTE, SHARING], isGroupChat=True)\ndef text_reply(msg):\n    print (msg)\n    if msg[""MsgType""] == 49:\n        print (""\xe7\xbe\xa4\xe8\x81\x8a\xe5\x88\x86\xe4\xba\xab\xe6\x96\x87\xe7\xab\xa0\xe5\x9c\xb0\xe5\x9d\x80\xe9\x93\xbe\xe6\x8e\xa5Url:"" + ""---------------------------"")\n        print (msg[""Url""])\n        \n        xmlcontent = lxml.etree.HTML(get_html(msg[""Url""]))\n        title = xmlcontent.xpath(\'//h2[@class=""rich_media_title""]/text()\')\n        imgArray = xmlcontent.xpath(\'//img/@src\')\n        \n        # \xe6\x9d\xa5\xe6\xba\x90\n        source = xmlcontent.xpath(\'//span[@class=""rich_media_meta rich_media_meta_text rich_media_meta_nickname""]/text()\')\n        time = xmlcontent.xpath(\'//em[@class=""rich_media_meta rich_media_meta_text""]/text()\')\n        # content = xmlcontent.xpath(\'//div[@class=""rich_media_content ""]/p/span/text()\')\n        content = xmlcontent.xpath(\'//div[@class=""rich_media_content ""]\')[0]\n        \n        # print msg[""Content""]\n        print (""\xe5\x86\x85\xe5\xae\xb9"")\n        \n        print (""\xe6\x9d\xa5\xe6\xba\x90"")\n        print (source,time)\n        # \xe4\xb8\x8b\xe8\xbd\xbd\xe5\x9b\xbe\xe7\x89\x87\n        print (""\xe4\xb8\x8b\xe8\xbd\xbd\xe5\x9b\xbe\xe7\x89\x87"")\n        print (imgArray)\n        print (msg[""Url""])\n        # print title[0]\n        get_image(title,imgArray,source,time,msg[""Url""],content)\n        \n        print (""-------------\xe7\xbe\xa4--------"")\n        # itchat.send(\'%s: %s : %s\' % (msg[\'Type\'], msg[\'Text\'], msg[\'Url\']), msg[\'FromUserName\'])\n        \n        print (msg[\'FromUserName\'])\n        print (msg[\'ToUserName\'])\n    # \xe8\xbf\x99\xe4\xb8\xaa\xe6\x98\xaf\xe9\x9c\x80\xe8\xa6\x81\xe6\xaf\x8f\xe6\xac\xa1\xe6\x89\xab\xe7\xa0\x81\xe7\x99\xbb\xe5\xbd\x95\xe9\x83\xbd\xe6\x94\xb9\xe5\x8f\x98\xe7\x9a\x84receiver\n    # receiver = ""@bc33fe9613d2e671dd61c6c75e28fb4af8e1ee86fada62b5a893eafd71e2a797""\n    # if msg[\'FromUserName\'] == receiver:\n    #     print ""----------- \xe8\x87\xaa\xe5\xb7\xb1\xe5\x9c\xa8\xe7\xbe\xa4\xe9\x87\x8c\xe5\x8f\x91\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0 ------------""\n    #     # \xe8\x87\xaa\xe5\xb7\xb1\xe5\x9c\xa8\xe7\xbe\xa4\xe9\x87\x8c\xe5\x8f\x91\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0\n    #     print ""\xe6\x98\xb5\xe7\xa7\xb0:""\n    #     print itchat.search_friends(userName=msg[\'FromUserName\'])[\'NickName\']\n    #     print "" ----------- ""\n    #     print ""\xe7\xbe\xa4\xe5\x90\x8d\xe7\xa7\xb0:""\n    #     print itchat.search_chatrooms(userName=msg[\'ToUserName\'])[\'NickName\']\n    #     chatRoomName = ""\xe5\x91\xb5\xe5\x91\xb5\xe5\x90\x84\xe5\x9c\xb0""\n    #     # if itchat.search_chatrooms(userName=msg[\'ToUserName\'])[\'NickName\'] == chatRoomName:\n    #     #     pass\n    #     # else:\n    #     #     pass\n    #\n    # else:\n    #     # \xe7\xbe\xa4\xe5\x8f\x8b\xe5\x8f\x91\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0\n    #     print ""----------- \xe7\xbe\xa4\xe5\x8f\x8b\xe5\x8f\x91\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0 -----------""\n    #     print ""\xe6\x98\xb5\xe7\xa7\xb0:""\n    #     print msg[\'ActualNickName\']\n    #     print "" ----------- ""\n    #     print ""\xe7\xbe\xa4\xe5\x90\x8d\xe7\xa7\xb0:""\n    #     print itchat.search_chatrooms(userName=msg[\'FromUserName\'])[\'NickName\']\n    #     chatRoomName = ""\xe5\x91\xb5\xe5\x91\xb5\xe5\x90\x84\xe5\x9c\xb0""\n    #     # if itchat.search_chatrooms(userName=msg[\'FromUserName\'])[\'NickName\'] == chatRoomName:\n    #     #     pass\n    #     # else:\n    #     #     pass\n    else:\n        print (""\xe4\xb8\x8d\xe6\x98\xaf\xe7\xbe\xa4\xe8\x81\x8a\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0"")\n# return msg[\'Text\']\n\n\n# \xe5\xa4\x84\xe7\x90\x86\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe6\xb6\x88\xe6\x81\xaf\n@itchat.msg_register([TEXT, MAP, CARD, NOTE, SHARING], isMpChat=True)\ndef text_reply(msg):\n    print (msg)\n    print (itchat.search_mps(name=\'PythonCoder\')[0][""NickName""])\n    if msg[""MsgType""] == 49:\n        print (""\xe7\x9b\x91\xe5\x90\xac\xe5\x88\xb0\xe5\x88\xb6\xe5\xae\x9a\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0\xe9\x93\xbe\xe6\x8e\xa5\xef\xbc\x9a"")\n        print (msg[""Url""])\n    else:\n        print (""\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe4\xb8\x8d\xe6\x98\xaf\xe6\x96\x87\xe7\xab\xa0"")\n\n# \xe8\x8e\xb7\xe5\x8f\x96\xe7\xbd\x91\xe9\xa1\xb5\xe5\x86\x85\xe5\xae\xb9\ndef get_html(url):\n    response = urllib.request.urlopen(url)\n    html = response.read()\n    return html.replace(\'data-src\', \'src\')\n\n# \xe4\xb8\x8b\xe8\xbd\xbd\xe5\x9b\xbe\xe7\x89\x87\ndef get_image(title,imgArray,source,time,linkurl,content):\n    print (""\xe6\xa0\x87\xe9\xa2\x98"")\n    result = cur.execute(""select source_url from cms_news WHERE source_url=\'""+ linkurl + ""\'"")\n    print(str(result) + \'------------url-----------\')\n    \n    titleJ = \'\'\n    sourceJ = \'\'\n    timeJ = \'\'\n    \n    if len(title) == 0:\n        pass\n    # titleJ = \'\'\n    else:\n        titleJ = title[0].strip().replace(""\\n"", """")\n    if len(source) == 0:\n        # sourceJ = \'\'\n        pass\n    else:\n        sourceJ = source[0].strip().replace(""\\n"", """")\n    if len(time) == 0:\n        # timeJ = \'\'\n        pass\n    else:\n        timeJ = time[0].strip().replace(""\\n"", """")\n    \n    if len(imgArray) == 0:\n        pass\n    else:\n        print (\'wo de shi \')\n        print (content)\n        for item in imgArray:\n            \n            if len(item) == 0:\n                imgArray.remove(item)\n                continue\n            if item.find(\'http\') == 0:\n                pass\n            else:\n                imgArray.remove(item)\n\n        for item in imgArray:\n            \n            if item.find(\'http\') == 0:\n                print (item.find(\'http\'))\n                # \xe6\xa0\xb9\xe6\x8d\xae\xe5\xae\xbd\xe9\xab\x98\xe6\x9d\xa5\xe7\xad\x9b\xe9\x80\x89\xe5\x9b\xbe\xe7\x89\x87\n                data = requests.get(item).content\n                tmpIm = io(data)\n                from PIL import Image\n                img = Image.open(tmpIm)\n                width = img.size[0]\n                height = img.size[1]\n                if width < 460 and height < 460:\n                    imgArray.remove(item)\n                else:\n                    pass\n            else:\n                continue\n\nprint (imgArray)\n\n# print imgArray\nprint (\'\xe5\x9b\xbe\xe7\x89\x87\xe7\xad\x9b\xe9\x80\x89\')\n    # if len(imgArray) == 0:\n    #     return\n    # return\n    new_id = str(uuid.uuid1()).strip().replace(""-"", """")\n    new_id1 = str(uuid.uuid1()).strip().replace(""-"", """")\n    new_id2 = str(uuid.uuid1()).strip().replace(""-"", """")\n    \n    if result:\n        print(""------------\xe6\x95\xb0\xe6\x8d\xae\xe5\xba\x93\xe9\x87\x8c\xe9\x9d\xa2\xe5\xad\x98\xe5\x9c\xa8\xe6\xad\xa4\xe6\x95\xb0\xe6\x8d\xae------------"")\nelse:\n    if os.path.isdir(\'./imgs\'):\n        pass\n        else:\n            os.mkdir(""./imgs"")\n    if len(imgArray) == 0:\n        pass\n        else:\n            for index,item in enumerate(imgArray):\n                if index == 0:\n                    with open(\'imgs/\' + new_id + "".png"", \'a+\') as file:\n                        file.write(get_html(item))\n                        file.close\n                elif index == 1:\n                    with open(\'imgs/\' + new_id1 + "".png"", \'a+\') as file:\n                        file.write(get_html(item))\n                        file.close\n                elif index == 2:\n                    with open(\'imgs/\' + new_id2 + "".png"", \'a+\') as file:\n                        file.write(get_html(item))\n                        file.close\nima_dic = """"\n    news_pic = """"\n        news_pic_s = """"\n        news_pic_t = """"\n        \n        news_content = """"\n        news_content1 = \'\'\n        # \xe5\x86\x85\xe5\xae\xb9\n        if len(content) == 0:\n            news_content = """"\n            news_content1 = \'\'\n        else:\n            pass\n    # news_content1 = content[0]\n    # news_content = content\n    content = lxml.etree.tostring(content, pretty_print=True, method=\'html\')\n        pqcontent = pq(unicode(content,\'utf-8\'))\n        \n        pqcontent(\'div\').remove_attr(\'class\')\n        pqcontent(\'div\').remove_attr(\' \')\n        pqcontent(\'div\').remove_attr(\'style\')\n        pqcontent(\'div\').remove_attr(\'id\')\n        pqcontent(\'url\').remove_attr(\'class\')\n        pqcontent(\'url\').remove_attr(\'cid\')\n        pqcontent(\'url\').remove_attr(\'data-mark\')\n        pqcontent(\'url\').remove_attr(\'style\')\n        pqcontent(\'url\').remove_attr(\'mdtype\')\n        pqcontent(\'url\').remove_attr(\'class\')\n        pqcontent(\'url\').remove_attr(\'id\')\n        pqcontent(\'url\').remove_attr(\'cid\')\n        pqcontent(\'code\').remove_attr(\'style\')\n        pqcontent(\'a\').remove_attr(\'href\')\n        pqcontent(\'a\').remove_attr(\'class\')\n        pqcontent(\'a\').remove_attr(\'style\')\n        pqcontent(\'a\').remove_attr(\'id\')\n        pqcontent(\'a\').remove_attr(\'data\')\n        pqcontent(\'p\').remove_attr(\'style\')\n        pqcontent(\'p\').remove_attr(\'class\')\n        pqcontent(\'p\').remove_attr(\'id\')\n        pqcontent(\'p\').remove_attr(\'data-mpa-powered-by\')\n        pqcontent(\'span\').remove_attr(\'cid\')\n        pqcontent(\'span\').remove_attr(\'mdtype\')\n        pqcontent(\'p\').remove_attr(\'cid\')\n        pqcontent(\'p\').remove_attr(\'mdtype\')\n        pqcontent(\'span\').remove_attr(\'spellcheck\')\n        pqcontent(\'video\').remove_attr(\'style\')\n        pqcontent(\'video\').remove_attr(\'class\')\n        pqcontent(\'video\').remove_attr(\'id\')\n        pqcontent(\'source\').remove_attr(\'style\')\n        pqcontent(\'source\').remove_attr(\'class\')\n        pqcontent(\'source\').remove_attr(\'id\')\n        pqcontent(\'table\').remove_attr(\'style\')\n        pqcontent(\'table\').remove_attr(\'class\')\n        pqcontent(\'table\').remove_attr(\'id\')\n        pqcontent(\'tr\').remove_attr(\'style\')\n        pqcontent(\'tr\').remove_attr(\'class\')\n        pqcontent(\'tr\').remove_attr(\'id\')\n        pqcontent(\'img\').remove_attr(\'style\')\n        pqcontent(\'img\').remove_attr(\'class\')\n        pqcontent(\'img\').remove_attr(\'id\')\n        pqcontent(\'img\').remove_attr(\'data-s\')\n        pqcontent(\'img\').remove_attr(\'data-copyright\')\n        pqcontent(\'img\').remove_attr(\'data-ratio\')\n        pqcontent(\'td\').remove_attr(\'style\')\n        pqcontent(\'td\').remove_attr(\'class\')\n        pqcontent(\'td\').remove_attr(\'id\')\n        pqcontent(\'h1\').remove_attr(\'style\')\n        pqcontent(\'h1\').remove_attr(\'class\')\n        pqcontent(\'h1\').remove_attr(\'id\')\n        pqcontent(\'h2\').remove_attr(\'style\')\n        pqcontent(\'h2\').remove_attr(\'class\')\n        pqcontent(\'h2\').remove_attr(\'id\')\n        pqcontent(\'h3\').remove_attr(\'style\')\n        pqcontent(\'h3\').remove_attr(\'class\')\n        pqcontent(\'h3\').remove_attr(\'id\')\n        pqcontent(\'section\').remove_attr(\'style\')\n        pqcontent(\'section\').remove_attr(\'class\')\n        pqcontent(\'section\').remove_attr(\'id\')\n        pqcontent(\'fieldset\').remove_attr(\'style\')\n        pqcontent(\'fieldset\').remove_attr(\'class\')\n        pqcontent(\'fieldset\').remove_attr(\'id\')\n        pqcontent(\'span\').remove_attr(\'style\')\n        pqcontent(\'span\').remove_attr(\'class\')\n        pqcontent(\'span\').remove_attr(\'id\')\n        pqcontent(\'span\').remove_attr(\'md-inline\')\n        pqcontent(\'span\').remove_attr(\'data-shimo-docs\')\n        pqcontent(\'strong\').remove_attr(\'style\')\n        pqcontent(\'strong\').remove_attr(\'class\')\n        pqcontent(\'strong\').remove_attr(\'id\')\n        pqcontent(\'blockquote\').remove_attr(\'style\')\n        pqcontent(\'blockquote\').remove_attr(\'class\')\n        pqcontent(\'blockquote\').remove_attr(\'id\')\n        pqcontent(\'legend\').remove_attr(\'style\')\n        pqcontent(\'legend\').remove_attr(\'class\')\n        pqcontent(\'legend\').remove_attr(\'id\')\n        pqcontent(\'br\').remove_attr(\'style\')\n        pqcontent(\'br\').remove_attr(\'class\')\n        pqcontent(\'br\').remove_attr(\'id\')\n        print (\'-----------------------------------------\')\n        print (type(str(pqcontent.html())))\n        print (\'-----------------------------------------\')\n        # print pqcontent.html()\n        if len(imgArray) == 0:\n            pass\n        else:\n            ima_dic = imgArray[0]\n\nif len(imgArray) == 0:\n    pass\n        elif len(imgArray) == 1:\n            news_pic = imgArray[0]\n            data = requests.get(news_pic).content\n            id = fs.put(data, filename = new_id + \'.png\')\n            print (id)\n            news_pic = urlHost + new_id + \'.png\'\n    elif len(imgArray) == 2:\n        news_pic = imgArray[0]\n        news_pic_s = imgArray[1]\n        for index,item in enumerate(imgArray):\n            if index == 0:\n                data = requests.get(item).content\n                id = fs.put(data, filename=new_id + \'.png\')\n                print (id)\n                news_pic = urlHost + new_id + \'.png\'\n                else:\n                    data = requests.get(item).content\n                    id = fs.put(data, filename=new_id1 + \'.png\')\n                    print (id)\n                    news_pic_s = urlHost + new_id1 + \'.png\'\nelif len(imgArray) >= 3:\n    news_pic = imgArray[0]\n    news_pic_s = imgArray[1]\n    news_pic_t = imgArray[2]\n    print (news_pic)\n    print (news_pic_s)\n    print (news_pic_t)\n    for index,item in enumerate(imgArray):\n        if index == 0:\n            data = requests.get(item).content\n            id = fs.put(data, filename=new_id + \'.png\')\n            print (id)\n            news_pic = urlHost + new_id + \'.png\'\n                elif index == 1:\n                    data = requests.get(item).content\n                    id = fs.put(data, filename=new_id1 + \'.png\')\n                    print (id)\n                    news_pic_s = urlHost + new_id1 + \'.png\'\n            else:\n                data = requests.get(item).content\n                id = fs.put(data, filename=new_id2 + \'.png\')\n                print (id)\n                news_pic_t = urlHost + new_id2 + \'.png\'\n\n    cur.execute(\n                \'INSERT INTO \' + table_cms_news_pic + \' (news_id,pic_url,pic_desc) VALUES (%s,%s,%s)\',\n                (new_id, news_pic,""""))\n        cur.execute(\n                    \'INSERT INTO \' + table_cms_news + \' (news_open_type,news_id,news_title,news_type,com_id,\'\\\n                    \'news_column_code1,news_column_name1,\'\\\n                    \'news_column_code2,news_column_name2,news_desc,news_pic,\'\\\n                    \'news_pic_s,news_pic_t,news_pic_is_show,\'\\\n                    \'news_content,news_source,news_cuser_name,\'\\\n                    \'news_ctime,news_url,news_status,view_count,platid,source_url) \'\\\n                    \'VALUES (%s,%s, %s,%s,%s, %s,%s,%s,%s, %s,%s, %s,%s,%s,\'\\\n                    \' %s,%s, %s,%s,%s,%s,%s,%s,%s)\',\n                    (\'1\',new_id,titleJ,\'1\',\'\',\'\',\'\',\'\',\'\',\'\',news_pic,news_pic_s,\n                     news_pic_t,\'1\',pqcontent.html(),sourceJ,sourceJ,timeJ,"""",\n                     \'1\',200,\'weixin\',linkurl))\n                     \n                     cur.connection.commit()\n                     print(""------------------------  \xe6\x8f\x92\xe5\x85\xa5\xe6\x88\x90\xe5\x8a\x9f  ----------------------------------"")\n\n# \xe8\xbf\x9e\xe6\x8e\xa5\xe6\x95\xb0\xe6\x8d\xae\xe5\xba\x93\n def get_connect():\n\n     try:\n         # \xe5\x88\x9b\xe5\xbb\xba\xe8\xa1\xa8\n         cur.execute(\n             \'CREATE TABLE \' + table_cms_news + \' (id BIGINT(7) NOT NULL AUTO_INCREMENT, title VARCHAR(1000),url VARCHAR(10000), img VARCHAR(1000), source VARCHAR(1000), time VARCHAR(1000), created TIMESTAMP DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY(id))\')\n     except pymysql.err.InternalError as e:\n         print(e)\n     # \xe4\xbf\xae\xe6\x94\xb9\xe8\xa1\xa8\xe5\xad\x97\xe6\xae\xb5\n     cur.execute(\'ALTER DATABASE itchat CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci\')\n     cur.execute(\n         \'ALTER TABLE \' + table_cms_news + \' CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci\')\n     cur.execute(\n         \'ALTER TABLE \' + table_cms_news + \' CHANGE title title VARCHAR(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci\')\n     cur.execute(\n         \'ALTER TABLE \' + table_cms_news + \' CHANGE url url VARCHAR(10000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci\')\n     cur.execute(\n             \'ALTER TABLE \' + table_cms_news + \' CHANGE img img VARCHAR(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci\')\n     cur.execute(\n         \'ALTER TABLE \' + table_cms_news + \' CHANGE source source VARCHAR(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci\')\n     cur.execute(\n         \'ALTER TABLE \' + table_cms_news + \' CHANGE time time VARCHAR(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci\')\n\ndef loginCallback():\n    pass\ndef exitCallback():\n    pass\n# \xe7\x83\xad\xe7\x99\xbb\xe5\xbd\x95(\xe5\x9c\xa8\xe4\xb8\x80\xe6\xae\xb5\xe6\x97\xb6\xe9\x97\xb4\xe5\x86\x85\xe4\xb8\x8d\xe7\x94\xa8\xe6\x89\xab\xe7\xa0\x81\xe7\x99\xbb\xe5\xbd\x95\xe8\xbf\x98\xe8\x83\xbd\xe4\xbf\x9d\xe6\x8c\x81\xe7\x99\xbb\xe5\xbd\x95\xe7\x8a\xb6\xe6\x80\x81)\n get_connect()\nprint (""\xe5\x93\x88\xe5\x93\x88"")\nitchat.auto_login(hotReload=True)\n# \xe7\xbb\x91\xe5\xae\x9a\xe6\xb6\x88\xe6\x81\xaf\xe5\x93\x8d\xe5\xba\x94\xe4\xba\x8b\xe4\xbb\xb6\xe5\x90\x8e\xef\xbc\x8c\xe8\xae\xa9itchat\xe8\xbf\x90\xe8\xa1\x8c\xe8\xb5\xb7\xe6\x9d\xa5\xef\xbc\x8c\xe7\x9b\x91\xe5\x90\xac\xe6\xb6\x88\xe6\x81\xaf\nitchat.run()\n\n\n'"
02 itchat获取微信公众号文章/PythonItChat.py,0,"b'#coding=utf8\nimport pickle\nimport wechatsogou\nimport urllib2\nimport lxml.etree\nimport os\nimport pymysql\nimport json\n\n# \xe6\xb7\xbb\xe5\x8a\xa0\xe4\xb8\x80\xe4\xb8\xaa\xe6\x96\x87\xe4\xbb\xb6\xef\xbc\x8c\xe5\xb0\x86\xe5\xb7\xb2\xe7\xbb\x8f\xe5\x8f\x91\xe9\x80\x81\xe6\x88\x90\xe5\x8a\x9f\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0\xe6\xa0\x87\xe9\xa2\x98\xe5\xba\x8f\xe5\x88\x97\xe5\x8c\x96\xe5\x88\xb0\xe6\x96\x87\xe4\xbb\xb6\xef\xbc\x8c\xe9\x98\xb2\xe6\xad\xa2\xe5\xa4\x9a\xe6\xac\xa1\xe8\xbf\x90\xe8\xa1\x8c\xe5\xaf\xbc\xe8\x87\xb4\xe9\x87\x8d\xe5\xa4\x8d\xe5\x8f\x91\xe9\x80\x81\xe9\x82\xae\xe4\xbb\xb6\nfile_path = \'sent_articles_file\'\n\nws_api = wechatsogou.WechatSogouAPI()\n\n# \xe8\xbf\x9e\xe6\x8e\xa5\xe6\x95\xb0\xe6\x8d\xae\xe5\xba\x93\ntablename = \'pythonwechat\'\ndb = pymysql.connect(host=\'127.0.0.1\', user=\'root\', passwd=\'\', db=\'itchat\', charset=\'utf8\')\ncur = db.cursor()\ncur.execute(\'USE itchat\')\n\n# \xe8\x8e\xb7\xe5\x8f\x96\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe6\x96\x87\xe7\xab\xa0\xe4\xbf\xa1\xe6\x81\xaf\ndef get_article(gzh):\n    articles = ws_api.get_gzh_article_by_history(gzh)\n    print(len(articles[\'article\']))\n    return articles[\'article\']\n\n# \xe8\x8e\xb7\xe5\x8f\x96\xe7\xbd\x91\xe9\xa1\xb5\xe5\x86\x85\xe5\xae\xb9\ndef get_html(url):\n    request = urllib2.Request(url)\n    response = urllib2.urlopen(request)\n    html = response.read()\n    return html\n\n# \xe4\xb8\x8b\xe8\xbd\xbd\xe5\x9b\xbe\xe7\x89\x87\ndef get_image(title,imgArray,source,time):\n    if os.path.isdir(\'./imgs\'):\n        pass\n    else:\n        os.mkdir(""./imgs"")\n    for item in imgArray:\n        with open(\'imgs/\' + (item)[-30:].replace(\'/\',\'-\') + "".png"", \'a+\') as file:\n            file.write(get_html(item))\n            file.close\n\ncur.execute(\n            \'INSERT INTO \' + tablename + \' (title, img,source,time) VALUES (%s, %s,%s, %s)\',\n            (title[0].strip().replace(""\\n"", """"), json.dumps(imgArray, ensure_ascii=False),source[0].strip().replace(""\\n"", """"),time[0].strip().replace(""\\n"", """")))\ncur.connection.commit()\nprint title[0]\nprint(""------------------------  \xe6\x8f\x92\xe5\x85\xa5\xe6\x88\x90\xe5\x8a\x9f  ----------------------------------"")\n\n# \xe8\xbf\x9e\xe6\x8e\xa5\xe6\x95\xb0\xe6\x8d\xae\xe5\xba\x93\ndef get_connect():\n    \n    try:\n        # \xe5\x88\x9b\xe5\xbb\xba\xe8\xa1\xa8\n        cur.execute(\n                    \'CREATE TABLE \' + tablename + \' (id BIGINT(7) NOT NULL AUTO_INCREMENT, title VARCHAR(1000), img VARCHAR(1000), source VARCHAR(1000), time VARCHAR(1000), created TIMESTAMP DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY(id))\')\n    except pymysql.err.InternalError as e:\n        print(e)\n    # \xe4\xbf\xae\xe6\x94\xb9\xe8\xa1\xa8\xe5\xad\x97\xe6\xae\xb5\n    cur.execute(\'ALTER DATABASE itchat CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci\')\n    cur.execute(\n                \'ALTER TABLE \' + tablename + \' CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci\')\ncur.execute(\n            \'ALTER TABLE \' + tablename + \' CHANGE title title VARCHAR(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci\')\n    cur.execute(\n                \'ALTER TABLE \' + tablename + \' CHANGE img img VARCHAR(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci\')\n                cur.execute(\n                            \'ALTER TABLE \' + tablename + \' CHANGE source source VARCHAR(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci\')\n                cur.execute(\n                            \'ALTER TABLE \' + tablename + \' CHANGE time time VARCHAR(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci\')\n\n\nif \'__main__\' == __name__:\n\n    get_connect()\n    \n    # \xe5\xae\x9a\xe4\xb9\x89\xe4\xb8\x80\xe4\xb8\xaa\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe5\x88\x97\xe8\xa1\xa8\n    gzh_list = [\'\xe6\x8a\x80\xe6\x9c\xaf\xe6\x9c\x80\xe5\x89\x8d\xe7\xba\xbf\', \'python\', \'\xe5\x85\xa8\xe6\xb0\x91\xe7\x8b\xac\xe7\xab\x8b\xe7\xbb\x8f\xe7\xba\xaa\xe4\xba\xba\', \'\xe7\xa8\x8b\xe5\xba\x8f\xe8\xa7\x86\xe7\x95\x8c\', \'\xe9\x9d\x9e\xe8\x91\x97\xe5\x90\x8d\xe7\xa8\x8b\xe5\xba\x8f\xe5\x91\x98\']\n    \n    for gzh in gzh_list:\n        # \xe6\x9f\xa5\xe6\x89\xbe\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe4\xb9\x8b\xe5\x89\x8d\xef\xbc\x8c\xe5\x85\x88\xe4\xbb\x8e\xe6\x96\x87\xe4\xbb\xb6\xe4\xb8\xad\xe5\x8f\x8d\xe5\xba\x8f\xe5\x88\x97\xe5\x8c\x96\xe5\x87\xba\xe5\xb7\xb2\xe7\xbb\x8f\xe6\x88\x90\xe5\x8a\x9f\xe5\x8f\x91\xe9\x80\x81\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0\xe5\x88\x97\xe8\xa1\xa8\n        if os.path.exists(file_path):\n            f = open(file_path, \'rb\')\n            sent_list = pickle.load(f)\n            f.close()\n        articles = get_article(gzh)\n        for article in articles:\n            print(article[\'title\'],\'\\n\\t\' ,article[\'content_url\'])\n            \n            xmlcontent = lxml.etree.HTML(get_html(article[\'content_url\']))\n            title = xmlcontent.xpath(\'//h2[@class=""rich_media_title""]/text()\')\n            imgArray = xmlcontent.xpath(\'//img[@data-type=""png""]/@data-src\')\n            # \xe6\x9d\xa5\xe6\xba\x90\n            source = xmlcontent.xpath(\n                                      \'//span[@class=""rich_media_meta rich_media_meta_text rich_media_meta_nickname""]/text()\')\n                                      time = xmlcontent.xpath(\'//em[@class=""rich_media_meta rich_media_meta_text""]/text()\')\n                                      print ""\xe6\x9d\xa5\xe6\xba\x90\xe3\x80\x81\xe6\x97\xb6\xe9\x97\xb4""\n                                      print source, time\n                                      # \xe4\xb8\x8b\xe8\xbd\xbd\xe5\x9b\xbe\xe7\x89\x87\n                                      print ""\xe4\xb8\x8b\xe8\xbd\xbd\xe5\x9b\xbe\xe7\x89\x87""\n            get_image(title, imgArray, source, time)\n\n'"
03 itchat监听微信公众号发送的文章/PythonItChat.py,0,"b'#coding=utf-8\n# itchat\xe7\x9b\x91\xe5\x90\xac\xe6\x8c\x87\xe5\xae\x9a\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe5\x8f\x91\xe9\x80\x81\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0\n\nimport itchat\n# import\xe5\x85\xa8\xe9\x83\xa8\xe6\xb6\x88\xe6\x81\xaf\xe7\xb1\xbb\xe5\x9e\x8b\nfrom itchat.content import *\n\n# \xe5\xa4\x84\xe7\x90\x86\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe6\xb6\x88\xe6\x81\xaf\n@itchat.msg_register([TEXT, MAP, CARD, NOTE, SHARING], isMpChat=True)\ndef text_reply(msg):\n    # \xe7\x9b\x91\xe5\x90\xac\xe6\x8c\x87\xe5\xae\x9a\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe6\x8e\xa8\xe9\x80\x81\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0\xe4\xbf\xa1\xe6\x81\xaf\n    print msg\n    if itchat.search_mps(name=\'PythonCoder\')[0][""NickName""] == ""PythonCoder"":\n        # \xe7\x88\xac\xe5\x8f\x96\xe7\x9a\x84\xe6\x98\xafitchat.search_mps(name=\'PythonCoder\')[0][""NickName""]\xe7\x9a\x84\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe6\x96\x87\xe7\xab\xa0\n        if msg[""MsgType""] == 49:\n            print ""\xe7\x9b\x91\xe5\x90\xac\xe5\x88\xb0\xe6\x8c\x87\xe5\xae\x9a\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0\xe9\x93\xbe\xe6\x8e\xa5\xef\xbc\x9a""\n            # \xe6\x8b\xbf\xe5\x88\xb0\xe9\x93\xbe\xe6\x8e\xa5\xe4\xbb\xa5\xe5\x90\x8e\xe5\xb0\xb1\xe5\x8f\xaf\xe4\xbb\xa5\xe8\x8e\xb7\xe5\x8f\x96\xe5\x88\xb0\xe6\x96\x87\xe7\xab\xa0\xe4\xbf\xa1\xe6\x81\xaf\n            print msg[""Url""]\n        else:\n            print ""\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe4\xb8\x8d\xe6\x98\xaf\xe6\x96\x87\xe7\xab\xa0""\n    elif itchat.search_mps(name=\'\xe9\x9d\x9e\xe8\x91\x97\xe5\x90\x8d\xe7\xa8\x8b\xe5\xba\x8f\xe5\x91\x98\')[0][""NickName""] == ""\xe9\x9d\x9e\xe8\x91\x97\xe5\x90\x8d\xe7\xa8\x8b\xe5\xba\x8f\xe5\x91\x98"":\n        if msg[""MsgType""] == 49:\n            print ""\xe7\x9b\x91\xe5\x90\xac\xe5\x88\xb0\xe6\x8c\x87\xe5\xae\x9a\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0\xe9\x93\xbe\xe6\x8e\xa5\xef\xbc\x9a""\n            # \xe6\x8b\xbf\xe5\x88\xb0\xe9\x93\xbe\xe6\x8e\xa5\xe4\xbb\xa5\xe5\x90\x8e\xe5\xb0\xb1\xe5\x8f\xaf\xe4\xbb\xa5\xe8\x8e\xb7\xe5\x8f\x96\xe5\x88\xb0\xe6\x96\x87\xe7\xab\xa0\xe4\xbf\xa1\xe6\x81\xaf\n            print msg[""Url""]\n        else:\n            print ""\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe4\xb8\x8d\xe6\x98\xaf\xe6\x96\x87\xe7\xab\xa0""\n    elif itchat.search_mps(name=\'\xe7\xa8\x8b\xe5\xba\x8f\xe5\x91\x98\xe5\xa4\xa7\xe5\x92\x96\')[0][""NickName""] == ""\xe7\xa8\x8b\xe5\xba\x8f\xe5\x91\x98\xe5\xa4\xa7\xe5\x92\x96"":\n        if msg[""MsgType""] == 49:\n            print ""\xe7\x9b\x91\xe5\x90\xac\xe5\x88\xb0\xe6\x8c\x87\xe5\xae\x9a\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0\xe9\x93\xbe\xe6\x8e\xa5\xef\xbc\x9a""\n            # \xe6\x8b\xbf\xe5\x88\xb0\xe9\x93\xbe\xe6\x8e\xa5\xe4\xbb\xa5\xe5\x90\x8e\xe5\xb0\xb1\xe5\x8f\xaf\xe4\xbb\xa5\xe8\x8e\xb7\xe5\x8f\x96\xe5\x88\xb0\xe6\x96\x87\xe7\xab\xa0\xe4\xbf\xa1\xe6\x81\xaf\n            print msg[""Url""]\n        else:\n            print ""\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe4\xb8\x8d\xe6\x98\xaf\xe6\x96\x87\xe7\xab\xa0""\n    elif itchat.search_mps(name=\'iOS\xe7\xa8\x8b\xe5\xba\x8f\xe5\x91\x98\xe5\xa4\xa7\xe5\x92\x96\')[0][""NickName""] == ""iOS\xe7\xa8\x8b\xe5\xba\x8f\xe5\x91\x98\xe5\xa4\xa7\xe5\x92\x96"":\n        if msg[""MsgType""] == 49:\n            print ""\xe7\x9b\x91\xe5\x90\xac\xe5\x88\xb0\xe6\x8c\x87\xe5\xae\x9a\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0\xe9\x93\xbe\xe6\x8e\xa5\xef\xbc\x9a""\n            # \xe6\x8b\xbf\xe5\x88\xb0\xe9\x93\xbe\xe6\x8e\xa5\xe4\xbb\xa5\xe5\x90\x8e\xe5\xb0\xb1\xe5\x8f\xaf\xe4\xbb\xa5\xe8\x8e\xb7\xe5\x8f\x96\xe5\x88\xb0\xe6\x96\x87\xe7\xab\xa0\xe4\xbf\xa1\xe6\x81\xaf\n            print msg[""Url""]\n        else:\n            print ""\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe4\xb8\x8d\xe6\x98\xaf\xe6\x96\x87\xe7\xab\xa0""\n    else:\n        pass\n\n\nitchat.auto_login(hotReload=True)\n# \xe7\xbb\x91\xe5\xae\x9a\xe6\xb6\x88\xe6\x81\xaf\xe5\x93\x8d\xe5\xba\x94\xe4\xba\x8b\xe4\xbb\xb6\xe5\x90\x8e\xef\xbc\x8c\xe8\xae\xa9itchat\xe8\xbf\x90\xe8\xa1\x8c\xe8\xb5\xb7\xe6\x9d\xa5\xef\xbc\x8c\xe7\x9b\x91\xe5\x90\xac\xe6\xb6\x88\xe6\x81\xaf\nitchat.run()'"
04 itchat监听微信群或好友撤回的消息/PythonItChat.py,0,"b'#coding=utf-8\n\n# \xe5\xbe\xae\xe4\xbf\xa1\xef\xbc\x8c\xe6\x89\xbe\xe5\x9b\x9e\xe5\xa5\xbd\xe5\x8f\x8b\xe3\x80\x81\xe7\xbe\xa4\xe8\x81\x8a\xe7\x94\xa8\xe6\x88\xb7\xe6\x92\xa4\xe5\x9b\x9e\xe7\x9a\x84\xe6\xb6\x88\xe6\x81\xaf\n# \xe8\xaf\xb4\xe6\x98\x8e\xef\xbc\x9a\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x92\xa4\xe5\x9b\x9e\xe7\x9a\x84\xe6\x9c\x89\xe6\x96\x87\xe6\x9c\xac\xe6\x96\x87\xe5\xad\x97\xe3\x80\x81\xe8\xaf\xad\xe9\x9f\xb3\xe3\x80\x81\xe8\xa7\x86\xe9\xa2\x91\xe3\x80\x81\xe5\x9b\xbe\xe7\x89\x87\xe3\x80\x81\xe4\xbd\x8d\xe7\xbd\xae\xe3\x80\x81\xe5\x90\x8d\xe7\x89\x87\xe3\x80\x81\xe5\x88\x86\xe4\xba\xab\xe3\x80\x81\xe9\x99\x84\xe4\xbb\xb6\n\nimport itchat\nfrom itchat.content import *\nimport sys\nimport time\nimport re\nimport os\n\nreload(sys)\nsys.setdefaultencoding(\'utf8\')\n\nmsg_information = {}\n# \xe9\x92\x88\xe5\xaf\xb9\xe8\xa1\xa8\xe6\x83\x85\xe5\x8c\x85\xe7\x9a\x84\xe5\x86\x85\xe5\xae\xb9\nface_bug = None\n\n@itchat.msg_register([TEXT,PICTURE,FRIENDS,CARD,MAP,SHARING,RECORDING,ATTACHMENT,VIDEO],isFriendChat=True,isGroupChat=True)\ndef receive_msg(msg):\n    global face_bug\n    # \xe6\x8e\xa5\xe6\x94\xb6\xe6\xb6\x88\xe6\x81\xaf\xe7\x9a\x84\xe6\x97\xb6\xe9\x97\xb4\n    msg_time_rec = time.strftime(""%Y-%m-%d %H:%M:%S"", time.localtime())\n    if msg.has_key(\'ActualNickName\'):\n        # \xe7\xbe\xa4\xe6\xb6\x88\xe6\x81\xaf\xe7\x9a\x84\xe5\x8f\x91\xe9\x80\x81\xe8\x80\x85,\xe7\x94\xa8\xe6\x88\xb7\xe7\x9a\x84\xe5\x94\xaf\xe4\xb8\x80\xe6\xa0\x87\xe8\xaf\x86\n        from_user = msg[\'ActualUserName\']\n        # \xe5\x8f\x91\xe9\x80\x81\xe8\x80\x85\xe7\xbe\xa4\xe5\x86\x85\xe7\x9a\x84\xe6\x98\xb5\xe7\xa7\xb0\n        msg_from = msg[\'ActualNickName\']\n        # \xe8\x8e\xb7\xe5\x8f\x96\xe6\x89\x80\xe6\x9c\x89\xe5\xa5\xbd\xe5\x8f\x8b\n        friends = itchat.get_friends(update=True)\n        for f in friends:\n            # \xe5\xa6\x82\xe6\x9e\x9c\xe7\xbe\xa4\xe6\xb6\x88\xe6\x81\xaf\xe6\x98\xaf\xe5\xa5\xbd\xe5\x8f\x8b\xe5\x8f\x91\xe7\x9a\x84\n            if from_user == f[\'UserName\']:\n                # \xe4\xbc\x98\xe5\x85\x88\xe4\xbd\xbf\xe7\x94\xa8\xe5\xa5\xbd\xe5\x8f\x8b\xe7\x9a\x84\xe5\xa4\x87\xe6\xb3\xa8\xe5\x90\x8d\xe7\xa7\xb0\xef\xbc\x8c\xe6\xb2\xa1\xe6\x9c\x89\xe5\x88\x99\xe4\xbd\xbf\xe7\x94\xa8\xe6\x98\xb5\xe7\xa7\xb0\n                if f[\'RemarkName\']:\n                    msg_from = f[\'RemarkName\']\n                else:\n                    msg_from = f[\'NickName\']\n                break\n        # \xe8\x8e\xb7\xe5\x8f\x96\xe6\x89\x80\xe6\x9c\x89\xe7\x9a\x84\xe7\xbe\xa4\n        groups = itchat.get_chatrooms(update=True)\n        for g in groups:\n            # \xe6\xa0\xb9\xe6\x8d\xae\xe7\xbe\xa4\xe6\xb6\x88\xe6\x81\xaf\xe7\x9a\x84FromUserName\xe5\x8c\xb9\xe9\x85\x8d\xe6\x98\xaf\xe5\x93\xaa\xe4\xb8\xaa\xe7\xbe\xa4\n            if msg[\'FromUserName\'] == g[\'UserName\']:\n                group_name = g[\'NickName\']\n                group_menbers = g[\'MemberCount\']\n                break\n        group_name = group_name + ""("" + str(group_menbers) +"")""\n    else:\n        # \xe4\xbc\x98\xe5\x85\x88\xe4\xbd\xbf\xe7\x94\xa8\xe5\xa4\x87\xe6\xb3\xa8\xe5\x90\x8d\xe7\xa7\xb0\n        if itchat.search_friends(userName=msg[\'FromUserName\'])[\'RemarkName\']:\n            msg_from = itchat.search_friends(userName=msg[\'FromUserName\'])[\'RemarkName\']\n        else:\n            # \xe5\x9c\xa8\xe5\xa5\xbd\xe5\x8f\x8b\xe5\x88\x97\xe8\xa1\xa8\xe4\xb8\xad\xe6\x9f\xa5\xe8\xaf\xa2\xe5\x8f\x91\xe9\x80\x81\xe4\xbf\xa1\xe6\x81\xaf\xe7\x9a\x84\xe5\xa5\xbd\xe5\x8f\x8b\xe6\x98\xb5\xe7\xa7\xb0\n            msg_from = itchat.search_friends(userName=msg[\'FromUserName\'])[\'NickName\']\n        group_name = """"\n    # \xe4\xbf\xa1\xe6\x81\xaf\xe5\x8f\x91\xe9\x80\x81\xe7\x9a\x84\xe6\x97\xb6\xe9\x97\xb4\n    msg_time = msg[\'CreateTime\']\n    # \xe6\xaf\x8f\xe6\x9d\xa1\xe4\xbf\xa1\xe6\x81\xaf\xe7\x9a\x84id\n    msg_id = msg[\'MsgId\']\n    # \xe5\x82\xa8\xe5\xad\x98\xe4\xbf\xa1\xe6\x81\xaf\xe7\x9a\x84\xe5\x86\x85\xe5\xae\xb9\n    msg_content = None\n    # \xe5\x82\xa8\xe5\xad\x98\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe9\x93\xbe\xe6\x8e\xa5\xef\xbc\x8c\xe6\xaf\x94\xe5\xa6\x82\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0\xe5\x92\x8c\xe9\x9f\xb3\xe4\xb9\x90\n    msg_share_url = None\n    # \xe5\xa6\x82\xe6\x9e\x9c\xe5\x8f\x91\xe9\x80\x81\xe7\x9a\x84\xe6\xb6\x88\xe6\x81\xaf\xe6\x98\xaf\xe6\x96\x87\xe6\x9c\xac\xe6\x88\x96\xe8\x80\x85\xe5\xa5\xbd\xe5\x8f\x8b\xe6\x8e\xa8\xe8\x8d\x90\n    if msg[\'Type\'] == \'Text\' or msg[\'Type\'] == \'Friends\':\n        msg_content = msg[\'Text\']\n\n    # \xe5\xa6\x82\xe6\x9e\x9c\xe5\x8f\x91\xe9\x80\x81\xe7\x9a\x84\xe6\xb6\x88\xe6\x81\xaf\xe6\x98\xaf\xe9\x99\x84\xe4\xbb\xb6\xe3\x80\x81\xe8\xa7\x86\xe9\xa2\x91\xe3\x80\x81\xe5\x9b\xbe\xe7\x89\x87\xe3\x80\x81\xe8\xaf\xad\xe9\x9f\xb3\n    elif msg[\'Type\'] == ""Attachment"" or msg[\'Type\'] == ""Video"" \\\n        or msg[\'Type\'] == \'Picture\' \\\n        or msg[\'Type\'] == \'Recording\':\n        # \xe5\x86\x85\xe5\xae\xb9\xe5\xb0\xb1\xe6\x98\xaf\xe4\xbb\x96\xe4\xbb\xac\xe7\x9a\x84\xe6\x96\x87\xe4\xbb\xb6\xe5\x90\x8d\n        msg_content = msg[\'FileName\']\n        # \xe4\xb8\x8b\xe8\xbd\xbd\xe6\x96\x87\xe4\xbb\xb6\n        msg[\'Text\'](str(msg_content))\n    # \xe5\xa6\x82\xe6\x9e\x9c\xe6\xb6\x88\xe6\x81\xaf\xe4\xb8\xba\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe4\xbd\x8d\xe7\xbd\xae\xe4\xbf\xa1\xe6\x81\xaf\n    elif msg[\'Type\'] == \'Map\':\n        x, y, location = re.search(\n                                   ""<location x=\\""(.*?)\\"" y=\\""(.*?)\\"".*label=\\""(.*?)\\"".*"", msg[\'OriContent\']).group(1, 2, 3)\n                                   if location is None:\n                                       # \xe5\x86\x85\xe5\xae\xb9\xe4\xb8\xba\xe8\xaf\xa6\xe7\xbb\x86\xe7\x9a\x84\xe5\x9c\xb0\xe5\x9d\x80\n                                       msg_content = r""\xe7\xba\xac\xe5\xba\xa6->"" + x.__str__() + "" \xe7\xbb\x8f\xe5\xba\xa6->"" + y.__str__()\n                                   else:\n                                       msg_content = r"""" + location\n    # \xe5\xa6\x82\xe6\x9e\x9c\xe6\xb6\x88\xe6\x81\xaf\xe4\xb8\xba\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe9\x9f\xb3\xe4\xb9\x90\xe6\x88\x96\xe8\x80\x85\xe6\x96\x87\xe7\xab\xa0\xef\xbc\x8c\xe8\xaf\xa6\xe7\xbb\x86\xe7\x9a\x84\xe5\x86\x85\xe5\xae\xb9\xe4\xb8\xba\xe6\x96\x87\xe7\xab\xa0\xe7\x9a\x84\xe6\xa0\x87\xe9\xa2\x98\xe6\x88\x96\xe8\x80\x85\xe6\x98\xaf\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe5\x90\x8d\xe5\xad\x97\n    elif msg[\'Type\'] == \'Sharing\':\n        msg_content = msg[\'Text\']\n        # \xe8\xae\xb0\xe5\xbd\x95\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84url\n            msg_share_url = msg[\'Url\']\n        face_bug = msg_content\n        # \xe5\xb0\x86\xe4\xbf\xa1\xe6\x81\xaf\xe5\xad\x98\xe5\x82\xa8\xe5\x9c\xa8\xe5\xad\x97\xe5\x85\xb8\xe4\xb8\xad\xef\xbc\x8c\xe6\xaf\x8f\xe4\xb8\x80\xe4\xb8\xaamsg_id\xe5\xaf\xb9\xe5\xba\x94\xe4\xb8\x80\xe6\x9d\xa1\xe4\xbf\xa1\xe6\x81\xaf\n        msg_information.update(\n                               {\n                               msg_id: {\n                               ""msg_from"": msg_from,\n                               ""msg_time"": msg_time,\n                               ""msg_time_rec"": msg_time_rec,\n                               ""msg_type"": msg[""Type""],\n                               ""msg_content"": msg_content,\n                               ""msg_share_url"": msg_share_url,\n                               ""group_name"":group_name\n                               }\n                               }\n                               )\n\n# \xe7\x9b\x91\xe5\x90\xac\xe6\x98\xaf\xe5\x90\xa6\xe6\x9c\x89\xe6\xb6\x88\xe6\x81\xaf\xe6\x92\xa4\xe5\x9b\x9e\n# \xe4\xbd\xbf\xe7\x94\xa8\xe4\xb8\x8b\xe9\x9d\xa2\xe7\x9a\x84\xe8\xa3\x85\xe9\xa5\xb0\xe5\x99\xa8\xe7\x9b\x91\xe5\x90\xac\xef\xbc\x8c\xe4\xbc\x9a\xe5\x8f\x91\xe9\x80\x814\xe6\x9d\xa1\xe6\xb6\x88\xe6\x81\xaf\n# @itchat.msg_register(NOTE,isFriendChat=True,isGroupChat=True,isMpChat=True)\n\n# \xe7\x9b\x91\xe5\x90\xac\xe6\x98\xaf\xe5\x90\xa6\xe6\x9c\x89\xe6\xb6\x88\xe6\x81\xaf\xe6\x92\xa4\xe5\x9b\x9e\n# \xe4\xbd\xbf\xe7\x94\xa8\xe4\xb8\x8b\xe9\x9d\xa2\xe7\x9a\x84\xe8\xa3\x85\xe9\xa5\xb0\xe5\x99\xa8\xe7\x9b\x91\xe5\x90\xac\xef\xbc\x8c\xe4\xbc\x9a\xe5\x8f\x91\xe9\x80\x811\xe6\x9d\xa1\xe6\xb6\x88\xe6\x81\xaf\n@itchat.msg_register(NOTE)\ndef information(msg):\n    # \xe8\xbf\x99\xe9\x87\x8c\xe5\xa6\x82\xe6\x9e\x9c\xe8\xbf\x99\xe9\x87\x8c\xe7\x9a\x84msg[\'Content\']\xe4\xb8\xad\xe5\x8c\x85\xe5\x90\xab\xe6\xb6\x88\xe6\x81\xaf\xe6\x92\xa4\xe5\x9b\x9e\xe5\x92\x8cid\xef\xbc\x8c\xe5\xb0\xb1\xe6\x89\xa7\xe8\xa1\x8c\xe4\xb8\x8b\xe9\x9d\xa2\xe7\x9a\x84\xe8\xaf\xad\xe5\x8f\xa5\n    if \'\xe6\x92\xa4\xe5\x9b\x9e\xe4\xba\x86\xe4\xb8\x80\xe6\x9d\xa1\xe6\xb6\x88\xe6\x81\xaf\' in msg[\'Content\']:\n        # \xe5\x9c\xa8\xe8\xbf\x94\xe5\x9b\x9e\xe7\x9a\x84content\xe6\x9f\xa5\xe6\x89\xbe\xe6\x92\xa4\xe5\x9b\x9e\xe7\x9a\x84\xe6\xb6\x88\xe6\x81\xaf\xe7\x9a\x84id\n        old_msg_id = re.search(""\\<msgid\\>(.*?)\\<\\/msgid\\>"", msg[\'Content\']).group(1)\n        # \xe8\x8e\xb7\xe5\x8f\x96\xe5\x88\xb0\xe6\xb6\x88\xe6\x81\xaf\xe5\x8e\x9f\xe6\x96\x87\n        old_msg = msg_information.get(old_msg_id)\n        # \xe5\xa6\x82\xe6\x9e\x9c\xe5\x8f\x91\xe9\x80\x81\xe7\x9a\x84\xe6\x98\xaf\xe8\xa1\xa8\xe6\x83\x85\xe5\x8c\x85\n        if len(old_msg_id)<11:\n            # \xe5\x8f\x91\xe9\x80\x81\xe6\x92\xa4\xe5\x9b\x9e\xe7\x9a\x84\xe6\x8f\x90\xe7\xa4\xba\xe7\xbb\x99\xe6\x96\x87\xe4\xbb\xb6\xe5\x8a\xa9\xe6\x89\x8b\n            itchat.send_file(face_bug,toUserName=\'filehelper\')\n        # \xe6\x8a\x8a\xe6\x9a\x82\xe6\x97\xb6\xe5\xad\x98\xe5\x82\xa8\xe7\x9a\x84\xe4\xbf\xa1\xe6\x81\xaf\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x88\xa0\xe9\x99\xa4\xe6\x8e\x89,\xe4\xb9\x9f\xe5\x8f\xaf\xe4\xbb\xa5\xe9\x80\x89\xe6\x8b\xa9\xe4\xb8\x8d\xe5\x88\xa0\xe9\x99\xa4\n        # os.remove(face_bug)\n        else:\n            msg_body = old_msg.get(\'group_name\') + old_msg.get(\'msg_from\') +""\\n"" + old_msg.get(\'msg_time_rec\') \\\n                + ""\xe6\x92\xa4\xe5\x9b\x9e\xe4\xba\x86:"" + ""\\n"" + r"""" + old_msg.get(\'msg_content\')\n            \n            # \xe5\xa6\x82\xe6\x9e\x9c\xe6\x98\xaf\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84\xe6\x96\x87\xe4\xbb\xb6\xe8\xa2\xab\xe6\x92\xa4\xe5\x9b\x9e\xe4\xba\x86\xef\xbc\x8c\xe9\x82\xa3\xe4\xb9\x88\xe5\xb0\xb1\xe5\xb0\x86\xe5\x88\x86\xe4\xba\xab\xe7\x9a\x84url\xe5\x8a\xa0\xe5\x9c\xa8msg_body\xe4\xb8\xad\xe5\x8f\x91\xe9\x80\x81\xe7\xbb\x99\xe6\x96\x87\xe4\xbb\xb6\xe5\x8a\xa9\xe6\x89\x8b\n            if old_msg[\'msg_type\'] == ""Sharing"":\n                msg_body += ""\\n\xe9\x93\xbe\xe6\x8e\xa5\xe6\x98\xaf:"" + old_msg.get(\'msg_share_url\')\n            print msg_body\n            # \xe5\xb0\x86\xe6\x92\xa4\xe5\x9b\x9e\xe6\xb6\x88\xe6\x81\xaf\xe5\x8f\x91\xe7\xbb\x99\xe6\x96\x87\xe4\xbb\xb6\xe5\x8a\xa9\xe6\x89\x8b\n            itchat.send_msg(msg_body, toUserName=\'filehelper\')\n            \n            # \xe6\x9c\x89\xe6\x96\x87\xe4\xbb\xb6\xe7\x9a\x84\xe8\xaf\x9d\xe4\xb9\x9f\xe8\xa6\x81\xe5\xb0\x86\xe6\x96\x87\xe4\xbb\xb6\xe5\x8f\x91\xe9\x80\x81\xe5\x9b\x9e\xe5\x8e\xbb\n            if old_msg[""msg_type""] == ""Picture"" \\\n                or old_msg[""msg_type""] == ""Recording"" \\\n                or old_msg[""msg_type""] == ""Video"" \\\n                or old_msg[""msg_type""] == ""Attachment"":\n                file = \'@fil@%s\' % (old_msg[\'msg_content\'])\n                itchat.send(msg=file, toUserName=\'filehelper\')\n                # \xe6\x8a\x8a\xe6\x9a\x82\xe6\x97\xb6\xe5\xad\x98\xe5\x82\xa8\xe7\x9a\x84\xe4\xbf\xa1\xe6\x81\xaf\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x88\xa0\xe9\x99\xa4\xe6\x8e\x89,\xe4\xb9\x9f\xe5\x8f\xaf\xe4\xbb\xa5\xe9\x80\x89\xe6\x8b\xa9\xe4\xb8\x8d\xe5\x88\xa0\xe9\x99\xa4\n                os.remove(old_msg[\'msg_content\'])\n            # \xe5\x88\xa0\xe9\x99\xa4\xe5\xad\x97\xe5\x85\xb8\xe6\x97\xa7\xe6\xb6\x88\xe6\x81\xaf\n    msg_information.pop(old_msg_id)\n\nitchat.auto_login(hotReload=True)\nitchat.run()\n'"
05 itchat获得微信好友信息以及表图对比/PythonItChat.py,0,"b'#coding=utf-8\nimport itchat\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nclass pythonWeChat(object):\n    def __init__(self):\n        itchat.login ()\n        self.friends = itchat.get_friends ( update=True )[0:]\n        plt.rcParams[\'font.sans-serif\'] = [\'SimHei\']\n        plt.rcParams[\'axes.unicode_minus\'] = False\n    \n    def save_info(self,NickName,Sex,Province,City,Signature):\n        list=[]\n        for i in self.friends:\n            dict={}\n            dict[""NickName""]=i[NickName]\n            if i[Sex]==1:\n                dict[""Sex""]=""\xe7\x94\xb7""\n            elif i[Sex]==2:\n                dict[""Sex""]=""\xe5\xa5\xb3""\n            else:\n                dict[""Sex""]=""\xe4\xb8\x8d\xe6\x98\x8e\xe6\x80\xa7\xe5\x88\xab""\n            dict[""Province""]=i[Province]\n            dict[""City""]=i[City]\n            dict[""Signature""]=i[Signature]\n            list.append(dict)\n        return list\n    def save_csv(self):\n        list=self.save_info(""NickName"",""Sex"",""Province"",""City"",""Signature"")\n        # print(list)\n        pf=pd.DataFrame(list)\n        print(pf)\n        try:\n            pf.to_csv(""wechat.csv"",index=True,encoding=""gb18030"")\n        except Exception as ret:\n            print(ret)\n        return pf\n    \n    def anysys(self,pf):\n        res_sex = pd.DataFrame(pf[""Sex""].value_counts())\n        res_province =  pd.DataFrame(pf[""Province""].value_counts()[:15])\n        index_list = []\n        for i in list(res_province.index):\n            if i=="""":\n                i=""\xe6\x9c\xaa\xe7\x9f\xa5""\n            index_list.append(i)\n        res_province.index=index_list\n        print(res_sex,res_province,type(res_province),type(res_sex))\n        return res_sex,res_province\n    \n    def get_chart(self,train_data, feature_list, x_feature, chart_type, width_bar=None):\n        """"""\xe6\x8a\x98\xe7\xba\xbf\xe5\x9b\xbe\xe3\x80\x81\xe6\x95\xa3\xe7\x82\xb9\xe5\x9b\xbe\xe3\x80\x81\xe6\x9d\xa1\xe5\xbd\xa2\xe5\x9b\xbe\xe7\xbb\x98\xe5\x88\xb6\xef\xbc\x9a\n            parameters:\n            train_data:DataFrame\xe7\xb1\xbb\xe5\x9e\x8b\n            x_feature\xef\xbc\x9a\xe7\x89\xb9\xe5\xbe\x81\xef\xbc\x8c\xe8\xa6\x81\xe7\xbb\x9f\xe8\xae\xa1\xe7\x9a\x84x\xe8\xbd\xb4\xe7\x9a\x84\xe6\x95\xb0\xe6\x8d\xae\xe7\xb1\xbb\xe5\x88\xab\xe5\x90\x8d\xe7\xa7\xb0\n            feature_list:\xe7\x89\xb9\xe5\xbe\x81\xe5\x88\x97\xe8\xa1\xa8\n            chart_type:\n            0:\xe6\x8a\x98\xe7\xba\xbf\xe5\x9b\xbe\n            1\xef\xbc\x9a\xe6\x95\xa3\xe7\x82\xb9\xe5\x9b\xbe\n            2\xef\xbc\x9a\xe6\x9d\xa1\xe5\xbd\xa2\xe5\x9b\xbe\n            width_bar:num\xe7\xb1\xbb\xe5\x9e\x8b\xef\xbc\x8c\xe6\x9d\xa1\xe5\xbd\xa2\xe5\x9b\xbe\xe6\x9d\xa1\xe7\x9a\x84\xe5\xae\xbd\xe5\xba\xa6\xef\xbc\x8c\xe5\xbf\x85\xe9\xa1\xbb\xe4\xbc\xa0\xe5\x80\xbc\xef\xbc\x8c\xe5\x90\xa6\xe5\x88\x99\xe5\xa4\x9a\xe7\xbb\x84\xe6\x95\xb0\xe6\x8d\xae\xe7\xbb\x9f\xe8\xae\xa1\xe6\x97\xb6\xe5\x9b\xbe\xe5\xbd\xa2\xe4\xbc\x9a\xe8\xa6\x86\xe7\x9b\x96\n            """"""\n        try:\n            if x_feature and len(feature_list) > 0:\n                for i in range(len(feature_list)):\n                    feature = feature_list[i]\n                    # \xe8\xae\xbe\xe7\xbd\xaex\xe8\xbd\xb4\xe5\x88\xbb\xe5\xba\xa6\n                    x_labels = list(train_data.index)\n                    x = range(len(x_labels))\n                    plt.xticks(x, x_labels)\n                    y = train_data[feature]\n                    if chart_type == 0:\n                        y = train_data[feature]\n                        plt.plot(x, y, label=x_feature)\n                    elif chart_type == 1:\n                        y = train_data[feature]\n                        plt.scatter(x, y, label=x_feature)\n                    elif chart_type == 2:\n                        x = [j + width_bar * i for j in x]\n                        plt.bar(x, y, width=width_bar, label=x_feature)\n                plt.legend()\n                plt.show()\n        except Exception as e:\n            print(e)\n\nif __name__ == \'__main__\':\n    pythonWeChat = pythonWeChat()\n    pwc = pythonWeChat.save_csv()\n    res_sex, res_province = pythonWeChat.anysys(pwc)\n    pythonWeChat.get_chart(res_sex, [""Sex""],""\xe6\x80\xa7\xe5\x88\xab"", 2, width_bar=0.2)\n    pythonWeChat.get_chart(res_province, [""Province""], ""\xe7\x9c\x81\xe4\xbb\xbd"", 2, width_bar=0.2)\n\n\n\n\n'"
06 python打印出微信被删除好友/PythonWeChat.py,0,"b'#coding:utf-8\n# \xe9\x80\x9a\xe8\xbf\x87\xe8\xaf\xa5\xe7\xa8\x8b\xe5\xba\x8f\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x8f\x91\xe7\x8e\xb0\xe8\xa2\xab\xe5\x88\xa0\xe9\x99\xa4\xe7\x9a\x84\xe5\xa5\xbd\xe5\x8f\x8b\nimport os\nimport urllib, urllib2\nimport re\nimport cookielib\nimport time\nimport xml.dom.minidom\nimport json\nimport sys\nimport math\n\nDEBUG = False\n\nMAX_GROUP_NUM = 35  # \xe6\xaf\x8f\xe7\xbb\x84\xe4\xba\xba\xe6\x95\xb0\n\nQRImagePath = os.getcwd() + \'/qrcode.jpg\'\n\ntip = 0\nuuid = \'\'\n\nbase_uri = \'\'\nredirect_uri = \'\'\n\nskey = \'\'\nwxsid = \'\'\nwxuin = \'\'\npass_ticket = \'\'\ndeviceId = \'e000000000000000\'\n\nBaseRequest = {}\n\nContactList = []\nMy = []\n\ndef getUUID():\n    global uuid\n    \n    url = \'https://login.weixin.qq.com/jslogin\'\n    params = {\n        \'appid\': \'wx782c26e4c19acffb\',\n        \'fun\': \'new\',\n        \'lang\': \'zh_CN\',\n        \'_\': int(time.time()),\n    }\n    \n    request = urllib2.Request(url=url, data=urllib.urlencode(params))\n    response = urllib2.urlopen(request)\n    data = response.read()\n\n    regx = r\'window.QRLogin.code = (\\d+); window.QRLogin.uuid = ""(\\S+?)""\'\n    pm = re.search(regx, data)\n    \n    code = pm.group(1)\n    uuid = pm.group(2)\n    \n    if code == \'200\':\n        return True\n    \n    return False\n\n\ndef showQRImage():\n    global tip\n    \n    url = \'https://login.weixin.qq.com/qrcode/\' + uuid\n    params = {\n        \'t\': \'webwx\',\n        \'_\': int(time.time()),\n    }\n    \n    request = urllib2.Request(url=url, data=urllib.urlencode(params))\n    response = urllib2.urlopen(request)\n\n    tip = 1\n    \n    f = open(QRImagePath, \'wb\')\n    f.write(response.read())\n    f.close()\n    \n    if sys.platform.find(\'darwin\') >= 0:\n        os.system(\'open %s\' % QRImagePath)\n    elif sys.platform.find(\'linux\') >= 0:\n        os.system(\'xdg-open %s\' % QRImagePath)\n    else:\n        os.system(\'call %s\' % QRImagePath)\n\nprint \'\xe8\xaf\xb7\xe4\xbd\xbf\xe7\x94\xa8\xe5\xbe\xae\xe4\xbf\xa1\xe6\x89\xab\xe6\x8f\x8f\xe4\xba\x8c\xe7\xbb\xb4\xe7\xa0\x81\xe4\xbb\xa5\xe7\x99\xbb\xe5\xbd\x95\'\n\ndef waitForLogin():\n    global tip, base_uri, redirect_uri\n    \n    url = \'https://login.weixin.qq.com/cgi-bin/mmwebwx-bin/login?tip=%s&uuid=%s&_=%s\' % (tip, uuid, int(time.time()))\n    \n    request = urllib2.Request(url=url)\n    response = urllib2.urlopen(request)\n    data = response.read()\n    \n    # window.code=500;\n    regx = r\'window.code=(\\d+);\'\n    pm = re.search(regx, data)\n    \n    code = pm.group(1)\n    \n    if code == \'201\':  # \xe5\xb7\xb2\xe6\x89\xab\xe6\x8f\x8f\n        print \'\xe6\x88\x90\xe5\x8a\x9f\xe6\x89\xab\xe6\x8f\x8f,\xe8\xaf\xb7\xe5\x9c\xa8\xe6\x89\x8b\xe6\x9c\xba\xe4\xb8\x8a\xe7\x82\xb9\xe5\x87\xbb\xe7\xa1\xae\xe8\xae\xa4\xe4\xbb\xa5\xe7\x99\xbb\xe5\xbd\x95\'\n        tip = 0\n    elif code == \'200\':  # \xe5\xb7\xb2\xe7\x99\xbb\xe5\xbd\x95\n        print \'\xe6\xad\xa3\xe5\x9c\xa8\xe7\x99\xbb\xe5\xbd\x95...\'\n        regx = r\'window.redirect_uri=""(\\S+?)"";\'\n        pm = re.search(regx, data)\n        redirect_uri = pm.group(1) + \'&fun=new\'\n        base_uri = redirect_uri[:redirect_uri.rfind(\'/\')]\n    elif code == \'408\':  # \xe8\xb6\x85\xe6\x97\xb6\n        pass\n    \n    return code\n\ndef login():\n    global skey, wxsid, wxuin, pass_ticket, BaseRequest\n    \n    request = urllib2.Request(url=redirect_uri)\n    response = urllib2.urlopen(request)\n    data = response.read()\n    doc = xml.dom.minidom.parseString(data)\n    root = doc.documentElement\n    \n    for node in root.childNodes:\n        if node.nodeName == \'skey\':\n            skey = node.childNodes[0].data\n        elif node.nodeName == \'wxsid\':\n            wxsid = node.childNodes[0].data\n        elif node.nodeName == \'wxuin\':\n            wxuin = node.childNodes[0].data\n        elif node.nodeName == \'pass_ticket\':\n            pass_ticket = node.childNodes[0].data\n\n    if skey == \'\' or wxsid == \'\' or wxuin == \'\' or pass_ticket == \'\':\n        return False\n        \n        BaseRequest = {\n            \'Uin\': int(wxuin),\n            \'Sid\': wxsid,\n            \'Skey\': skey,\n            \'DeviceID\': deviceId,\n    }\n    \n    return True\n\n\ndef webwxinit():\n    url = base_uri + \'/webwxinit?pass_ticket=%s&skey=%s&r=%s\' % (pass_ticket, skey, int(time.time()))\n    params = {\n        \'BaseRequest\': BaseRequest\n    }\n\n    request = urllib2.Request(url=url, data=json.dumps(params))\n    request.add_header(\'ContentType\', \'application/json; charset=UTF-8\')\n    response = urllib2.urlopen(request)\n    data = response.read()\n\nif DEBUG == True:\n    f = open(os.getcwd() + \'/webwxinit.json\', \'wb\')\n    f.write(data)\n    f.close()\n    \n    global ContactList, My\n    dic = json.loads(data)\n    ContactList = dic[\'ContactList\']\n    My = dic[\'User\']\n    \n    ErrMsg = dic[\'BaseResponse\'][\'ErrMsg\']\n    if len(ErrMsg) > 0:\n        print ErrMsg\n    \n    Ret = dic[\'BaseResponse\'][\'Ret\']\n    if Ret != 0:\n        return False\n    \n    return True\n\n\ndef webwxgetcontact():\n    url = base_uri + \'/webwxgetcontact?pass_ticket=%s&skey=%s&r=%s\' % (pass_ticket, skey, int(time.time()))\n    \n    request = urllib2.Request(url=url)\n    request.add_header(\'ContentType\', \'application/json; charset=UTF-8\')\n    response = urllib2.urlopen(request)\n    data = response.read()\n    \n    if DEBUG == True:\n        f = open(os.getcwd() + \'/webwxgetcontact.json\', \'wb\')\n        f.write(data)\n        f.close()\n\n    dic = json.loads(data)\n    MemberList = dic[\'MemberList\']\n\n# \xe5\x80\x92\xe5\xba\x8f\xe9\x81\x8d\xe5\x8e\x86,\xe4\xb8\x8d\xe7\x84\xb6\xe5\x88\xa0\xe9\x99\xa4\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\xe5\x87\xba\xe9\x97\xae\xe9\xa2\x98..\nSpecialUsers = [\'newsapp\', \'fmessage\', \'filehelper\', \'weibo\', \'qqmail\', \'fmessage\', \'tmessage\', \'qmessage\',\n                \'qqsync\', \'floatbottle\', \'lbsapp\', \'shakeapp\', \'medianote\', \'qqfriend\', \'readerapp\', \'blogapp\',\n                \'facebookapp\', \'masssendapp\', \'meishiapp\', \'feedsapp\', \'voip\', \'blogappweixin\', \'weixin\',\n                \'brandsessionholder\', \'weixinreminder\', \'wxid_novlwrv3lqwv11\', \'gh_22b87fa7cb3c\',\n                \'officialaccounts\', \'notification_messages\', \'wxid_novlwrv3lqwv11\', \'gh_22b87fa7cb3c\', \'wxitil\',\n                \'userexperience_alarm\', \'notification_messages\']\n    for i in xrange(len(MemberList) - 1, -1, -1):\n        Member = MemberList[i]\n        # \xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7/\xe6\x9c\x8d\xe5\x8a\xa1\xe5\x8f\xb7\n        if Member[\'VerifyFlag\'] & 8 != 0:\n            MemberList.remove(Member)\n        # \xe7\x89\xb9\xe6\xae\x8a\xe8\xb4\xa6\xe5\x8f\xb7\n        elif Member[\'UserName\'] in SpecialUsers:\n            MemberList.remove(Member)\n        # \xe7\xbe\xa4\xe8\x81\x8a\n        elif Member[\'UserName\'].find(\'@@\') != -1:\n            MemberList.remove(Member)\n        # \xe8\x87\xaa\xe5\xb7\xb1\n        elif Member[\'UserName\'] == My[\'UserName\']:\n            MemberList.remove(Member)\n\n     return MemberList\n\n\ndef createChatroom(UserNames):\n    MemberList = []\n    for UserName in UserNames:\n        MemberList.append({\'UserName\': UserName})\n    \n    url = base_uri + \'/webwxcreatechatroom?pass_ticket=%s&r=%s\' % (pass_ticket, int(time.time()))\n    params = {\n        \'BaseRequest\': BaseRequest,\n        \'MemberCount\': len(MemberList),\n        \'MemberList\': MemberList,\n        \'Topic\': \'\',\n    }\n    \n    request = urllib2.Request(url=url, data=json.dumps(params))\n    request.add_header(\'ContentType\', \'application/json; charset=UTF-8\')\n    response = urllib2.urlopen(request)\n    data = response.read()\n\n    dic = json.loads(data)\n    ChatRoomName = dic[\'ChatRoomName\']\n    MemberList = dic[\'MemberList\']\n    DeletedList = []\nfor Member in MemberList:\n    # \xe8\xa2\xab\xe5\xaf\xb9\xe6\x96\xb9\xe5\x88\xa0\xe9\x99\xa4\xe4\xba\x86\n    if Member[\'MemberStatus\'] == 4:\n        DeletedList.append(Member[\'UserName\'])\n    \n    ErrMsg = dic[\'BaseResponse\'][\'ErrMsg\']\n    if len(ErrMsg) > 0:\n        print ErrMsg\n    \n    return (ChatRoomName, DeletedList)\n\n\ndef deleteMember(ChatRoomName, UserNames):\n    url = base_uri + \'/webwxupdatechatroom?fun=delmember&pass_ticket=%s\' % (pass_ticket)\n    params = {\n        \'BaseRequest\': BaseRequest,\n        \'ChatRoomName\': ChatRoomName,\n        \'DelMemberList\': \',\'.join(UserNames),\n    }\n    \n    request = urllib2.Request(url=url, data=json.dumps(params))\n    request.add_header(\'ContentType\', \'application/json; charset=UTF-8\')\n    response = urllib2.urlopen(request)\n    data = response.read()\n    dic = json.loads(data)\n    ErrMsg = dic[\'BaseResponse\'][\'ErrMsg\']\n    if len(ErrMsg) > 0:\n        print ErrMsg\n    \n    Ret = dic[\'BaseResponse\'][\'Ret\']\n    if Ret != 0:\n        return False\n    \n    return True\n\n\ndef addMember(ChatRoomName, UserNames):\n    url = base_uri + \'/webwxupdatechatroom?fun=addmember&pass_ticket=%s\' % (pass_ticket)\n    params = {\n        \'BaseRequest\': BaseRequest,\n        \'ChatRoomName\': ChatRoomName,\n        \'AddMemberList\': \',\'.join(UserNames),\n    }\n    \n    request = urllib2.Request(url=url, data=json.dumps(params))\n    request.add_header(\'ContentType\', \'application/json; charset=UTF-8\')\n    response = urllib2.urlopen(request)\n    data = response.read()\n    dic = json.loads(data)\n    MemberList = dic[\'MemberList\']\n    DeletedList = []\n    for Member in MemberList:\n        # \xe8\xa2\xab\xe5\xaf\xb9\xe6\x96\xb9\xe5\x88\xa0\xe9\x99\xa4\xe4\xba\x86\n        if Member[\'MemberStatus\'] == 4:\n            DeletedList.append(Member[\'UserName\'])\n\n    ErrMsg = dic[\'BaseResponse\'][\'ErrMsg\']\nif len(ErrMsg) > 0:\n    print ErrMsg\n    \n    return DeletedList\n\n\ndef main():\n    opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cookielib.CookieJar()))\n    urllib2.install_opener(opener)\n    \n    if getUUID() == False:\n        print \'\xe8\x8e\xb7\xe5\x8f\x96uuid\xe5\xa4\xb1\xe8\xb4\xa5\'\n        return\n\n    showQRImage()\n    time.sleep(1)\n\nwhile waitForLogin() != \'200\':\n    pass\n    \n    os.remove(QRImagePath)\n    \n    if login() == False:\n        print \'\xe7\x99\xbb\xe5\xbd\x95\xe5\xa4\xb1\xe8\xb4\xa5\'\n        return\n    \n    if webwxinit() == False:\n        print \'\xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe5\xa4\xb1\xe8\xb4\xa5\'\n        return\n\n    MemberList = webwxgetcontact()\n\n    MemberCount = len(MemberList)\nprint \'\xe9\x80\x9a\xe8\xae\xaf\xe5\xbd\x95\xe5\x85\xb1%s\xe4\xbd\x8d\xe5\xa5\xbd\xe5\x8f\x8b\' % MemberCount\n    \n    ChatRoomName = \'\'\n    result = []\n    for i in xrange(0, int(math.ceil(MemberCount / float(MAX_GROUP_NUM)))):\n        UserNames = []\n        NickNames = []\n        DeletedList = \'\'\n        for j in xrange(0, MAX_GROUP_NUM):\n            if i * MAX_GROUP_NUM + j >= MemberCount:\n                break\n            \n            Member = MemberList[i * MAX_GROUP_NUM + j]\n            UserNames.append(Member[\'UserName\'])\n            NickNames.append(Member[\'NickName\'].encode(\'utf-8\'))\n    \n        print \'\xe7\xac\xac%s\xe7\xbb\x84...\' % (i + 1)\n        print \', \'.join(NickNames)\n        print \'\xe5\x9b\x9e\xe8\xbd\xa6\xe9\x94\xae\xe7\xbb\xa7\xe7\xbb\xad...\'\n        raw_input()\n        \n        # \xe6\x96\xb0\xe5\xbb\xba\xe7\xbe\xa4\xe7\xbb\x84/\xe6\xb7\xbb\xe5\x8a\xa0\xe6\x88\x90\xe5\x91\x98\n        if ChatRoomName == \'\':\n            (ChatRoomName, DeletedList) = createChatroom(UserNames)\n    else:\n        DeletedList = addMember(ChatRoomName, UserNames)\n        \n        DeletedCount = len(DeletedList)\n        if DeletedCount > 0:\n            result += DeletedList\n        \n        print \'\xe6\x89\xbe\xe5\x88\xb0%s\xe4\xb8\xaa\xe8\xa2\xab\xe5\x88\xa0\xe5\xa5\xbd\xe5\x8f\x8b\' % DeletedCount\n        # \xe5\x88\xa0\xe9\x99\xa4\xe6\x88\x90\xe5\x91\x98\n        deleteMember(ChatRoomName, UserNames)\n    \n    resultNames = []\n    for Member in MemberList:\n        if Member[\'UserName\'] in result:\n            NickName = Member[\'NickName\']\n            if Member[\'RemarkName\'] != \'\':\n                NickName += \'(%s)\' % Member[\'RemarkName\']\n            resultNames.append(NickName.encode(\'utf-8\'))\n\n        print \'---------- \xe8\xa2\xab\xe5\x88\xa0\xe9\x99\xa4\xe7\x9a\x84\xe5\xa5\xbd\xe5\x8f\x8b\xe5\x88\x97\xe8\xa1\xa8 ----------\'\n        print \'\\n\'.join(resultNames)\n        print \'-----------------------------------\'\n\n# windows\xe4\xb8\x8b\xe7\xbc\x96\xe7\xa0\x81\xe9\x97\xae\xe9\xa2\x98\xe4\xbf\xae\xe5\xa4\x8d\nclass UnicodeStreamFilter:\n    def __init__(self, target):\n        self.target = target\n        self.encoding = \'utf-8\'\n        self.errors = \'replace\'\n        self.encode_to = self.target.encoding\n    \n    def write(self, s):\n        if type(s) == str:\n            s = s.decode(\'utf-8\')\n        s = s.encode(self.encode_to, self.errors).decode(self.encode_to)\n        self.target.write(s)\n\n\nif sys.stdout.encoding == \'cp936\':\n    sys.stdout = UnicodeStreamFilter(sys.stdout)\n\nif __name__ == \'__main__\':\n    raw_input(\'\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe5\x9b\x9e\xe8\xbd\xa6\xe9\x94\xae\xe7\xbb\xa7\xe7\xbb\xad\xe6\x9c\xac\xe7\xa8\x8b\xe5\xba\x8f:\')\n    main()\n    raw_input(\'\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe5\x9b\x9e\xe8\xbd\xa6\xe9\x94\xae\xe7\xbb\x93\xe6\x9d\x9f\xe6\x9c\xac\xe7\xa8\x8b\xe5\xba\x8f:\')\n'"
07 itchat自动回复好友/PythonWeChat.py,0,"b'#coding=utf8\nimport itchat\n\n# \xe8\x87\xaa\xe5\x8a\xa8\xe5\x9b\x9e\xe5\xa4\x8d\n# \xe5\xb0\x81\xe8\xa3\x85\xe5\xa5\xbd\xe7\x9a\x84\xe8\xa3\x85\xe9\xa5\xb0\xe5\x99\xa8\xef\xbc\x8c\xe5\xbd\x93\xe6\x8e\xa5\xe6\x94\xb6\xe5\x88\xb0\xe7\x9a\x84\xe6\xb6\x88\xe6\x81\xaf\xe6\x98\xafText\xef\xbc\x8c\xe5\x8d\xb3\xe6\x96\x87\xe5\xad\x97\xe6\xb6\x88\xe6\x81\xaf\n@itchat.msg_register(\'Text\')\ndef text_reply(msg):\n    # \xe5\xbd\x93\xe6\xb6\x88\xe6\x81\xaf\xe4\xb8\x8d\xe6\x98\xaf\xe7\x94\xb1\xe8\x87\xaa\xe5\xb7\xb1\xe5\x8f\x91\xe5\x87\xba\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\n    if not msg[\'FromUserName\'] == myUserName:\n        # \xe5\x8f\x91\xe9\x80\x81\xe4\xb8\x80\xe6\x9d\xa1\xe6\x8f\x90\xe7\xa4\xba\xe7\xbb\x99\xe6\x96\x87\xe4\xbb\xb6\xe5\x8a\xa9\xe6\x89\x8b\n        itchat.send_msg(u""[%s]\xe6\x94\xb6\xe5\x88\xb0\xe5\xa5\xbd\xe5\x8f\x8b@%s \xe7\x9a\x84\xe4\xbf\xa1\xe6\x81\xaf\xef\xbc\x9a%s\\n"" %\n                        (time.strftime(""%Y-%m-%d %H:%M:%S"", time.localtime(msg[\'CreateTime\'])),\n                         msg[\'User\'][\'NickName\'],\n                         msg[\'Text\']), \'filehelper\')\n                         # \xe5\x9b\x9e\xe5\xa4\x8d\xe7\xbb\x99\xe5\xa5\xbd\xe5\x8f\x8b\n        return u\'[\xe8\x87\xaa\xe5\x8a\xa8\xe5\x9b\x9e\xe5\xa4\x8d]\xe6\x82\xa8\xe5\xa5\xbd\xef\xbc\x8c\xe6\x88\x91\xe7\x8e\xb0\xe5\x9c\xa8\xe6\x9c\x89\xe4\xba\x8b\xe4\xb8\x8d\xe5\x9c\xa8\xef\xbc\x8c\xe4\xb8\x80\xe4\xbc\x9a\xe5\x86\x8d\xe5\x92\x8c\xe6\x82\xa8\xe8\x81\x94\xe7\xb3\xbb\xe3\x80\x82\\n\xe5\xb7\xb2\xe7\xbb\x8f\xe6\x94\xb6\xe5\x88\xb0\xe6\x82\xa8\xe7\x9a\x84\xe7\x9a\x84\xe4\xbf\xa1\xe6\x81\xaf\xef\xbc\x9a%s\\n\' % (msg[\'Text\'])\n\nif __name__ == \'__main__\':\n    itchat.auto_login()\n    \n    # \xe8\x8e\xb7\xe5\x8f\x96\xe8\x87\xaa\xe5\xb7\xb1\xe7\x9a\x84UserName\n    myUserName = itchat.get_friends(update=True)[0][""UserName""]\n    itchat.run()\n'"
08 itchat微信好友个性签名词云图/PythonWeChat.py,1,"b'# coding:utf-8\nimport itchat\nimport re\n# jieba\xe5\x88\x86\xe8\xaf\x8d\nimport jieba\n# wordcloud\xe8\xaf\x8d\xe4\xba\x91\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud, ImageColorGenerator\nimport os\nimport numpy as np\nimport PIL.Image as Image\n\nitchat.login()\nfriends = itchat.get_friends(update=True)[0:]\ntList = []\nfor i in friends:\n    signature = i[""Signature""].replace("" "", """").replace(""span"", """").replace(""class"", """").replace(""emoji"", """")\n    rep = re.compile(""1f\\d.+"")\n    signature = rep.sub("""", signature)\n    tList.append(signature)\n\n# \xe6\x8b\xbc\xe6\x8e\xa5\xe5\xad\x97\xe7\xac\xa6\xe4\xb8\xb2\ntext = """".join(tList)\n\nwordlist_jieba = jieba.cut(text, cut_all=True)\nwl_space_split = "" "".join(wordlist_jieba)\n\nd = os.path.dirname(__file__)\n# \xe6\x9b\xb4\xe6\x94\xb9\xe7\x9b\xae\xe5\xbd\x95\xe4\xb8\x8bWordcloud\xe7\x94\x9f\xe6\x88\x90\xe5\x9b\xbe\xe7\x89\x87\xef\xbc\x8c\xe5\xa6\x82\xef\xbc\x9axiaohuangren.jpg\nalice_coloring = np.array(Image.open(os.path.join(d, ""xiaohuangren.jpg"")))\n# win\xe7\xb3\xbb\xe7\xbb\x9f\xe9\x9c\x80\xe8\xa6\x81\xe6\x9b\xb4\xe6\x94\xb9font\xe8\xb7\xaf\xe5\xbe\x84\xef\xbc\x8c\xe5\xa6\x82\xef\xbc\x9aC:\\Windows\\Fonts\\msyhbd.ttc\nmy_wordcloud = WordCloud(background_color=""white"", max_words=2000, mask=alice_coloring,\n                         max_font_size=40, random_state=42,\n                         font_path=\'/Users/sebastian/Library/Fonts/Arial Unicode.ttf\')\\\n    .generate(wl_space_split)\n\nimage_colors = ImageColorGenerator(alice_coloring)\nplt.imshow(my_wordcloud.recolor(color_func=image_colors))\nplt.imshow(my_wordcloud)\nplt.axis(""off"")\nplt.show()\n\n# \xe4\xbf\x9d\xe5\xad\x98\xe5\x9b\xbe\xe7\x89\x87 \xe5\xb9\xb6\xe5\x8f\x91\xe9\x80\x81\xe5\x88\xb0\xe6\x89\x8b\xe6\x9c\xba\nmy_wordcloud.to_file(os.path.join(d, ""wechat_cloud.png""))\nitchat.send_image(""wechat_cloud.png"", \'filehelper\')\n'"
09 itchat微信好友性别比例/PythonWeChat.py,0,"b'# coding=utf-8\nimport itchat\n# \xe4\xbd\xbf\xe7\x94\xa8echarts\nfrom echarts import Echart, Legend, Pie\n\n# itchat\xe5\x85\x88\xe7\x99\xbb\xe5\xbd\x95\nitchat.login()\n# \xe8\x8e\xb7\xe5\x8f\x96\xe5\xa5\xbd\xe5\x8f\x8b\xe5\x88\x97\xe8\xa1\xa8\xef\xbc\x8c\xe5\x88\x97\xe8\xa1\xa8\xe9\x87\x8c\xe7\xac\xac\xe4\xb8\x80\xe4\xbd\x8d\xe6\x98\xaf\xe8\x87\xaa\xe5\xb7\xb1\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe4\xbb\x8e""\xe8\x87\xaa\xe5\xb7\xb1""\xe4\xb9\x8b\xe5\x90\x8e\xe5\xbc\x80\xe5\xa7\x8b\xe8\xae\xa1\xe7\xae\x97\nfriends = itchat.get_friends(update=True)[0:]\n\n# male \xe7\x94\xb7 1\n# female \xe5\xa5\xb3 2\n# other \xe5\x85\xb6\xe4\xbb\x96\nmale = female = other = 0\n\nfor i in friends[1:]:\n    sex = i[""Sex""]\n    if sex == 1:\n        male += 1\n    elif sex == 2:\n        female += 1\n    else:\n        other += 1\n\ntotal = len(friends[1:])\n\n# \xe6\x89\x93\xe5\x8d\xb0\xe7\xbb\x93\xe6\x9e\x9c\nprint u""\xe7\x94\xb7\xe6\x80\xa7\xe5\xa5\xbd\xe5\x8f\x8b\xef\xbc\x9a%.2f%%"" % (float(male) / total * 100)\nprint u""\xe5\xa5\xb3\xe6\x80\xa7\xe5\xa5\xbd\xe5\x8f\x8b\xef\xbc\x9a%.2f%%"" % (float(female) / total * 100)\nprint u""\xe6\x9c\xaa\xe5\xa1\xab\xe6\x80\xa7\xe5\x88\xab\xef\xbc\x9a%.2f%%"" % (float(other) / total * 100)\nchart = Echart(u\'%s\xe7\x9a\x84\xe5\xbe\xae\xe4\xbf\xa1\xe5\xa5\xbd\xe5\x8f\x8b\xe6\x80\xa7\xe5\x88\xab\xe6\xaf\x94\xe4\xbe\x8b\' % (friends[0][\'NickName\']), \'from WeChat\')\nchart.use(Pie(\'WeChat\',\n              [{\'value\': male, \'name\': u\'\xe7\x94\xb7\xe6\x80\xa7 %.2f%%\' % (float(male) / total * 100)},\n               {\'value\': female, \'name\': u\'\xe5\xa5\xb3\xe6\x80\xa7 %.2f%%\' % (float(female) / total * 100)},\n               {\'value\': other, \'name\': u\'\xe5\x85\xb6\xe4\xbb\x96 %.2f%%\' % (float(other) / total * 100)}],\n              radius=[""50%"", ""70%""]))\nchart.use(Legend([""male"", ""female"", ""other""]))\ndel chart.json[""xAxis""]\ndel chart.json[""yAxis""]\nchart.plot()\n'"
10 itchat微信群或者好友撤回消息/PythonWeChat.py,0,"b""import sys\nimport os, re, shutil, time, collections, json\n\nfrom html.parser import HTMLParser\nfrom xml.etree import ElementTree as ETree\n\nimport itchat\nfrom itchat.content import *\n\nmsg_store = collections.OrderedDict()\ntimeout = 600\nsending_type = {'Picture': 'img', 'Video': 'vid'}\ndata_path = 'data'\nnickname = ''\nbot = None\n\nif __name__ == '__main__':\n    if not os.path.exists(data_path):\n        os.mkdir(data_path)\n    # if the QR code doesn't show correctly, you can try to change the value\n    # of enableCdmQR to 1 or -1 or -2. It nothing works, you can change it to\n    # enableCmdQR=True and a picture will show up.\n    bot = itchat.new_instance()\n    bot.auto_login(hotReload=True, enableCmdQR=2)\n    nickname = bot.loginInfo['User']['NickName']\n\ndef clear_timeouted_message():\n    now = time.time()\n    count = 0\n    for k, v in list(msg_store.items()):\n        if now - v['ReceivedTime'] > timeout:\n            count += 1\n        else:\n            break\n    for i in range(count):\n        item = msg_store.popitem(last=False)\n\ndef get_sender_receiver(msg):\n    sender = nickname\n    receiver = nickname\n    if msg['FromUserName'][0:2] == '@@': # group chat\n        sender = msg['ActualNickName']\n        m = bot.search_chatrooms(userName=msg['FromUserName'])\n        if m is not None:\n            receiver = m['NickName']\n    elif msg['ToUserName'][0:2] == '@@': # group chat by myself\n        if 'ActualNickName' in msg:\n            sender = msg['ActualNickName']\n        else:\n            m = bot.search_friends(userName=msg['FromUserName'])\n            if m is not None:\n                sender = m['NickName']\n        m = bot.search_chatrooms(userName=msg['ToUserName'])\n        if m is not None:\n            receiver = m['NickName']\n    else: # personal chat\n        m = bot.search_friends(userName=msg['FromUserName'])\n        if m is not None:\n            sender = m['NickName']\n        m = bot.search_friends(userName=msg['ToUserName'])\n        if m is not None:\n            receiver = m['NickName']\n    return HTMLParser().unescape(sender), HTMLParser().unescape(receiver)\n\ndef print_msg(msg):\n    msg_str = ' '.join(msg)\n    print(msg_str)\n    return msg_str\n\ndef get_whole_msg(msg, download=False):\n    sender, receiver = get_sender_receiver(msg)\n    if len(msg['FileName']) > 0 and len(msg['Url']) == 0:\n        if download: # download the file into data_path directory\n            fn = os.path.join(data_path, msg['FileName'])\n            msg['Text'](fn)\n            if os.path.getsize(fn) == 0:\n                return []\n            c = '@%s@%s' % (sending_type.get(msg['Type'], 'fil'), fn)\n        else:\n            c = '@%s@%s' % (sending_type.get(msg['Type'], 'fil'), msg['FileName'])\n        return ['[%s]->[%s]:' % (sender, receiver), c]\n    c = msg['Text']\n    if len(msg['Url']) > 0:\n        try: # handle map label\n            content_tree = ETree.fromstring(msg['OriContent'])\n            if content_tree is not None:\n                map_label = content_tree.find('location')\n                if map_label is not None:\n                    c += ' ' + map_label.attrib['poiname']\n                    c += ' ' + map_label.attrib['label']\n        except:\n            pass\n        url = HTMLParser().unescape(msg['Url'])\n        c += ' ' + url\n    return ['[%s]->[%s]: %s' % (sender, receiver, c)]\n\n@bot.msg_register([TEXT, PICTURE, MAP, CARD, SHARING, RECORDING,\n    ATTACHMENT, VIDEO, FRIENDS], isFriendChat=True, isGroupChat=True)\ndef normal_msg(msg):\n    print_msg(get_whole_msg(msg))\n    now = time.time()\n    msg['ReceivedTime'] = now\n    msg_id = msg['MsgId']\n    msg_store[msg_id] = msg\n    clear_timeouted_message()\n\n@bot.msg_register([NOTE], isFriendChat=True, isGroupChat=True)\ndef note_msg(msg):\n    print_msg(get_whole_msg(msg))\n    content = HTMLParser().unescape(msg['Content'])\n    try:\n        content_tree = ETree.fromstring(content)\n    except Exception:\n        # invent/remove to chatroom\n        return\n    if content_tree is None:\n        return\n    revoked = content_tree.find('revokemsg')\n    if revoked is None:\n        return\n    old_msg_id = revoked.find('msgid').text\n    old_msg = msg_store.get(old_msg_id)\n    if old_msg is None:\n        return\n    msg_send = get_whole_msg(old_msg, download=True)\n    for m in msg_send:\n        bot.send(m, toUserName='filehelper')\n    clear_timeouted_message()\n\nif __name__ == '__main__':\n    bot.run()"""
11 itchat微信群或好友之间转发消息/PythonWeChat.py,0,"b""\nimport sys\nreload(sys)\nsys.setdefaultencoding('UTF8')\n\nimport os, re, shutil, time, collections, json\nimport requests\nfrom HTMLParser import HTMLParser\nfrom xml.etree import ElementTree as ETree\nimport hashlib\n\nimport itchat\nfrom itchat.content import *\n\nsending_type = {'Picture': 'img', 'Video': 'vid'}\ndata_path = 'data'\ngroup_uin = {u'\xe6\x8a\x80\xe6\x9c\xaf\xe7\xbe\xa41': '42235582@chatroom',\n    u'\xe6\x8a\x80\xe6\x9c\xaf\xe7\xbe\xa42': '2424504406@chatroom',\n        u'\xe6\x8a\x80\xe6\x9c\xaf\xe7\xbe\xa43': '6203978346@chatroom'}\npublishers = {u'\xe6\x8a\x80\xe6\x9c\xaf\xe7\xbe\xa41': u'[\xe9\x98\xb4\xe9\x99\xa9]',\n    u'\xe6\x8a\x80\xe6\x9c\xaf\xe7\xbe\xa42': u'[\xe8\x8f\x9c\xe5\x88\x80]',\n        u'\xe6\x8a\x80\xe6\x9c\xaf\xe7\xbe\xa43': u'[\xe6\x9c\x88\xe4\xba\xae]'}\nsubscribers = [u'\xe6\x8a\x80\xe6\x9c\xaf\xe7\xbe\xa41', u'\xe6\x8a\x80\xe6\x9c\xaf\xe7\xbe\xa42', u'\xe6\x8a\x80\xe6\x9c\xaf\xe7\xbe\xa43']\nnickname = ''\nbot = None\nas_chat_bot = True\n\nif __name__ == '__main__':\n    if not os.path.exists(data_path):\n        os.mkdir(data_path)\n    # if the QR code doesn't show correctly, you can try to change the value\n    # of enableCdmQR to 1 or -1 or -2. It nothing works, you can change it to\n    # enableCmdQR=True and a picture will show up.\n    bot = itchat.new_instance()\n    bot.auto_login(hotReload=True, enableCmdQR=2)\n    nickname = bot.loginInfo['User']['NickName']\n\n# tuling chat bot\ndef talks_robot(info):\n    api_url = 'http://www.tuling123.com/openapi/api'\n    apikey = ''\n    data = {'key': apikey, 'info': info.lower()}\n    req = requests.post(api_url, data=data, timeout=10).text\n    replys = json.loads(req)['text']\n    return replys\n\ndef get_sender_receiver(msg):\n    sender = nickname\n    receiver = nickname\n    if msg['FromUserName'][0:2] == '@@': # group chat\n        sender = msg['ActualNickName']\n        m = bot.search_chatrooms(userName=msg['FromUserName'])\n        if m is not None:\n            receiver = m['NickName']\n    elif msg['ToUserName'][0:2] == '@@': # group chat by myself\n        if 'ActualNickName' in msg:\n            sender = msg['ActualNickName']\n        else:\n            m = bot.search_friends(userName=msg['FromUserName'])\n            if m is not None:\n                sender = m['NickName']\n        m = bot.search_chatrooms(userName=msg['ToUserName'])\n        if m is not None:\n            receiver = m['NickName']\n    else: # personal chat\n        m = bot.search_friends(userName=msg['FromUserName'])\n        if m is not None:\n            sender = m['NickName']\n        m = bot.search_friends(userName=msg['ToUserName'])\n        if m is not None:\n            receiver = m['NickName']\n    return HTMLParser().unescape(sender), HTMLParser().unescape(receiver)\n\ndef print_msg(msg):\n    msg_str = ' '.join(msg)\n    print msg_str\n    return msg_str\n\ndef get_whole_msg(msg, prefix, download=False):\n    if len(msg['FileName']) > 0 and len(msg['Url']) == 0:\n        if download: # download the file into data_path directory\n            fn = os.path.join(data_path, msg['FileName'])\n            msg['Text'](fn)\n            if os.path.getsize(fn) == 0:\n                return []\n            c = '@%s@%s' % (sending_type.get(msg['Type'], 'fil'), fn)\n        else:\n            c = '@%s@%s' % (sending_type.get(msg['Type'], 'fil'), msg['FileName'])\n        return ['%s:' % (prefix), c]\n    c = msg['Text']\n    if len(msg['Url']) > 0:\n        if len(msg['OriContent']) > 0:\n            try: # handle map label\n                content_tree = ETree.fromstring(msg['OriContent'])\n                if content_tree is not None:\n                    map_label = content_tree.find('location')\n                    if map_label is not None:\n                        c += ' ' + map_label.attrib['poiname']\n                        c += ' ' + map_label.attrib['label']\n            except:\n                pass\n        url = HTMLParser().unescape(msg['Url'])\n        c += ' ' + url\n    return ['%s: %s' % (prefix, c)]\n\n@bot.msg_register([TEXT], isFriendChat=True, isGroupChat=False)\ndef personal_msg(msg):\n    global as_chat_bot\n    text = msg['Text'].strip()\n    if text == u'\xe9\x97\xad\xe5\x98\xb4':\n        as_chat_bot = False\n    if text == u'\xe5\xbc\xa0\xe5\x98\xb4\xe5\x90\x83\xe8\x8d\xaf':\n        as_chat_bot = True\n    return talks_robot(text)\n\n@bot.msg_register([FRIENDS])\ndef accept_friend(msg):\n    bot.add_friend(msg['RecommendInfo']['UserName'], 3)\n\n@bot.msg_register([TEXT, PICTURE, MAP, SHARING, RECORDING, ATTACHMENT, VIDEO],\n                  isFriendChat=False, isGroupChat=True)\ndef group_msg(msg):\n    # chat bot functionality\n    global as_chat_bot\n    if 'IsAt' in msg and msg['IsAt'] == True and \\\n        msg['Type'] == 'Text' and \\\n        msg['ToUserName'][0:2] != '@@' and \\\n        msg['Text'].find(u'@' + nickname) >= 0:\n        text = msg['Text'].replace(u'@' + nickname, '').strip()\n        if text == u'shit':\n            as_chat_bot = False\n            return\n        if as_chat_bot:\n            info = talks_robot(text)\n            if info.find('No Know') >= 0:\n                return\n            if info.find('No Can') >= 0:\n                return\n            if info.find('Sorry') >= 0:\n                return\n            return info\n        return\n    # forwarding functionality\n    group = msg['FromUserName']\n    if msg['ToUserName'][0:2] == '@@': # message sent by myself\n        group = msg['ToUserName']\nsender, receiver = get_sender_receiver(msg)\nif sender == '':\n    sender = nickname\n    # check if the message is from the publisher groups\n    if receiver not in publishers: # if not in the publishers, do nothing\n        return\n# turn on the chat bot if this magic happens\nif msg['Type'] == 'Text' and \\\n    hashlib.sha256(msg['Text']).hexdigest()[-2:] == '23':\n        as_chat_bot = True\n# process message and send it to all the subscribed groups\nprefix = '%s[%s]' % (publishers[receiver], sender)\nmsg_send = get_whole_msg(msg, prefix=prefix, download=True)\nif len(msg_send) == 0:\n    return\n    print_msg(msg_send)\n    for tosend in subscribers:\n        room = bot.search_chatrooms(name=tosend)\n        for r in room:\n            if r['UserName'] == group: # don't send back to the source\n                continue\n            if r['NickName'] != tosend: # check group name exact match\n                continue\n            for m in msg_send: # iterate messages (for images, videos, and files)\n                bot.send(m, toUserName=r['UserName'])\n\nif __name__ == '__main__':\n    bot.run()\n"""
