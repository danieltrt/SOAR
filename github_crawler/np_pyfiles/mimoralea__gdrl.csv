file_path,api_count,code
docker/jupyter_notebook_config.py,0,"b""# Copyright (c) Jupyter Development Team.\n# Distributed under the terms of the Modified BSD License.\n\nfrom jupyter_core.paths import jupyter_data_dir\nimport subprocess\nimport os\nimport errno\nimport stat\n\nc = get_config()\nc.NotebookApp.ip = '0.0.0.0'\nc.NotebookApp.port = 8888\nc.NotebookApp.open_browser = False\nc.NotebookApp.password = 'sha1:ad3f500ecc93:b573bc1c5450b57ecbc0795b90371515d4dbb281'\n\n# https://github.com/jupyter/notebook/issues/3130\nc.FileContentsManager.delete_to_trash = False\n\n# Generate a self-signed certificate\nif 'GEN_CERT' in os.environ:\n    dir_name = jupyter_data_dir()\n    pem_file = os.path.join(dir_name, 'notebook.pem')\n    try:\n        os.makedirs(dir_name)\n    except OSError as exc:  # Python >2.5\n        if exc.errno == errno.EEXIST and os.path.isdir(dir_name):\n            pass\n        else:\n            raise\n    # Generate a certificate if one doesn't exist on disk\n    subprocess.check_call(['openssl', 'req', '-new',\n                           '-newkey', 'rsa:2048',\n                           '-days', '365',\n                           '-nodes', '-x509',\n                           '-subj', '/C=XX/ST=XX/L=XX/O=generated/CN=generated',\n                           '-keyout', pem_file,\n                           '-out', pem_file])\n    # Restrict access to the file\n    os.chmod(pem_file, stat.S_IRUSR | stat.S_IWUSR)\n    c.NotebookApp.certfile = pem_file\n"""
