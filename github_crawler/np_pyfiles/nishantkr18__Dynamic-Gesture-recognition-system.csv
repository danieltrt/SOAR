file_path,api_count,code
Brahmastra.py,1,"b'print(\'\'\'\n#Created By: nishantKr18\n##################################\n#     #  #            #   ##      \n# #   #  #            #  #  #     \n#  #  #  # ##  # ##   #   ##      \n#   # #  ##    ##     #  #  #     \n#    ##  # ##  #      #   ##      \n################################## \n\'\'\')\n\nimport cv2\nimport numpy as np\nfrom segmenter import detectHand , reset\nfrom keras.models import load_model\nimport vlc\nimport serial\nfrom time import sleep\nfrom pynput.mouse import Button, Controller\nm = Controller()\n\nplayer = vlc.MediaPlayer(\'AVENGERS.mp4\')\n\ndef moveBot(ch, speedMotor = \'80\'):\n\tif(ch == \'AC\'):ser.write(str.encode(\'1 0 0 0 0 0 0 \'+\'65\'+\'\\n\'));\n\telif(ch == \'C\'):ser.write(str.encode(\'0 1 0 0 0 0 0 \'+\'65\'+\'\\n\'));\n\telif(ch == \'F\'):ser.write(str.encode(\'0 0 1 0 0 0 0 \'+speedMotor+\'\\n\'));\n\telif(ch == \'B\'):ser.write(str.encode(\'0 0 0 1 0 0 0 \'+speedMotor+\'\\n\'));\n\telif(ch == \'S1u\'):ser.write(str.encode(\'0 0 0 0 1 0 0 \'+speedMotor+\'\\n\'));\n\telif(ch == \'S1d\'):ser.write(str.encode(\'0 0 0 0 -1 0 0 \'+speedMotor+\'\\n\'));\n\telif(ch == \'S2d\'):ser.write(str.encode(\'0 0 0 0 0 1 0 \'+speedMotor+\'\\n\'));\n\telif(ch == \'S2u\'):ser.write(str.encode(\'0 0 0 0 0 -1 0 \'+speedMotor+\'\\n\'));\n\telif(ch == \'S3u\'):ser.write(str.encode(\'0 0 0 0 0 0 1 \'+speedMotor+\'\\n\'));\n\telif(ch == \'S3d\'):ser.write(str.encode(\'0 0 0 0 0 0 -1 \'+speedMotor+\'\\n\'));\n\telse: ser.write(str.encode(\'0 0 0 0 0 0 0 0\\n\'));\n\tser.readline()\n\tprint(ch)\n\n\nser = serial.Serial(""/dev/ttyACM0"", 9600)\nsleep(2)\nprint(""connection Est"");\n\ncap = cv2.VideoCapture(0)\n\ndef stateHasChanged():\n\ta = \'\'\'\n\t------------------------------------------------------\n\t----------------STATE HAS CHANGED--------------------\n\t------------------------------------------------------\n\t\'\'\'\n\tprint(a)\n\nprint(""loading model"")\nmodel = load_model(""MyModel.hand"")\nlabelz = dict(enumerate([\'fist\', \'fistWH\', \'A1\', \'A2\', \'A3\', \'A6\', \'A9\', \'A12\', \'A15\', \'call\', \'crock\', \'four\', \'LL\', \'LR\', \'ok\', \'one\', \'oneL\', \'oneR\', \'palm\', \'pinky\', \'three\', \'tL\', \'tR\', \'VL\', \'VR\', \'VU\']))\nstates = dict(enumerate([\'one\', \'VU\', \'three\', \'A15\', \'crock\', \'VL\']))\n\nlabel = None\nfeed = None\ntoggle = False\nPx = 0\nPy = 0\nresizeVar = [250, 250]\nmoveVar = [250, 250]\n\n\ncontroller = [ 375, 500, 125, 250] # x1<x2 y1<y2\nnewToggle = False\n\nPrevLocation = [0,0]\n\nstate = 1 #Default state\ncounter = 0\narrayOfPrevious = [\'\'] * 30\n\ndef movementOfMouse(factor, thres):\n\tglobal PrevLocation\n\tglobal Px\n\tglobal Py\n\tans = [int((Px-PrevLocation[0])*factor), int((Py- PrevLocation[1])*factor)]\n\tif(abs(ans[0])<thres):ans[0]=0\n\tif(abs(ans[1])<thres):ans[1]=0\n\treturn ans\n\n\nwhile True:\n\t_F, frame = cap.read()\n\tthresholded, temp, rect = detectHand(frame, cap, show = False) # rect : x1, y1, x2, y2 hand is the binary image\n\tif thresholded is not None:\n\t\tthresholded = cv2.cvtColor(thresholded, cv2.COLOR_GRAY2BGR)\n\t\tcv2.circle(thresholded, (Px,Py), 10, (0, 255, 0), -1)\n\t\tcv2.line(thresholded,(controller[0],0),(controller[0],thresholded.shape[0]),(200, 0, 0), 2); \n\t\tcv2.line(thresholded,(controller[1],0),(controller[1],thresholded.shape[0]),(200, 0, 0), 2); \n\t\tcv2.line(thresholded,(0, controller[2]),(thresholded.shape[1], controller[2]),(200, 0, 0), 2); \n\t\tcv2.line(thresholded,(0, controller[3]),(thresholded.shape[1], controller[3]),(200, 0, 0), 2);\n\t\tif temp is not None: \n\t\t\tPx, Py = rect[0:2]\n\t\t\tPx+=int(rect[2]/2)\n\t\t\tcv2.imshow(\'temp\', temp)\n\t\t\ttemp = temp.reshape(-1, 100, 100, 1)\n\t\t\tif(toggle == True):\n\t\t\t\tclass_prediction = model.predict_classes(temp, verbose = False)[0]\n\t\t\t\tpercent = round(max(model.predict_proba(temp, verbose = False)[0])*100)\n\t\t\t\tif(percent>=98):label = labelz[class_prediction]\n\t\t\t\telse: label = None\n\t\t\t\t# print(label,\' percent accu: \' ,percent, \' current State: \', state)\n\t\t\telse:\n\t\t\t\tlabel = None\n\t\tcv2.putText(thresholded,\'current State: \'+str(state),(25,25), cv2.FONT_HERSHEY_SIMPLEX, 1,(0,255,0),2,cv2.LINE_AA)\n\t\tif(label!=None): cv2.putText(thresholded,label+\' \'+str(percent)+\'%\',(25,75), cv2.FONT_HERSHEY_SIMPLEX, 1,(255,0,0),2,cv2.LINE_AA)\n\t\tcv2.imshow(\'thresholded\',thresholded)\n\n\tif(newToggle):\n\t\tfor i in range(len(states)):\n\t\t\tif(label == states[i]):\n\t\t\t\tstateHasChanged()\n\t\t\t\tstate = i+1\n\t\tnewToggle = False\n\n\tpresent = False\n\tfor i in range(len(states)):\n\t\tif(label == states[i]):\n\t\t\tpresent = True\n\t\t\tbreak\n\tif (present):\n\t\tarrayOfPrevious[counter] = label\n\t\tif(counter == len(arrayOfPrevious)-1): itr = -1\n\t\telif(counter == 0): itr = 1\n\t\tcounter += itr\n\n\t\tif(states[state-1] != arrayOfPrevious[0]):\n\t\t\tnewToggle = True\n\t\t\tfor i in arrayOfPrevious:\n\t\t\t\tif(i != arrayOfPrevious[0]):\n\t\t\t\t\tnewToggle = False\n\t\t\t\t\tbreak\n\n\tif(state == 1):\n\t\tcv2.namedWindow(\'feed\', flags=cv2.WINDOW_NORMAL)\n\t\tif(label == \'palm\'):\n\t\t\tpass\n\t\telse:\n\t\t\tfeed = frame.copy()\n\t\t\tfeed = cv2.flip(feed, 1)\n\t\t\tif(label == \'A6\'):\n\t\t\t\tcv2.resizeWindow(\'feed\', (resizeVar[0], resizeVar[1]) )\n\t\t\t\tif(resizeVar[0]<20): resizeVar[0]=20\n\t\t\t\tif(resizeVar[1]<20): resizeVar[1]=20\n\t\t\t\tresizeVar[0]+=movementOfMouse(3,0)[0]\n\t\t\t\tresizeVar[1]+=movementOfMouse(3,0)[1]\n\n\n\t\t\telif(label == \'fistWH\'): \n\t\t\t\tcv2.moveWindow(\'feed\', moveVar[0], moveVar[1])\n\t\t\t\tif(moveVar[0]<0): moveVar[0]=0\n\t\t\t\tif(moveVar[1]<0): moveVar[1]=0\n\t\t\t\tif(moveVar[0]>1650): moveVar[0]=1650\n\t\t\t\tif(moveVar[1]>700): moveVar[1]=700\n\t\t\t\tmoveVar[0]+=movementOfMouse(3,0)[0]\n\t\t\t\tmoveVar[1]+=movementOfMouse(3,0)[1]\n\n\t\t\telif(label == \'A1\'): \n\t\t\t\tfeed = cv2.GaussianBlur(feed,(95,95),0)\n\t\t\telif(label == \'A2\'):\n\t\t\t\tfeed = cv2.cvtColor(feed, cv2.COLOR_BGR2GRAY) \n\t\t\telif(label == \'A3\'):\n\t\t\t\tfeed = np.copy(thresholded)\n\t\tif feed is not None: cv2.imshow(\'feed\', feed)\n\telse: cv2.destroyWindow(\'feed\')\n\n\tif(state == 2):\n\t\tif(label == \'fist\'):\n\t\t\tif(Px<controller[0]):moveBot(\'AC\')\n\t\t\telif(Px>controller[1]):moveBot(\'C\')\n\t\t\telif(Py<controller[2]):moveBot(\'F\')\n\t\t\telif(Py>controller[3]):moveBot(\'B\')\n\t\t\telse: moveBot(\'S\')\n\t\telif(label == \'fistWH\'):\n\t\t\tif(Px<controller[0]):moveBot(\'S1u\')\n\t\t\telif(Px>controller[1]):moveBot(\'S1d\')\n\t\t\telif(Py<controller[2]):moveBot(\'S2u\')\n\t\t\telif(Py>controller[3]):moveBot(\'S2d\')\n\t\t\telse: moveBot(\'S\')\n\t\telif(label == \'tR\' or label == \'tL\'):\n\t\t\tif(Px<controller[0]):moveBot(\'S3u\')\n\t\t\telif(Px>controller[1]):moveBot(\'S3d\')\n\t\t\telse: moveBot(\'S\')\n\t\telse:\n\t\t\tmoveBot(\'S\')\n\n\tif(state == 3):\n\t\tif(label == \'A12\'):\n\t\t\tif(player.is_playing()): player.pause()\n\t\telif(label == \'ok\'):\n\t\t\tplayer.stop()\n\t\telif(label == \'fist\'):\n\t\t\tplayer.play()\n\t\telif(label == \'A6\'):\n\t\t\tval = int((thresholded.shape[1]-Py-200)/thresholded.shape[1]*200)\n\t\t\tprint(\'Volume Set to : \', val)\n\t\t\tplayer.audio_set_volume(val)\n\t\telif(label == \'LL\'):\n\t\t\tplayer.set_fullscreen(True)\n\t\telif(label == \'LR\'):\n\t\t\tplayer.audio_set_mute(True)\n\t\tif(label != \'LL\'):\n\t\t\tplayer.set_fullscreen(False)\n\t\tif(label != \'LR\'):\n\t\t\tplayer.audio_set_mute(False)\n\telse: player.stop()\n\n\t\t\t\n\tif(state == 4):\n\t\tif(label == \'four\'):\n\t\t\tprint(\'GOOD AFTERNOON!!!!!!!!!!!---------------------------------------------------------------\')\n\t\telif(label == \'call\'):\n\t\t\tprint(\'YOU CAN ADD FUNCTIONALLITY FOR CALL HERE------------------------------------------------\')\n\t\telif(label == \'oneR\'):\n\t\t\tprint(\'YOU ARE POINTING TO RIGHT---------------------------------------------------------------\')\n\t\telif(label == \'oneL\'):\n\t\t\tprint(\'YOU ARE POINTING\tTO LEFT----------------------------------------------------------------\')\n\t\telif(label == \'VR\'):\n\t\t\tprint(\'IIT BHU ROCKS---------------------------------------------------------------------------\')\n\t\telif(label == \'A9\'):\n\t\t\tprint(\'WONDER WHICH FINGER?????----------------------------------------------------------------\')\n\n\tif(state == 5):\n\t\tif(label == \'fist\'):\n\t\t\tans = movementOfMouse(4, 5)\n\t\t\tm.move(ans[0], ans[1])\n\n\tif(state == 6):\n\t\tmoveBot(\'S\')\n\t\tbreak\n\n\n\tkey = cv2.waitKey(1)\n\tif key == ord(\'q\'):\n\t\tmoveBot(\'S\')\n\t\tbreak\n\telif key == ord(\'a\'):\n\t\tprint(\'RESET\')\n\t\tmoveBot(\'S\')\n\t\treset()\n\telif key == ord(\'s\'):\n\t\tprint(\'PREDICTION HAS STARTED\')\n\t\ttoggle = True\n\t\tmoveBot(\'S\')\n\telif key == ord(\'p\'):\n\t\tprint(\'PREDICTION HAS BEEN PAUSED\')\n\t\ttoggle = False\n\t\tmoveBot(\'S\')\n\n\tPrevLocation = [Px, Py]\n        \n'"
