file_path,api_count,code
02 - Day - 2-3-4- Python Basics/test.py,0,b'a =56\nb =53\nprint(a+b)'
05 - Day - 5 - Python - Numpy/addsub.py,0,"b'def add(a,b):\n    return a+b\n\ndef sub(a,b):\n    return a-b'"
17 - Day - 17 - Linear Regression/gradient_descent_example.py,0,"b'from numpy import *\n\n# y = mx + b\n# m is slope, b is y-intercept\ndef compute_error_for_line_given_points(b, m, points):\n    totalError = 0\n    for i in range(0, len(points)):\n        x = points[i, 0]\n        y = points[i, 1]\n        totalError += (y - (m * x + b)) ** 2\n    return totalError / float(len(points))\n\ndef step_gradient(b_current, m_current, points, learningRate):\n    b_gradient = 0\n    m_gradient = 0\n    N = float(len(points))\n    for i in range(0, len(points)):\n        x = points[i, 0]\n        y = points[i, 1]\n        b_gradient += -(2/N) * (y - ((m_current * x) + b_current))\n        m_gradient += -(2/N) * x * (y - ((m_current * x) + b_current))\n    new_b = b_current - (learningRate * b_gradient)\n    new_m = m_current - (learningRate * m_gradient)\n    return [new_b, new_m]\n\ndef gradient_descent_runner(points, starting_b, starting_m, learning_rate, num_iterations):\n    b = starting_b\n    m = starting_m\n    for i in range(num_iterations):\n        b, m = step_gradient(b, m, array(points), learning_rate)\n    return [b, m]\n\ndef run():\n    points = genfromtxt(""data.csv"", delimiter="","")\n    learning_rate = 0.0001\n    initial_b = 0 # initial y-intercept guess\n    initial_m = 0 # initial slope guess\n    num_iterations = 1000\n    print ""Starting gradient descent at b = {0}, m = {1}, error = {2}"".format(initial_b, initial_m, compute_error_for_line_given_points(initial_b, initial_m, points))\n    print ""Running...""\n    [b, m] = gradient_descent_runner(points, initial_b, initial_m, learning_rate, num_iterations)\n    print ""After {0} iterations b = {1}, m = {2}, error = {3}"".format(num_iterations, b, m, compute_error_for_line_given_points(b, m, points))\n\nif __name__ == \'__main__\':\n    run()\n'"
02 - Day - 2-3-4- Python Basics/Appendix/example.py,0,"b'def add(a,b):\n   result = a + b\n   return result\n   \ndef sub(a,b):\n   result = a - b\n   return result\n   \n   \ndef mul(a,b):\n   result = a * b\n   return result\n   \n  \n   \n\n'"
02 - Day - 2-3-4- Python Basics/Appendix/examplecall.py,0,"b'import example\n\nfrom example import add as a\nfrom example import sub as b\n\n\nprint(example.add(4,5))\nprint(example.sub(4,5))\nprint(example.mul(4,5))\n\n\nprint(a(5,4))\nprint(b(5,4))\n\n\n'"
02 - Day - 2-3-4- Python Basics/Appendix/module/folder/example.py,0,"b'def add(a,b):\n   result = a + b\n   return result\n   \ndef sub(a,b):\n   result = a - b\n   return result\n   \n   \ndef mul(a,b):\n   result = a * b\n   return result\n   \n  \n   \n\n'"
