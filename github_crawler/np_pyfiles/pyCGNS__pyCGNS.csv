file_path,api_count,code
setup.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System\n#  See license.txt file in the root directory of this Python module source\n#  -------------------------------------------------------------------------\n#\nfrom __future__ import print_function\n\nimport os\nimport sys\nimport string\nimport argparse\nimport glob\nimport re\n\nfrom setuptools import setup, Extension\n\n# in the case the default python/distutils compiler fails with mpi, set\n# this variable. You should check this compiler is the one used for HDF5 prod\n# in the share/cmake config of your HDF5 installation.\nCYTHON_COMPILER_FOR_MAP = \'mpicc\'\n\n# --- get overall configuration\nsys.path = [\'{}/lib\'.format(os.getcwd())] + sys.path\nfrom setuputils import (MAJOR_VERSION, MINOR_VERSION,\n                        HAS_MSW, HAS_PY2, HAS_PY3,\n                        log, line, is_windows, fix_path,\n                        search, clean, touch,\n                        ConfigException,\n                        updateVersionInFile, installConfigFiles)\n\n\nline(\'pyCGNS v{}.{} install\'.format(MAJOR_VERSION, MINOR_VERSION))\nline()\n\ndoc1 = """"""\n  pyCGNS installation setup \n  - Usual python setup options are unchanged (build, install, help...)\n  - The recommanded way to build is to set your shell environment with\n    your own PATH, LD_LIBRARY_PATH and PYTHONPATH so that the setup would\n    find all expected ressources itself.\n  - You can either use the command line args as described below or edit\n    the setup_userConfig.py with the values you want.\n\n  All packages are installed if all expected dependancies are found.\n  See doc for more installation details and depend:\n  https://pycgns.github.io/install.html\n\n  MPI: using HDF5 with parallel features adds dependancies on mpi. The\n  simple way to resolve these deps is to force mpicc instead of cc:\n\n  CC=mpicc python setup.py build\n\n  or edit the pyCGNS/stup.py file and change CYTHON_COMPILER_FOR_MAP\n\n  ** IMPORTANT WARNING **\n  The *install* command runs the *build* as first step.\n  If you run first the *build* with specific options\n  you *SHOULD* add these options again in the *install*\n  command line unless you will have a *NEW* build.\n\n""""""\n\ndoc2 = """"""\n  Examples:\n\n  1. The best way is to let setup find out required stuff, build and\n     install. This would need write access to python installation dirs:\n\n  python setup.py install\n\n  2. You can build and install in two separate commands\n\n  python setup.py build\n  python setup.py install\n\n  3. Specific paths would be used prior to any automatic detection:\n\n  python setup.py build --includes=/usr/local/includes:/home/tools/include\n\n  4. Installation to a local directory (usual setup pattern)\n\n  python setup.py install --prefix=/home/myself/install\n\n""""""\n\ndef str2bool(value):\n    if value.lower() in (\'yes\', \'true\', \'t\', \'y\', \'1\'):\n        return True\n    elif value.lower() in (\'no\', \'false\', \'f\', \'n\', \'0\'):\n        return False\n    else:\n        raise argparse.ArgumentTypeError(\'Boolean value expected.\')\n\npr = argparse.ArgumentParser(description=doc1, epilog=doc2,\n                             formatter_class=argparse.RawDescriptionHelpFormatter,\n                             usage=\'python %(prog)s [options] file1 file2 ...\')\n\npr.add_argument(""-I"", ""--includes"", dest=""incs"",\n                help=\'list of paths for include search ( : separated), order is significant and is kept unchanged\')\npr.add_argument(""-L"", ""--libraries"", dest=""libs"",\n                help=\'list of paths for libraries search ( : separated), order is significant and is kept unchanged\')\npr.add_argument(""-U"", ""--update"", action=\'store_true\',\n                help=\'update version (dev only)\')\npr.add_argument(""-F"", ""--force"", action=\'store_false\',\n                help=\'skip all .pyx files regeneration\')\npr.add_argument(""-A"", ""--alternate"", action=\'store_true\',\n                help=\'use full h5py CGNS/HDF5 interface (ongoing work)\')\n\nmodules = {""app"": True, ""map"": True, ""pat"": True, ""val"": True, ""nav"": True}\n\nfor name, val in modules.items():\n    pr.add_argument(""--"" + name, type=str2bool, default=val,\n                    help=\'enable/disable building of CGNS.\' + name.upper())\n\nfor hstr in [\'--help\', \'-h\', \'help\']:\n  if hstr in sys.argv:\n      pr.print_help()\n      sys.exit(1)\n    \n# Remove modules from command-line arguments\npr1 = argparse.ArgumentParser()\nfor name, val in modules.items():\n    pr1.add_argument(""--"" + name, type=str2bool, default=val)\n\nargs1, unknown = pr1.parse_known_args()\nsys.argv = sys.argv[:1] + unknown\n\nif \'help\' in unknown:\n    pr.print_help()\n    sys.exit(1)\n\ntry:\n    os.makedirs(\'./build/lib/CGNS\')\nexcept OSError:\n    pass\n\nif HAS_PY3:\n    log(\'found Python 3 platform\')\nelse:\n    log(\'found Python 2 platform\')\nlog(\'using Python from {}\'.format(sys.prefix))\n\nif HAS_MSW:\n    log(\'found Windows platform\')\nelse:\n    log(\'found Unix platform\')\n\nAPP = args1.app\nMAP = args1.map\nPAT = args1.pat\nVAL = args1.val\nNAV = args1.nav\n\nALL_PACKAGES = []\nALL_SCRIPTS = []\nALL_EXTENSIONS = []\nOTHER_INCLUDES_PATHS = []\nOTHER_LIBRARIES_PATHS = []\nEXTRA_DEFINE_MACROS = []\n\nif HAS_MSW:\n    EXTRA_DEFINE_MACROS = [(\'_HDF5USEDLL_\', None), (\'H5_BUILT_AS_DYNAMIC_LIB\', None)]\n\nmodule_logs = []\nincs = []\nlibs = []\n\nargs, unknown = pr.parse_known_args()\n\nif \'install\' in unknown:\n    args.force = False\n\nif args.incs is not None:\n    incs = [os.path.expanduser(path) for path in args.incs.split(os.path.pathsep)]\nif args.libs is not None:\n    libs = [os.path.expanduser(path) for path in args.libs.split(os.path.pathsep)]\n\nif args.alternate:\n    deps = [\'Cython\', \'h5py\', \'numpy\', \'vtk\', \'qtpy\']\nelse:\n    deps = [\'Cython\', \'HDF5\', \'numpy\', \'vtk\', \'qtpy\']\n\nRUN_REQUIRES= [\'numpy\', \'future\']\nSETUP_REQUIRES = RUN_REQUIRES + [\'cython>=0.25\', \'pkgconfig\']\n\n# Remove crashing deps test\nif \'sdist\' in sys.argv:\n   deps = [\'Cython\', \'numpy\',\'vtk\',\'qtpy\']\n\n# Dirty patch\n# Get required EGG if needed\nimport setuptools.dist\ndist = setuptools.dist.Distribution(dict({\'setup_requires\': SETUP_REQUIRES}))\ntry:\n    (CONFIG, status) = search(incs, libs, deps=deps)\nexcept ConfigException as e:\n    log(\'***** Cannot build pyCGNS without: {}\'.format(e))\n    sys.exit(1)\n\n# Fake HDF5 Config\nif \'sdist\' in sys.argv:\n    CONFIG.HDF5_HST = 1\n    CONFIG.HDF5_H64 = 1\n    CONFIG.HDF5_HUP = 1\n    CONFIG.HDF5_VERSION = ""1.10.4""\n    CONFIG.HDF5_PARALLEL = 0\n\n\nline()\n\nnew_args = []\n\nfor arg in sys.argv:\n    if (not (\'-I=\' in arg or \'--includes=\' in arg) and\n        not (\'-U\' in arg or \'--update\' in arg) and\n        not (\'-A\' in arg or \'--alternate\' in arg) and\n        not (\'-F\' in arg or \'--force\' in arg) and\n        not (\'-L=\' in arg or \'--libraries=\' in arg)):\n        new_args += [arg]\nsys.argv = new_args\n\nif args.update:\n    #os.system(\'hg parents --template=""{rev}\\n"" > %s/revision.tmp\' \\\n    #          % CONFIG.PRODUCTION_DIR)\n    # Quick and dirty revision, should use git describe --always instead\n    os.system(r\'git rev-list --count HEAD> {}/revision.tmp\'.format(CONFIG.PRODUCTION_DIR))\n    updateVersionInFile(fix_path(\'./lib/pyCGNSconfig_default.py\'), CONFIG)\n\ndef hasToGenerate(source, destination, force):\n    return (force or not os.path.exists(destination) or\n            os.path.getmtime(source) > os.path.getmtime(destination))\n\ndef resolveVars(filename, confvalues, force):\n    if hasToGenerate(filename + \'.in\', filename, force):\n        with open(\'{}.in\'.format(filename), \'r\') as fg1:\n            l1 = fg1.readlines()\n        l2 = [ll.format(**confvalues) for ll in l1]\n        with open(filename, \'w\') as fg2:\n            fg2.writelines(l2)\n\nif args.force:\n    print(\'Generation of pyx not skipped\')\nelse:\n    print(\'Skipping pyx generation\')\n    \n# -------------------------------------------------------------------------\nif APP:\n    slist = [\'cg_grep\', \'cg_list\', \'cg_link\', \'cg_iges\', \'cg_diff\', \n             \'cg_checksum\',\n             \'cg_gather\', \'cg_scatter\', \'cg_dump\',\n             \'cg_scan\']\n    if NAV:\n      slist += [\'cg_look\']\n\n    ALL_SCRIPTS += [\'CGNS/APP/tools/%s\' % f for f in slist]\n\n    ALL_EXTENSIONS += [Extension(""CGNS.APP.lib.arrayutils"",\n                                 [""CGNS/APP/lib/arrayutils.pyx"",\n                                  ""CGNS/APP/lib/hashutils.c""],\n                                 include_dirs=CONFIG.INCLUDE_DIRS + OTHER_INCLUDES_PATHS,\n                                 extra_compile_args=[])]\n    ALL_PACKAGES += [\'CGNS.APP\',\n                     \'CGNS.APP.lib\',\n                     \'CGNS.APP.tools\',\n                     \'CGNS.APP.examples\',\n                     \'CGNS.APP.misc\',\n                     \'CGNS.APP.test\']\n    module_logs.append(""APP   add  build"")\nelse:\n    module_logs.append(""APP   skip build *"")\n\n# -------------------------------------------------------------------------  \nif MAP:\n    if not CONFIG.HAS_H5PY:\n        # generate files\n        # CHLone_config.h.in -> CHLone_config.h\n        # pyCHLone.pyx.in -> pyCHLone.pyx\n        #\n        # --- config values\n        hdfplib = CONFIG.HDF5_PATH_LIBRARIES\n        hdflib = CONFIG.HDF5_LINK_LIBRARIES\n        hdfpinc = CONFIG.HDF5_PATH_INCLUDES\n        include_dirs = [\'.\'] + hdfpinc + CONFIG.INCLUDE_DIRS + OTHER_INCLUDES_PATHS\n        library_dirs = hdfplib\n        optional_libs = hdflib\n        extra_compile_args = CONFIG.HDF5_EXTRA_ARGS\n        extra_define_macro = EXTRA_DEFINE_MACROS\n\n        conf = {\'CHLONE_HAS_PTHREAD\': 1,\n                \'CHLONE_HAS_REGEXP\': 1,\n                \'CHLONE_PRINTF_TRACE\': 0,\n                \'CHLONE_ON_WINDOWS\': HAS_MSW,\n                \'CHLONE_H5CONF_STD\': CONFIG.HDF5_HST,\n                \'CHLONE_H5CONF_64\': CONFIG.HDF5_H64,\n                \'CHLONE_H5CONF_UP\': CONFIG.HDF5_HUP,\n                \'HDF5_VERSION\': CONFIG.HDF5_VERSION,\n                \'CHLONE_INSTALL_LIBRARIES\': """",\n                \'CHLONE_INSTALL_INCLUDES\': """",\n                }\n\n        depfiles = [\'CGNS/MAP/CHLone_config.h\', \'CGNS/MAP/EmbeddedCHLone.pyx\']\n\n        EXTRA_MAP_COMPILE_ARGS = \'\'\n\n        resolveVars(fix_path(depfiles[0]), conf, args.force)\n        resolveVars(fix_path(depfiles[1]), conf, args.force)\n        library_dirs = [l for l in library_dirs if l != \'\']\n\n        # hack: actually shoudl read hdf5/cmake config to get true compiler...\n        if CONFIG.HDF5_PARALLEL:\n            os.environ[\'CC\']=CYTHON_COMPILER_FOR_MAP\n\n        ALL_EXTENSIONS += [Extension(""CGNS.MAP.EmbeddedCHLone"",\n                                     [""CGNS/MAP/EmbeddedCHLone.pyx"",\n                                      ""CGNS/MAP/SIDStoPython.c"",\n                                      ""CGNS/MAP/l3.c"",\n                                      ""CGNS/MAP/error.c"",\n                                      ""CGNS/MAP/linksearch.c"",\n                                      ""CGNS/MAP/sha256.c"",\n                                     ],\n                                     include_dirs=include_dirs,\n                                     library_dirs=library_dirs,\n                                     libraries=optional_libs,\n                                     depends=depfiles,\n                                     define_macros=extra_define_macro,\n                                     extra_compile_args=extra_compile_args)]\n\n    ALL_PACKAGES += [\'CGNS.MAP\', \'CGNS.MAP.test\']\n    module_logs.append(""MAP   add  build"")\nelse:\n    module_logs.append(""MAP   skip build *"")\n\n# -------------------------------------------------------------------------  \nif VAL:\n    ALL_PACKAGES += [\'CGNS.VAL\',\n                     \'CGNS.VAL.grammars\',\n                     \'CGNS.VAL.suite\',\n                     \'CGNS.VAL.suite.SIDS\',\n                     \'CGNS.VAL.parse\',\n                     \'CGNS.VAL.test\']\n    ALL_SCRIPTS += [\'CGNS/VAL/CGNS.VAL\']\n\n    if args.force:\n        touch(""CGNS/VAL/grammars/CGNS_VAL_USER_SIDS_.pyx"")\n        touch(""CGNS/VAL/grammars/etablesids.pyx"")\n        touch(""CGNS/VAL/grammars/valutils.pyx"")        \n\n    ALL_EXTENSIONS += [Extension(""CGNS.VAL.grammars.CGNS_VAL_USER_SIDS_"",\n                                 [""CGNS/VAL/grammars/CGNS_VAL_USER_SIDS_.pyx""],\n                                 include_dirs=CONFIG.INCLUDE_DIRS,\n                                 extra_compile_args=[])]\n    ALL_EXTENSIONS += [Extension(""CGNS.VAL.grammars.etablesids"",\n                                 [""CGNS/VAL/grammars/etablesids.pyx""],\n                                 include_dirs=CONFIG.INCLUDE_DIRS,\n                                 extra_compile_args=[])]\n    ALL_EXTENSIONS += [Extension(""CGNS.VAL.grammars.valutils"",\n                                 [""CGNS/VAL/grammars/valutils.pyx""],\n                                 include_dirs=CONFIG.INCLUDE_DIRS,\n                                 extra_compile_args=[])]\n\n    module_logs.append(""VAL   add  build"")\nelse:\n    module_logs.append(""VAL   skip build *"")\n\n# -------------------------------------------------------------------------  \nif PAT:\n    # if CONFIG.HAS_CYTHON:\n    #  ALL_EXTENSIONS+=[ Extension(\'CGNS.PAT.cgnsutils\',\n    #                              [\'CGNS/PAT/cgnsutils.pyx\'],\n    #                              include_dirs = CONFIG.INCLUDE_DIRS) ]\n    ALL_PACKAGES += [\'CGNS.PAT\',\n                     \'CGNS.PAT.SIDS\',\n                     \'CGNS.PAT.test\']\n    module_logs.append(""PAT   add  build"")\nelse:\n    module_logs.append(""PAT   skip build *"")\n\n# -------------------------------------------------------------------------  \nif NAV and CONFIG.HAS_QTPY:\n    cui = CONFIG.COM_UIC\n    crc = CONFIG.COM_RCC\n    ccy = CONFIG.COM_CYTHON\n\n    fakefile = ""./CGNS/NAV/fake.pxi""\n    if args.force:\n        touch(fakefile)\n\n    modnamelist = [\n        \'Q7TreeWindow\',\n        \'Q7DiffWindow\',\n        \'Q7MergeWindow\',\n        \'Q7ControlWindow\',\n        \'Q7OptionsWindow\',\n        \'Q7FormWindow\',\n        \'Q7FileWindow\',\n        \'Q7QueryWindow\',\n        \'Q7SelectionWindow\',\n        \'Q7InfoWindow\',\n        \'Q7DiagWindow\',\n        \'Q7LinkWindow\',\n        \'Q7HelpWindow\',\n        \'Q7ToolsWindow\',\n        \'Q7PatternWindow\',\n        \'Q7AnimationWindow\',\n        \'Q7MessageWindow\',\n        \'Q7LogWindow\',\n    ]\n    if CONFIG.HAS_VTK:\n        modnamelist += [\'Q7VTKWindow\']\n    modgenlist = []\n    modextlist = []\n    mfile_list = [\'mtree\', \'mquery\', \'mcontrol\', \'mtable\', \'mpattern\',\n                  \'diff\', \'mdifftreeview\', \'merge\', \'mmergetreeview\']\n    if CONFIG.HAS_VTK:\n        mfile_list += [\'mparser\']\n\n    for mfile in mfile_list:\n        if args.force:\n            touch(""CGNS/NAV/%s.pyx"" % mfile)\n        modextlist += [Extension(""CGNS.NAV.%s"" % mfile,\n                                 [""CGNS/NAV/%s.pyx"" % mfile ],\n                                 include_dirs=CONFIG.NUMPY_PATH_INCLUDES,\n                                 library_dirs=CONFIG.NUMPY_PATH_LIBRARIES,\n                                 libraries=CONFIG.NUMPY_LINK_LIBRARIES,\n                                 )]\n    for m in modnamelist:\n        modextlist += [Extension(""CGNS.NAV.%s"" % m,\n                                 [""CGNS/NAV/G/%s.pyx"" % m ],\n                                 include_dirs=CONFIG.NUMPY_PATH_INCLUDES,\n                                 library_dirs=CONFIG.NUMPY_PATH_LIBRARIES,\n                                 libraries=CONFIG.NUMPY_LINK_LIBRARIES,\n                                 )]\n        g = (""CGNS/NAV/T/{}.ui"".format(m), ""CGNS/NAV/G/{}.pyx"".format(m))\n        if ((\'true\' not in [cui, crc]) and hasToGenerate(g[0], g[1],\n                                                         args.force)):\n            modgenlist += [m]\n\n    for m in modgenlist:\n        log(\'Generate from updated Qt templates  ({}): {}\'.format(cui, m))\n        com = ""{} --from-imports -o CGNS/NAV/G/{}.pyx CGNS/NAV/T/{}.ui"".format(cui, m, m)\n        #print(fix_path(com))\n        os.system(fix_path(com))\n        com = ""{} -a CGNS/NAV/G/{}.pyx"".format(ccy, m)\n        #print(fix_path(com))\n        os.system(fix_path(com))\n\n    if (hasToGenerate(\'CGNS/NAV/R/Res.qrc\', \'CGNS/NAV/Res_rc.py\', args.force)):\n        log(\'Generate from updated Qt Ressources ({}): Res_rc.py\'.format(crc))\n        com = ""{} -o CGNS/NAV/Res_rc.py CGNS/NAV/R/Res.qrc"".format(crc)\n        os.system(fix_path(com))\n\n    ALL_PACKAGES += [\'CGNS.NAV\', \'CGNS.NAV.test\']\n    ALL_EXTENSIONS += modextlist\n\n    if CONFIG.HAS_VTK:\n        module_logs.append(""NAV   add  build (with VTK)"")\n    else:\n        module_logs.append(""NAV   add  build (without VTK)"")\n\nelse:\n    module_logs.append(""NAV   skip build *"")\n\ninstallConfigFiles(CONFIG.PRODUCTION_DIR)\n\n#  -------------------------------------------------------------------------\nif CONFIG.HAS_CYTHON:\n    from Cython.Distutils import build_ext\n\n    cmd = {\'clean\': clean, \'build_ext\': build_ext}\nelse:\n    cmd = {\'clean\': clean}\n\nfor module_log in module_logs:\n    log(module_log)\nline()\n\n# --- Distutils metadata --------------------------------------------\n\ncls_txt = \\\n""""""\nDevelopment Status :: 3 - Alpha\nIntended Audience :: Developers\nIntended Audience :: Information Technology\nIntended Audience :: Science/Research\nLicense :: OSI Approved :: GNU LGPL\nProgramming Language :: Cython\nProgramming Language :: Python\nProgramming Language :: Python :: 2.7\nProgramming Language :: Python :: 3\nProgramming Language :: Python :: 3.6\nProgramming Language :: Python :: Implementation :: CPython\nTopic :: Scientific/Engineering\nTopic :: Database\nTopic :: Software Development :: Libraries :: Python Modules\nOperating System :: Unix\nOperating System :: POSIX :: Linux\nOperating System :: MacOS :: MacOS X\nOperating System :: Microsoft :: Windows\n""""""\n\n# -------------------------------------------------------------------------  \nsetup(\n    name=CONFIG.NAME,\n    version=\'{}.{}.{}\'.format(MAJOR_VERSION, MINOR_VERSION, CONFIG.REVISION),\n    description=CONFIG.DESCRIPTION,\n    long_description=CONFIG.DESCRIPTION,\n    classifiers=[x for x in cls_txt.split(""\\n"") if x],\n    author=CONFIG.AUTHOR,\n    author_email=CONFIG.EMAIL,\n    license=CONFIG.LICENSE,\n    url=CONFIG.URL,\n    packages=ALL_PACKAGES,\n    scripts=ALL_SCRIPTS,\n    ext_modules=ALL_EXTENSIONS,\n    cmdclass=cmd,\n    install_requires=RUN_REQUIRES,\n    setup_requires=SETUP_REQUIRES\n)\n# -------------------------------------------------------------------------  \n# --- last line\n'"
setup_userConfig.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n# Change these values to fit your installation\n#\n# --- If you leave empty the variables below the build process would\n#     try to guess for you, using your current environment variables.\n#     Change these values only if you need to add/change something.\n#\n# --- stuff to add for numpy (used by NAV)\n#     you should not change this, the numpy stuff is expected to be detected\n#     using the numpy import itself\n#\n\nif False:\n    NUMPY_VERSION = ''\n    NUMPY_PATH_INCLUDES = []\n    NUMPY_PATH_LIBRARIES = ['']\n    NUMPY_LINK_LIBRARIES = ['']\n    NUMPY_EXTRA_ARGS = []\n#\n# --- stuff to add for HDF5 (used by MAP)\n#     the hdf5 install is detected using a 'which h5dump' and then we parse the\n#     installation. Thus non-standard installs would require to set these vars\n#\nif True:\n    HDF5_VERSION = ''\n    HDF5_PATH_INCLUDES = ['',]\n    HDF5_PATH_LIBRARIES = ['',]\n    HDF5_LINK_LIBRARIES = ['hdf5']\n    HDF5_EXTRA_ARGS = ['-Wno-return-type']\n\n# -------------------------------------------------------------------------\n"""
CGNS/__init__.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n# \npass\n#\n# this file is not the one you would find in install, see ./lib/__init__.py\n#\n\n'"
doc/conf.py,0,"b'import sys, os\n\nextensions = [\'sphinx.ext.autodoc\',\'sphinx.ext.intersphinx\',\n              \'sphinx.ext.extlinks\']\nmapdir=\'%s/../build/doc/html\'%os.path.abspath(\'.\')\nintersphinx_mapping={\'topix\': (mapdir+\'/\',None),\n                     \'mapix\': (mapdir+\'/MAP\',None),\n                     \'patix\': (mapdir+\'/PAT\',None),\n                     \'navix\': (mapdir+\'/NAV\',None),\n                     \'appix\': (mapdir+\'/APP\',None),\n                     \'valix\': (mapdir+\'/VAL\',None),\n                     \'datix\': (mapdir+\'/DAT\',None)\n                     }\n\n#templates_path = [\'_templates\']\nhtml_theme_path = [\'.\']\nsource_suffix = \'.txt\'\n\nimport os\nmaster_doc=os.environ[\'PYCGNSDOC\']\nproject = u\'pyCGNS\'\ncopyright = u\'2001-2016, Marc Poinot\'\nversion = \'4\'\nrelease = \'4.2.0\'\nunused_docs = [\'license.txt\']\nexclude_trees = [\'build\',\'doc\',\'lib\',\'.hg\']\nexclude_dirnames = [\'build\',\'doc\',\'lib\',\'.hg\']\n\npygments_style = \'sphinx\'\nhtml_theme = \'pycgns\'\nhtml_title = ""%s""%os.environ[\'PYCGNSMOD\']\nhtml_logo = \'images/%s-logo-small.png\'%os.environ[\'PYCGNSMOD\']\nhtml_favicon =  \'images/pyCGNS-logo-tiny.ico\'\nhtml_use_index = True\nhtmlhelp_basename = \'pyCGNSdoc\'\nhtml_show_sourcelink=False\nhtml_sidebars={\n\'**\':[\'localtoc.html\',\'searchbox.html\'],\n}\n\nlatex_paper_size = \'a4\'\nlatex_font_size = \'10pt\'\nlatex_documents = [\n  (os.environ[\'PYCGNSDOC\'],\n   \'pyCGNS_%s.tex\'%os.environ[\'PYCGNSMOD\'],\n   u\'pyCGNS.%s/Manual\'%os.environ[\'PYCGNSMOD\'],\n   u\'Marc Poinot\',\n   \'manual\',False),\n]\nlatex_logo = \'images/%s-logo.png\'%os.environ[\'PYCGNSMOD\']\nlatex_use_parts = False\nlatex_use_modindex = True\n\nautodoc_member_order=\'bysource\'\n\nextlinks={\'rsids\':(\'http://cgns.github.io/CGNS_docs_current/sids/%s\',\n                   \'rsids\')}\n\nsids_url=\'http://cgns.github.io/CGNS_docs_current/sids\'\nrst_epilog=\'.. |sids_url| replace:: %s\' %sids_url\n\n# --- last line\n'"
lib/__init__.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\n""""""\n  pyCGNS - Python package for CFD General Notation System\n\n  This packages provides some libs and tools dedicated to the CGNS standard.\n\n  Modules are:\n\n    * CGNS.MAP\n    * CGNS.APP\n    * CGNS.NAV\n    * CGNS.DAT\n    * CGNS.VAL\n    * CGNS.PAT\n    \n""""""\n#\nfrom CGNS.pyCGNSconfig import version as __version__\n#\n# --- last line\n'"
lib/config.py,0,b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom CGNS.pyCGNSconfig import *\n\n\n# --- last line\n\n\n'
lib/errors.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nTAG = ""\\n# pyCGNS:""\n\n\nclass cgnsException(Exception):\n    def __init__(self, value, msg=None):\n        self.value = value\n        self.msg = msg\n\n    def set(self, msg):\n        self.msg = msg\n\n    def __perr(self, error_id, *tp):\n        try:\n            msg = TAG + "" ERROR [%.3d]- %s"" % (error_id, errorTable[error_id])\n        except (TypeError, KeyError):\n            msg = TAG + "" ERROR [%.3d]- %s"" % (error_id, errorTable[999])\n        ret = msg\n        if tp:\n            if isinstance(tp, tuple) and (len(tp) > 0):\n                ret = msg % tp\n            else:\n                ret = msg % tp\n        return ret\n\n    def __str__(self):\n        if self.msg:\n            ret = self.__perr(self.value, self.msg)\n        else:\n            ret = self.__perr(self.value)\n        return ret\n\n\n# -----------------------------------------------------------------------------\nerrorTable = {\n    0: ""No error"",\n    1: ""Node is empty !"",\n    2: ""Node should be a list of <name, value, children, type>"",\n    3: ""Node name should be a string"",\n    4: ""Node [%s] children list should be a list"",\n    5: ""More than one CGNSLibraryVersion node found"",\n    6: ""Parent node for [%s] is node a CGNS node"",\n    7: ""Failed to add a badly formed child node into [%s]"",\n    8: ""Failed to add root node as child node into [%s]"",\n    9: ""Link chaser returns a badly formed node as place of [%s]"",\n    10: ""CGNSBase [%s] bad cell dimensions"",\n    11: ""CGNSBase [%s] bad physical dimensions"",\n    12: ""CGNSBase [%s] bad cell/physical dimensions values"",\n    20: ""No node of type [%s] with name [%s]"",\n    21: ""No node with name [%s]"",\n    22: ""Node name should have type string"",\n    23: ""Empty string is not allowed for a node name"",\n    24: ""Node name should not contain a \'/\'"",\n    25: ""Node name length should not be greater than 32 chars"",\n    26: ""Bad name [%s] for this node"",\n    27: ""Bad type [%s] for this node"",\n    28: ""Node [%s] should have no child"",\n    100: ""Absolute path implies a root node with CGNSLibraryVersion node"",\n    101: ""No child on CGNS tree first level"",\n    102: ""Duplicated child name [%s] in [%s]"",\n    103: ""Parent node of [%s] should have type [%s]"",\n    104: ""Parent node of [%s] should have type in %s"",\n    105: ""String data should have type array or string"",\n    106: ""Value should be a real array"",\n    107: ""Value should be an integer array"",\n    108: ""Parent node should have type [%s]"",\n    109: ""Value should be an array"",\n    110: ""Value should be a string in [%s]"",\n    200: ""Bad GridLocation value [%s]"",\n    201: ""Bad ConvergenceHistory name [%s]"",\n    202: ""Units specification list should have 5 values (one per unit)"",\n    203: ""Bad units specification [%s]"",\n    204: ""Units specifications duplicated [%s]"",\n    205: ""Bad SimulationType value [%s]"",\n    206: ""Bad ZoneType value [%s]"",\n    207: ""Bad DataClass value [%s]"",\n    208: ""Exponents specification list should have 5 values (one per unit)"",\n    209: ""BaseIterativeData number of steps should be an integer value"",\n    210: ""BaseIterativeData steps should in %s"",\n    211: ""BaseIterativeData value has greater length than number of steps"",\n    212: ""BaseIterativeData is missing sub-node"",\n    213: ""Parent node should be BaseIterativeData"",\n    214: ""BaseIterativeData bad Pointer name [%s]"",\n    215: ""BaseIterativeData Pointer list [%s] has not the right length [%s]"",\n    216: ""BaseIterativeData Pointer list [%s] contents has bad length [%s]"",\n    217: ""Parent node should be EMConductivityModel"",\n    218: ""Bad EMConductivityModelType value [%s]"",\n    219: ""EMConductivityModelType is missing sub-node"",\n    220: ""Parent node should be GoverningEquations"",\n    221: ""Bad GoverningEquationsType value [%s]"",\n    222: ""GoverningEquationsType is missing sub-node"",\n    223: ""Parent node should be GasModel"",\n    224: ""Bad GasModelType value [%s]"",\n    225: ""GasModelType is missing sub-node"",\n    226: ""Parent node should be ThermalConductivityModel"",\n    227: ""Bad ThermalConductivityModelType value [%s]"",\n    228: ""ThermalConductivityModelType is missing sub-node"",\n    229: ""Parent node should be ViscosityModel"",\n    230: ""Bad ViscosityModelType value [%s]"",\n    231: ""ViscosityModelType is missing sub-node"",\n    232: ""Parent node should be TurbulenceClosure"",\n    233: ""Bad TurbulenceClosureType value [%s]"",\n    234: ""TurbulenceClosureType is missing sub-node"",\n    235: ""Parent node should be TurbulenceModel"",\n    236: ""Bad TurbulenceModelType value [%s]"",\n    237: ""TurbulenceModelType is missing sub-node"",\n    238: ""Parent node should be ThermalRelaxationModel"",\n    239: ""Bad ThermalRelaxationModelType value [%s]"",\n    240: ""ThermalRelaxationModelType is missing sub-node"",\n    241: ""Parent node should be ChemicalKineticsModel"",\n    242: ""Bad ChemicalKineticsModelType value [%s]"",\n    243: ""ChemicalKineticsModelType is missing sub-node"",\n    244: ""Parent node should be EMElectricFieldModel"",\n    245: ""Bad EMElectricFieldModelType value [%s]"",\n    246: ""EMElectricFieldModelType is missing sub-node"",\n    247: ""Parent node should be EMMagneticFieldModel"",\n    248: ""Bad EMMagneticFieldModelType value [%s]"",\n    249: ""EMMagneticFieldModelType is missing sub-node"",\n    250: ""Bad ElementType value [%s]"",\n    251: ""Bad ElementConnectivity value [%s]"",\n    252: ""Bad BCTypeSimple value [%s]"",\n    253: ""Bad AverageInterfaceType value [%s]"",\n    254: ""Bad RigidGridMotionType value [%s]"",\n    255: ""Bad ArbitraryGridMotionType value [%s]"",\n    256: ""Bad GeometryFormat value [%s]"",\n    257: ""Bad BCTypeSimple or BCTypeCompound value [%s]"",\n    258: ""Parent node should be ArbitraryGridMotion_t"",\n    259: ""Parent node should be ReferenceState_t"",\n    260: ""Parent node should be IntegralData_t"",\n    261: ""Parent node should be UserDefinedData_t"",\n    262: ""Parent node should be Family_t"",\n    263: ""Parent node should be GridCoordinates_t"",\n    264: ""Parent node should be DiscreteData_t"",\n    265: ""Parent node should be BCData_t"",\n    266: ""Parent node should be ZoneIterativeData_t"",\n    267: ""Parent node should be AverageInterface_t"",\n    268: ""Bad AverageInterfaceType value [%s]"",\n    269: ""AverageInterfaceType is missing sub-node"",\n    270: ""Parent node should be ZoneGridConnectivity_t"",\n    271: ""Bad ZoneGridConnectivityType value [%s]"",\n    272: ""ZoneGridConnectivityType is missing sub-node"",\n    273: ""Parent node should be DimensionalExponents_t"",\n    274: ""Bad SimulationType value [%s]"",\n    275: ""Parent node should be BCDataSet_t"",\n    276: ""BCDataSetType is missing sub-node"",\n    277: ""Parent node should be ZoneBC_t"",\n    278: ""Parent node should be GridCoordinates_t"",\n    279: ""Parent node should be RotatingCoordinates_t"",\n    280: ""Parent node should be Axisymmetry_t"",\n    281: ""Parent node should be FlowSolution_t "",\n    282: ""Parent node should be Periodic_s "",\n    283: ""Parent node should be OversetHoles_t "",\n    284: ""Parent node should be GridConnectivity1to1_t "",\n    285: ""Parent node should be GridCoordinates"",\n    286: ""Parent node should be DiscreteData_t"",\n    287: ""Parent node should be DataArray_t"",\n    288: ""Parent node should be Zone_t"",\n    289: ""Parent node should be DataConversion_t"",\n    290: ""Parent node should be GridLocation_t"",\n    291: ""Parent node should be Descriptor_t"",\n    292: ""Parent node should be GeometryReference_t"",\n    293: ""GeometryReferenceType is missing sub-node"",\n    294: ""Parent node should be FamilyBC_t"",\n    295: ""FamilyBCType is missing sub-node"",\n\n    800: ""adf.database_open No such open status [%s]"",\n    801: ""adf.database_open No such open format [%s]"",\n    802: ""adf.database_open Empty file name"",\n\n    900: ""Cannot find pyCGNS config ?"",\n    901: ""No information about numeric library in pyCGNS config"",\n    902: ""Bad information about numeric library in pyCGNS config [%s]"",\n\n    999: ""Unknow error code"",\n\n    1001: ""No such file"",\n    1002: ""Open file failed"",\n    1003: ""File already exists"",\n    1004: ""No file name"",\n    1005: ""Bad ADF status at open"",\n    1006: ""Bad ADF format at open"",\n    1100: ""Not yet connected to a CGNS database"",\n    1101: ""No such base name"",\n    1102: ""Absolute path required"",\n    1103: ""No such zone name"",\n    1104: ""No such array name"",\n    1105: ""No such user data node name"",\n    1106: ""No such flow solution node name"",\n    1107: ""No such boundary condition node name"",\n    1110: ""File should be readable"",\n    1901: ""No such goto path in CGNS tree"",\n    1200: ""Bad type"",\n    1201: ""Bad OpenMode value"",\n    1202: ""Bad ErrorCode type"",\n    1203: ""Bad MassUnit type"",\n    1204: ""Bad LengthUnit type"",\n    1205: ""Bad TimeUnit type"",\n    1206: ""Bad TemperatureUnit type"",\n    1207: ""Bad AngleUnit type"",\n    1208: ""Bad DataClass type"",\n    1209: ""Bad GridLocation type"",\n    1210: ""Bad BC data type"",\n    1211: ""Bad GridConnectivityType type"",\n    1212: ""Bad PointSetType type"",\n    1213: ""Bad GoverningEquation type"",\n    1214: ""Bad Model type"",\n    1215: ""Bad BC type"",\n    1216: ""Bad DataType type"",\n    1217: ""Bad ElementType type"",\n    1218: ""Bad ZoneType type"",\n    1219: ""Bad RigidGridMotionType type"",\n    1220: ""Bad ArbitraryGridMotionType type"",\n    1221: ""Bad SimulationType type"",\n    1222: ""Bad WallFunctionType type"",\n    1223: ""Bad AreaType type"",\n    1224: ""Bad AverageInterfaceType type"",\n\n}\n\nCGNS_NoSuchFile = cgnsException(1001)\nCGNS_OpenFileFailed = cgnsException(1002)\nCGNS_FileAlreadyExists = cgnsException(1003)\nCGNS_NoFileName = cgnsException(1004)\nCGNS_BadADFstatus = cgnsException(1005)\nCGNS_BadADFformat = cgnsException(1006)\nCGNS_NotConnected = cgnsException(1100)\nCGNS_NoSuchBase = cgnsException(1101)\nCGNS_AbsolutePathRequired = cgnsException(1102)\nCGNS_NoSuchZone = cgnsException(1103)\nCGNS_NoSuchArray = cgnsException(1104)\nCGNS_NoSuchUserData = cgnsException(1105)\nCGNS_NoSuchFlowSolution = cgnsException(1106)\nCGNS_NoSuchBoundary = cgnsException(1107)\nCGNS_FileShouldBeReadable = cgnsException(1110)\nCGNS_GotoPathNotFound = cgnsException(1901)\nCGNS_BadType = cgnsException(1200)\nCGNS_BadOpenMode = cgnsException(1201)\nCGNS_BadErrorCode = cgnsException(1202)\nCGNS_BadMassUnit = cgnsException(1203)\nCGNS_BadLengthUnit = cgnsException(1204)\nCGNS_BadTimeUnit = cgnsException(1205)\nCGNS_BadTemperatureUnit = cgnsException(1206)\nCGNS_BadAngleUnit = cgnsException(1207)\nCGNS_BadDataClass = cgnsException(1208)\nCGNS_BadGridLocation = cgnsException(1209)\nCGNS_BadBCDataType = cgnsException(1210)\nCGNS_BadGridConnectivityType = cgnsException(1211)\nCGNS_BadPointSetType = cgnsException(1212)\nCGNS_BadGoverningType = cgnsException(1213)\nCGNS_BadModelType = cgnsException(1214)\nCGNS_BadBCType = cgnsException(1215)\nCGNS_BadDataType = cgnsException(1216)\nCGNS_BadElementType = cgnsException(1217)\nCGNS_BadZoneType = cgnsException(1218)\nCGNS_BadRigidGridMotionType = cgnsException(1219)\nCGNS_BadArbitraryGridMotionType = cgnsException(1220)\nCGNS_BadSimulationType = cgnsException(1221)\nCGNS_BadWallFunctionType = cgnsException(1222)\nCGNS_BadAreaType = cgnsException(1223)\nCGNS_BadAverageInterfaceType = cgnsException(1224)\n\n# -----------------------------------------------------------------------------\n'"
lib/freeze.py,0,"b'#  -------------------------------------------------------------------------\r\n#  pyCGNS - Python package for CFD General Notation System -\r\n#  See license.txt file in the root directory of this Python module source  \r\n#  -------------------------------------------------------------------------\r\n#\r\n# Posted by Cacasodo (http://www.techanswerguy.com)\r\n# creating a transparent favicon.ico with Gimp\r\n#I\'m always forgetting the steps to do this properly. Here you go:\r\n#1) open a favorite image that you\'d like to turn into a favicon to appear in your browser\'s location bar\r\n#2) click Image->Mode->RGB\r\n#3) using the erase tool, erase any areas of the graphic that you\'d like to be transparent\r\n#4) using Image->Scale, resize the image to 32x32, the proper size for a favicon\r\n#5) first save the file as a GIF\r\n#- Gimp will popup a dialog that says ""GIF can only handle grayscale or indexed images""\r\n#6) select * Convert to Indexed using default settings\r\n#7) click Export\r\n#8) save a copy as .ico. It will give you a number of choices for bits/pixel:\r\n#1 bpp, 1 bit alpha, 2-slot palette\r\n#4 bpp, 1 bit alpha, 16-slot palette\r\n#8 bpp, 1 bit alpha, 256-slot palette\r\n#32 bpp, 8 bit alpha, no palette\r\n#\r\n#Choose 4bpp. However, I have seen with some images that 8bpp needs to be used.\r\n#9) upload to your website and enjoy!\r\nfrom __future__ import unicode_literals\r\nfrom __future__ import print_function\r\nimport sys\r\nimport glob\r\n\r\nfrom cx_Freeze import setup, Executable\r\nimport cx_Freeze\r\nprint(cx_Freeze.__file__)\r\n\r\ndf=glob.glob(\'demo/*\')+glob.glob(\'demo/124Disk-PASS/*\')+glob.glob(\'demo/124Disk-FAIL/*\')+glob.glob(\'demo/DPW5/*\')\r\ndemo_files=[(f,f) for f in df]\r\n\r\n# Dependencies are automatically detected, but it might need fine tuning.\r\nbuild_exe_options = {\r\n""packages"": [""os"",""sys"",""numpy"",""vtk"",""qtpy"",""qtpy.QtCore"",""qtpy.QtGui"",""qtpy.QtWidgets"",\r\n             ""CGNS.NAV"",""CGNS.MAP"",""CGNS.PAT"",""CGNS.VAL"",""CGNS.APP"",\r\n             ""numpy.core.multiarray""\r\n], \r\n""excludes"": [""tkinter"",""tcl"",""tk8.5"",""PySide"",""PySide.QtCore"",""PySide.QtGui"",\r\n],\r\n""include_files"": [""license.txt"",\r\nr""C:\\Users\\D589055\\Documents\\I\\Lib\\site-packages\\pyCGNS-4.7.571-py2.7-win-amd64.egg"",\r\n#r""D:\\poinot\\AppData\\Local\\Continuum\\Anaconda\\Lib\\site-packages\\pyCGNS-4.6.561-py2.7-win-amd64.egg"",\r\n#r""D:\\poinot\\AppData\\Local\\Continuum\\Anaconda\\Lib"",\r\n#r""D:\\poinot\\AppData\\Local\\Continuum\\Anaconda\\DLLs"",\r\n""lib/pyCGNS.ico"",\r\n""lib/pyCGNS-wizard.bmp"",\r\n""lib/pyCGNS-small.ico"",\r\n""lib/pyCGNS-wizard-small.bmp"",                  \r\n]+demo_files,\r\n""add_to_path"":True,\r\n}\r\n\r\n# GUI applications require a different base on Windows (the default is for a\r\n# console application).\r\nbase = None\r\nif (sys.platform == ""win32""):\r\n    base = ""Win32GUI""\r\n\r\n# --- pyCGNSconfig search\r\nimport os\r\nsys.path=[os.path.abspath(os.path.normpath(\'./lib\'))]+sys.path\r\nimport setuputils\r\n\r\n# ---\r\n\r\nsetup(  \r\nname = ""pyCGNS"",\r\nversion = \'4.6\',\r\ndescription  = ""pyCGNS - CGNS/Python trees navigator and editor"",\r\nauthor       = ""Marc Poinot"",\r\nauthor_email = ""marc.poinot@safrangroup.com"",\r\nlicense      = ""LGPL 2"",\r\noptions = {""build_exe"": build_exe_options,""build_msi"": build_exe_options},\r\n           executables = [Executable(""CGNS/App/tools/cg_look"",base=base)])\r\n\r\n# --- last line\r\n'"
lib/gendoc.py,0,"b'# -------------------------------------------------------------------------\n# pyCGNS - Python package for CFD General Notation System -\n# See license.txt file in the root directory of this Python module source  \n# -------------------------------------------------------------------------\n#\n# this script doesn\'t need to be used for every doc update, run it once\n# using :\n#   python lib/gendoc.py > doc/mods/PAT/cgnstypes.txt\n#\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nimport CGNS.PAT.cgnstypes\n\nnzero = [CGNS.PAT.cgnstypes.C_11, CGNS.PAT.cgnstypes.C_1N, CGNS.PAT.cgnstypes.C_NN]\n\n\ndef gentype2(t):\n    s = ""\\n-----\\n\\n.. _X%s:\\n\\n%s\\n%s\\n"" % (t.type, t.type, len(t.type) * \'-\')\n    for nt in t.names:\n        if (nt == \'{UserDefined}\'):\n            s += ""\\n :Name: %s "" % nt\n        else:\n            s += ""\\n :Name: **%s** "" % nt\n    for c in t.parents:\n        s += ""\\n :Parent: :ref:`%s <X%s>` "" % (c, c)\n    dtf = False\n    for dt in t.datatype:\n        if dt != \'LK\':\n            if not dtf:\n                s += ""\\n :DataType: ""\n                dtf = True\n            s += "" "" + dt\n    if t.enumerate:\n        s += ""\\n :Enumerate: ""\n    for c in t.children:\n        for cn in c[1]:\n            cc = t.cardinality(c[0])\n            if ((cn != \'{UserDefined}\') and (t.cardinality(c[0]) not in nzero)):\n                s += ""\\n :Child: **%s** :ref:`%s <X%s>` (%s)"" % (cn, c[0], c[0], cc)\n            else:\n                s += ""\\n :Child: %s :ref:`%s <X%s>` (%s)"" % (cn, c[0], c[0], cc)\n    s += ""\\n""\n    return s\n\n\ndef gentype(t):\n    s = ""\\n-----\\n\\n.. _X%s:\\n\\n%s\\n%s\\n"" % (t.type, t.type, len(t.type) * \'-\')\n    s += ""\\n * Name: ""\n    for nt in t.names:\n        s += ""\\n\\n   - %s "" % nt\n    s += ""\\n\\n * Data-type: ""\n    for dt in t.datatype:\n        if dt != \'LK\':\n            s += "" "" + dt\n    if t.enumerate:\n        s += ""\\n * Enumerate: ""\n    s += ""\\n * Cardinality: %s"" % t.cardinality\n    s += ""\\n * Children\\n""\n    for c in t.children:\n        s += ""\\n   - :ref:`%s <X%s>` (%s)"" % (c[0], c[0], c[1])\n    s += ""\\n\\n * Parents\\n""\n    for c in t.parents:\n        s += ""\\n   - :ref:`%s <X%s>` "" % (c, c)\n    s += ""\\n""\n    return s\n\n\ndef gentypes():\n    s = """"\n    ct = CGNS.PAT.cgnstypes.types.keys()\n    ct.sort()\n    for c in ct:\n        s += gentype2(CGNS.PAT.cgnstypes.types[c])\n    return s\n\n\nprint(gentypes())\n\n# --- last line\n'"
lib/pyCGNSconfig_default.py,0,"b'#  -------------------------------------------------------------------------\r\n#  pyCGNS - Python package for CFD General Notation System -\r\n#  See license.txt file in the root directory of this Python module source  \r\n#  -------------------------------------------------------------------------\r\n# \r\n# Default values, would be overwritten during install\r\n#\r\nfrom __future__ import unicode_literals\r\nimport sys\r\n\r\n# --------------------------------------------------------------------\r\ndef pathfromexec(execname):\r\n    import os\r\n    for pth in os.environ[\'PATH\']:\r\n        apth = os.path.normpath(os.path.expanduser(pth))\r\n        if os.path.exists(apth + \'/\' + execname): return pth\r\n    return \'\'\r\n\r\n\r\nmylocal = sys.prefix\r\n\r\n# --------------------------------------------------------------------\r\nINCLUDE_DIRS = [\'%s/include\' % mylocal]\r\nLIBRARY_DIRS = [\'%s/lib\' % mylocal]\r\n\r\n# Use integers instead of booleans, values are used in C files\r\nHAS_H5PY = 0\r\nHAS_HDF5 = 1\r\n\r\ntry:\r\n    import vtk\r\n    from CGNS.NAV.wvtk import Q7VTK\r\n    HAS_VTK = 1\r\nexcept ImportError:\r\n    HAS_VTK = 0\r\n\r\nHAS_PY3 = 1\r\nHAS_PY2 = 0\r\nHAS_MSW = 0\r\n\r\nhdf5path = pathfromexec(\'h5dump\')\r\nHDF5_VERSION = \'1.8\'\r\nHDF5_PATH_INCLUDES = [hdf5path + \'../include\']\r\nHDF5_PATH_LIBRARIES = [hdf5path + \'../lib\']\r\nHDF5_LINK_LIBRARIES = [\'hdf5\']\r\nHDF5_EXTRA_ARGS = []\r\n\r\nNUMPY_VERSION = \'\'\r\nNUMPY_VERSION_API = \'\'\r\nNUMPY_PATH_INCLUDES = []\r\nNUMPY_PATH_LIBRARIES = []\r\nNUMPY_LINK_LIBRARIES = []\r\nNUMPY_EXTRA_ARGS = []\r\n\r\nPYQT_VERSION = \'\'\r\nQT_VERSION = \'\'\r\nCYTHON_VERSION = \'\'\r\nVTK_VERSION = \'\'\r\n\r\n# cannot manage include orders here...\r\nINCLUDE_DIRS = INCLUDE_DIRS + HDF5_PATH_INCLUDES \\\r\n                + NUMPY_PATH_INCLUDES\r\nLIBRARY_DIRS += LIBRARY_DIRS + HDF5_PATH_LIBRARIES \\\r\n                + NUMPY_PATH_LIBRARIES\r\n#\r\n# -------------------------------------------------------------------------\r\n# You should not change values beyond this point\r\n#\r\nPFX = \'### pyCGNS:\'\r\n#\r\n__version__=5 # @@UPDATEVERSION@@\r\n__release__=0 # @@UPDATERELEASE@@\r\n__revision__=625 # @@UPDATEREVISION@@\r\n__vid__ = ""%s.%s.%s"" % (__version__, __release__, __revision__)\r\n__doc__ = """"""pyCGNS - %s - Python package for CFD General Notation System"""""" \\\r\n          % (__vid__)\r\nversion = __vid__\r\n#\r\nREVISION = __revision__\r\n#\r\nfile_pattern = """"""#  -------------------------------------------------------------------------\r\n#  pyCGNS - Python package for CFD General Notation System\r\n#  See license.txt file in the root directory of this Python module source  \r\n#  -------------------------------------------------------------------------\r\n# This file has been generated on [%(DATE)s]\r\n# Using platform [%(PLATFORM)s]\r\n\r\nDATE=\'%(DATE)s\'\r\nPLATFORM=\'%(PLATFORM)s\'\r\nPFX=\'%(PFX)s\'\r\n\r\nHAS_HDF5=%(HAS_HDF5)s\r\nHAS_H5PY=%(HAS_H5PY)s\r\nHAS_PY2=%(HAS_PY2)s\r\nHAS_PY3=%(HAS_PY3)s\r\nHAS_VTK=%(HAS_VTK)s\r\nHAS_MSW=%(HAS_MSW)s\r\n\r\nINCLUDE_DIRS=%(INCLUDE_DIRS)s\r\nLIBRARY_DIRS=%(LIBRARY_DIRS)s\r\n\r\nHDF5_VERSION=\'%(HDF5_VERSION)s\'\r\nHDF5_PATH_INCLUDES=%(HDF5_PATH_INCLUDES)s\r\nHDF5_PATH_LIBRARIES=%(HDF5_PATH_LIBRARIES)s\r\nHDF5_LINK_LIBRARIES=%(HDF5_LINK_LIBRARIES)s\r\nHDF5_EXTRA_ARGS=%(HDF5_EXTRA_ARGS)s\r\n\r\nNUMPY_VERSION=\'%(NUMPY_VERSION)s\'\r\nNUMPY_VERSION_API=\'%(NUMPY_VERSION_API)s\'\r\nNUMPY_PATH_INCLUDES=%(NUMPY_PATH_INCLUDES)s\r\nNUMPY_PATH_LIBRARIES=%(NUMPY_PATH_LIBRARIES)s\r\nNUMPY_LINK_LIBRARIES=%(NUMPY_LINK_LIBRARIES)s\r\nNUMPY_EXTRA_ARGS=%(NUMPY_EXTRA_ARGS)s\r\n\r\nPYQT_VERSION=\'%(PYQT_VERSION)s\'\r\nQT_VERSION=\'%(QT_VERSION)s\'\r\nCYTHON_VERSION=\'%(CYTHON_VERSION)s\'\r\nVTK_VERSION=\'%(VTK_VERSION)s\'\r\n\r\n__version__=5 # @@UPDATEVERSION@@\r\n__release__=0 # @@UPDATERELEASE@@\r\n__revision__=625 # @@UPDATEREVISION@@\r\n__vid__=""%%s.%%s.%%s""%%(__version__,__release__,__revision__)\r\n__doc__=\'pyCGNS - %%s - Python package for CFD General Notation System\'\\\r\n        %%(__vid__)\r\nversion=__vid__\r\n\r\nNAME=\'%(NAME)s\'\r\nVERSION=__vid__\r\nDESCRIPTION=__doc__\r\nAUTHOR=\'%(AUTHOR)s\'\r\nEMAIL=""%(EMAIL)s""\r\nLICENSE=""%(LICENSE)s""\r\n\r\n""""""\r\n#\r\n\r\n# common meta data\r\nNAME = \'pyCGNS\'\r\nVERSION = __vid__\r\nDESCRIPTION = __doc__\r\nAUTHOR = \'Marc Poinot\'\r\nEMAIL = ""marc.poinot@safrangroup.com""\r\nLICENSE = ""LGPL 2""\r\nURL = ""https://github.com/pyCGNS/pyCGNS""\r\n\r\n# --- last line\r\n'"
lib/setuputils.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\n\n# --------------------------------------------------------------------\nMAJOR_VERSION = 5\nMINOR_VERSION = 0\nREVISION = 1\n# --------------------------------------------------------------------\n\nimport os\nimport platform\nimport sys\nimport shutil\nimport re\nimport time\nimport subprocess\nimport distutils.util\n\nfrom distutils.dir_util import remove_tree\nfrom distutils.core import setup\nfrom distutils.util import get_platform\nfrom distutils.command.clean import clean as _clean\n\n\nrootfiles = [\'__init__.py\', \'errors.py\', \'version.py\', \'config.py\', \'test.py\']\ncompfiles = []\n\npfx = \'#\'\ndef line(msg=""""):\n    print(""{} {}"".format(pfx, ""-"" * 70))\n    if msg:\n        print(""{} --- {}"".format(pfx, msg))\n\ndef log(msg):\n    print(""{} {}"".format(pfx, msg))\n\n# if you change this name, also change lines tagged with \'USER CONFIG\'\nuserconfigfile = \'setup_userConfig.py\'\n\nclass ConfigException(Exception):\n    pass\n\ndef is_windows():\n    if sys.platform == \'win32\':\n        return 1\n    else:\n        return 0\n\ndef is_python3():\n    if sys.version_info[0] < 3:\n        return 0\n    else:\n        return 1\n\n\n# Please leave integers here, these will be used in the SIDS-to-Python C code\nHAS_MSW = is_windows()\nHAS_PY3 = is_python3()\nif HAS_PY3:\n    HAS_PY2 = 0\nelse:\n    HAS_PY2 = 1\n\ndef fix_path(path):\n    """"""All paths should be POSIX paths. Translation is required only for windows.""""""\n    if is_windows():\n        return path.replace(\'/\',\'\\\\\') # os.sep useless here\n    else:\n        return path\n        \n# --------------------------------------------------------------------\ndef prodtag():\n    from time import gmtime, strftime\n    proddate = strftime(""%Y-%m-%d %H:%M:%S"", gmtime())\n    try:\n        prodhost = platform.uname()\n    except AttributeError:\n        prodhost = (\'???\', \'???\', \'???\')\n    return (proddate, prodhost)\n\n# http://stackoverflow.com/questions/377017/test-if-executable-exists-in-python\ndef which(program):\n    import os\n    def is_exe(fpath):\n        return os.path.isfile(fpath) and os.access(fpath, os.X_OK)\n\n    fpath, fname = os.path.split(program)\n    if fpath:\n        if is_exe(program):\n            return program\n    else:\n        for path in os.environ[""PATH""].split(os.pathsep):\n            path = path.strip(\'""\')\n            exe_file = os.path.join(path, program)\n            if is_exe(exe_file):\n                return exe_file\n            w_exe_file = exe_file + \'.exe\'\n            if is_exe(w_exe_file):\n                return w_exe_file\n            b_exe_file = exe_file + \'.bat\'\n            if is_exe(b_exe_file):\n                return b_exe_file\n\n    return None\n\n# --------------------------------------------------------------------\ndef unique_but_keep_order(lst):\n    if len(lst) < 2:\n        return lst\n    r = [lst[0]]\n    for p in lst[1:]:\n        if p not in r:\n            r.append(p)\n    return r\n\n# --------------------------------------------------------------------\ndef search(incs, libs, tag=\'pyCGNS\',\n           deps=[\'Cython\', \'HDF5\', \'numpy\', \'vtk\', \'qtpy\']):\n    state = 1\n    for com in sys.argv:\n        if com in [\'help\', \'clean\']: state = 0\n    pt = distutils.util.get_platform()\n    vv = ""%d.%d"" % (sys.version_info[0], sys.version_info[1])\n    tg = ""%s/./build/lib.%s-%s/CGNS"" % (os.getcwd(), pt, vv)\n    bptarget = tg\n    if (not os.path.exists(bptarget)): os.makedirs(bptarget)\n    oldsyspath = sys.path\n    sys.path = [os.path.abspath(os.path.normpath(\'./lib\'))]\n    cfgdict = {}\n    import pyCGNSconfig_default as C_D\n    sys.path = oldsyspath\n    for ck in dir(C_D):\n        if ck[0] != \'_\':\n            cfgdict[ck] = C_D.__dict__[ck]\n    pg = prodtag()\n    cfgdict[\'PFX\'] = pfx\n    cfgdict[\'DATE\'] = pg[0]\n    cfgdict[\'PLATFORM\'] = ""%s %s %s"" % (pg[1][0], pg[1][1], pg[1][-1])\n    cfgdict[\'HAS_PY2\'] = HAS_PY2\n    cfgdict[\'HAS_PY3\'] = HAS_PY3\n    cfgdict[\'HAS_MSW\'] = HAS_MSW\n    updateConfig(\'..\', bptarget, cfgdict)\n    sys.path = [bptarget] + sys.path\n\n    # here we go, check each dep and add incs/libs/others to config\n    try:\n        import pyCGNSconfig as C\n\n        # -----------------------------------------------------------------------\n        C.COM_UIC = \'true\'\n        C.COM_RCC = \'true\'\n        C.COM_CYTHON = \'true\'        \n        if (\'Cython\' in deps):\n            try:\n                if (which(\'cython\') is not None):\n                    C.COM_CYTHON = \'cython\'\n                else:\n                    raise Exception\n                if (which(\'pyuic\') is not None):  C.COM_UIC = \'pyuic\'\n                if (which(\'pyrcc\') is not None):  C.COM_RCC = \'pyrcc\'\n                if (which(\'pyuic5\') is not None): C.COM_UIC = \'pyuic5\'\n                if (which(\'pyrcc5\') is not None): C.COM_RCC = \'pyrcc5\'\n                import Cython\n                C.HAS_CYTHON = True\n                log(\'found Cython v%s\' % Cython.__version__)\n                log(\'using Cython from {}\'.format(os.path.dirname(Cython.__file__)))\n                C.HAS_CYTHON_2PLUS = False\n                C.CYTHON_VERSION = Cython.__version__\n                try:\n                    if (float(Cython.__version__[:3]) > 0.1):\n                        C.HAS_CYTHON_2PLUS = True\n                    else:\n                        log(\'***** SKIP Cython version cannot build CGNS\')\n                except:\n                    log(\'***** SKIP Cython version cannot build CGNS\')\n            except:\n                C.HAS_CYTHON = False\n                log(\'***** FATAL: Cython not found\')\n\n        # -----------------------------------------------------------------------\n        if (\'qtpy\' in deps):\n            try:\n                import qtpy\n                import qtpy.QtCore\n                import qtpy.QtGui\n                import qtpy.QtWidgets\n\n                C.HAS_QTPY = True\n                log(\'found qtpy v{}\'.format(qtpy.__version__))\n                log(\'using qtpy from {}\'.format(os.path.dirname(qtpy.__file__)))\n                log(\'using qtpy with Qt v{}\'.format(qtpy.QtCore.__version__))\n                C.PYQT_VERSION = str(qtpy.__version__)\n                C.QT_VERSION = str(qtpy.QtCore.__version__)\n            except:\n                C.HAS_QTPY = False\n                log(\'***** SKIP NAV: qtpy not found\')\n\n        # -----------------------------------------------------------------------\n        if (\'vtk\' in deps):\n            try:\n                import vtk\n                v = vtk.vtkVersion()\n                C.HAS_VTK = True\n                log(\'found vtk (python module) v%s\' % v.GetVTKVersion())\n                C.VTK_VERSION = v.GetVTKVersion()\n            except:\n                C.HAS_VTK = False\n                log(\'***** SKIP NAV/VTK: no vtk python module\')\n\n        # -----------------------------------------------------------------------\n        if (\'h5py\' in deps):\n            log(\'using h5py alternate implementation for CGNS.MAP\')\n            try:\n                import warnings\n                warnings.simplefilter(action=\'ignore\', category=FutureWarning)\n                import h5py\n                v = h5py.version.version\n                C.HDF5_VERSION = h5py.version.hdf5_version\n                log(\'found h5py (python module) v{}\'.format(h5py.version.version))\n                log(\'using HDF5 v{}\'.format(C.HDF5_VERSION))\n                C.HAS_H5PY = 1\n            except:\n                log(\'***** FATAL: setup cannot find h5py and its HDF5\')\n                sys.exit(1)\n\n        # -----------------------------------------------------------------------\n        if (\'numpy\' in deps):\n            incs = incs + C.NUMPY_PATH_INCLUDES\n            libs = libs + C.NUMPY_PATH_LIBRARIES\n            tp = find_numpy(incs, libs, C.NUMPY_LINK_LIBRARIES)\n            if (tp is None):\n                log(\'***** FATAL: setup cannot find Numpy\')\n                sys.exit(1)\n            (C.NUMPY_VERSION,\n             C.NUMPY_VERSION_API,\n             C.NUMPY_PATH_INCLUDES,\n             C.NUMPY_PATH_LIBRARIES,\n             C.NUMPY_LINK_LIBRARIES,\n             C.NUMPY_EXTRA_ARGS) = tp\n            log(\'found Numpy version %s\' % (C.NUMPY_VERSION,))\n            log(\'using Numpy API version %s\' % (C.NUMPY_VERSION_API,))\n            log(\'using Numpy headers from %s\' % (C.NUMPY_PATH_INCLUDES[0]))\n            C.HAS_NUMPY = True\n            incs = incs + C.NUMPY_PATH_INCLUDES\n            libs = libs + C.NUMPY_PATH_LIBRARIES\n\n        # -----------------------------------------------------------------------\n        if (\'HDF5\' in deps):\n            log(\'using HDF5 raw C API implementation for CGNS.MAP\')\n            try:\n                import pkgconfig\n            except ImportError:\n                log(\'Failed to import pkgconfig\')\n                class pkgconfig(object):\n                    @classmethod\n                    def exists(cls, name):\n                        return False\n            try:\n               if pkgconfig.exists(\'hdf5\'):\n                   log(\'Using pkgconfig for HDF5 detection\')\n                   pkgcfg = pkgconfig.parse(""hdf5"")\n                   incs = incs + pkgcfg[\'include_dirs\']\n                   libs = libs + pkgcfg[\'library_dirs\']\n            except EnvironmentError:\n                pass\n            hdf5_ci = os.environ.get(\'HDF5_DIR\')\n            if hdf5_ci is not None:\n               log(\'Using HDF5_DIR environment variable\')\n               incs = incs + [os.path.join(hdf5_ci, \'include\'),]\n               libs = libs + [os.path.join(hdf5_ci, \'lib\'),]\n            incs = incs + C.HDF5_PATH_INCLUDES + C.INCLUDE_DIRS\n            libs = libs + C.HDF5_PATH_LIBRARIES + C.LIBRARY_DIRS\n            tp = find_HDF5(incs, libs, C.HDF5_LINK_LIBRARIES)\n            if (tp is None):\n                log(\'***** FATAL: setup cannot find HDF5\')\n                sys.exit(1)\n            (C.HDF5_VERSION,\n             C.HDF5_PATH_INCLUDES,\n             C.HDF5_PATH_LIBRARIES,\n             C.HDF5_LINK_LIBRARIES,\n             C.HDF5_EXTRA_ARGS,\n             C.HDF5_HST,\n             C.HDF5_H64,\n             C.HDF5_HUP,\n             C.HDF5_PARALLEL) = tp\n            log(\'found HDF5 %s\' % (C.HDF5_VERSION,))\n            log(\'using HDF5 headers from %s\' % (C.HDF5_PATH_INCLUDES[0]))\n            log(\'using HDF5 libs from %s\' % (C.HDF5_PATH_LIBRARIES[0]))\n            if C.HDF5_PARALLEL:\n                log(\'using HDF5 parallel version (cython uses $MPICC)\')\n            C.HAS_HDF5 = True\n            C.HAS_H5PY = 0\n            incs = incs + C.HDF5_PATH_INCLUDES + C.INCLUDE_DIRS\n            libs = libs + C.HDF5_PATH_LIBRARIES + C.LIBRARY_DIRS\n\n            # ---------------------------------------------------------------------\n\n    except ImportError:\n        log(\'***** FATAL: setup cannot find pyCGNSconfig.py file!\')\n        sys.exit(1)\n    C.HDF5_PATH_INCLUDES = list(set(C.HDF5_PATH_INCLUDES))\n    C.HDF5_PATH_LIBRARIES = list(set(C.HDF5_PATH_LIBRARIES))\n    C.NUMPY_PATH_INCLUDES = list(set(C.NUMPY_PATH_INCLUDES))\n    C.NUMPY_PATH_LIBRARIES = list(set(C.NUMPY_PATH_LIBRARIES))\n\n    incs = unique_but_keep_order(incs)\n    libs = unique_but_keep_order(libs)\n\n    C.INCLUDE_DIRS = incs\n    C.LIBRARY_DIRS = libs\n\n    C.PRODUCTION_DIR = bptarget\n\n    updateConfig(\'..\', bptarget, C.__dict__, cfgdict)\n\n    return (C, state)\n\n\n# --------------------------------------------------------------------\ndef installConfigFiles(bptarget):\n    lptarget = \'.\'\n    for ff in rootfiles:\n        shutil.copy(""%s/lib/%s"" % (lptarget, ff), ""%s/%s"" % (bptarget, ff))\n    for ff in compfiles:\n        shutil.copy(""%s/lib/compatibility/%s"" % (lptarget, ff), ""%s/%s"" % (bptarget, ff))\n\n\n# --------------------------------------------------------------------\ndef updateVersionInFile(filename, cfg):\n    f = open(\'{}/revision.tmp\'.format(cfg.PRODUCTION_DIR))\n    r = int(f.readlines()[0][:-1])\n    REVISION = r\n    f = open(filename, \'r\')\n    l = f.readlines()\n    f.close()\n    vver = \'@@UPDATEVERSION@@\'\n    vrel = \'@@UPDATERELEASE@@\'\n    vrev = \'@@UPDATEREVISION@@\'\n    r = []\n    for ll in l:\n        rl = ll\n        if (ll[-len(vver) - 1:-1] == vver):\n            rl = \'__version__=%s # %s\\n\' % (MAJOR_VERSION, vver)\n        if (ll[-len(vrel) - 1:-1] == vrel):\n            rl = \'__release__=%s # %s\\n\' % (MINOR_VERSION, vrel)\n        if (ll[-len(vrev) - 1:-1] == vrev):\n            ACTUALREV = REVISION\n            rl = \'__revision__=%s # %s\\n\' % (ACTUALREV, vrev)\n        r += [rl]\n    f = open(filename, \'w+\')\n    f.writelines(r)\n    f.close()\n    cfg.REVISION = REVISION\n\n# --------------------------------------------------------------------\n# Clean target redefinition - force clean everything\nrelist = [r\'^.*~$\', r\'^core\\.*$\', r\'^pyCGNS\\.log\\..*$\',\n          r\'^#.*#$\', r\'^.*\\.aux$\', r\'^.*\\.pyc$\', r\'^.*\\.bak$\', r\'^.*\\.l2h\',\n          r\'^Output.*$\']\nreclean = []\n\nfor restring in relist:\n    reclean.append(re.compile(restring))\n\n\ndef wselect(args, dirname, names):\n    for n in names:\n        for rev in reclean:\n            if (rev.match(n)):\n                # print ""%s/%s""%(dirname,n)\n                os.remove(""%s/%s"" % (dirname, n))\n                break\n\n\nclass clean(_clean):\n    def run(self):\n        import glob\n        rdirs = glob.glob(""./build/*"")\n        for d in rdirs: remove_tree(d)\n        if os.path.exists(""./build""):     remove_tree(""./build"")\n        if os.path.exists(""./Doc/_HTML""): remove_tree(""./Doc/_HTML"")\n        if os.path.exists(""./Doc/_PS""):   remove_tree(""./Doc/_PS"")\n        if os.path.exists(""./Doc/_PDF""):  remove_tree(""./Doc/_PDF"")\n\n\n# --------------------------------------------------------------------\ndef confValueAsStr(v):\n    if (type(v) == type((1,))): return str(v)\n    if (type(v) == type([])):   return str(v)\n    if (v in [True, False]):\n        return str(v)\n    else:\n        return \'""%s""\' % str(v)\n\n\n# --------------------------------------------------------------------\ndef updateConfig(pfile, gfile, config_default, config_previous=None):\n    if (config_previous):\n        from pyCGNSconfig_default import file_pattern as fpat\n        cfg = config_default\n        for ck in config_previous:\n            if ck not in cfg:\n                cfg[ck] = config_previous[ck]\n        log(""+++++ update pyCGNSconfig.py file"")\n        os.unlink(""%s/pyCGNSconfig.py"" % (gfile))\n        f = open(""%s/pyCGNSconfig.py"" % (gfile), \'w+\')\n        f.writelines(fpat % cfg)\n        f.close()\n        return\n    elif (not os.path.exists(""%s/pyCGNSconfig.py"" % (gfile))):\n        log(""+++++ create new pyCGNSconfig.py file"")\n        newconf = 1\n    else:\n        f1 = os.stat(""%s/pyCGNSconfig.py"" % (gfile))\n        if (os.path.exists(""%s/%s"" % (pfile, userconfigfile))):\n            f2 = os.stat(""%s/%s"" % (pfile, userconfigfile))\n        else:\n            f2 = os.stat(""./%s"" % userconfigfile)\n        if (f1.st_mtime < f2.st_mtime):\n            newconf = 1\n            log(""using modified %s file"" % userconfigfile)\n        else:\n            newconf = 0\n            log(""using existing %s file"" % userconfigfile)\n    if newconf:\n        sys.path = [\'..\'] + [\'.\'] + sys.path\n        import setup_userConfig as UCFG  # USER CONFIG\n        for ck in dir(UCFG):\n            if (ck[0] != \'_\'): config_default[ck] = UCFG.__dict__[ck]\n        if (not os.path.exists(\'%s\' % gfile)):\n            os.makedirs(\'%s\' % gfile)\n        f = open(""%s/pyCGNSconfig.py"" % (gfile), \'w+\')\n        f.writelines(config_default[\'file_pattern\'] % config_default)\n        f.close()\n\n\n# --------------------------------------------------------------------\ndef frompath_HDF5():\n    h5p = which(""h5dump"")\n    if h5p is not None:\n        h5root = \'/\'.join(h5p.split(\'/\')[:-2])\n    else:\n        h5root = \'/usr/local\'\n    return h5root\n\ndef guess_path_python():\n    return os.path.dirname(sys.executable)\n\n# --------------------------------------------------------------------\ndef find_HDF5(pincs, plibs, libs):\n    notfound = 1\n    extraargs = []\n    vers = \'\'\n    h5root = frompath_HDF5()\n    pincs += [h5root, \'%s/include\' % h5root]\n    if sys.platform == \'win32\':\n        pth = guess_path_python()\n        pincs += [h5root, \'{}\\\\Library\\\\include\'.format(pth)]\n    plibs += [h5root, \'%s/lib64\' % h5root]\n    plibs += [h5root, \'%s/lib\' % h5root]\n    if sys.platform == \'win32\':\n        pth = guess_path_python()\n        plibs += [h5root, \'{}\\\\Library\\\\lib\'.format(pth)]\n    pincs = unique_but_keep_order(pincs)\n    plibs = unique_but_keep_order(plibs)\n    for pth in plibs:\n        if ((os.path.exists(pth + \'/libhdf5.a\'))\n            or (os.path.exists(pth + \'/libhdf5.so\'))\n            or (os.path.exists(pth + \'/libhdf5.lib\'))\n            or (os.path.exists(pth + \'/libhdf5.sl\'))):\n            notfound = 0\n            plibs = [pth]\n            break\n    if notfound:\n        log(""***** FATAL: libhdf5 not found, please check paths:"")\n        for ppl in plibs:\n            print(pfx, ppl)\n    notfound = 1\n    for pth in pincs:\n        if (os.path.exists(pth + \'/hdf5.h\')): notfound = 0\n    if notfound:\n        log(""***** FATAL: hdf5.h not found, please check paths"")\n        for ppi in pincs:\n            print(pfx, ppi)\n        return None\n\n    ifh = \'HDF5 library version: unknown\'\n    notfound = 1\n    for pth in pincs:\n        if (os.path.exists(pth + \'/H5public.h\')):\n            fh = open(pth + \'/H5public.h\', \'r\')\n            fl = fh.readlines()\n            fh.close()\n            found = 0\n            for ifh in fl:\n                if (ifh[:21] == ""#define H5_VERS_INFO ""):\n                    vers = ifh.split(\'""\')[1].split()[-1]\n                    found = 1\n            if found:\n                pincs = [pth]\n                notfound = 0\n                break\n    if notfound:\n        log(""***** FATAL: cannot find hdf5 version, please check paths"")\n        for ppi in pincs:\n            print(pfx, pincs)\n        return None\n\n    h64 = 0\n    hup = 1\n    hst = 1\n    if (os.path.exists(pth + \'/H5pubconf.h\')):\n        hup = 1\n        hst = 1\n        hfn = pth + \'/H5pubconf.h\'\n    if (os.path.exists(pth + \'/h5pubconf.h\')):\n        hup = 0\n        hst = 1\n        hfn = pth + \'/h5pubconf.h\'\n    if (os.path.exists(pth + \'/H5pubconf-64.h\')):\n        h64 = 1\n        hup = 1\n        hfn = pth + \'/H5pubconf-64.h\'\n    if (os.path.exists(pth + \'/h5pubconf-64.h\')):\n        h64 = 1\n        hup = 0\n        hfn = pth + \'/h5pubconf-64.h\'\n    has_parallel = False\n    if (os.path.exists(hfn)):\n        fh = open(hfn, \'r\')\n        fl = fh.readlines()\n        fh.close()\n        found = 0\n        for ifh in fl:\n            if (ifh[:26] == ""#define H5_HAVE_PARALLEL 1""):\n                has_parallel = True\n    return (vers, pincs, plibs, libs, extraargs, hst, h64, hup, has_parallel)\n\n# --------------------------------------------------------------------\ndef find_numpy(pincs, plibs, libs):\n    try:\n        import numpy\n    except ImportError:\n        log(""**** FATAL cannot import numpy"")\n        sys.exit(0)\n    apivers = \'\'\n    vers = numpy.version.version\n    extraargs = []\n    pdir = os.path.normpath(sys.prefix)\n    xdir = os.path.normpath(sys.exec_prefix)\n    if sys.platform == \'win32\':\n        pth = guess_path_python()\n        pincs += [\'{}\\\\Library\\\\include\'.format(pth)]\n    pincs += [\'%s/lib/python%s/site-packages/numpy/core/include\' \\\n              % (xdir, sys.version[:3])]\n    pincs += [\'%s/lib/python%s/site-packages/numpy/core/include\' \\\n              % (pdir, sys.version[:3])]\n    pincs += [numpy.get_include()]\n    notfound = 1\n    pincs = unique_but_keep_order(pincs)\n    plibs = unique_but_keep_order(plibs)\n    for pth in pincs:\n        if (os.path.exists(pth + \'/numpy/ndarrayobject.h\')):\n            fh = open(pth + \'/numpy/ndarrayobject.h\', \'r\')\n            fl = fh.readlines()\n            fh.close()\n            found = 0\n            for ifh in fl:\n                if (ifh[:20] == ""#define NPY_VERSION ""):\n                    apivers = ifh.split()[-1]\n                    found = 1\n            if found:\n                pincs = [pth]\n                notfound = 0\n                break\n        if (os.path.exists(pth + \'/numpy/_numpyconfig.h\')):\n            fh = open(pth + \'/numpy/_numpyconfig.h\', \'r\')\n            fl = fh.readlines()\n            fh.close()\n            found = 0\n            for ifh in fl:\n                if (ifh[:24] == ""#define NPY_ABI_VERSION ""):\n                    apivers = ifh.split()[-1]\n                    found = 1\n            if found:\n                pincs = [pth]\n                notfound = 0\n                break\n    if notfound:\n        log(""***** FATAL: numpy headers not found, please check your paths"")\n        log(pincs)\n        return None\n\n    return (vers, apivers, pincs, plibs, libs, extraargs)\n\n\n# --------------------------------------------------------------------\ndef touch(filename):\n    now = time.time()\n    os.utime(filename, (now, now))\n\n# --- last line\n'"
lib/test.py,0,b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\n\nfrom CGNS.MAP.test import run as MAP_test\n\nMAP_test()\n\nfrom CGNS.PAT.test import run as PAT_test\n\nPAT_test()\n\ntry:\n    from CGNS.VAL.test import run as VAL_test\n\n    VAL_test()\nexcept ImportError:\n    pass\n\ntry:\n    from CGNS.NAV.test import run as NAV_test\n\n    NAV_test()\nexcept ImportError:\n    pass\n\nfrom CGNS.APP.test import run as APP_test\n\nAPP_test()\n\n# --- last line\n'
lib/version.py,0,b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\n# actual versions number are in setuputils.py\n#\nfrom CGNS import pyCGNSconfig\n__version__ = pyCGNSconfig.__version__\n__release__ = pyCGNSconfig.__release__\n__vid__ = pyCGNSconfig.__vid__\n__doc__ = pyCGNSconfig.__doc__\nversion = __vid__\nid = __vid__\n#\n# --- last line\n'
CGNS/APP/__init__.py,0,b'#  ---------------------------------------------------------------------------\n#  pyCGNS.APP - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\npass\n#\n'
CGNS/MAP/__init__.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\n""""""\n We are changing for a full h5py implementation, default switch is in\n config: HAS_H5PY forces h5py instead of raw HDF5 C API implementation\n\n CGNS.MAP module is the interface to CGNS/HDF5 (formerly was CHLone)\n  - now all the CHLone code is embedded in CGNS.MAP (EmbeddedCHLone)\n  - you DO NOT need to install CHLone on its own\n\n  Flags: \n\n  - python does NOT have bitfiled or unseigned int that would act as\n    bit masks we have in C. So each operation on such bitfields (flags)\n    should be re-masked against the actual 32bits size of the flags,\n    which means you should always have a & flags.ALL in your operation\n""""""\n#\nfrom CGNS.pyCGNSconfig import HAS_H5PY\n\nif HAS_H5PY:\n  from .cgio import load, save, probe, flags\n\n  NONE = flags.NONE\n  ALL = flags.ALL\n  TRACE = flags.TRACE\n  FOLLOWLINKS = flags.FOLLOWLINKS\n  DEBUG = flags.DEBUG\n  NODATA = flags.NODATA\n  MERGELINKS = 0\n  COMPRESS = flags.COMPRESS\n  REVERSEDIMS = flags.REVERSEDIMS\n  OWNDATA = flags.OWNDATA\n  UPDATE = flags.UPDATE\n  DELETEMISSING = flags.DELETEMISSING\n  ALTERNATESIDS = flags.ALTERNATESIDS\n  NOTRANSPOSE = 0\n  UPDATEONLY = flags.UPDATEONLY\n  FORTRANFLAG = flags.FORTRANFLAG\n  PROPAGATE = flags.PROPAGATE\n  DEFAULT = flags.DEFAULT\n  DEFAULTS = flags.DEFAULTS\n  KEEPLIST = flags.KEEPLIST\n  CHECKSUM = flags.CHECKSUM\n\n  LKOK = flags.links.OK\n  LKFAIL = flags.links.FAIL\n  LKBADSYNTAX = flags.links.BADSYNTAX\n  LKNOFILE = flags.links.NOFILE\n  LKFILENOREAD = flags.links.FILENOREAD\n  LKNONODE = flags.links.NONODE\n  LKLOOP = flags.links.LOOP\n  LKIGNORED = flags.links.IGNORED\n  \nelse:\n  from .EmbeddedCHLone import load, save, probe\n  from .EmbeddedCHLone import CHLoneException as error\n  #\n  from . import EmbeddedCHLone as CHL\n  #\n  S2P_NONE = CHL.FNONE\n  S2P_ALL = CHL.FALL\n  S2P_TRACE = CHL.FTRACE\n  S2P_FOLLOWLINKS = CHL.FFOLLOWLINKS\n  S2P_DEBUG = CHL.FDEBUG\n  S2P_NODATA = CHL.FNODATA\n  S2P_MERGELINKS = 0\n  S2P_COMPRESS = CHL.FCOMPRESS\n  S2P_REVERSEDIMS = CHL.FREVERSEDIMS\n  S2P_OWNDATA = CHL.FOWNDATA\n  S2P_UPDATE = CHL.FUPDATE\n  S2P_DELETEMISSING = CHL.FDELETEMISSING\n  S2P_ALTERNATESIDS = CHL.FALTERNATESIDS\n  S2P_NOTRANSPOSE = 0\n  S2P_UPDATEONLY = CHL.FUPDATEONLY\n  S2P_FORTRANFLAG = CHL.FFORTRANFLAG\n  S2P_PROPAGATE = CHL.FPROPAGATE\n  S2P_DEFAULT = CHL.FDEFAULT\n  S2P_DEFAULTS = CHL.FDEFAULTS\n  S2P_KEEPLIST = CHL.FKEEPLIST\n  S2P_CHECKSUM = CHL.FCHECKSUM\n\n  S2P_LKOK = CHL.LKOK\n  S2P_LKFAIL = CHL.LKFAIL\n  S2P_LKBADSYNTAX = CHL.LKBADSYNTAX\n  S2P_LKNOFILE = CHL.LKNOFILE\n  S2P_LKFILENOREAD = CHL.LKFILENOREAD\n  S2P_LKNONODE = CHL.LKNONODE\n  S2P_LKLOOP = CHL.LKLOOP\n  S2P_LKIGNORED = CHL.LKIGNORED\n\n  NONE = CHL.FNONE\n  ALL = CHL.FALL\n  TRACE = CHL.FTRACE\n  FOLLOWLINKS = CHL.FFOLLOWLINKS\n  DEBUG = CHL.FDEBUG\n  NODATA = CHL.FNODATA\n  MERGELINKS = 0\n  COMPRESS = CHL.FCOMPRESS\n  REVERSEDIMS = CHL.FREVERSEDIMS\n  OWNDATA = CHL.FOWNDATA\n  UPDATE = CHL.FUPDATE\n  DELETEMISSING = CHL.FDELETEMISSING\n  ALTERNATESIDS = CHL.FALTERNATESIDS\n  NOTRANSPOSE = 0\n  UPDATEONLY = CHL.FUPDATEONLY\n  FORTRANFLAG = CHL.FFORTRANFLAG\n  PROPAGATE = CHL.FPROPAGATE\n  DEFAULT = CHL.FDEFAULT\n  DEFAULTS = CHL.FDEFAULTS\n  KEEPLIST = CHL.FKEEPLIST\n  CHECKSUM = CHL.FCHECKSUM\n\n  LKOK = CHL.LKOK\n  LKFAIL = CHL.LKFAIL\n  LKBADSYNTAX = CHL.LKBADSYNTAX\n  LKNOFILE = CHL.LKNOFILE\n  LKFILENOREAD = CHL.LKFILENOREAD\n  LKNONODE = CHL.LKNONODE\n  LKLOOP = CHL.LKLOOP\n  LKIGNORED = CHL.LKIGNORED\n\n# --- forward compat stuff here\n  class Flags(object):\n    pass\n\n  flags = Flags()\n  flags.links = Flags()\n\n  flags.NONE = NONE\n  flags.ALL = ALL\n  flags.TRACE = TRACE\n  flags.FOLLOWLINKS = FOLLOWLINKS\n  flags.DEBUG = DEBUG\n  flags.NODATA = NODATA\n  flags.MERGELINKS = 0\n  flags.COMPRESS = COMPRESS\n  flags.REVERSEDIMS = REVERSEDIMS\n  flags.OWNDATA = OWNDATA\n  flags.UPDATE = UPDATE\n  flags.DELETEMISSING = DELETEMISSING\n  flags.ALTERNATESIDS = ALTERNATESIDS\n  flags.NOTRANSPOSE = 0\n  flags.UPDATEONLY = UPDATEONLY\n  flags.FORTRANFLAG = FORTRANFLAG\n  flags.PROPAGATE = PROPAGATE\n  flags.DEFAULT = DEFAULT\n  flags.DEFAULTS = DEFAULTS\n  flags.KEEPLIST = KEEPLIST\n  flags.CHECKSUM = CHECKSUM\n\n  flags.links.OK = LKOK\n  flags.links.FAIL = LKFAIL\n  flags.links.BADSYNTAX = LKBADSYNTAX\n  flags.links.NOFILE = LKNOFILE\n  flags.links.FILENOREAD = LKFILENOREAD\n  flags.links.NONODE = LKNONODE\n  flags.links.LOOP = LKLOOP\n  flags.links.IGNORED = LKIGNORED\n\n\ndef flags_set(source=flags.DEFAULT, flag=flags.NONE):\n  return source | flag & flags.ALL\n\ndef flags_unset(source, flag):\n  return source & ~flag & flags.ALL\n\ndef flags_check(source, flag):\n  return source & flag == flag\n\n# --- last line\n'"
CGNS/MAP/cgio.py,0,"b'#  -------------------------------------------------------------------------\r\n#  pyCGNS - Python package for CFD General Notation System -\r\n#  See license.txt file in the root directory of this Python module source  \r\n#  -------------------------------------------------------------------------\r\n#\r\nfrom __future__ import unicode_literals\r\nimport numpy\r\nimport h5py\r\nimport os\r\n\r\nfrom ..PAT import cgnskeywords as CGK\r\nfrom ..PAT import cgnsutils as CGU\r\nfrom ..PAT import cgnserrors as CGE\r\n\r\nclass Flags(object):\r\n    pass\r\n\r\nflags = Flags()\r\nflags.NONE = 0x00000000\r\nflags.ALL = 0xFFFFFFFF\r\nflags.TRACE = 0x00000001\r\nflags.FOLLOWLINKS = 0x00000002\r\nflags.NODATA = 0x00000004\r\nflags.KEEPLIST = 0x00000008\r\nflags.MERGELINKS = 0\r\nflags.COMPRESS = 0x00000010\r\nflags.REVERSEDIMS = 0x00000020\r\nflags.OWNDATA = 0x00000040\r\nflags.UPDATE = 0x00000080\r\nflags.DEBUG = 0x00008000\r\nflags.DELETEMISSING = 0x00000100\r\nflags.ALTERNATESIDS = 0x00000200\r\nflags.NOTRANSPOSE = 0\r\nflags.UPDATEONLY = 0x00000400\r\nflags.FORTRANFLAG = 0x00000800\r\nflags.PROPAGATE = 0x00004000\r\nflags.LINKOVERRIDE = 0x00010000\r\nflags.DEFAULT = flags.FOLLOWLINKS\\\r\n              | flags.DELETEMISSING\\\r\n              | flags.OWNDATA\\\r\n              | flags.REVERSEDIMS\\\r\n              | flags.FORTRANFLAG\\\r\n              | flags.OWNDATA\\\r\n              | flags.LINKOVERRIDE\r\nflags.DEFAULTS = flags.DEFAULT\r\nflags.CHECKSUM = 0x00080000\r\n\r\nflags.links=Flags()\r\nflags.links.OK = 0x0000\r\nflags.links.FAIL = 0x0001\r\nflags.links.BADSYNTAX = 0x0002\r\nflags.links.NOFILE = 0x0004\r\nflags.links.FILENOREAD = 0x0008\r\nflags.links.NONODE = 0x0010\r\nflags.links.LOOP = 0x0020\r\nflags.links.IGNORED = 0x0040\r\nflags.links.UPDATED = 0x0080\r\n\r\ndef raiseException(code, *args):\r\n    if args:\r\n        raise MAPException((code, MAPException.mTable[code].format(args)))\r\n    else:\r\n        raise MAPException((code, MAPException.mTable[code]))\r\n\r\ndef probe(filename, path=None):\r\n    tfile = os.path.normpath(os.path.expanduser(filename))\r\n    if not os.path.isfile(tfile):\r\n        raiseException(900, tfile)\r\n    return True\r\n\r\ndef load(filename, nodata = False, maxdata = 65, subtree = \'\', follow_links = False, **kwargs):\r\n    """"""\r\n    Load a CGNS/HDF5 CGNS tree as a CGNS/Python object::\r\n\r\n      from CGNS.MAP import load\r\n      \r\n      (tree, links, paths) = load(\'cgnsfile.cgns\')\r\n\r\n    Detailed documentation about the load can be found \r\n    `here <https://pycgns.github.io/MAP/_index.html>`_, the following doc only\r\n    describes the function signature.\r\n\r\n    :arg str filename: CGNS/HDF5 file to open\r\n    :arg bool nodata: if `True` the actual node data is load only if below the `maxdata`\r\n    :arg int maxdata: if `nodata` is `True`, `maxdata` gives the threshold for loading actual data\r\n    :arg str subtree: loads only starting from the `subtree` path arg\r\n    :arg bool follow_links: If `True` follows the linked-to files (default:`False`)\r\n\r\n    :return: a tuple (tree, links, paths) see remaks below\r\n\r\n    :Remarks:\r\n      - `tree` is a Python list, the actual CGNS/Python tree created from the CGNS/HDF5 file.\r\n      - `links` is the list of linked-to files and nodes used during the `tree` creation.\r\n      - `paths` is the list of nodes paths in `tree` you have to take care of such as no-data nodes.\r\n\r\n    """"""\r\n    def _load(grp,links,paths,load_children = True):\r\n        \r\n        if grp.attrs[\'type\'] == \'LK\':\r\n            if not follow_links:\r\n                links.append([\'\',\r\n                              grp[\' file\'].value[:-1].tostring().decode(\'ascii\'),\r\n                              grp[\' path\'].value[:-1].tostring().decode(\'ascii\'),\r\n                              grp.name,\r\n                              64])\r\n                return None\r\n            else:\r\n                grp = grp[\' link\']\r\n            \r\n        node = [unicode(grp.attrs[\'name\']),\r\n                None,\r\n                [],\r\n                unicode(grp.attrs[\'label\'])\r\n                ]\r\n        \r\n        if \' data\' in grp:\r\n            dset  = grp[\' data\']\r\n            n = dset.size \r\n            if not nodata or n < maxdata:\r\n                load_data = True\r\n            else:\r\n                load_data = False\r\n                paths.append([grp.name,\r\n                              1,\r\n                              grp.attrs[\'type\'],\r\n                              dset.shape\r\n                              ])\r\n            \r\n            if load_data:\r\n                node[1] = numpy.copy(dset.value.transpose(),order = \'F\')\r\n                if grp.attrs[\'type\'] == \'C1\':\r\n                    node[1] = numpy.vectorize(chr)(node[1]).astype(numpy.dtype(\'c\'))\r\n                \r\n        if load_children:\r\n            cnames = [x for x in grp.keys() if x[0] != \' \']\r\n            for cname in cnames:\r\n                child = _load(grp[cname],links,paths)\r\n                if child is not None:\r\n                    node[2].append(child)\r\n            \r\n        return node\r\n        \r\n    links = []\r\n    paths = []\r\n    with h5py.File(filename,\'r\') as h5f:\r\n        if subtree == \'\':\r\n            tree = _load(h5f,links,paths)\r\n        else:\r\n            grp = h5f[subtree]\r\n            node = _load(grp,links,paths)\r\n            while grp.name != \'/\':\r\n                pnode = _load(grp.parent,links,paths,load_children = False)\r\n                pnode[2].append(node)\r\n                node = pnode\r\n                grp = grp.parent\r\n\r\n            tree = node\r\n        \r\n    tree[0] = u\'CGNSTree\'\r\n    tree[3] = u\'CGNSTree_t\'\r\n\r\n    return tree,links,paths\r\n\r\ndef save(filename,tree, links = [], **kwargs):\r\n    \r\n    def _cst_size_str(s,n):\r\n            \r\n        return numpy.string_(s.ljust(n,\'\\x00\'))\r\n        \r\n    def _save(grp,node):\r\n        \r\n        _cst_size_str(node[0],33)\r\n        \r\n        if node[3] == \'CGNSTree_t\':\r\n            grp.attrs[\'name\']  = _cst_size_str(\'HDF5 MotherNode\', 33)\r\n            grp.attrs[\'label\'] = _cst_size_str(\'Root Node of HDF5 File\', 33)\r\n        else:\r\n            grp.attrs[\'name\']  = _cst_size_str(node[0], 33)\r\n            grp.attrs[\'label\'] = _cst_size_str(node[3], 33)\r\n            grp.attrs[\'flags\'] = numpy.array([0],dtype = numpy.int32)\r\n            \r\n        if node[1] is None:\r\n            grp.attrs[\'type\'] = _cst_size_str(""MT"", 3)\r\n        else:\r\n            if node[1].dtype == numpy.float32:\r\n                grp.attrs[\'type\'] = _cst_size_str(""R4"", 3)\r\n            elif node[1].dtype == numpy.float64:\r\n                grp.attrs[\'type\'] = _cst_size_str(""R8"", 3)\r\n            elif node[1].dtype == numpy.int32:\r\n                grp.attrs[\'type\'] = _cst_size_str(""I4"", 3)\r\n            elif node[1].dtype == numpy.int64:\r\n                grp.attrs[\'type\'] = _cst_size_str(""I8"", 3)\r\n            elif node[1].dtype == numpy.dtype(\'|S1\'):\r\n                grp.attrs[\'type\'] = _cst_size_str(""C1"", 3)\r\n            else:\r\n                raise NotImplementedError(""unknown dtype %s""%node[1].dtype)\r\n        \r\n            data = node[1]\r\n            if node[1].dtype == numpy.dtype(\'|S1\'):\r\n                idx1 = numpy.nonzero(data != \'\')\r\n                idx2 = numpy.nonzero(data == \'\')\r\n                tmp = data.copy()\r\n                data = numpy.zeros(data.shape,dtype = numpy.int8)\r\n                data[idx1] = numpy.vectorize(ord)(tmp[idx1])\r\n                data[idx2] = 0\r\n                data = data.astype(numpy.int8)\r\n            \r\n            data = data.transpose()\r\n            grp.create_dataset(\' data\',data = data)\r\n            \r\n        \r\n        for child in node[2]:\r\n            sgrp = grp.create_group(child[0])\r\n            _save(sgrp,child)\r\n            \r\n    def _add_links(h5f,links):\r\n        \r\n        for dname,filename,rpth,lpth,n in links:\r\n            tmp = lpth.split(\'/\')\r\n            name = tmp[-1]\r\n            ppth = \'/\'.join(tmp[:-1])\r\n            \r\n            grp = h5f[ppth]\r\n            sgrp = grp.create_group(name)\r\n            \r\n            sgrp.attrs[\'name\']  = _cst_size_str(name, 33)\r\n            sgrp.attrs[\'label\'] = _cst_size_str(\'\', 33)\r\n            sgrp.attrs[\'type\'] = _cst_size_str(""LK"", 3)\r\n            \r\n            data = numpy.array([ord(x) for x in rpth+\'\\x00\'],dtype = numpy.int8)\r\n            sgrp.create_dataset(\' path\',data = data)\r\n            data = numpy.array([ord(x) for x in filename+\'\\x00\'],dtype = numpy.int8)\r\n            sgrp.create_dataset(\' file\',data = data)\r\n            sgrp[\' link\'] = h5py.ExternalLink(filename, rpth)\r\n            \r\n            assert dname == \'\'\r\n            \r\n            \r\n            \r\n    with h5py.File(filename,\'w\') as h5f:\r\n        h5f.create_dataset(\' format\', data = numpy.array([78,65,84,73,86,69,0],dtype = numpy.int8))\r\n        h5f.create_dataset(\' hdf5version\', data = numpy.array([ 72,68,70,53,32,86,101,114,115,105,111,110,32,49,46,56,46,49\r\n,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0],dtype = numpy.int8))\r\n        _save(h5f,tree)\r\n        _add_links(h5f,links)\r\n        \r\n#\r\n# --- last line\r\n'"
CGNS/NAV/Q7VTKRenderWindowInteractor.py,0,"b'""""""\nA simple VTK widget for PyQt or PySide.\nSee http://www.trolltech.com for Qt documentation,\nhttp://www.riverbankcomputing.co.uk for PyQt, and\nhttp://pyside.github.io for PySide.\n\nThis class is based on the vtkGenericRenderWindowInteractor and is\ntherefore fairly powerful.  It should also play nicely with the\nvtk3DWidget code.\n\nCreated by Prabhu Ramachandran, May 2002\nBased on David Gobbi\'s QVTKRenderWidget.py\n\nChanges by Gerard Vermeulen Feb. 2003\n Win32 support.\n\nChanges by Gerard Vermeulen, May 2003\n Bug fixes and better integration with the Qt framework.\n\nChanges by Phil Thompson, Nov. 2006\n Ported to PyQt v4.\n Added support for wheel events.\n\nChanges by Phil Thompson, Oct. 2007\n Bug fixes.\n\nChanges by Phil Thompson, Mar. 2008\n Added cursor support.\n\nChanges by Rodrigo Mologni, Sep. 2013 (Credit to Daniele Esposti)\n Bug fix to PySide: Converts PyCObject to void pointer.\n\nChanges by Greg Schussman, Aug. 2014\n The keyPressEvent function now passes keysym instead of None.\n\nChanges by Alex Tsui, Apr. 2015\n Port from PyQt4 to PyQt5.\n\nChanges by Fabian Wenzel, Jan. 2016\n Support for Python3\n""""""\nfrom __future__ import unicode_literals\ntry:\n  from builtins import (str, bytes, range, dict)\nexcept ImportError:\n  from __builtin__ import (str, bytes, range, dict)\n# Check whether a specific PyQt implementation was chosen\ntry:\n    import vtk.qt\n    PyQtImpl = vtk.qt.PyQtImpl\nexcept ImportError:\n    PyQtImpl = None\n    pass\n\n# Check whether a specific QVTKRenderWindowInteractor base\n# class was chosen, can be set to ""QGLWidget""\nQVTKRWIBase = ""QWidget""\ntry:\n    import vtk.qt\n    QVTKRWIBase = vtk.qt.QVTKRWIBase\nexcept ImportError:\n    pass\n\nif PyQtImpl is None:\n    # Autodetect the PyQt implementation to use\n    try:\n        import PyQt5\n        PyQtImpl = ""PyQt5""\n    except ImportError:\n        try:\n            import PyQt4\n            PyQtImpl = ""PyQt4""\n        except ImportError:\n            try:\n                import PySide\n                PyQtImpl = ""PySide""\n            except ImportError:\n                raise ImportError(""Cannot load either PyQt or PySide"")\n\nif PyQtImpl == ""PyQt5"":\n    if QVTKRWIBase == ""QGLWidget"":\n        from PyQt5.QtOpenGL import QGLWidget\n    from PyQt5.QtWidgets import QWidget\n    from PyQt5.QtWidgets import QSizePolicy\n    from PyQt5.QtWidgets import QApplication\n    from PyQt5.QtCore import Qt\n    from PyQt5.QtCore import QTimer\n    from PyQt5.QtCore import QObject\n    from PyQt5.QtCore import QSize\n    from PyQt5.QtCore import QEvent\nelif PyQtImpl == ""PyQt4"":\n    if QVTKRWIBase == ""QGLWidget"":\n        from PyQt4.QtOpenGL import QGLWidget\n    from PyQt4.QtGui import QWidget\n    from PyQt4.QtGui import QSizePolicy\n    from PyQt4.QtGui import QApplication\n    from PyQt4.QtCore import Qt\n    from PyQt4.QtCore import QTimer\n    from PyQt4.QtCore import QObject\n    from PyQt4.QtCore import QSize\n    from PyQt4.QtCore import QEvent\nelif PyQtImpl == ""PySide"":\n    if QVTKRWIBase == ""QGLWidget"":\n        from PySide.QtOpenGL import QGLWidget\n    from PySide.QtGui import QWidget\n    from PySide.QtGui import QSizePolicy\n    from PySide.QtGui import QApplication\n    from PySide.QtCore import Qt\n    from PySide.QtCore import QTimer\n    from PySide.QtCore import QObject\n    from PySide.QtCore import QSize\n    from PySide.QtCore import QEvent\nelse:\n    raise ImportError(""Unknown PyQt implementation "" + repr(PyQtImpl))\n\n# Define types for base class, based on string\nif QVTKRWIBase == ""QWidget"":\n    QVTKRWIBaseClass = QWidget\nelif QVTKRWIBase == ""QGLWidget"":\n    QVTKRWIBaseClass = QGLWidget\nelse:\n    raise ImportError(""Unknown base class for Q7VTKRenderWindowInteractor "" + QVTKRWIBase)\n\nimport vtk\n\nclass Q7VTKRenderWindowInteractor(QVTKRWIBaseClass):\n\n    """""" A QVTKRenderWindowInteractor for Python and Qt.  Uses a\n    vtkGenericRenderWindowInteractor to handle the interactions.  Use\n    GetRenderWindow() to get the vtkRenderWindow.  Create with the\n    keyword stereo=1 in order to generate a stereo-capable window.\n\n    The user interface is summarized in vtkInteractorStyle.h:\n\n    - Keypress j / Keypress t: toggle between joystick (position\n    sensitive) and trackball (motion sensitive) styles. In joystick\n    style, motion occurs continuously as long as a mouse button is\n    pressed. In trackball style, motion occurs when the mouse button\n    is pressed and the mouse pointer moves.\n\n    - Keypress c / Keypress o: toggle between camera and object\n    (actor) modes. In camera mode, mouse events affect the camera\n    position and focal point. In object mode, mouse events affect\n    the actor that is under the mouse pointer.\n\n    - Button 1: rotate the camera around its focal point (if camera\n    mode) or rotate the actor around its origin (if actor mode). The\n    rotation is in the direction defined from the center of the\n    renderer\'s viewport towards the mouse position. In joystick mode,\n    the magnitude of the rotation is determined by the distance the\n    mouse is from the center of the render window.\n\n    - Button 2: pan the camera (if camera mode) or translate the actor\n    (if object mode). In joystick mode, the direction of pan or\n    translation is from the center of the viewport towards the mouse\n    position. In trackball mode, the direction of motion is the\n    direction the mouse moves. (Note: with 2-button mice, pan is\n    defined as <Shift>-Button 1.)\n\n    - Button 3: zoom the camera (if camera mode) or scale the actor\n    (if object mode). Zoom in/increase scale if the mouse position is\n    in the top half of the viewport; zoom out/decrease scale if the\n    mouse position is in the bottom half. In joystick mode, the amount\n    of zoom is controlled by the distance of the mouse pointer from\n    the horizontal centerline of the window.\n\n    - Keypress 3: toggle the render window into and out of stereo\n    mode.  By default, red-blue stereo pairs are created. Some systems\n    support Crystal Eyes LCD stereo glasses; you have to invoke\n    SetStereoTypeToCrystalEyes() on the rendering window.  Note: to\n    use stereo you also need to pass a stereo=1 keyword argument to\n    the constructor.\n\n    - Keypress e: exit the application.\n\n    - Keypress f: fly to the picked point\n\n    - Keypress p: perform a pick operation. The render window interactor\n    has an internal instance of vtkCellPicker that it uses to pick.\n\n    - Keypress r: reset the camera view along the current view\n    direction. Centers the actors and moves the camera so that all actors\n    are visible.\n\n    - Keypress s: modify the representation of all actors so that they\n    are surfaces.\n\n    - Keypress u: invoke the user-defined function. Typically, this\n    keypress will bring up an interactor that you can type commands in.\n\n    - Keypress w: modify the representation of all actors so that they\n    are wireframe.\n    """"""\n\n    # Map between VTK and Qt cursors.\n    _CURSOR_MAP = {\n        0:  Qt.ArrowCursor,          # VTK_CURSOR_DEFAULT\n        1:  Qt.ArrowCursor,          # VTK_CURSOR_ARROW\n        2:  Qt.SizeBDiagCursor,      # VTK_CURSOR_SIZENE\n        3:  Qt.SizeFDiagCursor,      # VTK_CURSOR_SIZENWSE\n        4:  Qt.SizeBDiagCursor,      # VTK_CURSOR_SIZESW\n        5:  Qt.SizeFDiagCursor,      # VTK_CURSOR_SIZESE\n        6:  Qt.SizeVerCursor,        # VTK_CURSOR_SIZENS\n        7:  Qt.SizeHorCursor,        # VTK_CURSOR_SIZEWE\n        8:  Qt.SizeAllCursor,        # VTK_CURSOR_SIZEALL\n        9:  Qt.PointingHandCursor,   # VTK_CURSOR_HAND\n        10: Qt.CrossCursor,          # VTK_CURSOR_CROSSHAIR\n    }\n\n    def __init__(self, parent=None, **kw):\n        # the current button\n        self._ActiveButton = Qt.NoButton\n\n        # private attributes\n        self.__saveX = 0\n        self.__saveY = 0\n        self.__saveModifiers = Qt.NoModifier\n        self.__saveButtons = Qt.NoButton\n        self.__wheelDelta = 0\n\n        # do special handling of some keywords:\n        # stereo, rw\n\n        try:\n            stereo = bool(kw[\'stereo\'])\n        except KeyError:\n            stereo = False\n\n        try:\n            rw = kw[\'rw\']\n        except KeyError:\n            rw = None\n\n        # create base qt-level widget\n        if QVTKRWIBase == ""QWidget"":\n            if ""wflags"" in kw:\n                wflags = kw[\'wflags\']\n            else:\n                wflags = Qt.WindowFlags()\n            QWidget.__init__(self, parent, wflags | Qt.MSWindowsOwnDC)\n        elif QVTKRWIBase == ""QGLWidget"":\n            QGLWidget.__init__(self, parent)\n\n        if rw: # user-supplied render window\n            self._RenderWindow = rw\n        else:\n            self._RenderWindow = vtk.vtkRenderWindow()\n\n        WId = self.winId()\n\n        # Python2\n        if type(WId).__name__ == \'PyCObject\':\n            from ctypes import pythonapi, c_void_p, py_object\n\n            pythonapi.PyCObject_AsVoidPtr.restype  = c_void_p\n            pythonapi.PyCObject_AsVoidPtr.argtypes = [py_object]\n\n            WId = pythonapi.PyCObject_AsVoidPtr(WId)\n\n        # Python3\n        elif type(WId).__name__ == \'PyCapsule\':\n            from ctypes import pythonapi, c_void_p, py_object, c_char_p\n\n            pythonapi.PyCapsule_GetName.restype = c_char_p\n            pythonapi.PyCapsule_GetName.argtypes = [py_object]\n\n            name = pythonapi.PyCapsule_GetName(WId)\n\n            pythonapi.PyCapsule_GetPointer.restype  = c_void_p\n            pythonapi.PyCapsule_GetPointer.argtypes = [py_object, c_char_p]\n\n            WId = pythonapi.PyCapsule_GetPointer(WId, name)\n\n        self._RenderWindow.SetWindowInfo(str(int(WId)))\n\n        if stereo: # stereo mode\n            self._RenderWindow.StereoCapableWindowOn()\n            self._RenderWindow.SetStereoTypeToCrystalEyes()\n\n        try:\n            self._Iren = kw[\'iren\']\n        except KeyError:\n            self._Iren = vtk.vtkGenericRenderWindowInteractor()\n            self._Iren.SetRenderWindow(self._RenderWindow)\n\n        # do all the necessary qt setup\n        self.setAttribute(Qt.WA_OpaquePaintEvent)\n        self.setAttribute(Qt.WA_PaintOnScreen)\n        self.setMouseTracking(True) # get all mouse events\n        self.setFocusPolicy(Qt.WheelFocus)\n        self.setSizePolicy(QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding))\n\n        self._Timer = QTimer(self)\n        self._Timer.timeout.connect(self.TimerEvent)\n\n        self._Iren.AddObserver(\'CreateTimerEvent\', self.CreateTimer)\n        self._Iren.AddObserver(\'DestroyTimerEvent\', self.DestroyTimer)\n        self._Iren.GetRenderWindow().AddObserver(\'CursorChangedEvent\',\n                                                 self.CursorChangedEvent)\n\n        #Create a hidden child widget and connect its destroyed signal to its\n        #parent ``Finalize`` slot. The hidden children will be destroyed before\n        #its parent thus allowing cleanup of VTK elements.\n        self._hidden = QWidget(self)\n        self._hidden.hide()\n        self._hidden.destroyed.connect(self.Finalize)\n\n    def __getattr__(self, attr):\n        """"""Makes the object behave like a vtkGenericRenderWindowInteractor""""""\n        if attr == \'__vtk__\':\n            return lambda t=self._Iren: t\n        elif hasattr(self._Iren, attr):\n            return getattr(self._Iren, attr)\n        else:\n            raise AttributeError(self.__class__.__name__ +\n                  "" has no attribute named "" + attr)\n\n    def Finalize(self):\n        \'\'\'\n        Call internal cleanup method on VTK objects\n        \'\'\'\n        self._RenderWindow.Finalize()\n\n    def CreateTimer(self, obj, evt):\n        self._Timer.start(10)\n\n    def DestroyTimer(self, obj, evt):\n        self._Timer.stop()\n        return 1\n\n    def TimerEvent(self):\n        self._Iren.TimerEvent()\n\n    def CursorChangedEvent(self, obj, evt):\n        """"""Called when the CursorChangedEvent fires on the render window.""""""\n        # This indirection is needed since when the event fires, the current\n        # cursor is not yet set so we defer this by which time the current\n        # cursor should have been set.\n        QTimer.singleShot(0, self.ShowCursor)\n\n    def HideCursor(self):\n        """"""Hides the cursor.""""""\n        self.setCursor(Qt.BlankCursor)\n\n    def ShowCursor(self):\n        """"""Shows the cursor.""""""\n        vtk_cursor = self._Iren.GetRenderWindow().GetCurrentCursor()\n        qt_cursor = self._CURSOR_MAP.get(vtk_cursor, Qt.ArrowCursor)\n        self.setCursor(qt_cursor)\n\n    def closeEvent(self, evt):\n        self.Finalize()\n\n    def sizeHint(self):\n        return QSize(400, 400)\n\n    def paintEngine(self):\n        return None\n\n    def paintEvent(self, ev):\n        self._Iren.Render()\n\n    def resizeEvent(self, ev):\n        w = self.width()\n        h = self.height()-25\n        vtk.vtkRenderWindow.SetSize(self._RenderWindow, w, h)\n        self._Iren.SetSize(w, h)\n        self._Iren.ConfigureEvent()\n        self.update()\n\n    def _GetCtrlShift(self, ev):\n        ctrl = shift = False\n\n        if hasattr(ev, \'modifiers\'):\n            if ev.modifiers() & Qt.ShiftModifier:\n                shift = True\n            if ev.modifiers() & Qt.ControlModifier:\n                ctrl = True\n        else:\n            if self.__saveModifiers & Qt.ShiftModifier:\n                shift = True\n            if self.__saveModifiers & Qt.ControlModifier:\n                ctrl = True\n\n        return ctrl, shift\n\n    def enterEvent(self, ev):\n        ctrl, shift = self._GetCtrlShift(ev)\n        self._Iren.SetEventInformationFlipY(self.__saveX, self.__saveY,\n                                            ctrl, shift, chr(0), 0, None)\n        self._Iren.EnterEvent()\n\n    def leaveEvent(self, ev):\n        ctrl, shift = self._GetCtrlShift(ev)\n        self._Iren.SetEventInformationFlipY(self.__saveX, self.__saveY,\n                                            ctrl, shift, chr(0), 0, None)\n        self._Iren.LeaveEvent()\n\n    def mousePressEvent(self, ev):\n        ctrl, shift = self._GetCtrlShift(ev)\n        repeat = 0\n        if ev.type() == QEvent.MouseButtonDblClick:\n            repeat = 1\n        self._Iren.SetEventInformationFlipY(ev.x(), ev.y(),\n                                            ctrl, shift, chr(0), repeat, None)\n\n        self._ActiveButton = ev.button()\n\n        if self._ActiveButton == Qt.LeftButton:\n            self._Iren.LeftButtonPressEvent()\n        elif self._ActiveButton == Qt.RightButton:\n            self._Iren.RightButtonPressEvent()\n        elif self._ActiveButton == Qt.MidButton:\n            self._Iren.MiddleButtonPressEvent()\n\n    #def mouseReleaseEvent(self, ev):\n    #    ctrl, shift = self._GetCtrlShift(ev)\n    #    self._Iren.SetEventInformationFlipY(ev.x(), ev.y(),\n    #                                       ctrl, shift, chr(0), 0, None)\n\n    #    if self._ActiveButton == Qt.LeftButton:\n    #        self._Iren.LeftButtonReleaseEvent()\n    #    elif self._ActiveButton == Qt.RightButton:\n    #        self._Iren.RightButtonReleaseEvent()\n    #    elif self._ActiveButton == Qt.MidButton:\n    #        self._Iren.MiddleButtonReleaseEvent()\n\n    def mouseMoveEvent(self, ev):\n        self.__saveModifiers = ev.modifiers()\n        self.__saveButtons = ev.buttons()\n        self.__saveX = ev.x()\n        self.__saveY = ev.y()\n\n        ctrl, shift = self._GetCtrlShift(ev)\n        self._Iren.SetEventInformationFlipY(ev.x(), ev.y(),\n                                            ctrl, shift, chr(0), 0, None)\n        self._Iren.MouseMoveEvent()\n\n    def keyPressEvent(self, ev):\n        ctrl, shift = self._GetCtrlShift(ev)\n        if ev.key() < 256:\n            key = str(ev.text())\n        else:\n            key = chr(0)\n\n        keySym = _qt_key_to_key_sym(ev.key())\n        if shift and len(keySym) == 1 and keySym.isalpha():\n            keySym = keySym.upper()\n\n        self._Iren.SetEventInformationFlipY(self.__saveX, self.__saveY,\n                                            ctrl, shift, key, 0, keySym)\n        self._Iren.KeyPressEvent()\n        self._Iren.CharEvent()\n\n    def keyReleaseEvent(self, ev):\n        ctrl, shift = self._GetCtrlShift(ev)\n        if ev.key() < 256:\n            key = chr(ev.key())\n        else:\n            key = chr(0)\n\n        self._Iren.SetEventInformationFlipY(self.__saveX, self.__saveY,\n                                            ctrl, shift, key, 0, None)\n        self._Iren.KeyReleaseEvent()\n\n    def wheelEvent(self, ev):\n        if hasattr(ev, \'delta\'):\n            self.__wheelDelta += ev.delta()\n        else:\n            self.__wheelDelta += ev.angleDelta().y()\n\n        if self.__wheelDelta >= 120:\n            self._Iren.MouseWheelForwardEvent()\n            self.__wheelDelta = 0\n        elif self.__wheelDelta <= -120:\n            self._Iren.MouseWheelBackwardEvent()\n            self.__wheelDelta = 0\n\n    def GetRenderWindow(self):\n        return self._RenderWindow\n\n    def Render(self):\n        self.update()\n\n\ndef QVTKRenderWidgetConeExample():\n    """"""A simple example that uses the QVTKRenderWindowInteractor class.""""""\n\n    # every QT app needs an app\n    app = QApplication([\'QVTKRenderWindowInteractor\'])\n\n    # create the widget\n    widget = QVTKRenderWindowInteractor()\n    widget.Initialize()\n    widget.Start()\n    # if you don\'t want the \'q\' key to exit comment this.\n    widget.AddObserver(""ExitEvent"", lambda o, e, a=app: a.quit())\n\n    ren = vtk.vtkRenderer()\n    widget.GetRenderWindow().AddRenderer(ren)\n\n    cone = vtk.vtkConeSource()\n    cone.SetResolution(8)\n\n    coneMapper = vtk.vtkPolyDataMapper()\n    coneMapper.SetInputConnection(cone.GetOutputPort())\n\n    coneActor = vtk.vtkActor()\n    coneActor.SetMapper(coneMapper)\n\n    ren.AddActor(coneActor)\n\n    # show the widget\n    widget.show()\n    # start event processing\n    app.exec_()\n\n\n_keysyms = {\n    Qt.Key_Backspace: \'BackSpace\',\n    Qt.Key_Tab: \'Tab\',\n    Qt.Key_Backtab: \'Tab\',\n    # Qt.Key_Clear : \'Clear\',\n    Qt.Key_Return: \'Return\',\n    Qt.Key_Enter: \'Return\',\n    Qt.Key_Shift: \'Shift_L\',\n    Qt.Key_Control: \'Control_L\',\n    Qt.Key_Alt: \'Alt_L\',\n    Qt.Key_Pause: \'Pause\',\n    Qt.Key_CapsLock: \'Caps_Lock\',\n    Qt.Key_Escape: \'Escape\',\n    Qt.Key_Space: \'space\',\n    # Qt.Key_Prior : \'Prior\',\n    # Qt.Key_Next : \'Next\',\n    Qt.Key_End: \'End\',\n    Qt.Key_Home: \'Home\',\n    Qt.Key_Left: \'Left\',\n    Qt.Key_Up: \'Up\',\n    Qt.Key_Right: \'Right\',\n    Qt.Key_Down: \'Down\',\n    Qt.Key_SysReq: \'Snapshot\',\n    Qt.Key_Insert: \'Insert\',\n    Qt.Key_Delete: \'Delete\',\n    Qt.Key_Help: \'Help\',\n    Qt.Key_0: \'0\',\n    Qt.Key_1: \'1\',\n    Qt.Key_2: \'2\',\n    Qt.Key_3: \'3\',\n    Qt.Key_4: \'4\',\n    Qt.Key_5: \'5\',\n    Qt.Key_6: \'6\',\n    Qt.Key_7: \'7\',\n    Qt.Key_8: \'8\',\n    Qt.Key_9: \'9\',\n    Qt.Key_A: \'a\',\n    Qt.Key_B: \'b\',\n    Qt.Key_C: \'c\',\n    Qt.Key_D: \'d\',\n    Qt.Key_E: \'e\',\n    Qt.Key_F: \'f\',\n    Qt.Key_G: \'g\',\n    Qt.Key_H: \'h\',\n    Qt.Key_I: \'i\',\n    Qt.Key_J: \'j\',\n    Qt.Key_K: \'k\',\n    Qt.Key_L: \'l\',\n    Qt.Key_M: \'m\',\n    Qt.Key_N: \'n\',\n    Qt.Key_O: \'o\',\n    Qt.Key_P: \'p\',\n    Qt.Key_Q: \'q\',\n    Qt.Key_R: \'r\',\n    Qt.Key_S: \'s\',\n    Qt.Key_T: \'t\',\n    Qt.Key_U: \'u\',\n    Qt.Key_V: \'v\',\n    Qt.Key_W: \'w\',\n    Qt.Key_X: \'x\',\n    Qt.Key_Y: \'y\',\n    Qt.Key_Z: \'z\',\n    Qt.Key_Asterisk: \'asterisk\',\n    Qt.Key_Plus: \'plus\',\n    Qt.Key_Minus: \'minus\',\n    Qt.Key_Period: \'period\',\n    Qt.Key_Slash: \'slash\',\n    Qt.Key_F1: \'F1\',\n    Qt.Key_F2: \'F2\',\n    Qt.Key_F3: \'F3\',\n    Qt.Key_F4: \'F4\',\n    Qt.Key_F5: \'F5\',\n    Qt.Key_F6: \'F6\',\n    Qt.Key_F7: \'F7\',\n    Qt.Key_F8: \'F8\',\n    Qt.Key_F9: \'F9\',\n    Qt.Key_F10: \'F10\',\n    Qt.Key_F11: \'F11\',\n    Qt.Key_F12: \'F12\',\n    Qt.Key_F13: \'F13\',\n    Qt.Key_F14: \'F14\',\n    Qt.Key_F15: \'F15\',\n    Qt.Key_F16: \'F16\',\n    Qt.Key_F17: \'F17\',\n    Qt.Key_F18: \'F18\',\n    Qt.Key_F19: \'F19\',\n    Qt.Key_F20: \'F20\',\n    Qt.Key_F21: \'F21\',\n    Qt.Key_F22: \'F22\',\n    Qt.Key_F23: \'F23\',\n    Qt.Key_F24: \'F24\',\n    Qt.Key_NumLock: \'Num_Lock\',\n    Qt.Key_ScrollLock: \'Scroll_Lock\',\n    }\n\ndef _qt_key_to_key_sym(key):\n    """""" Convert a Qt key into a vtk keysym.\n\n    This is essentially copied from the c++ implementation in\n    GUISupport/Qt/QVTKInteractorAdapter.cxx.\n    """"""\n\n    if key not in _keysyms:\n        return None\n\n    return _keysyms[key]\n\n\nif __name__ == ""__main__"":\n    print(PyQtImpl)\n    QVTKRenderWidgetConeExample()\n'"
CGNS/NAV/QVTKRenderWindowInteractor.py,0,"b'""""""\nA simple VTK widget for PyQt or PySide.\nSee http://www.trolltech.com for Qt documentation,\nhttp://www.riverbankcomputing.co.uk for PyQt, and\nhttp://pyside.github.io for PySide.\n\nThis class is based on the vtkGenericRenderWindowInteractor and is\ntherefore fairly powerful.  It should also play nicely with the\nvtk3DWidget code.\n\nCreated by Prabhu Ramachandran, May 2002\nBased on David Gobbi\'s QVTKRenderWidget.py\n\nChanges by Gerard Vermeulen Feb. 2003\n Win32 support.\n\nChanges by Gerard Vermeulen, May 2003\n Bug fixes and better integration with the Qt framework.\n\nChanges by Phil Thompson, Nov. 2006\n Ported to PyQt v4.\n Added support for wheel events.\n\nChanges by Phil Thompson, Oct. 2007\n Bug fixes.\n\nChanges by Phil Thompson, Mar. 2008\n Added cursor support.\n\nChanges by Rodrigo Mologni, Sep. 2013 (Credit to Daniele Esposti)\n Bug fix to PySide: Converts PyCObject to void pointer.\n\nChanges by Greg Schussman, Aug. 2014\n The keyPressEvent function now passes keysym instead of None.\n\nChanges by Alex Tsui, Apr. 2015\n Port from PyQt4 to PyQt5.\n\nChanges by Fabian Wenzel, Jan. 2016\n Support for Python3\n""""""\nfrom __future__ import unicode_literals\ntry:\n  from builtins import (str, bytes, range, dict)\nexcept ImportError:\n  from __builtin__ import (str, bytes, range, dict)\n# Check whether a specific PyQt implementation was chosen\ntry:\n    import vtk.qt\n    PyQtImpl = vtk.qt.PyQtImpl\nexcept ImportError:\n    pass\n\n# Check whether a specific QVTKRenderWindowInteractor base\n# class was chosen, can be set to ""QGLWidget""\nQVTKRWIBase = ""QWidget""\ntry:\n    import vtk.qt\n    QVTKRWIBase = vtk.qt.QVTKRWIBase\nexcept ImportError:\n    pass\n\nif PyQtImpl is None:\n    # Autodetect the PyQt implementation to use\n    try:\n        import PyQt5\n        PyQtImpl = ""PyQt5""\n    except ImportError:\n        try:\n            import PyQt4\n            PyQtImpl = ""PyQt4""\n        except ImportError:\n            try:\n                import PySide\n                PyQtImpl = ""PySide""\n            except ImportError:\n                raise ImportError(""Cannot load either PyQt or PySide"")\n\nif PyQtImpl == ""PyQt5"":\n    if QVTKRWIBase == ""QGLWidget"":\n        from PyQt5.QtOpenGL import QGLWidget\n    from PyQt5.QtWidgets import QWidget\n    from PyQt5.QtWidgets import QSizePolicy\n    from PyQt5.QtWidgets import QApplication\n    from PyQt5.QtCore import Qt\n    from PyQt5.QtCore import QTimer\n    from PyQt5.QtCore import QObject\n    from PyQt5.QtCore import QSize\n    from PyQt5.QtCore import QEvent\nelif PyQtImpl == ""PyQt4"":\n    if QVTKRWIBase == ""QGLWidget"":\n        from PyQt4.QtOpenGL import QGLWidget\n    from PyQt4.QtGui import QWidget\n    from PyQt4.QtGui import QSizePolicy\n    from PyQt4.QtGui import QApplication\n    from PyQt4.QtCore import Qt\n    from PyQt4.QtCore import QTimer\n    from PyQt4.QtCore import QObject\n    from PyQt4.QtCore import QSize\n    from PyQt4.QtCore import QEvent\nelif PyQtImpl == ""PySide"":\n    if QVTKRWIBase == ""QGLWidget"":\n        from PySide.QtOpenGL import QGLWidget\n    from PySide.QtGui import QWidget\n    from PySide.QtGui import QSizePolicy\n    from PySide.QtGui import QApplication\n    from PySide.QtCore import Qt\n    from PySide.QtCore import QTimer\n    from PySide.QtCore import QObject\n    from PySide.QtCore import QSize\n    from PySide.QtCore import QEvent\nelse:\n    raise ImportError(""Unknown PyQt implementation "" + repr(PyQtImpl))\n\n# Define types for base class, based on string\nif QVTKRWIBase == ""QWidget"":\n    QVTKRWIBaseClass = QWidget\nelif QVTKRWIBase == ""QGLWidget"":\n    QVTKRWIBaseClass = QGLWidget\nelse:\n    raise ImportError(""Unknown base class for QVTKRenderWindowInteractor "" + QVTKRWIBase)\n\nclass QVTKRenderWindowInteractor(QVTKRWIBaseClass):\n\n    """""" A QVTKRenderWindowInteractor for Python and Qt.  Uses a\n    vtkGenericRenderWindowInteractor to handle the interactions.  Use\n    GetRenderWindow() to get the vtkRenderWindow.  Create with the\n    keyword stereo=1 in order to generate a stereo-capable window.\n\n    The user interface is summarized in vtkInteractorStyle.h:\n\n    - Keypress j / Keypress t: toggle between joystick (position\n    sensitive) and trackball (motion sensitive) styles. In joystick\n    style, motion occurs continuously as long as a mouse button is\n    pressed. In trackball style, motion occurs when the mouse button\n    is pressed and the mouse pointer moves.\n\n    - Keypress c / Keypress o: toggle between camera and object\n    (actor) modes. In camera mode, mouse events affect the camera\n    position and focal point. In object mode, mouse events affect\n    the actor that is under the mouse pointer.\n\n    - Button 1: rotate the camera around its focal point (if camera\n    mode) or rotate the actor around its origin (if actor mode). The\n    rotation is in the direction defined from the center of the\n    renderer\'s viewport towards the mouse position. In joystick mode,\n    the magnitude of the rotation is determined by the distance the\n    mouse is from the center of the render window.\n\n    - Button 2: pan the camera (if camera mode) or translate the actor\n    (if object mode). In joystick mode, the direction of pan or\n    translation is from the center of the viewport towards the mouse\n    position. In trackball mode, the direction of motion is the\n    direction the mouse moves. (Note: with 2-button mice, pan is\n    defined as <Shift>-Button 1.)\n\n    - Button 3: zoom the camera (if camera mode) or scale the actor\n    (if object mode). Zoom in/increase scale if the mouse position is\n    in the top half of the viewport; zoom out/decrease scale if the\n    mouse position is in the bottom half. In joystick mode, the amount\n    of zoom is controlled by the distance of the mouse pointer from\n    the horizontal centerline of the window.\n\n    - Keypress 3: toggle the render window into and out of stereo\n    mode.  By default, red-blue stereo pairs are created. Some systems\n    support Crystal Eyes LCD stereo glasses; you have to invoke\n    SetStereoTypeToCrystalEyes() on the rendering window.  Note: to\n    use stereo you also need to pass a stereo=1 keyword argument to\n    the constructor.\n\n    - Keypress e: exit the application.\n\n    - Keypress f: fly to the picked point\n\n    - Keypress p: perform a pick operation. The render window interactor\n    has an internal instance of vtkCellPicker that it uses to pick.\n\n    - Keypress r: reset the camera view along the current view\n    direction. Centers the actors and moves the camera so that all actors\n    are visible.\n\n    - Keypress s: modify the representation of all actors so that they\n    are surfaces.\n\n    - Keypress u: invoke the user-defined function. Typically, this\n    keypress will bring up an interactor that you can type commands in.\n\n    - Keypress w: modify the representation of all actors so that they\n    are wireframe.\n    """"""\n\n    # Map between VTK and Qt cursors.\n    _CURSOR_MAP = {\n        0:  Qt.ArrowCursor,          # VTK_CURSOR_DEFAULT\n        1:  Qt.ArrowCursor,          # VTK_CURSOR_ARROW\n        2:  Qt.SizeBDiagCursor,      # VTK_CURSOR_SIZENE\n        3:  Qt.SizeFDiagCursor,      # VTK_CURSOR_SIZENWSE\n        4:  Qt.SizeBDiagCursor,      # VTK_CURSOR_SIZESW\n        5:  Qt.SizeFDiagCursor,      # VTK_CURSOR_SIZESE\n        6:  Qt.SizeVerCursor,        # VTK_CURSOR_SIZENS\n        7:  Qt.SizeHorCursor,        # VTK_CURSOR_SIZEWE\n        8:  Qt.SizeAllCursor,        # VTK_CURSOR_SIZEALL\n        9:  Qt.PointingHandCursor,   # VTK_CURSOR_HAND\n        10: Qt.CrossCursor,          # VTK_CURSOR_CROSSHAIR\n    }\n\n    def __init__(self, parent=None, **kw):\n        # the current button\n        self._ActiveButton = Qt.NoButton\n\n        # private attributes\n        self.__saveX = 0\n        self.__saveY = 0\n        self.__saveModifiers = Qt.NoModifier\n        self.__saveButtons = Qt.NoButton\n        self.__wheelDelta = 0\n\n        # do special handling of some keywords:\n        # stereo, rw\n\n        try:\n            stereo = bool(kw[\'stereo\'])\n        except KeyError:\n            stereo = False\n\n        try:\n            rw = kw[\'rw\']\n        except KeyError:\n            rw = None\n\n        # create base qt-level widget\n        if QVTKRWIBase == ""QWidget"":\n            if ""wflags"" in kw:\n                wflags = kw[\'wflags\']\n            else:\n                wflags = Qt.WindowFlags()\n            QWidget.__init__(self, parent, wflags | Qt.MSWindowsOwnDC)\n        elif QVTKRWIBase == ""QGLWidget"":\n            QGLWidget.__init__(self, parent)\n\n        if rw: # user-supplied render window\n            self._RenderWindow = rw\n        else:\n            self._RenderWindow = vtk.vtkRenderWindow()\n\n        WId = self.winId()\n\n        # Python2\n        if type(WId).__name__ == \'PyCObject\':\n            from ctypes import pythonapi, c_void_p, py_object\n\n            pythonapi.PyCObject_AsVoidPtr.restype  = c_void_p\n            pythonapi.PyCObject_AsVoidPtr.argtypes = [py_object]\n\n            WId = pythonapi.PyCObject_AsVoidPtr(WId)\n\n        # Python3\n        elif type(WId).__name__ == \'PyCapsule\':\n            from ctypes import pythonapi, c_void_p, py_object, c_char_p\n\n            pythonapi.PyCapsule_GetName.restype = c_char_p\n            pythonapi.PyCapsule_GetName.argtypes = [py_object]\n\n            name = pythonapi.PyCapsule_GetName(WId)\n\n            pythonapi.PyCapsule_GetPointer.restype  = c_void_p\n            pythonapi.PyCapsule_GetPointer.argtypes = [py_object, c_char_p]\n\n            WId = pythonapi.PyCapsule_GetPointer(WId, name)\n\n        self._RenderWindow.SetWindowInfo(str(int(WId)))\n\n        if stereo: # stereo mode\n            self._RenderWindow.StereoCapableWindowOn()\n            self._RenderWindow.SetStereoTypeToCrystalEyes()\n\n        try:\n            self._Iren = kw[\'iren\']\n        except KeyError:\n            self._Iren = vtk.vtkGenericRenderWindowInteractor()\n            self._Iren.SetRenderWindow(self._RenderWindow)\n\n        # do all the necessary qt setup\n        self.setAttribute(Qt.WA_OpaquePaintEvent)\n        self.setAttribute(Qt.WA_PaintOnScreen)\n        self.setMouseTracking(True) # get all mouse events\n        self.setFocusPolicy(Qt.WheelFocus)\n        self.setSizePolicy(QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding))\n\n        self._Timer = QTimer(self)\n        self._Timer.timeout.connect(self.TimerEvent)\n\n        self._Iren.AddObserver(\'CreateTimerEvent\', self.CreateTimer)\n        self._Iren.AddObserver(\'DestroyTimerEvent\', self.DestroyTimer)\n        self._Iren.GetRenderWindow().AddObserver(\'CursorChangedEvent\',\n                                                 self.CursorChangedEvent)\n\n        #Create a hidden child widget and connect its destroyed signal to its\n        #parent ``Finalize`` slot. The hidden children will be destroyed before\n        #its parent thus allowing cleanup of VTK elements.\n        self._hidden = QWidget(self)\n        self._hidden.hide()\n        self._hidden.destroyed.connect(self.Finalize)\n\n    def __getattr__(self, attr):\n        """"""Makes the object behave like a vtkGenericRenderWindowInteractor""""""\n        if attr == \'__vtk__\':\n            return lambda t=self._Iren: t\n        elif hasattr(self._Iren, attr):\n            return getattr(self._Iren, attr)\n        else:\n            raise AttributeError(self.__class__.__name__ +\n                  "" has no attribute named "" + attr)\n\n    def Finalize(self):\n        \'\'\'\n        Call internal cleanup method on VTK objects\n        \'\'\'\n        self._RenderWindow.Finalize()\n\n    def CreateTimer(self, obj, evt):\n        self._Timer.start(10)\n\n    def DestroyTimer(self, obj, evt):\n        self._Timer.stop()\n        return 1\n\n    def TimerEvent(self):\n        self._Iren.TimerEvent()\n\n    def CursorChangedEvent(self, obj, evt):\n        """"""Called when the CursorChangedEvent fires on the render window.""""""\n        # This indirection is needed since when the event fires, the current\n        # cursor is not yet set so we defer this by which time the current\n        # cursor should have been set.\n        QTimer.singleShot(0, self.ShowCursor)\n\n    def HideCursor(self):\n        """"""Hides the cursor.""""""\n        self.setCursor(Qt.BlankCursor)\n\n    def ShowCursor(self):\n        """"""Shows the cursor.""""""\n        vtk_cursor = self._Iren.GetRenderWindow().GetCurrentCursor()\n        qt_cursor = self._CURSOR_MAP.get(vtk_cursor, Qt.ArrowCursor)\n        self.setCursor(qt_cursor)\n\n    def closeEvent(self, evt):\n        self.Finalize()\n\n    def sizeHint(self):\n        return QSize(400, 400)\n\n    def paintEngine(self):\n        return None\n\n    def paintEvent(self, ev):\n        self._Iren.Render()\n\n    def resizeEvent(self, ev):\n        w = self.width()\n        h = self.height()\n        vtk.vtkRenderWindow.SetSize(self._RenderWindow, w, h)\n        self._Iren.SetSize(w, h)\n        self._Iren.ConfigureEvent()\n        self.update()\n\n    def _GetCtrlShift(self, ev):\n        ctrl = shift = False\n\n        if hasattr(ev, \'modifiers\'):\n            if ev.modifiers() & Qt.ShiftModifier:\n                shift = True\n            if ev.modifiers() & Qt.ControlModifier:\n                ctrl = True\n        else:\n            if self.__saveModifiers & Qt.ShiftModifier:\n                shift = True\n            if self.__saveModifiers & Qt.ControlModifier:\n                ctrl = True\n\n        return ctrl, shift\n\n    def enterEvent(self, ev):\n        ctrl, shift = self._GetCtrlShift(ev)\n        self._Iren.SetEventInformationFlipY(self.__saveX, self.__saveY,\n                                            ctrl, shift, chr(0), 0, None)\n        self._Iren.EnterEvent()\n\n    def leaveEvent(self, ev):\n        ctrl, shift = self._GetCtrlShift(ev)\n        self._Iren.SetEventInformationFlipY(self.__saveX, self.__saveY,\n                                            ctrl, shift, chr(0), 0, None)\n        self._Iren.LeaveEvent()\n\n    def mousePressEvent(self, ev):\n        ctrl, shift = self._GetCtrlShift(ev)\n        repeat = 0\n        if ev.type() == QEvent.MouseButtonDblClick:\n            repeat = 1\n        self._Iren.SetEventInformationFlipY(ev.x(), ev.y(),\n                                            ctrl, shift, chr(0), repeat, None)\n\n        self._ActiveButton = ev.button()\n\n        if self._ActiveButton == Qt.LeftButton:\n            self._Iren.LeftButtonPressEvent()\n        elif self._ActiveButton == Qt.RightButton:\n            self._Iren.RightButtonPressEvent()\n        elif self._ActiveButton == Qt.MidButton:\n            self._Iren.MiddleButtonPressEvent()\n\n    def mouseReleaseEvent(self, ev):\n        ctrl, shift = self._GetCtrlShift(ev)\n        self._Iren.SetEventInformationFlipY(ev.x(), ev.y(),\n                                            ctrl, shift, chr(0), 0, None)\n\n        if self._ActiveButton == Qt.LeftButton:\n            self._Iren.LeftButtonReleaseEvent()\n        elif self._ActiveButton == Qt.RightButton:\n            self._Iren.RightButtonReleaseEvent()\n        elif self._ActiveButton == Qt.MidButton:\n            self._Iren.MiddleButtonReleaseEvent()\n\n    def mouseMoveEvent(self, ev):\n        self.__saveModifiers = ev.modifiers()\n        self.__saveButtons = ev.buttons()\n        self.__saveX = ev.x()\n        self.__saveY = ev.y()\n\n        ctrl, shift = self._GetCtrlShift(ev)\n        self._Iren.SetEventInformationFlipY(ev.x(), ev.y(),\n                                            ctrl, shift, chr(0), 0, None)\n        self._Iren.MouseMoveEvent()\n\n    def keyPressEvent(self, ev):\n        ctrl, shift = self._GetCtrlShift(ev)\n        if ev.key() < 256:\n            key = str(ev.text())\n        else:\n            key = chr(0)\n\n        keySym = _qt_key_to_key_sym(ev.key())\n        if shift and len(keySym) == 1 and keySym.isalpha():\n            keySym = keySym.upper()\n\n        self._Iren.SetEventInformationFlipY(self.__saveX, self.__saveY,\n                                            ctrl, shift, key, 0, keySym)\n        self._Iren.KeyPressEvent()\n        self._Iren.CharEvent()\n\n    def keyReleaseEvent(self, ev):\n        ctrl, shift = self._GetCtrlShift(ev)\n        if ev.key() < 256:\n            key = chr(ev.key())\n        else:\n            key = chr(0)\n\n        self._Iren.SetEventInformationFlipY(self.__saveX, self.__saveY,\n                                            ctrl, shift, key, 0, None)\n        self._Iren.KeyReleaseEvent()\n\n    def wheelEvent(self, ev):\n        if hasattr(ev, \'delta\'):\n            self.__wheelDelta += ev.delta()\n        else:\n            self.__wheelDelta += ev.angleDelta().y()\n\n        if self.__wheelDelta >= 120:\n            self._Iren.MouseWheelForwardEvent()\n            self.__wheelDelta = 0\n        elif self.__wheelDelta <= -120:\n            self._Iren.MouseWheelBackwardEvent()\n            self.__wheelDelta = 0\n\n    def GetRenderWindow(self):\n        return self._RenderWindow\n\n    def Render(self):\n        self.update()\n\n\ndef QVTKRenderWidgetConeExample():\n    """"""A simple example that uses the QVTKRenderWindowInteractor class.""""""\n\n    # every QT app needs an app\n    app = QApplication([\'QVTKRenderWindowInteractor\'])\n\n    # create the widget\n    widget = QVTKRenderWindowInteractor()\n    widget.Initialize()\n    widget.Start()\n    # if you don\'t want the \'q\' key to exit comment this.\n    widget.AddObserver(""ExitEvent"", lambda o, e, a=app: a.quit())\n\n    ren = vtk.vtkRenderer()\n    widget.GetRenderWindow().AddRenderer(ren)\n\n    cone = vtk.vtkConeSource()\n    cone.SetResolution(8)\n\n    coneMapper = vtk.vtkPolyDataMapper()\n    coneMapper.SetInputConnection(cone.GetOutputPort())\n\n    coneActor = vtk.vtkActor()\n    coneActor.SetMapper(coneMapper)\n\n    ren.AddActor(coneActor)\n\n    # show the widget\n    widget.show()\n    # start event processing\n    app.exec_()\n\n\n_keysyms = {\n    Qt.Key_Backspace: \'BackSpace\',\n    Qt.Key_Tab: \'Tab\',\n    Qt.Key_Backtab: \'Tab\',\n    # Qt.Key_Clear : \'Clear\',\n    Qt.Key_Return: \'Return\',\n    Qt.Key_Enter: \'Return\',\n    Qt.Key_Shift: \'Shift_L\',\n    Qt.Key_Control: \'Control_L\',\n    Qt.Key_Alt: \'Alt_L\',\n    Qt.Key_Pause: \'Pause\',\n    Qt.Key_CapsLock: \'Caps_Lock\',\n    Qt.Key_Escape: \'Escape\',\n    Qt.Key_Space: \'space\',\n    # Qt.Key_Prior : \'Prior\',\n    # Qt.Key_Next : \'Next\',\n    Qt.Key_End: \'End\',\n    Qt.Key_Home: \'Home\',\n    Qt.Key_Left: \'Left\',\n    Qt.Key_Up: \'Up\',\n    Qt.Key_Right: \'Right\',\n    Qt.Key_Down: \'Down\',\n    Qt.Key_SysReq: \'Snapshot\',\n    Qt.Key_Insert: \'Insert\',\n    Qt.Key_Delete: \'Delete\',\n    Qt.Key_Help: \'Help\',\n    Qt.Key_0: \'0\',\n    Qt.Key_1: \'1\',\n    Qt.Key_2: \'2\',\n    Qt.Key_3: \'3\',\n    Qt.Key_4: \'4\',\n    Qt.Key_5: \'5\',\n    Qt.Key_6: \'6\',\n    Qt.Key_7: \'7\',\n    Qt.Key_8: \'8\',\n    Qt.Key_9: \'9\',\n    Qt.Key_A: \'a\',\n    Qt.Key_B: \'b\',\n    Qt.Key_C: \'c\',\n    Qt.Key_D: \'d\',\n    Qt.Key_E: \'e\',\n    Qt.Key_F: \'f\',\n    Qt.Key_G: \'g\',\n    Qt.Key_H: \'h\',\n    Qt.Key_I: \'i\',\n    Qt.Key_J: \'j\',\n    Qt.Key_K: \'k\',\n    Qt.Key_L: \'l\',\n    Qt.Key_M: \'m\',\n    Qt.Key_N: \'n\',\n    Qt.Key_O: \'o\',\n    Qt.Key_P: \'p\',\n    Qt.Key_Q: \'q\',\n    Qt.Key_R: \'r\',\n    Qt.Key_S: \'s\',\n    Qt.Key_T: \'t\',\n    Qt.Key_U: \'u\',\n    Qt.Key_V: \'v\',\n    Qt.Key_W: \'w\',\n    Qt.Key_X: \'x\',\n    Qt.Key_Y: \'y\',\n    Qt.Key_Z: \'z\',\n    Qt.Key_Asterisk: \'asterisk\',\n    Qt.Key_Plus: \'plus\',\n    Qt.Key_Minus: \'minus\',\n    Qt.Key_Period: \'period\',\n    Qt.Key_Slash: \'slash\',\n    Qt.Key_F1: \'F1\',\n    Qt.Key_F2: \'F2\',\n    Qt.Key_F3: \'F3\',\n    Qt.Key_F4: \'F4\',\n    Qt.Key_F5: \'F5\',\n    Qt.Key_F6: \'F6\',\n    Qt.Key_F7: \'F7\',\n    Qt.Key_F8: \'F8\',\n    Qt.Key_F9: \'F9\',\n    Qt.Key_F10: \'F10\',\n    Qt.Key_F11: \'F11\',\n    Qt.Key_F12: \'F12\',\n    Qt.Key_F13: \'F13\',\n    Qt.Key_F14: \'F14\',\n    Qt.Key_F15: \'F15\',\n    Qt.Key_F16: \'F16\',\n    Qt.Key_F17: \'F17\',\n    Qt.Key_F18: \'F18\',\n    Qt.Key_F19: \'F19\',\n    Qt.Key_F20: \'F20\',\n    Qt.Key_F21: \'F21\',\n    Qt.Key_F22: \'F22\',\n    Qt.Key_F23: \'F23\',\n    Qt.Key_F24: \'F24\',\n    Qt.Key_NumLock: \'Num_Lock\',\n    Qt.Key_ScrollLock: \'Scroll_Lock\',\n    }\n\ndef _qt_key_to_key_sym(key):\n    """""" Convert a Qt key into a vtk keysym.\n\n    This is essentially copied from the c++ implementation in\n    GUISupport/Qt/QVTKInteractorAdapter.cxx.\n    """"""\n\n    if key not in _keysyms:\n        return None\n\n    return _keysyms[key]\n\n\nif __name__ == ""__main__"":\n    print(PyQtImpl)\n    QVTKRenderWidgetConeExample()\n'"
CGNS/NAV/Res_rc.py,0,"b'# -*- coding: utf-8 -*-\n\n# Resource object code\n#\n# Created by: The Resource Compiler for PyQt5 (Qt v5.12.1)\n#\n# WARNING! All changes made in this file will be lost!\n\nfrom PyQt5 import QtCore\n\nqt_resource_data = b""\\\n\\x00\\x00\\x82\\xa1\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x02\\x57\\x00\\x00\\x01\\x33\\x08\\x06\\x00\\x00\\x00\\x1c\\xb6\\x26\\x55\\\n\\x00\\x00\\x00\\x01\\x73\\x52\\x47\\x42\\x00\\xae\\xce\\x1c\\xe9\\x00\\x00\\x00\\\n\\x06\\x62\\x4b\\x47\\x44\\x00\\x00\\x00\\x00\\x00\\x00\\xf9\\x43\\xbb\\x7f\\x00\\\n\\x00\\x00\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x1e\\x58\\x00\\x00\\x1e\\x58\\x01\\\n\\x59\\x83\\x22\\x8b\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\xe0\\x06\\x17\\\n\\x0b\\x35\\x2e\\xea\\xac\\x0b\\x3c\\x00\\x00\\x20\\x00\\x49\\x44\\x41\\x54\\x78\\\n\\xda\\xec\\x9d\\x77\\x98\\x24\\x45\\xf9\\xc7\\x3f\\xdd\\x3d\\x39\\xcf\\xe6\\x1c\\\n\\x2e\\xc3\\x71\\xc7\\x25\\x92\\x20\\x39\\x47\\x51\\x40\\x45\\x04\\x44\\x05\\x54\\\n\\x14\\x10\\x94\\x1c\\x24\\x0a\\xa2\\x80\\x82\\x01\\xc1\\x9f\\x98\\x90\\x20\\x82\\\n\\x80\\x80\\x82\\x64\\x14\\xee\\x88\\x97\\xd3\\xde\\xe6\\x30\\x9b\\x66\\x27\\xa7\\\n\\xee\\xfe\\xfd\\xb1\\x17\\x58\\x6e\\xc3\\xec\\x6d\\xef\\xee\\xec\\x5e\\x7d\\x9e\\\n\\x67\\x9e\\xbb\\xdd\\x99\\xed\\xa9\\xaa\\xae\\xae\\xfa\\xd6\\x5b\\x6f\\xbd\\xaf\\\n\\x94\\x6e\\x7a\\x51\\x4f\\xd7\\xfd\\x0d\\x32\\x51\\x04\\x02\\x81\\x40\\x20\\x10\\\n\\x08\\x04\\xbb\\x88\\x62\\xc7\\x3c\\xeb\\x4c\\xa4\\xd8\\xab\\xdf\\xd0\\x51\\xe3\\\n\\xa2\\x41\\x04\\x02\\x81\\x40\\x20\\x10\\x08\\xc6\\x8a\\xc5\\x87\\x2c\\x84\\x95\\\n\\x40\\x20\\x10\\x08\\x04\\x02\\x81\\x41\\xa4\\x23\\x98\\x3e\\xf9\\xb3\\x75\\xdf\\\n\\xdb\\x90\\xcc\\x1e\\xd1\\x30\\x02\\x81\\x40\\x20\\x10\\x08\\x04\\x59\\xa2\\x27\\\n\\xbb\\x49\\xae\\xb8\\x61\\xfb\\xcf\\x03\\xc4\\x95\\x64\\xf6\\x20\\x59\\x7d\\xa2\\\n\\x95\\x04\\x02\\x81\\x40\\x20\\x10\\x08\\xb2\\x15\\x57\\x5a\\x7a\\xc0\\xcf\\xb2\\\n\\x68\\x12\\x81\\x40\\x20\\x10\\x08\\x04\\x02\\xe3\\x10\\xe2\\x4a\\x20\\x10\\x08\\\n\\x04\\x02\\x81\\x40\\x88\\x2b\\x81\\x40\\x20\\x10\\x08\\x04\\x02\\x21\\xae\\x04\\\n\\x02\\x81\\x40\\x20\\x10\\x08\\x84\\xb8\\x12\\x08\\x04\\x02\\x81\\x40\\x20\\x10\\\n\\x08\\x71\\x25\\x10\\x08\\x04\\x02\\x81\\x40\\x20\\xc4\\x95\\x40\\x20\\x10\\x08\\\n\\x04\\x02\\x81\\x10\\x57\\x02\\x81\\x40\\x20\\x10\\x08\\x04\\x02\\x21\\xae\\x04\\\n\\x02\\x81\\x40\\x20\\x10\\x08\\x84\\xb8\\x12\\x08\\x04\\x02\\x81\\x40\\x20\\x10\\\n\\xe2\\x4a\\x20\\x10\\x08\\x04\\x02\\x81\\x40\\x88\\x2b\\x81\\x40\\x20\\x10\\x08\\\n\\x04\\x02\\x81\\x10\\x57\\x02\\x81\\x40\\x20\\x10\\x08\\x04\\x93\\x8b\\x49\\x34\\\n\\x81\\x60\\x3a\\xa0\\xaa\\x2a\\xaa\\xaa\\x92\\xc9\\x64\\xd0\\x75\\x1d\\x45\\x51\\\n\\xb6\\xbf\\x64\\x59\\xac\\x21\\x04\\x02\\x81\\x40\\x20\\xc4\\x95\\x40\\xb0\\x5d\\\n\\x34\\xc5\\xe3\\x31\\x52\\xa9\\x34\\xaa\\x9a\\xd9\\x2a\\xa0\\xd4\\x4f\\xfc\\xbf\\\n\\xff\\xdf\\x91\\xe8\\x17\\x5a\\xa6\\x01\\xa2\\xeb\\x93\\x2f\\x93\\xc9\\x84\\xcd\\\n\\x66\\xc3\\x6c\\x36\\x8b\\x46\\x17\\x08\\x04\\x02\\x81\\x10\\x57\\x82\\xe9\\x43\\\n\\x3a\\x9d\\x26\\x1a\\x8d\\x10\\x8b\\xc5\\xb7\\x8a\\xaa\\x14\\x00\\x66\\x29\\x8a\\\n\\x43\\xe9\\xc2\\x46\\x00\\x97\\xde\\x81\\x44\\x02\\x49\\x57\\x01\\x15\\x64\\x0d\\\n\\x09\\x75\\xfb\\xcf\\x92\\x9e\\x01\\x34\\x20\\x83\\x84\\x06\\x9a\\x8a\\x8e\\x1d\\\n\\x55\\xf7\\xa2\\xa9\\x5e\\x32\\x92\\x97\\x8c\\xe4\\x21\\xad\\xbb\\x49\\xea\\x6e\\\n\\x52\\x9a\\x8b\\xb4\\x6e\\x07\\x24\\x14\\x45\\xc1\\x6a\\xb5\\x61\\xb3\\xed\\x78\\\n\\x59\\x2c\\x16\\x24\\x49\\x12\\x37\\x47\\x20\\x10\\x08\\x04\\x42\\x5c\\x09\\xa6\\\n\\x06\\xaa\\xaa\\x12\\x0e\\x87\\xe9\\xeb\\x0b\\x12\\x8b\\xc5\\x50\\x48\\xe2\\x33\\\n\\x6d\\xa6\\x44\\x5f\\x8b\\x45\\xfd\\x18\\x39\\xb1\\x05\\xb4\\xc8\\xf8\\x76\\x76\\\n\\xc9\\x84\\x6e\\xae\\x40\\xb5\\x56\\x93\\x49\\x56\\x90\\x4a\\x97\\x13\\x0d\\x95\\\n\\xd2\\xa9\\x16\\x91\\xc1\\xb1\\x93\\xe0\\xb2\\x5a\\xad\\x62\\xbb\\x51\\x20\\x10\\\n\\x08\\x04\\x42\\x5c\\x09\\x72\\x8b\\x54\\x2a\\x45\\x57\\x57\\x27\\xa1\\x50\\x08\\\n\\xb3\\x14\\xa6\\x50\\x7e\\x9b\\xb2\\xcc\\x9b\\xc8\\xf1\\xb5\\x80\\x3a\\xb1\\x85\\\n\\xd1\\x33\\x48\\xa9\\x7a\\x4c\\xa9\\x7a\\x4c\\x80\\x0d\\xf0\\x6c\\x7f\\x4a\\xf2\\\n\\xd1\\x32\\xd5\\x64\\x52\\x95\\x24\\x23\\x33\\xe9\\xd2\\x67\\x12\\x51\\x4b\\xb1\\\n\\x58\\xac\\xd8\\x6c\\x36\\x9c\\x4e\\x27\\x2e\\x97\\x0b\\x93\\x49\\x3c\\x4e\\x02\\\n\\x81\\x40\\x20\\x10\\xe2\\x4a\\x30\\x09\\x64\\x32\\x19\\x3a\\x3b\\x3b\\x09\\x06\\\n\\x7b\\xc9\\x33\\xad\\xa3\\x56\\x7f\\x19\\x53\\xf8\\x35\\xd0\\x33\\x39\\x5a\\xe0\\\n\\x6e\\xe4\\x4c\\x37\\x16\\xde\\xc7\\x02\\xb8\\x01\\x64\\x07\\x9a\\x36\\x9f\\xa4\\\n\\xba\\x27\\xb1\\xd8\\x2c\\xea\\x3b\\x6a\\x51\\x2c\\x79\\x38\\x9d\\x2e\\x5c\\x2e\\\n\\x17\\x76\\xbb\\x5d\\x6c\\x25\\x0a\\x04\\x02\\x81\\x10\\x57\\x02\\xc1\\xf8\\xa2\\\n\\xeb\\x3a\\xdd\\xdd\\x5d\\x74\\x75\\x75\\xe1\\x51\\xea\\x99\\x95\\x79\\x08\\x39\\\n\\xbc\\x6a\\x6a\\x56\\x46\\x8b\\x21\\x47\\x97\\x63\\x67\\x39\\x76\\x20\\x1f\\xd0\\\n\\x2d\\x55\\x64\\x92\\xf3\\x49\\xf4\\xed\\x41\\x97\\xb4\\x37\\x8a\\xbd\\x1c\\x97\\\n\\xcb\\x85\\xd3\\x29\\xac\\x5a\\x02\\x81\\x40\\x20\\xc4\\x95\\x40\\x60\\x30\\x99\\\n\\x4c\\x86\\xd6\\xd6\\x16\\x32\\xf1\\x36\\x6a\\x78\\x14\\x73\\xef\\xf3\\xd3\\xae\\\n\\x8e\\x52\\xaa\\x11\\x73\\xaa\\x11\\x33\\xcf\\xe3\\x06\\x74\\xeb\\x4c\\x52\\xd1\\\n\\x7d\\xe9\\x92\\x16\\x93\\x34\\xef\\x89\\xc3\\xe9\\xc1\\xe5\\x72\\x61\\xb3\\x09\\\n\\xab\\x96\\x40\\x20\\x10\\x08\\x71\\x25\\x10\\x8c\\x81\\x78\\x3c\\x4e\\x73\\x73\\\n\\x13\\x2e\\xd6\\x53\\x1e\\xb9\\x15\\xd4\\xe0\\x6e\\x51\\x6f\\x29\\xb9\\x19\\x6b\\\n\\x72\\x33\\x85\\x3c\\x02\\xb2\\x83\\x4c\\x7c\\x1f\\xe2\\xc1\\xa5\\x74\\x6e\\xb7\\\n\\x6a\\xb9\\x71\\xb9\\x5c\\x28\\x8a\\x22\\x3a\\x89\\x40\\x20\\x10\\x08\\x71\\x25\\\n\\x10\\x64\\x47\\x2c\\x16\\xa3\\xb1\\xb1\\x81\\x62\\xd3\\x7f\\xf1\\xf4\\xde\\x0d\\\n\\x7a\\x7a\\xf7\\x6c\\x08\\x2d\\x86\\x29\\xfc\\x1a\\x6e\\x5e\\xdb\\x6e\\xd5\\x4a\\\n\\x44\\x0f\\xa2\\xad\\x63\\x7f\\x70\\xcc\\xc2\\xeb\\xf5\\xe1\\x72\\xb9\\x84\\x45\\\n\\x4b\\x20\\x10\\x08\\x84\\xb8\\x12\\x08\\x86\\x26\\x95\\x4a\\xd2\\xdc\\xdc\\x44\\\n\\x85\\xf2\\x2c\\xf6\\x9e\\x87\\x44\\x83\\x7c\\x02\\x29\\xb9\\x19\\x7b\\x72\\x33\\\n\\x76\\x1e\\x46\\x8f\\xcf\\x22\\x1e\\x3f\\x9c\\x66\\xf9\\x00\\x2c\\xae\\x5a\\xbc\\\n\\x5e\\x1f\\x36\\x9b\\x4d\\x34\\x92\\x40\\x20\\x10\\x08\\x71\\x25\\x10\\xec\\x20\\\n\\x93\\xc9\\xd0\\xd8\\xd8\\x48\\x81\\xfc\\x96\\x10\\x56\\x23\\x0a\\xad\\x4d\\x38\\\n\\x92\\x9b\\x70\\xf0\\x00\\x5a\\x7c\\x01\\xb1\\xd0\\xa1\\x74\\x9b\\x0f\\xc4\\xee\\\n\\xa9\\xc2\\xe3\\xf1\\x08\\x67\\x78\\x81\\x40\\x20\\x10\\xe2\\x4a\\xb0\\xbb\\xa3\\\n\\xeb\\x3a\\x4d\\x4d\\x4d\\x38\\xf5\\x75\\x78\\x83\\x77\\x8b\\x06\\x19\\x05\\x72\\\n\\x6c\\x25\\xae\\xd8\\x4a\\x5c\\xdc\\x87\\x16\\x5d\\x4a\\xa4\\xe7\\x50\\x12\\xf6\\\n\\x83\\x71\\x7a\\x4a\\xc5\\xb6\\xa1\\x40\\x20\\x10\\x08\\x71\\x25\\xd8\\x5d\\xe9\\\n\\xeb\\xeb\\x43\\x4d\\x76\\x53\\x14\\xbd\\x75\\xf7\\xf5\\xb1\\x1a\\xbb\\x44\\x45\\\n\\x8e\\xae\\xc0\\x1d\\x5d\\x81\\x5b\\xbe\\x8f\\x74\\xf8\\x48\\x02\\xe6\\xa3\\xc1\\\n\\xb5\\x37\\x3e\\x9f\\x17\\xab\\x55\\x6c\\x1b\\x0a\\x04\\x02\\x81\\x10\\x57\\x82\\\n\\xdd\\x43\\x12\\xe8\\x3a\\x5d\\x5d\\x9d\\x94\\xca\\x2f\\xec\\x36\\xa7\\x02\\xc7\\\n\\x1d\\x2d\\x81\\x39\\xf4\\x2c\\x05\\x3c\\x8b\\x16\\x9b\\x43\\x34\\x74\\x02\\x01\\\n\\xf3\\xc1\\x38\\x3d\\xc5\\x78\\xbd\\x5e\\x71\\xda\\x50\\x20\\x10\\x08\\x84\\xb8\\\n\\x12\\x4c\\x67\\x7a\\x7b\\x7b\\x41\\xed\\xc5\\x16\\xfe\\x9b\\x68\\x8c\\x71\\x40\\\n\\x8e\\x6f\\xc0\\x1d\\xdf\\x80\\x5b\\xfe\\x35\\xa9\\xe4\\xd1\\xb4\\xf7\\x1c\\x89\\\n\\xe4\\x98\\x4f\\x7e\\x7e\\x3e\\x56\\xab\\x55\\x34\\x90\\x40\\x20\\x10\\x08\\x71\\\n\\x25\\x98\\x4e\\x6c\\x8b\\xc0\\x5e\\x2e\\xfd\\x13\\xb4\\xb8\\x68\\x90\\xf1\\x44\\\n\\x8b\\x63\\xe9\\x7b\\x9a\\x12\\x9e\\x46\\x8b\\xef\\x49\\x24\\x7a\\x3c\\xdd\\xf6\\\n\\x43\\xf1\\xe5\\x95\\xe1\\x70\\x38\\x44\\xfb\\x08\\x04\\x02\\x81\\x10\\x57\\x82\\\n\\xe9\\x40\\x32\\x99\\x40\\x52\\xfb\\xb0\\x86\\xff\\x2e\\x1a\\x63\\x02\\x91\\xe3\\\n\\x6b\\xf0\\xc4\\xd7\\xe0\\x09\\x3d\\x48\\x3c\\xfe\\x05\\x9a\\x2d\\x27\\xe0\\xcd\\\n\\xab\\xc0\\xe5\\x72\\x0b\\x07\\x78\\x81\\x40\\x20\\x10\\xe2\\x4a\\x30\\x95\\x89\\\n\\xc5\\xe2\\xf8\\x4c\\x9b\\x40\\x4f\\x8a\\xc6\\x98\\x0c\\xd4\\x20\\xf6\\xde\\x87\\\n\\xb0\\xcb\\x7f\\x25\\x9e\\xfc\\x3c\\xcd\\xe6\\x13\\x71\\xfb\\xab\\xf0\\x7a\\x7d\\\n\\x42\\x64\\x09\\x04\\x02\\x81\\x10\\x57\\x82\\xa9\\x29\\xae\\x62\\xe4\\x69\\xeb\\\n\\x45\\x43\\x4c\\x36\\x5a\\x14\\x7b\\xf0\\x8f\\xd8\\xe5\\xc7\\x49\\xa6\\x4e\\xa1\\\n\\xa9\\xeb\\x44\\x1c\\xbe\\x5a\\xfc\\x7e\\xbf\\x70\\x7e\\x17\\x08\\x04\\x02\\x21\\\n\\xae\\x04\\x53\\x4b\\x5c\\x45\\x29\\x4e\\xad\\x11\\x0d\\x91\\x33\\x22\\x2b\\x81\\\n\\xb5\\xef\\x51\\xca\\xa5\\x27\\x49\\xa9\\x27\\xd2\\xd2\\x7b\\x12\\x56\\xcf\\x4c\\\n\\xf2\\xf2\\xf2\\x30\\x9b\\xcd\\xa2\\x7d\\x04\\x02\\x81\\x40\\x88\\x2b\\x41\\x4e\\\n\\xcf\\xe3\\x9a\\x86\\xae\\x25\\x91\\xe3\\x6b\\x45\\x63\\xe4\\x1a\\x7a\\x1a\\x4b\\\n\\xdf\\xdf\\x29\\xe7\\x1f\\xa4\\xd5\\x63\\x69\\x0f\\x9d\\x8c\\xe2\\x9c\\x45\\x7e\\\n\\x7e\\x81\\x38\\x61\\x28\\x10\\x08\\x04\\x42\\x5c\\x09\\x72\\x19\\x97\\xdc\\x2e\\\n\\x82\\x86\\xe6\\x34\\x2a\\xe6\\xd0\\x73\\x94\\xf1\\x4f\\x32\\x99\\x23\\xe8\\x8c\\\n\\x9c\\x8a\\x6e\\x9f\\x4d\\x7e\\x7e\\x3e\\x0e\\x87\\x53\\x34\\x8f\\x40\\x20\\x10\\\n\\x08\\x71\\x25\\xc8\\x25\\x74\\x5d\\x47\\x92\\x34\\xd1\\x10\\x53\\xe3\\x6e\\x61\\\n\\x0a\\xbf\\x44\\x29\\x2f\\x91\\x51\\x0f\\xa6\\x3b\\xf1\\x79\\x02\\xe6\\x79\\x14\\\n\\x15\\x15\\x0a\\x91\\x25\\x10\\x08\\x04\\x42\\x5c\\x09\\x72\\x6b\\xca\\x16\\x27\\\n\\xd2\\xa6\\xdc\\x00\\x10\\x7e\\x9d\\x62\\x5e\\x47\\x73\\xee\\x47\\x57\\xcb\\x69\\\n\\x74\\x59\\x17\\x52\\x58\\x58\\x84\\xdd\\x6e\\x17\\x8d\\x23\\x10\\x08\\x04\\x42\\\n\\x5c\\x09\\x26\\x55\\x58\\xe9\\x3a\\x08\\x71\\x35\\x65\\x91\\xa3\\xef\\x50\\x14\\\n\\x7d\\x07\\xcd\\xb1\\x88\\x9e\\xe4\\xe9\\x74\\xd9\\xf6\\xa5\\xb0\\xb0\\x10\\x9b\\\n\\x4d\\xe4\\x30\\x14\\x08\\x04\\x02\\x21\\xae\\x04\\x93\\x82\\x24\\x49\\xa0\\x8b\\\n\\x76\\x98\\xf2\\x22\\x2b\\xf6\\x21\\x05\\xb1\\x0f\\xd1\\xec\\x7b\\x12\\x4c\\x9e\\\n\\x41\\xb7\\xfd\\x40\\x0a\\x0a\\x8a\\x84\\xe3\\xbb\\x40\\x20\\x10\\x08\\x71\\x25\\\n\\x98\\x68\\x14\\x45\\x41\\x92\\x45\\x0c\\xa5\\x69\\x23\\xb2\\xe2\\x6b\\xc8\\x8b\\\n\\xdf\\x88\\x66\\x9b\\x43\\x4f\\xec\\x5c\\x54\\xe7\\x7e\\x14\\x14\\x14\\x62\\xb1\\\n\\x58\\x44\\xe3\\x08\\x04\\x02\\x81\\x10\\x57\\x82\\x89\\x22\\x23\\x17\\x88\\x46\\\n\\x98\\x6e\\x22\\x2b\\xb1\\x81\\x82\\xc4\\xd5\\x68\\xa9\\x7d\\x09\\x44\\xcf\\x46\\\n\\x76\\xcd\\xa7\\xa0\\xa0\\x40\\xc4\\xc9\\x12\\x08\\x04\\x02\\x21\\xae\\x04\\x13\\\n\\x81\\x26\\x7b\\xd1\\xcd\\x25\\x48\\xe9\\x76\\xd1\\x18\\x8a\\x17\\xcd\\x5a\\x83\\\n\\x6a\\xae\\x24\\x25\\x57\\xa0\\xe2\\x42\\x22\\x83\\x84\\x8a\\x44\\x0a\\x99\\x0c\\\n\\xe8\\x99\\xfe\\xdf\\xe9\\x69\\x24\\x92\\x28\\x99\\x0e\\xe4\\x54\\x03\\x52\\xba\\\n\\x2d\\xf7\\x44\\x56\\xf4\\x5d\\x4a\\xa2\\xef\\x92\\x51\\x8f\\xa5\\x25\\x7c\\x06\\\n\\x76\\xef\\x0c\\xf2\\xf3\\x0b\\x30\\x99\\xc4\\x10\\x22\\x10\\x08\\x04\\x42\\x5c\\\n\\x09\\xc6\\xaf\\x33\\x99\\x4c\\x68\\xb6\\xd9\\x28\\xbb\\x9b\\xb8\\x92\\x5d\\xa4\\\n\\xdc\\x47\\x90\\x94\\x67\\x12\\xa7\\x94\\xa8\\x56\\x4c\\x5a\\x73\\x6d\\x55\\x9c\\\n\\x5b\\x5f\\x59\\x5d\\x07\\xb0\\x81\\x62\\x4b\\xe1\\x54\\x02\\xd8\\xa4\\x76\\xac\\\n\\x7a\\x2b\\x66\\xb5\\x09\\x25\\xd5\\x80\\x94\\x6a\\x04\\x3d\\x35\\xb9\\xf7\\x38\\\n\\xf4\\x02\\x95\\xd2\\xcb\\x24\\x39\\x8d\\xc6\\xbe\\x93\\x70\\xf9\\x2a\\xc8\\xcf\\\n\\xcf\\x17\\x69\\x75\\x04\\x02\\x81\\x40\\x88\\x2b\\xc1\\x78\\x60\\x36\\x9b\\x48\\\n\\x29\\x33\\xb1\\xf3\\xc6\\x6e\\x51\\x5f\\xcd\\xb1\\x80\\x88\\xed\\x58\\x3a\\xd3\\\n\\x4b\\x51\\x35\\x4b\\xf6\\x22\\x6a\\x04\\x54\\x2c\\x84\\xd4\\x0a\\x42\\x54\\xec\\\n\\xf8\\xa5\\x05\\xb0\\xe8\\x38\\x94\\x6e\\x3c\\xd2\\x06\\x1c\\x99\\x8f\\x30\\xc5\\\n\\xdf\\x87\\x4c\\xf7\\xc4\\x57\\x5c\\x4f\\x63\\x0d\\x3e\\x42\\xb5\\xf2\\x1c\\x51\\\n\\xe9\\x2b\\xd4\\x05\\x8f\\xc4\\x9f\\x57\\x84\\xdf\\x9f\\x27\\x44\\x96\\x40\\x20\\\n\\x10\\x08\\x71\\x25\\x30\\xb4\\x33\\x99\\x4c\\xc4\\xa5\\x6a\\xa6\\x75\\x84\\x24\\\n\\xc5\\x4d\\xd2\\x75\\x34\\xdd\\xd2\\xe1\\x44\\xd4\\x52\\x98\\xd0\\x80\\xf4\\x12\\\n\\x31\\xb5\\x80\\x18\\x05\\xc0\\x67\\xc0\\x0e\\x2e\\xa5\\x0d\\x8f\\xb4\\x16\\x7b\\\n\\xfa\\x03\\x94\\xd8\\x07\\xa0\\xc5\\x26\\xae\\x38\\x6a\\x08\\x67\\xef\\xaf\\xa8\\\n\\x35\\x3f\\x45\\x48\\x3a\\x87\\xcd\\x3d\\xfb\\x93\\x9f\\x5f\\x80\\xdf\\x9f\\x87\\\n\\x2c\\xcb\\xe2\\x81\\x10\\x08\\x04\\x42\\x5c\\x09\\x04\\x63\\x17\\x57\\x66\\x7a\\\n\\xb4\\x4a\\xf2\\xa6\\x69\\xfd\\x34\\xe7\\x7e\\x34\\x28\\x17\\x91\\xd6\\x72\\x27\\\n\\x8a\\x79\\x44\\x2d\\x25\\x42\\x29\\x48\\x87\\x23\\x39\\x55\\x3c\\x4a\\x23\\x1e\\\n\\x56\\x63\\x4d\\x7d\\x88\\x1c\\x5f\\x39\\x21\\xe9\\x88\\xa4\\x74\\x1b\\xde\\xde\\\n\\x1f\\xe3\\xb6\\xcf\\xa3\\xa7\\xe7\\x1c\\x36\\xf7\\xcc\\xdf\\x2a\\xb2\\xfc\\xfd\\\n\\x21\\x3a\\x04\\x02\\x81\\x40\\x88\\x2b\\x81\\x60\\x57\\xc5\\x95\\x89\\x84\\x96\\\n\\x87\\x6e\\xad\\x45\\x4a\\x6e\\x99\\x56\\x75\\x4b\\xf8\\xce\\xa2\\x51\\x3d\\x15\\\n\\xf4\\xdc\\x15\\x0b\\x3a\\x0a\\x7d\\x6a\\x2d\\x7d\\xd4\\x82\\x72\\x22\\x8a\\x2b\\\n\\x45\\xbe\\x69\\x25\\xae\\xcc\\x9b\\x98\\x22\\x6f\\x8f\\xbb\\xd0\\x92\\xe3\\xeb\\\n\\x28\\x88\\x5f\\x85\\xdf\\xb9\\x3f\\x1d\\x5d\\x5f\\xa1\\xbb\\xbb\\x86\\xc2\\xc2\\\n\\x02\\xbc\\x5e\\x9f\\x10\\x59\\x02\\x81\\x40\\x88\\x2b\\x81\\x60\\x57\\xc5\\x15\\\n\\x40\\xc2\\x7e\\x18\\xf6\\xe9\\x22\\xae\\x64\\x07\\x3d\\xde\\x1f\\xd0\\x95\\xd9\\\n\\x7b\\xca\\x15\\x5d\\xc5\\x42\\x20\\xb3\\x94\\x00\\x4b\\x31\\xb9\\xcf\\xa7\\xc0\\\n\\xf4\\x21\\xce\\xe4\\x1b\\x28\\xd1\\x77\\x31\\xcc\\x41\\x6c\\x10\\x94\\xe8\\xff\\\n\\x28\\xe3\\x1d\\xd2\\x9e\\x63\\x69\\xeb\\x38\\x9d\\xae\\xae\\x22\\x0a\\x0b\\x0b\\\n\\xf1\\x78\\x3c\\x42\\x64\\x09\\x04\\x02\\x21\\xae\\x04\\x82\\x5d\\x11\\x57\\xdd\\\n\\xec\\x47\\x05\\xbf\\x9b\\xf2\\xf5\\xd1\\x2d\\x35\\xb4\\x3a\\xae\\x24\\x9a\\x29\\\n\\x9a\\xf2\\x75\\xc9\\xe8\\x76\\xda\\xd3\\x07\\x80\\x7c\\x00\\x16\\x6f\\x84\\x7c\\\n\\x79\\x05\\xce\\xe4\\xeb\\xc8\\xb1\\x0f\\xc7\\xab\\xf5\\x30\\x87\\x9e\\xa7\\x4a\\\n\\x7a\\x99\\x84\\xf7\\x74\\xda\\xda\\x8e\\xa7\\xbb\\xdb\\x47\\x41\\x41\\xbf\\xc8\\\n\\x12\\x08\\x04\\x02\\x21\\xae\\x04\\x82\\x2c\\x50\\x14\\x05\\x49\\x92\\x88\\xa9\\\n\\x85\\x68\\xf6\\x79\\xc8\\xf1\\x75\\x53\\xb7\\x32\\xb2\\x9d\\x16\\xc7\\x55\\xc4\\\n\\xd4\\x42\\xe3\\x1f\\x3a\\x3d\\x88\\xd5\\x94\\xc2\\xa2\\x64\\x50\\xa4\\x24\\xb2\\\n\\x1e\\x47\\x22\\x8e\\xac\\xa7\\x40\\x71\\x91\\x91\\xbc\\xa4\\x75\\x37\\x29\\xcd\\\n\\x45\\x52\\xb5\\xa2\\xaa\\xc6\\x5a\\x99\\x52\\x9a\\x8b\\x36\\xed\\x50\\x50\\x0e\\\n\\xc5\\xe6\\x0d\\x92\\x2f\\x2f\\xc7\\x9e\\x78\\x65\\x7c\\xee\\x97\\x9e\\xc2\\x16\\\n\\xfc\\x33\\xb5\\xca\\xb3\\x44\\x94\\xb3\\x68\\x6d\\x39\\x94\\xee\\x6e\\x27\\x85\\\n\\x85\\x45\\xb8\\x5c\\x2e\\xf1\\xd0\\x08\\x04\\x02\\x21\\xae\\x04\\x82\\x11\\x3b\\\n\\x94\\xc9\\x44\\x3a\\x9d\\x26\\x61\\x3b\\x04\\xc7\\x14\\x16\\x57\\x61\\xef\\x85\\\n\\xc4\\x32\\xc6\\x08\\x2b\\x59\\x8f\\xe2\\x37\\x6d\\xc0\\xa5\\x7e\\x88\\x25\\xbe\\\n\\x1c\\x29\\x33\\x9a\\x38\\x60\\x0a\\x98\\xfd\\xe8\\x4a\\x1e\\x9a\\xa5\\x8a\\x94\\\n\\x69\\x36\\x31\\x79\\x06\\x91\\x4c\\x25\\x49\\x75\\xec\\xa9\\x68\\x12\\x9a\\x8f\\\n\\x16\\xed\\x28\\x30\\x1d\\x85\\xc3\\xd7\\x49\\x3e\\x6f\\x62\\x0b\\x3f\\x4b\\x28\\\n\\x94\\xa2\\x2f\\xea\\x24\\x14\\x73\\xd0\\x17\\x75\\xf6\\xbf\\x62\\x4e\\x42\\x51\\\n\\x27\\xc1\\xa8\\x93\\x70\\xcc\\x41\\x2a\\x93\\xfd\\xf0\\x61\\x36\\x65\\xf0\\xb9\\\n\\x02\\x78\\xbd\\x7f\\xc3\\x9a\\xb7\\x14\\xdd\\x11\\xa3\\xa8\\xc8\\xc6\\x7e\\xcb\\\n\\x8a\\x29\\x2a\\x74\\xef\\x16\\xcf\\x86\\xa6\\xe9\\x04\\xfb\\x54\\xfa\\x42\\x2a\\\n\\xa1\\x90\\x4a\\x30\\xb4\\xe3\\xff\\x7d\\x21\\x95\\x60\\x9f\\x4a\\x38\\xac\\x92\\\n\\x51\\xb3\\x4f\\xd2\\x69\\xb1\\xc8\\xf8\\xbd\\x0a\\x3e\\x9f\\x82\\xdf\\x67\\xc2\\\n\\xef\\x55\\xc8\\xcf\\x33\\x31\\x67\\xb6\\x0d\\x87\\x3d\\x77\\x4f\\x6c\\xb6\\xb4\\\n\\xa6\\x88\\xc5\\x77\\x6d\\xd1\\x20\\xcb\\x50\\x51\\x66\\xc1\\x6a\\xcd\\xfd\\x13\\\n\\xa9\\x6d\\xed\\x69\\x22\\x51\\x75\\xf8\\x67\\xc3\\x2c\\x51\\x55\\x61\\x41\\x96\\\n\\x73\\x6f\\xcb\\x3c\\x91\\xd4\\xd8\\x52\\x9f\\xa4\\x2f\\xac\\x12\\x8d\\x6a\\x44\\\n\\x63\\xda\\x8e\\x7f\\x63\\x3b\\x7e\\x97\\x4a\\xe9\\xe8\\xfa\\xe8\\x92\\xcb\\x5a\\\n\\x2c\\x32\\x79\\x3e\\x05\\xbf\\xdf\\x44\\xbe\\xbf\\xff\\xdf\\xca\\x72\\x0b\\xb5\\\n\\xd5\\x96\\x69\\xe1\\x3e\\x20\\xc4\\x95\\x60\\x5c\\xc4\\x55\\x97\\xb6\\x0f\\x55\\\n\\xfc\\x66\\x4a\\xd6\\x41\\x75\\x1d\\x48\\x5b\\xe6\\xb3\\x63\\x6f\\x0b\\xbd\\x87\\\n\\x32\\xf5\\x61\\x6c\\xf1\\x37\\xd9\\xf5\\xac\\xd6\\x2a\\xa4\\xbb\\x90\\xd2\\x5d\\\n\\x28\\x89\\x0d\\xd8\\x79\\x09\\x3b\\x90\\x0f\\xe8\\x96\\x2a\\x54\\xdb\\x3c\\x92\\\n\\xca\\x2c\\xa2\\xcc\\x24\\x98\\xa9\\x01\\x46\\x3f\\x28\\x45\\xa2\\xb0\\x76\\x83\\\n\\xce\\x9a\\x75\\xf9\\xac\\x5e\\x7f\\x12\\x6b\\xd6\\x9d\\x48\\x38\\x32\\xee\\xad\\\n\\x0c\\x44\\x91\\xa5\\x3a\\xaa\\x2a\\x15\\x96\\xec\\xed\\x64\\xf1\\x42\\x17\\x7b\\\n\\x2f\\xb0\\xb3\\x74\\x91\\x13\\xb3\\x79\\xea\\x0f\\xae\\x9d\\x5d\\x69\\xde\\xfb\\\n\\x30\\xc6\\x7b\\x1f\\xc4\\x58\\xf1\\x61\\x94\\x0f\\x3f\\x8e\\x13\\x8d\\x69\\x13\\\n\\xf2\\xdd\\x92\\x04\\xb3\\x66\\x58\\xd9\\x6b\\x4f\\x3b\\x0b\\xf6\\xb4\\xb3\\x60\\\n\\xbe\\x9d\\xfd\\x96\\x39\\xb1\\x4d\\xa2\\x20\\x89\\x27\\x34\\x6e\\xbe\\xa3\\x8d\\\n\\xbf\\xfd\\xa3\\x97\\xde\\xa0\\x3a\\xa6\\x6b\\x99\\xcd\\x12\\x0b\\xf6\\xb4\\x73\\\n\\xc9\\xb7\\x8b\\x38\\xf6\\x48\\x6f\\x4e\\xdd\\xf7\\x48\\x54\\xe5\\xb6\\x9f\\xb6\\\n\\xf3\\xe4\\x3f\\x7a\\xe9\\xe9\\xcd\\xae\\x9e\\x0e\\xbb\\xcc\\x41\\x07\\xb8\\xb8\\\n\\xf5\\xfa\\x32\\xaa\\x2b\\x27\\x3e\\x49\\x7a\\x32\\xa9\\xb1\\xb1\\x2e\\xc9\\xfa\\\n\\x8d\\x09\\xd6\\x6d\\x48\\xb0\\x7e\\x63\\x82\\xf5\\x9b\\x12\\xd4\\x37\\xa4\\xd0\\\n\\xf5\\x89\\x2d\\x8b\\xc7\\x2d\\xb3\\xf7\\x02\\x07\\x8b\\x16\\xd8\\xd9\\x7b\\x81\\\n\\x83\\x83\\xf6\\x77\\x91\\xe7\\x9f\\x7a\\x52\\x45\\x8a\\xbd\\xfc\\x95\\xed\\x4d\\\n\\x67\\x3b\\xf0\\x3e\\x24\\xab\\x4f\\x28\\x04\\xc1\\x2e\\xd3\\xdc\\xdc\\x4c\\x38\\\n\\x1c\\x02\\x60\\x96\\x7a\\x2b\\x72\\xec\\xbd\\x29\\xa6\\x0e\\xfd\\x34\\x38\\xef\\\n\\x21\\xa9\\x8d\\xcd\\x9a\\x52\\x24\\xbf\\x86\\x2f\\xfc\\x20\\x68\\xd1\\x09\\x2c\\\n\\x7b\\x01\\x29\\xd7\\x61\\x04\\xe5\\x03\\x09\\xa6\\xab\\x86\\x15\\x53\\xaf\\xbe\\\n\\xa9\\xb1\\x7a\\x9d\\xce\\xea\\x75\\x3a\\x8d\\xcd\\xfa\\x84\\x0f\\xa0\\xc3\\xe1\\\n\\xf7\\x29\\x9c\\x7c\\xbc\\x8f\\xd3\\x4e\\xf1\\xb3\\xef\\x52\\xc7\\x94\\x59\\xc5\\\n\\x76\\x04\\xd2\\x3c\\xf3\\x42\\x1f\\x2b\\x3e\\x88\\xf2\\xde\\x07\\x31\\x1a\\x9a\\\n\\x52\\x39\\x55\\x3e\\xa7\\x53\\xe6\\x98\\x23\\x3c\\x9c\\x74\\xac\\x8f\\x23\\x0e\\\n\\x75\\x4f\\xa8\\xd0\\x4a\\x26\\x35\\x8e\\x3b\\x6d\\x13\\xab\\xd6\\xc4\\x0d\\xbf\\\n\\xf6\\xe1\\x87\\xb8\\xf9\\xdd\\xfd\\x35\\x39\\x61\\xa9\\x8b\\x44\\x54\\x8e\\xfa\\\n\\xdc\\x46\\x36\\x6f\\x49\\xee\\xd2\\xdf\\x3b\\xec\\x32\\x2f\\x3c\\x39\\x9b\\x79\\\n\\x73\\x6c\\xe3\\x5e\\xd6\\x60\\x5f\\x86\\xe7\\xff\\x1d\\xe2\\x99\\x17\\x82\\xbc\\\n\\xf6\\x66\\x84\\x74\\x5a\\xcf\\xc9\\xe7\\xca\\x64\\x82\\xc3\\x0f\\xf6\\x70\\xda\\\n\\x29\\x3e\\x8e\\x39\\xd2\\x8b\\xdd\\x96\\x9b\\x16\\x4b\\x2d\\xde\\x49\\xf2\\xbf\\\n\\x97\\x6e\\x55\\x56\\x26\\x21\\xae\\x04\\xc6\\xd2\\xde\\xde\\x4e\\x6f\\x6f\\x0f\\\n\\x00\\x79\\xe6\\x75\\x14\\xf4\\x5c\\x3d\\xa5\\xca\\xdf\\xe3\\xbf\\x91\\xae\\xcc\\\n\\xc2\\x31\\x5d\\xa3\\x42\\xff\\x13\\x8e\\xc8\\x93\\x93\\x5b\\x11\\x4b\\x19\\x49\\\n\\xe7\\x11\\x04\\xe5\\xcf\\xd0\\x97\\x2a\\x06\\xa0\\xbe\\x51\\xe7\\xc9\\x67\\x34\\\n\\x5e\\x7c\\x45\\x23\\x91\\x98\\x1a\\xf7\\xa3\\xb2\\xdc\\xcc\\xe7\\x4f\\xf6\\xf3\\\n\\x8d\\x73\\x0a\\x28\\x2e\\xcc\\xcd\\x64\\xd1\\x2b\\x3e\\x88\\xf2\\xdb\\x87\\xbb\\\n\\x78\\xe6\\xf9\\x20\\x99\\xcc\\xd4\\x68\\x57\\xa7\\x43\\xe6\\xe8\\x23\\x3c\\x5c\\\n\\x78\\x5e\\x21\\x8b\\x17\\x3a\\xc6\\xfd\\xfb\\x6e\\xbe\\xb3\\x95\\x5f\\xfc\\xa6\\\n\\x73\\xdc\\xae\\x7f\\xd8\\x67\\xdd\\xfc\\xf1\\x81\\x1a\\x2c\\x96\\xc9\\x9d\\x78\\\n\\x2f\\xbd\\xaa\\x89\\x3f\\x3f\\xd6\\x33\\xa6\\x6b\\x2c\\x5b\\xec\\xe0\\x9f\\x4f\\\n\\xcc\\x1e\\x97\\xf2\\xf5\\x85\\x54\\x9e\\x7d\\x21\\xc8\\x33\\xcf\\xf7\\xf1\\xfa\\\n\\xdb\\xe1\\x29\\xd3\\x5f\\x3f\\xb9\\x40\\x38\\xf9\\x38\\x1f\\x17\\x7f\\xab\\x88\\\n\\x19\\x35\\xd6\\x9c\\x2a\\x9b\\x10\\x57\\x82\\x71\\xa5\\xab\\xab\\x8b\\xce\\xce\\\n\\xc0\\xf6\\x9f\\x67\\x65\\xae\\x41\\x8e\\xaf\\x9d\\x12\\x65\\xd7\\x9c\\xfb\\xb2\\\n\\x49\\xbe\\x72\\x4c\\xd7\\xa8\\xe2\\x0f\\xd8\\xc2\\x4f\\xe5\\x4e\\x9d\\x74\\x89\\\n\\x7f\\xaf\\x3c\\x9e\\x07\\x9e\\x3f\\x91\\xb7\\x3f\\x9c\\xba\\xe1\\x5d\\x9d\\x0e\\\n\\x99\\xef\\x7c\\xb3\\x90\\x6f\\x7f\\xb3\\x28\\x27\\x2c\\x14\\xa9\\x94\\xc6\\x53\\\n\\xcf\\x05\\x79\\xf0\\xe1\\x2e\\x3e\\x5c\\x19\\x9f\\xd2\\xcf\\xec\\xe1\\x87\\xb8\\\n\\xb9\\xfc\\xbb\\xc5\\x2c\\x5b\\x3c\\x7e\\xc1\\x71\\x97\\x7c\\x76\\x0d\\xcd\\xad\\\n\\xe3\\x1b\\x67\\xed\\x84\\x63\\xbc\\x3c\\xf8\\x8b\\x6a\\x14\\x65\\x72\\x2c\\x9d\\\n\\xba\\xae\\x33\\x7b\\xf1\\x2a\\x42\\xe1\\xb1\\x6f\\xfd\\x7e\\xf4\\xd6\\x9e\\x94\\\n\\x96\\x18\\xb7\\x98\\x50\\x55\\x9d\\xff\\xfb\\x73\\x37\\x77\\xdc\\xdd\\x4e\\x5f\\\n\\x48\\x65\\xaa\\xa3\\x28\\xf0\\x95\\x33\\xf2\\xb8\\xfc\\xbb\\x25\\x94\\x14\\xe7\\\n\\xc6\\xa2\\xeb\\xd3\\xe2\\x4a\\xe4\\xa8\\x10\\x18\\x8a\\xd9\\x3c\\x70\\x6f\\xbc\\\n\\xcf\\x7e\\xc6\\x94\\x29\\x7b\\xaf\\xe5\\xc4\\x31\\xfd\\x7d\\xa1\\xfc\\x6e\\x4e\\\n\\x09\\xab\\xc7\\x5e\\x3f\\x84\\x03\\x2e\\xf9\\x39\\xe7\\xde\\x7e\\xf6\\x94\\x16\\\n\\x56\\x00\\xd1\\x98\\xc6\\x9d\\xf7\\x76\\xb0\\xdf\\xe1\\x6b\\xf9\\xcb\\xe3\\x3d\\\n\\x68\\xda\\xe4\\x6c\\x61\\x68\\x9a\\xce\\x7d\\x0f\\x04\\x58\\x7c\\xd0\\x5a\\x2e\\\n\\xba\\xbc\\x69\\xca\\x0b\\x2b\\x80\\xff\\xbc\\x16\\xe6\\xf8\\xd3\\x36\\x71\\xc6\\\n\\x39\\x9b\\xf9\\x78\\x95\\xf1\\xe9\\x93\\xc2\\x61\\x75\\xdc\\x85\\x15\\xc0\\x73\\\n\\x2f\\xf6\\xf1\\xfd\\xab\\x9b\\x26\\xad\\x1d\\x9b\\x5a\\xd2\\x86\\x08\\x2b\\x80\\\n\\x55\\x6b\\x8d\\xeb\\x57\\x6f\\xbc\\x1d\\xe6\\xb0\\x13\\x37\\x70\\xf5\\x8f\\x5a\\\n\\xa6\\x85\\xb0\\xea\\x17\\x8b\\xf0\\x87\\x47\\x7a\\xd8\\xf7\\xb0\\xb5\\xdc\\x7c\\\n\\x67\\x2b\\xf1\\x84\\x96\\x73\\x65\\x14\\xe2\\x4a\\x60\\x28\\xdb\\x62\\x5d\\x6d\\\n\\xa3\\x33\\xbd\\x10\\xdd\\x5a\\x3b\\x05\\x0a\\x5e\\x48\\x77\\x66\\xfe\\xae\\xaf\\\n\\xa4\\xf4\\x08\\xbe\\xc8\\x03\\xb9\\x21\\x44\\x12\\x36\\xbe\\x73\\xff\\x77\\xb9\\\n\\xf8\\x57\\xdf\\xa6\\x31\\x50\\x34\\xad\\xfa\\x57\\x47\\x20\\xc3\\x25\\x57\\x36\\\n\\x71\\xf2\\x97\\x36\\xd1\\xd9\\x35\\xa1\\x89\\x1d\\x09\\x74\\xa5\\x39\\xfd\\x9c\\\n\\x3a\\x6e\\xba\\xa3\\x8d\\xce\\xee\\xcc\\xb4\\x7b\\x76\\x5f\\x7d\\x33\\xc2\\xb1\\\n\\x5f\\xd8\\xc8\\x7d\\x0f\\x04\\x46\\x7d\\xf2\\x6b\\x38\\x62\\x13\\x38\\xf1\\x3d\\\n\\xf2\\x44\\x2f\\x4f\\x3f\\x17\\x9c\\x94\\xf6\\x4b\\x26\\x8d\\xab\\x67\\x34\\xaa\\\n\\x1a\\x52\\x9e\\x0b\\x2e\\x69\\xe0\\x0b\\x5f\\xad\\x63\\xdd\\x86\\x04\\xd3\\x91\\\n\\x44\\x52\\xe7\\x17\\xbf\\xe9\\xe4\\xf8\\x2f\\x6c\\x64\\x4b\\x43\\x32\\xa7\\xca\\\n\\x26\\xc4\\xd5\\x08\\xe8\\x6a\\x04\\x3d\\xbe\\x09\\xbd\\xef\\x2d\\xf4\\xe0\\x6b\\\n\\xe8\\xa1\\xff\\xa1\\x87\\x3f\\x40\\x8f\\xae\\x41\\x8f\\xd7\\xa1\\xa7\\xda\\xd1\\\n\\x75\\x4d\\x34\\xd4\\x76\\x71\\xf5\\x69\\x13\\xad\\x44\\xc8\\x91\\xfb\\xd6\\xab\\\n\\x8c\\x7d\\x21\\xbb\\x72\\xd2\\x6e\\x1b\\xc5\\xd2\\xcb\\x48\\x6a\\xcf\\xa4\\xd7\\\n\\x63\\x75\\x43\\x35\\x47\\x5f\\xfd\\x63\\x9e\\x7c\\xf3\\xa0\\x69\\xdd\\xcf\\xde\\\n\\x7d\\x2f\\xc6\\x31\\xa7\\x6e\\x64\\xcd\\xfa\\x89\\xb1\\x1c\\xbd\\xfe\\x56\\x98\\\n\\xc3\\x8e\\xdf\\xc0\\x1b\\x6f\\x47\\xa6\\x75\\xbb\\x66\\x32\\x70\\xd3\\x1d\\x6d\\\n\\x9c\\x7e\\x76\\x1d\\x1d\\x81\\xf4\\x94\\xac\\xc3\\x55\\x3f\\x6a\\xa1\\xa7\\x37\\\n\\xc3\\xee\\x4c\\x22\\xa9\\x71\\xf6\\x05\\xf5\\xfc\\xfd\\x99\\xe0\\x6e\\x51\\xdf\\\n\\xd5\\xeb\\x12\\x1c\\x79\\xca\\x06\\x9e\\xff\\x77\\x5f\\xee\\xcc\\x85\\x42\\x0e\\\n\\x7c\\x42\\x48\\x25\\x1a\\xd0\\xfb\\xde\\x40\\xef\\x7b\\x0b\\x12\\xf5\\x90\\x0a\\\n\\x64\\x77\\xda\\x4b\\xb2\\x80\\xad\\x06\\xc9\\x3e\\x03\\x6c\\xb5\\x60\\x9b\\x81\\\n\\xe4\\x98\\x03\\xf6\\x39\\xbb\\x5d\\xba\\x8f\\x4f\\x5b\\xae\\x00\\x02\\x99\\x65\\\n\\x78\\xcc\\x65\\x48\\xe9\\xd6\\xdc\\x1d\\x8c\\x4c\\x7b\\xc0\\x18\\xc6\\x63\\x47\\\n\\x66\\xf9\\xa4\\xd7\\xe1\\xe1\\x7f\\x1f\\xcd\\x0d\\x7f\\x3c\\x9b\\x64\\xda\\xbc\\\n\\x5b\\xf4\\xb5\\xe6\\xd6\\x34\\x27\\x9c\\xb6\\x89\\x5f\\xdf\\x53\\xc5\\x31\\x47\\\n\\x8c\\xcf\\x71\\x7c\\x55\\xd5\\xb9\\xf3\\xde\\x76\\xee\\xf9\\x65\\x20\\xa7\\x4e\\\n\\x54\\x8e\\xbb\\x98\\x7c\\x3b\\xc2\\x21\\xc7\\xaf\\xe7\\xcf\\x0f\\xd6\\xb2\\x74\\\n\\x91\\x73\\x4a\\x95\\xbd\\xab\\x3b\\xc3\\xb5\\x37\\xb7\\xf0\\xcb\\x9f\\x55\\xef\\\n\\x96\\xf3\\x58\\x2c\\xae\\xf1\\xd5\\xf3\\xb7\\x4c\\xfb\\x85\\xc0\\xa7\\x09\\x87\\\n\\x35\\xce\\xb9\\xb0\\x9e\\x6b\\x7e\\x50\\xc2\\xc5\\x17\\x16\\x0b\\x71\\x35\\xe9\\\n\\x82\\x2a\\xb6\\x11\\x3d\\xf0\\x08\\x7a\\xdf\\x1b\\x90\\xdc\\xc5\\xfd\\x7a\\x3d\\\n\\x05\\xf1\\x0d\\xe8\\xf1\\x0d\\x3b\\x7e\\x05\\x60\\xf2\\x23\\x79\\xf6\\x07\\xcf\\\n\\x67\\x90\\xbc\\x07\\x20\\x59\\x2b\\xa6\\x7d\\x7b\\x2a\\x8a\\x82\\xa2\\x28\\xa8\\\n\\xaa\\xfa\\x89\\xb6\\x50\\x08\\xbb\\xcf\\xc2\\xd3\\x73\\x67\\xee\\xae\\xd8\\xd9\\\n\\xf5\\x83\\x1c\\x26\\x3d\\x88\\x1c\\x5f\\x33\\x79\\x7d\\x58\\x97\\xb8\\xe8\\x97\\\n\\x17\\x4d\\x7b\\x6b\\xd5\\x60\\x44\\x63\\xfd\\x2b\\xf4\\xfb\\x7f\\x5a\\xc5\\x69\\\n\\xa7\\xf8\\x0d\\xbd\\x76\\x3c\\xa1\\xf1\\xe5\\xf3\\xea\\x78\\xfb\\x9d\\x28\\xbb\\\n\\x23\\x3d\\xbd\\x2a\\x67\\x7e\\x7d\\x0b\\xcf\\x3c\\x3a\\x8b\\x39\\xb3\\x6c\\x53\\\n\\xaa\\xec\\x4f\\x3c\\x1d\\xe4\\x0b\\x27\\xfb\\x39\\xe2\\xd0\\xdd\\x2b\\xd5\\x92\\\n\\xa6\\xe9\\x9c\\xf5\\xcd\\x2d\\xbc\\xf9\\xdf\\x08\\xbb\\x2b\\xb7\\xfe\\xa4\\x9d\\\n\\xb2\\x12\\x0b\\xa7\\x7f\\xce\\x3f\\xa9\\xe5\\xd8\\x6d\\xc5\\x95\\x9e\\xee\\x46\\\n\\x6f\\xfe\\x39\\x7a\\xe7\\xe3\\x8c\\x5b\\x12\\xdb\\x4c\\x2f\\x7a\\xcf\\xf3\\xd0\\\n\\xf3\\x7c\\xbf\\xd8\\xb2\\x56\\x22\\xf9\\x0e\\x45\\x2a\\x3c\\x0d\\xc9\\x31\\x77\\\n\\xda\\xb6\\xad\\xcd\\x66\\x27\\x1a\\x1d\\xf8\\x70\\xb7\\xa7\\xf7\\xc3\\xe5\\x58\\\n\\x80\\x1c\\x5b\\x99\\x9b\\xfd\\x61\\x0c\\x5b\\x82\\x16\\x76\\xf1\\x88\\xb9\\x6c\\\n\\x47\\xb3\\xcd\\x46\\x35\\x55\\x01\\x2a\\x92\\x9e\\xec\\x7f\\x69\\x49\\xa0\\xff\\\n\\x5f\\x29\\xd3\\x09\\x99\\xde\\x61\\x2f\\x73\\xe7\\xe3\\x67\\xec\\x96\\xc2\\x6a\\\n\\x87\\xb8\\x84\\xcb\\xae\\x6e\\x62\\xfe\\x3c\\x1b\\x7b\\xcc\\xb5\\x1b\\x76\\xdd\\\n\\x4b\\xaf\\x6a\\xda\\x6d\\x85\\xd5\\x36\\x7a\\x83\\x2a\\x67\\x9c\\x5b\\xc7\\x73\\\n\\x8f\\xcd\\xa2\\xbc\\xcc\\x32\\xa5\\xca\\x7e\\xd9\\xb5\\xcd\\xbc\\xf9\\xc2\\x5c\\\n\\x5c\\x2e\\x65\\xb7\\xb9\\x5f\\x7f\\xfd\\x5b\\xef\\x6e\\x2d\\xac\\xb6\\x71\\xc9\\\n\\x95\\x4d\\x54\\x96\\x9b\\xd9\\x7f\\x9f\\xc9\\x4b\\xb1\\xb5\\xdb\\x89\\x2b\\x5d\\\n\\xd7\\xd1\\xdb\\x1e\\x44\\x6f\\xfd\\xf5\\xc4\\x06\\x78\\x04\\x48\\x36\\xa1\\x77\\\n\\xfc\\x11\\xbd\\xe3\\x8f\\xe0\\xdc\\x0b\\xa9\\xe0\\x0b\\x48\\xf9\\x27\\x22\\x99\\\n\\xa6\\x57\\xfa\\x0f\\x9b\\xcd\\xb6\\x93\\xb8\\x02\\x89\\x80\\xe5\\x9b\\x94\\xc4\\\n\\x2e\\x66\\xd7\\xa3\\x95\\x8f\\x23\\x63\\xd8\\xbe\\xb5\\x98\\x46\\xe1\\x9b\\xa2\\\n\\x78\\x49\\xba\\x8e\\xa6\\x57\\xfa\\x2c\\x21\\xb5\\x1c\\x90\\x06\\x36\\x87\\x04\\\n\\x6c\\x9b\\x0b\\x14\\xc0\\x0c\\x4e\\x25\\x80\\x47\\xda\\x80\\x4d\\x5d\\x8b\\x29\\\n\\xfe\\x21\\x52\\xba\\x6d\\xfb\\xc7\\x9f\\x7b\\x77\\x3f\\xee\\x7d\\xea\\xd4\\xdd\\\n\\x7e\\x30\\x8d\\x27\\x74\\xce\\xfb\\x4e\\x03\\xff\\x7e\\x6a\\xb6\\x21\\x93\\xe9\\\n\\x7d\\x0f\\x04\\x78\\xf2\\x1f\\x41\\x04\\xd0\\xda\\x96\\xe6\\x8c\\x73\\xeb\\x78\\\n\\xf1\\xc9\\xd9\\x53\\x4a\\xa8\\xb4\\xb6\\xa5\\xb9\\xf9\\xce\\x36\\xee\\xb8\\xa9\\\n\\x62\\xb7\\xb8\\x4f\\x91\\x88\\xca\\x6d\\x77\\xb5\\x89\\x0e\\x0b\\xa4\\xd3\\x3a\\\n\\xe7\\x5c\\x58\\xcf\\x4b\\xff\\x98\\x43\\x65\\xf9\\xe4\\x2c\\x0a\\x76\\x3f\\x71\\\n\\x55\\x7f\\x23\\x7a\\xe7\\xa3\\x93\\x5f\\x90\\xe8\\x2a\\xf4\\xe8\\x2a\\xf4\\xa6\\\n\\x3b\\x90\\xfc\\xc7\\x20\\x95\\x7e\\xbd\\xdf\\x4f\\x6b\\x9a\\x88\\xab\\xc1\\x08\\\n\\xa9\\x15\\xf8\\xbd\\xa7\\x62\\xed\\x7b\\x32\\xf7\\xfa\\x85\\xbe\\xeb\\xe2\\xca\\\n\\x2c\\x65\\x13\\x89\\x5b\\x26\\xe1\\xfb\\x32\\xcd\\xda\\xc9\\xe8\\xba\\x05\\xb7\\\n\\xcb\\x4d\\xa1\\xd5\\x86\\xc9\\x64\\xc2\\x64\\x52\\x50\\x14\\x13\\x26\\x93\\x09\\\n\\x49\\x92\\x50\\x55\\x15\\x55\\x55\\xd1\\x34\\x15\\x55\\xd5\\x50\\xd5\\x12\\x52\\\n\\x99\\x3d\\x09\\x25\\x8e\\x21\\x21\\x27\\x30\\xeb\\x5d\\x78\\xe5\\x8d\\x34\\xd4\\\n\\xb5\\xf2\\xdd\\xfb\\x8f\\x1a\\x53\\xd9\\xa7\\x13\\x9b\\xb7\\x24\\xb9\\xf8\\x8a\\\n\\x46\\x1e\\xba\\x7f\\x6c\\xa7\\x53\\x5f\\x79\\x23\\xcc\\x2d\\x3f\\x11\\x93\\xd4\\\n\\x27\\xd9\\xb8\\x39\\xc9\\xfd\\x0f\\x76\\x72\\xc5\\x25\\x25\\x53\\xaa\\xdc\\xff\\\n\\xf7\\xe7\\x6e\\x4e\\x3d\\xc9\\x37\\xa9\\x16\\x8c\\x89\\xe2\\x9e\\x5f\\x05\\x08\\\n\\x74\\x65\\x44\\x67\\xdd\\x4a\\x6f\\x50\\xe5\\xae\\x9f\\x77\\x70\\xef\\x1d\\x95\\\n\\x93\\xf2\\xfd\\xbb\\xd5\\x69\\x41\\xad\\xe1\\xd6\\xdc\\x10\\x56\\x03\\x0a\\x95\\\n\\x40\\xef\\x7e\\x1a\\x6d\\xd5\\xe7\\xd0\\xea\\xae\\x41\\x4f\\x75\\x4c\\x5b\\x71\\\n\\x05\\xd0\\xaa\\x7f\\x1e\\x94\\x5c\\x0c\\x54\\x9b\\xbd\\x40\\x91\\x65\\x19\\xb3\\\n\\xd9\\xbc\\xfd\\xb0\\x42\\x42\\x1d\\xc1\\xe1\\x57\\xb2\\x12\\xf0\\xdf\\x41\\x9b\\\n\\xfc\\x25\\x0a\\x0a\\x2b\\x98\\x3d\\x7b\\x0e\\xe5\\xe5\\x15\\x14\\x14\\x14\\xe0\\\n\\xf3\\xf9\\x70\\xb9\\xdc\\xd8\\xed\\x76\\xcc\\x66\\x33\\x26\\x93\\x09\\xab\\xd5\\\n\\x8a\\xc3\\xe1\\xc0\\xe5\\x72\\xe3\\xf5\\x7a\\xc9\\xcb\\xcb\\xa3\\xa8\\xa8\\x88\\\n\\xaa\\xaa\\x6a\\xe6\\xcc\\x99\\x4b\\x79\\xed\\x3e\\x44\\x6c\\xa7\\x70\\xde\\x2d\\\n\\x27\\x11\\x4f\\x59\\x10\\xec\\xe0\\x99\\x17\\x42\\x3c\\xfe\\xf7\\x5d\\x3f\\x38\\\n\\xb1\\xa5\\x21\\xc9\\xf9\\xdf\\x6b\\x40\\x13\\x07\\x80\\x77\\xe2\\xd7\\x0f\\x75\\\n\\xd2\\x35\\x05\\x43\\x50\\x5c\\x72\\x65\\x33\\x89\\xe4\\xf4\\xbe\\xa1\\xb1\\xb8\\\n\\xc6\\x03\\xff\\xd7\\x29\\x3a\\xe9\\xa7\\x78\\xfc\\xa9\\x1e\\x9a\\x5a\\x26\\x27\\\n\\x0d\\xd5\\x6e\\x23\\xae\\xb4\\xe6\\x7b\\xfb\\xb7\\xe3\\x72\\xb7\\x84\\xe8\\x5d\\\n\\x7f\\x43\\xfb\\xf8\\x18\\xb4\\xe6\\x9f\\xa3\\xab\\x53\\xd7\\xd7\\xc3\\x62\\xb1\\\n\\x20\\xcb\\x83\\x77\\xad\\xb4\\xee\\x20\\xec\\x39\\x2f\\x07\\x4b\\x3d\\xf2\\xa3\\\n\\x20\\xcb\\x32\\x45\\x45\\xc5\\xcc\\x99\\x33\\x97\\x59\\xb3\\x66\\x53\\x56\\x56\\\n\\x0e\\x40\\x5c\\x2b\\x18\\xf6\\xef\\x7a\\x7c\\x57\\x13\\x95\\xe6\\x51\\x5b\\x3b\\\n\\x83\\xfc\\xfc\\x7c\\x14\\x45\\x19\\x73\\xfb\\x5e\\x7e\\x6d\\x0f\\x2d\\xad\\x93\\\n\\x37\\x61\\x98\\x14\\x15\\x97\\x3d\\x89\\xd3\\xa1\\xe3\\x74\\x32\\xe4\\xcb\\x36\\\n\\x09\\x7e\\xd0\\x0f\\xfd\\xa1\\x83\\xa6\\xa6\\x26\\x32\\xa3\\xcc\\xed\\x91\\x4c\\\n\\x6a\\x9c\\x7d\\xc1\\x96\\x49\\x0d\\xb4\\x68\\x36\\x4b\\xb8\\xdd\\xf2\\x88\\x2f\\\n\\xa7\\x63\\xe2\\x87\\xee\\x68\\x4c\\xe3\\xee\\x5f\\x4e\\xbd\\xc5\\x5f\\x5d\\x7d\\\n\\x92\\x9f\\xdc\\xdb\\x3e\\xad\\xe7\\xb7\\xb7\\xfe\\x17\\x21\\x91\\xd4\\x73\\xaa\\\n\\x8f\\x0e\\xf5\\x9a\\xc8\\x0c\\x0b\\x99\\x0c\\xfc\\xe2\\x37\\x81\\xc9\\x19\\x23\\\n\\x77\\x07\\x61\\xa5\\xa7\\x3a\\xd0\\xdb\\x7e\\x3b\\x45\\x54\\x60\\x02\\xbd\\xf5\\\n\\x97\\xe8\\x81\\x47\\x91\\x2a\\xbe\\x87\\x54\\x78\\xc6\\x94\\x0c\\xe7\\xe0\\x70\\\n\\x38\\x88\\x44\\x06\\x77\\xac\\x6c\\xcb\\x1c\\x88\\xd3\\xfe\\x22\\x72\\x7c\\x75\\\n\\xee\\xf4\\x91\\x11\\x2c\\x57\\x36\\x9b\\x8d\\x8a\\x8a\\x4a\\xcc\\xe6\\x1d\\x61\\\n\\x0e\\x3c\\x1e\\x0f\\xd1\\xa8\\x8f\\x60\\x10\\x90\\x1d\\xa0\\xed\\x1c\\xdd\\x5a\\\n\\x75\\x1d\\x48\\x57\\x66\\x01\\xb5\\xb5\\x95\\x63\\x16\\x55\\xdb\\x78\\xfd\\xad\\\n\\x30\\xaf\\xbe\\x39\\xbe\\x4e\\xab\\x76\\x6b\\x92\\xbd\\x6a\\xea\\x59\\x34\\x63\\\n\\x33\\x8b\\x66\\x6e\\x66\\x56\\x59\\x2b\\x2e\\x7b\\x1c\\xb7\\x3d\\x86\\xdb\\x1e\\\n\\xc7\\x66\\xd9\\xb6\\x1a\\x94\\x48\\x3a\\x8f\\xa2\\x4d\\xfa\\x3c\\x29\\x69\\xf0\\\n\\x80\\xa5\\xa1\\x30\\xb4\\x75\\xe8\\xb4\\xb5\\xeb\\xb4\\xb4\\xc1\\xbf\\x5f\\xd5\\\n\\xd8\\xd2\\x30\\x7e\\x13\\xc1\\xfb\\x1f\\xcb\\xb4\\xaf\\x7f\\x95\\x78\\x7c\\x1f\\\n\\x8a\\x8b\\x4b\\xf0\\x7a\\xb3\\xb3\\x94\\x3e\\xfa\\x64\\x2f\\xeb\\x37\\x8e\\x6f\\\n\\x20\\x42\\xb7\\x5b\\x66\\xef\\xbd\\x1c\\x2c\\x5e\\x68\\x67\\xd1\\x42\\x07\\x35\\\n\\x95\\x16\\x5c\\x2e\\x05\\xb7\\x4b\\xc1\\xed\\x92\\xb1\\x8e\\x22\\x99\\x72\\x3a\\\n\\xad\\x13\\xec\\xcb\\x10\\xec\\x53\\xe9\\xee\\xcd\\xf0\\xf1\\xca\\x38\\xaf\\xbf\\\n\\x1d\\xe1\\xbf\\xcb\\x23\\x84\\xc3\\xe3\\x23\\xbc\\x1f\\xfe\\x4b\\x37\\xd7\\xfe\\\n\\xa0\\x34\\x67\\x93\\xe7\\x0e\\xc5\\xfd\\xbf\\xed\\xe4\\x94\\xe3\\x7d\\x2c\\xdc\\\n\\xcb\\xc1\\x74\\xe4\\xe5\\x57\\x43\\xe3\\x72\\xdd\\x8a\\x32\\x33\\x5f\\xfd\\x52\\\n\\x3e\\x8b\\x16\\x3a\\x28\\x2e\\x32\\x51\\x5c\\x68\\x26\\xcf\\xaf\\x8c\\x79\\x4e\\\n\\x4a\\x24\\x35\\xba\\xbb\\x33\\x74\\x75\\x67\\x58\\xbd\\x2e\\xc1\\x0b\\x2f\\xf5\\\n\\xf1\\xea\\x1b\\xe1\\x71\\x11\\x88\\x7f\\x79\\xbc\\x87\\x5b\\xae\\x2d\\x9b\\xf0\\\n\\xbc\\x93\\xbb\\x87\\xb8\\x6a\\xff\\x03\\xe8\\x53\\xcc\\x9c\\x9d\\xe9\\x46\\xaf\\\n\\xbf\\x01\\xbd\\xfb\\x9f\\xc8\\x33\\x6e\\x47\\xb2\\x96\\x4d\\xa9\\xe2\\xbb\\xdd\\\n\\xee\\x21\\xc5\\x15\\x48\\x04\\x6c\\xe7\\x53\\x12\\xbf\\x94\\x71\\x3b\\xa9\\x39\\\n\\x6a\\xa4\\x61\\x84\\x95\\x9d\\xaa\\xaa\\xaa\\x41\\xc5\\x91\\xcf\\xe7\\x27\\x18\\\n\\x0c\\x92\\xb1\\x2f\\xc4\\x14\\xfd\\xdf\\x4e\\xef\\xf7\\x9a\\x4f\\xc0\\x65\\x73\\\n\\x0d\\xbb\\x55\\x3a\\x5a\\x7e\\xfe\\xeb\\xf1\\x5b\\x89\\x1d\\xb2\\xe0\\x63\\x2e\\\n\\x3c\\xf1\\x59\\x3e\\xbb\\xd7\\x4a\\x14\\x39\\x9b\\x7b\\xa3\\x63\\x8d\\xfe\\x8b\\\n\\x1a\\xe9\\x3f\\xc4\\x5d\\x27\\xd0\\xce\\xc9\\xa4\\x19\\x78\\x04\\xda\\xe3\\x06\\\n\\x8f\\x5b\\x62\\xee\\xac\\xfe\\x36\\x3e\\xf3\\x34\\x99\\xff\\xad\\xd0\\xf9\\xcb\\\n\\x13\\x2a\\x1f\\xaf\\x1e\\x1f\\x91\\xf5\\xd8\\x13\\xed\\xdc\\x76\\xd1\\x8d\\xb4\\\n\\x75\\x5c\\x40\\x28\\x34\\x93\\x92\\x92\\xd2\\x01\\xc2\\x78\\xa7\\x35\\x8d\\xa6\\\n\\x73\\xff\\x6f\\xc7\\xa7\\x5d\\x65\\x19\\x4e\\x3c\\xc6\\xcb\\x05\\xe7\\x15\\xb2\\\n\\x6c\\xb1\\xc3\\xb0\\xc5\\x92\\xd9\\x2c\\x51\\x58\\x60\\xa6\\xb0\\xc0\\xcc\\x6c\\\n\\x60\\xff\\x65\\x2e\\xce\\xff\\x5a\\x21\\xaa\\xaa\\xf3\\xce\\x8a\\x28\\xb7\\xde\\\n\\xd5\\xc6\\xf2\\xf7\\x8d\\x4d\\x67\\x93\\x4a\\xe9\\x6c\\xdc\\x94\\x98\\x72\\x22\\\n\\x45\\xd3\\xe0\\xe2\\x2b\\x9a\\xf8\\xf7\\xd3\\x73\\x30\\x99\\xa6\\x9f\\x8f\\xe2\\\n\\x4b\\xaf\\x86\\x0d\\xbd\\x5e\\x71\\x91\\x89\\xbb\\x6e\\xa9\\xe0\\xa8\\xc3\\x3c\\\n\\xc8\\xb2\\xf1\\xed\\x65\\xb3\\xca\\x94\\x97\\x59\\x28\\x2f\\xb3\\xb0\\xf7\\x02\\\n\\x07\\x67\\x9e\\x9e\\x47\\x3c\\xa1\\xf1\\xa7\\x47\\xbb\\xb9\\xe5\\xce\\x36\\xe2\\\n\\x09\\xdd\\xd0\\x3e\\x5b\\x57\\x9f\\x62\\xde\\x9c\\x89\\x35\\xa3\\x4f\\xfb\\x6d\\\n\\x41\\x5d\\x8d\\xe4\\x9e\\x9f\\xd5\\x68\\x08\\xbf\\x83\\xb6\\xea\\x64\\xb4\\xae\\\n\\xa7\\xa6\\x54\\xb1\\x5d\\xae\\xe1\\x4f\\x40\\x86\\x32\\x95\\xc4\\x7d\\x67\\xe7\\\n\\x4c\\x79\\x25\\x06\\xdf\\x0a\\xb2\\xdb\\x87\\x16\\x56\\xdb\\xde\\x37\\x99\\x4c\\\n\\xc4\\xed\\x47\\x0e\\xfa\\x7e\\x44\\xab\\xc0\\x66\\x33\\x2e\\x3c\\xc0\\x47\\x2b\\\n\\x63\\xbc\\x3e\\x0e\\xc1\\x01\\x8f\\x5d\\xb6\\x82\\xff\\xdc\\xf9\\x03\\xfe\\x7a\\\n\\xf5\\xad\\x1c\\xba\\xf0\\xa3\\x2c\\x85\\xd5\\x27\\x1f\\xb4\\x0c\\xf6\\xf0\\xd3\\\n\\xd4\\x46\\xbe\\x4d\\x05\\x8f\\x21\\xeb\\x43\\x47\\x4e\\x97\\x24\\x38\\x60\\x1f\\\n\\x89\\x5f\\xdc\\x61\\xe2\\x86\\x2b\\x14\\xcc\\xe3\\xb0\\xc4\\x7b\\xe2\\x8d\\x83\\\n\\x89\\x75\\xaf\\xa7\\xbc\\xef\\x7b\\x78\\x13\\x7f\\xa3\\xae\\x6e\\x33\\xc1\\xe0\\\n\\xd0\\xa7\\xff\\x9e\\x79\\xbe\\x8f\\x2d\\x0d\\xc6\\xfb\\x66\\x9c\\xf5\\xc5\\x3c\\\n\\xde\\x7d\\x65\\x0f\\x1e\\xbc\\xaf\\x86\\x7d\\x96\\x38\\x27\\xc4\\x0a\\xad\\x28\\\n\\x12\\x9f\\xd9\\xcf\\xc5\\x73\\x8f\\xcf\\xe6\\x81\\x7b\\xab\\x28\\x2b\\x35\\x36\\\n\\xa8\\xec\\xda\\x29\\x9a\\x4a\\x65\\xf5\\xba\\xc4\\xa4\\x6d\\x11\\x8d\\x27\\xad\\\n\\x6d\\x29\\x1a\\x9b\\x8d\\xeb\\xbb\\x4e\\xa7\\xcc\\x5f\\x1e\\x9a\\xc1\\x31\\x47\\\n\\x78\\xc7\\x45\\x58\\x0d\\x85\\xdd\\x26\\xf3\\xcd\\x73\\x0a\\x79\\xe5\\xb9\\xb9\\\n\\x2c\\x5b\\x6c\\xac\\x78\\xdf\\x54\\x37\\xf1\\x7d\\x76\\xda\\x5b\\xae\\xf4\\xc0\\\n\\x63\\xa0\\x4e\\xf1\\xb8\\x1f\\x6a\\x04\\xbd\\xee\\x4a\\xd4\\xde\\xff\\x20\\xd7\\\n\\xfc\\x08\\xc9\\xec\\xcf\\xf9\\x22\\x9b\\x4c\\x26\\x1c\\x0e\\x07\\xb1\\xd8\\xd0\\\n\\x2b\\xe7\\x66\\xf5\\x04\\x66\\xda\\x57\\x20\\xc7\\x57\\x4d\\x7a\\x79\\xcd\\x04\\\n\\x07\\xb1\\x38\\xc8\\x94\\x97\\x57\\x8c\\xb8\\x9d\\xe7\\x76\\xbb\\xe9\\xec\\xdb\\\n\\x1b\\xb7\\xec\\x1c\\x18\\xde\\x43\\x32\\x93\\xd2\\x5c\\xf4\\xf6\\xf6\\x20\\x49\\\n\\xfd\\x6d\\xa2\\xeb\\x6c\\xcd\\xdb\\xa6\\x6f\\x8d\\xf8\\xad\\x6f\\x97\\x77\\x92\\\n\\xb4\\xed\\x35\\xf0\\x67\\x59\\x96\\xb0\\x58\\xac\\x98\\xcd\\xe6\\x71\\xb1\\x5a\\\n\\x7d\\xeb\\xc4\\x67\\xb8\\xee\\xcc\\x3f\\x23\\x49\\x06\\xac\\x16\\xf5\\x24\\x8e\\\n\\xf0\\x5f\\x99\\x65\\xfa\\x17\\x21\\xf7\\x79\\xb4\\x67\\x0e\\x60\\x38\\xab\\xe0\\\n\\xe1\\x9f\\x95\\x71\\x39\\x25\\xae\\xbb\\x35\\x43\\xc2\\xc0\\x1d\\xb9\\x68\\xc2\\\n\\xc6\\xba\\xe6\\x4a\\x96\\xcd\\xde\\x80\\xb3\\xf7\\x37\\xcc\\x70\\xbe\\x47\\x53\\\n\\xc7\\x77\\x08\\x85\\xca\\x29\\x2d\\xdd\\xd9\\x8a\\xf5\\x73\\x83\\x27\\x5d\\x49\\\n\\x82\\x5b\\xaf\\x2f\\xe7\\x1b\\x67\\x17\\x4c\\x6a\\xbf\\xfe\\xdc\\x89\\x7e\\x96\\\n\\x2c\\x72\\x72\\xcc\\xa9\\x1b\\xe8\\xee\\x31\\xc6\\x97\\x6c\\xfd\\xc6\\xa9\\x9b\\\n\\xa7\\xee\\xa7\\xf7\\x75\\x70\\xc2\\x31\\xde\\x29\\x17\\x14\\x75\\x38\\x02\\x9d\\\n\\xc6\\xee\\xca\\xdc\\x74\\x75\\x19\\x0b\\xf6\\xb4\\x4f\\x5a\\x7d\\x66\\xd4\\x58\\\n\\x79\\xec\\xe1\\x19\\x1c\\x71\\xf2\\x06\\xb6\\xd4\\x1b\\x23\\x1a\\x37\\xd5\\x4d\\\n\\x7c\\xde\\xc1\\xe9\\x6f\\xb9\\xea\\xf8\\xf3\\xf4\\xa9\\x4c\\xef\\xbf\\xd0\\x56\\\n\\x9d\\x84\\x1e\\x7c\\x75\\x4a\\x14\\xd7\\xed\\x1e\\x3e\\x3a\\xb2\\x8e\\x42\\xab\\\n\\xf5\\x7b\\x20\\xdb\\x27\\xbd\\xac\\x26\\x7d\\xe7\\xbc\\x80\\x83\\x4d\\xc2\\x83\\\n\\xe1\\x72\\xb9\\xc9\\x68\\x0a\\x19\\xf7\\x61\\x9f\\xaa\\x60\\x1a\\xab\\x1c\\x42\\\n\\x55\\x55\\x3a\\x3b\\x3b\\x69\\x6b\\x6b\\xa3\\xbd\\xbd\\x8d\\x8e\\x8e\\x76\\x3a\\\n\\x3a\\x3a\\x08\\x04\\x3a\\x08\\x04\\x02\\x5b\\x5f\\x1d\\x74\\x74\\xb4\\xd3\\xde\\\n\\xde\\x46\\x5b\\x5b\\x1b\\x6d\\x6d\\xad\\xb4\\xb6\\xb6\\xd0\\xd2\\xd2\\x4c\\x53\\\n\\x53\\x13\\x9b\\x37\\x6f\\xe2\\xe5\\x57\\xd6\\xf2\\xec\\x8b\\xc6\\xe5\\xce\\x92\\\n\\x24\\xb8\\xe1\\x9b\\xef\\x72\\xfd\\x57\\xfe\\x62\\x8c\\xb0\\xfa\\x24\\x99\\x1e\\\n\\x3c\\xbd\\x77\\x31\\x2b\\x73\\x3d\\x5e\\x53\\xfd\\xb0\\x1f\\xdd\\x77\\x89\\xc4\\\n\\x4f\\x6f\\x31\\x61\\xb3\\x1a\\x5b\\x84\\x4f\\x26\\xad\\x96\\xa3\\x2b\\xa8\\x8e\\\n\\x5c\\x8a\\x3d\\xf9\\xf6\\x56\\x2b\\xd6\\x8e\\xc0\\xac\\xaf\\xbc\\x11\\x66\\xe5\\\n\\x6a\\xe3\\x72\\x14\\x5a\\x2c\\x12\\x0f\\xdd\\x57\\x3d\\xe9\\xc2\\x6a\\x1b\\x55\\\n\\x15\\x16\\x7e\\xff\\xab\\x5a\\xcc\\x66\\x63\\xac\\x10\\x9d\\x53\\xf8\\xb8\\x7f\\\n\\x2a\\xa5\\x73\\xe9\\x55\\x4d\\x68\\xda\\xf4\\xc9\\x65\\xd4\\xdd\\x63\\xec\\xfd\\\n\\x38\\x70\\xbf\\xc9\\x0f\\x5b\\xe1\\x72\\x2a\\xfc\\xf6\\xde\\x6a\\xc3\\xfa\\x6c\\\n\\x4f\\xef\\xc4\\x1f\\x52\\x99\\xd6\\x96\\x2b\\x3d\\xbe\\x09\\x52\\x2d\\xd3\\xab\\\n\\x52\\xe9\\x2e\\xb4\\x0d\\x17\\x22\\x15\\x9f\\x8d\\x54\\x75\\x05\\x92\\x34\\x39\\\n\\x41\\xfd\\x62\\x31\\x95\\xc6\\xe6\\xc1\\x83\\x67\\x2a\\x0a\\xd4\\x54\\x59\\xf1\\\n\\x78\\x3c\\x04\\x02\\x1d\\x5b\\x2d\\x35\\x3b\\x50\\x55\\x68\\x69\\xd3\\x69\\x6e\\\n\\xd1\\x69\\xef\\xcc\\x43\\x49\\xdc\\x4c\\xa6\\x77\\x05\\xd1\\xa4\\x1d\\x93\\x92\\\n\\xc1\\x65\\x4b\\xe0\\xb0\\x25\\xf0\\xbb\\x22\\xcc\\x29\\x6f\\x61\\x4e\\x45\\x13\\\n\\x6e\\xfb\\xae\\x4d\\x7e\\xad\\xdd\\xf9\\x84\\xe3\\x83\\x9b\\x98\\x25\\x74\\x2a\\\n\\x8b\\x02\\xd8\\x2d\\x29\\x4c\\x7a\\xf7\\x80\\xf7\\x3c\\x1e\\x2f\\x1e\\x4f\\x76\\\n\\xf9\\xea\\xb6\\xf9\\x53\\xf5\\x99\\x0e\\x21\\x9f\\x67\\x77\\xf4\\x3f\\x5d\\xa2\\\n\\x27\\xd0\\x49\\x20\\x36\\xf8\\x16\\xa9\\x2c\\x41\\x45\\x99\\x44\\xb6\\x7e\\xee\\\n\\x7f\\x79\\x42\\x35\\x34\\xbf\\xdd\\xa9\\x27\\xba\\x39\\xfe\\x8b\\x47\\xd0\\x9c\\\n\\x9e\\x4b\\xa9\\xfa\\x47\\x94\\xf0\\x1b\\xc6\\xaf\\xde\\xe2\\xab\\x29\\x8e\\x7f\\\n\\x9f\\x3c\\xf7\\x71\\xb4\\x48\\x67\\x90\\xd2\\x07\\x6f\\xd3\\xbd\\xf6\\x90\\x38\\\n\\xf7\\x4c\\x85\\x5f\\xff\\x9f\\x71\\x83\\xe0\\x27\\xc5\\x55\\x7f\\xc7\\x0b\\x92\\\n\\xd7\\x7b\\x23\\x2e\\xef\\x29\\x34\\xb6\\x9f\\x49\\x28\\x14\\xa2\\xb4\\xb4\\xcc\\\n\\xf0\\xad\\xa2\\x4b\\xbe\\x55\\xc4\\x89\\xc7\\xe6\\x56\\xb8\\x91\\xfd\\x96\\x39\\\n\\xb9\\xf1\\xaa\\x52\\xae\\xb9\\x69\\xec\\xf9\\x3d\\x27\\xd3\\xaa\\x61\\x04\\xcb\\\n\\xdf\\x8f\\xf1\\xd0\\x1f\\xba\\xf8\\xe6\\xb9\\x85\\xd3\\x62\\x4a\\xe8\\x32\\x50\\\n\\x5c\\x79\\xdc\\x32\\x33\\x6a\\xad\\x39\\x51\\xaf\\x85\\x7b\\x39\\xb8\\xfc\\xbb\\\n\\xc5\\xdc\\xfe\\xb3\\xb1\\x9f\\xf4\\x5c\\x30\\x7f\\xe2\\xfb\\xec\\xf4\\x16\\x57\\\n\\x7d\\x6f\\x4d\\xdf\\xba\\x75\\xfc\\x01\\x3d\\xb1\\x05\\x79\\xd6\\xdd\\x48\\xca\\\n\\xc4\\xae\\x34\\xde\\x7e\\x37\\xc2\\x53\\xcf\\x06\\xc9\\x64\\x86\\x9e\\xe9\\x9d\\\n\\x0e\\x99\\xf3\\xce\\x2a\\xc0\\xef\\xcf\\xa3\\xa7\\xa7\\x5f\\xb8\\x44\\xa2\\xf0\\\n\\xdf\\x77\\x35\\x56\\xae\\xd5\\x51\\x07\\xcc\\xa1\\xd5\\x78\\x08\\x6f\\x8d\\x3c\\\n\\x6e\\x26\\x12\\xdf\\xf1\\x20\\xbc\\xb7\\x71\\x36\\x92\\x04\\x95\\x05\\x9d\\x1c\\\n\\xb6\\xf7\\x87\\xec\\x55\\x5b\\x8f\\x94\\x65\\x84\\xf7\\x47\\x5e\\x3d\\x8c\\xf7\\\n\\x36\\xce\\x1e\\xfe\\x01\\x50\\x54\\x96\\xcc\\xda\\xc4\\xe7\\x8f\\xed\\xde\\x11\\\n\\x19\\x1d\\x28\\x2a\\x2a\\xca\\xfe\\x21\\x32\\x99\\x50\\x14\\x85\\xee\\xd4\\x4c\\\n\\xf2\\xcd\\x25\\x90\\x6e\\x67\\x7d\\x73\\x05\\x4f\\xbc\\x71\\x30\\x81\\xb4\\x85\\\n\\xd8\\x30\\x41\\x93\\x9c\\x4e\\x38\\xfb\\x8b\\x0a\\xae\\x11\\x42\\x65\\xa9\\x2a\\\n\\xbc\\xf4\\x9a\\x71\\xce\\xff\\x6e\\xb7\\xcc\\xcd\\xd7\\x56\\x52\\x90\\x6f\\x22\\\n\\x1c\\x2e\\xa0\\xa9\\xb3\\x0c\\x8f\\xff\\x08\\xfc\\x91\\x5f\\x23\\xa5\\x8d\\x3f\\\n\\xb6\\x6e\\x0e\\x3f\\x4f\\x8d\\xfc\\x3a\\x61\\xd7\\x57\\x68\\xd7\\x8f\\x44\\x1f\\\n\\x64\\xe8\\x39\\xe3\\x73\\x32\\x2f\\xfe\\xc7\\xb8\\x93\\x84\\x3b\\x89\\xab\\x6d\\\n\\x96\\xa5\\xbe\\xa7\\x99\\x69\\xfd\\x98\\x76\\xf9\\xfb\\xbc\\xb3\\x3c\\xc6\\x9b\\\n\\xff\\x35\\xce\\x5f\\xa5\\xa6\\xca\\xc2\\x77\\x2f\\x28\\xca\\xc9\\x31\\xe3\\x1b\\\n\\x67\\x17\\xf0\\x8f\\x7f\\xf6\\xf1\\xce\\x8a\\xb1\\x85\\x79\\x59\\xba\\x78\\xea\\\n\\x9f\\xb8\\xbb\\xf5\\xae\\x76\\x8e\\x39\\xd2\\x4b\\x55\\xc5\\xd4\\x8f\\x13\\x67\\\n\\xa4\\xe5\\x2a\\x12\\xd5\\xe8\\x0d\\x66\\xf0\\xfb\\x72\\x43\\x1a\\x7c\\xe7\\x9b\\\n\\x85\\x3c\\xf6\\xf7\\x5e\\x36\\x6f\\x19\\xdb\\xb6\\xde\\xd2\\xbd\\x27\\xbe\\xcf\\\n\\x4e\\x8b\\x6d\\x41\\x55\\x55\\x89\\x46\\xa3\\x74\\x77\\x77\\xd3\\xd2\\xd2\\xcc\\\n\\xe6\\xcd\\x9b\\x58\\xbb\\x76\\x0d\\x91\\xd6\\x17\\x99\\xd6\\xf4\\xbd\\x81\\xb6\\\n\\xfa\\x8b\\xe8\\xc9\\xe6\\x09\\xfd\\xda\\x57\\x5e\\x0b\\x0f\\x2b\\xac\\xa0\\x3f\\\n\\x26\\xce\\x5b\\xef\\x44\\xc8\\xcf\\xcf\\x27\\x91\\x84\\x57\\xdf\\xd2\\xf8\\xed\\\n\\x1f\\x54\\x3e\\x5c\\xf5\\x69\\x61\\xb5\\xf5\\xa1\\x96\\xe6\\x82\\x34\\xb8\\x1f\\\n\\x84\\xae\\x43\\x63\\x67\\x21\\x0f\\xbf\\x74\\x14\\xf7\\xfe\\xfd\\x54\\x36\\xb6\\\n\\x94\\x67\\x55\\xce\\xf5\\x4d\\x23\\x47\\xe6\\xcd\\xa8\\x0a\\xef\\xae\\x9f\\xcb\\\n\\xab\\xcb\\xf3\\xb6\\xff\\xce\\xeb\\xf5\\x66\\xb5\\x1d\\xf8\\x49\\xac\\xd6\\xfe\\\n\\xd5\\x5e\\xc2\\x75\\x14\\xb1\\xa4\\x95\\x47\\x5f\\x3b\\x94\\xde\\x88\\x0b\\x45\\\n\\x1f\\x7e\\x22\\x8b\\x46\\xa1\\x23\\x30\\xb2\\x98\\xd8\\x58\\xa7\\x93\\x30\\xd0\\\n\\xd5\\xe5\\xaa\\xef\\x97\\x52\\x58\\xd0\\x1f\\x08\\xd5\\xe3\\xf1\\x30\\x63\\xc6\\\n\\x4c\\xcc\\x85\\xc7\\xd0\\xe8\\xbe\\x8f\\x84\\xef\\x2b\\x0c\\x50\\x9a\\x46\\xa1\\\n\\x45\\x71\\x87\\x1e\\x60\\x56\\xe2\\x32\\x7c\\xd2\\xc7\\x3b\\xbd\\xad\\x28\\x70\\\n\\xd9\\x77\\x14\\x8c\\xf2\\xf9\\x6e\\x08\\x14\\x0f\\xf9\\x9e\\x94\\xdc\\x42\\x69\\\n\\xdf\\xf7\\x69\\x58\\xfd\\x91\\xa1\\x55\\xbc\\xed\\xfa\\xf2\\x51\\x85\\x53\\x98\\\n\\x48\\x24\\x49\\xe2\\x17\\x3f\\xa9\\xa4\\xb8\\x68\\xd7\\x27\\xce\\xbd\\x17\\xd8\\\n\\x59\\x38\\x7f\\xea\\x8b\\xab\\x58\\x5c\\xe3\\xb2\\xab\\x9b\\xa6\\xc5\\x34\\xe0\\\n\\x72\\x1a\\xf7\\xac\\x6a\\x1a\\xfc\\xfb\\x95\\x50\\xce\\xd4\\xcd\\x62\\x91\\xb9\\\n\\xf7\\x8e\\xca\\x31\\xc5\\xc6\\x3a\\x70\\x7f\\xe7\\xa4\\x58\\xe3\\xa6\\xac\\xb8\\\n\\xca\\x64\\x32\\x74\\x77\\x77\\x53\\x57\\xb7\\x99\\x0d\\x1b\\xd6\\xd3\\xd8\\xd8\\\n\\x40\\x20\\xd0\\x41\\x28\\x14\\x22\\x95\\x4a\\x21\\x91\\xc1\\xae\\xae\\x61\\xda\\\n\\x93\\xd8\\x8c\\xb6\\xfa\\x34\\xf4\\xf0\\x7b\\x13\\xb7\\x52\\xea\\xcd\\x6e\\xa5\\\n\\xd4\\xd6\\x9e\\xe6\\xe5\\xd7\\xa2\\x3c\\xfc\\x88\\x89\\xe5\\xef\\xeb\\x0c\\x17\\\n\\xd3\\x51\\xd3\\xcd\\x24\\xcc\\x0b\\x46\\xbc\\x66\\x73\\x57\\x01\\x0f\\x3c\\x7f\\\n\\x02\\x2f\\x7d\\xb0\\x64\\xc4\\xcf\\x96\\xe4\\xf5\\x64\\x5d\\xa7\\x97\\x96\\x57\\\n\\x91\\xde\\xba\\xcb\\x99\\x9f\\x3f\\x7a\\x5f\\x99\\x6d\\xe2\\xaa\\x9b\\x03\\x59\\\n\\xbe\\x7e\\x2e\\xa1\\x58\\xff\\x04\\x24\\x69\\x23\\x1f\\x91\\xf6\\xfb\\x46\\x56\\\n\\x13\\x46\\x86\\x2c\\xb0\\xdb\\x24\\xce\\xfa\\x62\\xde\\x4e\\x13\\xaf\\xcf\\xe7\\\n\\xa7\\x66\\xc6\\x9e\\x24\\x0b\\xbe\\x4d\\x7b\\xfe\\xfd\\x68\\x8e\\x45\\xe3\\x33\\\n\\xc9\\xa7\\x9b\\x28\\x0a\\xdd\\x48\\xad\\xfa\\x13\\xac\\xfa\\xc0\\x34\\x33\\x0b\\\n\\xf6\\x94\\x38\\xfa\\x30\\x63\\x86\\x25\\xab\\x79\\x04\\x8b\\x94\\x9e\\xe6\\xa3\\\n\\xf7\\x8c\\x9b\\x60\\x6b\\x6b\\x2c\\x1c\\x79\\x98\\x27\\xa7\\x87\\x8b\\x9a\\x2a\\\n\\x2b\\xcf\\x3e\\x36\\x8b\\xda\\xea\\xd1\\x5b\\x6c\\x2a\\xcb\\xcd\\xfc\\xf9\\x41\\\n\\xe3\\x7c\\xb7\\x26\\x9b\\xd7\\xde\\x8a\\xf0\\x97\\xc7\\x7b\\xa6\\x7c\\x3d\\xaa\\\n\\xab\\x8c\\xb5\\xbe\\xdd\\x70\\x5b\\x2b\\xab\\xd6\\xc6\\x73\\xa6\\x7e\\xfb\\x2e\\\n\\x75\\xf2\\xb7\\x3f\\xcd\\xc0\\xef\\x1b\\xbd\\x88\\x9c\\x3b\\xdb\\xca\\xef\\x7f\\\n\\x55\\x3b\\x29\\xe5\\x9e\\x52\\xe2\\x4a\\xd7\\x75\\x22\\x91\\x08\\xcd\\xcd\\x45\\\n\\x0d\\x8e\\x35\\x00\\x00\\x20\\x00\\x49\\x44\\x41\\x54\\x4d\\x6c\\xdc\\xb8\\x81\\\n\\x40\\xa0\\x83\\x64\\x72\\x70\\x73\\xa1\\x5d\\x5d\\x87\\xac\\x27\\xd8\\x2d\\xc8\\\n\\x04\\xd1\\xd6\\x9d\\x8b\\xd6\\xf9\\xf7\\x9c\\x2a\\x56\\x5b\\x47\\x9a\\x17\\x5f\\\n\\x0e\\x21\\x49\\xd9\\xad\\x1a\\x92\\xba\\x0f\\xd5\\x3a\\x33\\x8b\\x7e\\x00\\x2f\\\n\\xac\\x58\\xc6\\x23\\xaf\\x1c\\x4e\\x46\\x1d\\xfa\\x81\\xdb\\xab\\xa6\\x3e\\xfb\\\n\\x26\\x4c\\xab\\x34\\x34\\xa6\\x91\\x65\\x79\\xbb\\x50\\x1a\\xdd\\x0a\\xab\\xff\\\n\\x6f\\xa2\\x99\\x22\\x56\\x07\\x8e\\xda\\x21\\x24\\x32\\xdd\\x98\\xa4\\xa1\\xfb\\\n\\xa1\\xc7\\x23\\x91\\x97\\xc5\\xe1\\xcf\\x8f\\x57\\x19\\x27\\xae\\xf6\\x59\\x22\\\n\\xd1\\xda\\xb2\\x85\\xde\\xde\\x1e\\xb4\\x4f\\x6d\\x59\\xca\\xb2\\x4c\\x5e\\x5e\\\n\\x3e\\xa5\\xb5\\x07\\xd3\\x5b\\x74\\x2f\\x21\\xff\\x0f\\xc7\\x2d\\x5d\\x91\\x39\\\n\\xf6\\x5f\\xaa\\xa3\\x17\\x53\\xa6\\x3f\\x32\\x20\\x74\\xc3\\xf9\\xe7\\xca\\x86\\\n\\x44\\x76\\x5f\\x32\\x6b\\xd3\\x88\\x9f\\x79\\x77\\xfd\\x3c\\xc3\\xea\\x73\\xfc\\\n\\x51\\xde\\x29\\x31\\x5c\\x54\\x57\\x5a\\x79\\xe3\\x85\\xb9\\xfc\\xf4\\xd6\\x0a\\\n\\x96\\x2d\\x76\\x90\\xe7\\x1f\\xfa\\x19\\x92\\xa4\\x7e\\xd1\\x78\\xf5\\x65\\x25\\\n\\xbc\\xfa\\xdc\\x5c\\x8a\\x0a\\xcc\\x4c\\x27\\x6e\\xb8\\xad\\x95\\x8e\\xce\\xf4\\\n\\x94\\xae\\x43\\x75\\xa5\\xb1\\xe2\\xaa\\xbb\\x47\\xe5\\xd4\\x33\\x37\\xf3\\xea\\\n\\x9b\\xe1\\x9c\\xa9\\xe3\\xd2\\x45\\x4e\\xde\\x7d\\x65\\x0f\\xae\\xbe\\xbc\\x84\\\n\\xf9\\xf3\\x6c\\xb8\\xdd\\x43\\x4b\\x17\\x59\\x86\\x99\\xb5\\x56\\x6e\\xbc\\xaa\\\n\\x94\\x17\\x9e\\x9c\\x8d\\xd7\\x33\\x39\\x7e\\xc9\\x53\\xc6\\xe7\\x2a\\x16\\x8b\\\n\\xd1\\xd6\\xd6\\x4a\\x2a\\x95\\x9d\\x7f\\x84\\x23\\xf3\\x11\\xbb\\x15\\x7a\\x1a\\\n\\x7d\\xcb\\x55\\x68\\x89\\xcd\\x48\\x15\\x97\\xe5\\x54\\x54\\x77\\x49\\x96\\xb1\\\n\\x58\\x2d\\xa4\\x92\\x23\\xdf\\xbb\\x88\\x36\\x03\\xb7\\x39\\x8a\\x9c\\x85\\xdf\\\n\\xcf\\x7b\\x9b\\x66\\x61\\x52\\x32\\x9c\\x7e\\xf0\\xeb\\x83\\xbe\\x3f\\xbf\\xaa\\\n\\x81\\xa7\\xde\\xfe\\x4c\\xd6\\xe5\\xdc\\x52\\x1f\\x67\\xde\\xdc\\x5d\\x73\\x7c\\\n\\x34\\x99\\xfa\\x1f\\xa5\\x74\\x1a\\x56\\xb7\\x2f\\xc5\\x2e\\xbd\\xb9\\x3d\\x70\\\n\\xad\\x4d\\x6a\\x25\\xa2\\xcf\\x18\\xdc\\xda\\x51\\x95\\xdd\\xf5\\x57\\xae\\x35\\\n\\xce\\xdf\\xea\\xa0\\xfd\\x25\\x92\\xc9\\x24\\xed\\xed\\xed\\x04\\x02\\x01\\xbc\\\n\\x5e\\x2f\\x7e\\xbf\\x1f\\xab\\xd5\\x36\\x40\\x64\\x15\\x15\\x15\\x13\\x77\\x7f\\\n\\x99\\xd6\\xf6\\xc5\\x14\\xc7\\x7e\\x8e\\x12\\xfd\\xef\\x38\\xf4\\xdb\\x0c\\xae\\\n\\xc8\\xe3\\xcc\\x54\\xfe\\x43\\x97\\xfd\\x5c\\x7a\\xa5\\x03\\x29\\xc8\\x93\\x38\\\n\\xfb\\x8b\\x0a\\x0f\\x3c\\x3c\\x36\\xe7\\xf6\\x25\\xb3\\x36\\x0e\\xfb\\x7e\\x28\\\n\\xe6\\x64\\x5d\\x93\\x71\\x49\\x5d\\x8f\\x3d\\xd2\\x3b\\x65\\x86\\x0b\\x8b\\x45\\\n\\xe6\\xab\\x5f\\xca\\xe7\\xab\\x5f\\xca\\x07\\x20\\x95\\xd2\\x18\\xec\\x00\\x9d\\\n\\x49\\x91\\x72\\x2a\\xe8\\xa6\\xdb\\x2d\\x1b\\x1a\\x7d\\xbe\\x2f\\xa4\\x72\\xe5\\\n\\x0d\\x2d\\xfc\\xdf\\x2f\\x6b\\xa6\\xec\\xd0\\x5f\\x51\\x66\\x41\\x96\\x31\\x34\\\n\\x1f\\x66\\x5f\\x48\\xe5\\x8c\\x73\\xea\\x38\\x70\\x7f\\x27\\x57\\x5e\\x5a\\xca\\\n\\x7e\\xcb\\x9c\\x93\\x5e\\x4f\\xaf\\x47\\xe1\\x92\\x6f\\x15\\x73\\xc9\\xb7\\x8a\\\n\\x87\\xed\\xb3\\x66\\x93\\x84\\xa2\\x4c\\x7e\\x9f\\xcd\\x79\\xcb\\x95\\xaa\\xaa\\\n\\xb4\\xb5\\xb5\\xd2\\xd0\\x50\\x9f\\xb5\\xb0\\x02\\x70\\xa8\\x2b\\xd9\\x1d\\xd1\\\n\\xdb\\x1e\\x44\\xdb\\x78\\x11\\xba\\x1a\\xcb\\xa9\\x72\\xd9\\xad\\xd9\\x9b\\x22\\\n\\x22\\xec\\x81\\xae\\x64\\x37\\x51\\xbd\\xb3\\x7e\\x1e\\x2b\\x36\\xce\\x19\\xf4\\\n\\x3d\\xbf\\x3b\\x4c\\x59\\x7e\\x77\\xd6\\xdf\\x5b\\xbf\\x25\\xbe\\xcb\\x8f\\xc4\\\n\\xb6\\x58\\x58\\x8d\\xcd\\x3a\\xa9\\x8c\\x19\\xd5\\x32\\x6b\\xc7\\x7b\\xa9\\x26\\\n\\x86\\x8a\\x44\\x5f\\x5b\\x3d\\xf2\\x20\\xd0\\xd8\\xac\\x13\\x34\\x28\\x02\\x83\\\n\\x2c\\xc3\\x01\\xfb\\xec\\xa8\\xa3\\xa6\\x69\\xf4\\xf6\\xf6\\x52\\x57\\x57\\x47\\\n\\x43\\x43\\x3d\\xa1\\x50\\x68\\xc0\\xe9\\x4e\\xbb\\xdd\\x4e\\x79\\xf5\\xde\\x04\\\n\\x0b\\x7f\\x4c\\xc4\\x7f\\x11\\x48\\xe3\\x63\\xb9\\x90\\xd4\\x6e\\x0a\\x23\\x3f\\\n\\xa5\\x36\\x73\\x3b\\x66\\xbd\\x93\\x33\\x4f\\x93\\xf9\\xdc\\x09\\xbb\\x3e\\x3c\\\n\\x1d\\xbb\\x6c\\x05\\x87\\xee\\x3d\\xfc\\x02\\x6b\\xf9\\x86\\x39\\x68\\xba\\x31\\\n\\x83\\x70\\x7e\\x9e\\xc2\\x3e\\x4b\\xa6\\xae\\x2f\\x92\\xc5\\x22\\x63\\xb3\\xee\\\n\\xfc\\xca\\xb5\\x68\\xe6\\xc7\\x1d\\xe9\\x65\\xdf\\xa5\\xc6\\xb6\\xf3\\x73\\x2f\\\n\\xf6\\xf1\\xcc\\x0b\\xc1\\x29\\x7b\\xef\\x4c\\x26\\x89\\xda\\xea\\xf1\\xf1\\x29\\\n\\x7a\\xeb\\x7f\\x51\\x4e\\xfa\\xe2\\x26\\x0e\\x3f\\x69\\x03\\xf7\\xfc\\xaa\\x83\\\n\\xba\\xfa\\x64\\xce\\xf7\\xd9\\x5c\\x10\\x56\\x39\\x2f\\xae\\xc2\\xe1\\xf0\\x88\\\n\\x91\\x95\\x87\\x90\\x18\\x58\\xb5\\x06\\x76\\x5b\\x82\\x2f\\xa3\\xad\\x3d\\x13\\\n\\x3d\\xd9\\x96\\x33\\x45\\x92\\x64\\x19\\xab\\xc5\\x92\\xe5\\xdd\\x33\\x11\\x55\\\n\\x16\\x21\\xc9\\xd9\\x0d\\x18\\x4f\\xbe\\x79\\x10\\x9d\\xc1\\xc1\\xb7\\xae\\xf6\\\n\\xaa\\xae\\xcf\\x5e\\xc8\\x27\\xba\\xa9\\x6f\\x4c\\xed\\xb4\\x55\\x36\\x1a\\x71\\\n\\x55\\xb7\\xf5\\xa4\\x5b\\x54\\xaf\\x40\\x92\\xb7\\xae\\xf6\\xf4\\x14\\x76\\xa9\\\n\\x6b\\x50\\xa1\\x53\\x5d\\x31\\xb1\\xfe\\x56\\xa5\\xc5\\x12\\x9e\\x21\\x82\\xe7\\\n\\xc7\\x62\\x31\\x5a\\x5a\\x9a\\xd9\\xb8\\x71\\x03\\x6d\\x6d\\xad\\x44\\x22\\x11\\\n\\x74\\x5d\\xdf\\x6e\\xc5\\x92\\x8a\\xcf\\xa6\\xcd\\x7b\\x0f\\xba\\x75\\xfc\\x7c\\\n\\x18\\xcc\\xf1\\xe5\\xd4\\x46\\x2f\\xa6\\x44\\x7a\\x91\\x4b\\x2e\\x94\\xf9\\xda\\\n\\x99\\x0a\\xf6\\x51\\x6e\\x11\\x1e\\xb2\\xa4\\x99\\x5f\\x5e\\xf4\\x73\\xe4\\x11\\\n\\x62\\x77\\xbd\\xb3\\xce\\xb8\\x2d\\xc1\\x05\\x7b\\xda\\x27\\x34\\x9a\\xf5\\xee\\\n\\x8a\\x2c\\xc3\\xdd\\xb7\\x57\\x62\\xb1\\x18\\xdb\\xd6\\x57\\x5e\\xdf\\x42\\xb0\\\n\\x6f\\xea\\xc6\\xef\\xfa\\xca\\x19\\x79\\xe3\\x7a\\xfd\\x55\\x6b\\xe2\\xdc\\x76\\\n\\x57\\x3b\\xfb\\x1f\\xb1\\x8e\\x43\\x8f\\x5f\\xcf\\x95\\x37\\x34\\xf3\\xf8\\x53\\\n\\xbd\\x39\\x25\\xb6\\x72\\x4e\\xf4\\xe6\\x6a\\xc1\\x42\\xa1\\x10\\x2d\\x2d\\xbb\\\n\\x76\\x0a\\xce\\xa2\\xb5\\x23\\xe9\\xbb\\xf9\\x4d\\x8f\\xad\\x43\\x5b\\x73\\x3a\\\n\\xf2\\xec\\x5f\\x22\\xb9\\x16\\xe6\\x44\\x91\\xac\\x36\\x1b\\xc9\\xad\\xd6\\x47\\\n\\x9f\\x17\\xca\\x4b\\x25\\x2a\\xca\\x24\\x64\\x19\\x3a\\xbb\\x20\\xd0\\xa5\\x13\\\n\\xe8\\xea\\x3f\\x15\\xa7\\xea\\x16\\x62\\xa6\\x25\\x38\\xd2\\xef\\xa2\\xeb\\xc3\\\n\\x6f\\x0f\\xa5\\x32\\x26\\x5e\\xfa\\x70\\x31\\x5f\\x3e\\xf4\\x95\\x9d\\xde\\x9b\\\n\\x5f\\xdd\\xc0\\xbf\\xde\\x5f\\x9a\\xdd\\xc0\\x9d\\x6e\\x67\\xc3\\xa6\\xb9\\xec\\\n\\xbf\\x6f\\x14\\xb7\\xdb\\xbd\\x4b\\xe2\\x6a\\x4b\\x63\\xff\\x84\\xae\\xeb\\x12\\\n\\x49\\xf3\\x3c\\x2c\\xc9\\xfe\\x83\\x06\\x16\\xb5\\x91\\xb8\\x3c\\xf0\\x88\\x7e\\\n\\x79\\x29\\x64\\xa3\\x37\\x57\\xad\\x35\\x4e\\x5c\\x95\\x95\\x64\\x21\\x32\\x55\\\n\\x95\\x60\\x30\\x48\\x30\\x18\\x44\\x96\\x65\\x5c\\x2e\\x37\\x1e\\x8f\\x1b\\xbb\\\n\\xdd\\x4e\\xd0\\x36\\x9b\\xcd\\xda\\x8f\\xa9\\xb4\\x3d\\x8a\\xb5\\xef\\xc9\\xf1\\\n\\xe9\\x28\\x7a\\x02\\x6f\\xf8\\x37\\xb8\\x6c\\x6f\\xf0\\xed\\x33\\x2f\\xe4\\xf3\\\n\\x27\\x55\\xf0\\xaf\\x57\\x34\\x1a\\x9b\\xfa\\xfb\\xc7\\x60\\xa7\\x4d\\x15\\x05\\\n\\xca\\x4a\\x25\\x0e\\x3b\\x48\\x66\\xc1\\x9e\\xb5\\x24\\xcc\\x57\\x60\\x0f\\xfd\\\n\\x02\\x32\\xbd\\x43\\x7e\\x8d\\x91\\xfe\\x56\\xd5\\x55\\x56\\x04\\x13\\xc3\\xec\\\n\\x99\\x36\\xbe\\xff\\x9d\\x62\\x7e\\x7c\\xb7\\x71\\x21\\x43\\x3a\\xbb\\x33\\x5c\\\n\\x77\\x4b\\x2b\\xbf\\xf8\\x49\\xd5\\x94\\x6c\\x93\\xaf\\x7e\\x29\\x9f\\x9f\\xfe\\\n\\xa2\\x83\\x68\\x6c\\xfc\\x73\\xb5\\xae\\x59\\x9f\\x60\\xcd\\xfa\\x04\\xbf\\xfb\\\n\\x53\\xff\\xae\\x40\\x9e\\x5f\\x61\\xc9\\x22\\x07\\xcb\\x16\\x39\\x59\\xba\\xd8\\\n\\xc1\\x92\\x85\\x0e\\xdc\\x6e\\x65\\xb7\\xef\\xa7\\x39\\x29\\xae\\x22\\x91\\xc8\\\n\\x2e\\x0b\\xab\\x7e\\x71\\xd5\\x80\\x80\\xfe\\x80\\xa3\\x6b\\xcf\\x42\\x9a\\xf1\\\n\\x63\\xe4\\xfc\\xe3\\x27\\xbd\\x38\\x6e\\x97\\x89\\xc3\\x0e\\xf2\\x53\\x56\\x12\\\n\\x1a\\x22\\xae\\x93\\x44\\x2a\\x0d\\xcf\\xbd\\xa8\\xb1\\x69\\x8b\\x4e\\x4a\\x77\\\n\\xa1\\x58\\x16\\x62\\x49\\x7e\\x30\\xe2\\xb5\\x3f\\xdc\\x34\\x8b\\xe3\\xf6\\x59\\\n\\x8e\\xcf\\x39\\x30\\xd5\\x51\\x79\\x41\\x17\\x7e\\x57\\x84\\xde\\x48\\x16\\xb1\\\n\\xc0\\xf4\\x14\\xcd\\x8d\\xbd\\x84\\xc3\\x79\\xbb\\x24\\xae\\x7a\\x7a\\xa1\\xef\\\n\\x13\\xdb\\x77\\x09\\x2d\\x0f\\x8b\\xa9\\x18\\x32\\x1d\\xa0\\xf6\\x62\\x51\\xa2\\\n\\xa4\\xf4\\x1d\\x15\\xaf\\xa9\\xca\\xce\\x70\\x1c\\xe8\\x32\\x52\\x5c\\x8d\\x6e\\\n\\xc5\\xaf\\x69\\x1a\\xa1\\x50\\x1f\\xa1\\xd0\\x27\\xf7\\x25\\xcd\\x34\\xe8\\x67\\\n\\x51\\xe0\\x5f\\x44\\x5e\\xe8\\x67\\xa0\\x8e\\xcf\\x96\\x8a\\x92\\x58\\x43\\x45\\\n\\xf2\\xfb\\xe4\\x79\\xbe\\x84\\xf7\\xe4\\x13\\xd1\\xc9\\xde\\x71\\xb7\\x33\\xbd\\\n\\x88\\xa0\\xf3\\x5e\\x2a\\xb5\\xdf\\x63\\x0a\\xff\\x67\\xd0\\xcf\\xb4\\xf5\\x18\\\n\\xb7\\xda\\xaf\\xa9\\xb2\\x88\\xf1\\x66\\x02\\xf9\\xee\\x05\\x45\\x3c\\xfd\\xcf\\\n\\x20\\x6b\\xd7\\x1b\\x77\\x68\\xe9\\xd1\\x27\\x7b\\x39\\xf5\\x24\\x1f\\x87\\x1f\\\n\\xec\\x99\\x72\\xed\\xe1\\xf5\\x28\\x7c\\xe9\\x0b\\x7e\\x1e\\xfa\\x63\\xf7\\x84\\\n\\x7f\\x77\\x4f\\xaf\\xca\\x4b\\xaf\\x84\\x79\\xe9\\x95\\x7e\\x07\\x78\\x49\\x82\\\n\\xb9\\xb3\\x6d\\x2c\\x5d\\xe4\\x60\\xd9\\x62\\x07\\x4b\\x17\\x39\\x99\\x33\\xcb\\\n\\xba\\xdb\\x59\\x76\\x73\\x4e\\x5c\\xc5\\x62\\x31\\x9a\\x9b\\xc7\\x76\\x3c\\xda\\\n\\x2a\\xc4\\xd5\\x00\\xc1\\xa0\\x6f\\xfe\\x3e\\x5a\\x7c\\x33\\x52\\xf9\\x45\\x93\\\n\\xe2\\xe8\\x6e\\xb3\\xca\\x1c\\x72\\x90\\x8b\\x43\\x0e\\x72\\x63\\xb5\\x48\\xd4\\\n\\xd5\\x25\\x86\\xf4\\x9f\\xb3\\x98\\xe1\\x73\\x27\\xc8\\xbc\\xf1\\x5f\\x8d\\x77\\\n\\xde\\xd3\\x89\\x6b\\x05\\xc8\\xd6\\xb9\\x98\\x92\\xeb\\x87\\xb7\\xb6\\xe8\\x12\\\n\\x6f\\xac\\xdc\\x8b\\x93\\xf6\\xff\\xdf\\xa0\\xd6\\xab\\x37\\x57\\xcf\\xcf\\xaa\\\n\\xac\\xf1\\xde\\x56\\xea\\xb6\\x14\\x51\\x5a\\xaa\\x8f\\xaa\\xad\\x64\\x59\\xde\\\n\\x6e\\xb5\\xda\\xde\\xf4\\x40\\x44\\xda\\x13\\x97\\x1c\\x01\\x2d\\x8a\\x55\\x6f\\\n\\x26\\xc5\\xdc\\xed\\xef\\x2f\\x5b\\x9c\\x4f\\x75\\xb5\\x07\\x45\\x51\\x90\\x65\\\n\\x79\\xfb\\x6b\\x9b\\xf5\\x28\\x93\\xc9\\x90\\xc9\\xa4\\x49\\x24\\x9a\\x00\\x63\\\n\\x4e\\x34\\x95\\x96\\x18\\x77\\xff\\xbb\\x32\\x7b\\x11\\x76\\xdd\\x43\\x65\\xea\\\n\\xae\\xf1\\xcb\\x0f\\xa9\\x67\\x70\\x84\\xfe\\xc4\\x2c\\xcb\\xeb\\x74\\x3a\\x2e\\\n\\x22\\xa8\\xce\\xca\\x7e\\x6d\\xa1\\xb9\\xa8\\xe3\\x22\\x8a\\xfc\\x07\\xe0\\x0b\\\n\\xdd\\x07\\xea\\x40\\xc7\\xb5\\x60\\xc4\\x38\\x27\\x5d\\xa3\\x4f\\x6c\\x09\\x86\\\n\\xc7\\x6c\\x96\\xb8\\xfb\\xf6\\x4a\\x8e\\xfb\\xc2\\x46\\x43\\xb3\\x16\\x5c\\x7e\\\n\\x4d\\x33\\xaf\\xbf\\x30\\xd7\\xd0\\xd8\\x51\\x13\\xc5\\xf9\\x5f\\x2b\\xe4\\x4f\\\n\\x8f\\xf6\\x90\\x4c\\x4d\\x6e\\x6a\\x1f\\x5d\\x87\\x75\\x1b\\x12\\xac\\xdb\\x90\\\n\\xe0\\xcf\\x8f\\xf5\\x87\\xba\\x70\\xb9\\x64\\x96\\x2c\\x74\\xb0\\x74\\xb1\\x83\\\n\\x65\\x8b\\x9d\\x2c\\xd9\\xdb\\x41\\x7e\\xde\\xf4\\x4e\\x6d\\x9c\\x73\\x3e\\x57\\\n\\xed\\xed\\x6d\\x3b\\xa5\\x4b\\x19\\xb5\\xb8\\x52\\x85\\xb8\\xda\\xa9\\xc3\\xb7\\\n\\xde\\x8f\\xbe\\xf9\\xfb\\xe8\\xda\\xc4\\x6e\\x97\\x7a\\x3d\\x0a\\xd7\\x5c\\x5e\\\n\\xc2\\x31\\x47\\x78\\xb1\\x59\\x65\\x24\\x49\\xa2\\xb4\\xb4\\x74\\xd8\\xbf\\x91\\\n\\x24\\x38\\xf8\\x33\\x32\\x95\\xe5\\xfd\\x42\\x20\\xaa\\x55\\xa1\\x99\\x2b\\x46\\\n\\xfc\\xae\\x0f\\x36\\x0f\\x3e\\xf1\\xce\\x1f\\x85\\xdf\\x95\\x94\\x6e\\xa3\\xbe\\\n\\xae\\x97\\x50\\x68\\xf4\\x81\\xf4\\x1a\\x9b\\x76\\x7e\\x9c\\x54\\x4c\\xc4\\x4c\\\n\\x7b\\x83\\xa4\\x20\\xa7\\x9b\\x50\\xa4\\xfe\\xf6\\xcf\\xcf\\xb7\\xb1\\xd7\\xfc\\\n\\x12\\x1c\\x0e\\x07\\x56\\x6b\\x7f\\x52\\x66\\x45\\x51\\xb6\\x27\\x6b\\x36\\x99\\\n\\x4c\\xd8\\x6c\\x36\\x5c\\x2e\\x37\\x91\\xa8\\x71\\x82\\x28\\x9b\\x6d\\xc1\\xd1\\\n\\x90\\xd4\\x3c\\xd4\\x99\\xaf\\x23\\xe3\\x3e\\x7a\\x5c\\xfb\\x91\\x94\\x6a\\xa4\\\n\\x28\\xf8\\x43\\x6a\\xe4\\x87\\x31\\xc9\\xa3\\xb3\\x56\\x04\\x32\\x4b\\x69\\x70\\\n\\xfd\\x9c\\x8c\\xfb\\xe0\\xed\\xbf\\xd3\\x74\\x69\\xc8\\xb4\\x48\\xbb\\x24\\xae\\\n\\xc4\\xb6\\xe0\\x84\\xb3\\x64\\x6f\\x07\\xe7\\x9f\\x6b\\x6c\\xfe\\xc6\\xe6\\xd6\\\n\\x34\\xb7\\xfe\\xa4\\x6d\\x4a\\xb6\\x47\\x6d\\xb5\\x95\\x9f\\xde\\x56\\x91\\x93\\\n\\x65\\x8b\\x44\\x34\\x5e\\x7f\\x3b\\xc2\\xdd\\xf7\\x07\\xf8\\xca\\x37\\xb6\\xb0\\\n\\xc7\\x3e\\xab\\xd9\\xef\\xf0\\xb5\\x7c\\xe7\\xb2\\x46\\x1e\\x7d\\xb2\\x87\\x40\\\n\\x57\\x7a\\xda\\xf5\\x4f\\x39\\xb7\\x6e\\x40\\x64\\xc8\\xb8\\x55\\xa3\\x41\\x6c\\\n\\x0b\\x0e\\x21\\xb0\\x7a\\x9e\\x47\\x5b\\x7b\\x16\\x7a\\xaa\\x73\\xc2\\xbe\\xd3\\\n\\x6a\\x95\\x71\\x7e\\x6a\\x15\\xe8\\x70\\x38\\xf1\\xf9\\x46\\x8e\\x9d\\xb4\\x68\\\n\\xc1\\x0e\\x51\\x11\\x61\\x2e\\xba\\x29\\x7f\\xd8\\xcf\\x87\\x62\\x0e\\x3a\\xfb\\\n\\x76\\x3e\\x65\\x38\\xa3\\xb4\\x0d\\xbb\\x35\\xdb\\x93\\xa6\\x3a\\x2d\\x9b\\xeb\\\n\\xe8\\xea\\xea\\x1c\\x95\\xc8\\x4f\\xa7\\x35\\x9a\\xdb\\x06\\xff\\x7c\\x5a\\x77\\\n\\x92\\xb2\\x2c\\x00\\x74\\x1c\\xf4\\xf7\\xcd\\xda\\x2a\\x39\\xeb\\x48\\xe4\\xc1\\\n\\x3e\\xe3\\xf2\\xed\\xb9\\x5d\\xc6\\x5b\\x2e\\x35\\xdd\\x4c\\x1d\\x17\\x12\\xf3\\\n\\x7f\\x63\\xdc\\xfb\\x93\\xa5\\xef\\x69\\x66\\x44\\xbf\\x47\\x91\\xf9\\xe3\\x51\\\n\\x8a\\x40\\x37\\x75\\x5c\\x42\\x9f\\xff\\x0a\\x50\\xdc\\x84\\x63\\x0e\\x74\\xdd\\\n\\xb8\\xb6\\xf0\\x79\\x85\\x8f\\xc9\\x64\\x70\\xd5\\x65\\xa5\\x86\\xa7\\xb0\\xf9\\\n\\xdd\\x9f\\xba\\xc7\\x9c\\x22\\x68\\xb2\\x38\\xe3\\xd4\\x3c\\x2e\\x3c\\x6f\\x6a\\\n\\xe4\\x4c\\xdc\\xd2\\x90\\xe2\\xf1\\xa7\\x7a\\xf9\\xee\\x0f\\x9a\\xd8\\x6b\\xbf\\\n\\x35\\x1c\\x71\\xf2\\x06\\x6e\\xbd\\xab\\x8d\\xff\\x2d\\x8f\\x8c\\x98\\x01\\x44\\\n\\x88\\xab\\x51\\xb2\\x2d\\x07\\xdd\\x98\\x56\\xb8\\x7a\\x12\\x8b\\xd6\\x8e\\x60\\\n\\x08\\xa2\\x2b\\xd1\\xd6\\x7c\\x09\\x3d\\x31\\xb9\\xa9\\x1f\\x8a\\x8a\\x8a\\xb7\\\n\\x3b\\x81\\x0f\\xc5\\xec\\x99\\x12\\x0e\\xfb\\x36\\xc9\\x23\\x13\\x95\\x17\\x80\\\n\\x3c\\xbc\\xb5\\xa1\\xae\\x6d\\x67\\xab\\x98\\x22\\x6b\\xec\\x51\\xd9\\x98\\x75\\\n\\xd9\\xda\\x5b\\xba\\xe8\\xeb\\xed\\x1b\\x95\\xf5\\x6a\\x63\\x5d\\x12\\x55\\x1d\\\n\\xfa\\x71\\x8a\\x6b\\x85\\x64\\x2c\\x73\\x90\\x53\\x8d\\x28\\x52\\x8a\\xe2\\xc2\\\n\\x04\\xe9\\xf4\\xc8\\xab\\x35\\x4d\\xd3\\x09\\x85\\x8d\\x13\\x57\\xb6\\x71\\x34\\\n\\xb0\\x34\\x67\\x8e\\xa7\\x37\\xef\\x06\\x90\\x6d\\xe3\\xdb\\x79\\x32\\x5d\\xf8\\\n\\x7a\\x6e\\x64\\x06\\xf7\\x62\\x91\\x47\\x17\\xa3\\xa2\\x23\\xb3\\x1f\\x0d\\xae\\\n\\x9f\\xd3\\xad\\x7d\\xd6\\xd0\\x22\\xd9\\xac\\xe2\\xa4\\xe0\\x64\\xe0\\xb0\\xcb\\\n\\xdc\\x75\\xab\\xb1\\xd6\\x1a\\x5d\\x87\\x4b\\xaf\\x6a\\x22\\x99\\xd4\\xa6\\x64\\\n\\x9b\\xdc\\x70\\x65\\x29\\x87\\x1e\\xe4\\x9a\\x72\\xe5\\x5e\\xb9\\x3a\\xce\\xbd\\\n\\xbf\\x0a\\x70\\xf2\\x97\\x36\\x33\\x77\\xd9\\x2a\\xce\\xfb\\x76\\x3d\\x7f\\x7a\\\n\\xb4\\x9b\\xd6\\xb6\\xd4\\x94\\xbc\\x0f\\x39\\xb3\\xe9\\x99\\x4c\\x26\\x88\\x46\\\n\\xc7\\xbe\\x5a\\xb0\\x6a\\x4d\\x80\\x8e\\x60\\x18\\x52\\x2d\\x68\\x6b\\xbf\\x82\\\n\\x3c\\xef\\x77\\x48\\xf6\\x59\\x93\\x52\\x04\\x45\\x51\\x28\\x29\\x29\\xa1\\xa5\\\n\\xa5\\x65\\xe8\\xcf\\xc8\\x30\\x77\\xb6\\xcc\\x07\\x1f\\xf7\\x0f\\x72\\xaa\\x6e\\\n\\xde\\x7a\\x82\\x70\\x39\\x0c\\x71\\x1a\\xb4\\xae\\xad\\x8c\\xfd\\xe6\\xad\\xdb\\\n\\xe9\\xf7\\xf3\\xab\\xeb\\x79\\x7f\\x53\\xb6\\x75\\x55\\xe9\\xdd\\xf2\\x3f\\xba\\\n\\xfc\\x5e\\x3c\\x1e\\x4f\\x56\\xbe\\x57\\xeb\\x37\\x24\\x50\\x64\\x79\\x58\\xcf\\\n\\xa8\\xa8\\x5e\\x8d\\xc3\\xaa\\xe0\\xa0\\x81\\xda\\xaa\\x79\\x74\\x74\\x74\\x50\\\n\\x51\\x31\\xfc\\xc4\\x10\\x0a\\xab\\x86\\xfa\\x94\\x58\\xc6\\x79\\xf7\\xaa\\x33\\\n\\xbd\\x37\\x49\\xcf\\x9d\\x14\\x47\\x6f\\x41\\x4a\\x07\\xc6\\x77\\xf0\\x0a\\xbf\\\n\\x46\\x8d\\xf2\\x01\\xbd\\x9e\\xef\\xd1\\x99\\x59\\x92\\xfd\\x58\\xa3\\x79\\x59\\\n\\x1f\\xfb\\x06\\x60\\x9c\\x68\\xb5\\xdb\\x27\\x76\\x9d\\x9a\\xc9\\xe8\\x7c\\xf0\\\n\\x71\\x8c\\xf7\\x3f\\x8c\\xd1\\x67\\xa0\\xf8\\x1e\\xb2\\xdf\\x58\\x24\\x16\\xec\\\n\\x61\\x67\\x9f\\xa5\\x4e\\x3c\\x39\\x76\\x12\\xec\\xd0\\x83\\xdc\\x7c\\xf1\\xf3\\\n\\x7e\\x1e\\x7d\\xb2\\xd7\\xb0\\x6b\\x6e\\xaa\\x4b\\x72\\xd7\\x2f\\x3a\\xb8\\xe6\\\n\\xf2\\xd2\\x29\\x37\\xbc\\x2b\\x8a\\xc4\\xef\\x7f\\x5d\\xcb\\xe5\\xd7\\x34\\xf1\\\n\\xc4\\xd3\\x53\\x33\\x7e\\x57\\x38\\xac\\xf1\\xec\\x8b\\x7d\\x3c\\xfb\\x62\\xff\\\n\\xe2\\x69\\xee\\x6c\\x2b\\x5f\\x38\\xc5\\xcf\\x99\\xa7\\xe7\\x4d\\x99\\x2c\\x01\\\n\\x39\\x23\\xae\\x7a\\x7a\\x8c\\xc9\\xf1\\x24\\x9c\\xd9\\xb3\\x24\\x1d\\x40\\x5b\\\n\\x7b\\x16\\xf2\\xdc\\x87\\x90\\x9c\\xf3\\x27\\xa5\\x08\\x1e\\x8f\\x97\\x60\\xb0\\\n\\x8f\\x68\\x34\\x32\\xf4\\x67\\xdc\\x03\\x95\\x45\\x5a\\xb7\\x13\\xb3\\x2c\\xc3\\\n\\x99\\x5a\\x8e\\xae\\xef\\xbc\\xa2\\x09\\xf4\\x0d\\xbe\\xdd\\x38\\xb7\\xb2\\x09\\\n\\x93\\xac\\x91\\xd1\\xb2\\x9b\\x04\\x37\\xac\\xd9\\xc2\\xec\\xbd\\x1b\\x09\\x87\\\n\\x8b\\xf0\\x78\\x46\\x3e\\x3d\\xb4\\x76\\x43\\x02\\x59\\x19\\xf9\\xda\\x31\\xad\\\n\\x82\\x59\\xa5\\x2d\\xf8\\x9c\\x61\\xc2\\x61\\x08\\x06\\x7b\\xf1\\xf9\\x86\\xce\\\n\\x7f\\x63\\xe4\\x96\\x20\\x80\\xdb\\x65\\xc1\\x28\\xe7\\xf8\\x21\\x05\\xa1\\x5a\\\n\\x41\\xd2\\xf1\\x13\\x2a\\x53\\x3f\\x19\\x3f\\x47\\xf7\\xed\\x3a\\x38\\x84\\xbf\\\n\\xf7\\x16\\x5c\\x9e\\xe3\\x68\\xe4\\xab\\xa8\\x7a\\x76\\x56\\xb3\\x48\\xc4\\x58\\\n\\x4b\\x53\\x3c\\x16\\xc4\\xe5\\xcc\\x9f\\x90\\xe7\\x66\\xd5\\xda\\x38\\xdf\\xfb\\\n\\x41\\x23\\xab\\xd6\\x4e\\x7c\\x7a\\x2f\\x9f\\x57\\xe1\\xf6\\x1b\\xcb\\xf9\\xc2\\\n\\xc9\\xfe\\x9c\\x1a\\xce\\x6e\\xba\\xa6\\x8c\\x97\\x5f\\x0b\\xd3\\xd5\\x6d\\x5c\\\n\\xac\\xaa\\xfb\\x1e\\x08\\x70\\xf2\\xf1\\x3e\\x16\\xec\\x69\\x67\\xaa\\xe1\\xb0\\\n\\xcb\\xfc\\xf2\\x67\\xd5\\x2c\\x5d\\xec\\xe4\\xba\\x5b\\x5a\\x86\\xcd\\xeb\\x3a\\\n\\x15\\x58\\xbf\\x31\\xc9\\x6d\\x77\\xb5\\x73\\xe7\\x3d\\xed\\x1c\\x7f\\x94\\x97\\\n\\x73\\xce\\xcc\\xe7\\xa0\\x03\\x5c\\x39\\x95\\x89\\xe4\\xd3\\xe4\\xcc\\xb6\\x60\\\n\\x38\\x6c\\x4c\\x1e\\x23\\xe1\\x6f\\x35\\x9a\\xe5\\x6f\\x10\\x6d\\xed\\xd9\\x13\\\n\\x9a\\xf4\\xf9\\xd3\\x94\\x96\\x96\\x0c\\xfb\\x80\\x38\\x1d\\x3b\\xbf\\x97\\xd6\\\n\\x1c\\x44\\x2d\\xcb\\x40\\xda\\x79\\x6d\\x10\\x4d\\x0c\\x6e\\x9a\\xb1\\x99\\xd3\\\n\\xcc\\x2c\\x6f\\xcd\\xba\\x5c\\x9b\\x5b\\x4b\\xf0\\x45\\xfe\\x90\\x95\\xef\\x55\\\n\\x67\\x77\\x9a\\xae\\xee\\x0c\\x92\\x34\\xf8\\xe3\\x24\\x4b\\x12\\x1e\\x8f\\x07\\\n\\x97\\xcb\\x85\\x22\\xcb\\x14\\x56\\x54\\x92\\xd2\\xfa\\xb7\\x37\\xdb\\xdb\\xdb\\\n\\x87\\xf5\\x33\\xec\\x33\\x58\\x5c\\xcd\\x9e\\x5d\\x4d\\x69\\x69\\xd9\\x88\\x5b\\\n\\xb2\\x63\\x25\\xa9\\xb9\\xa9\\x33\\x5f\\x87\\xe6\\xdc\\x6f\\x42\\xfa\\x91\\x39\\\n\\xf4\\x3c\\x33\\x12\\x3f\\xc0\\x6f\\xae\\xcf\\x6e\\xbc\\x89\\x18\\x67\\x0e\\x34\\\n\\x2b\\x2a\\x7d\\x3d\\x9b\\xe9\\xec\\x1c\\x7f\\x5f\\xc6\\x8e\\x40\\x9a\\x53\\xcf\\\n\\xdc\\x3c\\x29\\xc2\\x6a\\x9b\\xd8\\xff\\xd6\\xa5\\x8d\\xbc\\xf8\\x72\\x5f\\x4e\\\n\\x0d\\x65\\x7e\\x9f\\x89\\xdb\\x6f\\x28\\x37\\x56\\xb7\\xab\\x70\\xf1\\x15\\x4d\\\n\\x53\\xda\\xff\\xe7\\xeb\\x5f\\x2d\\xe0\\xe9\\x47\\x66\\x51\\x51\\x36\\x3d\\x72\\\n\\x42\\x66\\x32\\xf0\\x8f\\xe7\\xfb\\xf8\\xc2\\x57\\xeb\\x38\\xf0\\xe8\\xf5\\x39\\\n\\x1d\\x59\\x3f\\x27\\xc4\\x55\\x22\\x91\\x40\\x55\\x8d\\x99\\x44\\xac\\x6a\\x23\\\n\\x82\\x51\\xa0\\x45\\xd1\\xd6\\x7f\\x1d\\x3d\\xf8\\xc6\\xa4\\x7c\\xbd\\xd9\\x6c\\\n\\xa1\\xb0\\xb0\\x68\\x18\\x71\\x35\\xf8\\xef\\xd3\\x9a\\x93\\x84\\x79\\x29\\x92\\\n\\x34\\x50\\x24\\xc4\\x12\\x43\\x5b\\x2e\\xf6\\xaa\\xaa\\xcf\\xba\\x5c\\xaa\\x26\\\n\\xb3\\x7e\\x5d\\x17\\x5e\\xf5\\xed\\x11\\x33\\x04\\xac\\xdf\\xd0\\x2f\\x8e\\x4c\\\n\\x26\\xf3\\xa0\\x42\\xd1\\x64\\x36\\x21\\xcb\\x32\\x26\\x93\\x09\\x97\\xcb\\xc5\\\n\\xec\\x99\\x26\\x74\\xfa\\xcb\\xad\\xeb\\x3a\\xad\\xad\\x2d\\x43\\x0a\\xb8\\x90\\\n\\xc1\\x5b\\x3e\\x76\\x9b\\x8c\\xcf\\xe7\\x63\\xe6\\xcc\\x59\\xf8\\xfd\\xe3\\x6b\\\n\\x7d\\xd0\\x74\\x33\\x75\\xca\\x65\\xa8\\xae\\x03\\x27\\xa4\\x2f\\x49\\xa9\\x16\\\n\\x0a\\x7b\\x2e\\xa7\\xca\\xf4\\x34\\xb2\\x34\\xbc\\xbf\\x4c\\xc4\\x40\\x7f\\x65\\\n\\x9b\\x25\\x45\\x4d\\xfc\\x5a\\xa2\\x3d\\xeb\\xe9\\xe8\\x18\\x5f\\x7f\\xcf\\x9b\\\n\\xee\\x68\\xa3\\x2f\\xa4\\x4e\\xfa\\xb0\\x71\\xf9\\xb5\\xcd\\xa8\\x6a\\x6e\\x89\\\n\\x8e\\x53\\x4e\\xf0\\x71\\xcc\\x11\\xc6\\xc6\\xa8\\x5a\\xb5\\x26\\xce\\xfd\\x0f\\\n\\x06\\x98\\xca\\xec\\xb3\\xc4\\xc9\\xdb\\x2f\\xcd\\xe3\\xfa\\x2b\\x4a\\xf1\\xb8\\\n\\x65\\xa6\\x0b\\x9b\\xea\\x92\\x7c\\xfd\\x3b\\x0d\\x1c\\x7f\\xda\\x46\\xde\\x7d\\\n\\x2f\\xf7\\x0e\\x20\\xe4\\x44\\x4b\\x0f\\xb7\\x2d\\x34\\x6a\\x71\\xa5\\xd5\\x23\\\n\\x18\\xed\\x2c\\x98\\x40\\xdb\\xf8\\x6d\\xf4\\x9e\\x7f\\x4d\\xca\\xd7\\xe7\\xe5\\\n\\xe5\\xe1\\x74\\x3a\\x87\\x10\\x57\\x43\\x5b\\xb5\\x92\\xba\\x87\\xb8\\x79\\x09\\\n\\xb0\\xe3\\x33\\x89\\xb4\\x79\\xc8\\xad\\xbf\\x3d\\x6b\\x1a\\x18\\x8d\\x15\\xf9\\\n\\xbd\\x4d\\x73\\xf0\\x46\\x7e\\x4b\\x77\\x67\\x13\\x99\\x61\\xec\\xea\\x6b\\x37\\\n\\xf4\\x5b\\x11\\x24\\x09\\xcc\\xe6\\x9d\\xad\\x69\\xb2\\xbc\\x43\\x00\\xda\\x1d\\\n\\x26\\xf6\\xdb\\xa7\\x7a\\x80\\xe5\\x28\\x91\\x48\\x10\\x08\\x74\\x0c\\x2e\\x86\\\n\\x0c\\xf6\\xe5\\x49\\xa7\\xfb\\x27\\xc4\\x7e\\x9f\\xb7\\x52\\x6a\\x6a\\x6a\\xb1\\\n\\xd9\\xc6\\xcf\\x01\\x5d\\xd3\\x4d\\xd4\\x49\\x97\\x90\\x71\\x1f\\x32\\x51\\x9d\\\n\\x19\\x5b\\xef\\xc3\\xcc\\xcc\\xdc\\x80\\xdb\\x3c\\xf4\\x01\\x19\\xab\\x81\\xbe\\\n\\x67\\x69\\x55\\x41\\x4a\\x35\\x52\\x19\\xbd\\x92\\x54\\xdf\\x4a\\xda\\xda\\x5a\\\n\\xc7\\x1c\\x4e\\x66\\x28\\x5e\\x7f\\x3b\\x9c\\x13\\x43\\x46\\x47\\x20\\xb3\\xbd\\\n\\xdf\\xe7\\x12\\x77\\xde\\x54\\x81\\xcb\\x65\\xec\\x33\\x73\\xd7\\xbd\\x1d\\x6c\\\n\\xaa\\xcb\\xbd\\xba\\x8e\\x6a\\x01\\x60\\x95\\xb9\\xe8\\xfc\\x22\\x96\\xbf\\xba\\\n\\x07\\x17\\x7c\\xad\\x00\\xb3\\x79\\xfa\\x1c\\xc0\\x58\\xf1\\x41\\x8c\\x13\\xcf\\\n\\xd8\\xc4\\xd7\\xbe\\x5d\\x6f\\xe8\\xb6\\xf0\\xb4\\x10\\x57\\x11\\x83\\x96\\x91\\\n\\x8a\\x1e\\x44\\xd1\\x43\\x08\\x76\\x01\\x3d\\x8d\\xb6\\xe9\\x12\\xb4\\xae\\xa7\\\n\\x26\\xfc\\xab\\x25\\x49\\xa2\\xac\\xac\\x1c\\x93\\x69\\x67\\x61\\x32\\xd2\\xbc\\\n\\x9f\\xd4\\x7d\\xa4\\x2c\\x8b\\x07\\x58\\x8c\\x52\\xe9\\xc1\\x4d\\xe0\\x5e\\x47\\\n\\x94\\x9a\\xa2\\x8e\\xac\\xcb\\xb5\\xb1\\xb9\\x9c\\x50\\x5f\\x94\\x52\\xfd\\xef\\\n\\x43\\x5a\\x24\\xd2\\x69\\x9d\\x4d\\x9b\\x77\\x0c\\xbc\\x16\\xf3\\xf0\\xc7\\xc2\\\n\\xe7\\xcc\\xb4\\x62\\xb7\\xdb\\xa8\\xae\\x1e\\x28\\xb0\\x7a\\x7a\\x7a\\x88\\x44\\\n\\x76\\x5e\\x64\\x18\\x7d\\xc4\\x3f\\x9e\\xd0\\x3e\\x25\\xde\\xec\\xd4\\xd4\\xd4\\\n\\x52\\x52\\x52\\xba\\x3d\\x80\\xa9\\xe1\\x5d\\x0b\\x85\\x2d\\x5c\\x44\\xc6\\x7d\\\n\\xd4\\xc4\\xf5\\xa9\\xd8\\x6a\\x4a\\x83\\xdf\\xa3\\xdc\\xfa\\xf6\\xa0\\xef\\x1b\\\n\\x19\\x92\\x22\\x99\\x36\\xf7\\x87\\x75\\xc8\\x74\\x51\\x16\\xba\\x12\\x29\\xb2\\\n\\x62\\x58\\x6b\\xe4\\xae\\x12\\x0e\\xab\\x74\\x04\\x72\\x67\\xf2\\x58\\x97\\x83\\\n\\xe2\\xaa\\xb4\\xc4\\xcc\\xf5\\x3f\\x34\\xd6\\x09\\x3d\\x99\\xd2\\xb9\\xf4\\xaa\\\n\\xe6\\x71\\x13\\xcc\\x13\\x89\\xdf\\x67\\xe2\\xe6\\x6b\\xcb\\x59\\xf1\\xea\\x1e\\\n\\x5c\\xfe\\xbd\\x62\\x4a\\x8a\\xa7\\x4f\\x20\\xcf\\xe7\\x5e\\xec\\xe3\\x88\\x93\\\n\\x37\\xb0\\xe2\\x83\\xdc\\xb0\\x62\\x4d\\xba\\xb8\\xd2\\x34\\x8d\\x78\\x3c\\x66\\\n\\xc8\\xb5\\xac\\x9a\\xd8\\x12\\x1c\\xeb\\xaa\\x5f\\xaf\\xbb\\x12\\xad\\xe3\\xcf\\\n\\x13\\xfe\\xcd\\x26\\x93\\x89\\xf2\\xf2\\x9d\\x4f\\xce\\xc5\\xe3\\x23\\x0f\\x68\\\n\\x71\\x3d\\x9f\\xa4\\x79\\xef\\x1d\\x82\\xcc\\x32\\xf4\\xd1\\xdd\\xfd\\xf7\\x58\\\n\\x33\\x0a\\xab\\x8b\\xc4\\xfb\\x1b\\x67\\x63\\x0b\\x3d\\x8e\\x16\\xdd\\x38\\xa8\\\n\\xf8\\xa9\\xab\\x4f\\x92\\xfe\\x84\\x4f\\x86\\xc9\\x6c\\x46\\xfe\\x94\\x79\\x4c\\\n\\x53\\x77\\x08\\x9a\\x79\\x73\\xec\\x5b\\x2d\\x27\\x36\\xaa\\xab\\x6b\\x06\\x08\\\n\\xac\\xb6\\xb6\\xd6\\x9d\\x2c\\x64\\x5e\\x8f\\xc1\\xe2\\x2a\\xae\\x0d\\x2a\\x6e\\\n\\xfd\\x7e\\x3f\\x33\\x67\\xce\\xc2\\xeb\\xf5\\x8e\\x9b\\xc0\\xaa\\xe3\\x02\\xd2\\\n\\x9e\\xe3\\x26\\xb0\\x3b\\xc7\\x71\\x76\\xdd\\xc5\\x4c\\xee\\xc1\\x22\\x47\\x3f\\\n\\x25\\xae\\x0c\\xac\\x9b\\x2e\\x91\\xdc\\x26\\xe8\\xb5\\x28\\x85\\xc1\\x6b\\xb0\\\n\\xc6\\x5f\\xa7\\xb9\\xb9\\x69\\x97\\x92\\x80\\x0f\\x85\\xaa\\xe5\\xd6\\xe4\\x9e\\\n\\x6b\\xdb\\x82\\xdb\\x38\\xe7\\xcc\\x7c\\xf6\\x5b\\xe6\\x34\\xf4\\x9a\\xef\\xac\\\n\\x88\\x6e\\xcf\\xa5\\x37\\x1d\\x28\\x2d\\x31\\xf3\\xc3\\x8b\\x4b\\xf8\\xe0\\x8d\\\n\\x3d\\xf9\\xfd\\xaf\\x6a\\x38\\xec\\xb3\\xee\\x69\\x51\\xaf\\xb6\\xf6\\x34\\xa7\\\n\\x7c\\x79\\x33\\xbf\\xfb\\x53\\x97\\x10\\x57\\xb1\\x58\\xd4\\xb0\\x15\\x81\\x55\\\n\\xad\\x17\\xfa\\xc8\\x88\\xc9\\xa2\\xe1\\x66\\xb4\\xd6\\xdf\\x4c\\xf8\\xf7\\x3a\\\n\\x1c\\x8e\\x9d\\xfc\\xaf\\xa2\\xf1\\x2c\\x45\\x83\\x5e\\x48\\xda\\xba\\x00\\xbb\\\n\\x25\\x85\\x2c\\x0d\\xdd\\x9f\\xf6\\x9e\\x51\\x87\\xd3\\x9a\\x7d\\xa0\\xda\\x15\\\n\\x1b\\xe6\\x80\\x9e\\xa1\\x34\\xf3\\x3b\\x02\\x81\\xf6\\x9d\\xc4\\xcf\\x60\\xab\\\n\\x77\\xb3\\xd9\\xfc\\xa9\\x49\\x71\\x87\\x8f\\xcc\\xdc\\xd9\\x3b\\xf6\\xa3\\xac\\\n\\x56\\x2b\\xd5\\xd5\\x35\\xdb\\x2d\\x76\\x99\\x4c\\x86\\xb6\\xb6\\x81\\xd1\\xa1\\\n\\x7d\\x5e\\x63\\x57\\x96\\x89\\xa4\\x3e\\xac\\xc0\\x2d\\x2b\\x2b\\xa7\\xba\\xba\\\n\\x06\\xab\\xd5\\x36\\x2e\\xc3\\xcd\\x16\\xfd\\x1b\\xa4\\xbc\\xa7\\x4c\\x68\\xbf\\\n\\x52\\xc2\\xaf\\x53\\x13\\xbd\\x98\\x3c\\x65\\xf5\\xb8\\x88\\x2b\\x80\\x78\\xea\\\n\\x13\\xfb\\x8c\\x7a\\x1a\\x7f\\xcf\\xcd\\xb8\\x13\\xff\\xa4\\xa9\\xa9\\xd1\\x50\\\n\\x81\\x25\\x18\\x19\\x49\\x92\\xb8\\xe7\\xc7\\x15\\x58\\x2d\\xc6\\x6e\\x7d\\xdd\\\n\\x72\\x67\\x1b\\xcd\\xad\\xa9\\x69\\xd5\\x56\\x8a\\x22\\x71\\xfc\\xd1\\x5e\\x1e\\\n\\xfd\\xfd\\x0c\\xd6\\xbc\\x3b\\x9f\\xfb\\x7f\\x5a\\xc5\\x17\\x4e\\xf6\\x91\\x9f\\\n\\x37\\x75\\x83\\xe2\\xa6\\xd3\\x3a\\x57\\xde\\xd0\\xc2\\x0d\\xb7\\xb5\\x4e\\x6a\\\n\\x39\\x26\\x5d\\x5c\\x19\\x11\\xdb\\x6a\\xfb\\x64\\x25\\x2c\\x57\\xc6\\x09\\xac\\\n\\xe6\\xbb\\xd1\\x9a\\xee\\x9a\\xf0\\xef\\xcd\\xcf\\xcf\\xc7\\xe5\\x72\\x7d\\xa2\\\n\\x7f\\x8c\\x42\\xa8\\x6b\\x25\\x98\\xbd\\xc3\\x87\\x95\\x30\\x29\\x2a\\xfb\\xcc\\\n\\x5d\\x9f\\xf5\\x35\\x3b\\x82\\x3e\\xd6\\x34\\x54\\x23\\x45\\x96\\x53\\xa6\\x3f\\\n\\x4a\\x4b\\xcb\\xc0\\xed\\x81\\xc1\\xfc\\x4e\\x2c\\x9f\\x72\\xe8\\x51\\x55\\x15\\\n\\x4d\\xd3\\x28\\x29\\x32\\xe3\\xf7\\x0d\\x14\\x4b\\x56\\xab\\x95\\xaa\\xaa\\xea\\\n\\xed\\x02\\x2b\\x12\\x09\\xd3\\xdb\\xdb\\xfb\\x09\\xa1\\x26\\xe1\\x30\\xd0\\xef\\\n\\x6a\\x30\\xcb\\xd5\\x60\\x22\\xb7\\xb6\\xb6\\x96\\xe2\\xe2\\x92\\x71\\xd8\\x2a\\\n\\x94\\xa8\\xd7\\xce\\x26\\xe3\\x39\\x76\\x62\\x3b\\x56\\xa6\\x87\\x82\\xe0\\x75\\\n\\x54\\xc9\\x7f\\x41\\x42\\x35\\x3c\\x52\\x7d\\x22\\xf5\\xe9\\xed\\x60\\x1d\\x77\\\n\\xef\\x3d\\xe4\\x27\\xff\\x4a\\x63\\x63\\x83\\x61\\x07\\x76\\x04\\xd9\\x31\\xb3\\\n\\xd6\\xc6\\x65\\xdf\\x2d\\x36\\x76\\xae\\x8a\\x69\\x5c\\x7e\\x4d\\xf3\\xb4\\x6d\\\n\\xb3\\x82\\x7c\\x13\\xa7\\x7f\\xce\\xcf\\xaf\\xee\\xae\\x66\\xcd\\xbb\\xf3\\xf9\\\n\\xd7\\xdf\\x67\\x73\\xe5\\xa5\\x25\\xec\\xbb\\xd4\\x81\\x3c\\x05\\xfd\\xe0\\x7f\\\n\\xf5\\x50\\x27\\x7f\\xfd\\x5b\\xcf\\xa4\\x7d\\xff\\xa4\\x37\\x59\\x3c\\x6e\\xdc\\\n\\xbe\\xbd\\x08\\xc3\\x60\\xb0\\xc0\\x6a\\x7b\\x10\\xad\\xfe\\x47\\x13\\xea\\x6b\\\n\\xf0\\x69\\xff\\xab\\xd8\\x28\\x77\\x8c\\x33\\xd6\\x5a\\xe2\\xbe\\xaf\\x0d\\xfb\\\n\\x99\\xfd\\xe7\\xad\\x1d\\x95\\x63\\xfb\\x53\\xff\\xfd\\x0c\\xe9\\x8c\\x82\\xb9\\\n\\xfb\\x8f\\xf8\\xd4\\x57\\xe8\\xe8\\xe8\\xf7\\xdb\\xea\\xee\\xc9\\x10\\xe8\\x4c\\\n\\x0f\\xb2\\x1a\\x54\\xb0\\x58\\x06\\x5a\\xaf\\x52\\xa9\\x14\\xf3\\xe6\\x0c\\x6e\\\n\\x0d\\xea\\xb7\\x60\\xed\\x10\\x58\\x1d\\x1d\\x03\\xc3\\x33\\x78\\x0d\\xf4\\xbb\\\n\\x8a\\xc6\\xb4\\xac\\xef\\x43\\x5e\\x5e\\xde\\xd6\\xad\\x42\\x9f\\xd1\\x77\\x99\\\n\\x2d\\xfa\\xd7\\xd1\\x9c\\xfb\\x4c\\x78\\x9f\\xb6\\xf5\\x3d\\xc1\\x4c\\xf5\\x76\\\n\\xf2\\x3d\\x11\\x43\\xaf\\x1b\\x1d\\xe2\\x94\\xaa\\x3d\\xf8\\x7b\\x8a\\x93\\xbf\\\n\\xa6\\xb1\\xa1\\x6e\\xd8\\x43\\x11\\x59\\x95\\xdd\\x26\\x23\\x89\\x40\\xf0\\x59\\\n\\x73\\xd1\\xf9\\x45\\xcc\\x9f\\x67\\xac\\x05\\xf6\\x3f\\xaf\\x87\\x79\\xf4\\xc9\\\n\\x9e\\x69\\xdf\\x76\\x92\\x24\\xb1\\x68\\xa1\\x83\\xef\\x5f\\x54\\xcc\\xb3\\x8f\\\n\\xcd\\x66\\xfd\\x7b\\x7b\\xf1\\xe0\\x7d\\xd5\\x9c\\x79\\x7a\\xde\\x94\\x0a\\xeb\\\n\\x70\\xf9\\xb5\\xcd\\x7c\\xf0\\x71\\x6c\\x52\\xbe\\x7b\\xd2\\xc5\\x55\\x32\\x69\\\n\\x9c\\xb8\\x32\\x6b\\x1d\\x08\\x0c\\x16\\x58\\x81\\x47\\xd0\\xeb\\xae\\x40\\xd7\\\n\\x27\\x6e\\xe5\\xad\\x28\\xca\\x76\\xff\\xab\\x60\\x68\\x74\\xc2\\x2e\\x3f\\x0f\\\n\\x9a\\xd4\\x93\\x48\\xfa\\xbe\\x3c\\xf4\\x0a\\xcd\\xdb\\xc7\\xac\\xb2\\x96\\xac\\\n\\xaf\\xd9\\x13\\x76\\xf3\\xd2\\x07\\xfd\\x11\\xc0\\x5d\\xdd\\x3f\\x85\\xc8\\xbb\\\n\\x04\\x83\\x41\\xd6\\x6f\\x1c\\xba\\xef\\xda\\xed\\x76\\xa4\\x4f\\x89\\xab\\xb9\\\n\\xb3\\x87\\x1e\\xe8\\x2d\\x16\\x2b\\xb5\\xb5\\x33\\x70\\x3a\\x9d\\xe8\\xba\\x3e\\\n\\xe0\\xf4\\xa0\\x91\\x4e\\xed\\xa3\\xdd\\xd6\\xe8\\xdf\\x2a\\x2c\\xa3\\xba\\xba\\\n\\xc6\\xd0\\x53\\x85\\x3a\\x0a\\x5b\\x94\\x4b\\xd1\\x6d\\x73\\x26\\x7e\\xd0\\x8b\\\n\\xbd\\xcf\\xac\\xd4\\x0f\\xb0\\x5a\\x8c\\x5b\\x34\\xb4\\x74\\x0f\\x1d\\x40\\xd4\\\n\\xd2\\xf7\\x34\\x65\\xc9\\xbb\\x68\\x6c\\xdc\\x98\\x55\\xca\\xa3\\x21\\xc5\\x95\\\n\\x55\\x66\\xd6\\x0c\\x91\\x20\\x3a\\xfb\\xbe\\x2b\\x71\\xf7\\xed\\x95\\x86\\x5b\\\n\\x5d\\xae\\xbb\\xa5\\x75\\x5a\\x26\\x1a\\x1e\\x0e\\xaf\\x47\\xe1\\xe4\\xe3\\x7c\\\n\\xdc\\xf3\\xe3\\x4a\\xde\\x7f\\x63\\x4f\\x3e\\x7e\\x7b\\x4f\\x1e\\xba\\xbf\\x9a\\\n\\x6f\\x7d\\xbd\\x90\\x7d\\x96\\x38\\x0c\\xdf\\x82\\x35\\x8a\\x54\\x4a\\xe7\\x9c\\\n\\x0b\\xb7\\xd0\\x1b\\x9c\\xf8\\x83\\x20\\x93\\x2a\\xae\\xd2\\xe9\\xb4\\x61\\xfe\\\n\\x08\\xb2\\x9e\\x40\\xd1\\x23\\x62\\x44\\x19\\x0f\\x81\\xd5\\xfd\\x0f\\xb4\\x4d\\\n\\x17\\xa3\\x6b\\x13\\xe7\\x6f\\xe0\\x70\\x38\\xf0\\xf9\\x8a\\x58\\xb7\\x61\\x74\\\n\\x13\\x60\\x55\\x45\\xff\\x43\\xde\\xa0\\x9e\\x4e\\xd2\\xfb\\xf9\\x21\\x3f\\xf7\\\n\\x99\\x51\\x38\\xb6\\x03\\xbc\\xfa\\xd1\\x22\\xde\\x5a\\x3d\\x1f\\xf4\\x0c\\x85\\\n\\x7d\\xb7\\x10\\x0a\\x7c\\xc4\\xc7\\xab\\xc3\\xc3\\xac\\xfc\\x64\\x6c\\xf6\\x1d\\\n\\x62\\x44\\x96\\x35\\x4a\\x8b\\xb5\\x11\\x85\\x4c\\x55\\x55\\x35\\xc5\\xc5\\x25\\\n\\xc4\\x62\\x31\\x12\\x89\\xc4\\xf6\\x81\\xcd\\x28\\x1a\\x1a\\x53\\xbb\\x7c\\x3f\\\n\\x6a\\x6a\\x6a\\x87\\x8d\\x49\\x36\\x5a\\x54\\xdd\\x46\\xa3\\xf5\\x2a\\x74\\x73\\\n\\xc9\\x24\\x0c\\x3e\\x1d\\xf8\\x9d\\xc6\\x05\\x20\\x6c\\xee\\x1c\\x3e\\x59\\xae\\\n\\x29\\xfc\\x1a\\x95\\xb1\\x5b\\x69\\x6a\\x58\\x4f\\x2a\\xb5\\xeb\\xc9\\xe9\\x3f\\\n\\x7f\\x92\\x2f\\x67\\xc6\\x05\\xbb\\x2d\\xf7\\xf7\\x8a\\x16\\x2d\\x74\\x18\\x9e\\\n\\xc8\\x38\\xd8\\xa7\\x72\\xf5\\x8d\\x2d\\xec\\xce\\x94\\x14\\x9b\\x39\\xe9\\x58\\\n\\x1f\\x3f\\xba\\xba\\x8c\\xe7\\x1e\\x9f\\xcd\\xe6\\x8f\\xf6\\xe2\\xf9\\xbf\\xcd\\\n\\xe2\\x96\\x6b\\xcb\\x38\\xe5\\x04\\x1f\\xe5\\x39\\x64\\xdd\\x6a\\xef\\xc8\\xf0\\\n\\xfb\\x3f\\x4f\\xfc\\x61\\x84\\x49\\x3d\\x87\\x39\\x5c\\x64\\xea\\x51\\x57\\x44\\\n\\xef\\x44\\x30\\x8e\\xf4\\xbe\\x84\\xb6\\xe1\\x42\\xe4\\xd9\\xf7\\x4f\\xd8\\x57\\\n\\x6e\\xaa\\xb7\\xa2\\xe9\\x66\\x46\\x93\\xae\\x65\\x9b\\xb8\\x02\\x68\\xd0\\xce\\\n\\xa2\\xda\\x6b\\xc1\\xda\\xf7\\xd7\\x9d\\x3e\\x37\\xbf\\xa6\\x1e\\x8f\\x23\\x46\\\n\\x28\\xe6\\xc8\\x52\\x08\\x48\\xfc\\xfd\\xed\\x03\\x69\\xea\\x2a\\x64\\x9f\\x39\\\n\\xeb\\x29\\x2e\\xfa\\x09\\x1f\\x7d\\x7c\\x33\\x16\\xab\\x7f\\xc8\\x68\\xe7\\x56\\\n\\xab\\x8d\\x64\\x2a\\x85\\xa6\\x6a\\x54\\x95\\x4b\\xf4\\xf5\\x75\\xe3\\xf1\\x8c\\\n\\xfc\\x7d\\x79\\x79\\x79\\xf8\\xfd\\xfe\\xed\\x7e\\x3a\\xf9\\x79\\xc6\\x3d\\xa6\\\n\\x0d\\x4d\\xbb\\x2e\\x90\\x25\\x49\\xa2\\xa0\\xa0\\x00\\x97\\xcb\\x45\\x4b\\x4b\\\n\\xcb\\x98\\x44\\xc2\\xf6\\x31\\x40\\xf3\\xd2\\xea\\xbc\\x9e\\xf2\\xf0\\x15\\xa0\\\n\\x0e\\x1f\\xc3\\xa9\\xb3\\xcf\\x4b\\x5d\\x5b\\x29\\x2d\\x5d\\x05\\xa4\\xd5\\x9d\\\n\\xdb\\xc4\\xa4\\xa8\\x54\\x16\\x76\\xb2\\x78\\xe6\\x26\\xcc\\xa6\\x91\\x57\\xaa\\\n\\xf9\\x9e\\x10\\xed\\xbd\\xc6\\x04\\x52\\x6d\\x0c\\x8c\\x2c\\x3a\\xe5\\xd8\\x0a\\\n\\x2a\\xb9\\x85\\xa6\\x86\\xab\\x29\\xab\\x9c\\xb3\\x4b\\x96\\xc0\\xef\\x5d\\x58\\\n\\xcc\\xbf\\x5f\\x09\\xf3\\xfe\\x47\\xb1\\x49\\x1f\\x12\\x8c\\xec\\x97\\xe3\\xc9\\\n\\x0f\\x2f\\x29\\xe1\\xb9\\x17\\xfb\\xc6\\xd4\\xf7\\x3f\\xcd\\x3f\\x9e\\xef\\xe3\\\n\\x9f\\xff\\xea\\xe3\\xf8\\xa3\\xbd\\x08\\xc0\\x62\\x91\\x59\\xba\\xc8\\xc9\\xd2\\\n\\x45\\x4e\\xce\\xff\\xda\\x36\\x51\\x93\\x66\\xf9\\x07\\x51\\x56\\xbc\\x1f\\x63\\\n\\xc5\\x07\\x51\\x3e\\x5e\\x15\\x27\\x99\\x9a\\x9c\\x13\\xa6\\x0f\\xfd\\xb1\\x8b\\\n\\xef\\x7c\\xb3\\x10\\x8b\\x65\\xe2\\x16\\x04\\x93\\x2c\\xae\\x8c\\xdc\\x12\\xec\\\n\\x12\\x3d\\x7c\\xbc\\x09\\xbd\\x8d\\xb6\\xfe\\x3c\\xd0\\x6f\\x05\\x69\\x7c\\x57\\\n\\x26\\xba\\x0e\\x6f\\xbc\\x1d\\xc1\\xe9\\x70\\x10\\x0a\\x87\\xb3\\xb2\\x70\\xfa\\\n\\xbc\\x3b\\x9f\\x02\\x6b\\xd0\\xce\\xa0\\xd2\\x67\\xc5\\x1e\\x7c\\x78\\xe0\\x44\\\n\\x27\\xe9\\x1c\\xb9\\xf8\\x7d\\x9e\\x7c\\xeb\\xa0\\x51\\x95\\x6b\\xc5\\x86\\x39\\\n\\xfd\\x27\\x08\\x01\\xab\\xf2\\x31\\x91\\xcc\\x62\\x5c\\x2e\\xcf\\x80\\x40\\xa1\\\n\\x03\\x2c\\x3e\\x36\\x3b\\x91\\x68\\x94\\xda\\x6a\\x89\\x48\\x24\\x4c\\x3c\\x1e\\\n\\xc3\\x6e\\x1f\\x59\\x60\\x49\\x92\\xb4\\xdd\\x07\\x6b\\xef\\x05\\x76\\x9e\\x7b\\\n\\xd1\\x98\\x74\\x23\\xf5\\x0d\\x63\\x17\\x44\\x36\\x9b\\x8d\\xda\\xda\\x5a\\x02\\\n\\x81\\x00\\xbd\\xbd\\x63\\xf7\\x3f\\x89\\xaa\\x25\\x74\\x7a\\xae\\xa3\\x30\\x78\\\n\\x0d\\xe8\\x3b\\x0b\\xe9\\x8d\\x2d\\xe5\\xdc\\xf5\\xc4\\xe9\\x3c\\xfb\\xce\\xfe\\\n\\x68\\xfa\\xc8\\xdb\\x0f\\x25\\x79\\x3d\\x5c\\xfc\\xb9\\xbf\\x73\\xee\\x51\\xc3\\\n\\x07\\xc5\\x5d\\x58\\x5b\\xc7\\xea\\x86\\x6a\\x63\\xc4\\x55\\x67\\x76\\x16\\x3d\\\n\\x39\\xf6\\x21\\x95\\xdc\\x4c\\x53\\xe3\\x35\\x94\\x56\\xce\\xc9\\xaa\\x2f\\x0c\\\n\\x18\\xe7\\xcc\\x12\\x4f\\x3f\\x32\\x93\\x3b\\xee\\x69\\xe7\\x8f\\x7f\\xed\\x99\\\n\\xd4\\x68\\xed\\x79\\xfe\\xa9\\x71\\xa2\\xcc\\x61\\x97\\xf9\\xe9\\xad\\x15\\x9c\\\n\\x76\\x76\\x9d\\xb1\\xa2\\xed\\xfa\\x66\\x0e\\xdc\\xdf\\x65\\x78\\xb8\\x94\\xe9\\\n\\xc2\\x36\\xeb\\xd6\\x49\\xc7\\xf6\\x5b\\x5b\\x53\\x29\\x8d\\x95\\x6b\\xe2\\xbc\\\n\\xf7\\x41\\x8c\\xe5\\x1f\\xf4\\x0b\\xae\\x96\\xd6\\x89\\xd9\\x5e\\x0d\\x74\\x66\\\n\\x78\\xea\\xb9\\x20\\x67\\x9c\\x9a\\xb7\\x7b\\x88\\xab\\x44\\x42\\x58\\xae\\xa6\\\n\\x1c\\x91\\x0f\\xd0\\x83\\xaf\\x20\\xf9\\x0e\\x01\\x69\\x7c\\xfc\\x3f\\x62\\x71\\\n\\x8d\\xbf\\x3e\\xd1\\xdd\\x1f\\x6d\\x57\\x92\\x70\\xb9\\x5c\\x44\\xc2\\x61\\xb4\\\n\\x11\\x1c\\xeb\\x17\\xec\\x31\\xf8\\xc4\\xdb\\xa4\\x9e\\x42\\x85\\xdf\\x82\\xa3\\\n\\xf7\\xb7\\x03\\x7e\\x7f\\xc0\\x9e\\x6b\\xf9\\x70\\xf3\\x2c\\xea\\xda\\x77\\x6d\\\n\\x5b\\x4a\\x52\\xbb\\x71\\xca\\x1b\\x88\\x84\\xe7\\xe1\\x72\\xbb\\x07\\x3d\\x59\\\n\\x67\\x32\\x9b\\xb1\\x5a\\x2d\\xd4\\x56\\xf7\\x4f\\x82\\x81\\x40\\x80\\xea\\xea\\\n\\x9a\\x51\\x7d\\xcf\\xfe\\x06\\xc6\\xec\\xa9\\x6f\\x4c\\x91\\xc9\\xe8\\x98\\x4c\\\n\\x63\\xf3\\x91\\x90\\x65\\x99\\x92\\x92\\x12\\xdc\\x6e\\x17\\xad\\xad\\xad\\x63\\\n\\x76\\xd6\\xee\\xcd\\xcc\\xc2\\xea\\xbb\\x18\\x4f\\xef\\xc0\\x13\\xaa\\xcb\\xd7\\\n\\xcf\\xe5\\xcb\\x3f\\xbe\\x7a\\x48\\x87\\xf1\\xc1\\x68\\xef\\xc9\\xe3\\xaa\\xdf\\\n\\x7d\\x9d\\x44\\xca\\xc2\\x85\\x27\\x3c\\x3b\\xe4\\xe7\\xf6\\x9d\\xbb\\x8e\\x47\\\n\\x5e\\x3d\\xcc\\x90\\x76\\xdd\\xdc\\x56\\x96\\x7d\\xdb\\xc5\\x56\\x52\\xa9\\xdf\\\n\\x44\\x53\\xd3\\xb5\\x14\\x97\\xcf\\x1d\\x32\\x3b\\xc1\\x50\\x58\\xad\\x32\\xd7\\\n\\x5f\\x51\\xc6\\xf5\\x57\\x94\\xd1\\xd0\\x94\\x24\\x14\\xce\\xde\\xb5\\xe2\\x87\\\n\\xd7\\x35\\xf3\\xde\\x87\\xc6\\x58\\xbd\\xf2\\xf2\\xa6\\x4e\\x00\\xca\\x83\\x0f\\\n\\x74\\xf3\\xe5\\xd3\\xf2\\x78\\xe4\\x09\\xe3\\x9c\\xd1\\x03\\x9d\\x19\\xae\\xbf\\\n\\xb5\\x95\\x7b\\xef\\xa8\\x14\\xf3\\x42\\x16\\x0c\\x66\\xdd\\x6a\\x6a\\x49\\xf1\\\n\\xcc\\xf3\\x41\\xfe\\xfe\\x6c\\x90\\x8f\\x56\\xc6\\xc7\\xf5\\xfb\\x7f\\xfb\\x70\\\n\\xd7\\x84\\x8a\\xab\\x49\\xdd\\x34\\x37\\xd6\\x72\\xd5\\x2d\\x7a\\xef\\x44\\x91\\\n\\xe9\\x43\\xef\\x7d\\x05\\xb4\\x91\\x1f\\x86\\xbe\\xbe\\x0c\\x4f\\x3f\\x17\\x64\\\n\\xd5\\xda\\x38\\xb1\\x2c\\xc2\\x00\\x34\\xb7\\xa6\\xb8\\xfb\\xfe\\x8e\\x01\\x89\\\n\\x69\\x65\\x59\\xc6\\xe1\\x1c\\x3e\\x30\\x91\\xd5\\x02\\x8b\\x16\\x0e\\xdd\\x9d\\\n\\x9b\\x33\\xc7\\x11\\xf1\\x5f\\x34\\x50\\x1c\\xa1\\x73\\xfa\\xc1\\xaf\\x61\\x36\\\n\\xed\\xfa\\xea\\x5f\\x4e\\x37\\xe2\\x90\\x9a\\x88\\x44\\x22\\x43\\x5a\\xd7\\xca\\\n\\x4a\\xdd\\x94\\x97\\xf5\\x4f\\xa0\\xb1\\x58\\x6c\\xd4\\xe9\\x9e\\x16\\x2f\\x74\\\n\\x60\\x31\\xc8\\x61\\x34\\x1a\\xd3\\x78\\xfb\\x1d\\xe3\\x7c\\x13\\x9d\\x4e\\x17\\\n\\x33\\x66\\xcc\\xc4\\xed\\x1e\\x7b\\x4e\\xb7\\xf6\\xcc\\x67\\xc8\\xb8\\x8f\\xd8\\\n\\xfe\\xf3\\xca\\x2d\\xb5\\xa3\\x16\\x56\\x9f\\xe4\\xe6\\x3f\\x9f\\xc5\\xc7\\x5b\\\n\\x66\\x0c\\x23\\xae\\xd6\\x1b\\xd6\\x0e\\xab\\xea\\x6b\\xe8\\x4e\\xcc\\xcc\\xbe\\\n\\xdf\\xc4\\xd7\\x50\\x99\\xbc\\x89\\xf6\\x96\\x75\\x63\\x4a\\x5a\\x5f\\x5d\\x69\\\n\\x65\\xc1\\x9e\\xf6\\xac\\x5f\\xed\\x01\\xe3\\x2c\\x05\\x79\\xbe\\xa9\\x15\\xdd\\\n\\xfb\\x47\\x57\\x97\\x52\\x54\\x60\\x6c\\x99\\x1f\\x79\\xa2\\x87\\xd7\\xde\\x0a\\\n\\x23\\xd8\\x35\\x2a\\xcb\\x2d\\x7c\\xfb\\x1b\\x45\\xfc\\xfb\\xa9\\x39\\xbc\\xf3\\\n\\x9f\\x79\\x9c\\xff\\xb5\\x82\\x71\\x73\\x8e\\x5f\\xb5\\x26\\x3e\\xa1\\x81\\x6f\\\n\\x27\\xed\\xe9\\xd0\\x75\\x5d\\xf8\\x5c\\x4d\\x65\\xd4\\x30\\x7a\\xef\\x2b\\x48\\\n\\xfe\\xc3\\x40\\xb6\\x0f\\x2d\\xa0\\x53\\x3a\\xaf\\xbd\\x15\\xe6\\xb5\\xb7\\xc2\\\n\\x48\\x12\\x94\\x97\\x5a\\x28\\x29\\x36\\xe3\\xf7\\x29\\x78\\xbd\\x0a\\x16\\xb3\\\n\\x44\\xa0\\x33\\x4d\\x7b\\x47\\x9a\\xb6\\x8e\\x0c\\x3d\\xbd\\x19\\x06\\x33\\x50\\\n\\x99\\x4c\\x0a\\x4e\\xa7\\x73\\xc8\\xb8\\x68\\x8b\\x16\\x48\\xd8\\x46\\x30\\xa4\\\n\\xb5\\x66\\x0e\\xa7\\xd4\\x6f\\xc6\\xdd\\x7b\\xf7\\xf6\\xdf\\x15\\x7a\\xfb\\xf8\\\n\\xca\\xe1\\x2f\\xf3\\x87\\x97\\x8e\\x42\\xd3\\x76\\xed\\xa1\\x56\\x92\\x6b\\xb1\\\n\\x5b\\x15\\x22\\xe1\\x72\\xdc\\x6e\\x17\\xd2\\xa7\\x2c\\x58\\x7b\\xcc\\xb5\\x53\\\n\\x51\\x51\\xcc\\x96\\x2d\\x75\\xa4\\xd3\\x69\\x02\\x81\\x00\\xb5\\xb5\\xd9\\x47\\\n\\xb1\\xb4\\x5a\\x65\\x16\\x2f\\x74\\xf0\\xce\\x0a\\x63\\x62\\xc2\\xbd\\xf0\\x52\\\n\\x88\\x83\\x0f\\x34\\x2e\\x22\\xb3\\xa2\\x28\\x54\\x54\\x54\\xd0\\xd3\\xd3\\x33\\\n\\xe6\\xc4\\xc5\\x4d\\xd2\\x79\\xd4\\x98\\xd7\\xa0\\xa7\\xda\\xb9\\xec\\xb7\\x17\\\n\\xec\\xb2\\xb0\\x82\\xfe\\x08\\xfb\\xaf\\x7e\\xbc\\x90\\x85\\xb5\\x83\\x6f\\x07\\\n\\xcd\\x28\\x6d\\xa3\\xc0\\xd3\\x47\\x57\\xc8\\x6b\\xc0\\x78\\x06\\x7f\\x5b\\xf3\\\n\\x23\\xbe\\x79\\xc0\\x8d\\x48\\xc9\\x4d\\x59\\x0a\\xac\\x75\\x54\\x6b\\x37\\xd0\\\n\\xd8\\x76\\x3d\\x9a\\x36\\x77\\xdc\\xa2\\xe3\\x6f\\x23\\x12\\x51\\x0d\\xdb\\x86\\\n\\xf1\\xb8\\xe5\\x29\\x97\\x9f\\xce\\xe7\\x35\\x71\\xdb\\x8d\\xe5\\x7c\\xe3\\x22\\\n\\x63\\x43\\xf6\\x5c\\x76\\x75\\x33\\xaf\\x3d\\x3f\\x67\\xd2\\xeb\\xa7\\xaa\\x3a\\\n\\xcf\\x3c\\x1f\\xe4\\xf5\\xb7\\x23\\xb4\\xb6\\xa5\\x07\\x1d\\x47\\x1d\\x0e\\x99\\\n\\xaa\\x0a\\x0b\\x8b\\x17\\xda\\x39\\xe1\\x18\\x5f\\x4e\\xdd\\xc3\\xda\\x6a\\x2b\\\n\\xb7\\x5c\\x5b\\xce\\x45\\xdf\\x2c\\xe2\\xae\\x5f\\xb4\\xf3\\x87\\x47\\x7a\\x0c\\\n\\x6e\\x1f\\x68\\x69\\x4b\\x53\\x55\\x61\\x99\\xde\\xe2\\xca\\x08\\x67\\xd8\\x01\\\n\\x15\\x11\\x3e\\x57\\x13\\x8f\\x16\\xcd\\x4a\\x60\\x7d\\x72\\x02\\x6a\\x6e\\x4d\\\n\\xed\\x72\\x94\\x63\\xb3\\xd9\\x8c\\xdd\\x6e\\xdb\\x29\\x36\\x9a\\xcb\\x05\\xfb\\\n\\x2c\\xc9\\xce\\x08\\xdb\\x96\\xf9\\x2c\\x5a\\x9e\\x19\\x6f\\xcf\\x5d\\x40\\xbf\\\n\\xa5\\x69\\xaf\\xea\\x7a\\xce\\xf8\\xec\\x6b\\x3c\\xfa\\xfa\\xa1\\xec\\x6a\\x48\\\n\\x2f\\x53\\x72\\x15\\x36\\x8b\\x4e\\x24\\x52\\x81\\xcb\\x35\\x50\\x60\\xcd\\x9b\\\n\\x6d\\x45\\x51\\x14\\x2a\\x2b\\xab\\xa8\\xaf\\xdf\\x42\\x22\\x91\\x20\\x1c\\x0e\\\n\\x8d\\xca\\xda\\xb3\\xdf\\x32\\xa7\\x81\\xe2\\xaa\\x8f\\xdb\\x6e\\x28\\x37\\xbc\\\n\\x3b\\xe4\\xe5\\xe5\\x61\\xb3\\x59\\x69\\x6e\\x6e\\xde\\xe5\\xa0\\x99\\x69\\xdd\\\n\\x4e\\xa7\\xeb\\x32\\x9e\\x7f\\xec\\x5f\\xac\\xdc\\x52\\x3b\\xe6\\x32\\xad\\xd8\\\n\\x30\\x77\\xd8\\xf7\\xf7\\x99\\xbb\\x9e\\xe7\\x97\\xef\\x6b\\x48\\xfd\\xdf\\x5c\\\n\\x6e\\xe5\\xa8\\x43\\x6f\\xa4\\x5a\\xbe\\x1d\\x39\\xbe\\x3a\\xab\\xbf\\x91\\x92\\\n\\x9b\\xa8\\xe2\\x06\\x1a\\xdb\\x6f\\x44\\xd3\\xe6\\xe0\\xf7\\xfb\\xc7\\xed\\x71\\\n\\x5d\\xbf\\xc9\\xb8\\x9d\\x82\\xfc\\xfc\\xa9\\x99\\x93\\xee\\xe4\\xe3\\x7c\\x1c\\\n\\x77\\x54\\x2f\\xcf\\xff\\xdb\\xb8\\x1c\\xb4\\x8d\\xcd\\x29\\x6e\\xfb\\x69\\x3b\\\n\\xe7\\x9e\\x99\\x3f\\x69\\xf5\\xda\\xb0\\x29\\xc1\\xd9\\x17\\xd4\\x53\\x57\\x9f\\\n\\xfd\\xbc\\x5a\\x5a\\xd2\\xc6\\x6d\\xd7\\x97\\x73\\xc2\\x31\\xb9\\xe5\\x94\\x5f\\\n\\x52\\x6c\\xe6\\xae\\x5b\\x2a\\x99\\x3b\\xdb\\xc6\\x35\\x37\\x19\\x1b\\x65\\xbd\\\n\\xa1\\x31\\x39\\x61\\xe2\\x6a\\xd2\\xb6\\x05\\x8d\\xf4\\xb7\\x02\\x30\\x0b\\xcb\\\n\\xd5\\xa4\\x0a\\xac\\x6c\\xb6\\x08\\x8d\\xc0\\x6a\\xb5\\x61\\xb1\\xec\\x78\\x38\\\n\\x14\\x19\\x4e\\x39\\x4e\\xc6\\x3e\\x0a\\x03\\x47\\x47\\x7a\\x7f\\x82\\xfe\\xab\\\n\\x81\\x1d\\x8e\\xa8\\xcb\\xe6\\x6c\\xe0\\xdc\\xa3\\x5e\\xc4\\x69\\xdb\\xf5\\x7e\\\n\\x69\\x4e\\xad\\xc6\\xaa\\x35\\x12\\x89\\x44\\xd0\\x75\\x6d\\xab\\x55\\x47\\x62\\\n\\xd6\\x4c\\xdb\\xd6\\xb2\\x5b\\x29\\x2f\\xef\\x17\\x35\\x81\\x40\\xe7\\xa8\\x82\\\n\\xb3\\x1a\\xe9\\x77\\xd5\\xdc\\x9a\\xe6\\x7f\\xcb\\xc7\\x27\\x6c\\x89\\xc3\\xe1\\\n\\xa4\\xb6\\x76\\xc6\\x98\\x62\\x62\\x35\\xf6\\xce\\xe0\\xc7\\x8f\\x9f\\x6d\\x48\\\n\\x79\\xea\\x3b\\x86\\x8f\\xd2\\x6d\\xe4\\xd6\\xe0\\x3b\\xef\\x69\\x84\\xe3\\x0e\\\n\\xb6\\x98\\xae\\x45\\x73\\x2c\\xc9\\xfa\\xef\\xa4\\xe4\\x16\\xaa\\xe2\\xd7\\xd1\\\n\\x1b\\x58\\x4f\\x77\\xf7\\xf8\\xb9\\x37\\x0c\\x17\\x97\\x6d\\xb4\\x2c\\xdd\\xdb\\\n\\x31\\x65\\x87\\xac\\x3b\\x7e\\x54\\x81\\xdb\\x6d\\xec\\xd4\\xf7\\xe0\\xc3\\x5d\\\n\\x2c\\x7f\\x7f\\x72\\x4e\\x70\\x06\\xba\\xd2\\x7c\\xf9\\xbc\\xba\\x51\\x09\\x2b\\\n\\xe8\\xcf\\xc3\\xf7\\xf5\\x8b\\xea\\x0d\\xf5\\x43\\x33\\x92\\x6f\\x9e\\x53\\xc8\\\n\\xe5\\xdf\\x33\\x36\\xca\\x7e\\x63\\xf3\\xc4\\x85\\x13\\x9a\\x34\\x71\\x65\\xe4\\\n\\x96\\x20\\xe8\\x98\\x84\\xcf\\xd5\\x6e\\x23\\xb0\\x1c\\x0e\\x07\\x66\\x53\\xff\\\n\\x69\\xc5\\xc3\\x3e\\x2b\\x53\\x56\\x32\\x7a\\xd3\\x76\\x20\\xb3\\x84\\x1e\\xff\\\n\\x75\\x03\\x4e\\x3d\\xce\\xaf\\x6e\\xe0\\xd2\\xcf\\x3f\\xc1\\x5e\\x35\\xf5\\xbb\\\n\\x1c\\x09\\xdb\\x9c\\x5e\\x8b\\x55\\xab\\x27\\x12\\xe9\\xcf\\x99\\x59\\x53\\x65\\\n\\xc5\\x66\\xdd\\xf1\\x98\\xb9\\x5c\\x6e\\x8a\\x8a\\x8a\\x49\\xa5\\x92\\x84\\x42\\\n\\xd9\\x9f\\x00\\xdc\\x67\\xa9\\xd3\\xd0\\xe8\\xdc\\x57\\xdf\\xd4\\x3a\\x6e\\xfe\\\n\\x07\\x66\\xb3\\x99\\xea\\xea\\x9a\\x5d\\xde\\xe6\\xfa\\xcd\\xef\\x55\\x82\\x61\\\n\\x63\\x4e\\xa3\\x96\\xe7\\x77\\x8d\\x20\\xae\\xd6\\x19\\x56\\xef\\x50\\x18\\x1e\\\n\\x7f\\x5a\\x43\\xc5\\x4a\\x83\\xf9\\x12\\x30\\x15\\x64\\x2f\\xb0\\x52\\x8d\\x54\\\n\\xc5\\xaf\\x25\\xd4\\xb5\\x8e\\xce\\xce\\xc0\\xb8\\xdc\\x97\\x57\\xde\\x30\\x4e\\\n\\x50\\x1f\\x72\\xd0\\xd4\\x4d\\xf4\\x5b\\x52\\x6c\\xe6\\x86\\x2b\\xca\\x0c\\xbd\\\n\\xa6\\xae\\xc3\\x8d\\xb7\\x4f\\x4e\\x2e\\xbb\\x7b\\x7e\\x19\\xa0\\xa9\\x65\\xd7\\\n\\xb6\\x7b\\x35\\x0d\\xbe\\x7f\\x75\\x13\\x2b\\xd7\\xc4\\x73\\xf2\\x5e\\x7d\\xf1\\\n\\xf3\\xc6\\x5a\\x72\\xdb\\x3b\\x26\\x2e\\xf8\\xeb\\x24\\x8a\\x2b\\xe3\\x56\\x51\\\n\\x26\\x3d\\x88\\x44\\x86\\xdd\\x09\\x1d\\x85\\x8c\\x94\\x4f\\x4a\\xae\\x24\\x29\\\n\\x57\\x93\\x54\\x66\\x90\\x50\\x66\\x13\\x57\\xe6\\x11\\x57\\xe6\\x13\\x53\\x16\\\n\\x12\\x35\\x2d\\x22\\x66\\x5e\\x86\\xea\\x3e\\x04\\xfc\\x47\\x83\\xff\\x18\\x70\\\n\\x2f\\x03\\x6b\\x35\\xc8\\xc6\\x66\\x8d\\xdf\\x21\\xb0\\x26\\x66\\xf5\\xe6\\x72\\\n\\x3b\\x39\\xfa\\x08\\x2b\\x8b\\x17\\xee\\xba\\xe2\\xe8\\xca\\x2c\\xa4\\xcb\\x77\\\n\\xe3\\x80\\x53\\x8f\\x3e\\x67\\x94\\x73\\x8f\\xfa\\x17\\x3f\\x3c\\xfd\\x51\\x0e\\\n\\x5e\\xb0\\x92\\xd9\\xe5\\x2d\\xf8\\x5d\\x91\\x61\\x93\\x41\\xef\\x2c\\xb0\\xd6\\\n\\x63\\x51\\xb7\\x10\\x89\\x44\\x98\\x3b\\x6b\\x67\\x91\\x90\\x9f\\x9f\\x4f\\x51\\\n\\x51\\x11\\x9d\\x9d\\xd9\\x5b\\xaf\\xbc\\x1e\\x85\\x7d\\x97\\x1a\\x77\\xcf\\x56\\\n\\xad\\x89\\xf3\\x7f\\xe3\\x18\\x58\\x4f\\x96\\x65\\xca\\xca\\xca\\x29\\x2e\\x1e\\\n\\xdd\\xca\\x73\\xed\\x06\\x9d\\xe7\\xfe\\x65\\x5c\\xa2\\xe3\\xaa\\xa2\\xe1\\x85\\\n\\xca\\x82\\xda\\x2d\\x14\\x7a\\xfb\\x0c\\xfb\\xbe\\x47\\x9e\\x54\\x09\\x85\\x21\\\n\\xad\\xb9\\xe8\\x74\\xff\\x60\\x54\\x43\\xac\\x94\\x6a\\xa6\\x32\\x76\\x1d\\xd1\\\n\\x9e\\x0d\\xb4\\xb7\\xb7\\x1b\\x9a\\x76\\x6a\\xed\\xfa\\x38\\xff\\xf8\\xa7\\x71\\\n\\x41\\x53\\x0f\\x39\\x70\\xea\\x8a\\x2b\\x80\\xaf\\x7e\\x29\\x8f\\x03\\xf6\\x35\\\n\\x76\\x0c\\x0c\\xf6\\x4d\\x4e\\x58\\x8c\\x15\\xef\\x8f\\xcd\\x5d\\x40\\x55\\xfb\\\n\\x05\\xd6\\x44\\x3a\\x7b\\x67\\x4b\\x75\\xa5\\x95\\x92\\x62\\xe3\\xb6\\xa0\\x3d\\\n\\xee\\x89\\x0b\\x9b\\x31\\x69\\x1b\\xe7\\x86\\x86\\x61\\xd0\\xa6\\xcb\\x96\\xa0\\\n\\x84\\x2a\\xb9\\xc9\\x48\\x7e\\x54\\xd9\\x47\\x46\\xf2\\xa1\\x4a\\x7e\\x32\\x92\\\n\\xef\\x53\\xbf\\xf3\\xa1\\x4a\\x2e\\x20\\x7b\\x61\\x51\\x94\\x57\\x44\\x7e\\xfe\\\n\\xc0\\x95\\xb4\\xae\\xc6\\x20\\xdd\\xb9\\xf5\\xd5\\x85\\x9e\\x0a\\xf4\\xff\\x3f\\\n\\xd5\\x8e\\x1e\\xf9\\x18\\x92\\xa3\\x74\\xfc\\xd4\\xa2\\xc9\\x1b\\x37\\x6a\\x00\\\n\\x00\\x20\\x00\\x49\\x44\\x41\\x54\\xe8\\xc1\\x57\\x91\\x7c\\x87\\x82\\x3c\\x7e\\\n\\xdb\\x06\\x4e\\x87\\xcc\\xd9\\x5f\\xce\\xa7\\xa6\\x4a\\xa1\\xbe\\x7e\\xcb\\x98\\\n\\xc2\\x00\\xf4\\x64\\xf6\\x40\\xf7\\xdd\\x4c\\x61\\xdf\\x0d\\x03\\x2c\\x6f\\x85\\\n\\xde\\x3e\\x4e\\xde\\xff\\xbf\\xdb\\x7f\\xce\\xa8\\x0a\\xdd\\x61\\x37\\x2f\\x2c\\\n\\xdf\\x97\\x95\\xf5\\x35\\x23\\x5e\\xd7\\x92\\x5e\\x8f\\x8c\\x46\\xbe\\xcf\\x8a\\\n\\xaa\\xba\\x77\\x0a\\x34\\xda\\x7f\\x2f\\x24\\x7a\\x7b\\x7b\\xc9\\xcb\\xcb\\xee\\\n\\x78\\xf0\\x77\\x2f\\x28\\x34\\xcc\\xef\\x0a\\xe0\\xc7\\x3f\\x6b\\xe3\\xe0\\xcf\\\n\\xb8\\x98\\x33\\xcb\\x36\\x6e\\xf7\\x2a\\x2f\\x2f\\x1f\\x45\\x31\\xd1\\xda\\x3a\\\n\\x72\\x44\\xeb\\x64\\x0a\\x7e\\x76\\xbf\\x8a\\x91\\xa9\\x2c\\x47\\x12\\x57\\x66\\\n\\x45\\xe5\\xeb\\xc7\\xbc\\xc0\\x8f\\x1f\\xfb\\xa2\\x21\\xdf\\x17\\x8d\\xf6\\x5b\\\n\\xde\\x7e\\xf0\\x5d\\x85\\xde\\xcc\\x6c\\xec\\xfe\\x6f\\xe1\\xea\\xcd\\x3e\\xf0\\\n\\xae\\x94\\x6e\\xa5\\x22\\x76\\x2d\\x2d\\xd2\\x4d\\xb4\\xeb\\x1a\\x25\\x25\\xa5\\\n\\x48\\x63\\x34\\x59\\xa6\\xd3\\x3a\\x57\\xfd\\xa8\\xc5\\xb0\\x76\\x9d\\x3b\\xdb\\\n\\x4a\\x49\\xb1\\x99\\xa9\\x8c\\x24\\x49\\xdc\\x7d\\x5b\\x25\\x87\\x1c\\xbf\\x7e\\\n\\xd2\\x02\\x5b\\x1a\\x63\\xa4\\xd0\\x58\\xbd\\x6e\\xec\\x86\\x8a\\x8f\\x56\\xc6\\\n\\xb9\\xef\\xb7\\x01\\x2e\\xbe\\xb0\\x38\\xa7\\xea\\x17\\x89\\xa8\\x74\\x04\\x8c\\\n\\x33\\x9c\\x4c\\x64\\xe0\\xdb\\x49\\x11\\x57\\xaa\\xaa\\x92\\xc9\\x18\\x67\\x9e\\\n\\x33\\xeb\\x53\\xcb\\x99\\x3d\\x23\\xf9\\x49\\xcb\\x65\\xa4\\xb6\\xbe\\xd2\\x72\\\n\\xe9\\xd6\\x7f\\x4b\\xd0\\xc7\\xe9\\x96\\x04\\x02\\x01\\x62\\xb1\\x18\\x65\\x65\\\n\\xe5\\xdb\\x27\\x7a\\x49\\x71\\x80\\x52\\x0d\\xb6\\xea\\xad\\xd2\\xee\\x53\\xd6\\\n\\xb1\\x74\\x4f\\x7f\\x5c\\xab\\xf0\\xfb\\xe8\\x91\\xf7\\x21\\xba\\x6a\\xd0\\x20\\\n\\x8f\\x03\\x6f\\xee\\xf8\\x09\\x2c\\x93\\x49\\x62\\x9f\\xc5\\x4e\\x8e\\x3c\\xcc\\\n\\x8d\\x7f\\xeb\\x31\\xf0\\xca\\xca\\x2a\\x1a\\x1a\\xea\\xc7\\x94\\x46\\xa9\\x37\\\n\\x33\\x0b\\xcd\\x73\\x2b\\xc5\\xe1\\x1b\\x86\\x8c\\x12\\x6e\\x52\\x54\\x8a\\x7c\\\n\\x7d\\xc3\\xe6\\x90\\xfb\\x34\\xb3\\xf3\\xde\\x64\\xa6\\x7d\\x25\\x8d\\x8d\\x5f\\\n\\xa2\\xa2\\xa2\\x12\\xb3\\xd9\\xbc\\x93\\x05\\x2b\\x12\\xc9\\xfe\\x18\\xf7\\x51\\\n\\x87\\x79\\x98\\x37\\xc7\\xc6\\xba\\x0d\\xc6\\x58\\x7d\\x43\\x61\\x8d\\x13\\x4e\\\n\\xdf\\xc4\\xc3\\xbf\\xae\\xe1\\x33\\xfb\\xb9\\xc6\\xad\\xbf\\x7b\\xbd\\x5e\\x24\\\n\\x09\\x5a\\x5a\\x86\\x16\\x58\\x91\\x28\\x5c\\xf9\\xa3\\x0c\\x1b\\x36\\x1b\\x3b\\\n\\xd1\\x55\\x17\\x8d\\xbc\\xc5\\x76\\xce\\x51\\xff\\xe2\\xde\\xa7\\x3f\\x47\\x3c\\\n\\x69\\x4c\\xdc\\xb6\\x67\\x5f\\xd4\\x70\\xbb\\xe0\\xc2\\xaf\\x29\\xb4\\x66\\x8e\\\n\\x60\\x86\\x67\\x33\\xa6\\xd0\\x0b\\xa3\\x10\\x58\\xed\\x54\\x44\\xae\\xa1\\x85\\\n\\x9b\\x69\\x47\\xa2\\xb4\\xb4\\x74\\x4c\\xe5\\xb9\\xfc\\xda\\x66\\xde\\x7e\\xc7\\\n\\x38\\x51\\x7e\\xf0\\x14\\xb7\\x5a\\x6d\\x63\\x46\\xad\\x95\\x1f\\x5c\\x5c\\xc2\\\n\\x2d\\x3f\\x69\\x9b\\xb2\\x75\\xd0\\x81\\x4c\\xc6\\x98\\x67\\xe6\\x8e\\xbb\\xdb\\\n\\x39\\xec\\x20\\x37\\x0b\\xf7\\xca\\x1d\\x7f\\xba\\x0f\\x3e\\x8e\\x19\\xba\\xd8\\\n\\x2a\\xc8\\x9f\\xe6\\xe2\\xca\\x58\\x7f\\xab\\xdc\\x3c\\x29\\xa8\\x49\\x76\\x52\\\n\\x72\\x25\\x29\\xb9\\x74\\xa0\\x90\\x92\\x4a\\xd1\\x24\\xdb\\xa4\\x94\\x29\\x12\\\n\\x89\\xb0\\x65\\x4b\\x1d\\xe5\\xe5\\x15\\xd8\\xed\\x23\\x9f\\xee\\x93\\xcc\\x79\\\n\\xe0\\x3f\\x02\\xc9\\xdf\\x1f\\x7b\\x48\\xd7\\x52\\x10\\x5d\\x8d\\xe4\\xec\\x86\\\n\\x54\\x1b\\x7a\\xba\\x73\\x44\\x81\\xe5\\xcf\\xf7\\x70\\xec\\x11\\x1e\\x36\\x6c\\\n\\x4a\\xb0\\x7e\\x63\\x92\\x48\\x74\\xf4\\xa6\\x73\\xb7\\x4b\\x61\\xef\\x05\\x76\\\n\\x0e\\xfb\\xec\\x0e\\x51\\xb5\\x0d\\x9b\\xcd\\x46\\x45\\x45\\x25\\x4d\\x4d\\x8d\\\n\\x63\\xda\\x46\\xe9\\x53\\x6b\\xc8\\xb8\\xef\\xa4\\x2c\\x7a\\x33\\x52\\x7a\\x70\\\n\\xdf\\x89\\xfa\\xf6\\x12\\x7a\\xc2\\xd9\\x4f\\x2c\\x4b\\x66\\x6f\\xc0\\x19\\x5a\\\n\\x8b\\xec\\xd5\\xa9\\xaf\\x3f\\x9d\\xca\\xca\\xaa\\x9d\\x1c\\xbd\\x5d\\xae\\xec\\\n\\xaf\\x27\\x49\\x12\\xdf\\xbd\\xa0\\x88\\xef\\x5c\\xd6\\x68\\x58\\x9f\\xe8\\x0b\\\n\\xa9\\x9c\\x71\\x6e\\x1d\\x77\\xde\\x54\\xc1\\x97\\x4f\\xf3\\x8f\\xd9\\x4a\\x32\\\n\\x14\\x1e\\x8f\\x17\\x90\\x68\\x69\\x69\\xde\\xe9\\xbd\\xae\\x1e\\x9d\\x1f\\x5c\\\n\\xaf\\x52\\x57\\x6f\\xbc\\x05\\x21\\x9b\\x04\\xdd\\x3e\\x57\\x84\\x2f\\x1f\\xfa\\\n\\x0a\\xbf\\x7b\\xf1\\x58\\xc3\\xbe\\xf7\\x91\\xbf\\x69\\xe8\\x3a\\x9c\\x7f\\x8e\\\n\\x42\\xbd\\xe9\\x6b\\xcc\\xb0\\xd7\\x23\\xc7\\x47\\xe1\\xdf\\x95\\xe9\\xa4\\x7c\\\n\\x9b\\xc0\\x92\\x24\\x4a\\x4a\\x46\\x1f\\xe8\\xb6\\xab\\x3b\\xc3\\x15\\xd7\\x37\\\n\\xf3\\xcc\\x0b\\x7d\\x86\\xb6\\xe9\\xe1\\x07\\x4f\\x0f\\x71\\x05\\xf0\\xed\\x6f\\\n\\x14\\xf2\\xd4\\x73\\x41\\x56\\xe5\\xa8\\xcf\\xd1\\x48\\xd8\\xac\\x32\\x15\\x65\\\n\\xe6\\x5d\\xf6\\xb9\\x1a\\xd0\\xe5\\x32\\x70\\xfe\\xc5\\x8d\\xfc\\xe5\\xa1\\x5a\\\n\\x66\\xd4\\x4c\\x7e\\x82\\xf0\\x78\\x42\\xe3\\xd6\\xbb\\xda\\x0d\\xbd\\x66\\xfe\\\n\\xf4\\x17\\x57\\x09\\x43\\xaf\\x37\\xd9\\x27\\x05\\xd3\\x72\\x11\\x49\\xb9\\xa6\\\n\\xff\\xa5\\xd4\\x92\\x94\\x6b\\x48\\xcb\\x45\\x8c\\x66\\xdb\\x6e\\xc2\\xca\\x9a\\\n\\x4e\\xd3\\xd0\\x50\\x4f\\x71\\x71\\x31\\x7e\\xff\\xe8\\xa2\\xd5\\x4a\\xb2\\x05\\\n\\xdc\\x8b\\xc1\\xd1\\x04\\x8e\\xb9\\x48\\xea\\xff\\xb7\\x77\\xe7\\xf1\\x91\\xdc\\\n\\xf5\\x9d\\xff\\x5f\\x75\\x57\\x57\\xf5\\xdd\\xad\\x63\\x24\\x8d\\x46\\x33\\x3e\\\n\\xc6\\x36\\xc6\\x27\\xc6\\x36\\xa7\\xc1\\x80\\x1d\\x03\\xce\\x8f\\x23\\xfc\\x00\\\n\\x87\\x1c\\xbb\\x90\\xec\\x26\\x9b\\x83\\xdc\\x09\\x21\\x21\\x9b\\x84\\x98\\x3c\\\n\\xb8\\x02\\x04\\x72\\xb0\\x6c\\x80\\x40\\x42\\x12\\x08\\x9b\\xc4\\x21\\x1c\\x5e\\\n\\x02\\xb6\\xb1\\x31\\x60\\x8c\\x31\\xf8\\x9c\\x4b\\xd2\\xe8\\x1c\\x49\\x7d\\x77\\\n\\x75\\x75\\x1d\\xfb\\x47\\x4b\\xe3\\x19\\xcf\\x25\\xcd\\xb4\\xee\\xcf\\xf3\\xf1\\\n\\xd0\\x43\\x63\\x79\\x46\\x5d\\xf5\\xad\\xea\\xae\\x77\\x7d\\xbf\\xdf\\xfa\\x7c\\\n\\x1b\\xe0\\x1d\\x24\\x6a\\x8d\\xa2\\x3c\\xbd\\xc7\\x67\\x31\\x60\\x19\\xc5\\x17\\\n\\x73\\xcd\\x55\\x3b\\xb8\\xe6\\x2a\\x97\\x38\\x86\\x89\\x49\\x9f\\x03\\x87\\x5a\\\n\\x94\\x2b\\x21\\x95\\x6a\\x44\\xb5\\x16\\x52\\xa9\\x84\\x54\\x6b\\x11\\xba\\xae\\\n\\xe0\\x24\\x14\\x1c\\x47\\x25\\xe9\\x6a\\xec\\xda\\x69\\x72\\xe1\\xf9\\xf6\\x19\\\n\\x87\\x20\\x5c\\xd7\\x65\\x68\\x68\\x27\\xe3\\xe3\\x63\\xe7\\x14\\xb0\\xea\\x61\\\n\\x1f\\x87\\x9c\\xdb\\x19\\xf6\\xdf\\x75\\xd2\\x47\\xe9\\xef\\xf9\\xc1\\x25\\xcb\\\n\\x7f\\x63\\xa9\\x11\\x97\\xef\\xe9\\xd4\\x57\\x4a\\x94\\x3f\\xc9\\x60\\xc6\\xe7\\\n\\xe0\\xc1\\xd7\\x33\\x38\\x38\\x44\\x2a\\x75\\xf6\\x17\\xa7\\x57\\xbd\\x22\\xcb\\\n\\x9f\\xbc\\x67\\x92\\xf1\\x2e\\x2e\\x1b\\xe1\\xfb\\x31\\xbf\\xfc\\x5b\\x63\\x7c\\\n\\xf0\\x2f\\x67\\xf8\\xb9\\x37\\xf7\\xf0\\xba\\x57\\xe5\\xb0\\xac\\xee\\x4f\\xc7\\\n\\x4c\\xa7\\xd3\\x28\\xca\\x10\\xe3\\xe3\\x9d\\x80\\xd5\\xf2\\xe1\\x8e\\x2f\\x45\\\n\\x7c\\xea\\x1f\\x22\\x8e\\xcc\\x77\\x3f\\x58\\x5d\\xbe\\x67\\x3f\\x17\\xed\\x1c\\\n\\x5b\\xd6\\xdf\\xfd\\x99\\x5b\\xfe\\x9d\\x8f\\x7f\\xf9\\x65\\x84\\x51\\xf7\\xf6\\\n\\xfb\\xef\\x3f\\x17\\x71\\xf7\\x7d\\x31\\x6f\\x7e\\x93\\x86\\xf1\\x82\\x5f\\x67\\\n\\x57\\xfb\\xd7\\x20\\x58\\x58\\xc1\\xd5\\x6e\\x8e\\xc1\\xda\\xdb\\x98\\xe0\\x0f\\\n\\x99\\x56\\x94\\x65\\xcf\\x5f\\xab\\xd5\\x42\\xfe\\xf1\\xff\\x2c\\xf0\\xa7\\xef\\\n\\x9f\\x62\\x6e\\xbe\\xbb\\xf3\\x80\\x2e\\xd9\\x6b\\x6f\\xa9\\x70\\xa5\\xeb\\x0a\\\n\\xef\\xff\\x93\\x21\\x5e\\xf6\\xaa\\x27\\x88\\xa2\\xcd\\xb9\\x0f\\xe7\\xef\\xb1\\\n\\xbb\\x12\\xae\\x00\\xf6\\x1f\\x6c\\xf1\\xa2\\x97\\x3f\\xc6\\xef\\xfe\\xfa\\x0e\\\n\\xde\\xfc\\x93\\xc5\\x55\\xbb\\xd9\\x3a\\xf3\\x67\\x52\\xc4\\xcf\\xfd\\xca\\x68\\\n\\x57\\xd7\\xd0\\xb4\\x2d\\x85\\xf3\\x76\\xaf\\x5d\\x68\\x94\\x9e\\xab\\x15\\x88\\\n\\x31\\x69\\x69\\xc3\\xc7\\x04\\xa9\\xce\\xf7\\x48\\xd9\\x5c\\x8f\\x25\\xc7\\x71\\\n\\xcc\\xd4\\xd4\\x14\\x8d\\x46\\x83\\x1d\\x3b\\x06\\x4e\\xba\\x6c\\xcb\\xb2\\x68\\\n\\x0e\\xb8\\x97\\xa0\\xba\\x97\\x40\\xb0\\x40\\xec\\x1d\\x04\\x6f\\x0c\\xe2\\xd6\\\n\\x53\\x01\\xeb\\xc8\\xe7\\x89\\x5b\\xb7\\xa1\\x58\\x03\\x9d\\x22\\xa2\\x03\\x26\\\n\\x83\\x03\\xdd\\xaf\\x33\\x92\\x4c\\x26\\x19\\x1c\\x1c\\x62\\x7c\\x7c\\xec\\xdc\\\n\\xde\\xd4\\x51\\x92\\xfd\\xc6\\xef\\x31\\xa2\\xff\\x05\\x7a\\xf5\\xab\\x47\\x7f\\\n\\xfe\\xc3\\x43\\xbb\\x78\\x70\\xff\\xf2\\x2b\\x70\\x5f\\xbc\\xeb\\x10\\x8e\\xf5\\\n\\xd4\\x79\\x6e\\x95\\x3f\\xc3\\x88\\x3b\\xc9\\xa1\\xb1\\xff\\x4e\\xb1\\x6f\\x98\\\n\\x42\\xe1\\xec\\x6a\\xe2\\xe8\\xba\\xc2\\x7f\\x7f\\x73\\x4f\\xd7\\xeb\\xbf\\x00\\\n\\xec\\x3b\\xd0\\xe2\\x57\\xdf\\x36\\xce\\xed\\xef\\x9d\\xe2\\xc5\\x2f\\x4c\\x71\\\n\\xf9\\x33\\x1d\\xae\\xbc\\x2c\\xc1\\x33\\x2e\\x4e\\x1c\\xf7\\xc4\\xe3\\xb9\\x70\\\n\\xdd\\x14\\x8a\\xd6\\xcf\\x27\\xfe\\x6e\\x82\\x7f\\xfa\\x3f\\x21\\xa5\\xf2\\xea\\\n\\x9d\\xe7\\xff\\xf5\\xa6\\x2f\\x2c\\xfb\\xef\\xee\\xea\\x9d\\xe6\\x47\\xae\\xb9\\\n\\x9f\\x7f\\xfb\\xe6\\x75\\x5d\\xdd\\x86\\xf1\\x89\\x98\\x77\\xbc\\x2b\\xe4\\x93\\\n\\x9f\\x49\\xf1\\xa2\\x6b\\xdf\\xc5\\x8d\\xe7\\x7d\\x98\\x6b\\x2e\\x78\\x14\\xd7\\\n\\x5e\\xe6\\x0d\\x66\\xb0\\xc0\\x40\\xf5\\x6d\\x4c\\xf1\\x87\\xcc\\x28\\x57\\xd0\\\n\\xdb\\xdb\\x7b\\xd2\\xf7\\xf3\\x81\\x43\\x3e\\xdf\\xff\\x41\\x93\\xaf\\xde\\x55\\\n\\xe5\\xf3\\xff\\x56\\x5a\\xd6\\x6a\\x08\\x67\\xe3\\xb7\\x7e\\xa5\\x7f\\xdd\\x2e\\\n\\xb8\\xab\\xe5\\xb2\\x4b\\x1d\\x7e\\xee\\xcd\\x3d\\x7c\\xe8\\xaf\\x36\\xe7\\xdc\\\n\\xdd\\xf3\\xcf\\xb3\\xf8\\xea\\x5d\\xdd\\xab\\x12\\xdf\\xf4\\x62\\xde\\xf6\\x87\\\n\\x13\\x7c\\xfc\\xef\\xe6\\x78\\xc5\\xcd\\x59\\x5e\\xfe\\xb2\\x34\\xcf\\x7c\\xc6\\\n\\xda\\x5c\\xe3\\x0e\\x8d\\xb5\\xf8\\xc4\\xdf\\xcd\\xf1\\xe9\\x7f\\x9c\\xef\\xfa\\\n\\x8d\\xc1\\x73\\xaf\\x4f\\x76\\xed\\x73\\x6c\\xc3\\x86\\x2b\\xdf\\xef\\x6e\\xad\\\n\\x09\\x7d\\x95\\xe6\\x5c\\xf9\\xea\\x00\\x9e\\xb6\\x97\\xa6\\xb6\\x17\\x4f\\xbb\\\n\\x90\\x96\\x3a\\xcc\\x3a\\xaf\\x18\\xd4\\x55\\x95\\x4a\\x05\\xcf\\xf3\\x18\\x1a\\\n\\xda\\x89\\x65\\x9d\\x63\\xa2\\xd7\\x73\\x28\\xc9\\x1c\\x24\\xaf\\x00\\xef\\x10\\\n\\x71\\xe3\\x87\\x10\\xd6\\x21\\xac\\x12\\x3d\\xf2\\x26\\xd4\\x8b\\x3f\\x89\\x62\\\n\\x0d\\xac\\xea\\xfe\\xa4\\x52\\x29\\x06\\x07\\x87\\x4e\\x3a\\xf4\\xb4\\x12\\x51\\\n\\x6c\\xb0\\x9f\\xff\\xc1\\xae\\x4c\\x1f\\x56\\xf9\\xef\\x99\\xaf\\xa6\\xf8\\xa7\\\n\\xbb\\x9f\\xbf\\xa2\\xdf\\x71\\xf5\\x05\\x4f\\x9c\\xf0\\x33\\xa3\\xfe\\x75\\x76\\\n\\xdb\\x33\\x8c\\xce\\xfc\\x3a\\xbe\\xbf\\xfb\\xac\\x27\\x2b\\xdf\\xf6\\xba\\x02\\\n\\x7f\\xf6\\x91\\x19\\x66\\x66\\x57\\xe7\\x09\\xd9\\xd9\\xb9\\x80\\xcf\\x7c\\x6e\\\n\\x81\\xcf\\x7c\\x6e\\x61\\x31\\xd0\\x75\\x96\\xa9\\x48\\x26\\x35\\x52\\x49\\x95\\\n\\xd4\\xe2\\x77\\xc7\\x59\\xde\\x7b\\x21\\x0c\\x61\\x62\\xb2\\xcd\\xc1\\xb1\\x16\\\n\\xe3\\x87\\xdb\\xb4\\xdb\\xab\\x3f\\x81\\xb8\\x90\\xae\\xf0\\xa3\\xd7\\xdf\\xbb\\\n\\xa2\\x7f\\xf3\\xf3\\xaf\\xfc\\x17\\xee\\xb8\\xff\\x5a\\xe2\\xb8\\xfb\\xe1\\x61\\\n\\xdf\\xc1\\x98\\x7d\\x07\\x33\\x7c\\x94\\xdf\\x46\\xd7\\x42\\x86\\x7b\\x67\\xc8\\\n\\xba\\x75\\x32\\x6e\\x8d\\xac\\x5b\\x27\\x99\\x38\\xfd\\xb0\\x54\\xac\\x3e\\x46\\\n\\xd3\\xc8\\xa0\\x9a\\x65\\x54\\xd5\\xa2\\x52\\xed\\xf4\\xf6\\x56\\x6b\\x21\\xfb\\\n\\x0f\\xb6\\xa8\\x56\\x57\\xbf\\xdb\\xe5\\xaa\\xcb\\x1d\\x6e\\x7e\\x49\\x86\\xad\\\n\\xe8\\xd7\\x7f\\xa9\\x9f\\x3b\\xbe\\x58\\xe6\\xc0\\x21\\x7f\\xd3\\x6d\\xfb\\x2d\\\n\\x2f\\xcd\\xf0\\xd7\\x7f\\xd3\\xfd\\x6b\\xe0\\xe3\\x4f\\xb6\\x78\\xef\\x87\\xa6\\\n\\x79\\xef\\x87\\xa6\\x29\\xe4\\x35\\xfa\\x7b\\x0d\\x0a\\x79\\x9d\\x62\\x51\\x27\\\n\\xe9\\x76\\xe7\\x3a\\xd8\\x6c\\xc6\\x4c\\xcf\\xb4\\x99\\x9e\\x6d\\x33\\x35\\x1d\\\n\\xac\\xea\\x42\\xe4\\x2f\\xb9\\x21\\xbd\\xa6\\xc7\\x65\\x5d\\xc2\\x55\\xbb\\xdd\\\n\\xdd\\x5a\\x13\\x46\\x17\\x9e\\x16\\x8c\\x94\\x04\\x9e\\x7a\\x01\\x9e\\x76\\xe1\\\n\\xd1\\x30\\x15\\x2a\\x29\\xb6\\x3a\\xdf\\xf7\\x39\\x70\\x60\\x3f\\x03\\x03\\x03\\\n\\x8b\\xf3\\x62\\xce\\x95\\x02\\xf6\\x08\\x8a\\xbd\\x0b\\x9a\\x07\\x40\\xbd\\x1f\\\n\\xfc\\xc3\\x6b\\x16\\xb0\\xd2\\xe9\\x34\\x30\\x78\\xda\\xc9\\xd3\\x47\\x2f\\xfa\\\n\\x11\\xcc\\xcf\\xc7\\x68\\x9a\\x42\\x2a\\x09\\xc7\\xcf\\x37\\x57\\x38\\x18\\xbe\\\n\\x8e\\xd9\\xa9\\xf3\\xf8\\x8f\\xff\\x98\\xc0\\x6b\\x2f\\xff\\xe9\\x28\\xd7\\x6e\\\n\\x71\\xd1\\xce\\x93\\xcf\\x8b\\xd2\\xbc\\x47\\x19\\x09\\xde\\xc6\\x38\\xbf\\xc3\\\n\\xa8\\xdf\\x66\\x68\\x68\\xe8\\x84\\x27\\x09\\xcf\\xc4\\x49\\xa8\\x7c\\xf4\\x43\\\n\\xbb\\x78\\xf5\\x6d\\xfb\\x08\\xd6\\xa0\\x02\\x49\\x10\\xb0\\xe9\\x2e\\x3a\\x3f\\\n\\xfe\\xe2\\x3b\\x31\\x8d\\x95\\x7d\\xce\\x5c\\x71\\xde\\x3e\\x7e\\xf9\\x55\\x9f\\\n\\xe3\\x7d\\x9f\\x7b\\xcd\\xea\\xb6\\x67\\xa8\\xb1\\x7f\\xf2\\x6c\\x27\\xa9\\x37\\\n\\x16\\xbf\\xd6\\xde\\x6f\\xff\\x6a\\x3f\\x5b\\x55\\xc2\\x56\\x79\\xcf\\x1f\\xef\\\n\\xe4\\xd5\\x3f\\xbe\\x6f\\xd3\\x6d\\xfb\\x73\\xaf\\x4b\\x72\\xdd\\x35\\x2e\\xf7\\\n\\x7d\\xab\\xbe\\x6a\\xaf\\x31\\x37\\x1f\\x76\\xbd\\x27\\x69\\xad\\xdd\\xf8\\xc2\\\n\\xb5\\xbd\\x9e\\x6f\\xfa\\x70\\xa5\\xe0\\xa3\\xc5\\x2b\\x5f\\xca\\xe0\\xf8\\x5e\\\n\\xa9\\xbd\\x8b\\xbd\\x52\\x0a\\xdb\\x51\\x1c\\xc7\\x1c\\x3e\\x7c\\x98\\x76\\x3b\\\n\\x38\\xeb\\xe1\\xaa\\x93\\x86\\xac\\xc4\\x1e\\x94\\xe2\\xf9\\x28\\xbb\\x86\\x88\\\n\\x27\\x3e\\xb2\\x86\\x01\\x2b\\x43\\x1c\\xc7\\x4c\\x4c\\x9c\\x7a\\xe8\\xec\\xb1\\\n\\x27\\x63\\xbe\\xf2\\x9f\\x11\\x8d\\xe6\\xb1\\xa1\\x05\\x32\\x69\\x85\\x74\\x0a\\\n\\x1a\\x4d\\x98\\x99\\x8d\\x69\\xf9\\x57\\x60\\xab\\xbb\\xb0\\xf8\\x2e\\xb0\\xbc\\\n\\x0f\\x97\\x9b\\x9f\\xf5\\x2d\\x74\\xf5\\xd4\\x3d\\x09\\x4a\\x30\\xc5\\xce\\xfa\\\n\\x6f\\x33\\xab\\xfd\\x26\\x07\\x0f\\xb6\\xd9\\xb9\\x73\\xf8\\xb8\\xaa\\xf3\\xcb\\\n\\x71\\xdd\\xb3\\x92\\xbc\\xf3\\xf7\\x06\\xf9\\x8d\\xdf\\x3b\\x8c\\x38\\xde\\x8e\\\n\\xfc\\x1c\\x3f\\xfb\\xf2\\x3b\\xce\\xea\\xdf\\xfe\\xda\\x6b\\xff\\x91\\xef\\x3c\\\n\\x71\\x21\\x5f\\xff\\xfe\\x33\\xa5\\x21\\x8f\\xbb\\x80\\xbb\\x9b\\xbe\\xb6\\xd5\\\n\\x99\\x3c\\xef\\xfa\\x24\\xb7\\xbd\\x2e\\xcf\\xa7\\xfe\\x61\\x7e\\xd3\\x6d\\xfb\\\n\\xaf\\xff\\x62\\x1f\\xaf\\x79\\xd3\\x7e\\x39\\x51\\x4f\\xe1\\xf9\\xcf\\x49\\x32\\\n\\x32\\xbc\\xb6\\x93\\xf4\\xd7\\x7c\\x8c\\x2b\\x0c\\xc3\\xae\\x16\\xc7\\x33\\x96\\\n\\x31\\xdf\\x2a\\x52\\x12\\x34\\xb4\\xcb\\x98\\x37\\x7f\\x8c\\xc3\\x89\\xdf\\x65\\\n\\x5f\\xf2\\x13\\x1c\\x74\\x3f\\xc4\\x94\\xfd\\x0b\\x94\\x8d\\x97\\xd1\\x52\\x77\\\n\\x6d\\xdb\\x60\\x75\\xac\\x99\\x99\\x69\\x66\\x66\\xa6\\xbb\\xfb\\x4b\\x15\\x0d\\\n\\xb5\\xef\\x0d\\xa8\\x97\\xfd\\x07\\x4a\\xf6\\x06\\xa2\\x47\\x7f\\x82\\xb8\\xb5\\\n\\xfa\\x81\\x20\\x93\\xc9\\x9e\\xf2\\x11\\xf6\\x38\\x86\\xbb\\xef\\x3b\\x3e\\x58\\\n\\x41\\x27\\x50\\x4d\\x4e\\xc7\\x3c\\xf6\\x64\\xcc\\xd8\\xe1\\x98\\xd6\\x62\\x67\\\n\\x8d\\x17\\xe5\\x68\\x98\\xd7\\xc2\\x32\\x9e\\xf2\\xbc\\x60\\xf0\\x30\\xd7\\x5d\\\n\\xfc\\xc8\\x99\\x37\\x30\\xaa\\xd3\\x53\\x7a\\x07\\xf9\\xf0\\x4b\\x1c\\x3c\\x78\\\n\\x80\\x46\\x63\\xe5\\xbd\\x11\\x3f\\x75\\x5b\\x91\\x37\\xbd\\x3e\\x8f\\x38\\xe6\\\n\\x6e\\x51\\x0b\\xf9\\xcb\\x5f\\x7a\\x3f\\xb9\\xe4\\xd9\\xcd\\x41\\x51\\x95\\x98\\\n\\x0f\\xff\\x8f\\x0f\\xd0\\x9f\\x9f\\x97\\xc6\\x5c\\x0a\\xab\\xfd\\x06\\x1f\\x79\\\n\\xef\\xae\\x6d\\xb1\\xaf\\xef\\xf8\\xed\\x01\\x7a\\x7b\\x36\\xdf\\xba\\x89\\xcf\\\n\\x7f\\x4e\\x8a\\xe7\\x5c\\xeb\\xca\\xc9\\x7a\\xb2\\xf7\\xb4\\x0a\\x7f\\xf8\\xbb\\\n\\x03\\x6b\\xff\\xba\\x6b\\xfd\\x82\\xdd\\x1e\\x12\\x3c\\xd9\\x7c\\xab\\x50\\x49\\\n\\x52\\xd3\\xaf\\x65\\xc6\\x7a\\x33\\x87\\xdc\\xf7\\xf1\\x64\\xf2\\x6f\\x19\\x77\\\n\\xde\\xc1\\x11\\xeb\\x0d\\xd4\\xf5\\xab\\x16\\x0b\\x70\\x8a\\x93\\x99\\x9b\\x9b\\\n\\x63\\x62\\x62\\xa2\\xab\\x01\\xb8\\x93\\xb1\\x1c\\xd4\\x91\\xb7\\xa3\\xee\\xb9\\\n\\x9d\\xe8\\xc0\\xdb\\xd7\\x24\\x60\\x65\\xb3\\xb9\\x93\\x3e\\xc2\\x1e\\x86\\x30\\\n\\xbf\\xb0\\xc2\\xf3\\x36\\x76\\xa9\\x1b\\xd7\\x12\\x6b\\xa7\\x1e\\x3a\\xb5\\x8d\\\n\\x36\\xaf\\x7b\\xc1\\xd7\\x50\\x58\\x6e\\xdb\\x45\\xa4\\x4b\\x1f\\x60\\x28\\xfe\\\n\\x5b\\x46\\x47\\x0f\\x52\\x2e\\xaf\\xbc\\x82\\xf6\\x9f\\xfc\\xfe\\x20\\xcf\\xbe\\\n\\xda\\x91\\x13\\x77\\xd1\\xdb\\xde\\xf0\\x69\\xae\\xb9\\xf0\\xf1\\x73\\xfa\\x1d\\\n\\x85\\x74\\x85\\xbf\\xfa\\xc5\\xf7\\xa3\\x6b\\xe1\\xb6\\x6f\\xcf\\x64\\x52\\xe5\\\n\\xef\\x3e\\xb6\\x7b\\xd3\\x17\\x0d\\x5d\\xf6\\x4d\\x59\\x5a\\xe3\\x5d\\x7f\\x30\\\n\\xb4\\x29\\xb7\\xfd\\x2f\\xff\\x6c\\x17\\x83\\x03\\x86\\x7c\\x08\\x3c\\xcd\\x9b\\\n\\x5e\\x5f\\xe0\\x92\\xbd\\x89\\x35\\x7f\\xdd\\x4d\\x1f\\xae\\x8c\\x68\\x96\\x48\\\n\\xb1\\xa9\\xeb\\x57\\x31\\x6b\\xfd\\x24\\x87\\x9c\\x77\\xb3\\x2f\\xf9\\x71\\x26\\\n\\x12\\xbf\\x49\\xc9\\xbc\\x45\\x7a\\xa5\\xce\\x42\\xb9\\x5c\\x62\\x7c\\x7c\\xfc\\\n\\x9c\\x0a\\x73\\x9e\\x32\\x64\\xa5\\x9e\\x85\\x7a\\xe1\\x87\\x89\\x17\\xee\\x24\\\n\\x6e\\xad\\xfe\\x5a\\x5c\\xb9\\x5c\\x7e\\xc5\\x4b\\xb0\\x9c\\x4a\\x10\\x9b\\xd4\\\n\\xd4\\xab\\x88\\xf4\\x93\\xcf\\x3d\\x79\\xf9\\xb5\\xf7\\x91\\x4b\\xae\\x7c\\xfd\\\n\\x36\\xab\\xfc\\x8f\\xec\\x89\\xde\\xcb\\xcc\\xe4\\x41\\x66\\x66\\x66\\x56\\x14\\\n\\x6c\\x4d\\x53\\xe5\\x63\\x1f\\x1e\\x61\\x47\\xbf\\x7c\\xa8\\xde\\xfc\\xac\\x6f\\\n\\xf1\\xdf\\x5e\\xfe\\x6f\\x5d\\xf9\\x5d\\xd7\\xec\\x7d\\x8c\\xb7\\xbf\\xf1\\x53\\\n\\xdb\\xba\\x3d\\x35\\x0d\\x3e\\xf6\\xe7\\x23\\xeb\\x72\\x61\\x5a\\x4f\\x2f\\xbf\\\n\\x29\\xc3\\xcb\\x6f\\xda\\x7c\\x13\\xf7\\xfb\\x7a\\x0c\\x3e\\xf5\\xd1\\xdd\\xb8\\\n\\xae\\x8a\\x58\\xbc\\xc1\\xce\\x68\\xfc\\xe6\\x2f\\xaf\\xcf\\x5c\\xc1\\x35\\xef\\\n\\xff\\xec\\x76\\xb8\\xaa\\xe9\\xd7\\x52\\x31\\x6e\\x20\\x46\\xdb\\x92\\x27\\x87\\\n\\x69\\x5a\\x58\\x96\\x89\\x69\\x5a\\x18\\x86\\x81\\xa6\\x69\\xa8\\xaa\\x7a\\xf4\\\n\\xeb\\xd8\\xff\\x56\\x14\\x85\\x28\\x8a\\x4e\\xfa\\x15\\x86\\x21\\xbe\\xef\\xe3\\\n\\xfb\\xad\\xc5\\xef\\xfe\\x69\\xc3\\x53\\xad\\x56\\x65\\x74\\x74\\x94\\x9d\\x3b\\\n\\x77\\xae\\x78\\xc2\\xf5\\x19\\x03\\x96\\x6a\\xa3\\xf4\\xff\\x04\\x71\\xed\\xfb\\\n\\xd4\\xbd\\x88\\x44\\xea\\x1c\\xca\\x41\\x2c\\x43\\x3e\\x5f\\x20\\x8e\\x63\\x66\\\n\\x66\\xce\\x7d\\x41\\xdc\\x08\\x9d\\xaa\\xf2\\x4c\\x5c\\xb3\\x80\\xee\\x3f\\x02\\\n\\x74\\xda\\x70\\xef\\xce\\x71\\xae\\x5f\\xce\\x70\\xe0\\xa9\\x2e\\x64\\xb5\\xbb\\\n\\xd9\\x6d\\x8e\\x31\\x59\\xfa\\x55\\x0e\\xfb\\x17\\xb3\\x63\\xc7\\xc0\\xb2\\xdb\\\n\\xbd\\xb7\\x68\\xf0\\xa5\\x7f\\xbe\\x80\\xff\\xf6\\xd6\\x43\\xdc\\x73\\x5f\\x9d\\\n\\xed\\xe8\\x96\\x67\\xdf\\xcf\\x07\\x7f\\xee\\x43\\x5d\\xfd\\x9d\\x3f\\x73\\xcb\\\n\\x1d\\x38\\x56\\x8b\\xdf\\xf9\\x9b\\x9f\\xa6\\x1d\\xe8\\xdb\\xae\\x4d\\xdf\\xfd\\\n\\x47\\x43\\xdc\\xf0\\xbc\\xd4\\xb6\\x3c\\x9f\\x6e\\x7f\\xc7\\x20\\x77\\x7d\\xa3\\\n\\x4a\\xa5\\xba\\xb9\\x8a\\x5f\\x5d\\xb2\\x37\\xc1\\x47\\x3f\\xb8\\x8b\\x1f\\x7f\\\n\\xcb\\x01\\xc2\\x6d\\xde\\xf1\\x9a\\x49\\x6b\\xfc\\xe3\\xc7\\xf7\\xac\\x69\\x55\\\n\\xf6\\x75\\x0d\\x57\\xdd\\x5c\\xf6\\x06\\xd8\\x12\\x43\\x7c\\xaa\\xaa\\x62\\x59\\\n\\x16\\xa6\\x69\\x2e\\x7e\\xef\\x04\\x2a\\xc3\\x30\\x57\\xfc\\xa8\\xfe\\x52\\xd0\\\n\\x5a\\x6e\\xd0\\x6d\\xb5\\x5a\\x34\\x1a\\x0d\\x1a\\x8d\\x3a\\xcd\\xe6\\xf1\\x93\\\n\\x90\\x9a\\xcd\\x06\\x87\\x0e\\x1d\\x64\\xe7\\xce\\xe1\\xe3\\x96\\x6e\\x51\\x55\\\n\\x96\\x5d\\x70\\xef\\x74\\x9b\\xa2\\x24\\x9f\\x49\\x65\\xfc\\x71\\xa6\\x66\\x9f\\\n\\x64\\xc7\\xc0\\x10\\x8e\\xb3\\x7a\\xc3\\x5b\\x85\\x42\\xa7\\x20\\xde\\xf4\\xf4\\\n\\x34\\x8a\\x02\\x8a\\xc2\\x39\\x2d\\xab\\x50\\x8f\\x07\\x30\\xcc\\x0c\\x4e\\xf0\\\n\\x10\\x97\\xed\\x7a\\x88\\x37\\xdc\\xf0\\xd5\\x73\\x0f\\x9d\\xfe\\x21\\x06\\xda\\\n\\xbf\\x4a\\x95\\x9f\\x61\\xff\\xfe\\x9b\\xd8\\xb1\\x63\\x80\\x64\\x72\\x79\\xe7\\\n\\x77\\x5f\\xaf\\xc1\\x67\\x3f\\x79\\x1e\\xef\\xf9\\xe0\\x34\\xef\\xfe\\xe0\\x34\\\n\\x71\\xcc\\xb6\\xf1\\xcb\\xaf\\xfa\\x1c\\xbf\\xf1\\x63\\xff\\x80\\xa2\\x74\\x7f\\\n\\xa7\\x7f\\xfc\\xc6\\xaf\\x70\\xf1\\xf0\\x21\\xde\\xfc\\xbe\\x5f\\x65\\x6a\\x21\\\n\\xb7\\x2d\\xda\\x33\\x95\\x52\\xf9\\xd3\\xff\\x39\\xc4\\x6b\\x6e\\xcd\\xb1\\x5d\\\n\\xf5\\xf5\\x1a\\xfc\\xc1\\xef\\x0c\\xf0\\xd6\\xdf\\x1e\\xdf\\x74\\xdb\\x7e\\xe3\\\n\\x0b\\xd3\\xfc\\xd3\\x27\\xce\\xe3\\x2d\\xbf\\x78\\x88\\x23\\x73\\xc1\\xb6\\x3c\\\n\\x7e\\xd9\\x8c\\xc6\\x3f\\x7d\\x62\\xcf\\xba\\x2e\\xe5\\xb3\\xe9\\x87\\x05\\x37\\\n\\x13\\x5d\\xd7\\x71\\x5d\\x97\\x5c\\x2e\\x4f\\x7f\\x7f\\x3f\\xc3\\xc3\\xbb\\xb8\\\n\\xe0\\x82\\x0b\\xd9\\xbb\\xf7\\x22\\x46\\x46\\x76\\x33\\x30\\x30\\x48\\xa1\\x50\\\n\\x24\\x95\\x4a\\x61\\x9a\\xd6\\xaa\\x17\\xeb\\x33\\x0c\\x83\\x64\\x32\\x49\\x6f\\\n\\x6f\\x2f\\x23\\x23\\xbb\\xd9\\xbb\\xf7\\x22\\x86\\x87\\x77\\x91\\xcf\\xe7\\x8f\\\n\\xf6\\x9a\\xb4\\x5a\\x2d\\x0e\\x1d\\x3a\\x78\\x5c\\x6d\\xb2\\x95\\x0c\\x13\\x5c\\\n\\x7a\\xf1\\xe9\\x27\\x81\\x67\\xf2\\x43\\xb4\\xdb\\x1e\\xa3\\x87\\x9e\\x64\\x7a\\\n\\x7a\\x6a\\x55\\x86\\x22\\x97\\xe4\\xf3\\x85\\xc5\\x1e\\x21\\x38\\x7f\\xcf\\xb9\\\n\\xb7\\xad\\x6a\\xb8\\x5c\\xf5\\x82\\x6b\\x79\\xfd\\xab\\x93\\x18\\x7a\\x97\\x6e\\\n\\x13\\xe3\\x36\\xa9\\xd2\\x9f\\x33\\xdc\\xfe\\x53\\xa6\\xc6\\x7f\\xc8\\xd4\\xd4\\\n\\xe4\\xb2\\xdb\\x44\\x55\\x15\\x7e\\xfd\\x97\\xfa\\xf9\\xec\\x27\\xcf\\xdb\\x94\\\n\\x93\\x72\\x57\\xca\\x36\\x7d\\x3e\\xf2\\x0b\\x7f\\xc6\\x6f\\xbe\\xee\\x33\\xab\\\n\\x12\\xac\\x96\\x5c\\x7d\\xc1\\x13\\x7c\\xf1\\x9d\\xbf\\xc5\\xb3\\xf7\\x3e\\xba\\\n\\xe5\\xdb\\xf4\\xba\\x6b\\x5c\\xfe\\xf3\\x8e\\xbd\\xdb\\x3a\\x58\\x2d\\xb9\\xed\\\n\\x75\\x05\\x9e\\x7b\\xdd\\xe6\\x9c\\x24\\xfe\\xdc\\xeb\\x92\\xdc\\xf9\\x2f\\x17\\\n\\xf2\\xac\\x2b\\xb7\\xdf\\x7c\\xcc\\x5c\\x56\\xe3\\xb3\\x7f\\x7b\\xde\\xba\\xaf\\\n\\x91\\xa8\\xbd\\xed\\x27\\x2f\\x7b\\xc7\\xd1\\x8b\\xff\\xf0\\x2d\\x28\\xfa\\xea\\\n\\xae\\x7b\\x37\\x3f\\x3f\\x47\\x10\\x6c\\xed\\x34\\x6d\\x9a\\x26\\x8e\\xe3\\x90\\\n\\x4a\\xa5\\xc9\\xe5\\x72\\x14\\x0a\\x45\\xfa\\xfa\\xfa\\x29\\x16\\x8b\\x64\\x32\\\n\\x59\\x92\\xc9\\x24\\x89\\x44\\x02\\xd3\\x34\\x57\\x75\\x38\\x6c\\xc5\\x3d\\x27\\\n\\x8a\\x82\\x69\\x9a\\x24\\x93\\x49\\xf2\\xf9\\x02\\xb6\\x6d\\x13\\x45\\x11\\x9e\\\n\\xe7\\x51\\xa9\\x94\\x71\\x1c\\x17\\xc3\\x30\\x18\\xde\\x69\\x12\\xc7\\x10\\x86\\\n\\x31\\xe9\\x94\\x76\\xd2\\xaf\\x6c\\x46\\xe7\\xfa\\x67\\xbb\\xbc\\xf0\\x79\\x69\\\n\\x0c\\x43\\x39\\x6d\\xc0\\x0b\\xa3\\x98\\x66\\xb3\\x49\\xb3\\xd9\\xa4\\x5a\\xad\\\n\\x92\\x48\\xd8\\x27\\x2c\\x72\\xdc\\xb5\\x0b\\xb2\\x6d\\x63\\xdb\\x36\\xf9\\x4c\\\n\\x0d\\x45\\x89\\x69\\x2e\\x16\\xca\\x5e\\x49\\x17\\x7a\\x2e\\xab\\x70\\xc5\\xa5\\\n\\x0a\\xb7\\xde\\xac\\x32\\xbc\\x53\\xa3\\xc4\\xe5\\xe8\\xa9\\x8b\\xb0\\xfd\\xef\\\n\\x40\\xdc\\x9d\\x7a\\x50\\xaa\\x3f\\x4a\\x2e\\xbc\\x9b\\x06\\x23\\xcc\\x94\\x75\\\n\\x12\\x89\\xc4\\xb2\\xdb\\x64\\x78\\xa7\\xc9\\x8f\\xfd\\x7f\\x39\\x1e\\x7d\\xdc\\\n\\xdb\\x94\\x45\\x11\\x97\\xe3\\xf9\\x97\\x3e\\xcc\\x47\\xdf\\xfa\\x5e\\x9e\\x7f\\\n\\xe9\\xc3\\x6b\\xf2\\x7a\\xae\\xed\\xf1\\xda\\xe7\\xdf\\x45\\xa9\\x96\\xe4\\x7b\\\n\\xfb\\xcf\\x63\\xab\\xcd\\xe3\\xd4\\xf5\\x4e\\x1d\\xab\\xf7\\xbd\\x73\\x27\\xd9\\\n\\x4c\\x77\\x83\\xb9\\xe7\\xc5\\xfc\\xf9\\x5f\\x77\\xa7\\xfa\\xf9\\x65\\x97\\xae\\\n\\x6d\\x21\\xd3\\x6b\\x9f\\xe5\\xf2\\xf7\\x9f\\x9d\\xc7\\xf7\\xd7\\xb6\\x2b\\xf8\\\n\\x47\\x5f\\x91\\x65\\xef\\x05\\xe7\\x76\\x2d\\x4e\\x25\\x35\\x5e\\xf7\\xaa\\x3c\\\n\\xb5\\x7a\\xd8\\xf5\\x05\\x90\\x37\\xaa\\x37\\xbc\\x36\\xc7\\xff\\xfe\\xc8\\x08\\\n\\x7b\\x76\\xad\\xfd\\xda\\x88\\x71\\xd0\\x20\\x1c\\xff\\xe2\\xe2\\xc5\\x54\\x45\\\n\\x69\\xdc\\x79\\xdb\\xd1\\x26\\xb7\\x9f\\xfb\\x21\\x14\\x2b\\xbb\\xaa\\x1b\\xf0\\\n\\xc4\\x13\\x8f\\x6f\\xa9\\x70\\x65\\x59\\xd6\\xe2\\x05\\x3b\\x41\\x22\\x61\\x63\\\n\\x59\\xf6\\x86\\x0a\\x4c\\xdd\\xd0\\x6e\\xb7\\x29\\x97\\xcb\\x54\\xab\\x15\\x7a\\\n\\x7b\\xfb\\x70\\xdd\\xee\\xde\\xcd\\x45\\x51\\xc4\\x81\\x03\\xfb\\x8f\\xeb\\x1d\\\n\\x2b\\x14\\x0a\\x14\\x8b\\x3d\\xab\\xd6\\x96\\xf5\\x7a\\x9d\\xf1\\xf1\\xb1\\xa3\\\n\\xbd\\x42\\x51\\x04\\x5e\\xab\\x53\\x31\\xb8\\xd1\\x84\\x66\\xb3\\x53\\x9a\\xa1\\\n\\xe9\\x75\\x86\\x0f\\x9d\\x44\\x4c\\x22\\xa1\\xd0\\xdf\\xab\\x90\\x39\\x45\\xa1\\\n\\x5f\\x47\\xaf\\x30\\xe0\\xbf\\x1f\\xb5\\xfe\\x60\\x37\\x23\\x2f\\xcd\\xec\\x4f\\\n\\x30\\x1e\\xdd\\x4a\\xa1\\xd0\\x43\\xb1\\xd8\\xb3\\xa2\\x1e\\xcd\\x6f\\x7f\\xb7\\\n\\xce\\x5f\\x7f\\xfc\\x08\\xff\\xfa\\x85\\x12\\x5b\\xe1\\x6d\\x77\\xe1\\x48\\x93\\\n\\x77\\xbc\\xfe\\xfd\\xbc\\xe8\\xf2\\x07\\xd7\\x6d\\x1b\\x1e\\x1d\\xdb\\xc9\\x9f\\\n\\xff\\xeb\\xad\\x7c\\xfe\\x1b\\xcf\\x25\\x08\\x37\\xff\\x5c\\xcf\\x17\\xbf\\x30\\\n\\xc5\\xef\\xfc\\x4a\\xff\\xaa\\xde\\xe9\\xef\\xbd\\xfa\\x61\\x16\\x4a\\xe7\\xde\\\n\\xbb\\xfb\\x87\\x6f\\x1b\\xe0\\x67\\xff\\x4b\\xcf\\x9a\\xb6\\xcf\\xb7\\x1e\\xa8\\\n\\xf3\\xba\\x9f\\xda\\x4f\\xbd\\xbe\\x76\\xf3\\xaf\\xbe\\xf6\\xef\\x17\\x72\\x71\\\n\\x17\\x1f\\x24\\x78\\x62\\x9f\\xc7\\x9f\\xbc\\x67\\x8a\\x7f\\xfb\\x62\\x99\\xad\\\n\\xe8\\xea\\x2b\\x1c\\xde\\xf9\\xfb\\x83\\x5c\\x79\\xd9\\xfa\\xf5\\x56\\x45\\xcd\\\n\\x59\\x5a\\xf7\\xbe\\x75\\xf1\\x63\\x5b\\x5f\\xdb\\x70\\x15\\xc7\\x31\\x8f\\x3e\\\n\\xfa\\xc8\\xa6\\x3d\\x80\\xa6\\x69\\x92\\x48\\x24\\xb0\\xed\\xc4\\xd1\\x1e\\x90\\\n\\xad\\x16\\xa4\\xce\\x74\\xfc\\xaa\\xd5\\x2a\\x86\\x61\\x90\\x48\\x74\\xf7\\x09\\\n\\xa2\\xa5\\xe1\\x47\\x9b\\x49\\x1c\\x75\\x92\\xd9\\xf6\\xe5\\x98\\xa6\\xc5\\xc0\\\n\\xc0\\x40\\xd7\\x5f\\x6b\\x49\\xb3\\xd9\\x64\\x6c\\x6c\\x94\\xb0\\x8b\\x33\\x3f\\\n\\x15\\x25\\x66\\xd8\\xf8\\x02\\xd6\\xdc\\xc7\\x58\\x9a\\xec\\xde\\x95\\x37\\xae\\\n\\x73\\x39\\x87\\xcd\\x5f\\x26\\x36\\xfa\\x18\\x18\\x18\\x5c\\xf1\\x72\\x45\\xd3\\\n\\x33\\x6d\\xfe\\xe6\\xd3\\x73\\x7c\\xe2\\xd3\\x73\\xcc\\x6e\\xc2\\x79\\x18\\xc3\\\n\\x43\\x0a\\x6f\\x7c\\xad\\xca\\x9b\\x6e\\x7a\\x80\\x7c\\xe9\\x9d\\x1b\\x62\\x9b\\\n\\x0e\\x1f\\x29\\xf2\\x17\\x77\\xbc\\x82\\x4f\\x7d\\xf5\\xc5\\x34\\x5b\\xd6\\xa6\\\n\\x6a\\xcf\\x6c\\x46\\xe3\\x0d\\xaf\\xcd\\xf3\\x53\\xb7\\x15\\xd8\\xbd\\x06\\x77\\\n\\xf9\\xff\\xe5\\xe7\\x0e\\x76\\xe5\\xc2\\xfe\\xd5\\x3b\\x2e\\xe4\\x19\\x17\\xad\\\n\\xfd\\xd3\\x8b\\xf7\\x7d\\xbb\\xc6\\xeb\\x7f\\xea\\xc0\\xaa\\xad\\xd9\\x78\\xac\\\n\\x9e\\x82\\xce\\x43\\xf7\\x5e\\x82\\xa6\\x75\\xbf\\x77\\xf4\\xc1\\x87\\x1a\\xfc\\\n\\xf1\\xbb\\x27\\xf9\\xda\\x3d\\x35\\x36\\x3b\\x55\\x85\\xe7\\x5c\\xdb\\x29\\xfc\\\n\\xfa\\xea\\x57\\x66\\xd7\\x7d\\xcd\\xcb\\x75\\x0d\\x57\\xed\\x76\\x9b\\x27\\x9f\\\n\\x7c\\x62\\xd3\\x04\\xa9\\xa7\\x7a\\xa4\\x12\\xdb\\x2e\\x48\\x9d\\x29\\x64\\xad\\\n\\xc6\\x89\\xdc\\x6c\\x36\\x19\\x1d\\x3d\\xc4\\x4e\\x3e\\x8d\\xd1\\x7e\\x84\\x23\\\n\\xd6\\x4f\\x50\\x0a\\xce\\xa3\\x50\\x28\\xd2\\xd3\\xd3\\xb3\\x2a\\xaf\\xd9\\x6a\\\n\\xb5\\x18\\x1d\\x3d\\xd4\\xf5\\xde\\xd4\\x82\\x3d\\x4a\\xa1\\x74\\x3b\\xb4\\xa7\\\n\\xba\\xf7\\x4b\\xb5\\x34\\xe5\\xcc\\xcf\\x33\\x13\\x3c\\x9b\\xde\\xde\\x5e\\x72\\\n\\xb9\\xfc\\x8a\\xdb\\xc4\\xf7\\x23\\x3e\\x7f\\x47\\x89\\xcf\\x7c\\x6e\\x81\\x07\\\n\\x1e\\x6c\\x50\\x6f\\x6c\\xdc\\xa7\\xa1\\xf2\\x39\\x8d\\x97\\xde\\x60\\xf2\\xa2\\\n\\xe7\\xb7\\xb9\\xf8\\xc2\\xce\\x7e\\x0e\\xe8\\x5f\\x25\\xb9\\xf0\\xc1\\x0d\\xb5\\\n\\x9d\\x0b\\xb5\\x14\\x1f\\xfb\\xe2\\x4d\\xfc\\xeb\\x7d\\xd7\\xf3\\xf8\\xe1\\xc1\\\n\\x55\\x59\\x9b\\xb0\\x5b\\x2e\\x7f\\x66\\x82\\x9f\\xbe\\xad\\xc8\\xab\\x5e\\x99\\\n\\x25\\x61\\xaf\\xdd\\xe7\\xd9\\xd8\\x61\\x9f\\x17\\xfc\\xc8\\x63\\xe7\\xd4\\xfb\\\n\\xf3\\x96\\x9f\\x2a\\xf2\\xc7\\x6f\\x1f\\x5c\\xb7\\xb6\\xbb\\xe7\\xbe\\x1a\\x6f\\\n\\xfc\\xaf\\xfb\\x69\\x7a\\xab\\x3b\\xbe\\xf6\\xd1\\x0f\\xee\\xe2\\xd6\\x5b\\x56\\\n\\x77\\x04\\x69\\xff\\xc1\\x16\\x9f\\xfb\\x97\\x05\\x3e\\xfb\\x2f\\x25\\xf6\\x1d\\\n\\x68\\x6d\\x9a\\x6b\\x8f\\xa6\\xc1\\x73\\xaf\\x4d\\x72\\xeb\\x2d\\x59\\x6e\\x79\\\n\\x59\\x66\\xdd\\x9e\\x04\\xdc\\x70\\xe1\\xaa\\xd1\\xe8\\x3c\\x7d\\xb6\\xd1\\x18\\\n\\x86\\x49\\x22\\x61\\x1f\\xd7\\x23\\xd5\\xed\\xf2\\x03\\x62\\x79\\xea\\xf5\\x3a\\\n\\x87\\xc7\\x0f\\xb0\\xdb\\xff\\x5d\\xd4\\xe6\\xa3\\xb4\\xd3\\x2f\\x67\\x8c\\x37\\\n\\xa2\\x99\\x59\\x06\\x06\\x06\\xb1\\xed\\xee\\xcf\\x09\\x6c\\xb7\\xdb\\x8c\\x8e\\\n\\x1e\\xea\\xfa\\x82\\xe2\\xb6\\xee\\x33\\x14\\xfd\\x2f\\xd4\\xf2\\x97\\xbb\\xfb\\\n\\x26\\x76\\x9e\\xc5\\x84\\xf9\\x16\\xb0\\x46\\x18\\x18\\x18\\x38\\xeb\\xf9\\x69\\\n\\x51\\x14\\xf3\\xc8\\xe3\\x1e\\xdf\\xf9\\x6e\\x83\\xef\\x3c\\x58\\xe7\\xdb\\xdf\\\n\\x6d\\xf0\\xc4\\xbe\\xd6\\x3a\\xbe\\x0f\\x15\\x2e\\xb9\\xc8\\xe6\\xf2\\x4b\\x13\\\n\\xbc\\xe4\\x86\\x34\\x37\\xbe\\x30\\x8d\\xa6\\xc5\\xc7\\x0d\\x19\\xef\\x52\\xff\\\n\\x0e\\xab\\xfc\\x8f\\x1b\\xf6\\xfc\\x5d\\xa8\\xa5\\xf8\\xe6\\xa3\\x17\\x71\\xef\\\n\\x23\\x17\\xf3\\xcd\\x47\\x2f\\xe1\\xfb\\x07\\x77\\x13\\xad\\x53\\x7e\\xcd\\x24\\\n\\x3d\\xf6\\xee\\x4d\\xf0\\x9c\\x6b\\xf3\\x5c\\x7b\\x75\\x9a\\xab\\xae\\x70\\xc8\\\n\\x65\\xd7\\xef\\x62\\xf4\\xe0\\x43\\x0d\\x7e\\xfe\\xd7\\x46\\x57\\x7c\\x8e\\x29\\\n\\x0a\\xfc\\xfc\\x5b\\x7a\\xf8\\xad\\xb7\\xf6\\x63\\x9a\\xeb\\x7b\\x83\\xfb\\xe4\\\n\\x7e\\x8f\\x77\\xbd\\x7f\\x9a\\xff\\x73\\x47\\xa9\\xeb\\xbf\\xdb\\x75\\x55\\xfe\\\n\\xf8\\xed\\x03\\xbc\\xf1\\xc7\\x0a\\x6b\\xba\\x4f\\x0f\\x3d\\xdc\\xe0\\x5f\\xbf\\\n\\x50\\xe6\\xfe\\x07\\xea\\x3c\\xf4\\x70\\x73\\x43\\xdd\\x70\\x0d\\x0f\\x99\\xec\\\n\\xbd\\xc0\\xe6\\xa2\\x0b\\x2d\\x2e\\xde\\x9b\\xe0\\xc5\\x2f\\x48\\x91\\xcf\\x6d\\\n\\xcc\\x87\\x75\\xd6\\x35\\x5c\\x55\\x2a\\xe5\\x65\\x2d\\xa8\\xbb\\xba\\x1f\\xe0\\\n\\xc6\\xd1\\xf9\\x51\\x4b\\x61\\x4a\\x82\\xd4\\xc6\\x52\\xad\\x56\\x99\\x9f\\x7c\\\n\\x90\\xa1\\xca\\x5b\\x21\\xaa\\x11\\x1b\\xbd\\xcc\\x25\\x7f\\x89\\xf9\\xe0\\x62\\\n\\x8a\\xc5\\x1e\\x8a\\xc5\\x62\\xd7\\x7b\\xb1\\x82\\x20\\x60\\x6c\\x6c\\x14\\xcf\\\n\\xf3\\xba\\xbe\\x3f\\x3b\\xed\\x6f\\x91\\x98\\x7b\\x1f\\x44\\x5d\\xfc\\xdd\\x8a\\\n\\x41\\x23\\x73\\x1b\\x53\\xbc\\x92\\xde\\xbe\\x21\\x32\\x99\\xee\\x4c\\xf2\\x2d\\\n\\x57\\x42\\xbe\\xf3\\x60\\x9d\\xd1\\x31\\x9f\\x4a\\x35\\xa2\\x52\\x0d\\xa9\\x54\\\n\\x43\\xca\\x95\\xce\\xf7\\xea\\xd1\\x3f\\x47\\x04\\xed\\x95\\xdd\\xc1\\x6b\\x7a\\\n\\xa7\\xf6\\x4c\\xe7\\x4b\\x27\\x93\\x56\\xc9\\x66\\x75\\x2e\\xba\\xc0\\xe6\\x8a\\\n\\x67\\x26\\xb8\\xe8\\x42\\xfb\\xa4\\x17\\xcf\\x63\\x6f\\xca\\xce\\x8b\\xdf\\x83\\\n\\x56\\xbb\\x67\\xd3\\x9c\\xcb\\xb3\\xce\\xaf\\xf1\\xc5\\xef\\x5d\\xcf\\xc4\\x64\\\n\\x4c\\xb5\\x06\\xd5\\xda\\xe2\\xf7\\xea\\x31\\x7f\\xae\\x41\\x3b\\x38\\xbe\\x2d\\\n\\xf5\\xb8\\xca\\xa9\\x86\\x95\\x35\\x35\\x22\\xe5\\x34\\xc8\\x38\\x75\\xd2\\x6e\\\n\\x83\\xac\\x5b\\x23\\xed\\x34\\xc8\\xb8\\x75\\xd2\\x4e\\x83\\xbe\\xdc\\x02\\x57\\\n\\xec\\xd9\\xc7\\x9e\\x1d\\x93\\x84\\xe9\\x97\\x70\\x48\\xfb\\x79\\x86\\x87\\x47\\\n\\x56\\xe5\\xc6\\x64\\xa5\\x5a\\xad\\x88\\x6f\\x7f\\xb7\\xc1\\x43\\x3f\\x68\\x50\\\n\\xad\\x9d\\xfe\\x22\\xae\\x2a\\x30\\xb2\\xcb\\xe2\\x59\\x57\\x3a\\x6b\\xbe\\x2e\\\n\\xdc\\x99\\x8c\\x1d\\xf6\\xf9\\xde\\xf7\\x1b\\x3c\\xb9\\xbf\\x85\\xdf\\x3e\\xb7\\\n\\x9e\\x2c\\xd3\\x50\\xd8\\x7b\\x81\\xcd\\x35\\x57\\xb9\\xeb\\xde\\x13\\x13\\x45\\\n\\x31\\x8f\\x3f\\xd9\\xe2\\x81\\xef\\x35\\xf8\\xc1\\xa3\\x4d\\xe6\\xe7\\x03\\x4a\\\n\\x95\\x90\\x52\\x29\\x64\\xa1\\x14\\x52\\xab\\x85\\x67\\x3d\\x31\\x5e\\x51\\xc0\\\n\\x30\\x15\\x9c\\x84\\x8a\\xe3\\xa8\\xb8\\x4e\\xe7\\xbb\\x93\\x58\\xfc\\x73\\x42\\\n\\x25\\x99\\xd4\\x38\\x6f\\xb7\\xc5\\x45\\x17\\xd8\\x5c\\x70\\xbe\\x85\\xeb\\x6c\\\n\\x9e\\x6b\\xf3\\xba\\x86\\xab\\xb9\\xb9\\x23\\x5d\\x29\\xe4\\xb8\\x5c\\xaa\\xaa\\\n\\x92\\x48\\x24\\x48\\x24\\x9c\\xc5\\xef\\x09\\x09\\x52\\x9b\\x44\\xa9\\x54\\xa2\\\n\\x39\\x7b\\x0f\\xbd\\xe5\\xdf\\x85\\xa8\\x53\\x7f\\xcb\\xcf\\xdc\\xca\\x58\\xf4\\\n\\x06\\x0c\\x3b\\xc3\\xe0\\xe0\\x20\\xa6\\x69\\x75\\xf9\\x83\\x25\\x62\\x6c\\x6c\\\n\\xf4\\xac\\xd6\\xf9\\x3b\\x93\\xac\\x5d\\xa2\\xa7\\xf6\\x2e\\x94\\xe6\\x63\\x5d\\\n\\xfd\\xbd\\xb1\\x39\\xcc\\x9c\\xfb\\xdf\\xf1\\xcc\\x2b\\x29\\x16\\x7b\\xba\\xfe\\\n\\xb0\\xc1\\x46\\x71\\xf0\\xe0\\x41\\x9a\\xcd\\x06\\x17\\xb4\\x7e\\x19\\xc5\\x1f\\\n\\xdd\\x34\\xdb\\x1d\\xdb\\x17\\xf2\\x84\\x71\\xfb\\x8a\\xff\\x5d\\x9f\\xfe\\x4d\\\n\\x32\\x0b\\xef\\xea\\xca\\x36\\xb4\\xd3\\x2f\\x67\\x4c\\xfb\\x59\\x76\\xef\\xde\\\n\\x83\\xae\\xeb\\xf2\\xe1\\x22\\xc4\\x1a\\x84\\xab\\x35\\x2d\\xc5\\x50\\xa9\\x94\\\n\\x57\\xa5\\x67\\xe0\\xe8\\x1d\\x80\\x69\\x92\\x4c\\xa6\\xc8\\xe7\\x73\\xf4\\xf6\\\n\\xf6\\xd1\\xdb\\xdb\\x47\\x36\\x9b\\xc5\\x75\\xdd\\x0d\\x57\\xf6\\x40\\x9c\\x9e\\\n\\x6d\\xdb\\xb4\\x95\\x02\\xd5\\x68\\x37\\x6e\\xeb\\xeb\\x40\\x88\\xd6\\x7a\\x8c\\\n\\x5c\\x7c\\x0f\\x81\\x3e\\xc2\\xe4\\xbc\\x86\\xa6\\x69\\x5d\\x9d\\xec\\xae\\x28\\\n\\x0a\\xe9\\x74\\xfa\\x68\\x15\\xfb\\x6e\\xf2\\x02\\x9b\\xb2\\x7e\\x23\\xc9\\x84\\\n\\x82\\xe6\\xfd\\xa0\\x7b\\xdb\\x1c\\x96\\x71\\xbc\\x3b\\x71\\xb4\\x59\\x26\\xab\\\n\\xfd\\x54\\xea\\x6d\\x0c\\xc3\\xc0\\x34\\xcd\\x2d\\x75\\x3e\\x04\\x41\\x40\\xa3\\\n\\x51\\xa3\\xe8\\xfd\\x0d\\xdd\\x7c\\x50\\x60\\xb5\\x29\\xc1\\x1c\\x51\\xfa\\x05\\\n\\x78\\xe1\\xca\\x2a\\x9d\\xd7\\xa3\\x41\\xf2\\xca\\x77\\x50\\xc2\\x85\\x73\\xde\\\n\\x06\\xad\\xf5\\x04\\xb6\\xad\\x33\\x59\\x1b\\x26\\x93\\xc9\\xac\\xfb\\xc4\\x5f\\\n\\x21\\xb6\\xa2\\xa7\\x97\\x62\\x58\\xd3\\x70\\xb5\\xb0\\x50\\xea\\xda\\x45\\x4b\\\n\\x55\\x55\\x1c\\xc7\\x21\\x93\\xc9\\x50\\x28\\x14\\xe9\\xef\\xef\\x3f\\x5a\\x80\\\n\\xd3\\xb6\\x13\\xe8\\xba\\x2e\\x1f\\x22\\x9b\\x5c\\x22\\xe1\\xd0\\x8c\\xf2\\x34\\\n\\xd8\\x85\\xd3\\xba\\x0b\\x88\\x50\\xa2\\x1a\\x8e\\x77\\x27\\x29\\xdb\\x67\\xb2\\\n\\x3a\\x44\\xbd\\xd9\\xc6\\x75\\xdd\\xae\\x05\\x67\\x45\\x51\\x48\\xa5\\xd2\\xc4\\\n\\x71\\x7c\\x42\\xc5\\xfa\\x73\\x7e\\xf3\\xc5\\x0a\\xa5\\xf8\\x52\\x62\\xe7\\x52\\\n\\x9c\\xe0\\xc1\\xae\\x0e\\x13\\xaa\\xad\\x7d\\x64\\x83\\xaf\\xa0\\x1a\\x19\\xc6\\\n\\x17\\xd2\\x34\\x1a\\x8d\\x2d\\x15\\xb2\\x9a\\xcd\\x06\\x61\\x73\\x9c\\x8c\\xf7\\\n\\xf9\\x4d\\xb7\\xed\\x86\\x33\\x44\\x29\\x3c\\x7f\\xa5\\x67\\x22\\x09\\x0b\\x4c\\\n\\xef\\xdb\\xdd\\xd9\\x06\\xef\\x21\\x14\\x6b\\x07\\xf3\\x5e\\x1f\\xa9\\x54\\x4a\\\n\\x3e\\x1b\\x85\\xd8\\x4a\\xe1\\xea\\x5c\\x0a\\x88\\x2e\\x15\\xb7\\xcc\\xe5\\xf2\\\n\\xf4\\xf4\\xf4\\xd2\\xd7\\x27\\xbd\\x52\\xdb\\x81\\xeb\\xba\\x54\\xdb\\x79\\x7c\\\n\\x6d\\x88\\x44\\xf3\\x6e\\x20\\x5e\\xbc\\x1b\\x7f\\x94\\x1c\\xf7\\xd1\\x52\\x47\\\n\\x98\\x5a\\x50\\x31\\x0c\\x73\\xc5\\xe5\\x09\\x4e\\x17\\xb0\\x5c\\x37\\x89\\x61\\\n\\x18\\xd4\\xeb\\xdd\\x7f\\x64\\xb9\\x19\\xf7\\x52\\x31\\x6e\\x20\\xa9\\x4d\\xa1\\\n\\x05\\x5d\\x9c\\x83\\x18\\xfb\\x98\\xcd\\xfb\\xc8\\x2b\\xdf\\x22\\x56\\x33\\x4c\\\n\\x2c\\x24\\xb6\\x44\\xc8\\x8a\\xe3\\x98\\xc9\\xc9\\x49\\x7a\\xf9\\x32\\x86\\xf7\\\n\\xdd\\x4d\\xb7\\xfd\\xaa\\x0a\\xf3\\xca\\x0b\\xd0\\x75\\x9d\\x1d\\x3b\\x06\\xa8\\\n\\xd5\\xaa\\xcb\\xfa\\x77\\x91\\x92\\x24\\xed\\xdd\\xd1\\xb5\\xed\\xb0\\x5a\\xf7\\\n\\xe3\\xe9\\x17\\xe1\\x45\\x85\\x2d\\x3b\\x7c\\x2c\\xc4\\xb6\\x0c\\x57\\xb3\\xb3\\\n\\x33\\xc4\\xcb\\x98\\x0d\\xa7\\x28\\x0a\\x8e\\xe3\\x90\\x4e\\x67\\x28\\x14\\x0a\\\n\\x47\\xab\\x9b\\xa7\\x52\\x69\\x12\\x09\\xe9\\x95\\xda\\x7e\\x01\\x2b\\x49\\xc9\\\n\\xcb\\x13\\xea\\xfd\\xd8\\xde\\x53\\x93\\x99\\x95\\xb0\\x8a\\xeb\\x7d\\x99\\xa4\\\n\\x15\\x30\\x51\\x19\\xa0\\xd5\\x0e\\x71\\x9c\\xee\\xf5\\x62\\xd9\\xb6\\x8d\\xe3\\\n\\xb8\\xd4\\x6a\\xd5\\x65\\x9d\\xb7\\x2b\\x11\\x61\\x53\\x52\\x9f\\x47\\x6c\\x0d\\\n\\x93\\x08\\x1f\\x41\\x89\\xbb\\xd7\\x8b\\xa5\\x84\\x25\\x6c\\xef\\xae\\xc5\\x90\\\n\\x95\\x66\\x62\\xc1\\xd9\\xd4\\x21\\xab\\x5e\\xaf\\x53\\x2f\\x8f\\xd2\\x53\\xb9\\\n\\x1d\\xe2\\xcd\\xb7\\x7c\\x96\\xd2\\x9e\\xa5\\x9e\\x7c\\x35\\x7e\\x1b\\x86\\x86\\\n\\x86\\x70\\x1c\\x97\\x72\\xf9\\xcc\\x4f\\x9b\\xb5\\xe3\\x24\\x79\\xee\\x46\\x09\\\n\\xab\\x5d\\x3b\\xeb\\x5c\\xff\\x3e\\xe6\\xb9\\x02\\xf4\\xfc\\x86\\x98\\xe0\\x2e\\\n\\x84\\x84\\xab\\x73\\x7d\\x5b\\x47\\x11\\xb3\\xb3\\x27\\x5f\\x02\\xa1\\xb3\\xc6\\\n\\x5d\\x8a\\x6c\\x36\\x47\\x6f\\x6f\\x0f\\x7d\\x7d\\xfd\\x64\\xb3\\x39\\x5c\\xd7\\\n\\xc5\\xb2\\x2c\\xe9\\x95\\xda\\xe6\\x3a\\x43\\x75\\x29\\xe6\\x1a\\x05\\x30\\x8a\\\n\\x58\\xde\\x7d\\xc7\\xfd\\x7f\\xad\\xf5\\x43\\x72\\xdc\\x47\\x53\\x19\\x61\\xa6\\\n\\xa4\\x61\\xdb\\x36\\x86\\xd1\\x9d\\x10\\x61\\x18\\x06\\xe9\\x74\\x86\\x7a\\xbd\\\n\\xde\\xd5\\x62\\xa3\\x4b\\x9a\\xec\\xa4\\xac\\xdf\\x88\\x63\\xb6\\xd1\\xfd\\xc7\\\n\\xbb\\xdb\\x6e\\xc7\\x84\\x2c\\xb4\\xcd\\x19\\xb2\\xda\\xed\\x36\\x93\\x13\\x07\\\n\\x19\\x6e\\xfd\\x09\\x8a\\x3f\\xbe\\x49\\xcf\\xe0\\x08\\xdc\\x2b\\xa8\\x87\\x3d\\\n\\xe4\\x72\\x39\\x2c\\xcb\\x42\\xd7\\x35\\x6a\\xb5\\x33\\xf7\\x8a\\xa6\\xcc\\x32\\\n\\x7a\\xeb\\x87\\x5d\\xbc\\x02\\xf8\\xa4\\xc2\\x07\\x98\\xf6\\xaf\\xc4\\x76\\x72\\\n\\xab\\xb6\\xcc\\x94\\x10\\x12\\xae\\xd6\\x28\\x5c\\xf9\\xbe\\xcf\\xc2\\xc2\\x02\\\n\\x8a\\xa2\\x90\\x48\\x38\\xa4\\xd3\\xe9\\x63\\x7a\\xa5\\x7a\\x48\\xa7\\x97\\x7a\\\n\\xa5\\x0c\\xe9\\x95\\x12\\xa7\\x0c\\x58\\xd3\\xb5\\x1e\\x74\\x33\\x8d\\xe9\\x7d\\\n\\xeb\\x69\\x41\\xa2\\x82\\xdb\\xfc\\x12\\xae\\x15\\x33\\x5e\\xee\\x27\\x08\\x3b\\\n\\x43\\x8a\\xdd\\x38\\x97\\x34\\x4d\\x23\\x93\\xc9\\xd2\\x6a\\x75\\x7f\\xa2\\x3b\\\n\\x40\\xac\\x98\\x94\\x95\\x2b\\x69\\x59\\x57\\xe1\\x2a\\xfb\\xbb\\x32\\x89\\xf9\\\n\\x84\\x90\\xd5\\xbc\\x8b\\x3c\\xdf\\x04\\xbd\\x13\\xb2\\xea\\xf5\\x06\\x8a\\xd2\\\n\\x19\\x6e\\xdf\\xa8\\xef\\xb7\\x4e\\xfd\\xb1\\x03\\x0c\\xf9\\xef\\x43\\xab\\x7f\\\n\\x73\\x53\\x9f\\xbf\\x9a\\xd5\\x43\\x29\\xba\\x94\\x6c\\x36\\x83\\xae\\x77\\xd6\\\n\\x8a\\x6c\\xb7\\xdb\\xb4\\x5a\\xde\\x19\\xce\\x3d\\x13\\xc7\\xbb\\xb3\\xbb\\xe7\\\n\\x43\\x54\\x23\\xa5\\x3c\\xce\\x78\\xe3\\x4a\\x52\\xe9\\x9c\\x3c\\x41\\x2d\\xc4\\\n\\x66\\x0e\\x57\\x00\\xe9\\x74\\x9a\\xfe\\xfe\\x7e\\x72\\xb9\\x1c\\xc9\\x64\\x52\\\n\\x7a\\xa5\\xc4\\x59\\x05\\xac\\xc9\\x4a\\x2f\\x96\\x95\\x38\\xe9\\xfc\\x1b\\xcd\\\n\\x7b\\x98\\x5c\\xfc\\x4d\\x1a\\xca\\x08\\xb3\\x25\\x95\\x44\\xc2\\xe9\\xca\\xe3\\\n\\xe7\\x4b\\x4f\\x12\\xae\\xc6\\x44\\xf7\\xa3\\x37\\x20\\x14\\x58\\xd0\\x6e\\xc4\\\n\\xb4\\x52\\x58\\xed\\x1f\\x02\\xdd\\xed\\x29\\x53\\xc2\\x32\\x76\\xf3\\x6e\\xf2\\\n\\xca\\xfd\\x18\\x86\\xca\\x91\\xaa\\xc3\\xcc\\x91\\x0a\\xad\\x96\\x8f\\xaa\\xaa\\\n\\x18\\xc6\\xc6\\xb9\\xb1\\x69\\x34\\x1a\\x4c\\x1f\\x7e\\x8c\\x21\\xef\\x76\\xb4\\\n\\xda\\x37\\x36\\xfd\\xb9\\xab\\x1a\\x69\\xe6\\x79\\x2e\\xa9\\x54\\xea\\x68\\xaf\\\n\\xa1\\xeb\\xba\\xd4\\xeb\\xb5\\xd3\\xce\\x43\\xf5\\xa2\\x1c\\x85\\xe0\\x8e\\xae\\\n\\x0f\\x87\\x2a\\xc1\\x2c\\x49\\x63\\x9a\\xf1\\xfa\\x33\\xc8\\x64\\xb2\\x72\\x43\\\n\\x2b\\xc4\\x66\\x0d\\x57\\x1b\\xed\\xc3\\x5b\\x6c\\xd2\\x8b\\x94\\xaa\\x92\\x4a\\\n\\xa5\\x39\\x5c\\xd9\\x81\\x69\\xbb\\x18\\xde\\x03\\x27\\x0d\\x11\\x6e\\xf3\\x4b\\\n\\x38\\x56\\xcc\\x78\\xb9\\x97\\x30\\xec\\x3c\\x79\\x78\\xae\\xe7\\xde\\xd2\\x44\\\n\\x77\\xd3\\x34\\x97\\x35\\xa4\\x73\\x96\\x7b\\x48\\x8d\\x0b\\xa9\\x9b\\x2f\\xc0\\\n\\xd5\\x67\\x50\\xdb\\xdd\\x2f\\xba\\xab\\x84\\x25\\x8c\\xe6\\x37\\xc9\\xb6\\xfe\\\n\\x85\\xac\\x39\\x49\\x18\\x69\\x4c\\x2d\\x98\\x94\\x4a\\x65\\x82\\xa0\\x8d\\xae\\\n\\xeb\\xeb\\x56\\x0f\\x29\\x8a\\x22\\xa6\\xa7\\xa7\\xa8\\xcd\\x7e\\x97\\x81\\xfa\\\n\\xdb\\x51\\xbd\\x47\\xb7\\xcc\\x8d\\xc1\\xbc\\x7e\\x0b\\xae\\xeb\\x1e\\x9d\\xeb\\\n\\xd4\\x39\\x9f\\x5c\\x4a\\xa5\\x85\\xd3\\x9e\\x0f\\x19\\x73\\x02\\xd5\\x3f\\xd0\\\n\\xfd\\x33\\xcd\\x3f\\x44\\xc2\\x88\\x98\\xf6\\xce\\x23\\x9d\\x4e\\xcb\\x67\\xb3\\\n\\x10\\x9b\\x31\\x5c\\x09\\xd1\\xcd\\x80\\x95\\x4e\\xa7\\x99\\xac\\xee\\xc0\\xb0\\\n\\xb2\\x27\\x0c\\x11\\x2e\\xd1\\xbc\\xef\\x93\\x8d\\xbf\\x4d\\x83\\xdd\\x4c\\x2f\\\n\\xc4\\x58\\x96\\xdd\\x95\\xb9\\x46\\xb6\\x6d\\x77\\x9e\\x62\\xac\\x76\\x7f\\xa2\\\n\\xfb\\x92\\x00\\x97\\x05\\xf5\\x79\\x28\\x89\\x11\\xec\\xf0\\x49\\x94\\xa8\\xbe\\\n\\x1a\\x51\\x06\\xd5\\x3f\\x48\\xa2\\xf9\\x9f\\x14\\xa2\\x2f\\xe3\\x18\\x0d\\xea\\\n\\xad\\x04\\xd3\\xf3\\x01\\xd5\\x6a\\x85\\x30\\x8c\\x30\\x0c\\x63\\x4d\\x86\\x8d\\\n\\x82\\x20\\xa0\\x5c\\x2e\\x33\\x31\\x31\\x46\\xb2\\xf5\\x9f\\xf4\\x54\\xfe\\x10\\\n\\x25\\x98\\xdf\\x3a\\x27\\x6d\\xd4\\xa0\\xe2\\xbc\\x1e\\xd3\\xb4\\x71\\x1c\\xe7\\\n\\xa9\\x73\\x54\\xd3\\x50\\x14\\x95\\x7a\\xfd\\xd4\\xc7\\xd7\\xd6\\x7d\\x2c\\xef\\\n\\xde\\x55\\xd9\\x2c\\xbd\\xf5\\x30\\x18\\x05\\x2a\\xc1\\x30\\xc9\\x64\\x52\\x3e\\\n\\x5c\\x84\\x90\\x70\\x25\\x24\\x60\\x65\\x98\\xaa\\xf6\\xa1\\x5a\\x45\\x2c\\xef\\\n\\xe4\\x73\\x72\\x94\\xb0\\x84\\xd3\\xfc\\x22\\x6e\\x42\\x63\\xbc\\xd2\\x47\\xab\\\n\\xd5\\xee\\xca\\x13\\x85\\x4f\\x4d\\x74\\x6f\\x10\\x86\\xc1\\xaa\\xec\\x5f\\x1c\\\n\\xc7\\x34\\xe2\\x21\\x16\\x8c\\x97\\x61\\xd9\\x49\\xcc\\xf6\\x63\\x10\\x07\\xab\\\n\\xd3\\xa0\\x91\\x87\\xde\\xfa\\x01\\x29\\xef\\xdf\\xc9\\x6b\\x0f\\x62\\x9b\\x11\\\n\\x5e\\x2b\\x62\\x6a\\xce\\x3f\\x7a\\xe1\\x37\\x0c\\xa3\\xab\\xc3\\xf8\\xed\\x76\\\n\\x9b\\x72\\xb9\\xcc\\xcc\\xcc\\x34\\x33\\xd3\\xe3\\xb8\\xcd\\x2f\\xd2\\x57\\x7f\\\n\\x37\\x76\\xfd\\xdf\\x57\\x6f\\x3f\\xd7\\x2f\\x5d\\xd1\\x74\\x6e\\x46\\xd1\\x53\\\n\\x24\\x93\\xc7\\x17\\x14\\x4d\\x24\\x12\\xd4\\x6a\\xa7\\x1e\\x1e\\x34\\xd5\\x3a\\\n\\x8e\\xf7\\x7f\\x57\\x6d\\xcb\\x2c\\xef\\x7e\\x9a\\xea\\x79\\xb4\\xb5\\x1d\\xd8\\\n\\x76\\x42\\x3e\\x5c\\x84\\xe8\\x42\\xb8\\x92\\xb5\\x10\\xc4\\xa6\\xa5\\x69\\x1a\\\n\\xc3\\xc3\\xbb\\x18\\x1b\\xbb\\x99\\x38\\x67\\x90\\x5e\\x78\\x0f\\x4b\\x75\\xb0\\\n\\x9e\\x7e\\x61\\x33\\xe7\\x3f\\xc9\\x1e\\xeb\\x2e\\xe6\\xb5\\x9f\\x63\\xdf\\xbe\\\n\\xbd\\xf4\\xf5\\xf5\\x9f\\xf3\\x7a\\x7c\\x86\\x61\\x30\\x32\\x32\\xc2\\xe4\\xe4\\\n\\x24\\x95\\x4a\\xb9\\xbb\\x6f\\xd4\\x38\\xa6\\xa7\\xa7\\x07\\xdf\\xf7\\x3b\\x3d\\\n\\x3a\\xf1\\xad\\x18\\xee\\xf3\\x19\\x88\\xff\\x09\\xab\\xf6\\x1f\\xa7\\xd8\\xcf\\\n\\xee\\x50\\x9a\\x8f\\x61\\x37\\x1f\\xc3\\x06\\x7a\\x54\\x97\\x30\\xb8\\x0c\\xcf\\\n\\xbb\\x84\\xe9\\xe9\\x0b\\x69\\x6a\\x17\\xa0\\x1b\\x0e\\xa6\\x69\\x61\\x59\\x26\\\n\\xa6\\x69\\x61\\x9a\\x06\\x8a\\xa2\\x9e\\x36\\x44\\x75\\xbe\\xfc\\xa3\\x7f\\xf6\\\n\\x7d\\x9f\\x76\\xdb\\xc7\\xe1\\x30\\x59\\xf5\\x21\\x06\\x9b\\x9f\\x47\\x09\\x8e\\\n\\x6c\\xe9\\xf3\\xd5\\x64\\x86\\x76\\x30\\x78\\x62\\x7b\\x2b\\x0a\\x3b\\x76\\x0c\\\n\\x70\\xe0\\xc0\\xfe\\x93\\xb7\\x5f\\x9c\\x5e\\xf5\\xe0\\x57\\x28\\xff\\x31\\x93\\\n\\x64\\x31\\x8c\\xeb\\xa5\\x06\\x96\\x10\\x5d\\x20\\xe1\\x4a\\x6c\\xfa\\x80\\xb5\\\n\\x73\\xe7\\x30\\x63\\x63\\x2f\\x21\\xce\\xe9\\x64\\x16\\xfe\\x94\\x53\\x2d\\x8f\\\n\\xa2\\xb4\\x0e\\x52\\x68\\xfd\\x06\\x99\\xf4\\x4d\\x8c\\x4f\\xbd\\x91\\x72\\x79\\\n\\x07\\x3b\\x76\\xec\\x38\\xa7\\xc7\\xd1\\x55\\x55\\x65\\x70\\x70\\x10\\xd7\\x75\\\n\\x98\\x9a\\x9a\\xea\\xda\\x30\\x61\\x1c\\xc7\\xcc\\xce\\xce\\xd2\\xd7\\xd7\\x4f\\\n\\x4f\\x4f\\x2f\\xf3\\xf3\\xf3\\x94\\x4a\\x2a\\x87\\xa2\\xb7\\xe0\\x24\\x5f\\x46\\\n\\x7f\\xf8\\x09\\xf4\\xe6\\x1a\\x14\\xd4\\x8c\\xea\\x68\\xf5\\x7b\\x71\\xb9\\x17\\\n\\x17\\x40\\x31\\x88\\x12\\x97\\x10\\xd8\\x97\\xe1\\xd7\\x7b\\x69\\x44\\x49\\xe6\\\n\\x43\\x07\\x3f\\x4e\\x13\\x92\\x21\\x52\\x4e\\xd6\\xf3\\x1d\\xa3\\xc6\\x4d\\x74\\\n\\xea\\x98\\xea\\x02\\x69\\x9e\\x20\\x11\\x3e\\x82\\xde\\xfc\\x3e\\x44\\xd5\\x6d\\\n\\x73\\xae\\xea\\xaa\\x4f\\xa3\\x7d\\xf2\\xde\\x29\\xdb\\xb6\\x29\\x14\\x0a\\xcc\\\n\\xcd\\xcd\\x9d\\xf0\\xff\\xfc\\x55\\x0f\\x57\\x40\\xd4\\x64\\x47\\xed\\x7f\\x32\\\n\\x3e\\xf1\\x6e\\x8c\\x5d\\x57\\x6c\\xb9\\xe5\\x93\\x84\\x90\\x70\\x25\\xc4\\x59\\\n\\x04\\xac\\xe1\\xe1\\x61\\xc6\\xc6\\x5e\\x44\\x94\\x33\\xc8\\x2d\\xbc\\x93\\xd3\\\n\\x3d\\x69\\xa7\\x57\\xbe\\xc8\\x88\\x7a\\x0f\\x15\\x7e\\x9a\\x7d\\xfb\\x5e\\x4c\\\n\\x6f\\x6f\\x2f\\xb9\\x5c\\xfe\\x9c\\x26\\xf4\\x66\\xb3\\x39\\x6c\\x3b\\xc1\\xe1\\\n\\xc3\\xe3\\x5d\\x2d\\xd7\\x30\\x3d\\x3d\\x45\\xbd\\x5e\\x63\\xc7\\x8e\\x01\\x8a\\\n\\xc5\\x22\\xa5\\xd2\\x02\\xf3\\xf3\\x3a\\xfb\\x95\\xb7\\x93\\x49\\x3d\\x40\\x4f\\\n\\xeb\\xe3\\xa8\\xfe\\xd8\\xda\\x35\\x76\\xdc\\x46\\x6d\\x7c\\x0f\\xb3\\xf1\\x3d\\\n\\x4c\\xe0\\x84\\x59\\x3a\\x8a\\x45\\xac\\x17\\x88\\xf5\\x34\\x44\\x4d\\x94\\xa0\\\n\\x8c\\x12\\x56\\xd8\\x4c\\xeb\\x01\\xae\\x5a\\xd3\\xa1\\x71\\xba\\x1e\\xc7\\x62\\\n\\xb1\\x87\\x4a\\xa5\\x42\\xbb\\x7d\\xfc\\x93\\x81\\xad\\xc8\\x05\\x14\\x56\\xb3\\\n\\xb7\\x12\\x80\\xf6\\x0c\\x03\\xde\\x1f\\x71\\x78\\xfc\\x76\\x76\\xee\\xda\\x2b\\\n\\x25\\x1a\\x84\\x38\\x97\\xeb\\x92\\xcc\\xb9\\x12\\x1b\\x8d\\xef\\x77\\x4a\\x03\\\n\\xac\\x24\\xec\\x2c\\x95\\x4a\\x98\\x6b\\xe4\\x08\\x8c\\x3d\\x24\\x5a\\xf7\\x9c\\\n\\xfe\\x82\\x1e\\xfb\\x58\\xad\\xfb\\xc9\\x2a\\xdf\\x67\\xde\\xdb\\xc1\\x42\\x4d\\\n\\x3b\\x5a\\xfd\\xff\\xac\\xef\\x54\\x74\\x9d\\x6c\\x36\\xbb\\x58\\xbf\\xa8\\xd5\\\n\\xd5\\xf6\\x28\\x97\\x4b\\x58\\x96\\x45\\x2e\\x97\\x23\\x9f\\xcf\\x63\\x18\\x06\\\n\\x15\\xbf\\xc0\\x11\\xe5\\x46\\x54\\x33\\x87\\x1d\\xee\\xeb\\x6a\\x95\\xf7\\xb3\\\n\\x17\\xa2\\x44\\x55\\x94\\xe0\\x08\\x4a\\x58\\x5e\\xdc\\xa6\\x58\\x4e\\x6a\\xa0\\\n\\x91\\x78\\x19\\xb1\\x31\\x78\\xca\\xe1\\x68\\x45\\x51\\xb0\\x2c\\x9b\\x72\\xf9\\\n\\xe9\\x43\\xcc\\x0a\\x85\\xe8\\x4b\\x5d\\x5d\\x8b\\xf2\\x94\\xef\\xa3\\x60\\x0e\\\n\\x57\\x9b\\x67\\xa2\\x79\\xa9\\x2c\\xf2\\x2c\\xc4\\x4a\\x6e\\x9e\\x64\\x42\\xbb\\\n\\xd8\\xe8\\xa2\\x28\\xe4\\xd0\\xa1\\x51\\xe2\\x38\\xc6\\xb2\\xac\\x65\\x7f\\xc0\\\n\\x2f\\x05\\xac\\xf9\\x46\\x16\\x5f\\xe3\\x28\\xb6\\xe7\\x00\\x00\\x20\\x00\\x49\\\n\\x44\\x41\\x54\\x3f\\x1f\\xa7\\x75\\x37\\x67\\xaa\\x15\\xa5\\x06\\xb3\\xa4\\x5b\\\n\\x5f\\xc2\\xd2\\x3d\\x0e\\x97\\x8a\\xf8\\xed\\x98\\x44\\x22\\x71\\xd6\\x13\\xb7\\\n\\x97\\xb6\\xc1\\x30\\xf4\\xd3\\x3e\\x01\\xb6\\xe2\\x37\\x6e\\x1c\\x53\\xad\\x56\\\n\\x68\\xb7\\x7d\\x5c\\xd7\\xc5\\x71\\x1c\\x72\\xb9\\x1c\\xb6\\xed\\x50\\x0e\\x76\\\n\\x31\\xcb\\x8d\\xe8\\x76\\x0e\\x2b\\x38\\x00\\x1b\\x22\\x64\\x89\\xa7\\xab\\xd9\\\n\\x37\\xa1\\xda\\x43\\xa4\\x52\\xa9\\x53\\xfe\\x1d\\xd3\\x34\\x4f\\x5a\\x5c\\x34\\\n\\xcf\\xbd\\x28\\xc1\\xdc\\x9a\\x6c\\xa7\\xea\\xef\\x27\\x36\\x77\\x52\\xf6\\xfb\\\n\\x4e\\xbb\\xad\\x42\\x08\\x09\\x57\\x62\\x13\\xd1\\x34\\x0d\\x55\\x55\\x98\\x9a\\\n\\x9a\\xa4\\x5a\\xad\\x90\\x48\\x24\\x96\\x3d\\x2f\\x6a\\x29\\xdc\\x94\\x9a\\x19\\\n\\x3c\\x7d\\x2f\\xae\\x7f\\xf7\\x32\\x9e\\x3c\\x8b\\xd1\\x5b\\x3f\\x24\\x17\\xdd\\\n\\x45\\xa0\\x14\\x19\\x9f\\xb3\\x16\\x57\\x12\\x48\\x9c\\xf5\\x9d\\xbb\\x6d\\x27\\\n\\x48\\x26\\x53\\x34\\x1a\\xdd\\x5d\\x36\\xa7\\xd5\\x6a\\x51\\xa9\\x54\\x16\\x27\\\n\\x94\\x77\\xbe\\xb2\\xd9\\x1c\\x8e\\x9b\\xa1\\x1c\\xec\\x61\\x26\\x7e\\x11\\x96\\\n\\xd3\\x8b\\x19\\xec\\x5b\\x93\\x9e\\x0e\\xb1\\x7c\\x55\\xfb\\x47\\x30\\xdc\\x9d\\\n\\x67\\x9c\\x30\\xee\\x38\\x0e\\xa5\\x52\\xe9\\xb8\\xf9\\x7b\\x39\\xe5\\x01\\xd4\\\n\\xf6\\xda\\x2d\\xff\\x63\\xfb\\x0f\\x32\\xc7\\xb5\\x28\\x7a\\x5a\\xd6\\x20\\x14\\\n\\x42\\xc2\\x95\\xd8\\x2a\\x6c\\xdb\\xc6\\xf7\\x5b\\x34\\x1a\\x8d\\xa3\\x17\\x1a\\\n\\xc7\\x59\\x5e\\x21\\xd0\\xa5\\x4a\\xee\\x15\\x2f\\x4d\\x43\\xbb\\x18\\xd7\\xbf\\\n\\x17\\xe2\\x65\\xcc\\x83\\x8a\\xea\\xd8\\xcd\\xaf\\x91\\x35\\x0e\\x51\\x0a\\x76\\\n\\x31\\x3b\\xef\\x63\\x18\\x06\\x96\\x65\\x9d\\xd5\\x3e\\xac\\xd6\\x30\\x61\\x14\\\n\\x45\\x54\\x2a\\x65\\x5a\\x2d\\x8f\\x44\\xc2\\x41\\xd3\\x34\\x0c\\xc3\\x20\\x93\\\n\\xc9\\x90\\x4c\\xe7\\xa9\\x44\\xbb\\x99\\x89\\x5f\\x82\\xe9\\xf4\\x60\\x06\\xfb\\\n\\x21\\x6a\\xca\\x09\\xb5\\x01\\xcc\\x9a\\x3f\\x41\\x32\\x5d\\x20\\x91\\x38\\x7d\\\n\\xb9\\x83\\xa5\\x82\\xcb\\xd5\\x6a\\xf5\\x98\\x70\\xf5\\x10\\xaa\\xbf\\x7f\\x0d\\\n\\xaf\\x14\\x3e\\x29\\x6d\\x9c\\xf1\\xe6\\x55\\xa4\\xd3\\x19\\x99\\x7f\\x25\\x84\\\n\\x84\\x2b\\xb1\\x55\\x24\\x93\\x49\\x9a\\xcd\\x06\\xed\\x76\\x9b\\x66\\xb3\\x41\\\n\\xb5\\x5a\\xc5\\xb6\\x97\\xd7\\x8b\\xb5\\x14\\xb0\\x6a\\x7e\\x8a\\xb2\\x72\\x39\\\n\\xa9\\xe0\\x5b\\x10\\x35\\x96\\xf5\\xba\\x8a\\x3f\\x4e\\xca\\xfb\\x02\\x6e\\x42\\\n\\x65\\xaa\\x5a\\xa0\\x56\\x6f\\x61\\xdb\\x67\\x37\\x1f\\x6b\\xb5\\x86\\x09\\xe1\\\n\\xe9\\xeb\\x75\\x76\\x7a\\xd9\\x74\\x5d\\x27\\x95\\x4a\\x91\\xce\\x16\\xa8\\xc6\\\n\\x7b\\x98\\x0a\\x5f\\x84\\x9e\\xe8\\x84\\x2c\\x45\\x42\\xd6\\xfa\\x7d\\xf0\\x9a\\\n\\x23\\xcc\\x6a\\xaf\\x20\\x9b\\xcd\\x2d\\x2b\\xac\\x9b\\xa6\\x45\\xb9\\x5c\\x26\\\n\\x8a\\x3a\\xf3\\x06\\xf3\\xd1\\xd7\\x50\\xdb\\x63\\x6b\\xba\\xcd\\x4a\\x7b\\x12\\\n\\xdb\\xc9\\x30\\xd3\\x18\\x94\\x25\\x72\\x84\\x90\\x70\\x25\\xb6\\x8a\\xa5\\x80\\\n\\x54\\xaf\\xd7\\x09\\x82\\x80\\x30\\x0c\\x57\\xd4\\x8b\\xa5\\x28\\x4a\\x27\\xa0\\\n\\x05\\x0e\\x73\\xd1\\x55\\xa4\\xe3\\x87\\x50\\xc2\\xd2\\x32\\x5f\\x3d\\x44\\x6b\\\n\\x7e\\x8f\\x6c\\x70\\x27\\x9a\\x91\\xe2\\xf0\\x7c\\x92\\x76\\x10\\x92\\x48\\x38\\\n\\x67\\x35\\x1f\\x6b\\xb5\\x86\\x09\\x01\\xea\\xf5\\x3a\\x95\\x4a\\x05\\xcb\\xb2\\\n\\x8e\\x3e\\x42\\xaf\\xaa\\x2a\\xae\\x9b\\x24\\x9b\\x2b\\xd2\\x54\\x2f\\x64\\x3a\\\n\\xbc\\x01\\xc5\\xec\\xc5\\x8a\\x26\\x51\\xa2\\x8a\\x9c\\x5c\\x6b\\x2c\\x70\\xaf\\\n\\xa7\\xc4\\xd5\\xe4\\xf3\\x85\\x65\\xdf\\x1c\\x44\\x51\\x44\\xa3\\xd1\\xb9\\x21\\\n\\x28\\x84\\xff\\xb2\\x66\\x73\\xae\\x8e\\x65\\xb4\\xbe\\x47\\xd3\\xb8\\x86\\x56\\\n\\x9c\\x96\\xfa\\x57\\x42\\x48\\xb8\\x12\\x5b\\x45\\x67\\x2d\\xc1\\x14\\xd5\\x6a\\\n\\xe5\\xe8\\x5d\\xfc\\x52\\x2f\\xd6\\x72\\x16\\x65\\xee\\x04\\xac\\x14\\xed\\xc8\\\n\\x62\\xba\\x7d\\x35\\x19\\xed\\x49\\x94\\xf6\\xcc\\xf2\\x37\\x20\\xf2\\x30\\x9b\\\n\\xf7\\x92\\xe3\\x5b\\xf8\\x4a\\x91\\x89\\xb9\\x4e\\xc1\\x4c\\xdb\\xb6\\x57\\x7c\\\n\\x27\\xbf\\x34\\x4c\\x18\\xc7\\x51\\xd7\\x17\\x7f\\x0e\\xc3\\x90\\x72\\xb9\\x8c\\\n\\xef\\xfb\\x38\\xce\\x53\\x01\\x50\\x55\\xd5\\xce\\xe4\\xf7\\x7c\\x0f\\xbe\\xb1\\\n\\x97\\xa9\\xf8\\x45\\x04\\xc6\\x85\\x58\\x5a\\x0d\\xb5\\x3d\\x29\\x27\\xd8\\x1a\\\n\\xa9\\x25\\x5e\\x49\\x3d\\xde\\x45\\xb1\\xd8\\xb3\\xec\\x21\\x36\\xc3\\x30\\x99\\\n\\x9f\\xef\\x2c\\x01\\x54\\x6c\\xfd\\xc3\\xb2\\x7b\\x5e\\xbb\\x2b\\xc2\\x8d\\x1f\\\n\\x65\\xb2\\x7d\\x3d\\x09\\x27\\x75\\x4e\\x35\\xe1\\x84\\x90\\x70\\x25\\xc4\\x06\\\n\\x0b\\x58\\xc9\\xe4\\xf1\\x01\\xab\\xd3\\x8b\\xd5\\x59\\xf0\\x76\\x39\\xbd\\x58\\\n\\xae\\x9b\\x04\\x35\\xc1\\x44\\xe3\\x0a\\x32\\xe6\\xe4\\x8a\\x6b\\x43\\x29\\x61\\\n\\x89\\x44\\xf3\\xff\\x92\\xd5\\xf6\\x51\\xf6\\xfb\\x98\\x2d\\xc5\\x18\\x86\\xbe\\\n\\xe2\\xf9\\x58\\x4b\\xbd\\x69\\x9d\\x21\\x4f\\xaf\\xeb\\x4b\\xe7\\xb4\\x5a\\x2d\\\n\\x4a\\xa5\\x05\\x54\\xf5\\xf8\\x00\\xa8\\x28\\x0a\\xb6\\x6d\\x93\\xcb\\x15\\xc0\\\n\\x1e\\x61\\x26\\xbc\\x9e\\xaa\\x7e\\x2d\\xb6\\xa5\\xa2\\xf9\\x07\\x91\\x3a\\x54\\\n\\xab\\xf8\\xa1\\x6b\\xf4\\x31\\xa6\\xbd\\x19\\xd0\\xe8\\xed\\xed\\x5b\\x76\\x28\\\n\\xd7\\x34\\x0d\\xcf\\x6b\\xe2\\xfb\\x1e\\x05\\xef\\xe3\\xeb\\xb6\\xfd\\x4a\\x58\\\n\\xc2\\xb5\\x43\\x26\\xea\\xe7\\x91\\xc9\\x64\\xbb\\xba\\x04\\x92\\x10\\x12\\xae\\\n\\x84\\x58\\x47\\x9a\\xa6\\xe1\\xba\\x2e\\x95\\x4a\\xf9\\xb8\\xa7\\xa8\\x1a\\x8d\\\n\\x06\\xd5\\x6a\\x6d\\x59\\x35\\xaa\\x12\\x89\\x04\\x86\\xe5\\x30\\x5e\\x7f\\x06\\\n\\x29\\xab\\x8e\\xd6\\x7a\\x62\\xe5\\x17\\x9a\\xf6\\x04\\x49\\xef\\x0b\\xb8\\x46\\\n\\x89\\x99\\x6a\\x91\\x52\\xb5\\x8d\\x61\\x18\\x2b\\xae\\x68\\x6d\\x18\\x06\\xd9\\\n\\x6c\\xe7\\x42\\xb5\\x34\\xf4\\xd3\\xb5\\x37\\x79\\x1c\\x53\\xaf\\xd7\\xa8\\xd5\\\n\\x6a\\xd8\\xb6\\x7d\\x42\\x6f\\x83\\x69\\x5a\\x64\\xb3\\x59\\x4c\\x77\\x80\\xb9\\\n\\xf0\\x72\\xe6\\xd5\\x1b\\xb1\\x12\\x39\\x8c\\xe0\\x90\\x4c\\x7e\\x5f\\x05\\xa5\\\n\\xf4\\x2f\\x50\\x8f\\x87\\x01\\x28\\x14\\x8a\\x2b\\xae\\xdf\\xe6\\xd7\\x0f\\x93\\\n\\x6d\\x7d\\x7e\\x5d\\xf7\\x41\\x6f\\x3d\\x42\\x64\\x5f\\x42\\xa5\\x95\\x23\\x9d\\\n\\x4e\\xcb\\x41\\x15\\x42\\xc2\\x95\\xd8\\x2a\\x74\\x5d\\xc7\\x71\\x12\\x54\\x2a\\\n\\xc7\\xcf\\x19\\x0a\\xc3\\x80\\x52\\x69\\x01\\x45\\x81\\x44\\xe2\\xf4\\xbd\\x58\\\n\\x96\\x65\\x91\\x70\\x92\\x8c\\x55\\x2f\\xc0\\xb1\\x0d\\x74\\xef\\xa1\\xb3\\x0b\\\n\\x7b\\xad\\x27\\xc8\\xf8\\xff\\x81\\xa9\\xc3\\x44\\x39\\x4f\\xad\\xd1\\xc2\\x34\\\n\\xcd\\x15\\x0d\\x9b\\x28\\x8a\\x82\\xe3\\x38\\xa4\\xd3\\x19\\x7c\\xbf\\x75\\x42\\\n\\x65\\xee\\x73\\x15\\x04\\x01\\xa5\\x52\\x89\\x20\\x68\\x9f\\xb4\\x76\\x57\\x67\\\n\\xf1\\xe9\\x34\\x6e\\xba\\x87\\x52\\x78\\x01\\x53\\xbc\\x04\\xdd\\xd9\\x8d\\xa1\\\n\\xd4\\x50\\xda\\xd3\\x72\\xc2\\x75\\x41\\xe4\\x5c\\xc1\\x38\\x6f\\xa0\\x53\\x61\\\n\\x1d\\x32\\x99\\xcc\\x8a\\x1e\\x8c\\x08\\x82\\x36\\x41\\xf5\\x49\\x92\\xde\\x17\\\n\\xd6\\x7d\\x5f\\x9c\\xe0\\x41\\x8e\\xf0\\x5c\\x74\\x33\\x89\\x65\\xc9\\x75\\x42\\\n\\x08\\x09\\x57\\x62\\xcb\\x30\\x0c\\x13\\xdb\\x4e\\x50\\xad\\x9e\\x38\\x29\\xbb\\\n\\xd1\\x68\\x50\\xab\\xd5\\x70\\x9c\\xd3\\xf7\\x62\\x19\\x86\\x41\\x32\\x99\\xe2\\\n\\x70\\x75\\x08\\xc3\\xee\\xc1\\xf4\\xee\\x3f\\xcb\\xad\\x09\\x31\\x5a\\xdf\\x23\\\n\\x1f\\x7d\\x15\\x45\\x4f\\x31\\x51\\xea\\x0c\\xf5\\x59\\x96\\xb5\\xa2\\x0b\\xa8\\\n\\xa6\\x69\\x64\\x32\\x59\\x4c\\xd3\\xa4\\xd1\\x68\\x74\\x6d\\x7d\\xc2\\x25\\x9e\\\n\\xe7\\xb1\\xb0\\x30\\x8f\\xef\\xfb\\x18\\x86\\x79\\xc2\\xb6\\x69\\x9a\\x46\\x2a\\\n\\x95\\x22\\x93\\xc9\\xd3\\x88\\x77\\x32\\xd9\\xbe\\x1e\\xcf\\xb9\\x11\\xc3\\xce\\\n\\xa1\\x87\\x93\\x10\\xd5\\xe5\\xc4\\x3b\\xab\\x93\\xb5\\x9f\\xd1\\xc4\\xef\\x11\\\n\\xc6\\x4f\\x0d\\x1d\\x27\\x93\\x49\\x4c\\x73\\xf9\\x43\\xc9\\xad\\x96\\x47\\x54\\\n\\xff\\x21\\x8e\\xf7\\x7f\\x37\\x40\\x52\\xf4\\x48\\x19\\xb3\\x8c\\x37\\x2e\\x27\\\n\\x9b\\xcd\\xc9\\xf0\\xa0\\x10\\x12\\xae\\xc4\\x56\\x62\\x9a\\x26\\x8e\\xe3\\x50\\\n\\xad\\x56\\x4f\\x08\\x22\\x41\\x10\\x9c\\x50\\x9e\\xe0\\x64\\x3a\\x25\\x0b\\xd2\\\n\\x4c\\x55\\x7b\\x88\\xad\\x3d\\x24\\x5a\\xf7\\x72\\xd6\\xf3\\x8e\\xa2\\x26\\x96\\\n\\x77\\x2f\\xb9\\xf8\\x1e\\x14\\x2d\\xc9\\xe1\\xf9\\x04\\x9e\\xe7\\xaf\\x38\\x64\\\n\\xd9\\xb6\\x4d\\x36\\x9b\\x23\\x08\\xc2\\x13\\x2a\\x74\\x77\\xc3\\xd2\\x7c\\xac\\\n\\x7a\\xbd\\x8e\\xaa\\xaa\\x98\\xa6\\x79\\x5c\\xfb\\x74\\x9e\\x30\\x74\\xc9\\xe5\\\n\\xf2\\x44\\x4a\\x9a\\x59\\x6f\\x0f\\xb3\\xea\\xcd\\x90\\xbc\\x02\\x53\\x57\\x16\\\n\\x4b\\x01\\xc8\\xdc\\xac\\x65\\x51\\x1d\\xa6\\x32\\x7f\\x44\\x23\\x28\\x1c\\xf7\\\n\\x63\\xc7\\x71\\xce\\x58\\xe7\\xea\\x58\\xa5\\x52\\x09\\xd7\\xfb\\x0a\\x86\\xf7\\\n\\xbd\\x8d\\xb1\\x5b\\xfe\\x28\\x46\\x62\\x07\\xe5\\xf6\\x90\\x54\\x6f\\x17\\x42\\\n\\xc2\\x95\\xd8\\x72\\x9d\\x02\\x86\\x89\\xeb\\x3a\\x54\\x2a\\x95\\x93\\xf6\\xf4\\\n\\x34\\x1a\\xf5\\xc5\\x5e\\xac\\x53\\x3f\\x51\\xa8\\x69\\x1a\\xe9\\x74\\x86\\xf9\\\n\\x46\\x96\\x96\\xf1\\x0c\\xdc\\xf6\\xb7\\xce\\x69\\xe9\\x18\\x25\\xac\\x62\\x35\\\n\\xef\\x21\\x17\\x7f\\x03\\x54\\x97\\xc3\\xf3\\x09\\x7c\\xbf\\x8d\\x6d\\xdb\\xcb\\\n\\x7e\\x42\\x6c\\xe9\\xe9\\x48\\xc7\\x71\\x68\\x36\\x9b\\x5d\\x2f\\xdb\\xd0\\x09\\\n\\xa0\\x6d\\xaa\\xd5\\x0a\\xe5\\x72\\x99\\x30\\x8c\\x30\\x0c\\xe3\\xb8\\xed\\x5b\\\n\\x0a\\xa6\\xb9\\x5c\\x0e\\xc7\\x71\\xa8\\x07\\x79\\xa6\\xfd\\xcb\\xa9\\x58\\xaf\\\n\\x40\\x77\\x76\\x62\\x28\\x55\\x94\\x60\\x56\\x4e\\xc2\\x53\\x9e\\x08\\x3a\\x0b\\\n\\xf9\\xb7\\xb3\\xd0\\xde\\x73\\xc2\\xff\\xb2\\x2c\\xab\\xf3\\x70\\xc5\\x32\\xcd\\\n\\xce\\x4e\\x53\\xa8\\xbe\\x0f\\x25\\xaa\\x6d\\x98\\xdd\\xb3\\xfc\\x87\\x98\\xe5\\\n\\x85\\x24\\xdc\\x9c\\x3c\\x3d\\x28\\x84\\x84\\x2b\\xb1\\xf5\\x02\\x96\\x41\\x32\\\n\\xe9\\x9e\\xb4\\x07\\xab\\x13\\x22\\x3a\\x73\\x8e\\x4e\\xd7\\x8b\\xa5\\xaa\\x2a\\\n\\xe9\\x74\\x86\\x8a\\x97\\x62\\x9e\\x67\\x93\\x52\\x1e\\x3d\\xe7\\x7a\\x42\\x4a\\\n\\x58\\x59\\x0c\\x59\\xf7\\x12\\xab\\x2e\\xe3\\x73\\x09\\x82\\x20\\xc0\\xb2\\x96\\\n\\x1f\\xb2\\x4c\\xd3\\x24\\x9b\\xcd\\xa2\\x28\\x74\\x7d\\xc2\\xfb\\x92\\xa5\\x3a\\\n\\x4a\\x0b\\x0b\\xf3\\xd4\\x6a\\x55\\xa2\\xe8\\xf8\\xa0\\xa5\\x28\\x0a\\xa6\\x69\\\n\\x92\\x4e\\x67\\xc8\\xe5\\x72\\xa0\\x5a\\xcc\\x79\\x3b\\x38\\xc2\\x0d\\x78\\xce\\\n\\x0d\\x18\\x89\\x1d\\xe8\\x4a\\x03\\x25\\x38\\x22\\x27\\xe3\\xd1\\x83\\x6f\\x32\\\n\\x97\\xfd\\x7d\\x8e\\xb4\\x2f\\x39\\xe5\\x39\\xbb\\xdc\\x09\\xe1\\x8d\\x46\\x83\\\n\\xa8\\x7c\\x2f\\x6e\\xfd\\xf3\\x1b\\x6b\\x1f\\xe3\\x36\\x09\\x5b\\x63\\xaa\\x71\\\n\\xc1\\xe2\\x39\\x2a\\xc5\\x45\\x85\\x90\\x70\\x25\\xb6\\x14\\x5d\\x37\\x48\\x26\\\n\\x93\\xa7\\xec\\xc1\\x82\\x4e\\x91\\xcd\\x7a\\xbd\\x7e\\xca\\xba\\x58\\x4b\\xc5\\\n\\x4a\\xdb\\x91\\xcd\\x54\\xeb\\x1a\\x52\\xd6\\x02\\x9a\\x7f\\xe0\\xdc\\xaf\\xb3\\\n\\x61\\x05\\xab\\x79\\x37\\xb9\\xf8\\x5e\\x22\\xc5\\x65\\x7c\\xce\\xc6\\xf7\\xdb\\\n\\x98\\xa6\\xb9\\xac\\xe1\\x42\\x45\\x51\\x70\\x5d\\x97\\x74\\x3a\\x8d\\xe7\\x79\\\n\\x04\\x41\\xb0\\x6a\\xed\\x18\\x04\\x01\\xf5\\x7a\\x9d\\xf9\\xf9\\x79\\x1a\\x8d\\\n\\x3a\\x10\\x63\\x18\\xe6\\xd3\\xea\\x65\\xb9\\xe4\\xf3\\x79\\x6c\\x3b\\x41\\x2b\\\n\\x4c\\x70\\xc4\\xdb\\xc5\\xbc\\x7a\\x23\\x7e\\xfa\\x16\\x4c\\x77\\x18\\x4d\\x69\\\n\\x6d\\xef\\x89\\xf0\\x6a\\x92\\xc9\\xd4\\xef\\x53\\x8a\\x2e\\x3a\\xf5\\x5f\\x51\\\n\\x55\\xb2\\xd9\\xdc\\xb2\\x7e\\xdd\\xc4\\xc4\\x04\\x45\\xff\\x33\\x68\\xad\\x27\\\n\\x37\\xde\\xfb\\xce\\x7f\\x9c\\xaa\\xf1\\x02\\x22\\x25\\x89\\xe3\\x38\\xf2\\x41\\\n\\x24\\x24\\x5c\\x49\\xb8\\x12\\x5b\\x2f\\x60\\xe9\\x8b\\x75\\xb0\\xaa\\x47\\xeb\\\n\\x60\\x9d\\x2c\\x3c\\x74\\x7a\\xb1\\xd4\\x93\\xf6\\x62\\x75\\x82\\x4c\\x12\\x45\\\n\\x33\\x19\\xaf\\x5f\\x82\\x9d\\x48\\x63\\xb6\\xbe\\xdb\\x9d\\xce\\x8c\\xb0\\xdc\\\n\\x09\\x59\\xdc\\x07\\x6a\\x92\\xf1\\xf9\\x04\\xcd\\xa6\\x87\\x61\\x18\\xcb\\x1a\\\n\\x56\\xd1\\x75\\x9d\\x4c\\x26\\x8b\\xae\\x1b\\x34\\x9b\\xcd\\xae\\x4f\\x78\\x7f\\\n\\xba\\x76\\xbb\\x4d\\xad\\x56\\x63\\x6e\\x6e\\xee\\x68\\x75\\x7c\\x55\\x55\\xd1\\\n\\x75\\x1d\\x45\\x51\\xb0\\x2c\\x8b\\x4c\\x26\\xb3\\xd8\\x6b\\xa1\\x52\\x6b\\x2a\\\n\\x2c\\xf8\\xc3\\xcc\\x2b\\x2f\\xa4\\x99\\xbc\\x15\\xcd\\x19\\x41\\x57\\x23\\x94\\\n\\xf6\\x14\\x10\\x6f\\x8b\\x73\\x30\\x32\\x87\\x19\\xb3\\x7e\\x87\\x86\\x72\\xde\\\n\\x19\\xff\\x6e\\xa1\\x50\\x38\\xe3\\xdf\\xa9\\xd7\\xeb\\x2c\\x1c\\x19\\xa7\\x58\\\n\\x7f\\xff\\x32\\x16\\x1e\\x5f\\x97\\x3d\\xc6\\x35\\x3d\\x26\\x9a\\xcf\\x20\\x93\\\n\\x91\\xb5\\x07\\x85\\x90\\x70\\x25\\xb6\\x6c\\xc0\\x4a\\xa5\\x52\\x47\\x87\\xb7\\\n\\x4e\\x77\\xd1\\xaa\\xd7\\xeb\\x38\\x8e\\x83\\xa6\\x9d\\xd8\\x7b\\x94\\x48\\x24\\\n\\xb0\\x6d\\x8b\\x89\\x4a\\x3f\\x91\\x7d\\xc9\\xe2\\x3c\\x2c\\xbf\\x2b\\xdb\\xa8\\\n\\x84\\x65\\xcc\\xe6\\x5d\\xe4\\xb8\\x0f\\x55\\x4f\\x33\\x31\\x6f\\x53\\xab\\xd5\\\n\\xd1\\x34\\xfd\\x84\\xc9\\xe5\\x27\\xfc\\xdb\\xa3\\xf3\\xa0\\xf2\\xa8\\xaa\\x82\\\n\\xe7\\x79\\xab\\x1e\\xb2\\x3a\\xa1\\xb4\\x4d\\xa3\\x51\\xa7\\x54\\x5a\\xa0\\x54\\\n\\x5a\\xc0\\xf7\\x3b\\x0b\\x50\\x2f\\x2d\\x16\\xed\\xba\\x9d\\xde\\x2c\\xd3\\xb4\\\n\\xf0\\xfd\\x36\\x9e\\xaf\\x50\\x0d\\x87\\x99\\x57\\x9e\\x47\\xd9\\x7a\\x05\\xb1\\\n\\xb3\\x17\\xcd\\xcc\\xa1\\x46\\x75\\x94\\xa8\\xba\\x25\\xcf\\x3d\\x2f\\xf3\\x3a\\\n\\x0e\\x6a\\xbf\\x48\\xa0\\x9c\\x39\\x34\\x45\\x51\\x44\\xa1\\x50\\x38\\xe3\\x50\\\n\\xda\\xc4\\xc4\\x04\\x79\\xe5\\x1b\\x58\\x8d\\xaf\\x6f\\xd8\\xfd\\x56\\xfd\\xfd\\\n\\xf8\\x89\\xe7\\x50\\xf3\\x13\\xa4\\xd3\\x19\\xf9\\x10\\x12\\x12\\xae\\x24\\x5c\\\n\\x89\\xad\\xa8\\x53\\x52\\x20\\x4d\\xad\\x56\\x3b\\xed\\x44\\xf0\\xa5\\x5e\\xac\\\n\\x38\\xe6\\xa4\\xbd\\x58\\x96\\x65\\x91\\x4c\\xa6\\x98\\xad\\x26\\xa8\\x19\\xd7\\\n\\x93\\xe6\\xe1\\x15\\xac\\x49\\xb8\\xcc\\x90\\xd5\\xb8\\x8b\\x7c\\xf4\\x9f\\x18\\\n\\xba\\xca\\x54\\x29\\x49\\xa9\\xd2\\x44\\x55\\x55\\x2c\\xcb\\x3a\\x63\\xc8\\x72\\\n\\x1c\\x97\\x5c\\x2e\\x47\\x1c\\x77\\xca\\x2c\\xac\\x59\\x5f\\x45\\x14\\xe1\\x79\\\n\\x1e\\x95\\x4a\\x85\\xf9\\xf9\\xb9\\xa3\\x4f\\x1e\\xfa\\x7e\\x6b\\xb1\\x02\\x7c\\\n\\xa7\\xc4\\xc0\\x52\\xbd\\xae\\x08\\x83\\x46\\x3c\\x48\\x89\\x2b\\x99\\xd7\\x6f\\\n\\xa1\\x9e\\x78\\x29\\xaa\\x73\\x01\\x9a\\x99\\x44\\x0d\\x4b\\x9b\\xbc\\x60\\xa9\\\n\\x42\\x3b\\x71\\x1d\\xd3\\xf6\\xcf\\x33\\xcb\\x0d\\xc0\\xf2\\x7b\\x6e\\xce\\x54\\\n\\xeb\\x6a\\x61\\x61\\x81\\x6a\\x69\\x8a\\xfe\\xe6\\x07\\xba\\x7a\\xde\\xad\\x06\\\n\\x47\\x9b\\x63\\xaa\\xfd\\x6c\\x5c\\xd7\\x95\\xc9\\xed\\x42\\xc2\\xd5\\x31\\xe1\\\n\\x4a\\x69\\xdc\\x79\\xdb\\xd1\\xdb\\x5f\\xfb\\xb9\\x1f\\x42\\xb1\\xb2\\xd2\\x4a\\\n\\x62\\x53\\x0b\\x82\\x80\\x43\\x87\\x0e\\x1d\\xed\\x65\\x39\\x1d\\xc3\\x30\\xe8\\\n\\xeb\\xeb\\x23\\x95\\x3a\\x71\\x92\\x71\\xbb\\xdd\\x66\\x7c\\x7c\\x8c\\xb6\\xb7\\\n\\xc0\\xae\\xe8\\xc3\\xe8\\xf5\\x7b\\x56\\xa9\\x0b\\xc0\\xc1\\x4b\\xbe\\x9c\\x19\\\n\\x5e\\x46\\xa0\\xf5\\x91\\xcf\\x17\\xc8\\xe5\\x96\\x57\\x47\\xa8\\xdd\\x6e\\x73\\\n\\xe4\\xc8\\x2c\\xa5\\x52\\x69\\xd3\\x1d\\xa7\\x94\\x3e\\x4d\\x5a\\x79\\x04\\x2b\\\n\\x78\\x1c\\xad\\xf5\\x18\\x4a\\xeb\\x20\\x1b\\x7d\\x18\\x31\\xd6\\x73\\x34\\x13\\\n\\x37\\x33\\x13\\xdf\\x80\\xaf\\xf4\\x9c\\xd5\\xef\\x18\\x19\\xd9\\x7d\\xca\\x72\\\n\\x0c\\x8d\\x46\\x83\\x43\\x87\\x0e\\xb2\\x87\\x0f\\xa3\\x57\\xbf\\xb2\\x29\\x8e\\\n\\xe3\\x91\\xdc\\x3b\\xf1\\xcc\\xab\\xd8\\xb5\\x6b\\x44\\x3e\\x7c\\xc4\\xb6\\x15\\\n\\x35\\x67\\x69\\xdd\\xfb\\xd6\\xc5\\x70\\xa5\\x4b\\xb8\\x12\\x5b\\x37\\x60\\x8d\\\n\\x8e\\x8e\\x2e\\xbb\\x5e\\x94\\xeb\\xba\\xf4\\xf5\\xf5\\x9f\\xb0\\x56\\x60\\x14\\\n\\x45\\x4c\\x4c\\x1c\\xa6\\x5a\\xad\\x30\\xa8\\xfc\\x33\\x6e\\xe5\\x6f\\x57\\x71\\\n\\xab\\x55\\x82\\xd4\\x8b\\x98\\x37\\x6e\\xa5\\x12\\xee\\x22\\x93\\xc9\\x90\\xcb\\\n\\xe5\\x97\\xb5\\x7e\\x61\\xab\\xd5\\x62\\x76\\x76\\x86\\x6a\\x75\\xf3\\x0e\\xbd\\\n\\xa9\\xb1\\x4f\\x52\\x3f\\x8c\\x13\\x1f\\xc4\\x8a\\xf6\\x61\\xf8\\x4f\\xa0\\xb6\\\n\\xf6\\x03\\xe1\\xba\\x6e\\x57\\x64\\x9f\\x4f\\x60\\x5d\\x46\\x4d\\xbd\\x94\\xb9\\\n\\xe0\\x52\\x62\\xf4\\x73\\xfa\\x7d\\xe7\\x9f\\x7f\\xc1\\x49\\x7b\\x79\\x82\\x20\\\n\\xe0\\xc0\\x81\\xfd\\xf4\\xf2\\x65\\x92\\x0b\\x1f\\xdc\\x3c\\x17\\x95\\xc4\\x45\\\n\\x3c\\xa9\\xff\\x31\\xc3\\xc3\\xbb\\x56\\x54\\x66\\x42\\x08\\x09\\x57\\x42\\x6c\\\n\\x42\\x61\\x18\\x32\\x3a\\x3a\\x8a\\xe7\\x2d\\x7f\\xf8\\xa9\\x50\\x28\\x50\\x2c\\\n\\xf6\\x1c\\xd7\\x6b\\x14\\xc7\\x31\\xb3\\xb3\\xb3\\xcc\\xcd\\x1d\\x21\\xaf\\x7c\\\n\\x87\\x62\\xed\\xbd\\xab\\x3e\\xa4\\x15\\xbb\\x57\\x52\\x75\\x5e\\xc3\\x8c\\xff\\\n\\x0c\\x6c\\x3b\\x41\\x36\\xdb\\x59\\xd3\\xed\\x4c\\x73\\x75\\x9a\\xcd\\x26\\x33\\\n\\x33\\x33\\x8b\\x4f\\xfc\\x6d\\x7e\\x0a\\x6d\\x2c\\x66\\x48\\xa8\\xf3\\xd8\\xea\\\n\\x11\\xcc\\x78\\x06\\x3d\\x9c\\x46\\x69\\x4f\\xa0\\xfa\\x87\\xbb\\x5b\\x3d\\x5e\\\n\\xb1\\x88\\x8d\\x7e\\x42\\xbd\\x17\\x5f\\x3b\\x8f\\xba\\x7a\\x11\\xd5\\xe8\\x3c\\\n\\x02\\xdc\\xee\\xbd\\x84\\xa2\\xb0\\x77\\xef\\x45\\x27\\x1c\\xc7\\x38\\x8e\\x39\\\n\\x74\\xe8\\x20\\xa6\\xff\\x08\\x7d\\xe5\\xdf\\xd8\\xa0\\x93\\xd8\\x4f\\xad\\x94\\\n\\xfb\\x6d\\x2a\\xfa\\xf3\\xd9\\xbd\\x7b\\x8f\\x7c\\xf0\\x08\\x09\\x57\\x8a\\x7e\\\n\\x8e\\xb7\\x60\\x42\\x6c\\x60\\x9a\\xa6\\x31\\x3c\\x3c\\xcc\\xd8\\xd8\\x18\\xcd\\\n\\xe6\\xf2\\x6a\\x45\\xcd\\xcd\\xcd\\x51\\x2e\\x97\\xe9\\xed\\xed\\x23\\x93\\xc9\\\n\\x1c\\xbd\\x20\\xf6\\xf6\\xf6\\x62\\x59\\x26\\x13\\x13\\xd0\\x74\\x6f\\x67\\xc8\\\n\\x7b\\x17\\x4a\\x7b\\x62\\xf5\\x42\\x45\\xfd\\xbb\\xa4\\xeb\\xdf\\x25\\x6d\\x0d\\\n\\xe3\\x59\\xaf\\x63\\x76\\xee\\xb9\\x4c\\x4f\\x4f\\x91\\xcd\\x66\\xc9\\x66\\x73\\\n\\xa7\\x5c\\x28\\x3a\\x91\\x48\\xb0\\x6b\\xd7\\x2e\\xea\\xf5\\x1a\\x33\\x33\\x33\\\n\\x6b\\x3a\\x27\\x6b\\x55\\x42\\x26\\x06\\x1e\\x83\\x78\\xd1\\xe0\\xf1\\xc5\\xe1\\\n\\x8d\\xce\\x97\\x16\\xd7\\xd0\\xe2\\x12\\xba\\xd2\\x40\\x57\\x9a\\xe8\\x34\\xd1\\\n\\x94\\x26\\x5a\\xdc\\x40\\xa3\\x8e\\x8a\\x87\\xa2\\x68\\xa0\\x18\\x44\\xb1\\x4e\\\n\\x8c\\x4a\\x14\\x6b\\xc4\\xe8\\x44\\x18\\xb4\\xc9\\xd3\\x56\\x0a\\xb4\\x94\\x02\\\n\\xed\\xe8\\x69\\xbd\\x2e\\xab\\x50\\x8c\\xde\\x30\\x8c\\x93\\x06\\xe4\\xa9\\xa9\\\n\\x49\\x82\\xd6\\x2c\\x43\\x8d\\xdb\\x37\\x5d\\xb0\\x02\\xc8\\xd4\\x3f\\xc1\\xac\\\n\\x75\\x15\\xd5\\x6a\\x55\\x2a\\xb7\\x0b\\x01\\xd2\\x73\\x25\\xb6\\xc1\\x1d\\x45\\\n\\x14\\x31\\x3e\\x3e\\x46\\xbd\\xbe\\xb2\\x5e\\x8e\\x44\\xc2\\xa1\\xbf\\xbf\\x1f\\\n\\xdb\\x7e\\xea\\x21\\x8f\\x46\\xa3\\xc1\\xf8\\xf8\\x18\\x04\\x65\\x76\\x45\\x1f\\\n\\x40\\x6f\\x7c\\x7b\\x6d\\x76\\x42\\x75\\x09\\xb3\\x37\\x53\\xd6\\x5f\\xc2\\x9c\\\n\\xd7\\x8f\\xeb\\xba\\x64\\xb3\\x39\\x92\\xc9\\xe4\\x69\\x7b\\xb3\\x2a\\x95\\x0a\\\n\\xb3\\xb3\\x33\\xf8\\xbe\\x2f\\x27\\xc2\\x06\\xe0\\xba\\x2e\\xc3\\xc3\\xbb\\x9e\\\n\\x0a\\x8f\\x71\\xcc\\xf4\\xf4\\x14\\xd5\\xd2\\x04\\x23\\xc1\\x7b\\x50\\x1b\\x0f\\\n\\x6c\\xda\\x7d\\xab\\xe5\\x7e\\x81\\x39\\xed\\x66\\x76\\xef\\xde\\x23\\x85\\x45\\\n\\xc5\\xf6\\xbb\\xce\\x3c\\xad\\xe7\\x4a\\x9e\\x16\\x14\\x5b\\xff\\x0e\\x42\\x51\\\n\\x48\\xa5\\xd2\\xb4\\x5a\\xde\\x8a\\x42\\x46\\x10\\xb4\\x29\\x95\\x16\\x08\\xc3\\\n\\x80\\x44\\xc2\\x41\\x55\\x55\\x0c\\xc3\\x20\\x95\\x4a\\x53\\xad\\xfb\\x1c\\x89\\\n\\xaf\\x23\\x61\\x06\\x18\\xfe\\x23\\xab\\xbf\\x13\\x71\\x1b\\xb5\\xf9\\x08\\x89\\\n\\xfa\\x1d\\xe4\\xd5\\xef\\x62\\x68\\x2a\\x47\\xaa\\x09\\x8e\\xcc\\xd7\\x88\\xe3\\\n\\x08\\xd3\\xb4\\x4e\\x3a\\x01\\xde\\xb2\\x2c\\x72\\xb9\\x1c\\xba\\x6e\\xe0\\x79\\\n\\xde\\x69\\xcb\\x54\\x88\\xd5\\x97\\x4a\\xa5\\x49\\x26\\x93\\x47\\x83\\xd5\\xd4\\\n\\xd4\\x24\\xed\\xea\\x63\\x0c\\x37\\xdf\\x81\\xea\\x3d\\xba\\xa9\\xf7\\xcd\\x6c\\\n\\x3f\\xce\\x9c\\xfa\\x52\\x0c\\xd3\\x39\\xee\\x86\\x44\\x88\\xed\\x40\\x4a\\x31\\\n\\x88\\x6d\\x1b\\xb0\\xd2\\xe9\\x34\\xad\\x56\\x6b\\xc5\\xbd\\x38\\x9e\\xe7\\x51\\\n\\x2a\\x95\\xd0\\x34\\x0d\\xcb\\xb2\\x17\\x8b\\x7a\\x66\\xf0\\xbc\\x16\\x73\\xed\\\n\\x8b\\xc1\\x1a\\xc4\\x69\\x3f\\xc0\\x5a\\x4d\\xbc\\x56\\x82\\x39\\x8c\\xc6\\xbd\\\n\\x64\\x5a\\xff\\x4a\\xda\\x3c\\x42\\x33\\x30\\x39\\x3c\\x1b\\xd3\\x6c\\x76\\xe6\\\n\\x81\\x3d\\xbd\\x66\\xd6\\xb1\\x6b\\x05\\x6a\\x9a\\xba\\x26\\x85\\x48\\xc5\\xc9\\\n\\xe5\\x72\\x79\\x6c\\xdb\\x26\\x8e\\x63\\x26\\x27\\x27\\x30\\xea\\x5f\\xa7\\xaf\\\n\\xf2\\xfb\\x5b\\x63\\x09\\xa1\\xd8\\xc3\\x76\\x8b\\x1c\\xf1\\x76\\x92\\xcb\\xe5\\\n\\xe5\\x60\\x0b\\x09\\x57\\x12\\xae\\xc4\\x76\\x09\\x58\\xa9\\x54\\x1a\\xdf\\x6f\\\n\\xd3\\x6a\\xb5\\x56\\xf6\\xc6\\x89\\x63\\x6a\\xb5\\x1a\\xb5\\x5a\\x0d\\xdb\\xb6\\\n\\x8f\\xae\\xb9\\x17\\x86\\x21\\xf3\\x5e\\x2f\\x0d\\xeb\\x7a\\x52\\xca\\x13\\x28\\\n\\xc1\\xfc\\x1a\\xee\\x51\\x88\\xda\\x7a\\x12\\xa7\\xf1\\x65\\xf2\\xf1\\x37\\x30\\\n\\xd4\\x36\\xa5\\x46\\x8a\\xe9\\x23\\x55\\x5a\\xad\\xd6\\xd1\\x9e\\xb6\\xa5\\xa0\\\n\\xd5\\xa9\\x91\\xe5\\x90\\xcb\\xe5\\x50\\x94\\xb5\\x2b\\x44\\x2a\\x8e\\x0f\\x57\\\n\\x51\\x14\\x71\\xf8\\xf0\\x18\\xb9\\xe6\\xa7\\x48\\x97\\x3e\\x00\\x71\\x7b\\xcb\\\n\\xec\\x9f\\x1e\\x4d\\x33\\xc3\\x4b\\x71\\x1c\\xf7\\x94\\xf3\\x02\\x85\\x90\\x70\\\n\\x25\\xc4\\x96\\x0c\\x58\\x29\\x82\\x20\\x38\\xab\\xc9\\xde\\x4b\\x05\\x48\\xdb\\\n\\xed\\x36\\x8e\\xe3\\x90\\x4e\\x77\\x96\\xfe\\x28\\xd5\\x54\\x16\\xb4\\x1b\\x70\\\n\\xed\\x18\\xbd\\xf5\\xc8\\xda\\xef\\x57\\x58\\xc1\\xf0\\xbe\\x43\\xba\\xf9\\x79\\\n\\x72\\xd6\\x04\\xaa\\xaa\\x32\\x57\\xb3\\x99\\x3d\\xb2\\x40\\x10\\x04\\x47\\x2b\\\n\\xaa\\x43\\x67\\x7d\\xbb\\xce\\x9c\\xad\\xce\\xfc\\xca\\xcd\\x3e\\xe9\\x7d\\x33\\\n\\xa9\\xd7\\xeb\\x54\\x4b\\x87\\x19\\x6a\\xbd\\x1b\\xb3\\xfa\\x6f\\x5b\\xef\\xfd\\\n\\x15\\x56\\x88\\x9c\\xcb\\x68\\x84\\x05\\xa9\\xda\\x2e\\xb6\\x75\\xb8\\x92\\xa7\\\n\\x05\\xc5\\xb6\\x0c\\x58\\xfd\\xfd\\x3b\\x50\\x14\\x85\\x85\\x85\\x85\\xb3\\xfa\\\n\\x1d\\xe5\\x72\\x89\\x4a\\xa5\\x4c\\x2e\\x97\\xa7\\x50\\x28\\x60\\x9a\\x26\\xe3\\\n\\xe3\\x63\\x8c\\xc6\\xb7\\x91\\xcb\\x5c\\x46\\x4f\\xed\\xfd\\x10\\x2e\\xac\\xc3\\\n\\xde\\x45\\x28\\x95\\xaf\\xe1\\x56\\xbe\\x86\\xab\\x58\\xc4\\xe9\\xe7\\xd3\\xf0\\\n\\x9e\\xcf\\x74\\xfd\\x99\\x84\\xb1\\x49\\x26\\x93\\x21\\x95\\x4a\\x63\\x59\\x16\\\n\\xba\\xae\\xd3\\xd7\\xd7\\x47\\xa1\\x50\\xe0\\xc8\\x91\\xd9\\xb3\\x6e\\x0b\\xb1\\\n\\x7c\\x59\\x1e\\x24\\xd7\\xfc\\x2b\\x14\\x7f\\x7c\\xeb\\xee\\x63\\xf0\\x65\\x0e\\\n\\x54\\x2f\\xa1\\xdd\\x6e\\x4b\\xd5\\x76\\xb1\\x7d\\xaf\\x33\\xf2\\xb4\\xa0\\xd8\\\n\\xce\\x8e\\x1c\\x39\\xc2\\xec\\xec\\xcc\\x39\\x87\\xb5\\xa5\\xf5\\xf5\\x26\\x27\\\n\\x3b\\xe5\\x19\\x0c\\xca\\xec\\x0c\\x3f\\x82\\xde\\xb8\\x7f\\x83\\xbc\\xd3\\x2d\\\n\\xe2\\xf4\\xf3\\x68\\xd8\\x2f\\x60\\x3e\\x7c\\x26\\xed\\x50\\xc7\\x75\\x5d\\x5c\\\n\\x37\\x89\\xeb\\xba\\xe8\\xba\\xbe\\xa9\\xab\\xbd\\x6f\\x74\\x79\\xfd\\x31\\xf2\\\n\\xde\\xa7\\x50\\x9b\\x0f\\x6f\\x83\\xbd\\xd5\\x38\\x90\\xfe\\x6b\\xd2\\xf9\\xf3\\\n\\xe9\\xed\\xed\\x95\\x83\\x2f\\xb6\\x05\\xa9\\x73\\x25\\xc4\\x31\\x8a\\xc5\\x22\\\n\\xa6\\x69\\x32\\x31\\x71\\xf8\\xac\\xe7\\x1f\\xc5\\x71\\xcc\\xdc\\xdc\\x1c\\xaa\\\n\\xaa\\xa2\\xeb\\x3a\\x41\\x10\\xd0\\x26\\xc3\\x7e\\xed\\x37\\xe9\\x4f\\x7d\\x91\\\n\\x74\\xed\\x63\\xeb\\x5f\\xbb\\x28\\x6e\\xa1\\x94\\xef\\xc4\\x2d\\xdf\\xb9\\xd8\\\n\\xa3\\xf5\\x3c\\x9a\\xed\\x17\\x30\\x3f\\x77\\x19\\x13\\x13\\x31\\x96\\x65\\xe1\\\n\\x38\\x9d\\xb0\\xa5\\xeb\\x3a\\x47\\x8e\\x1c\\x91\\x93\\xa3\\x0b\\xb2\\xfa\\x7e\\\n\\x8a\\xad\\x4f\\xa3\\x56\\x1f\\xd8\\x46\\x7b\\x1d\\xd2\\xab\\xdc\\xc5\\x54\\xa9\\\n\\x40\\xb1\\x58\\x5c\\xd6\\x32\\x4e\\x42\\x6c\\x35\\x12\\xae\\xc4\\xb6\\x97\\x4e\\\n\\xa7\\x31\\x0c\\x9d\\xb1\\xb1\\xb1\\xd3\\x2e\\xf8\\x7c\\xc6\\x3b\\x97\\x28\\x7a\\\n\\x5a\\xa9\\x03\\x85\\x29\\x6e\\xa6\\x92\\xbc\\x88\\x81\\xd6\\xfb\\x51\\xfd\\xd1\\\n\\x8d\\xb1\\xc3\\x8b\\x41\\xcb\\x29\\xdf\\x89\\xa3\\x58\\xc4\\xe9\\xeb\\xf0\\xb8\\\n\\x8a\\x52\\xfd\\x19\\x1c\\x5e\\x90\\xa7\\xbc\\xba\\x72\\x4e\\xe9\\x63\\xf4\\xf8\\\n\\x7f\\x8f\\xb6\\x70\\xef\\xb6\\xdc\\x7f\\xa7\\xfe\\xef\\x84\\x89\\x57\\x50\\xa9\\\n\\x54\\x8e\\xce\\xed\\x13\\x42\\xc2\\x95\\x10\\xdb\\x4c\\x22\\xe1\\x30\\x32\\xb2\\\n\\x9b\\xb1\\xb1\\xd1\\xae\\x17\\xdc\\x6c\\x30\\xc2\\x7e\\xf3\\x76\\x06\\x8d\\x4f\\\n\\x92\\xa8\\x7f\\x61\\x63\\xed\\x78\\xdc\\x42\\x29\\x7f\\x8d\\x04\\x5f\\x23\\x01\\\n\\xec\\x30\\x77\\x10\\x38\\xd7\\xd2\\x34\\xae\\xa4\\xc2\\xc5\\xd4\\x3d\\xf9\\x88\\\n\\x58\\x89\\x8c\\x7e\\x88\\x42\\xf0\\x79\\xf4\\x85\\xaf\\x6d\\xeb\\x76\\x50\\x82\\\n\\x69\\xb2\\xea\\x43\\x94\\x4a\\x8e\\x84\\x2b\\x21\\xe1\\x4a\\x88\\xed\\xcc\\x34\\\n\\x4d\\x46\\x46\\x76\\x33\\x3e\\x3e\\xde\\xf5\\xb5\\xf9\\x22\\xc5\\x66\\x4c\\x79\\\n\\x0b\\xd9\\xe4\\xe5\\xf4\\x34\\xfe\\x1c\\x25\\xda\\xa0\\x0b\\x2c\\xfb\\x93\\xe8\\\n\\xfe\\xe7\\x49\\xf1\\x79\\x52\\x28\\xe0\\x3e\\x83\\x20\\x71\\x2d\\x0d\\xe3\\x4a\\\n\\xaa\\xd1\\x6e\\x1a\\x4d\\x5f\\xca\\x37\\x1c\\x9f\\x4e\\xc9\\x6a\\x07\\xc9\\xc4\\\n\\xf7\\x63\\x36\\xbe\\x86\\xd2\\x9e\\x92\\x26\\x59\\x94\\x6b\\x7f\\x85\\x03\\xd1\\\n\\xe5\\xb4\\xdb\\x3e\\x86\\x21\\x65\\x19\\x84\\x84\\x2b\\x21\\xb6\\xad\\xa5\\xf5\\\n\\x08\\x27\\x27\\x27\\x29\\x97\\xbb\\x3f\\xb1\\xbb\\xa4\\x3c\\x9b\\x9a\\xb3\\x87\\\n\\x9d\\xc1\\x9f\\x63\\x78\\xdf\\xdb\\xf0\\xc1\\x81\\xfa\\xc3\\xe8\\xf5\\x87\\x49\\\n\\x03\\x69\\xd5\\x85\\xe4\\x95\\x84\\xf6\\x5e\\x3c\\x75\\x0f\\xb5\\x78\\x98\\x6a\\\n\\x2b\\xb5\\x0d\\xab\\xbe\\x47\\xe4\\xf4\\xfd\\xa4\\xa3\\xfb\\xb0\\xea\\x77\\x41\\\n\\x30\\x2b\\x6f\\x9c\\x93\\x30\\x1a\\xdf\\xc0\\x48\\xfe\\x24\\x95\\x4a\\x2f\\x85\\\n\\x42\\x51\\x1a\\x44\\x48\\xb8\\x12\\x62\\x3b\\x53\\x14\\x85\\x81\\x81\\x01\\x4c\\\n\\xd3\\x3c\\xe7\\x27\\x09\\x4f\\x26\\x50\\x8a\\x1c\\x30\\x7e\\x8f\\x5e\\xf5\\x9f\\\n\\xc9\\x36\\x3e\\xcd\\xaa\\xac\\x10\\xbc\\x2a\\x99\\xa2\\x0e\\x95\\xbb\\xd1\\xb8\\\n\\x1b\\x17\\x70\\x81\\x3e\\x3d\\x4b\\x6c\\x5f\\x44\\xcb\\xb8\\x80\\xa6\\x32\\x42\\\n\\x2d\\xdc\\x45\\x33\\xda\\x7a\\xf3\\xb6\\x14\\x42\\x72\\xfa\\x13\\xa4\\xa3\\x6f\\\n\\x62\\xd6\\xbf\\x0e\\x81\\x94\\xad\\x58\\x4e\\x38\\xef\\x51\\xbe\\xce\\x5c\\x79\\\n\\x48\\xc2\\x95\\x90\\x70\\x25\\x84\\xe8\\xe8\\xc6\\x93\\x84\\xa7\\xbb\\x5c\\xcf\\\n\\x68\\xaf\\xa6\\xea\\x5e\\xca\\x80\\xff\\x97\\x68\\xed\\x03\\x9b\\xb3\\x91\\x82\\\n\\x12\\x4a\\xed\\x3e\\x6c\\xee\\xc3\\x06\\x72\\x00\\x5a\\x92\\xc8\\xda\\x45\\xa4\\\n\\x0f\\xd1\\x56\\x07\\x69\\x29\\xfd\\x78\\x71\\x1f\\xf5\\xb0\\x48\\x48\\x62\\x33\\\n\\xa4\\x48\\x5c\\x6d\\x86\\xa4\\x32\\x86\\x1d\\x1f\\xc0\\x68\\x3f\\x89\\xda\\x7c\\\n\\x14\\xa2\\x9a\\xbc\\x29\\x56\\x28\\xd1\\x7e\\x80\\x16\\xaf\\xa6\\xd5\\x6a\\x61\\\n\\x59\\x96\\x34\\x88\\x90\\x70\\x25\\x84\\x58\\x7a\\x92\\xd0\\x60\\x7c\\x7c\\x8c\\\n\\x20\\xe8\\x7e\\x39\\x85\\xa6\\x7a\\x21\\xfb\\xed\\x3f\\xa5\\xd7\\xba\\x83\\x4c\\\n\\xfd\\xd3\\x10\\xfb\\x9b\\xbf\\xd1\\xc2\\x1a\\x6a\\xe3\\x07\\xa8\\xfc\\x00\\x1d\\\n\\x8e\\x8f\\x53\\x7a\\x8e\\xc8\\xd8\\x49\\x60\\x0c\\xe1\\x2b\\x3b\\xf0\\xe9\\xc1\\\n\\x0b\\x53\\xf8\\x71\\x86\\x40\\xc9\\x13\\x29\\x6b\\xbb\\x42\\x84\\x86\\x4f\\x52\\\n\\x9f\\xc4\\x61\\x14\\x2b\\xda\\x8f\\xee\\x3f\\x89\\xea\\x3d\\x09\\x71\\x4b\\x4e\\\n\\xfe\\x6e\\xb4\\xaf\\xf7\\x18\\xaa\\xee\\x51\\xab\\x55\\x25\\x5c\\x09\\x09\\x57\\\n\\x42\\x88\\x63\\xee\\xbe\\x13\\x09\\x76\\xef\\xde\\xc3\\xe1\\xc3\\xe3\\x34\\x1a\\\n\\x8d\\xae\\xff\\xfe\\x18\\x8d\\x69\\xe5\\x56\\xca\\xc9\\xeb\\x18\\x0c\\x3f\\x86\\\n\\xb6\\x51\\x0a\\x8f\\xae\\x86\\x60\\x01\\x35\\x58\\xc0\\x6c\\x3e\\xc4\\xc9\\xa6\\\n\\x38\\xc7\\xaa\\x4b\\xac\\x17\\x89\\xf4\\x22\\x91\\x56\\x24\\x54\\x8b\\x84\\x6a\\\n\\x9e\\x50\\xcd\\x11\\x61\\x11\\xc6\\x36\\x21\\x26\\x61\\x6c\\x11\\xc4\\x16\\x41\\\n\\x64\\x12\\xc4\\x06\\xd0\\xa9\\xa5\\xa4\\x2a\\x01\\x86\\xd2\\x44\\x57\\x1a\\xe8\\\n\\x34\\x16\\xbf\\xd7\\xd1\\x68\\xa0\\xc5\\x35\\xd4\\xb8\\x8e\\x1a\\xd7\\x50\\xe2\\\n\\x2a\\x9a\\x3f\\x86\\xd2\\x3a\\xc4\\xa6\\x19\\x96\\xdd\\x9c\\x49\\x9b\\xa4\\x7a\\\n\\x80\\x66\\xb3\\x47\\x9a\\x42\\x48\\xb8\\x12\\x42\\x3c\\xed\\x8d\\xa2\\xeb\\x0c\\\n\\x0f\\xef\\x62\\x66\\x66\\x9a\\xf9\\xf9\\xd5\\x59\\x9c\\xd9\\xa3\\x97\\x7d\\xda\\\n\\x6f\\xd1\\x9b\\xbb\\x9f\\x6c\\xf5\\xaf\\x60\\x4d\\x17\\x81\\xde\\x18\\x94\\xa8\\\n\\x8e\\xe2\\xd7\\x51\\xfd\\x43\\x2b\\xfc\\x87\\x8b\\x51\\x6d\\x2b\\xf4\\xfc\\x6d\\\n\\x31\\x49\\x9e\\x60\\xa6\\xf9\\x4c\\x69\\x08\\xb1\\xad\\x48\\xe9\\x5c\\x21\\x96\\\n\\x7b\\xfd\\x56\\x14\\xfa\\xfa\\xfa\\x19\\x1c\\x1c\\x44\\x51\\x94\\x55\\x7b\\x9d\\\n\\x99\\xe0\\xd9\\xec\\x4f\\x7c\\x80\\x56\\xfa\\x95\\xd2\\xe8\\xcb\\x15\\xfb\\x12\\\n\\xac\\x36\\x28\\x3b\\xf8\\x61\\x67\\xd5\\x82\\x76\\x5b\\x1a\\x43\\x48\\xb8\\x12\\\n\\x42\\x9c\\x5c\\x3a\\x9d\\x61\\x64\\x64\\xf7\\xaa\\x2e\\x4a\\x1b\\xe0\\x70\\x28\\\n\\xfe\\x69\\x26\\xd3\\xef\\x22\\xb2\\x76\\x4b\\xa3\\x8b\\x4d\\x4b\\xf7\\x1e\\x06\\\n\\x22\\x3c\\xaf\\x29\\x8d\\x21\\x24\\x5c\\x09\\x21\\x4e\\x73\\x37\\x6e\\xdb\\xec\\\n\\xde\\xbd\\x87\\x64\\x32\\xb9\\xaa\\xaf\\x53\\x8d\\x2f\\x60\\x9f\\xf9\\x2e\\xaa\\\n\\xa9\\x9f\\x7a\\x6a\\xe8\\x4b\\x88\\xcd\\x24\\x6a\\x60\\x45\\xa3\\xab\\xf2\\x40\\\n\\x88\\x10\\x12\\xae\\x84\\xd8\\x62\\x34\\x4d\\x63\\x68\\x68\\x27\\xc5\\xe2\\xea\\\n\\x4e\\xd6\\x8d\\xd1\\x99\\xe4\\x56\\x0e\\xb9\\xef\\x27\\x48\\x5c\\x2d\\x0d\\x2f\\\n\\x36\\x9d\\x94\\xf2\\xf8\\x36\\x2c\\x36\\x2b\\x24\\x5c\\x09\\x21\\xce\\x8a\\xa2\\\n\\x28\\xf4\\xf4\\xf4\\x30\\x34\\xb4\\x13\\x55\\x5d\\xdd\\xb7\\x53\\x4b\\xe9\\x67\\\n\\xbf\\xfe\\x36\\x66\\x93\\xbf\\x42\\xac\\xc9\\x7a\\x6d\\x62\\xf3\\x70\\xa2\\x47\\\n\\x25\\x5c\\x09\\x09\\x57\\x42\\x88\\x15\\xde\\x99\\xa7\\x52\\xec\\xde\\xbd\\x87\\\n\\x44\\x62\\xf5\\x8b\\x64\\x2e\\x28\\xcf\\x63\\x7f\\xe2\\x03\\x34\\x9c\\x5b\\x00\\\n\\x45\\x1a\\x5f\\x6c\\x78\\x66\\xfb\\x49\\x09\\x57\\x42\\xc2\\x95\\x10\\xe2\\x2c\\\n\\x2e\\x20\\xa6\\xc9\\xae\\x5d\\x23\\x6b\\xb2\\xd4\\x47\\xa8\\x24\\x19\\xd7\\xde\\\n\\xcc\\x68\\xf2\\xfd\\xb4\\x9d\\xe7\\x48\\xe3\\x8b\\x0d\\x4d\\x89\\x1b\\x12\\xae\\\n\\x84\\x84\\x2b\\x21\\xc4\\x59\\x5e\\x44\\x14\\x85\\xde\\xde\\x5e\\x86\\x87\\x77\\\n\\xa1\\xeb\\xab\\x5f\\x46\\xce\\x53\\x76\\x72\\x40\\xfb\\x35\\x26\\xd3\\xb7\\x13\\\n\\x26\\xa4\\x96\\x90\\xd8\\xa0\\xef\\x8b\\xa8\\x25\\xe1\\x4a\\x48\\xb8\\x12\\x42\\\n\\x9c\\x1b\\xd7\\x75\\xd7\\xe4\\x69\\xc2\\x25\\xd5\\xf8\\x42\\xf6\\xe9\\x7f\\xc0\\\n\\x7c\\xee\\x1d\\xc4\\x52\\xba\\x41\\x6c\\x34\\xb1\\xbf\\x0a\\xeb\\x73\\x0a\\x21\\\n\\xe1\\x4a\\x88\\x6d\\x47\\xd7\\x75\\x76\\xee\\x1c\\xa6\\xaf\\xaf\\x6f\\x55\\x8b\\\n\\x8e\\x1e\\xeb\\x48\\x70\\x19\\x4f\\x5a\\xef\\xa6\\x5e\\xfc\\x0d\\x30\\x7a\\xe5\\\n\\x20\\x88\\x0d\\x12\\xae\\xda\\x80\\x84\\x2b\\x21\\xe1\\x4a\\x08\\xd1\\x25\\xf9\\\n\\x7c\\x81\\x91\\x91\\xdd\\x98\\xe6\\xda\\xd4\\xa9\\x8a\\x63\\x85\\xc3\\xad\\xeb\\\n\\x38\\xe8\\x7e\\x18\\xaf\\xf0\\xdf\\x40\\x4b\\xca\\x41\\x10\\xeb\\x4e\\x89\\xa5\\\n\\x42\\xbb\\x90\\x70\\x25\\x84\\xe8\\xa2\\xa5\\xa2\\xa3\\x99\\x4c\\x66\\xcd\\x5e\\\n\\xd3\\x0f\\x55\\x46\\xfd\\x97\\x71\\x28\\xf5\\x57\\xf8\\xd9\\x37\\x80\\x62\\xc8\\\n\\x81\\x10\\xeb\\x78\\xb1\\x91\\xe5\\x89\\x84\\x84\\x2b\\x21\\x44\\xb7\\xdf\\x6c\\\n\\xaa\\xca\\xc0\\xc0\\x20\\x83\\x83\\x43\\x68\\x9a\\xb6\\x66\\xaf\\xdb\\x0a\\x6d\\\n\\x0e\\x86\\x3f\\xc6\\x68\\xfa\\x2f\\x68\\xa7\\x7e\\x04\\x29\\xdf\\x20\\xd6\\x43\\\n\\x14\\xc8\\xf2\\x37\\x42\\xc2\\x95\\x10\\x62\\x95\\xa4\\xd3\\x69\\xf6\\xec\\x39\\\n\\x8f\\x54\\x2a\\xbd\\xa6\\xaf\\xeb\\x45\\x39\\x0e\\xf0\\x16\\xc6\\xd3\\x1f\\x20\\\n\\x70\\xa5\\x7c\\x83\\x58\\x5b\\x61\\xd0\\x90\\x46\\x10\\x12\\xae\\x84\\x10\\xab\\\n\\x47\\xd7\\x75\\x86\\x86\\x86\\xd6\\xbc\\x17\\x0b\\xa0\\x11\\x0f\\xb2\\x5f\\xfd\\\n\\x35\\x26\\xd2\\xef\\xa6\\x9d\\xbc\\x01\\xe9\\xc9\\x12\\x6b\\xa1\\x1d\\xea\\xd2\\\n\\x08\\x42\\xc2\\x95\\x10\\x62\\xf5\\x2d\\xf5\\x62\\xa5\\xd3\\xe9\\x35\\x7f\\xed\\\n\\x5a\\xbc\\x87\\x03\\xca\\x2f\\x32\\x96\\xf9\\x4b\\xfc\\xec\\x6b\\x40\\xb5\\xe5\\\n\\x80\\x88\\xd5\\xa1\\x25\\xf1\\xe3\\xb4\\xd4\\xba\\x12\\x12\\xae\\x84\\x10\\x6b\\\n\\x43\\xd7\\x75\\x06\\x07\\x87\\x18\\x1a\\x5a\\xfb\\x5e\\x2c\\x80\\x66\\x54\\xe4\\\n\\x60\\x78\\x1b\\x87\\x32\\xff\\x9b\\x56\\xe1\\x67\\xc1\\x28\\xca\\x41\\x11\\x5d\\\n\\x15\\x5b\\x23\\x00\\x12\\xae\\xc4\\xf6\\xf9\\x5c\\x97\\x26\\x10\\x62\\x63\\x48\\\n\\xa5\\xd2\\x38\\x8e\\xcb\\xd4\\xd4\\x24\\x95\\x4a\\x65\\xcd\\x5f\\xbf\\x15\\x58\\\n\\x1c\\xe2\\x26\\xcc\\xd4\\xcd\\xf4\\x1b\\xdf\\xc6\\x2e\\x7f\\x06\\xbc\\x27\\xe5\\\n\\xc0\\x88\\x73\\x16\\xea\\x43\\x10\\x4b\\xb8\\x12\\x12\\xae\\x84\\x10\\xeb\\x40\\\n\\xd3\\x34\\x06\\x07\\x87\\x48\\xa7\\xab\\x4c\\x4d\\x4d\\x12\\x04\\xc1\\x9a\\x6f\\\n\\x83\\xdf\\x8e\\x19\\x6d\\x5f\\x8d\\xe1\\x5c\\x4b\\x7f\\xe1\\x49\\x12\\x95\\xcf\\\n\\x40\\xf5\\x9b\\x72\\x70\\xc4\\xd9\\x07\\x77\\xe3\\x12\\xf0\\x91\\x2a\\xed\\x42\\\n\\xc2\\x95\\x10\\x62\\xfd\\xa4\\x52\\x29\\x1c\\xc7\\x61\\x76\\x76\\x86\\x85\\x85\\\n\\x85\\x75\\xd9\\x86\\x76\\x3b\\x60\\xac\\x3d\\x82\\x61\\xfc\\x2e\\xc5\\xa1\\x23\\\n\\x24\\x1b\\x9f\\x45\\x59\\xf8\\x0f\\x88\\x03\\x39\\x40\\x62\\x45\\xaa\\xca\\x95\\\n\\xd2\\x08\\x62\\x5b\\x91\\x39\\x57\\x42\\x6c\\x50\\x9a\\xa6\\xd1\\xdf\\xbf\\x83\\\n\\xdd\\xbb\\xf7\\x90\\x48\\x24\\xd6\\x6d\\x3b\\xda\\xed\\x36\\x93\\xe5\\x0c\\x4f\\\n\\xb4\\xff\\x0b\\x33\\x7d\\x9f\\x24\\x2c\\xbc\\x09\\x54\\x57\\x0e\\x90\\x58\\x9e\\\n\\xc4\\x5e\\x6a\\xed\\x94\\xb4\\x83\\x90\\x70\\x25\\x84\\xd8\\x38\\x6c\\xdb\\x66\\\n\\xd7\\xae\\x11\\x76\\xec\\x18\\x58\\x97\\x09\\xef\\xc7\\x2a\\xd5\\x2d\\xf6\\xf9\\\n\\xaf\\x62\\x34\\xfb\\x37\\x78\\x85\\x5f\\x00\\xa3\\x5f\\x0e\\x90\\x38\\x2d\\xdf\\\n\\x79\\x9e\\xcc\\xb5\\x12\\xdb\\x8e\\x0c\\x0b\\x0a\\xb1\\x09\\x28\\x8a\\x42\\x36\\\n\\x9b\\x25\\x95\\x4a\\xad\\xeb\\x50\\xe1\\x12\\xaf\\xad\\x31\\xca\\x8b\\x50\\x13\\\n\\x2f\\xa4\\x27\\xf5\\x5d\\x52\\xcd\\xcf\\xa2\\x36\\x1f\\x95\\x03\\x25\\x9e\\x76\\\n\\xe2\\x1a\\x1c\\x51\\x5e\\x7c\\xcc\\x79\\x2c\\x4d\\x22\\x24\\x5c\\x09\\x21\\x36\\\n\\x98\\xa5\\xa1\\xc2\\x4c\\x26\\xcb\\xd4\\xd4\\x14\\x9e\\xb7\\xbe\\x4b\\x8a\\x44\\\n\\xb1\\xca\\x74\\xfb\\x6a\\xa6\\xf5\\xab\\xc9\\x64\\x1e\\x27\\x1f\\xfc\\x1b\\x46\\\n\\xfd\\x1b\\x80\\xf4\\x54\\x08\\x88\\x72\\x2f\\xa7\\xd6\\x3a\\x76\\x48\\x5b\\xd2\\\n\\x95\\xd8\\x1e\\x64\\x58\\x50\\x88\\x4d\\x28\\x91\\x48\\x30\\x32\\x32\\xc2\\x8e\\\n\\x1d\\x3b\\xd6\\x7d\\xa8\\x70\\x49\\x39\\xba\\x90\\x03\\xea\\xaf\\x70\\x20\\xfd\\\n\\xbf\\xa8\\x67\\x7f\\x96\\xd8\\xda\\x23\\x07\\x6a\\x9b\\x3b\\xa2\\xdd\\x2a\\x8d\\\n\\x20\\xb6\\x25\\xe9\\xb9\\x12\\x62\\x93\\xea\\x0c\\x15\\xe6\\x48\\xa5\\xd2\\x1c\\\n\\x39\\x32\\xcb\\xfc\\xfc\\xfc\\x86\\xd8\\xae\\x76\\x9c\\xe1\\x70\\x78\\x13\\x98\\\n\\x37\\x91\\x71\\xc7\\xc8\\x45\\x5f\\xc3\\xac\\x7e\\x05\\xc2\\x8a\\x1c\\xb4\\x6d\\\n\\xc4\\xcf\\xbc\\x8a\\x92\\x97\\x95\\x86\\x10\\x12\\xae\\x84\\x10\\x9b\\x8f\\xa6\\\n\\x69\\xf4\\xf5\\xf5\\x93\\xcb\\xe5\\x99\\x99\\x99\\xa1\\x5a\\xdd\\x38\\x21\\xa6\\\n\\xdc\\xde\\x49\\x99\\x1f\\x47\\x4b\\xbe\\x91\\x1e\\xf3\\xfb\\xa4\\xbc\\xaf\\xa0\\\n\\x54\\xef\\x45\\x86\\x0d\\xb7\\xb6\\xd8\\xd8\\xc1\\x58\\xf4\\x3a\\x69\\x08\\x21\\\n\\xe1\\x4a\\x08\\xb1\\xb9\\x99\\xa6\\xc9\\xd0\\xd0\\x10\\xcd\\x66\\x93\\xe9\\xe9\\\n\\x69\\x9a\\xcd\\xc6\\x86\\xd9\\xb6\\x30\\x52\\x99\\xf2\\x2e\\x67\\x8a\\xcb\\xb1\\\n\\xb3\\x35\\x8a\\xca\\x3d\\xd8\\xcd\\x2f\\xa3\\x7a\\xfb\\xe5\\xc0\\x6d\\x41\\xb3\\\n\\xee\\x2f\\x10\\x86\\x96\\x34\\x84\\x90\\x70\\x25\\x84\\xd8\\x1a\\x96\\xe6\\x63\\\n\\x55\\xab\\x55\\x66\\x66\\xa6\\xf1\\x7d\\x7f\\x43\\x6d\\x9f\\x17\\x26\\x19\\xe7\\\n\\x26\\x30\\x6e\\xc2\\xb1\\xa6\\xc8\\xf1\\x6d\\x12\\xad\\xbb\\x51\\xbd\\xc7\\xe5\\\n\\xe0\\x6d\\x01\\xcd\\xec\\x4f\\x53\\x0a\\x2f\\x92\\x86\\x10\\x12\\xae\\x84\\x10\\\n\\x5b\\x4f\\x2a\\x95\\x22\\x99\\x4c\\x52\\x2a\\x95\\x98\\x9d\\x9d\\x21\\x0c\\xc3\\\n\\x0d\\xb7\\x8d\\x8d\\xa8\\x9f\\x06\\xaf\\x00\\xe3\\x15\\xd8\\xe6\\x2c\\x79\\xe5\\\n\\x3b\\x24\\x5a\\x77\\xa3\\x79\\x3f\\x94\\x03\\xb8\\x09\\x05\\xb9\\xd7\\x30\\x16\\\n\\xbc\\x52\\x1a\\x42\\x48\\xb8\\x92\\x26\\x10\\x62\\xeb\\x52\\x14\\x85\\x5c\\x2e\\\n\\x47\\x26\\x93\\x61\\x6e\\x6e\\x8e\\xb9\\xb9\\x23\\x1b\\x76\\x7d\\x37\\x2f\\xee\\\n\\x61\\x22\\xbe\\x19\\x8c\\x9b\\x31\\x8d\\x39\\x0a\\xea\\x03\\x38\\xfe\\xdd\\x68\\\n\\xcd\\xef\\xcb\\x81\\xdc\\x04\\xda\\xc9\\x17\\x73\\x30\\xbc\\x4d\\x1a\\x42\\x08\\\n\\x09\\x57\\x42\\x6c\\x0f\\xaa\\xaa\\xd2\\xd3\\xd3\\x43\\x2e\\x97\\x63\\x6e\\x6e\\\n\\x8e\\x85\\x85\\xf9\\x0d\\xbd\\x88\\xae\\x4f\\x81\\xc9\\xe8\\xa5\\xa0\\xbf\\x14\\\n\\x23\\x55\\x22\\xaf\\x7e\\x0f\\x37\\x7c\\x10\\xbd\\xf1\\x6d\\x88\\xea\\x72\\x40\\\n\\x37\\x5a\\x30\\x4e\\xdd\\xca\\x18\\x6f\\x42\\xd6\\x65\\x16\\x42\\xc2\\x95\\x10\\\n\\xdb\\xef\\x0d\\xaf\\xeb\\xf4\\xf5\\xf5\\x51\\x28\\x14\\x98\\x9f\\x9f\\x67\\x61\\\n\\x61\\x7e\\xc3\\x2f\\x4d\\xd2\\x26\\xcb\\x74\\xf4\\x42\\x50\\x5e\\x88\\xe2\\x86\\\n\\xe4\\x8c\\x51\\x52\\xf1\\x43\\x98\\xde\\xb7\\x50\\x9a\\x32\\x7c\\xb8\\xce\\xb1\\\n\\x9d\\x72\\xea\\x67\\x98\\xe6\\x65\\xcb\\xfa\\xdb\\x52\\xa1\\x5d\\x48\\xb8\\x12\\\n\\x42\\x6c\\xe9\\x90\\xd5\\xdb\\xdb\\x7b\\x34\\x64\\xcd\\xcf\\xcf\\x6d\\x8a\\xf5\\\n\\xdf\\x62\\x34\\xe6\\xdb\\xbb\\x99\\x67\\x37\\xe8\\x3f\\x8a\\x9d\\x6b\\x92\\x51\\\n\\x1e\\xc6\\x69\\x3f\\x80\\xde\\xbc\\x1f\\x25\\x58\\x90\\x83\\xbb\\x56\\xc7\\x42\\\n\\xef\\x65\\xc6\\xf9\\x1f\\x94\\xe3\\x4b\\x97\\xfd\\x6f\\x34\\x4d\\x2e\\x39\\x42\\\n\\xc2\\x95\\x10\\x62\\x8b\\xd3\\x34\\x8d\\x9e\\x9e\\x1e\\xf2\\xf9\\x3c\\x0b\\x0b\\\n\\x0b\\xcc\\xcf\\xcf\\x6d\\xc8\\x89\\xef\\xa7\\xe2\\x05\\x09\\x3c\\xae\\x01\\xae\\\n\\x81\\xc4\\xcf\\xe0\\xc4\\x87\\x48\\xab\\x8f\\x92\\x08\\x1f\\x45\\xf7\\xbe\\x8f\\\n\\x12\\x4a\\xd8\\xea\\x3e\\x85\\x56\\xe6\\x35\\x1c\\x8e\\x5f\\x4b\\x10\\x9b\\xcb\\\n\\xfe\\x57\\xaa\\xaa\\xa2\\xaa\\xb2\\x28\\x88\\x90\\x70\\x25\\x84\\xd8\\x46\\x21\\\n\\xab\\x58\\x2c\\x2e\\x86\\xac\\x79\\xe6\\xe6\\x36\\x57\\xc8\\x5a\\xba\\xe8\\x37\\\n\\x94\\x11\\x1a\\xf1\\x08\\xa8\\x37\\x83\\x03\\x56\\x3c\\x41\\x4a\\xdd\\x87\\x1b\\\n\\x3d\\x8a\\xe1\\x3f\\x8c\\xea\\x8f\\xc9\\xc1\\x3e\\x07\\x81\\x7d\\x29\\x53\\xc6\\\n\\x4f\\xd3\\x88\\x76\\xaf\\xfc\\x62\\xa3\\xcb\\xe5\\x46\\x48\\xb8\\x12\\x42\\x6c\\\n\\x43\\xaa\\xaa\\x52\\x28\\x14\\xc9\\xe5\\xf2\\x94\\x4a\\x25\\xe6\\xe7\\xe7\\x69\\\n\\xb7\\xfd\\x4d\\xbb\\x3f\\x2d\\x65\\x80\\x56\\x3c\\xc0\\x11\\xe5\\xf9\\x60\\x81\\\n\\x66\\x96\\x49\\xab\\xfb\\x48\\xf2\\x38\\xa6\\xff\\x03\\xb4\\xd6\\x63\\x10\\x07\\\n\\x72\\xe0\\xcf\\xa0\\xed\\x5c\\xcb\\xac\\xf6\\xa3\\xd4\\x38\\xfb\\xfa\\x55\\x86\\\n\\x61\\x48\\x43\\x0a\\x09\\x57\\x42\\x88\\xed\\x1d\\xb2\\xf2\\xf9\\x3c\\xb9\\x5c\\\n\\x8e\\x5a\\xad\\xc6\\xfc\\xfc\\x1c\\x8d\\x46\\x63\\xd3\\xef\\x57\\xa8\\x64\\x58\\\n\\x88\\xaf\\x62\\x81\\xab\\xc0\\x00\\xc5\\x08\\x71\\xb4\\x39\\x92\\xda\\x14\\x56\\\n\\x7c\\x18\\x23\\x1c\\x45\\x6d\\x1d\\x40\\x69\\x1d\\x84\\xd8\\xdf\\xde\\x27\\x81\\\n\\x5e\\xc4\\x77\\x9e\\xc3\\x4c\\xfc\\x62\\x1a\\x0c\\x9f\\xf3\\xaf\\xb3\\xed\\x84\\\n\\xbc\\xb1\\x84\\x84\\x2b\\x21\\x84\\x50\\x14\\x85\\x54\\x2a\\x45\\x2a\\x95\\xc2\\\n\\xf3\\x3c\\xe6\\xe7\\xe7\\xa9\\x54\\xca\\x1b\\xba\\x8c\\xc3\\x4a\\xc4\\x68\\xd4\\\n\\xc3\\x5e\\xea\\x61\\x2f\\x70\\x59\\xe7\\x87\\x06\\xa8\\x96\\x82\\xab\\xcd\\x91\\\n\\x50\\x26\\xb1\\xe2\\x71\\x8c\\x70\\x14\\xcd\\x3f\\xd8\\x09\\x5d\\x51\\x73\\xcb\\\n\\x1e\\xef\\xd8\\x3e\\x9f\\x56\\xe2\\x39\\x54\\x94\\xab\\x29\\xb5\\x77\\x42\\x17\\\n\\x0f\\xb3\\xeb\\x3a\\xf2\\x86\\x12\\x12\\xae\\x84\\x10\\xe2\\x58\\xb6\\x6d\\x33\\\n\\x30\\x30\\x40\\x6f\\x6f\\x2f\\x0b\\x0b\\x0b\\x2c\\x2c\\xcc\\x6f\\xc2\\x79\\x59\\\n\\xcb\\x13\\x45\\x31\\xd5\\x28\\x4f\\x95\\x3c\\xf0\\x8c\\xa7\\x3e\\x2d\\x75\\x70\\\n\\xf5\\x05\\x12\\xca\\x14\\x16\\x87\\x31\\x83\\x51\\xb4\\xe0\\x50\\x67\\x8d\\xc4\\\n\\x4d\\x59\\x7f\\x4b\\x23\\x72\\xaf\\xa4\\x61\\x5e\\x4f\\x89\\x2b\\x68\\x04\\x39\\\n\\x58\\xa5\\x51\\xd2\\x44\\x42\\xc2\\x95\\x90\\x70\\x25\\x84\\x10\\x27\\xff\\xd0\\\n\\xd0\\x75\\x7a\\x7a\\x7a\\x28\\x16\\x8b\\x94\\xcb\\x65\\xe6\\xe7\\xe7\\x68\\xb5\\\n\\x5a\\xdb\\x66\\xff\\xeb\\x41\\x8e\\x3a\\x39\\xe0\\xe2\\xa5\\x7c\\x02\\x2e\\xd8\\\n\\x6a\\x19\\x47\\x9b\\xc2\\x8e\\x0f\\x63\\x46\\x63\\x68\\xc1\\x34\\x4a\\x54\\x46\\\n\\x09\\xca\\x28\\x61\\x09\\xa2\\x75\\x1c\\x56\\xd5\\x0b\\x44\\x46\\x2f\\x91\\xde\\\n\\x4b\\xa8\\xf6\\x10\\xa8\\x45\\x7c\\xa5\\x97\\x52\\xb0\\x97\\x76\\x9c\\x58\\xb5\\\n\\x40\\xb5\\x24\\x95\\x4a\\xc9\\x93\\x82\\x42\\xc2\\x95\\x10\\x42\\x9c\\x89\\xa2\\\n\\x28\\x64\\xb3\\x59\\xb2\\xd9\\x2c\\x8d\\x46\\x83\\x52\\xa9\\xb4\\xa5\\x86\\x0c\\\n\\x57\\xca\\x8b\\x32\\x78\\x51\\x06\\xd8\\xdb\\xf9\\x81\\xba\\xf8\\xb5\\xf8\\x29\\\n\\xab\\x10\\x62\\xaa\\x0d\\x74\\xa5\\x8e\\xa1\\xd4\\xd1\\xa9\\x61\\x50\\x43\\xc1\\\n\\x43\\x21\\x42\\x21\\x04\\x22\\x94\\x38\\xa4\\x33\\x1e\\x17\\x3e\\xf5\\xf3\\x38\\\n\\x02\\x96\\x7e\\xae\\x11\\x2b\\x26\\x31\\x26\\xb1\\x62\\x12\\x61\\x12\\x63\\x10\\\n\\x61\\x10\\x29\\x26\\x51\\x6c\\x76\\xfe\\x1c\\x9b\\xf8\\x71\\x0a\\x2f\\xca\\x12\\\n\\xa3\\x3d\\xb5\\xa1\\xd1\\xe2\\xd7\\x1a\\xca\\xe7\\xf3\\xf2\\x86\\x11\\x12\\xae\\\n\\x84\\x10\\x62\\x25\\x1c\\xc7\\xc1\\x71\\x1c\\xfa\\xfb\\xfb\\xa9\\x54\\xca\\x94\\\n\\x4a\\x25\\x9a\\xcd\\xa6\\x34\\xcc\\x31\\x62\\x34\\x5a\\x51\\x8a\\x16\\xa9\\x6d\\\n\\xb5\\xdf\\x96\\x65\\xe1\\x38\\xae\\x9c\\x00\\x42\\xc2\\x95\\x10\\x42\\x9c\\x0d\\\n\\x55\\x55\\xc9\\x66\\x73\\x64\\xb3\\x39\\x5a\\xad\\x16\\xa5\\x52\\x89\\x72\\xb9\\\n\\xb4\\x65\\xe7\\x66\\x89\\x33\\x2b\\x16\\x8b\\xd2\\x08\\x42\\xc2\\x95\\x10\\x42\\\n\\x74\\x83\\x65\\x59\\xf4\\xf5\\xf5\\xd1\\xdb\\xdb\\x4b\\xad\\x56\\xa3\\x54\\x2a\\\n\\x51\\xab\\x55\\xa5\\x61\\xb6\\x91\\x64\\x32\\x49\\x3a\\x9d\\x91\\x86\\x10\\x12\\\n\\xae\\x84\\x10\\xa2\\x9b\\x8e\\x2d\\xe7\\x10\\x04\\x01\\xe5\\x72\\x99\\x4a\\xa5\\\n\\x82\\xe7\\xc9\\xb0\\xe1\\x56\\xa6\\xaa\\x2a\\xfd\\xfd\\x3b\\xa4\\x21\\x84\\x84\\\n\\x2b\\x21\\x84\\x58\\xd5\\x0f\\x1c\\x5d\\xa7\\x50\\x28\\x50\\x28\\x14\\x68\\xb7\\\n\\x7d\\x2a\\x95\\xca\\x62\\xd0\\xf2\\xa4\\x71\\xb6\\x98\\xfe\\xfe\\x1d\\x52\\x95\\\n\\x5d\\x48\\xb8\\x12\\x42\\x88\\xb5\\x64\\x18\\x26\\x85\\x42\\x91\\x42\\xa1\\x88\\\n\\xef\\xfb\\x54\\xab\\x12\\xb4\\xb6\\x8a\\x62\\xb1\\x87\\x4c\\x46\\x86\\x03\\x85\\\n\\x84\\x2b\\x21\\x84\\x58\\x37\\xa6\\x79\\x7c\\xd0\\xea\\xf4\\x68\\x95\\xb7\\x55\\\n\\xfd\\xac\\xad\\x22\\x93\\xc9\\xd2\\xd3\\xd3\\x23\\x0d\\x21\\x24\\x5c\\x09\\x21\\\n\\xc4\\x46\\x0a\\x5a\\xc5\\x62\\x91\\x62\\x71\\xa9\\x47\\xab\\x4a\\xad\\x56\\xa3\\\n\\xd1\\xa8\\x4b\\xe3\\x6c\\x70\\xa9\\x54\\x9a\\x1d\\x3b\\x64\\x9e\\x95\\x10\\x12\\\n\\xae\\x84\\x10\\x1b\\x3a\\x68\\x2d\\xcd\\xd1\\x8a\\xa2\\x88\\x7a\\xbd\\x46\\xad\\\n\\xd6\\xf9\\x0a\\x82\\x40\\x1a\\x68\\x03\\x29\\x14\\x8a\\xf4\\xf4\\xf4\\xa0\\x28\\\n\\x8a\\x34\\x86\\x90\\x70\\x25\\x4d\\x20\\x84\\xd8\\x0c\\x54\\x55\\x25\\x95\\x4a\\\n\\x93\\x4a\\xa5\\x01\\xf0\\x3c\\xef\\x68\\xd0\\x6a\\x36\\x1b\\xd2\\x40\\xeb\\x68\\\n\\xc7\\x8e\\x01\\xb2\\xd9\\xac\\x34\\x84\\x10\\x12\\xae\\x84\\x10\\x9b\\x99\\x6d\\\n\\xdb\\xd8\\xb6\\x4d\\xb1\\x58\\x24\\x0c\\xc3\\xc5\\x5e\\xad\\x3a\\x8d\\x46\\x83\\\n\\x76\\xdb\\x97\\x06\\x5a\\x03\\xae\\xeb\\xd2\\xd7\\xd7\\x8f\\x65\\x59\\xd2\\x18\\\n\\x42\\x48\\xb8\\x12\\x42\\x6c\\x25\\x9a\\xa6\\x91\\x4e\\x67\\x8e\\x16\\xac\\x0c\\\n\\x82\\x80\\x46\\xa3\\x41\\xa3\\xd1\\x09\\x5b\\x32\\x31\\xbe\\xbb\\x0c\\xc3\\xa4\\\n\\xaf\\xaf\\x8f\\x54\\x2a\\x25\\x8d\\x21\\x84\\x84\\x2b\\x21\\xc4\\xb6\\xf8\\x60\\\n\\xd3\\x75\\xd2\\xe9\\x34\\xe9\\x74\\x67\\x08\\x31\\x0c\\x43\\x1a\\x8d\\x06\\xcd\\\n\\x66\\x63\\xf1\\xbb\\x14\\x30\\x3d\\x1b\\xaa\\xaa\\x52\\x2c\\xf6\\x90\\xcf\\xe7\\\n\\x65\\x6e\\x95\\x10\\x12\\xae\\x84\\x10\\xdb\\x99\\xa6\\x69\\x47\\xab\\xc4\\x03\\\n\\x44\\x51\\x44\\xb3\\xd9\\xa4\\xd9\\x6c\\xe2\\x79\\x1e\\x9e\\xd7\\xa4\\xdd\\x6e\\\n\\x4b\\x43\\x9d\\x46\\x36\\x9b\\xa5\\xa7\\xa7\\x17\\x5d\\x97\\xcb\\x86\\x10\\x12\\\n\\xae\\x84\\x10\\xe2\\x69\\x54\\x55\\xc5\\x75\\x5d\\x5c\\xd7\\x3d\\xfa\\xb3\\x30\\\n\\x0c\\x17\\x83\\xd6\\x53\\x5f\\xbe\\xbf\\xbd\\x87\\x13\\x4d\\xd3\\x24\\x95\\x4a\\\n\\x91\\xc9\\x64\\xb0\\x2c\\x5b\\x4e\\x1c\\x21\\x24\\x5c\\x09\\x21\\xc4\\xf2\\x69\\\n\\x9a\\x76\\x42\\xe0\\x8a\\xa2\\xe8\\x68\\xd0\\x6a\\xb5\\x3c\\x5a\\xad\\x16\\xad\\\n\\x56\\x8b\\x28\\x8a\\xb6\\x6c\\x3b\\xd8\\xb6\\xbd\\xd8\\xcb\\x97\\x96\\x89\\xea\\\n\\x42\\x48\\xb8\\x12\\x42\\x88\\xee\\x52\\x55\\x15\\xc7\\x71\\x70\\x1c\\xe7\\xb8\\\n\\x9f\\x07\\x41\\x80\\xef\\xfb\\xf8\\x7e\\x8b\\x56\\xab\\xf3\\xbd\\xf3\\xdf\\x9b\\\n\\xf3\\x29\\xc5\\x44\\xc2\\x21\\x95\\x4a\\x91\\x4e\\xa7\\x30\\x0c\\x53\\x0e\\xbc\\\n\\x10\\x12\\xae\\x84\\x10\\x62\\x8d\\x3f\\x38\\x75\\x1d\\x5d\\xd7\\x4f\\x08\\x5d\\\n\\x71\\x1c\\x1f\\x0d\\x59\\xbe\\xdf\\x22\\x08\\x02\\xa2\\x28\\x22\\x0c\\x23\\xe2\\\n\\xb8\\xf3\\x3d\\x8a\\x22\\xa2\\x28\\x5c\\xfc\\x1e\\x1d\\xfd\\x77\\x67\\x43\\x51\\\n\\x94\\xa7\\x7d\\xa9\\x47\\xff\\xac\\xaa\\x0a\\xd0\\xf9\\xae\\xaa\\x2a\\x9a\\xa6\\\n\\xa3\\xeb\\xda\\x71\\xdf\\x35\\x4d\\xc3\\x30\\x0c\\x34\\x4d\\x93\\x83\\x2a\\x84\\\n\\x84\\x2b\\x21\\x84\\xd8\\x78\\x14\\x45\\xc1\\xb2\\xac\\xc5\\xe1\\xb4\\x73\\x2f\\\n\\x53\\x70\\xb2\\xd0\\x15\\xc7\\xf1\\xd1\\x00\\x25\\x84\\x90\\x70\\x25\\x84\\x10\\\n\\x62\\x85\\x61\\xcc\\x6c\\x20\\x0b\\x00\\x00\\x01\\xf1\\x49\\x44\\x41\\x54\\x6d\\\n\\x39\\x3f\\x13\\x42\\x6c\\x2c\\xaa\\x34\\x81\\x10\\x42\\x08\\x21\\x84\\x84\\x2b\\\n\\x21\\x84\\x10\\x42\\x08\\x09\\x57\\x42\\x08\\x21\\x84\\x10\\x12\\xae\\x84\\x10\\\n\\x42\\x08\\x21\\x84\\x84\\x2b\\x21\\x84\\x10\\x42\\x08\\x09\\x57\\x42\\x08\\x21\\\n\\x84\\x10\\x12\\xae\\x84\\x10\\x42\\x08\\x21\\x84\\x84\\x2b\\x21\\x84\\x10\\x42\\\n\\x08\\x09\\x57\\x42\\x08\\x21\\x84\\x10\\x12\\xae\\x84\\x10\\x42\\x08\\x21\\x24\\\n\\x5c\\x09\\x21\\x84\\x10\\x42\\x08\\x09\\x57\\x42\\x08\\x21\\x84\\x10\\x12\\xae\\\n\\x84\\x10\\x42\\x08\\x21\\x24\\x5c\\x09\\x21\\x84\\x10\\x42\\x08\\x09\\x57\\x42\\\n\\x08\\x21\\x84\\x10\\x12\\xae\\x84\\x10\\x42\\x08\\x21\\x24\\x5c\\x09\\x21\\x84\\\n\\x10\\x42\\x48\\xb8\\x12\\x42\\x08\\x21\\x84\\x10\\x12\\xae\\x84\\x10\\x42\\x08\\\n\\x21\\x24\\x5c\\x09\\x21\\x84\\x10\\x42\\x48\\xb8\\x12\\x42\\x08\\x21\\x84\\x10\\\n\\x12\\xae\\x84\\x10\\x42\\x08\\x21\\x24\\x5c\\x09\\x21\\x84\\x10\\x42\\x48\\xb8\\\n\\x12\\x42\\x08\\x21\\x84\\x90\\x70\\x25\\x84\\x10\\x42\\x08\\x21\\x24\\x5c\\x09\\\n\\x21\\x84\\x10\\x42\\x48\\xb8\\x12\\x42\\x08\\x21\\x84\\x90\\x70\\x25\\x84\\x10\\\n\\x42\\x08\\x21\\x24\\x5c\\x09\\x21\\x84\\x10\\x42\\x48\\xb8\\x12\\x42\\x08\\x21\\\n\\x84\\x90\\x70\\x25\\x84\\x10\\x42\\x08\\x21\\x24\\x5c\\x09\\x21\\x84\\x10\\x42\\\n\\x48\\xb8\\x12\\x42\\x08\\x21\\x84\\x90\\x70\\x25\\x84\\x10\\x42\\x08\\x21\\xe1\\\n\\x4a\\x08\\x21\\x84\\x10\\x42\\x48\\xb8\\x12\\x42\\x08\\x21\\x84\\x90\\x70\\x25\\\n\\x84\\x10\\x42\\x08\\x21\\xe1\\x4a\\x08\\x21\\x84\\x10\\x42\\x48\\xb8\\x12\\x42\\\n\\x08\\x21\\x84\\x90\\x70\\x25\\x84\\x10\\x42\\x08\\x21\\xe1\\x4a\\x08\\x21\\x84\\\n\\x10\\x42\\xc2\\x95\\x10\\x42\\x08\\x21\\x84\\x90\\x70\\x25\\x84\\x10\\x42\\x08\\\n\\x21\\xe1\\x4a\\x08\\x21\\x84\\x10\\x42\\xc2\\x95\\x10\\x42\\x08\\x21\\x84\\x90\\\n\\x70\\x25\\x84\\x10\\x42\\x08\\x21\\xe1\\x4a\\x08\\x21\\x84\\x10\\x42\\xc2\\x95\\\n\\x10\\x42\\x08\\x21\\x84\\x84\\x2b\\x21\\x84\\x10\\x42\\x08\\x21\\xe1\\x4a\\x08\\\n\\x21\\x84\\x10\\x42\\xc2\\x95\\x10\\x42\\x08\\x21\\x84\\x84\\x2b\\x21\\x84\\x10\\\n\\x42\\x08\\x21\\xe1\\x4a\\x08\\x21\\x84\\x10\\x42\\xc2\\x95\\x10\\x42\\x08\\x21\\\n\\x84\\x84\\x2b\\x21\\x84\\x10\\x42\\x08\\x09\\x57\\x42\\x08\\x21\\x84\\x10\\x42\\\n\\xc2\\x95\\x10\\x42\\x08\\x21\\xc4\\xc6\\xa3\\x1f\\xfb\\x1f\\x71\\xbb\\x22\\x2d\\\n\\x22\\x84\\x10\\x42\\x08\\xb1\\x12\\x4f\\xcb\\x4f\\x4a\\xe3\\xce\\xdb\\x62\\x69\\\n\\x15\\x21\\x84\\x10\\x42\\x88\\x2e\\x50\\x74\\x54\\x74\\x57\\x1a\\x42\\x08\\x21\\\n\\x84\\x10\\xa2\\x1b\\x74\\x07\\xd5\\xd8\\xf3\\x5a\\xd0\\x6c\\x69\\x0c\\x21\\x84\\\n\\x10\\x42\\x88\\x73\\x61\\xa4\\x30\\xce\\xfb\\xff\\xf9\\x7f\\x21\\xc5\\x02\\x3c\\\n\\x3a\\x9d\\x20\\x0d\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x04\\x33\\\n\\x00\\\n\\x00\\x1e\\x91\\x78\\x9c\\x95\\xd9\\x5d\\x6f\\xe4\\x26\\x14\\x06\\xe0\\xfb\\xfd\\\n\\x15\\xd1\\xde\\x7b\\x67\\xd3\\xef\\x4a\\xb3\\x91\\xda\\xf4\\x4b\\xfd\\x52\\x9b\\\n\\x34\\xed\\xe5\\x88\\xb1\\xb1\\x07\\x05\\x73\\x1c\\xc0\\xc9\\x64\\x7f\\x7d\\x01\\\n\\x7b\\x92\\x8d\\x56\\x7a\\x5f\\xf6\\x2e\\x09\\x4f\\xc0\\x03\\xe7\\x1c\\xc0\\xb3\\\n\\xbd\\xba\\xbc\\xbc\\x78\\x75\\x76\\xb6\\xbd\\xf3\\x3a\\xc8\\xec\\x5b\\x7d\\x36\\\n\\x79\\xdd\\x9b\\xe3\\xbb\\xd7\\x1b\\x33\\xaa\\x41\\x87\\xd7\\xb9\\x39\\x81\\xde\\\n\\x58\\x7d\\x71\\xa5\\xc3\\x9b\\x3b\\xdf\\x6e\\x37\\xe5\\xb7\\x0f\\x1a\\xc2\\x64\\\n\\x55\\x38\\xbc\\x99\\xdc\\xf0\\x71\\x9b\\x69\\xc5\\x85\\x8d\\xea\\x3a\\xd8\\xec\\\n\\xcc\\xd8\\x54\\x99\\x39\\x4a\\x13\\x4c\\x17\\xa8\\xec\\xb4\\xa5\\xc6\\x44\\x5d\\\n\\x37\\x6c\\x81\\xd5\\x3d\\xf6\\xc6\\x87\\x58\\x47\\xd3\\xbc\\x55\\x4a\\xa7\\x8f\\\n\\x95\\x32\\x2d\\xe1\\x3d\\x95\\x41\\xdd\\x6b\\x8a\\xee\\x8d\\x7e\\x60\\x08\\xb6\\\n\\x7b\\x2f\\xb8\\x83\\x0c\\x76\\x57\\x88\\xec\\xbd\\x72\\xed\\xa1\\xd1\\xae\\x6b\\\n\\xa6\\x3a\\x57\\xa1\\x46\\xf1\\xba\\xaa\\xbb\\x0c\\x21\\x9b\\xad\\xd5\\x71\\x17\\\n\\xa2\\xf2\\x88\\xb5\\x6a\\xd4\\x5e\\xb1\\x50\\x5b\\x95\\xd7\\xa3\\xe0\\xc5\\x59\\\n\\x61\\x70\\x0a\\x7e\\x86\\x76\\xb8\\x9e\\x1e\\x21\\x38\\xe8\\xf6\\xb6\\x51\\x16\\\n\\xc6\\xf5\\x82\\xf6\\x0f\\xf8\\xd1\\x0b\\x6a\\xad\\x26\\xf3\\x50\\x58\\xaf\\x4c\\\n\\xc5\\x88\\x7d\\xcd\\x88\\x83\\x54\\x18\\xaf\\xc6\\x51\\x79\\x58\\x32\\x16\\x69\\\n\\x0d\\xce\\xc6\\x45\\xc9\\x2d\\x37\\x2c\\xbd\\x16\\xc5\\xf2\\x6b\\x51\\x0f\\xca\\\n\\x3b\\xa8\\xf2\\xac\\xa7\\xc0\\x8f\\x1e\\x2f\\xb6\\x95\\xa0\\xf9\\x90\\x62\\xc5\\\n\\x87\\xb4\\xdc\\x15\\x88\\xd6\\xb9\\xd5\\xb1\\x22\\xb7\\xb2\\x87\\x3d\\x47\\x58\\\n\\xa4\\x29\\x10\\x18\\x59\\x9d\\x8a\\x29\\x0b\\xbd\\x57\\x8f\\xe9\\xa1\\xfc\\x00\\\n\\x97\\xe8\\x85\\x7d\\x0f\\xa7\\x36\\xed\\x0c\\x3a\\xe2\\xce\\x4c\\xdf\\xb3\\xf4\\\n\\x2f\\xa6\\x3d\\x28\\x37\\x68\\xee\\xc8\\x66\\x94\\x0d\\x6a\\xd7\\xe3\\x14\\xe1\\\n\\x47\\xea\\xad\\x1a\\x58\\x65\\x28\\x86\\x14\\x86\\x62\\x48\\x2a\\x17\\xe3\\xc4\\\n\\xc1\\x19\\x2c\\x28\\xed\\x6c\\xda\\xc3\\x58\\xea\\xc5\\x76\\x1a\\xd6\\xa0\\x5e\\\n\\xfc\\xd8\\xc8\\xa4\\x61\\x4e\\x65\\x84\\xda\\x0f\\xbb\\xfc\\xcb\\xae\\x24\\x28\\\n\\x0c\\xca\\x17\\x70\\xf7\\xf6\\xed\\x27\\xd8\\xf3\\x7a\\x7b\\xfe\\x09\\xfd\\x9e\\\n\\xe3\\x7e\\xb5\\x9d\\x1a\\x32\\x74\\x26\\xac\\x8e\\x1c\\x4c\\xd7\\xe1\\x29\\xb6\\\n\\x69\\x2d\\x2d\\x0b\\xb1\\x05\\x99\\x8a\\x8e\\x64\\x86\\x71\\x61\\x8d\\xbb\\x65\\\n\\x09\\x58\\xcc\\xde\\x6b\\x05\\x0b\\x7c\\x51\\x65\\x2e\\x2b\\x94\\xb1\\x7c\\x44\\\n\\x5e\\x3d\\x16\\x86\\x8b\\x68\\xbd\\x99\\xe1\\xa1\\xa1\\x18\\x9d\\xce\\x65\\x30\\\n\\x89\\x8a\\x32\\x83\\x23\\xc7\\xa3\\xc2\\x9c\\x74\\x35\\x28\\xff\\xa5\\x82\\x55\\\n\\xf6\\x36\\xa9\\x08\\x2f\\x24\\x2b\\x4b\\x8b\\xdd\\xa9\\x7d\\xc5\\xc0\\x6c\\x43\\\n\\x5f\\x50\\x5a\\xc9\\x96\\xaf\\x40\\x60\\xe7\\x8c\\x45\\xf9\\x96\\x1a\\x96\\x85\\\n\\x19\\xc1\\x76\\x69\\x95\\x6d\\x3a\\x83\\xd7\\x5a\\xf2\\xd1\\x48\\x0f\\xe4\\x68\\\n\\x5d\\x58\\x68\\xd3\\x0e\\x0c\\x33\\x7a\\x54\\x2e\\xed\\xac\\xe2\\x1f\\xd3\\x3d\\\n\\xa5\\xac\\x39\\x8d\\x8f\\xe7\\xff\\xc8\\x17\\xbf\\x0a\\xee\\x79\\xcc\\xa5\\xf3\\\n\\x33\\xde\\xfd\\xf3\\x11\\xbc\\x51\\x6d\\xc4\\x69\\x90\\x87\\x59\\x9e\\xaa\\x9c\\\n\\xae\\xe0\\xfc\\x3c\\xdb\\x74\\x5e\\x83\\x9b\\xf3\\xb3\\x1c\\x25\\x6d\\xe4\\xa6\\\n\\xb6\\xdf\\xbc\\xa9\\x61\\x9b\\x84\\x57\\x51\\xb3\\x42\\x78\\x62\\xbc\\x32\\x3d\\\n\\x49\\x81\\xc1\\x7a\\x62\\xba\\x33\\x30\\xf0\\x9f\\xdc\\x51\\xb7\\x73\\xdd\\xc8\\\n\\x2c\\x97\\x4e\\x2e\\x45\\xdb\\xbe\\xaa\\x43\\x96\\xe9\\x27\\xc7\\x72\\x4f\\xa6\\\n\\x68\\xc4\\xa5\\xf4\\xaa\\x8a\\xda\\x45\\x07\\xda\\xeb\\xa4\\x5c\\xda\\xec\\x72\\\n\\xae\\x61\\xe5\\xd3\\x7d\\x80\\x25\\x76\\xaa\\x91\\x51\\x7b\\xb7\\xc4\\x6e\\x0d\\\n\\x64\\xa7\\xa6\\x93\\xf3\\xda\\x8a\\x82\\x11\\x76\\x92\\x6c\\xb2\\x4f\\x8e\\x4f\\\n\\x4b\\x71\\x90\\x58\\x81\\x81\\x32\\x79\\x93\\xa6\\x8c\\x0d\\x74\\x37\\xeb\\x54\\\n\\x88\\x52\\x45\\x6a\\xe0\\xb1\\xef\\x89\\x71\\xe4\\x24\\xd6\\xf4\\xe5\\xf0\\xd3\\\n\\x2f\\x48\\x7c\\x4d\\x57\\xb8\\xa6\\x2d\\xe6\\x88\\x91\\x4f\\xdb\\xc1\\x11\\x9e\\\n\\x23\\xca\\x51\\x1d\\x87\\x55\\x5e\\xfc\\xe6\\xba\\xf9\\xa3\\xc2\\xdc\\x70\\x74\\\n\\x53\\xd3\\xd3\\x4d\\x55\\x57\\xe9\\xa7\\x7c\\xcf\\xc0\\xb5\\xb4\\xc8\\x8e\\xdc\\\n\\x5a\\x0a\\x32\\x2e\\x6d\\x24\\x06\\x07\\x7a\\x81\\x56\\x06\\x6a\\xa2\\xd7\\xb4\\\n\\x23\\xd8\\x5e\\xce\\x28\\x6c\\x07\\x58\\x15\\xdf\\x00\\x56\\x48\\xef\\x93\\xab\\\n\\x5b\\x8b\\x67\\x85\\xac\\xfc\\x1c\\xf3\\xd4\\x55\\xf5\\x47\\xd6\\xd2\\xa9\\x29\\\n\\x1c\\x70\\x86\\x85\\x79\\x9f\\xe7\\x7e\\x29\\xe7\\xf9\\x15\\x16\\xe9\\xf2\\x43\\\n\\x8e\\x5f\\x19\\xbd\\xa0\\xf9\\x6d\\x8f\\x71\\x30\\x0e\\xa2\\x88\\x85\\x69\\x5e\\\n\\x00\\xab\\x64\\x51\\x60\\xfe\\x96\\x27\\x22\\x51\\x52\\x0c\\x79\\x13\\x51\\x4c\\\n\\xde\\x0e\\x1a\\xfc\\x99\\x4e\\x8c\\x22\\x47\\x3e\\x56\\x99\\x49\\x12\\x3c\\xb3\\\n\\xeb\\xa4\\x51\\x31\\x9d\\xaf\\xf0\\xe1\\xa1\\xb8\\xfc\\xfa\\x6a\\x3d\\x89\\xb5\\\n\\x2a\\xef\\xd2\\xf8\\x3f\\x6a\\xe2\\x6d\\x0e\\xda\\x37\\xf0\\xce\\x5e\\x04\\xbc\\\n\\x86\\x17\\xf1\\x19\\x15\\x9f\\x53\\xf1\\x05\\x15\\x5f\\x52\\xf1\\x15\\x15\\x5f\\\n\\x53\\xf1\\x0d\\x15\\xdf\\x52\\xf1\\x1d\\x15\\xdf\\x53\\x71\\x49\\xc5\\x0f\\x54\\\n\\xfc\\x48\\xc5\\x4f\\x54\\xfc\\x4c\\xc5\\x2f\\x54\\xfc\\x4a\\xc5\\x6f\\x54\\xfc\\\n\\x4e\\x05\\xdc\\x51\\x8b\\xf8\\x93\\x8a\\xbf\\xa8\\xf8\\x9b\\x0a\\xf8\\x45\\x52\\\n\\x11\\xd7\\x54\\xfc\\x43\\xc5\\x0d\\x15\\xff\\x52\\xf1\\x1f\\x12\\xf7\\xca\\xce\\\n\\xb0\\x7c\\xe5\\xd2\\xde\\xe4\\xd7\\x70\\x10\\xa5\\xcb\\x3f\\xee\\x25\\xc2\\x5d\\\n\\x29\\x35\\xb3\\x2d\\xe4\\xbd\\xc8\\xc8\\x2f\\xc9\\x59\\x4d\\x92\\x0e\\xd7\\x2f\\\n\\xd1\\x76\\xf3\\xf4\\xad\\xf3\\xc5\\xab\\xed\\xa6\\x7c\\x15\\xfd\\x3f\\x90\\xa8\\\n\\x16\\x63\\\n\\x00\\x00\\x03\\x48\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x86\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xba\\xba\\xba\\xb8\\xb8\\xb8\\xb7\\xb7\\xb7\\\n\\xb6\\xb6\\xb6\\xb4\\xb4\\xb4\\xb3\\xb3\\xb3\\xbb\\xbb\\xbb\\xd0\\xd0\\xd0\\xe8\\\n\\xe8\\xe8\\xf3\\xf3\\xf3\\xfd\\xfd\\xfd\\xfc\\xfc\\xfc\\xed\\xed\\xed\\xe0\\xe0\\\n\\xe0\\x7b\\xb9\\x73\\xad\\xad\\xad\\xe1\\xe1\\xe1\\xfe\\xfe\\xfe\\xff\\xff\\xff\\\n\\x72\\xb5\\x69\\x64\\xb3\\x5a\\xa9\\xa9\\xa9\\xb9\\xb9\\xb9\\xf8\\xf8\\xf8\\x92\\\n\\xce\\x8f\\x6f\\xc0\\x63\\x6b\\xbc\\x60\\x67\\xb7\\x5d\\x82\\xc2\\x79\\x7e\\xbe\\\n\\x75\\x59\\xa6\\x50\\xf7\\xf7\\xf7\\xe7\\xe7\\xe7\\xef\\xef\\xef\\x83\\xc4\\x79\\\n\\x9c\\xd2\\x94\\xb2\\xda\\xab\\xaf\\xd9\\xa8\\xad\\xd8\\xa5\\xaa\\xd6\\xa2\\xa7\\\n\\xd5\\x9f\\x74\\xb4\\x6c\\x4e\\x97\\x46\\xb5\\xb5\\xb5\\xf6\\xf6\\xf6\\xeb\\xeb\\\n\\xeb\\x9f\\xd0\\x99\\x97\\xcf\\x8e\\xb1\\xd9\\xaa\\x83\\xc3\\x7a\\x61\\xaf\\x57\\\n\\x5c\\xa9\\x52\\x78\\xb7\\x6f\\x74\\xb3\\x6b\\x4f\\x95\\x48\\xf5\\xf5\\xf5\\xd3\\\n\\xeb\\xfb\\x7a\\xc2\\x71\\x68\\xb8\\x5d\\xcd\\xcd\\xcd\\xc2\\xc2\\xc2\\x5f\\x9c\\\n\\x58\\x6c\\xa4\\x66\\xa0\\xa0\\xa0\\xb2\\xb2\\xb2\\xf4\\xf4\\xf4\\xea\\xea\\xea\\\n\\xdd\\xdd\\xdd\\xe3\\xe3\\xe3\\xde\\xde\\xde\\xc9\\xc9\\xc9\\xbd\\xbd\\xbd\\x65\\\n\\x97\\x61\\xe2\\xe2\\xe2\\x9e\\x9e\\x9e\\xb0\\xb0\\xb0\\xd9\\xd9\\xd9\\xdb\\xdb\\\n\\xdb\\xc4\\xc4\\xc4\\x9b\\x9b\\x9b\\xae\\xae\\xae\\xf2\\xf2\\xf2\\xd8\\xd8\\xd8\\\n\\xd5\\xd5\\xd5\\xdc\\xdc\\xdc\\x64\\x9b\\x5f\\x5a\\x95\\x54\\x5e\\x91\\x59\\x33\\\n\\x75\\x2d\\x2e\\x6f\\x29\\x2a\\x6a\\x25\\xac\\xac\\xac\\xf0\\xf0\\xf0\\xd4\\xd4\\\n\\xd4\\xd2\\xd2\\xd2\\x6a\\xa0\\x64\\x6a\\xa9\\x62\\x65\\xa4\\x5d\\x3b\\x80\\x35\\\n\\x36\\x7a\\x31\\x58\\x97\\x51\\x8d\\xc8\\x82\\x63\\xa1\\x5b\\x25\\x64\\x21\\x59\\\n\\x9a\\x51\\x68\\xa7\\x60\\x97\\xcd\\x8d\\x94\\xcb\\x8a\\x91\\xca\\x87\\x8e\\xc9\\\n\\x84\\x8c\\xc8\\x81\\x24\\x63\\x20\\xa5\\xa5\\xa5\\xce\\xce\\xce\\x56\\x88\\x52\\\n\\x5e\\x9d\\x56\\x5a\\x99\\x53\\x2f\\x71\\x2a\\x2b\\x6b\\x26\\x27\\x66\\x23\\x23\\\n\\x62\\x20\\xa1\\xa1\\xa1\\x9f\\x9f\\x9f\\xab\\xab\\xab\\x50\\x82\\x4b\\x46\\x7b\\\n\\x41\\x8d\\x8d\\x8d\\x89\\x89\\x89\\x30\\x6c\\x2c\\x1f\\x44\\xcb\\xaa\\x00\\x00\\\n\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\\n\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xc5\\x49\\x44\\x41\\x54\\\n\\x18\\xd3\\x63\\x60\\xc0\\x0a\\x18\\x99\\x98\\x59\\x58\\xd9\\xe0\\x5c\\x76\\x0e\\\n\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\x01\\xa8\\xb4\\xa0\\x90\\x30\\x18\\x88\\x88\\\n\\x8a\\x81\\x05\\xc4\\x25\\x80\\x02\\x92\\x52\\xd2\\x32\\xb2\\x72\\xf2\\x60\\x01\\\n\\x66\\x05\\x45\\x25\\x65\\x15\\x55\\x35\\x75\\x0d\\x4d\\x2d\\x6d\\x90\\x80\\x8e\\\n\\xae\\x9e\\xbe\\x81\\xa1\\x91\\xb1\\x89\\xa9\\x99\\x39\\x58\\x05\\xab\\x85\\xa5\\\n\\x95\\xb5\\xa8\\xa0\\x8d\\xad\\x9d\\xbd\\x03\\x58\\xc0\\xd1\\xc9\\x59\\xd0\\xc5\\\n\\xd5\\xcd\\xdd\\xc3\\xd3\\xcb\\x1b\\x2c\\xe0\\xc3\\xa5\\xe8\\xe2\\xcb\\xe7\\xe7\\\n\\xcf\\xc4\\x2e\\x18\\x00\\x16\\x08\\x0c\\xf2\\x0a\\x0e\\x09\\x0d\\x0b\\x67\\x63\\\n\\x8e\\x88\\x8c\\x8a\\x06\\x0a\\xc4\\xc4\\xba\\xc5\\xc5\\x27\\x24\\x26\\x25\\xa7\\\n\\xa4\\xa6\\xa5\\x67\\x00\\x05\\xc4\\xdc\\xb8\\xfc\\x32\\xb3\\xb2\\x73\\x72\\xf3\\\n\\xf2\\xb3\\x0a\\xc0\\x7a\\x0a\\x8b\\x78\\x9d\\x8a\\x4b\\x4a\\xcb\\xca\\x2b\\x2a\\\n\\xa1\\x9e\\xa9\\xaa\\xae\\xaa\\xa9\\xad\\xab\\x6f\\x40\\xf5\\x71\\x23\\x84\\x02\\\n\\x00\\x9c\\x62\\x24\\xb0\\x06\\xef\\xb8\\x9e\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\\n\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x04\\x67\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x02\\x2b\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x36\\x6b\\xbc\\x36\\x6b\\xbb\\x36\\x6a\\xbb\\\n\\x39\\x6c\\xbc\\x3b\\x6e\\xbd\\x3a\\x6d\\xbb\\x38\\x6b\\xbb\\x3e\\x70\\xbb\\xd1\\\n\\xe0\\xf6\\xd1\\xe0\\xf7\\xf8\\xfb\\xfe\\xf7\\xfb\\xfe\\xf6\\xf9\\xfd\\xf0\\xf5\\\n\\xfc\\xea\\xf0\\xfa\\xed\\xf2\\xfb\\xf7\\xfa\\xfd\\xeb\\xf1\\xfb\\xdf\\xe9\\xf8\\\n\\xbd\\xd0\\xec\\x5e\\x89\\xc9\\xd1\\xdf\\xf6\\x80\\xaa\\xe9\\xf6\\xfa\\xfe\\xf6\\\n\\xfa\\xfd\\x64\\x8c\\xc8\\xee\\xf3\\xfb\\xea\\xf1\\xfb\\xf2\\xf6\\xfc\\xf1\\xf6\\\n\\xfc\\xe2\\xec\\xf9\\xdb\\xe7\\xf8\\xba\\xd0\\xee\\xd0\\xdf\\xf6\\x7e\\xa8\\xe8\\\n\\xe9\\xf1\\xfa\\xee\\xf4\\xfb\\xe8\\xf0\\xfa\\xdd\\xe8\\xf8\\xdb\\xe6\\xf7\\x7a\\\n\\xa3\\xe1\\xc3\\xd5\\xef\\x35\\x69\\xb7\\xcc\\xdd\\xf5\\x7e\\xa8\\xe7\\x66\\x8d\\\n\\xc9\\xe9\\xf0\\xfa\\xf3\\xf8\\xfd\\xf8\\xfa\\xfe\\xef\\xf4\\xfc\\xdf\\xe9\\xf9\\\n\\xdb\\xe7\\xf7\\xd9\\xe5\\xf7\\x78\\xa2\\xe0\\xa9\\xc2\\xe7\\x35\\x68\\xb6\\xc9\\\n\\xdc\\xf4\\x7d\\xa7\\xe7\\xe1\\xec\\xf9\\xe3\\xed\\xf9\\xee\\xf4\\xfc\\xf3\\xf7\\\n\\xfd\\xe5\\xed\\xfa\\xd8\\xe5\\xf6\\x77\\xa0\\xde\\xa4\\xbe\\xe4\\x34\\x67\\xb4\\\n\\xc7\\xd9\\xf4\\x7d\\xa6\\xe6\\x65\\x8d\\xc9\\x67\\x8e\\xc9\\x6c\\x92\\xcb\\x6d\\\n\\x92\\xcb\\x69\\x90\\xca\\x65\\x8c\\xc8\\x74\\x9c\\xda\\x9f\\xba\\xe1\\x34\\x66\\\n\\xb3\\xc5\\xd8\\xf2\\x7b\\xa4\\xe3\\x7a\\xa3\\xe3\\x7a\\xa4\\xe3\\x7b\\xa4\\xe2\\\n\\x7b\\xa3\\xe2\\x7b\\xa3\\xe1\\x79\\xa2\\xe1\\xe1\\xbf\\x5b\\xed\\xdb\\xab\\xe9\\\n\\xd0\\x85\\x72\\x9c\\xdb\\x74\\x9d\\xdc\\x9a\\xb5\\xdd\\x34\\x65\\xb1\\xc2\\xd5\\\n\\xf2\\xe8\\xc8\\x5c\\xeb\\xd7\\xa4\\xfb\\xf4\\xdc\\xd9\\xb3\\x58\\x73\\x9b\\xda\\\n\\x73\\x9b\\xd9\\x95\\xb0\\xda\\x33\\x64\\xaf\\xbe\\xd2\\xf0\\x7a\\xa3\\xe2\\x78\\\n\\xa1\\xe0\\xd9\\xb2\\x52\\xf8\\xeb\\xb4\\xf8\\xe6\\x8e\\xee\\xdd\\xb5\\xd8\\x9c\\\n\\x38\\x70\\x99\\xd6\\x8e\\xab\\xd5\\x33\\x63\\xad\\x36\\x6a\\xba\\xbb\\xd0\\xef\\\n\\x7a\\xa2\\xe2\\xec\\xd9\\xac\\xf8\\xe3\\x82\\xc2\\x88\\x33\\xfa\\xed\\xac\\xcf\\\n\\x9e\\x43\\x6d\\x96\\xd3\\x8a\\xa7\\xd2\\x32\\x62\\xab\\xb8\\xce\\xef\\xf7\\xfa\\\n\\xfe\\x88\\xc0\\x62\\xf9\\xea\\xa2\\xf6\\xdc\\x61\\xc2\\x87\\x31\\xf7\\xe1\\x77\\\n\\xf0\\xde\\xb6\\xca\\x94\\x3a\\x84\\xa3\\xce\\x32\\x61\\xaa\\x38\\x6c\\xbb\\xb6\\\n\\xcc\\xee\\x7a\\xa2\\xe1\\xc2\\xdc\\xbf\\xef\\xdb\\xab\\xf7\\xe0\\x74\\xf5\\xda\\\n\\x58\\xf5\\xdb\\x5d\\xf8\\xe6\\x90\\xe1\\xc1\\x92\\x81\\x9e\\xcc\\x32\\x61\\xa8\\\n\\x37\\x6b\\xba\\xb3\\xca\\xed\\x7a\\xa2\\xe0\\xe1\\xc2\\x8e\\xf9\\xe8\\x97\\xf5\\\n\\xdb\\x5b\\xc2\\x88\\x32\\xf6\\xde\\x6a\\xf6\\xe7\\xb1\\xc2\\x83\\x2d\\x31\\x60\\\n\\xa7\\x35\\x6a\\xba\\xad\\xc6\\xeb\\xad\\xc5\\xea\\xc9\\x91\\x38\\xf6\\xec\\xdd\\\n\\xf9\\xee\\xbd\\xf8\\xea\\xac\\xf8\\xea\\xab\\xf8\\xea\\xad\\xfb\\xf3\\xd4\\xe4\\\n\\xc8\\xa4\\xbe\\x7b\\x26\\x35\\x69\\xb9\\x35\\x69\\xb8\\x35\\x68\\xb7\\x35\\x68\\\n\\xb5\\xc5\\x8a\\x32\\xc4\\x87\\x30\\xc3\\x85\\x2f\\xc1\\x81\\x2b\\xc0\\x7f\\x29\\\n\\xbf\\x7d\\x28\\xbd\\x79\\x25\\xbd\\x77\\x23\\xbc\\x76\\x22\\xff\\xff\\xff\\x59\\\n\\xac\\x85\\xa0\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\\n\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x01\\\n\\x16\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x60\\x04\\x02\\x26\\x26\\x66\\x66\\\n\\x16\\x56\\x36\\x76\\x0e\\x06\\x06\\x06\\x46\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\\n\\x01\\x5e\\x41\\x21\\x61\\x11\\x51\\xa0\\x80\\x98\\xb8\\x84\\xa4\\x94\\xb4\\x8c\\\n\\x2c\\xb7\\x9c\\xbc\\x82\\xa2\\x08\\x07\\x03\\xa3\\x92\\xb2\\x9c\\x9c\\x94\\x8a\\\n\\xaa\\x20\\xaf\\x9a\\xba\\x86\\xa6\\x96\\x36\\x03\\xa3\\x8e\\xae\\x9a\\x9a\\x9e\\\n\\xbe\\x81\\xa1\\x91\\xb1\\x89\\xa9\\x99\\xb9\\x05\\x03\\x93\\xa5\\x95\\xb5\\xb5\\\n\\x8d\\xad\\xa0\\x9d\\xbd\\x89\\xa9\\x83\\xa3\\x93\\x33\\x03\\x93\\x8b\\xab\\x94\\\n\\x9b\\xbb\\x87\\xa7\\x97\\xb7\\x94\\x94\\x94\\x8f\\xaf\\x1f\\x03\\xb3\\x7f\\x40\\\n\\x60\\x50\\x70\\x48\\x68\\x58\\x78\\x44\\x64\\x54\\x74\\x4c\\x2c\\x03\\x73\\x5c\\\n\\x60\\x60\\x48\\x48\\x70\\x58\\x7c\\x42\\x62\\x52\\x72\\x4a\\x6a\\x1a\\x03\\x73\\\n\\x7a\\x46\\x86\\x66\\x48\\x68\\x66\\x56\\x76\\x4e\\x6e\\x5e\\x7e\\x41\\x21\\x43\\\n\\x51\\x71\\x09\\x37\\x08\\x94\\x96\\x95\\x57\\x54\\x56\\x55\\xd7\\x30\\xb0\\xd7\\\n\\x86\\xd5\\xd5\\x03\\x41\\x43\\x63\\x53\\x73\\x4b\\x6b\\x5b\\x3b\\x43\\x47\\x67\\\n\\x57\\x5d\\x77\\x77\\x77\\x4f\\x6f\\x5f\\x5f\\xff\\x84\\x89\\x93\\x26\\x33\\x4c\\\n\\x99\\x3a\\x0d\\xa8\\x62\\xfa\\x8c\\xc6\\x99\\xb3\\x66\\xce\\x9e\\x33\\x77\\x1e\\\n\\xc3\\xfc\\x05\\x0b\\xb9\\xb9\\x17\\x2d\\x5e\\xb2\\x74\\xd9\\xb2\\x65\\xcb\\x57\\\n\\xac\\x5c\\xc5\\x50\\xb4\\x7a\\xcd\\xda\\x75\\xeb\\x37\\x6c\\x9c\\xbb\\x69\\xf3\\\n\\x96\\x55\\x5b\\xb7\\x6d\\x07\\x00\\x8e\\x3f\\x51\\x00\\xcd\\x78\\x5b\\xb6\\x00\\\n\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\\n\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\\n\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\\n\\x2d\\x31\\x30\\x2d\\x31\\x32\\x54\\x31\\x35\\x3a\\x32\\x31\\x3a\\x34\\x36\\x2b\\\n\\x30\\x32\\x3a\\x30\\x30\\x4b\\x55\\x30\\xf8\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x31\\x30\\x2d\\x31\\x32\\x54\\x31\\x35\\x3a\\x32\\x31\\x3a\\x34\\x36\\\n\\x2b\\x30\\x32\\x3a\\x30\\x30\\x3a\\x08\\x88\\x44\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x4f\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x06\\x00\\x00\\x00\\x1f\\xf3\\xff\\x61\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xaf\\xc8\\x37\\x05\\x8a\\xe9\\\n\\x00\\x00\\x00\\x19\\x74\\x45\\x58\\x74\\x53\\x6f\\x66\\x74\\x77\\x61\\x72\\x65\\\n\\x00\\x41\\x64\\x6f\\x62\\x65\\x20\\x49\\x6d\\x61\\x67\\x65\\x52\\x65\\x61\\x64\\\n\\x79\\x71\\xc9\\x65\\x3c\\x00\\x00\\x01\\xe1\\x49\\x44\\x41\\x54\\x38\\xcb\\xa5\\\n\\x92\\x3d\\x48\\x95\\x71\\x14\\xc6\\x7f\\xaf\\x66\\x05\\x7e\\x5c\\x3f\\x91\\xc4\\\n\\x2c\\x88\\x9b\\x79\\x6f\\x58\\xa3\\x7b\\x4b\\x43\\xb5\\xb4\\x37\\x1a\\xd1\\x50\\\n\\x63\\x05\\x4d\\x15\\xb4\\x35\\xba\\x34\\x45\\x6b\\x53\\x14\\x24\\xa4\\x38\\x56\\\n\\x16\\x2a\\x77\\xb2\\xb8\\x82\\x8a\\x4a\\xdd\\x42\\x25\\xcb\\xee\\x7b\\x9e\\x73\\\n\\x1a\\x5e\\x31\\xe3\\xaa\\x8b\\x67\\x39\\xf0\\xe7\\x9c\\xe7\\x7f\\x9e\\xdf\\x39\\\n\\x49\\x44\\x70\\x90\\x38\\xb4\\xdb\\xe3\\x83\\xa9\\xbb\\x25\\x77\\x15\\x25\\x0f\\\n\\x49\\xaf\\x1f\\x0d\\x3d\\xb9\\xb4\\x97\\x40\\x5d\\x6d\\xf3\\x9d\\x76\\x9c\\x62\\\n\\x7f\\x53\\x3f\\xf9\\x96\\x7c\\x62\\xd2\\xd0\\x7e\\x13\\xd4\\x08\\xdc\\x3f\\xff\\\n\\xf8\\x47\\xd5\\xaa\\x1b\\x69\\xa4\\x6c\\x54\\x37\\x30\\xb3\\x99\\xfd\\x04\\x92\\\n\\x88\\xe0\\xe1\\xf4\\xbd\\x70\\x17\\x92\\xa3\\x2c\\xc7\\x40\\xdb\\x99\\xc4\\xdc\\\n\\x98\\x5e\\x9e\\x59\\x33\\x93\\x24\\xd5\\x99\\x19\\x4f\\xaf\\x3c\\x6f\\xab\\x61\\\n\\x20\\x17\\xa7\\x1b\\xf3\\x78\\x38\\x1e\\x41\\xe0\\x89\\xdc\\x89\\x80\\x42\\x57\\\n\\x21\\xa7\\x10\\x11\\xce\\xfb\\xf2\\xc7\\xdd\\x21\\x4a\\x42\\xe1\\x78\\x38\\x4b\\\n\\x3f\\xe7\\x59\\xdd\\x5c\\xc5\\xc2\\xf0\\x08\\xea\\x92\\x7a\\xdc\\x83\\x53\\xb9\\\n\\x3c\\x66\\xb6\\x87\\x80\\x89\\x52\\xa5\\x44\\x4b\\x43\\x8e\\xee\\xc6\\x1e\\xbe\\\n\\xfd\\xaa\\xa0\\x50\\x66\\x27\\xfe\\x20\\x17\\x86\\xe8\\x68\\xea\\xe0\\xea\\xb3\\\n\\xcb\\x61\\x66\\x98\\x89\\x57\\xc3\\xa3\\x49\\xb2\\xf3\\x0e\\x6e\\x8f\\x5d\\x8f\\\n\\x42\\x57\\x81\\xd2\\xf7\\x29\\xe4\\x8e\\x87\\xb0\\x70\\x14\\xa2\\xa5\\x21\\x47\\\n\\x6f\\x73\\x1f\\xee\\x41\\xe0\\x8c\\x4d\\x4e\\xf0\\xe6\\xc6\\x58\\xf2\\xdf\\x1d\\\n\\x98\\x09\\x85\\x30\\x65\\x59\\x5b\\xcd\\x72\\x61\\xf5\\x42\\x9e\\x41\\x8e\\xad\\\n\\xda\\x6d\\x0b\\xb7\\xde\\x0e\\x87\\x99\\x68\\x3d\\xda\\x8a\\xdc\\x49\\x23\\xcd\\\n\\x98\\xb8\\x30\\xcf\\xd8\\xf4\\x36\\xf7\\x31\\x3b\\xff\\x99\\x85\\x95\\xc5\\xaa\\\n\\xa4\\xc3\\xd2\\x0e\\x01\\x33\\x51\\xec\\x1e\\x40\\x04\\x73\\xeb\\x65\\x0a\\xed\\\n\\x83\\xdb\\x1b\\xf1\\x70\\xca\\x6b\\x5f\\x90\\x3b\\x0b\\x2b\\x8b\\x8c\\xde\\x1c\\\n\\x3f\\x52\\x03\\x31\\x35\\xc3\\x10\\x53\\x5f\\x3f\\x71\\xb6\\xf3\\x1c\\xe5\\x95\\\n\\x39\\x96\\x2a\\xcb\\x48\\xa2\\x33\\xd7\\xc9\\xc9\\x9e\\x13\\x99\\x8d\\xbd\\xb6\\\n\\x60\\xa9\\x21\\x77\\x8a\\x1d\\x83\\x98\\x9c\\xa5\\xca\\x32\\x2f\\xae\\xbd\\x4c\\\n\\x00\\x2e\\x8e\\x5c\\x88\\xbe\\x63\\xc7\\x49\\x65\\xd8\\xd6\\xd8\\xb5\\x02\\x66\\\n\\x7c\\x98\\x9d\\xc4\\x94\\xfd\\x62\\xa6\\xcd\\x7f\\x60\\xcd\\xc7\\xdf\\x4d\\x20\\\n\\xf9\\x6f\\xb9\\xd6\\x77\\x3d\\xe5\\x83\\xc4\\x5f\\xc7\\xc4\\x6d\\xd0\\x36\\x45\\\n\\xe5\\x58\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x7a\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x98\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x5b\\xc2\\x39\\x54\\xbd\\x31\\x52\\xbb\\x2d\\\n\\x52\\xb9\\x2b\\x59\\xc2\\x36\\x74\\xc2\\x59\\xa3\\xd7\\x96\\xae\\xdc\\xa5\\xa1\\\n\\xd6\\x95\\x6a\\xb9\\x50\\x42\\xab\\x1f\\x55\\xc0\\x34\\x90\\xce\\x7f\\xb7\\xe1\\\n\\xaf\\x9d\\xd8\\x92\\x83\\xce\\x77\\xb5\\xe1\\xae\\x8b\\xc8\\x78\\x32\\x9d\\x1d\\\n\\x55\\xbe\\x34\\x7a\\xcc\\x6d\\x76\\xca\\x6a\\x72\\xc8\\x68\\x74\\xc8\\x68\\x75\\\n\\xc8\\x68\\x79\\xc9\\x6b\\xb4\\xdf\\xac\\x89\\xc4\\x76\\x2d\\x96\\x1c\\x70\\xbf\\\n\\x57\\x70\\xc7\\x65\\x6e\\xc5\\x63\\x6e\\xc4\\x62\\x71\\xc4\\x63\\xbe\\xe3\\xb6\\\n\\x7e\\xc7\\x6f\\xb5\\xdf\\xac\\x5e\\xa9\\x48\\x54\\xbb\\x2d\\xa1\\xd7\\x95\\x9b\\\n\\xd7\\x91\\x76\\xc9\\x69\\x6f\\xc6\\x64\\x6e\\xc4\\x61\\x6f\\xc3\\x61\\x6f\\xc2\\\n\\x61\\xc0\\xe4\\xb9\\xff\\xff\\xff\\xe6\\xf4\\xe3\\x99\\xd1\\x8b\\x9d\\xce\\x8b\\\n\\x20\\x88\\x1c\\x4b\\xb4\\x26\\xb1\\xdd\\xa7\\x80\\xcc\\x72\\x73\\xc7\\x66\\xb7\\\n\\xe1\\xb0\\xd6\\xee\\xd2\\x70\\xc1\\x63\\xbf\\xe3\\xb8\\xfc\\xfd\\xfb\\x99\\xd0\\\n\\x8c\\x7e\\xc1\\x69\\xae\\xd7\\xa1\\x1e\\x7f\\x1b\\x42\\xad\\x1f\\xaf\\xdc\\xa6\\\n\\x7f\\xca\\x70\\x80\\xca\\x73\\xf1\\xf9\\xf0\\xed\\xf7\\xeb\\x96\\xcd\\x88\\x71\\\n\\xb9\\x5b\\x7d\\xbe\\x67\\xaf\\xd7\\xa0\\x1e\\x7a\\x1b\\x42\\xa9\\x1f\\x9f\\xd2\\\n\\x91\\x9a\\xd4\\x8d\\x74\\xc3\\x64\\x87\\xc9\\x79\\xf4\\xfa\\xf2\\xfd\\xfe\\xfd\\\n\\x96\\xcb\\x86\\x6d\\xb7\\x57\\x72\\xb9\\x5b\\x97\\xcc\\x85\\x9a\\xc7\\x87\\x1f\\\n\\x78\\x1b\\x64\\xb0\\x4c\\xb4\\xdd\\xaa\\x79\\xc1\\x64\\x71\\xbe\\x5f\\x85\\xc5\\\n\\x75\\xd9\\xec\\xd4\\x99\\xcd\\x8a\\x6c\\xb6\\x56\\x6e\\xb5\\x58\\x74\\xb7\\x5c\\\n\\xb4\\xda\\xa6\\x4e\\x9b\\x41\\x2f\\x96\\x1c\\x87\\xc2\\x72\\xb2\\xdb\\xa8\\x77\\\n\\xbc\\x60\\x73\\xba\\x5c\\x70\\xb8\\x59\\x6f\\xb5\\x59\\x6f\\xb5\\x58\\x74\\xb7\\\n\\x5b\\xb3\\xd9\\xa5\\x7f\\xb8\\x69\\x1e\\x71\\x1a\\x20\\x8a\\x1b\\x83\\xbe\\x6d\\\n\\xb5\\xdb\\xa8\\x98\\xcc\\x87\\x7d\\xbc\\x66\\x7c\\xba\\x64\\x98\\xcb\\x86\\xb4\\\n\\xd9\\xa5\\x7d\\xb7\\x66\\x1d\\x6c\\x1a\\x1f\\x83\\x1b\\x52\\xa0\\x42\\x9a\\xca\\\n\\x87\\xab\\xd3\\x9b\\xab\\xd2\\x9b\\x96\\xc7\\x83\\x4c\\x97\\x3d\\x1e\\x6e\\x1a\\\n\\x1f\\x7a\\x1b\\x1e\\x73\\x1a\\x1e\\x70\\x1a\\x1f\\x71\\x1b\\x2c\\x5a\\xcc\\x91\\\n\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\\n\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xbc\\x49\\x44\\\n\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x0e\\x18\\x99\\x98\\x59\\x90\\xb8\\xac\\x6c\\\n\\xec\\x1c\\x1c\\x9c\\x5c\\xdc\\x30\\x3e\\x0f\\x2f\\x1f\\xbf\\x80\\x00\\xbf\\xa0\\\n\\x90\\x30\\x84\\x2f\\xc2\\x2b\\x28\\x2a\\x26\\x2e\\x21\\x29\\x25\\x2d\\x23\\x0b\\\n\\x16\\x90\\xe3\\x13\\x15\\x97\\x57\\x50\\x54\\x52\\x56\\x51\\x55\\x03\\xf1\\xd5\\\n\\x35\\x34\\xb5\\xb4\\x75\\x74\\xf5\\xf4\\x0d\\x0c\\x8d\\x8c\\x4d\\x80\\x02\\xa6\\\n\\x66\\xe6\\x16\\x96\\x56\\xd6\\x36\\x06\\xb6\\x76\\xf6\\x0e\\x8e\\x40\\x01\\x27\\\n\\x67\\x17\\x57\\x37\\x03\\x77\\x03\\x5b\\x0f\\x4f\\x2f\\x6f\\x1f\\xa0\\x80\\xaf\\\n\\x9f\\x7f\\x40\\x60\\x90\\x41\\x70\\x48\\x68\\x58\\x78\\x44\\x24\\xc8\\x90\\xa8\\\n\\xe8\\x98\\xd8\\xb8\\xf8\\x84\\xc4\\xa4\\xe4\\x94\\x54\\xb0\\x2d\\x69\\xe9\\x19\\\n\\x99\\x59\\xd9\\x39\\xb9\\x79\\xf9\\x05\\x85\\x10\\x87\\x14\\x15\\x97\\x94\\x96\\\n\\x95\\x57\\x54\\x56\\x55\\xc3\\x9c\\x5a\\x53\\x5b\\x57\\xdf\\xd0\\xd8\\xd4\\x8c\\\n\\xe4\\x9b\\x96\\xd6\\xb6\\x76\\x1c\\xfe\\x06\\x00\\xbc\\x2f\\x25\\x59\\xf4\\xd8\\\n\\x22\\x48\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\\n\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\\n\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\\n\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\\n\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\\n\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\\n\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\\n\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xaa\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xf9\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xc0\\x4d\\x0e\\xbc\\x42\\x04\\xb9\\x45\\x03\\\n\\xd1\\x73\\x38\\xf7\\xb5\\x8d\\xfe\\xd6\\xb8\\xf5\\xa8\\x72\\xcb\\x6b\\x2d\\x80\\\n\\xab\\xe8\\x7e\\xa9\\xe8\\xb9\\x44\\x03\\xf6\\xb5\\x8d\\xff\\x92\\x4d\\xff\\x77\\\n\\x11\\xff\\x86\\x21\\xeb\\x8a\\x40\\x80\\xab\\xea\\x7c\\xa9\\xe8\\x74\\xa2\\xe2\\\n\\xfe\\xcd\\xae\\xff\\xff\\xff\\xef\\x7f\\x18\\x79\\xa7\\xe6\\xad\\xc8\\xef\\x87\\\n\\xb0\\xe8\\x60\\x95\\xdd\\xf4\\x9d\\x63\\xff\\x7f\\x18\\xf8\\x76\\x00\\xee\\x76\\\n\\x00\\xe1\\x68\\x03\\x6e\\xa0\\xe2\\xa8\\xc7\\xee\\xa3\\xc2\\xed\\x75\\xa4\\xe3\\\n\\x47\\x84\\xd6\\xc3\\x57\\x1a\\xc9\\x64\\x25\\xe6\\x77\\x21\\xea\\x79\\x05\\xdd\\\n\\x64\\x01\\xbd\\x4d\\x04\\x62\\x97\\xe1\\xa1\\xc1\\xec\\x92\\xb7\\xe8\\x99\\xbb\\\n\\xe9\\x61\\x97\\xdd\\x2c\\x72\\xcd\\x53\\x8e\\xdb\\x99\\xbb\\xea\\x80\\xaa\\xe3\\\n\\x81\\xab\\xe3\\x8a\\xb1\\xe4\\x4b\\x88\\xd6\\x1a\\x62\\xc6\\x43\\x84\\xd6\\x90\\\n\\xb5\\xe7\\x74\\xa3\\xe0\\x77\\xa4\\xe0\\x81\\xab\\xe2\\x43\\x7f\\xd3\\x19\\x59\\\n\\xc6\\x35\\x77\\xd2\\x87\\xaf\\xe4\\x72\\xa1\\xdf\\x7c\\xa9\\xe1\\x3f\\x7a\\xd0\\\n\\x18\\x53\\xc0\\x23\\x6e\\xcd\\x7e\\xa8\\xe1\\x79\\xa6\\xe0\\x3d\\x77\\xd0\\x17\\\n\\x50\\xbd\\x1a\\x62\\xc9\\x75\\xa3\\xdf\\x3c\\x74\\xcf\\x16\\x4a\\xbd\\x18\\x59\\\n\\xc4\\x3b\\x71\\xcc\\x15\\x45\\xb9\\x16\\x4e\\xc0\\x14\\x41\\xb7\\x8e\\xe6\\x63\\\n\\xbb\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\\n\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x8b\\x49\\\n\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x40\\x00\\x46\\x26\\x66\\x06\\x64\\xc0\\xc2\\\n\\xca\\xc6\\xce\\x01\\x62\\x70\\x72\\x81\\xf9\\xdc\\x3c\\xbc\\x7c\\xfc\\x02\\xdc\\\n\\x40\\x96\\xa0\\x90\\x30\\x48\\x80\\x49\\x44\\x54\\x54\\x54\\x8c\\x09\\xc8\\x12\\\n\\x97\\x90\\x94\\x02\\x52\\xcc\\xd2\\x32\\xb2\\x72\\xf2\\x20\\x53\\x14\\x14\\x95\\\n\\x94\\x55\\x18\\x18\\x54\\xd5\\xd4\\x35\\x34\\xb5\\x40\\x6a\\xb5\\x75\\x74\\xf5\\\n\\xf4\\x0d\\x40\\x6a\\xa0\\xb6\\x18\\x1a\\x19\\x9b\\x98\\x9a\\x99\\x23\\xac\\xb3\\\n\\xb0\\xb4\\xb2\\xb6\\xb1\\xb5\\x43\\x08\\xd8\\x3b\\x38\\x3a\\x39\\xbb\\x20\\x39\\\n\\xc8\\xd5\\xcd\\xdd\\xc3\\x13\\xd9\\x85\\x5e\\xde\\x3e\\xbe\\x28\\x4e\\xf6\\xf3\\\n\\x0f\\x40\\xe1\\x33\\x04\\x06\\x31\\x90\\x04\\x00\\x27\\x86\\x0d\\x93\\x1d\\x3d\\\n\\x5f\\x46\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\\n\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\\n\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\\n\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\\n\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\\n\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\x2d\\x30\\x34\\x54\\x31\\x36\\x3a\\x34\\x33\\\n\\x3a\\x30\\x39\\x2b\\x30\\x32\\x3a\\x30\\x30\\x96\\x5a\\x94\\xbc\\x00\\x00\\x00\\\n\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\xd0\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xd1\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xa1\\xa1\\xa1\\x9a\\x9a\\x9a\\x96\\x96\\x96\\\n\\xae\\xae\\xae\\xc8\\xc8\\xc8\\xca\\xca\\xca\\xbe\\xbe\\xbe\\x9b\\x9b\\x9b\\xad\\\n\\xad\\xad\\xc7\\xc7\\xc7\\xaa\\xaa\\xaa\\x92\\x92\\x92\\x9f\\x9f\\x9f\\xb4\\xb4\\\n\\xb4\\x93\\x93\\x93\\xc0\\xc0\\xc0\\xac\\xac\\xac\\x8f\\x8f\\x8f\\xa2\\xa2\\xa2\\\n\\x7a\\x7a\\x7a\\xbc\\xbc\\xbc\\xb9\\xb9\\xb9\\x91\\x91\\x91\\xe1\\xc3\\x61\\x95\\\n\\x93\\x90\\x8e\\x8e\\x8e\\xdc\\xb9\\x5a\\xdf\\xb8\\x55\\xde\\xb5\\x51\\xdd\\xb1\\\n\\x4d\\xdc\\xad\\x49\\xd7\\xa8\\x46\\xd5\\x9a\\x36\\xd6\\x9a\\x35\\xd8\\x99\\x31\\\n\\xe1\\xc2\\x60\\xfc\\xf3\\xc9\\xfd\\xf3\\xcb\\xfe\\xf6\\xd4\\xff\\xf6\\xd7\\xff\\\n\\xf4\\xd8\\xff\\xf8\\xe0\\xff\\xf8\\xdf\\xff\\xf5\\xda\\xfa\\xeb\\xbd\\xd6\\x93\\\n\\x2b\\xe0\\xbf\\x5c\\xfc\\xf3\\xc8\\xf9\\xdf\\x75\\xfd\\xe6\\x89\\xff\\xe7\\x95\\\n\\xff\\xe5\\x9a\\xff\\xee\\xaa\\xff\\xed\\xa8\\xff\\xe3\\x99\\xf9\\xd5\\x74\\xf3\\\n\\xcc\\x59\\xf1\\xc8\\x4f\\xfa\\xe9\\xbb\\xd5\\x8d\\x24\\xdf\\xbb\\x58\\xfc\\xf1\\\n\\xc7\\xf9\\xdc\\x6f\\xed\\xbb\\x56\\xef\\xbd\\x61\\xff\\xe7\\x9b\\xe2\\xa6\\x35\\\n\\xe1\\xa4\\x4b\\xff\\xe2\\x90\\xe9\\xad\\x49\\xe3\\xa4\\x38\\xf0\\xc4\\x49\\xf9\\\n\\xe8\\xb8\\xd4\\x88\\x1e\\xde\\xb7\\x53\\xfc\\xf0\\xc6\\xf8\\xd9\\x6a\\xfd\\xe2\\\n\\x7c\\xff\\xe8\\x90\\xff\\xe9\\x99\\xdf\\x9f\\x32\\xb2\\x8b\\x54\\xff\\xe2\\x8a\\\n\\xf9\\xd0\\x6a\\xf1\\xc5\\x50\\xf0\\xc1\\x46\\xf9\\xe7\\xb6\\xd3\\x83\\x18\\xdd\\\n\\xb2\\x4e\\xfb\\xef\\xc3\\xf8\\xd6\\x65\\xec\\xb6\\x4c\\xef\\xbd\\x5a\\xff\\xeb\\\n\\x95\\xdd\\x97\\x30\\xab\\x82\\x4d\\xff\\xe1\\x84\\xe9\\xa9\\x41\\xe1\\x9f\\x32\\\n\\xef\\xbe\\x42\\xf9\\xe5\\xb4\\xd2\\x7e\\x13\\xfb\\xee\\xc1\\xf7\\xd3\\x5f\\xfc\\\n\\xdb\\x6c\\xff\\xe5\\x7f\\xff\\xed\\x8f\\xff\\xf2\\x97\\xff\\xed\\x93\\xff\\xdf\\\n\\x7c\\xf8\\xcc\\x5b\\xef\\xbe\\x46\\xee\\xba\\x3c\\xf9\\xe3\\xb3\\xd1\\x79\\x0e\\\n\\xdb\\xa8\\x43\\xfb\\xec\\xbf\\xf5\\xcf\\x59\\xec\\xb0\\x41\\xef\\xba\\x4e\\xef\\\n\\xc2\\x5a\\xef\\xc6\\x60\\xef\\xc4\\x5c\\xef\\xb6\\x4c\\xe6\\xa5\\x37\\xe1\\x9a\\\n\\x2a\\xee\\xb8\\x38\\xf8\\xe3\\xb1\\xd0\\x75\\x09\\xda\\xa3\\x3d\\xfa\\xeb\\xbc\\\n\\xfc\\xeb\\xbc\\xfe\\xee\\xbf\\xff\\xf4\\xc6\\xff\\xf8\\xce\\xff\\xfa\\xd3\\xff\\\n\\xf8\\xd0\\xff\\xf2\\xc7\\xfc\\xe9\\xba\\xf9\\xe4\\xb3\\xf8\\xe2\\xb0\\xcf\\x71\\\n\\x05\\xd9\\x9d\\x36\\xd7\\x94\\x2c\\xd6\\x90\\x28\\xd5\\x8c\\x23\\xd3\\x84\\x1a\\\n\\xd2\\x80\\x15\\xd1\\x7c\\x11\\xd0\\x76\\x0a\\xcf\\x73\\x07\\xcf\\x70\\x04\\xce\\\n\\x6e\\x01\\xff\\xff\\xff\\xe7\\x55\\x16\\xa0\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\\n\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\\n\\x05\\x1d\\x48\\x00\\x00\\x00\\xd9\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x00\\\n\\x01\\x46\\x26\\x26\\x66\\x06\\x24\\xc0\\xc2\\xca\\xc6\\xc6\\xce\\x81\\xe0\\x73\\\n\\x72\\x71\\xf3\\xf0\\xf0\\xf2\\xf1\\xc0\\xf8\\xfc\\x02\\x82\\x20\\x4a\\x48\\x58\\\n\\x04\\x26\\x20\\x0a\\x96\\x13\\xe2\\x17\\x82\\x09\\x88\\x89\\x23\\x1b\\xc8\\x20\\\n\\x21\\x29\\x2e\\x25\\x2d\\x23\\x2b\\x27\\xaf\\xc0\\xa0\\xa8\\xa4\\x0c\\x14\\x50\\\n\\x51\\x55\\x53\\xd7\\xd0\\xd4\\xd2\\xd6\\x51\\x54\\x54\\xd4\\xd5\\x03\\x0a\\xe8\\\n\\x1b\\x18\\x1a\\x19\\x9b\\x98\\x9a\\x99\\x5b\\x58\\x5a\\x59\\xdb\\x00\\x05\\x6c\\\n\\xed\\xec\\x1d\\x1c\\x9d\\x9c\\x5d\\x5c\\xdd\\xdc\\x3d\\x3c\\xbd\\x80\\x02\\xde\\\n\\x3e\\xbe\\x7e\\xfe\\x01\\x81\\x41\\xc1\\x21\\xa1\\x61\\xe1\\x11\\x40\\x81\\xc8\\\n\\xa8\\xe8\\x98\\xd8\\xb8\\xf8\\x84\\xc4\\xa4\\xe4\\x94\\xd4\\x34\\xa0\\x80\\x7c\\\n\\x7a\\x46\\x66\\x56\\x76\\x4e\\x6e\\x5e\\x7e\\x41\\x61\\x51\\x31\\x50\\xa0\\xa4\\\n\\xb4\\xac\\xbc\\xa2\\xb2\\xaa\\xba\\xa6\\xb6\\xae\\xbe\\xa1\\x11\\x28\\xd0\\xd4\\\n\\xdc\\xd2\\xda\\xd6\\xde\\xd1\\xd9\\xd5\\xdd\\xd3\\xdb\\xdb\\x07\\x14\\xe8\\x57\\\n\\x9e\\x30\\x71\\x92\\xd7\\xe4\\x29\\x53\\x8b\\xa7\\x4d\\x9f\\x31\\x93\\x01\\x00\\\n\\x0d\\x7b\\x30\\x89\\x0a\\x08\\x1b\\xea\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\\n\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\\n\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\\n\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\\n\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\\n\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\\n\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\\n\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\\n\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x5d\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x7d\\\n\\x50\\x4c\\x54\\x45\\x00\\x00\\x00\\xcb\\xcb\\xcb\\xc7\\xc7\\xc7\\xc4\\xc4\\xc4\\\n\\xbf\\xbf\\xbf\\xe5\\xe5\\xe5\\xe4\\xe4\\xe4\\xac\\xac\\xac\\xd1\\xd1\\xd1\\xce\\\n\\xce\\xce\\xca\\xca\\xca\\xc2\\xc2\\xc2\\xde\\xde\\xde\\xdd\\xdd\\xdd\\xb2\\xb2\\\n\\xb2\\xa7\\xa7\\xa7\\xa3\\xa3\\xa3\\xd0\\xd0\\xd0\\xdc\\xdc\\xdc\\xed\\xed\\xed\\\n\\xdb\\xdb\\xdb\\xbe\\xbe\\xbe\\xd6\\xd6\\xd6\\xd4\\xd4\\xd4\\xb0\\xb0\\xb0\\xe7\\\n\\xe7\\xe7\\xb7\\xb7\\xb7\\x8b\\x8b\\x8b\\xd9\\xd9\\xd9\\xd2\\xd2\\xd2\\xc8\\xc8\\\n\\xc8\\x79\\x79\\x79\\x71\\x71\\x71\\xc5\\xc5\\xc5\\xcc\\xcc\\xcc\\xc9\\xc9\\xc9\\\n\\xba\\xba\\xba\\x9c\\x9c\\x9c\\xa1\\xa1\\xa1\\xc6\\xc6\\xc6\\xc1\\xc1\\xc1\\x89\\\n\\x89\\x89\\xc0\\xc0\\xc0\\xd8\\xd8\\xd8\\xcd\\xcd\\xcd\\xbc\\xbc\\xbc\\x82\\x82\\\n\\x82\\x8f\\x8f\\x8f\\xc3\\xc3\\xc3\\x8c\\x8c\\x8c\\x87\\x87\\x87\\x83\\x83\\x83\\\n\\xe9\\xe9\\xe9\\xa5\\xa5\\xa5\\x70\\xa4\\x40\\x65\\x9f\\x31\\x6b\\x6b\\x6b\\xe2\\\n\\xe2\\xe2\\xb1\\xb1\\xb1\\x68\\xa0\\x3a\\x81\\xb3\\x5a\\x57\\x98\\x28\\x61\\x61\\\n\\x61\\xa0\\xa0\\xa0\\xcf\\xcf\\xcf\\x6f\\xa5\\x3d\\x6d\\xa2\\x37\\x67\\xa0\\x33\\\n\\x62\\x9c\\x30\\x7c\\xaf\\x55\\xaa\\xcb\\x91\\x74\\xab\\x4f\\x45\\x8e\\x18\\x58\\\n\\x58\\x58\\x53\\x53\\x53\\x6b\\xa3\\x37\\xb0\\xce\\x96\\xad\\xcd\\x94\\xa8\\xcb\\\n\\x90\\x90\\xbc\\x74\\xa1\\xc7\\x8a\\x68\\xa5\\x46\\x35\\x87\\x07\\xab\\xab\\xab\\\n\\xa6\\xa6\\xa6\\xd5\\xd5\\xd5\\x63\\x9f\\x31\\x8e\\xba\\x6f\\x89\\xb8\\x6b\\x85\\\n\\xb6\\x66\\x80\\xb3\\x61\\x82\\xb5\\x67\\x98\\xc2\\x83\\x5c\\xa0\\x3c\\x25\\x7f\\\n\\x00\\xa4\\xa4\\xa4\\x5b\\x9b\\x29\\xa9\\xca\\x90\\xa5\\xc8\\x8d\\xa1\\xc6\\x8a\\\n\\x9e\\xc5\\x88\\x85\\xb6\\x6a\\x97\\xc2\\x82\\x66\\xa5\\x48\\x26\\x77\\x0a\\x81\\\n\\x81\\x81\\x6f\\x6f\\x6f\\x64\\x64\\x64\\x51\\x97\\x22\\x4a\\x91\\x1c\\x44\\x8f\\\n\\x16\\x3b\\x8b\\x10\\x5e\\x9f\\x3a\\x96\\xc1\\x80\\x62\\xa3\\x46\\x25\\x74\\x0b\\\n\\xbd\\xbd\\xbd\\x5b\\x5b\\x5b\\x2b\\x83\\x01\\x5f\\xa1\\x43\\x22\\x77\\x05\\x6d\\\n\\x6d\\x6d\\x51\\x51\\x51\\x52\\x52\\x52\\x21\\x7d\\x00\\x1e\\x7b\\x03\\x00\\x00\\\n\\x00\\xeb\\xf0\\xbd\\xe2\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\\n\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\\n\\x00\\x00\\xe3\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x00\\x03\\x46\\x26\\x66\\\n\\x16\\x06\\x64\\xc0\\xc4\\xca\\xc6\\x0e\\xe7\\x70\\x70\\x72\\x31\\x70\\xf3\\xf0\\\n\\xf2\\x31\\xb0\\xf3\\x0b\\x80\\xf8\\x82\\x42\\xc2\\x22\\xdc\\xa2\\x62\\xe2\\x12\\\n\\xec\\x8c\\x92\\x52\\xd2\\x40\\x01\\x2e\\x66\\x21\\x71\\x19\\x11\\x31\\x71\\x19\\\n\\x59\\x46\\x39\\x79\\x05\\x90\\x12\\x45\\x71\\x25\\x65\\x15\\x55\\x35\\x6e\\x75\\\n\\x0d\\x29\\x4d\\x20\\x57\\x8e\\x59\\x4b\\x5b\\x47\\x57\\x8f\\x81\\x41\\xdf\\x80\\\n\\x5b\\xc7\\xd0\\xc8\\x98\\x81\\xd9\\x44\\x4c\\x99\\xd3\\x14\\xa4\\xd2\\xcc\\x5c\\\n\\x45\\x9d\\xd7\\x82\\x81\\xc5\\x52\\x56\\x5d\\xc7\\x0a\\x24\\x60\\x6d\\x63\\xab\\\n\\x25\\x6b\\xc7\\x20\\xa0\\x6f\\xef\\xa0\\xae\\xe4\\xe8\\xe4\\xec\\xe2\\xea\\xe6\\\n\\xee\\xe1\\xe9\\x05\\x94\\x61\\x57\\xd4\\x50\\xf4\\xf6\\xf1\\x75\\xf3\\xf3\\x0f\\\n\\x08\\x0c\\x02\\xf2\\x83\\x43\\x42\\x15\\x19\\xc3\\x7c\\xc3\\x23\\x22\\xa3\\xa2\\\n\\x63\\x62\\xe3\\x18\\x18\\xe2\\x75\\x79\\x42\\x8c\\x13\\x12\\x93\\x92\\x53\\x52\\\n\\xd3\\xd2\\x33\\x40\\x86\\x65\\x66\\x65\\x33\\xe4\\xe4\\xe6\\xe5\\x17\\x14\\x16\\\n\\x15\\xc3\\xfd\\x93\\x59\\xc2\\x57\\x5a\\x56\\x5e\\x81\\xf0\\x6d\\xa5\\x67\\x55\\\n\\x75\\x4d\\x2d\\x88\\x05\\x00\\xee\\x0f\\x24\\x8e\\x12\\x6a\\x3f\\x33\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\\n\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x33\\x2d\\x33\\x30\\x54\\x31\\x30\\x3a\\\n\\x35\\x38\\x3a\\x35\\x35\\x2b\\x30\\x32\\x3a\\x30\\x30\\xeb\\xbb\\xaf\\xea\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\\n\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x33\\x2d\\x33\\x30\\x54\\x31\\x30\\\n\\x3a\\x35\\x38\\x3a\\x35\\x35\\x2b\\x30\\x32\\x3a\\x30\\x30\\x9a\\xe6\\x17\\x56\\\n\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x01\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xa8\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x80\\xab\\xe8\\x7e\\xa9\\xe8\\x80\\xab\\xea\\\n\\x7c\\xa9\\xe8\\x74\\xa2\\xe2\\x79\\xa7\\xe6\\xad\\xc8\\xef\\x87\\xb0\\xe8\\x60\\\n\\x95\\xdd\\x6e\\xa0\\xe2\\xa8\\xc7\\xee\\xa3\\xc2\\xed\\x75\\xa4\\xe3\\x47\\x84\\\n\\xd6\\x62\\x97\\xe1\\xa1\\xc1\\xec\\x92\\xb7\\xe8\\x99\\xbb\\xe9\\x61\\x97\\xdd\\\n\\x2c\\x72\\xcd\\x53\\x8e\\xdb\\x99\\xbb\\xea\\x80\\xaa\\xe3\\x81\\xab\\xe3\\x8a\\\n\\xb1\\xe4\\x4b\\x88\\xd6\\x1a\\x62\\xc6\\x43\\x84\\xd6\\x90\\xb5\\xe7\\x74\\xa3\\\n\\xe0\\x77\\xa4\\xe0\\x81\\xab\\xe2\\x43\\x7f\\xd3\\x19\\x59\\xc6\\x35\\x77\\xd2\\\n\\x87\\xaf\\xe4\\x72\\xa1\\xdf\\x7c\\xa9\\xe1\\x3f\\x7a\\xd0\\x18\\x53\\xc0\\x23\\\n\\x6e\\xcd\\x7e\\xa8\\xe1\\x79\\xa6\\xe0\\x3d\\x77\\xd0\\x17\\x50\\xbd\\x1a\\x62\\\n\\xc9\\x75\\xa3\\xdf\\x3c\\x74\\xcf\\x16\\x4a\\xbd\\x18\\x59\\xc4\\x3b\\x71\\xcc\\\n\\x15\\x45\\xb9\\x16\\x4e\\xc0\\x14\\x41\\xb7\\xff\\xff\\xff\\xab\\xf9\\xd1\\x38\\\n\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\\n\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x5c\\x49\\x44\\\n\\x41\\x54\\x18\\xd3\\x63\\x60\\x20\\x02\\x30\\x32\\xa1\\x09\\x30\\xb3\\xb0\\xa2\\\n\\x0a\\xb0\\xb1\\x73\\x70\\xa2\\x08\\x70\\x71\\xf3\\xf0\\xf2\\x21\\x0b\\xf0\\x0b\\\n\\x08\\x0a\\x09\\x8b\\x20\\x09\\x88\\x8a\\x89\\x4b\\x48\\x4a\\x49\\x23\\x04\\x64\\\n\\x64\\xe5\\xe4\\x15\\x14\\x95\\x10\\x02\\xca\\x2a\\xaa\\x6a\\xea\\x1a\\x48\\x5a\\\n\\x34\\xb5\\xb4\\x75\\x74\\x91\\x0d\\xd5\\xd3\\x37\\x30\\x44\\xb1\\xd6\\xc8\\xd8\\\n\\x04\\xd5\\x61\\xa6\\x66\\xc4\\x78\\x10\\x01\\x00\\x8c\\xd9\\x05\\xce\\x2c\\x26\\\n\\x47\\x74\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\\n\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\\n\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\x2d\\x30\\\n\\x34\\x54\\x31\\x36\\x3a\\x34\\x32\\x3a\\x30\\x37\\x2b\\x30\\x32\\x3a\\x30\\x30\\\n\\x29\\xa7\\x84\\xdf\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x03\\x61\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x71\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xa2\\xc1\\xef\\x9f\\xc0\\xed\\x9d\\xbe\\xeb\\\n\\x9a\\xbc\\xeb\\x96\\xba\\xe9\\x93\\xb7\\xe7\\x90\\xb5\\xe6\\x8c\\xb2\\xe4\\x88\\\n\\xaf\\xe2\\x84\\xac\\xe0\\x80\\xa9\\xdd\\x7d\\xa5\\xdc\\x7a\\xa3\\xda\\xa1\\xc1\\\n\\xee\\xf4\\xf7\\xfb\\x74\\xa0\\xd7\\x9e\\xbf\\xec\\xa5\\xd5\\x9c\\xa1\\xd3\\x98\\\n\\x9d\\xd0\\x94\\x98\\xce\\x90\\x93\\xcb\\x8b\\x8e\\xc9\\x87\\x89\\xc6\\x82\\x84\\\n\\xc3\\x7e\\x80\\xc1\\x7a\\x7c\\xbe\\x76\\x6f\\x9b\\xd4\\x9b\\xbd\\xeb\\xff\\xff\\\n\\xff\\x6a\\x97\\xd1\\x98\\xba\\xe9\\xa6\\xc3\\xe9\\x64\\x93\\xce\\x94\\xb7\\xe7\\\n\\xa9\\xc4\\xe8\\xac\\xc7\\xe8\\xeb\\xf1\\xf7\\x5f\\x8f\\xcb\\x8f\\xb4\\xe5\\xf2\\\n\\xf6\\xfa\\xaa\\xc6\\xe9\\xac\\xc6\\xe9\\xac\\xc7\\xea\\xad\\xc7\\xe9\\xae\\xc9\\\n\\xe9\\xb0\\xc9\\xe9\\xb0\\xc8\\xe8\\xb5\\xcc\\xe8\\xde\\xe7\\xf2\\x59\\x8a\\xc8\\\n\\x8c\\xb1\\xe3\\xf1\\xf6\\xfa\\xae\\xc9\\xea\\xb0\\xc9\\xea\\xdb\\xe5\\xf1\\x55\\\n\\x86\\xc6\\x87\\xae\\xe1\\xf0\\xf4\\xfa\\xb2\\xcb\\xea\\xb3\\xcc\\xea\\xb7\\xce\\\n\\xea\\xb7\\x93\\x89\\xbe\\x5b\\x28\\xbc\\x43\\x05\\xbd\\x57\\x1e\\x84\\x67\\x69\\\n\\x82\\xaa\\xdf\\xef\\xf3\\xf9\\xbb\\xd0\\xeb\\xbf\\x97\\x8b\\xd2\\x76\\x3d\\xf7\\\n\\xb5\\x8d\\xfe\\xd6\\xb8\\xf5\\xa8\\x72\\xca\\x6b\\x2f\\x7e\\xa8\\xdd\\xba\\xd0\\\n\\xeb\\xbd\\xd1\\xeb\\xb8\\x56\\x22\\xf6\\xb5\\x8d\\xff\\x92\\x4d\\xff\\x77\\x11\\\n\\xff\\x86\\x21\\xeb\\x8a\\x40\\xb9\\x44\\x03\\x7a\\xa4\\xd9\\xee\\xf3\\xf9\\xbe\\\n\\xd2\\xeb\\xbf\\xd3\\xeb\\xfe\\xcd\\xae\\xef\\x7f\\x18\\xbc\\x42\\x04\\x75\\xa1\\\n\\xd7\\xed\\xf2\\xf8\\xea\\xf0\\xf7\\xe6\\xed\\xf6\\xe2\\xea\\xf4\\xde\\xe7\\xf3\\\n\\xdb\\xe4\\xf1\\xd8\\xe2\\xf0\\xbc\\x56\\x1d\\xf4\\x9d\\x63\\xff\\x7f\\x18\\xf8\\\n\\x76\\x00\\xee\\x76\\x00\\xe1\\x68\\x03\\xb9\\x45\\x03\\x72\\x9e\\xd6\\x6e\\x99\\\n\\xd3\\x68\\x96\\xd1\\x63\\x92\\xce\\x5e\\x8e\\xcb\\x5b\\x8a\\xc9\\x56\\x87\\xc7\\\n\\x52\\x84\\xc3\\x8b\\x6d\\x6e\\xc7\\x65\\x27\\xe6\\x77\\x21\\xea\\x79\\x05\\xdd\\\n\\x64\\x01\\xbc\\x4d\\x05\\x9d\\x21\\xdf\\xde\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\\n\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\\n\\x05\\x1d\\x48\\x00\\x00\\x00\\xca\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\\n\\x04\\x8c\\x4c\\xcc\\x2c\\xac\\x6c\\xec\\x1c\\x9c\\x5c\\xdc\\x3c\\xbc\\x40\\x3e\\\n\\x1f\\x3f\\x12\\x10\\x00\\x0a\\x08\\xf2\\x0b\\x09\\x8b\\x88\\x8a\\x89\\x4b\\x48\\\n\\x4a\\x49\\xf3\\xcb\\x00\\x05\\x64\\xf9\\xe5\\xe0\\x80\\x5f\\x1e\\x28\\xa0\\xc0\\\n\\xaf\\x08\\x07\\xfc\\x4a\\x40\\x01\\x65\\x7e\\x45\\x39\\x15\\xa0\\xac\\x2a\\x10\\\n\\xab\\xa9\\x03\\x05\\x34\\x34\\xb5\\xb4\\x75\\x74\\xf5\\xf4\\x55\\xf5\\x0d\\x0c\\\n\\x8d\\x8c\\x81\\x02\\x26\\xa6\\x66\\x72\\xe6\\x50\\x15\\x16\\x96\\x40\\x01\\x2b\\\n\\x6b\\x1b\\x5b\\x20\\xb0\\x53\\xb5\\x77\\x70\\x74\\x72\\x06\\x0a\\xb8\\xb8\\xda\\\n\\xc9\\xb9\\x01\\x65\\xdd\\x3d\\x3c\\xbd\\xbc\\x7d\\x80\\x02\\xbe\\xae\\x7e\\x6e\\\n\\x40\\xe0\\x1f\\x10\\x18\\x14\\x1c\\x12\\x1a\\xc6\\xc0\\x10\\x1e\\x11\\x29\\x17\\\n\\x05\\x54\\xe1\\x18\\x0d\\x24\\x62\\x62\\x19\\x18\\xe2\\xe2\\x13\\x12\\x93\\x92\\\n\\x53\\x52\\xd3\\xd2\\x33\\x32\\xb3\\xb2\\x73\\x18\\x18\\x72\\xf3\\xf2\\x0b\\x0a\\\n\\x8b\\x8a\\x4b\\x4a\\xcb\\xca\\x2b\\x2a\\xab\\x50\\xbc\\x9d\\x13\\x0b\\x94\\x07\\\n\\x00\\x58\\xb7\\x28\\x0a\\x4a\\x61\\xd8\\xca\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x38\\x2d\\x33\\x31\\\n\\x54\\x31\\x31\\x3a\\x34\\x32\\x3a\\x34\\x36\\x2b\\x30\\x32\\x3a\\x30\\x30\\x19\\\n\\x5c\\x29\\xd8\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x38\\x2d\\x33\\\n\\x31\\x54\\x31\\x31\\x3a\\x34\\x32\\x3a\\x34\\x36\\x2b\\x30\\x32\\x3a\\x30\\x30\\\n\\x68\\x01\\x91\\x64\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x03\\x7a\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x98\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x5b\\xc2\\x39\\x54\\xbd\\x31\\x52\\xbb\\x2d\\\n\\x52\\xb9\\x2b\\x59\\xc2\\x36\\x74\\xc2\\x59\\xa3\\xd7\\x96\\xae\\xdc\\xa5\\xa1\\\n\\xd6\\x95\\x6a\\xb9\\x50\\x42\\xab\\x1f\\x55\\xc0\\x34\\x90\\xce\\x7f\\xb7\\xe1\\\n\\xaf\\x9d\\xd8\\x92\\x83\\xce\\x77\\xb5\\xe1\\xae\\x8b\\xc8\\x78\\x32\\x9d\\x1d\\\n\\x55\\xbe\\x34\\x7a\\xcc\\x6d\\x76\\xca\\x6a\\x72\\xc8\\x68\\x74\\xc8\\x68\\x75\\\n\\xc8\\x68\\x79\\xc9\\x6b\\xb4\\xdf\\xac\\x89\\xc4\\x76\\x2d\\x96\\x1c\\x70\\xbf\\\n\\x57\\x70\\xc7\\x65\\x6e\\xc5\\x63\\x6e\\xc4\\x62\\x71\\xc4\\x63\\xbe\\xe3\\xb6\\\n\\x7e\\xc7\\x6f\\xb5\\xdf\\xac\\x5e\\xa9\\x48\\x54\\xbb\\x2d\\xa1\\xd7\\x95\\x9b\\\n\\xd7\\x91\\x76\\xc9\\x69\\x6f\\xc6\\x64\\x6e\\xc4\\x61\\x6f\\xc3\\x61\\x6f\\xc2\\\n\\x61\\xc0\\xe4\\xb9\\xff\\xff\\xff\\xe6\\xf4\\xe3\\x99\\xd1\\x8b\\x9d\\xce\\x8b\\\n\\x20\\x88\\x1c\\x4b\\xb4\\x26\\xb1\\xdd\\xa7\\x80\\xcc\\x72\\x73\\xc7\\x66\\xb7\\\n\\xe1\\xb0\\xd6\\xee\\xd2\\x70\\xc1\\x63\\xbf\\xe3\\xb8\\xfc\\xfd\\xfb\\x99\\xd0\\\n\\x8c\\x7e\\xc1\\x69\\xae\\xd7\\xa1\\x1e\\x7f\\x1b\\x42\\xad\\x1f\\xaf\\xdc\\xa6\\\n\\x7f\\xca\\x70\\x80\\xca\\x73\\xf1\\xf9\\xf0\\xed\\xf7\\xeb\\x96\\xcd\\x88\\x71\\\n\\xb9\\x5b\\x7d\\xbe\\x67\\xaf\\xd7\\xa0\\x1e\\x7a\\x1b\\x42\\xa9\\x1f\\x9f\\xd2\\\n\\x91\\x9a\\xd4\\x8d\\x74\\xc3\\x64\\x87\\xc9\\x79\\xf4\\xfa\\xf2\\xfd\\xfe\\xfd\\\n\\x96\\xcb\\x86\\x6d\\xb7\\x57\\x72\\xb9\\x5b\\x97\\xcc\\x85\\x9a\\xc7\\x87\\x1f\\\n\\x78\\x1b\\x64\\xb0\\x4c\\xb4\\xdd\\xaa\\x79\\xc1\\x64\\x71\\xbe\\x5f\\x85\\xc5\\\n\\x75\\xd9\\xec\\xd4\\x99\\xcd\\x8a\\x6c\\xb6\\x56\\x6e\\xb5\\x58\\x74\\xb7\\x5c\\\n\\xb4\\xda\\xa6\\x4e\\x9b\\x41\\x2f\\x96\\x1c\\x87\\xc2\\x72\\xb2\\xdb\\xa8\\x77\\\n\\xbc\\x60\\x73\\xba\\x5c\\x70\\xb8\\x59\\x6f\\xb5\\x59\\x6f\\xb5\\x58\\x74\\xb7\\\n\\x5b\\xb3\\xd9\\xa5\\x7f\\xb8\\x69\\x1e\\x71\\x1a\\x20\\x8a\\x1b\\x83\\xbe\\x6d\\\n\\xb5\\xdb\\xa8\\x98\\xcc\\x87\\x7d\\xbc\\x66\\x7c\\xba\\x64\\x98\\xcb\\x86\\xb4\\\n\\xd9\\xa5\\x7d\\xb7\\x66\\x1d\\x6c\\x1a\\x1f\\x83\\x1b\\x52\\xa0\\x42\\x9a\\xca\\\n\\x87\\xab\\xd3\\x9b\\xab\\xd2\\x9b\\x96\\xc7\\x83\\x4c\\x97\\x3d\\x1e\\x6e\\x1a\\\n\\x1f\\x7a\\x1b\\x1e\\x73\\x1a\\x1e\\x70\\x1a\\x1f\\x71\\x1b\\x2c\\x5a\\xcc\\x91\\\n\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\\n\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xbc\\x49\\x44\\\n\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x0e\\x18\\x99\\x98\\x59\\x90\\xb8\\xac\\x6c\\\n\\xec\\x1c\\x1c\\x9c\\x5c\\xdc\\x30\\x3e\\x0f\\x2f\\x1f\\xbf\\x80\\x00\\xbf\\xa0\\\n\\x90\\x30\\x84\\x2f\\xc2\\x2b\\x28\\x2a\\x26\\x2e\\x21\\x29\\x25\\x2d\\x23\\x0b\\\n\\x16\\x90\\xe3\\x13\\x15\\x97\\x57\\x50\\x54\\x52\\x56\\x51\\x55\\x03\\xf1\\xd5\\\n\\x35\\x34\\xb5\\xb4\\x75\\x74\\xf5\\xf4\\x0d\\x0c\\x8d\\x8c\\x4d\\x80\\x02\\xa6\\\n\\x66\\xe6\\x16\\x96\\x56\\xd6\\x36\\x06\\xb6\\x76\\xf6\\x0e\\x8e\\x40\\x01\\x27\\\n\\x67\\x17\\x57\\x37\\x03\\x77\\x03\\x5b\\x0f\\x4f\\x2f\\x6f\\x1f\\xa0\\x80\\xaf\\\n\\x9f\\x7f\\x40\\x60\\x90\\x41\\x70\\x48\\x68\\x58\\x78\\x44\\x24\\xc8\\x90\\xa8\\\n\\xe8\\x98\\xd8\\xb8\\xf8\\x84\\xc4\\xa4\\xe4\\x94\\x54\\xb0\\x2d\\x69\\xe9\\x19\\\n\\x99\\x59\\xd9\\x39\\xb9\\x79\\xf9\\x05\\x85\\x10\\x87\\x14\\x15\\x97\\x94\\x96\\\n\\x95\\x57\\x54\\x56\\x55\\xc3\\x9c\\x5a\\x53\\x5b\\x57\\xdf\\xd0\\xd8\\xd4\\x8c\\\n\\xe4\\x9b\\x96\\xd6\\xb6\\x76\\x1c\\xfe\\x06\\x00\\xbc\\x2f\\x25\\x59\\xf4\\xd8\\\n\\x22\\x48\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\\n\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\\n\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\\n\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\\n\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\\n\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\x2d\\x30\\x34\\x54\\x31\\x36\\x3a\\x30\\x37\\\n\\x3a\\x33\\x39\\x2b\\x30\\x32\\x3a\\x30\\x30\\xa1\\xe7\\x40\\xa7\\x00\\x00\\x00\\\n\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x29\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x62\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xd5\\xd5\\xd5\\xd4\\xd4\\xd4\\xd2\\xd2\\xd2\\\n\\xd1\\xd1\\xd1\\xd0\\xd0\\xd0\\xce\\xce\\xce\\xcd\\xcd\\xcd\\xd3\\xd3\\xd3\\xfd\\\n\\xfd\\xfd\\xe4\\xe4\\xe4\\xe2\\xe2\\xe2\\xe0\\xe0\\xe0\\xcb\\xcb\\xcb\\xca\\xca\\\n\\xca\\xf3\\xf3\\xf3\\xfb\\xfb\\xfb\\xc7\\xc7\\xc7\\xc8\\xc8\\xc8\\xf7\\xf7\\xf7\\\n\\xe8\\xf3\\xfb\\xbd\\xe3\\xfd\\xde\\xde\\xde\\xc3\\xc3\\xc3\\xfc\\xfc\\xfc\\xea\\\n\\xf5\\xfd\\x8a\\xcf\\xfe\\x83\\xcc\\xff\\xbc\\xe2\\xfd\\xdc\\xdc\\xdc\\xc0\\xc0\\\n\\xc0\\xeb\\xeb\\xeb\\xfa\\xfa\\xfa\\xe7\\xf3\\xfb\\x89\\xce\\xfe\\x96\\xd4\\xff\\\n\\x9a\\xd5\\xff\\x8b\\xcf\\xff\\xda\\xda\\xda\\xbd\\xbd\\xbd\\xe9\\xe9\\xe9\\x65\\\n\\x9f\\x31\\x76\\xa9\\x42\\x98\\xd4\\xff\\x9e\\xd7\\xff\\x9b\\xd6\\xff\\xd9\\xd9\\\n\\xd9\\xb9\\xb9\\xb9\\x57\\x98\\x28\\x81\\xb3\\x5a\\x6e\\xa4\\x34\\xd6\\xec\\xfb\\\n\\x88\\xcd\\xfd\\x98\\xd5\\xff\\x89\\xce\\xff\\xba\\xe1\\xfd\\xd7\\xd7\\xd7\\xb5\\\n\\xb5\\xb5\\x47\\x8f\\x17\\x74\\xab\\x4f\\xaa\\xcb\\x91\\x7c\\xaf\\x55\\x63\\x9e\\\n\\x30\\x69\\xa2\\x34\\x6f\\xa4\\x38\\x6f\\xa5\\x3d\\x9c\\xd6\\xff\\x8e\\xd0\\xff\\\n\\x8d\\xcc\\xf7\\xfb\\xfc\\xfd\\xb7\\xb7\\xb7\\x37\\x87\\x07\\x68\\xa5\\x46\\xa1\\\n\\xc7\\x8a\\x90\\xbc\\x74\\xa8\\xcb\\x90\\xad\\xcd\\x94\\xb0\\xce\\x96\\x6b\\xa3\\\n\\x37\\x8c\\xcf\\xff\\x97\\xd1\\xfa\\xf3\\xf7\\xf9\\x5c\\xa0\\x3c\\x98\\xc2\\x83\\\n\\x82\\xb5\\x67\\x80\\xb3\\x61\\x85\\xb6\\x66\\x89\\xb8\\x6b\\x8e\\xba\\x6f\\x63\\\n\\x9f\\x31\\x97\\xd2\\xfd\\xf7\\xfb\\xfd\\x41\\x8a\\x1b\\x66\\xa5\\x48\\x97\\xc2\\\n\\x82\\x85\\xb6\\x6a\\x9e\\xc5\\x88\\xa1\\xc6\\x8a\\xa5\\xc8\\x8d\\xa9\\xca\\x90\\\n\\x5b\\x9b\\x29\\xb6\\xb6\\xb6\\x3d\\x7a\\x01\\x62\\xa3\\x46\\x96\\xc1\\x80\\x5e\\\n\\x9f\\x3a\\x3c\\x8b\\x0f\\x44\\x8f\\x15\\x4a\\x91\\x1b\\x52\\x97\\x21\\xd8\\xd8\\\n\\xd8\\x1f\\x7b\\x00\\x5f\\xa1\\x43\\x2b\\x83\\x01\\xad\\xad\\xad\\x1e\\x7b\\x03\\\n\\x21\\x7d\\x00\\xff\\xff\\xff\\x3e\\x70\\x62\\x4e\\x00\\x00\\x00\\x01\\x74\\x52\\\n\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\\n\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xca\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\\n\\x64\\x62\\x66\\x61\\x65\\x63\\x67\\x80\\x03\\x0e\\x4e\\x10\\xe0\\x42\\x88\\x30\\\n\\x73\\x72\\xb3\\xf1\\x70\\x72\\x72\\xf3\\xc2\\x04\\x58\\x39\\xd9\\x19\\xf8\\xf8\\\n\\x05\\x38\\x79\\x04\\xa1\\x02\\x6c\\x9c\\x3c\\x7c\\x42\\xc2\\x22\\xa2\\x9c\\x62\\\n\\xe2\\x10\\x01\\x76\\x4e\\x4e\\x09\\x61\\x49\\x29\\x69\\x19\\x4e\\x59\\x39\\xb0\\\n\\x00\\xaf\\x3c\\xa7\\x82\\xa2\\x92\\xb2\\x8a\\xaa\\x0c\\xa7\\x9a\\x3a\\x58\\x44\\\n\\x50\\x43\\x53\\x4b\\x5a\\x5b\\x47\\x17\\x28\\xa2\\xa7\\x0f\\x16\\x31\\x30\\x34\\\n\\x32\\x36\\x31\\xd5\\xd1\\x35\\x33\\xe7\\xb4\\xb0\\x04\\xf2\\xad\\xac\\x6d\\x6c\\\n\\xed\\xec\\x1d\\x1c\\x9d\\x9c\\x5d\\x5c\\xf5\\xdc\\x18\\x18\\xdc\\x3d\\x3c\\xbd\\\n\\xbc\\x6d\\x7c\\x7c\\xfd\\xfc\\x03\\x02\\x41\\x7c\\x86\\xa0\\xe0\\x90\\xd0\\xb0\\\n\\xf0\\x08\\x9f\\xc8\\xa8\\x68\\x30\\x9f\\x21\\x26\\x36\\x2e\\x3e\\x21\\x31\\x29\\\n\\x39\\x85\\x53\\x2f\\x15\\xe2\\x90\\xb4\\xf4\\x8c\\xcc\\xac\\xec\\x9c\\xdc\\xbc\\\n\\x54\\x98\\xe3\\xf3\\x0b\\x0a\\x81\\x64\\x51\\x2a\\xc2\\xc3\\xc5\\x25\\x08\\x36\\\n\\x03\\x00\\x87\\xe7\\x1f\\x20\\x1f\\x34\\x03\\xcd\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x32\\x2d\\x30\\x34\\x2d\\x30\\x32\\x54\\x31\\x31\\x3a\\x33\\x38\\x3a\\x33\\\n\\x31\\x2b\\x30\\x32\\x3a\\x30\\x30\\x72\\xbc\\x64\\x14\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x32\\x2d\\x30\\x34\\x2d\\x30\\x32\\x54\\x31\\x31\\x3a\\x33\\x38\\x3a\\\n\\x33\\x31\\x2b\\x30\\x32\\x3a\\x30\\x30\\x03\\xe1\\xdc\\xa8\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x8e\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xe1\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xce\\xa7\\x5e\\xce\\xa7\\x61\\xcf\\xa8\\x64\\\n\\xce\\xa6\\x62\\xcc\\xa1\\x5d\\xc8\\x9c\\x57\\xcf\\xa8\\x61\\xce\\xa6\\x5e\\xc7\\\n\\x9a\\x57\\xc7\\x97\\x57\\xcd\\xa4\\x5b\\xc3\\x91\\x50\\xc3\\x91\\x53\\xcd\\xa6\\\n\\x5e\\xcd\\xa5\\x5e\\xc1\\x8e\\x4f\\xbd\\x89\\x4c\\xce\\xa6\\x60\\xbe\\x89\\x4d\\\n\\xcf\\xa7\\x62\\xbe\\x8a\\x4f\\xcd\\xa5\\x61\\xbd\\x86\\x4c\\xc9\\x9f\\x5b\\xfe\\\n\\x78\\x74\\xfc\\x6f\\x6d\\xfa\\x63\\x62\\xf7\\x54\\x56\\xf4\\x45\\x48\\xf1\\x35\\\n\\x3a\\xee\\x26\\x2e\\xc6\\x99\\x56\\xc6\\x96\\x55\\xf8\\xc8\\xbf\\xf7\\xc0\\xb7\\\n\\xf6\\xb6\\xae\\xf4\\xab\\xa4\\xf3\\xa0\\x9b\\xec\\x1a\\x23\\xc4\\x95\\x55\\xc1\\\n\\x8f\\x4f\\xea\\x11\\x1c\\xc2\\x8f\\x50\\xbe\\x8a\\x4d\\xc1\\x8c\\x52\\xd6\\xb4\\\n\\x79\\xe3\\xcc\\x99\\xde\\xc4\\x8d\\xbc\\x83\\x4f\\xbc\\x85\\x4a\\xbc\\x86\\x4c\\\n\\xbc\\x84\\x4b\\xb7\\x7e\\x47\\xbb\\x81\\x4c\\xdb\\xbf\\x87\\xe8\\xd5\\xa3\\xe9\\\n\\xd7\\xa5\\xda\\xbb\\x80\\xab\\x64\\x3d\\xc1\\x8e\\x58\\xdf\\xc5\\x8f\\xe7\\xd3\\\n\\xa0\\xe0\\xc7\\x93\\xc9\\x9b\\x61\\x87\\x48\\x28\\xbc\\x84\\x51\\xd7\\xb5\\x7d\\\n\\xd6\\xb5\\x7f\\xc3\\x91\\x56\\xab\\x67\\x37\\xa5\\x5c\\x33\\xb9\\x80\\x48\\xab\\\n\\x64\\x37\\xff\\xff\\xff\\x4a\\x1d\\x71\\x76\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\\n\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\\n\\x05\\x1d\\x48\\x00\\x00\\x00\\x87\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\\n\\x02\\x18\\x99\\x98\\x59\\x58\\xd9\\x10\\x7c\\x76\\x0e\\x10\\xc9\\xc9\\x05\\xe7\\\n\\x73\\x43\\x68\\x1e\\x5e\\x08\\xcd\\xc7\\x0f\\x93\\x11\\x10\\x04\\x53\\x42\\x08\\\n\\xbd\\xc2\\x60\\x52\\x04\\x21\\x20\\x0a\\x26\\xc5\\x10\\x02\\xe2\\x60\\x52\\x02\\\n\\x44\\x48\\x4a\\x49\\xcb\\xc8\\xca\\xc9\\x83\\x05\\x14\\x14\\x81\\x84\\x94\\x92\\\n\\xb2\\x8a\\xaa\\x9a\\x3a\\x44\\xa1\\x86\\x26\\x03\\x03\\x58\\x5e\\x5d\\x0b\\xaa\\\n\\x55\\x5b\\x07\\x44\\xea\\xea\\xe9\\x1b\\x18\\x42\\x45\\x8c\\x8c\\xc5\\x4d\\x4c\\\n\\xcd\\xcc\\x2d\\x2c\\xad\\xac\\x91\\x7d\\x64\\x63\\x6b\\x67\\xef\\xe0\\x88\\x2c\\\n\\xe2\\xe4\\xec\\xe2\\xea\\x86\\xe2\\x6b\\x77\\x0f\\x4f\\x06\\x06\\x00\\x75\\x32\\\n\\x0b\\x7e\\x3a\\xee\\x09\\x10\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\\n\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\\n\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\\n\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\\n\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\\n\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\\n\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\\n\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\\n\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\xe8\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xce\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x36\\x6b\\xbc\\x36\\x6b\\xbb\\x36\\x6a\\xbb\\\n\\x39\\x6c\\xbc\\x3b\\x6e\\xbd\\x3a\\x6d\\xbb\\x38\\x6b\\xbb\\x3e\\x70\\xbb\\xd1\\\n\\xe0\\xf6\\xd1\\xe0\\xf7\\xf8\\xfb\\xfe\\xf7\\xfb\\xfe\\xf6\\xf9\\xfd\\xf0\\xf5\\\n\\xfc\\xea\\xf0\\xfa\\xed\\xf2\\xfb\\xf7\\xfa\\xfd\\xeb\\xf1\\xfb\\xdf\\xe9\\xf8\\\n\\xbd\\xd0\\xec\\x5e\\x89\\xc9\\xd1\\xdf\\xf6\\x80\\xaa\\xe9\\xf6\\xfa\\xfe\\xf6\\\n\\xfa\\xfd\\x64\\x8c\\xc8\\xee\\xf3\\xfb\\xea\\xf1\\xfb\\xf2\\xf6\\xfc\\xf1\\xf6\\\n\\xfc\\xe2\\xec\\xf9\\xdb\\xe7\\xf8\\xba\\xd0\\xee\\xd0\\xdf\\xf6\\x7e\\xa8\\xe8\\\n\\xe9\\xf1\\xfa\\xee\\xf4\\xfb\\xe8\\xf0\\xfa\\xdd\\xe8\\xf8\\xdb\\xe6\\xf7\\x7a\\\n\\xa3\\xe1\\xc3\\xd5\\xef\\x35\\x69\\xb7\\xcc\\xdd\\xf5\\x7e\\xa8\\xe7\\x66\\x8d\\\n\\xc9\\xe9\\xf0\\xfa\\xf3\\xf8\\xfd\\xf8\\xfa\\xfe\\xef\\xf4\\xfc\\xdf\\xe9\\xf9\\\n\\xdb\\xe7\\xf7\\xd9\\xe5\\xf7\\x78\\xa2\\xe0\\xa9\\xc2\\xe7\\x35\\x68\\xb6\\xc9\\\n\\xdc\\xf4\\x7d\\xa7\\xe7\\xe1\\xec\\xf9\\xe3\\xed\\xf9\\xee\\xf4\\xfc\\xf3\\xf7\\\n\\xfd\\xe5\\xed\\xfa\\xd8\\xe5\\xf6\\x77\\xa0\\xde\\xa4\\xbe\\xe4\\x34\\x67\\xb4\\\n\\xc7\\xd9\\xf4\\x7d\\xa6\\xe6\\x65\\x8d\\xc9\\x67\\x8e\\xc9\\x6c\\x92\\xcb\\x6d\\\n\\x92\\xcb\\x69\\x90\\xca\\x65\\x8c\\xc8\\x74\\x9c\\xda\\x9f\\xba\\xe1\\x34\\x66\\\n\\xb3\\xc5\\xd8\\xf2\\x7b\\xa4\\xe3\\x7a\\xa3\\xe3\\x7a\\xa4\\xe3\\x7b\\xa4\\xe2\\\n\\x7b\\xa3\\xe2\\x7b\\xa3\\xe1\\x79\\xa2\\xe1\\x77\\xa0\\xdf\\x76\\x9f\\xde\\x74\\\n\\x9e\\xdd\\x72\\x9c\\xdb\\x74\\x9d\\xdc\\x9a\\xb5\\xdd\\x34\\x65\\xb1\\xc2\\xd5\\\n\\xf2\\x78\\xa1\\xe0\\x75\\x9e\\xde\\x73\\x9b\\xda\\x73\\x9b\\xd9\\x95\\xb0\\xda\\\n\\x33\\x64\\xaf\\xbe\\xd2\\xf0\\x7a\\xa3\\xe2\\x77\\x9f\\xde\\x76\\x9f\\xdd\\x72\\\n\\x9b\\xd9\\x71\\x99\\xd8\\x70\\x99\\xd6\\x8e\\xab\\xd5\\x33\\x63\\xad\\x36\\x6a\\\n\\xba\\xbb\\xd0\\xef\\x7a\\xa2\\xe2\\x6d\\x96\\xd3\\x8a\\xa7\\xd2\\x32\\x62\\xab\\\n\\xb8\\xce\\xef\\xf7\\xfa\\xfe\\x88\\xc0\\x62\\x6a\\x93\\xcf\\x84\\xa3\\xce\\x32\\\n\\x61\\xaa\\x38\\x6c\\xbb\\xb6\\xcc\\xee\\x7a\\xa2\\xe1\\xc2\\xdc\\xbf\\x68\\x90\\\n\\xcd\\x81\\x9e\\xcc\\x32\\x61\\xa8\\x37\\x6b\\xba\\xb3\\xca\\xed\\x7a\\xa2\\xe0\\\n\\x65\\x8d\\xca\\x7c\\x9b\\xc9\\x31\\x60\\xa7\\x35\\x6a\\xba\\xad\\xc6\\xeb\\xad\\\n\\xc5\\xea\\x7c\\x9a\\xc8\\x79\\x98\\xc7\\x35\\x69\\xb9\\x35\\x69\\xb8\\x35\\x68\\\n\\xb7\\x35\\x68\\xb5\\x34\\x66\\xb2\\x33\\x65\\xb0\\x33\\x64\\xae\\x32\\x63\\xac\\\n\\x32\\x62\\xaa\\x32\\x61\\xa9\\x31\\x60\\xa8\\x31\\x60\\xa6\\x31\\x61\\xa8\\xff\\\n\\xff\\xff\\x28\\xbe\\x5d\\x8e\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\\n\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\\n\\x00\\x00\\x00\\xf4\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x60\\x04\\x02\\x26\\\n\\x26\\x66\\x66\\x16\\x56\\x36\\x76\\x0e\\x06\\x06\\x06\\x46\\x4e\\x2e\\x6e\\x1e\\\n\\x5e\\x3e\\x7e\\x01\\x5e\\x41\\x21\\x61\\x11\\x51\\xa0\\x80\\x98\\xb8\\x84\\xa4\\\n\\x94\\xb4\\x8c\\x2c\\xb7\\x9c\\xbc\\x82\\xa2\\x08\\x07\\x03\\xa3\\x92\\xb2\\x9c\\\n\\x9c\\x94\\x8a\\xaa\\x20\\xaf\\x9a\\xba\\x86\\xa6\\x96\\x36\\x03\\xa3\\x8e\\xae\\\n\\x9a\\x9a\\x9e\\xbe\\x81\\xa1\\x91\\xb1\\x89\\xa9\\x99\\xb9\\x05\\x03\\x93\\xa5\\\n\\x95\\xb5\\xb5\\x8d\\xad\\xa0\\x9d\\xbd\\x89\\xa9\\x83\\xa3\\x93\\x33\\x03\\x93\\\n\\x8b\\xab\\x94\\x9b\\xbb\\x87\\xa7\\x97\\xb7\\x94\\x94\\x94\\x8f\\xaf\\x1f\\x03\\\n\\xb3\\x7f\\x40\\x60\\x50\\x70\\x48\\x68\\x58\\x78\\x44\\x64\\x54\\x74\\x4c\\x2c\\\n\\x03\\x73\\x5c\\x60\\x60\\x48\\x48\\x70\\x58\\xbc\\x63\\x42\\x74\\x62\\x52\\x72\\\n\\x0a\\x03\\x73\\x6a\\x5a\\x9a\\x66\\x48\\x68\\x7c\\x7a\\x46\\x74\\x66\\x56\\x76\\\n\\x4e\\x2e\\x43\\x5e\\x7e\\x01\\x37\\x1c\\x14\\x16\\x15\\x33\\xb0\\x97\\x84\\x95\\\n\\x96\\x41\\x01\\x6f\\x79\\x45\\x25\\x43\\x55\\x75\\x4d\\x69\\x2d\\x14\\xf0\\xd6\\\n\\xd5\\x37\\x30\\x34\\x36\\x35\\x23\\x54\\xb4\\xb4\\xb6\\x31\\xb4\\x77\\x74\\x22\\\n\\xcc\\xe8\\xea\\x6e\\x63\\xc8\\xeb\\xe9\\xed\\xeb\\x77\\x9e\\x30\\x71\\xd2\\xe4\\\n\\x29\\x53\\xa7\\xb5\\x4d\\x9f\\x01\\x00\\x0f\\x41\\x42\\x74\\x3a\\x8e\\x23\\xd0\\\n\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\\n\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\\n\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\\n\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x07\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x90\\\n\\x50\\x4c\\x54\\x45\\x00\\x00\\x00\\x7b\\xa7\\xdc\\x66\\x8b\\xc0\\x7a\\xa4\\xdb\\\n\\xff\\xff\\xff\\x63\\x87\\xbd\\x79\\xa3\\xd9\\xf9\\xfb\\xfc\\xf8\\xfb\\xfc\\x33\\\n\\x34\\x36\\x60\\x85\\xba\\x79\\xa2\\xd8\\xfa\\xfd\\xfd\\xfa\\xfc\\xfc\\x5e\\x81\\\n\\xb7\\x76\\xa0\\xd5\\xfc\\xfd\\xfd\\x5c\\x7e\\xb5\\x75\\x9e\\xd4\\xfc\\xfe\\xfe\\\n\\xfb\\xfd\\xfd\\x5a\\x7c\\xb2\\x73\\x9c\\xd1\\x58\\x7a\\xb0\\x6f\\x97\\xcc\\xfc\\\n\\xff\\xff\\xfd\\xff\\xff\\x54\\x75\\xac\\x6e\\x94\\xca\\xfe\\xff\\xff\\xfa\\xfe\\\n\\xfe\\xf9\\xfc\\xfc\\x53\\x73\\xaa\\x6c\\x92\\xc8\\xfc\\xfc\\xfc\\x51\\x72\\xa9\\\n\\x51\\x71\\xa9\\x68\\x8e\\xc3\\x64\\x88\\xbe\\x61\\x85\\xbb\\x5f\\x83\\xb9\\x5c\\\n\\x7e\\xb4\\x58\\x7b\\xb1\\x57\\x79\\xae\\x56\\x76\\xad\\x54\\x75\\xab\\x53\\x73\\\n\\xa9\\x00\\x00\\x00\\x67\\x14\\x96\\xea\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\x7a\\x49\\x44\\x41\\x54\\x18\\xd3\\x75\\x8f\\x57\\x0e\\\n\\xc2\\x50\\x0c\\x04\\x87\\xb0\\xf4\\x16\\x78\\x84\\x4e\\x68\\x8f\\x5e\\xee\\x7f\\\n\\x3c\\x12\\x07\\x85\\x3e\\x1f\\xd6\\x6a\\xb4\\xb2\\x6c\\xf8\\xa4\\xf0\\x46\\x00\\\n\\x45\\xbd\\x52\\x82\\xb2\\x2a\\xd5\\x5a\\x46\\x22\\xea\\xd0\\x50\\xb3\\x65\\xd9\\\n\\x68\\x43\\x47\\xa1\\x9e\\xa2\\xfb\\xb7\\xf1\\x58\\x91\\x36\\x7a\\x72\\xfd\\x30\\\n\\xcd\\x66\\x22\\x18\\xc8\\x39\\xe5\\x62\\xf8\\x43\\x8c\\x34\\x9e\\x58\\xb6\\x31\\\n\\x85\\x99\\x34\\xcf\\xb6\\xc6\\xf1\\x42\\x4b\\x58\\x25\\x7e\\x9d\\x9f\\xbe\\x01\\\n\\xbf\\x0d\\x76\\xfb\\xc3\\x31\\x3a\\x9d\\x2f\\xd7\\x9b\\xf7\\x5f\\xcf\\x73\\x07\\\n\\x37\\x28\\x08\\x64\\xf3\\x8c\\xaf\\x0c\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\\n\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x35\\x34\\x3a\\x35\\x38\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\x60\\x4f\\xd6\\x84\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x35\\x34\\x3a\\x35\\x38\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x11\\x12\\x6e\\x38\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x91\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x92\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x4d\\x8b\\xc8\\x4f\\x8c\\xc8\\x4f\\x8d\\xc8\\\n\\x4f\\x8c\\xc9\\x4c\\x89\\xc5\\x3b\\x76\\xc4\\x49\\x86\\xc4\\xec\\xf2\\xf7\\xee\\\n\\xf4\\xf8\\xed\\xf3\\xf8\\xec\\xf2\\xf8\\xd7\\xe6\\xf2\\x7d\\xb2\\xe2\\x63\\x91\\\n\\xda\\x4c\\x89\\xc6\\xf1\\xf5\\xf9\\xcd\\xe3\\xfc\\xcd\\xe3\\xfb\\xc8\\xe0\\xf9\\\n\\xc2\\xdc\\xf8\\xf8\\xfb\\xfd\\xcd\\xe6\\xfc\\x84\\xb6\\xe2\\x42\\x79\\xbf\\x4b\\\n\\x89\\xc6\\xcf\\xe3\\xfc\\xcf\\xe4\\xfc\\xca\\xe1\\xfa\\xc4\\xdd\\xf9\\xdf\\xe9\\\n\\xf4\\xe9\\xef\\xf5\\x45\\x7e\\xc2\\x4b\\x89\\xc5\\xf0\\xf4\\xf9\\xd3\\xe6\\xfc\\\n\\xd3\\xe7\\xfd\\xc8\\xe0\\xfa\\xbb\\xd6\\xf5\\xb5\\xd4\\xf3\\xf0\\xf4\\xf8\\x46\\\n\\x82\\xc3\\x81\\x81\\x81\\xef\\xf4\\xf9\\xd7\\xe7\\xfe\\xd5\\xe7\\xfd\\xd2\\xe6\\\n\\xfc\\xcc\\xe1\\xfb\\xbd\\xda\\xf6\\xef\\xf4\\xfa\\x48\\x83\\xc4\\x59\\x59\\x59\\\n\\x9a\\x9a\\x9a\\xcc\\xcc\\xcc\\x4e\\x8b\\xc7\\xed\\xf4\\xf9\\xd8\\xe8\\xfe\\xd7\\\n\\xe8\\xfe\\xd3\\xe5\\xfd\\xd1\\xe4\\xfc\\xc7\\xe0\\xfa\\xc3\\xdd\\xf9\\xed\\xf4\\\n\\xfa\\x4a\\x85\\xc7\\xc3\\xc3\\xc3\\x74\\x74\\x74\\xd2\\xd2\\xd2\\xe8\\xe8\\xe8\\\n\\x7d\\x7d\\x7d\\xc4\\xc4\\xc4\\x56\\x56\\x56\\xfc\\xfc\\xfc\\xcb\\xcb\\xcb\\xf2\\\n\\xf2\\xf2\\xc6\\xc6\\xc6\\x70\\x70\\x70\\x7e\\x7e\\x7e\\xf9\\xf9\\xf9\\xab\\xab\\\n\\xab\\xdf\\xdf\\xdf\\xa3\\xa3\\xa3\\x61\\x61\\x61\\x7a\\x7a\\x7a\\xd7\\xd7\\xd7\\\n\\x97\\x97\\x97\\xd8\\xd8\\xd8\\xbf\\xbf\\xbf\\x8e\\x8e\\x8e\\x3f\\x3f\\x3f\\x75\\\n\\x75\\x75\\xbb\\xbb\\xbb\\x8d\\x8d\\x8d\\xd4\\xd4\\xd4\\xb9\\xb9\\xb9\\xd3\\xd3\\\n\\xd3\\x83\\x83\\x83\\x2a\\x2a\\x2a\\xb5\\xb5\\xb5\\x95\\x95\\x95\\x79\\x79\\x79\\\n\\x6e\\x6e\\x6e\\x52\\x52\\x52\\x43\\x43\\x43\\x42\\x42\\x42\\x25\\x25\\x25\\x6a\\\n\\x6a\\x6a\\xa7\\xa7\\xa7\\xaa\\xac\\xaf\\xbd\\xc0\\xc5\\xa8\\xaa\\xad\\x2c\\x2c\\\n\\x2c\\x9b\\x9b\\x9b\\x23\\x23\\x23\\x63\\x63\\x63\\x5d\\x5d\\x5d\\x58\\x58\\x58\\\n\\x61\\x95\\xc7\\xf6\\xf7\\xf9\\xec\\xf1\\xf9\\xeb\\xf1\\xf9\\xe9\\xf0\\xf8\\xe6\\\n\\xed\\xf7\\xe1\\xea\\xf4\\xde\\xe8\\xf2\\xf6\\xf8\\xfa\\x61\\x94\\xc7\\x24\\x24\\\n\\x24\\x61\\x95\\xc8\\x65\\x98\\xca\\x65\\x97\\xca\\x64\\x97\\xca\\x64\\x97\\xc9\\\n\\x61\\x94\\xc8\\xff\\xff\\xff\\xd7\\xa4\\x8f\\xe0\\x00\\x00\\x00\\x01\\x74\\x52\\\n\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\\n\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xd9\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\\n\\x00\\x02\\x46\\x26\\x26\\x66\\x16\\x56\\x36\\x06\\x18\\x60\\xe7\\xe0\\xe4\\xe2\\\n\\xe2\\xe6\\xe1\\xe5\\x83\\x09\\xf0\\x0b\\x08\\x0a\\x09\\x8b\\x88\\x8a\\x89\\x4b\\\n\\x40\\x05\\x24\\x05\\xa4\\xa4\\x65\\x64\\xe5\\x38\\xe4\\x15\\xa0\\x02\\x8a\\x4a\\\n\\xca\\x2a\\x42\\xaa\\x6a\\xea\\x1a\\x9a\\x10\\xbe\\x16\\xab\\xb6\\x8e\\xae\\x9e\\\n\\xbe\\x88\\x81\\xa1\\x91\\x31\\x88\\x6f\\x62\\x6a\\x66\\x6e\\x61\\x69\\x65\\x6d\\\n\\x63\\x6b\\x67\\xef\\xe0\\x08\\x94\\x77\\x72\\x76\\x81\\x03\\x67\\x57\\x37\\x06\\\n\\x2d\\x77\\x77\\x0f\\x4f\\x28\\xf0\\x72\\x77\\xf7\\x66\\xf0\\xf1\\xf5\\xf5\\xf3\\\n\\xf7\\x00\\x03\\xff\\x00\\x5f\\xdf\\x40\\x86\\xa0\\xe0\\xe0\\x90\\xd0\\x30\\x30\\\n\\x08\\x0e\\x0f\\x0e\\x8e\\x60\\x88\\x8c\\x8a\\x8a\\x8e\\x89\\x05\\x83\\xb8\\xf8\\\n\\xa8\\xa8\\x04\\x06\\xef\\xc4\\xc4\\x24\\x2d\\xad\\xe4\\x94\\xc0\\xd4\\xb4\\xf4\\\n\\x94\\xc4\\xc4\\x0c\\x86\\xcc\\xac\\x44\\xad\\xec\\x1c\\x30\\xc8\\xcd\\x4b\\xcc\\\n\\x2f\\x60\\x28\\x2c\\x2a\\x2e\\x29\\x2d\\x2b\\xaf\\xa8\\xac\\xaa\\xae\\xa9\\xad\\\n\\x2b\\x00\\x3b\\xb5\\xbe\\xa1\\xb1\\xb1\\xb1\\xa9\\xb9\\xb9\\xa1\\x05\\xc8\\x01\\\n\\x00\\xcd\\xaa\\x39\\x1c\\x6e\\x2a\\xef\\xea\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\\n\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\\n\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x02\\xbd\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x1a\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x95\\xc0\\xf4\\x8b\\xba\\xf0\\x7f\\xb2\\xea\\\n\\x70\\xa8\\xe2\\x70\\xc1\\x63\\x6d\\xbf\\x60\\x6a\\xbd\\x5e\\x68\\xbb\\x5b\\x8b\\\n\\xb9\\xf0\\xc9\\xd4\\xf0\\xc2\\xcd\\xee\\x60\\x9c\\xd8\\x6c\\xbe\\x5f\\xb1\\xda\\\n\\xac\\xaf\\xd9\\xa9\\x63\\xb8\\x57\\x7d\\xb0\\xe9\\xc0\\xcb\\xed\\xb8\\xc3\\xea\\\n\\x51\\x8d\\xce\\x00\\x00\\x00\\x68\\xbb\\x5c\\xae\\xd8\\xa8\\xac\\xd7\\xa5\\x5f\\\n\\xb5\\x54\\x6d\\xa4\\xe1\\x5f\\x99\\xd7\\x50\\x8c\\xcd\\x42\\x7e\\xc4\\x64\\xb8\\\n\\x58\\x61\\xb6\\x55\\x5e\\xb4\\x53\\x5b\\xb2\\x50\\x58\\xb1\\x4d\\x50\\xaa\\x47\\\n\\x48\\xa3\\x3f\\x30\\x8f\\x2c\\x2a\\x88\\x27\\x26\\x83\\x23\\x26\\x81\\x22\\x57\\\n\\xb0\\x4c\\x96\\xcc\\x8e\\x8c\\xc8\\x83\\x3f\\x9c\\x38\\x2a\\x87\\x26\\x5a\\xaf\\\n\\x53\\x58\\xae\\x51\\x24\\x7f\\x21\\x4e\\xa8\\x45\\x88\\xc6\\x7f\\x7c\\xc0\\x72\\\n\\x36\\x94\\x30\\x26\\x82\\x22\\x57\\xad\\x50\\x55\\xac\\x4f\\x23\\x7d\\x20\\x45\\\n\\xa1\\x3d\\x3d\\x9a\\x36\\x36\\x93\\x30\\x2f\\x8c\\x2a\\xc0\\x4d\\x0e\\xbc\\x42\\\n\\x04\\xb9\\x45\\x03\\xd1\\x73\\x38\\xf7\\xb5\\x8d\\xfe\\xd6\\xb8\\xf5\\xa8\\x72\\\n\\xc9\\x6b\\x2d\\x65\\x66\\x15\\xa9\\x50\\x0a\\xf6\\xb5\\x8d\\xff\\x92\\x4d\\xff\\\n\\x77\\x11\\xff\\x86\\x21\\xeb\\x8a\\x40\\xa6\\x4c\\x07\\xbb\\x42\\x04\\xfe\\xcd\\\n\\xae\\xff\\xff\\xff\\xef\\x7f\\x18\\xaa\\x4d\\x07\\xf4\\x9d\\x63\\xff\\x7f\\x18\\\n\\xf8\\x76\\x00\\xee\\x76\\x00\\xe1\\x68\\x03\\xa9\\x4b\\x06\\xc3\\x57\\x1a\\xc9\\\n\\x64\\x25\\xe6\\x77\\x21\\xea\\x79\\x05\\xdd\\x64\\x01\\xbd\\x4d\\x04\\xc1\\x0f\\\n\\xc8\\xca\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xa6\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x64\\x62\\x66\\x61\\x60\\x60\\x60\\x65\\\n\\x63\\xe7\\x60\\x00\\x03\\x4e\\x2e\\x6e\\x1e\\x20\\xc5\\xcb\\xc7\\x2f\\x00\\x11\\\n\\x10\\x14\\x12\\x16\\x11\\x15\\x15\\x15\\x13\\x97\\x90\\x84\\x08\\x48\\x49\\xcb\\\n\\xc8\\x32\\x88\\x32\\xc8\\xc9\\x2b\\x28\\x32\\x20\\x80\\x28\\x03\\x1a\\x10\\x65\\\n\\x90\\x54\\x52\\x56\\x61\\x50\\x55\\x53\\xd7\\x80\\x0a\\x88\\x6a\\x6a\\x69\\xeb\\\n\\x88\\xea\\xea\\xe9\\x1b\\xc0\\x54\\x18\\x1a\\x19\\x9b\\x30\\x98\\x9a\\x99\\x5b\\\n\\xc0\\x04\\x2c\\xad\\xac\\x6d\\x40\\x2c\\x0b\\x64\\x43\\x6d\\xed\\xec\\x91\\x0d\\\n\\x65\\x70\\x70\\x74\\x72\\x76\\x71\\x85\\x1b\\xca\\xe0\\xe6\\xee\\xe1\\xe9\\xe5\\\n\\xed\\x03\\x53\\x63\\xc8\\xe0\\xeb\\xe7\\xef\\xef\\x1f\\xe0\\x0b\\x13\\xb0\\x64\\\n\\x08\\x0c\\x0a\\x0e\\x09\\x0d\\x0b\\x47\\x38\\x2e\\x22\\x32\\x2a\\x3a\\x26\\x16\\\n\\xc5\\xbd\\xf6\\x20\\x5b\\x00\\x59\\x3e\\x15\\x00\\x37\\x83\\xc2\\xb9\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\\n\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\\n\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\\n\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\\n\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\\n\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x38\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x56\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x95\\xc0\\xf4\\x8b\\xba\\xf0\\x7f\\xb2\\xea\\\n\\xce\\xa7\\x5e\\xce\\xa7\\x61\\xcf\\xa8\\x64\\xce\\xa6\\x62\\xcc\\xa1\\x5d\\xc8\\\n\\x9c\\x57\\x6a\\xbd\\x5e\\x68\\xbb\\x5b\\x8b\\xb9\\xf0\\xc9\\xd4\\xf0\\xcf\\xa8\\\n\\x61\\xce\\xa6\\x5e\\x6c\\xbe\\x5f\\xc7\\x9a\\x57\\xc7\\x97\\x57\\x63\\xb8\\x57\\\n\\x7d\\xb0\\xe9\\xcd\\xa4\\x5b\\x51\\x8d\\xce\\x00\\x00\\x00\\x68\\xbb\\x5c\\xae\\\n\\xd8\\xa8\\xc3\\x91\\x50\\xc3\\x91\\x53\\xcd\\xa6\\x5e\\xcd\\xa5\\x5e\\x50\\x8c\\\n\\xcd\\x42\\x7e\\xc4\\x64\\xb8\\x58\\x61\\xb6\\x55\\x5e\\xb4\\x53\\xc1\\x8e\\x4f\\\n\\xbd\\x89\\x4c\\xce\\xa6\\x60\\xbe\\x89\\x4d\\xcf\\xa7\\x62\\x5f\\xb5\\x54\\x58\\\n\\xb1\\x4d\\x50\\xaa\\x47\\x48\\xa3\\x3f\\xbe\\x8a\\x4f\\x30\\x8f\\x2c\\x2a\\x88\\\n\\x27\\x26\\x83\\x23\\x26\\x81\\x22\\xcd\\xa5\\x61\\x57\\xb0\\x4c\\x96\\xcc\\x8e\\\n\\x8c\\xc8\\x83\\x3f\\x9c\\x38\\xbd\\x86\\x4c\\x2a\\x87\\x26\\x5a\\xaf\\x53\\x58\\\n\\xae\\x51\\x24\\x7f\\x21\\xc9\\x9f\\x5b\\x4e\\xa8\\x45\\x88\\xc6\\x7f\\x7c\\xc0\\\n\\x72\\x36\\x94\\x30\\xb8\\x7f\\x47\\x26\\x82\\x22\\x57\\xad\\x50\\x55\\xac\\x4f\\\n\\x23\\x7d\\x20\\xc6\\x99\\x56\\xc6\\x96\\x55\\x45\\xa1\\x3d\\x3d\\x9a\\x36\\x36\\\n\\x93\\x30\\xb9\\x81\\x49\\xb6\\x79\\x43\\xc4\\x95\\x55\\xc1\\x8f\\x4f\\xc3\\x92\\\n\\x55\\xd2\\xab\\x6f\\xbe\\x73\\x40\\xc2\\x8f\\x50\\xbe\\x8a\\x4d\\xc1\\x8c\\x52\\\n\\xd6\\xb4\\x79\\xe3\\xcc\\x99\\xde\\xc4\\x8d\\xbc\\x83\\x4f\\xbc\\x85\\x4a\\xbc\\\n\\x86\\x4c\\xbc\\x84\\x4b\\xb7\\x7e\\x47\\xbb\\x81\\x4c\\xdb\\xbf\\x87\\xe8\\xd5\\\n\\xa3\\xe9\\xd7\\xa5\\xda\\xbb\\x80\\xab\\x64\\x3d\\xc1\\x8e\\x58\\xdf\\xc5\\x8f\\\n\\xe7\\xd3\\xa0\\xe0\\xc7\\x93\\xc9\\x9b\\x61\\x87\\x48\\x28\\xbc\\x84\\x51\\xd7\\\n\\xb5\\x7d\\xd6\\xb5\\x7f\\xc3\\x91\\x56\\xab\\x67\\x37\\xa5\\x5c\\x33\\xb9\\x80\\\n\\x48\\xab\\x64\\x37\\x9b\\x58\\x30\\xff\\xff\\xff\\xd6\\x98\\x17\\x19\\x00\\x00\\\n\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\\n\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xbc\\x49\\x44\\x41\\x54\\\n\\x18\\xd3\\x63\\x60\\x64\\x62\\x66\\x61\\x65\\x63\\xe7\\xe0\\xe4\\xe2\\x66\\x00\\\n\\x03\\x1e\\x5e\\x3e\\x7e\\x20\\x25\\x20\\x28\\x24\\x0c\\x11\\x10\\xe1\\x13\\x15\\\n\\x13\\x17\\x17\\x97\\x90\\x94\\x92\\x86\\x08\\xc8\\xc8\\xca\\xc9\\x33\\x88\\x33\\\n\\x28\\x28\\x2a\\x29\\xab\\x80\\x05\\x54\\x41\\x84\\x38\\x98\\xa9\\x06\\x26\\xd5\\\n\\x21\\x02\\x1a\\x9a\\x5a\\xda\\x3a\\xba\\x7a\\xfa\\x06\\x0c\\x86\\x60\\x01\\x71\\\n\\x23\\x63\\x13\\x53\\x33\\x73\\x0b\\x4b\\x2b\\x06\\x6b\\x88\\x0a\\x1b\\x5b\\x3b\\\n\\x7b\\x07\\x47\\x27\\x67\\x17\\x06\\x57\\x37\\xb0\\x80\\xbb\\x87\\xa7\\x97\\x37\\\n\\x58\\x0b\\x83\\x8f\\x2f\\xc4\\x50\\x3f\\xff\\x00\\x88\\xbd\\x0c\\x81\\x41\\x20\\\n\\x43\\x83\\x43\\x42\\xc3\\xc2\\xc1\\x2a\\x18\\x18\\x22\\x22\\xcd\\xa2\\xa2\\x63\\\n\\x62\\xe3\\xe2\\x13\\x12\\x81\\x86\\x42\\x81\\x8d\\x6d\\x52\\x72\\x4a\\x6a\\x5a\\\n\\xba\\x0b\\x4c\\x00\\x68\\x68\\x46\\x66\\x56\\x76\\x8e\\x01\\x03\\x12\\xc8\\xcd\\\n\\xcb\\x67\\x40\\x05\\x05\\x40\\x0c\\x00\\xb4\\x80\\x1d\\xa1\\xcf\\xb6\\x6a\\x7e\\\n\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\\n\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\\n\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\\n\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x64\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xc0\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xcd\\xcd\\xcd\\xc9\\xc9\\xc9\\xc4\\xc4\\xc4\\\n\\xc0\\xc0\\xc0\\xc8\\xc8\\xc8\\xba\\xba\\xba\\xc3\\xc3\\xc3\\xb4\\xb4\\xb4\\xbd\\\n\\xbd\\xbd\\xb8\\xb8\\xb8\\xb3\\xb3\\xb3\\xae\\xae\\xae\\xc1\\xc1\\xc1\\xbc\\xbc\\\n\\xbc\\xb7\\xb7\\xb7\\xc7\\xc7\\xc7\\xc7\\xc6\\xc7\\xa7\\xa7\\xa7\\xa2\\xa2\\xa2\\\n\\x9c\\x9c\\x9c\\xb1\\xb1\\xb1\\xb4\\xb3\\xb4\\xa1\\xa1\\xa1\\x9b\\x9b\\x9b\\xa6\\\n\\xa6\\xa6\\xa0\\xa0\\xa0\\x9f\\x9f\\x9f\\x9a\\x9a\\x9a\\x99\\x99\\x99\\x93\\x93\\\n\\x93\\x78\\x78\\x78\\xbb\\xba\\xbb\\xb4\\xb4\\xb5\\xa3\\xa3\\xa3\\x92\\x92\\x92\\\n\\x8d\\x8d\\x8d\\x7c\\x7c\\x7c\\x98\\x98\\x98\\x9c\\x9b\\x9c\\x6e\\x6e\\x6e\\xaa\\\n\\xaa\\xaa\\xb1\\xb1\\xb3\\x8c\\x8c\\x8c\\x86\\x86\\x86\\x98\\x98\\x99\\x74\\x74\\\n\\x74\\xab\\xab\\xab\\x90\\x90\\x90\\x8b\\x8b\\x8b\\xa4\\xa4\\xa4\\x7b\\x7b\\x7b\\\n\\x76\\x76\\x76\\x97\\x97\\x98\\x6d\\x6d\\x6d\\x8f\\x8f\\x8f\\xa9\\xa9\\xa9\\xb9\\\n\\xb9\\xb9\\x88\\x87\\x88\\x6c\\x6c\\x6c\\x7e\\x7e\\x7e\\x79\\x79\\x79\\x70\\x70\\\n\\x70\\xff\\xff\\xff\\x65\\x89\\x80\\x47\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\x7e\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x0e\\\n\\x18\\x99\\x98\\x59\\x50\\x04\\x58\\x19\\x18\\xd8\\x50\\x04\\xd8\\x19\\x18\\x38\\\n\\x50\\x04\\x38\\xb9\\xb8\\x79\\x90\\xb8\\xbc\\x7c\\xfc\\x02\\x82\\x42\\xc2\\x22\\\n\\x08\\x11\\x7e\\x51\\x7e\\x31\\x71\\x09\\x14\\x3d\\x92\\x52\\x68\\xf6\\x4a\\xcb\\\n\\x20\\xd8\\x60\\xe3\\x65\\xe5\\x40\\xa4\\x3c\\x88\\xe0\\x56\\x50\\x54\\x62\\x60\\\n\\x50\\x56\\x61\\x60\\x50\\x55\\x53\\xd7\\x00\\x89\\x68\\x6a\\x01\\x09\\x6d\\x1d\\\n\\x20\\xa1\\xab\\x07\\xd1\\x23\\xa1\\x6f\\x60\\x68\\x24\\x6c\\x6c\\x62\\x6a\\x06\\\n\\x33\\xc5\\x5c\\xc6\\xc2\\x92\\x4b\\xc9\\xca\\x1a\\xc9\\x12\\x1b\\x5b\\x3d\\x3b\\\n\\x1c\\xfe\\x06\\x00\\xcb\\x05\\x08\\x74\\xdb\\x0e\\x84\\x7f\\x00\\x00\\x00\\x1d\\\n\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\\n\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\\n\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\\n\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\\n\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\\n\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\\n\\x36\\x2d\\x30\\x38\\x54\\x31\\x30\\x3a\\x33\\x35\\x3a\\x35\\x39\\x2b\\x30\\x32\\\n\\x3a\\x30\\x30\\x5e\\x0e\\x75\\xa0\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\\n\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\xe8\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xce\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x36\\x6b\\xbc\\x36\\x6b\\xbb\\x36\\x6a\\xbb\\\n\\x39\\x6c\\xbc\\x3b\\x6e\\xbd\\x3a\\x6d\\xbb\\x38\\x6b\\xbb\\x3e\\x70\\xbb\\xd1\\\n\\xe0\\xf6\\xd1\\xe0\\xf7\\xf8\\xfb\\xfe\\xf7\\xfb\\xfe\\xf6\\xf9\\xfd\\xf0\\xf5\\\n\\xfc\\xea\\xf0\\xfa\\xed\\xf2\\xfb\\xf7\\xfa\\xfd\\xeb\\xf1\\xfb\\xdf\\xe9\\xf8\\\n\\xbd\\xd0\\xec\\x5e\\x89\\xc9\\xd1\\xdf\\xf6\\x80\\xaa\\xe9\\xf6\\xfa\\xfe\\xf6\\\n\\xfa\\xfd\\x64\\x8c\\xc8\\xee\\xf3\\xfb\\xea\\xf1\\xfb\\xf2\\xf6\\xfc\\xf1\\xf6\\\n\\xfc\\xe2\\xec\\xf9\\xdb\\xe7\\xf8\\xba\\xd0\\xee\\xd0\\xdf\\xf6\\x7e\\xa8\\xe8\\\n\\xe9\\xf1\\xfa\\xee\\xf4\\xfb\\xe8\\xf0\\xfa\\xdd\\xe8\\xf8\\xdb\\xe6\\xf7\\x7a\\\n\\xa3\\xe1\\xc3\\xd5\\xef\\x35\\x69\\xb7\\xcc\\xdd\\xf5\\x7e\\xa8\\xe7\\x66\\x8d\\\n\\xc9\\xe9\\xf0\\xfa\\xf3\\xf8\\xfd\\xf8\\xfa\\xfe\\xef\\xf4\\xfc\\xdf\\xe9\\xf9\\\n\\xdb\\xe7\\xf7\\xd9\\xe5\\xf7\\x78\\xa2\\xe0\\xa9\\xc2\\xe7\\x35\\x68\\xb6\\xc9\\\n\\xdc\\xf4\\x7d\\xa7\\xe7\\xe1\\xec\\xf9\\xe3\\xed\\xf9\\xee\\xf4\\xfc\\xf3\\xf7\\\n\\xfd\\xe5\\xed\\xfa\\xd8\\xe5\\xf6\\x77\\xa0\\xde\\xa4\\xbe\\xe4\\x34\\x67\\xb4\\\n\\xc7\\xd9\\xf4\\x7d\\xa6\\xe6\\x65\\x8d\\xc9\\x67\\x8e\\xc9\\x6c\\x92\\xcb\\x6d\\\n\\x92\\xcb\\x69\\x90\\xca\\x65\\x8c\\xc8\\x74\\x9c\\xda\\x9f\\xba\\xe1\\x34\\x66\\\n\\xb3\\xc5\\xd8\\xf2\\x7b\\xa4\\xe3\\x7a\\xa3\\xe3\\x7a\\xa4\\xe3\\x7b\\xa4\\xe2\\\n\\x7b\\xa3\\xe2\\x7b\\xa3\\xe1\\x79\\xa2\\xe1\\x77\\xa0\\xdf\\x76\\x9f\\xde\\x74\\\n\\x9e\\xdd\\x72\\x9c\\xdb\\x74\\x9d\\xdc\\x9a\\xb5\\xdd\\x34\\x65\\xb1\\xc2\\xd5\\\n\\xf2\\x78\\xa1\\xe0\\x75\\x9e\\xde\\x73\\x9b\\xda\\x73\\x9b\\xd9\\x95\\xb0\\xda\\\n\\x33\\x64\\xaf\\xbe\\xd2\\xf0\\x7a\\xa3\\xe2\\x77\\x9f\\xde\\x76\\x9f\\xdd\\x72\\\n\\x9b\\xd9\\x71\\x99\\xd8\\x70\\x99\\xd6\\x8e\\xab\\xd5\\x33\\x63\\xad\\x36\\x6a\\\n\\xba\\xbb\\xd0\\xef\\x7a\\xa2\\xe2\\x6d\\x96\\xd3\\x8a\\xa7\\xd2\\x32\\x62\\xab\\\n\\xb8\\xce\\xef\\xf7\\xfa\\xfe\\x88\\xc0\\x62\\x6a\\x93\\xcf\\x84\\xa3\\xce\\x32\\\n\\x61\\xaa\\x38\\x6c\\xbb\\xb6\\xcc\\xee\\x7a\\xa2\\xe1\\xc2\\xdc\\xbf\\x68\\x90\\\n\\xcd\\x81\\x9e\\xcc\\x32\\x61\\xa8\\x37\\x6b\\xba\\xb3\\xca\\xed\\x7a\\xa2\\xe0\\\n\\x65\\x8d\\xca\\x7c\\x9b\\xc9\\x31\\x60\\xa7\\x35\\x6a\\xba\\xad\\xc6\\xeb\\xad\\\n\\xc5\\xea\\x7c\\x9a\\xc8\\x79\\x98\\xc7\\x35\\x69\\xb9\\x35\\x69\\xb8\\x35\\x68\\\n\\xb7\\x35\\x68\\xb5\\x34\\x66\\xb2\\x33\\x65\\xb0\\x33\\x64\\xae\\x32\\x63\\xac\\\n\\x32\\x62\\xaa\\x32\\x61\\xa9\\x31\\x60\\xa8\\x31\\x60\\xa6\\x31\\x61\\xa8\\xff\\\n\\xff\\xff\\x28\\xbe\\x5d\\x8e\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\\n\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\\n\\x00\\x00\\x00\\xf4\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x60\\x04\\x02\\x26\\\n\\x26\\x66\\x66\\x16\\x56\\x36\\x76\\x0e\\x06\\x06\\x06\\x46\\x4e\\x2e\\x6e\\x1e\\\n\\x5e\\x3e\\x7e\\x01\\x5e\\x41\\x21\\x61\\x11\\x51\\xa0\\x80\\x98\\xb8\\x84\\xa4\\\n\\x94\\xb4\\x8c\\x2c\\xb7\\x9c\\xbc\\x82\\xa2\\x08\\x07\\x03\\xa3\\x92\\xb2\\x9c\\\n\\x9c\\x94\\x8a\\xaa\\x20\\xaf\\x9a\\xba\\x86\\xa6\\x96\\x36\\x03\\xa3\\x8e\\xae\\\n\\x9a\\x9a\\x9e\\xbe\\x81\\xa1\\x91\\xb1\\x89\\xa9\\x99\\xb9\\x05\\x03\\x93\\xa5\\\n\\x95\\xb5\\xb5\\x8d\\xad\\xa0\\x9d\\xbd\\x89\\xa9\\x83\\xa3\\x93\\x33\\x03\\x93\\\n\\x8b\\xab\\x94\\x9b\\xbb\\x87\\xa7\\x97\\xb7\\x94\\x94\\x94\\x8f\\xaf\\x1f\\x03\\\n\\xb3\\x7f\\x40\\x60\\x50\\x70\\x48\\x68\\x58\\x78\\x44\\x64\\x54\\x74\\x4c\\x2c\\\n\\x03\\x73\\x5c\\x60\\x60\\x48\\x48\\x70\\x58\\xbc\\x63\\x42\\x74\\x62\\x52\\x72\\\n\\x0a\\x03\\x73\\x6a\\x5a\\x9a\\x66\\x48\\x68\\x7c\\x7a\\x46\\x74\\x66\\x56\\x76\\\n\\x4e\\x2e\\x43\\x5e\\x7e\\x01\\x37\\x1c\\x14\\x16\\x15\\x33\\xb0\\x97\\x84\\x95\\\n\\x96\\x41\\x01\\x6f\\x79\\x45\\x25\\x43\\x55\\x75\\x4d\\x69\\x2d\\x14\\xf0\\xd6\\\n\\xd5\\x37\\x30\\x34\\x36\\x35\\x23\\x54\\xb4\\xb4\\xb6\\x31\\xb4\\x77\\x74\\x22\\\n\\xcc\\xe8\\xea\\x6e\\x63\\xc8\\xeb\\xe9\\xed\\xeb\\x77\\x9e\\x30\\x71\\xd2\\xe4\\\n\\x29\\x53\\xa7\\xb5\\x4d\\x9f\\x01\\x00\\x0f\\x41\\x42\\x74\\x3a\\x8e\\x23\\xd0\\\n\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\\n\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\\n\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x31\\x30\\x2d\\x31\\x32\\x54\\x31\\x35\\x3a\\x31\\x39\\x3a\\x34\\x39\\\n\\x2b\\x30\\x32\\x3a\\x30\\x30\\x37\\x28\\x66\\xe4\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x32\\x2d\\x31\\x30\\x2d\\x31\\x32\\x54\\x31\\x35\\x3a\\x31\\x39\\x3a\\x34\\\n\\x39\\x2b\\x30\\x32\\x3a\\x30\\x30\\x46\\x75\\xde\\x58\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x23\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x41\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xf9\\x82\\x67\\xf7\\x80\\x65\\xf5\\x7e\\x63\\\n\\xf3\\x7c\\x61\\xf9\\x82\\x68\\xee\\x83\\x6e\\xf4\\xa6\\x92\\xf8\\xb4\\xa0\\xf3\\\n\\xa6\\x91\\xe9\\x7d\\x68\\xeb\\x73\\x59\\xf8\\x81\\x66\\xf1\\x97\\x84\\xfb\\xbd\\\n\\xa9\\xf8\\xa3\\x8a\\xf6\\x89\\x6b\\xf8\\xa2\\x89\\xfa\\xbc\\xa8\\xec\\x92\\x7f\\\n\\xe4\\x6c\\x52\\xf6\\x7f\\x65\\xf0\\x97\\x83\\xf5\\x82\\x63\\xff\\xff\\xff\\xf3\\\n\\x7e\\x61\\xf3\\x7c\\x60\\xf9\\xb9\\xa6\\xea\\x8d\\x7b\\xde\\x64\\x4a\\xec\\x81\\\n\\x6c\\xf5\\x81\\x62\\xf4\\x80\\x62\\xf1\\x7a\\x5f\\xf0\\x78\\x5f\\xef\\x76\\x5d\\\n\\xf8\\xb5\\xa5\\xdd\\x70\\x5d\\xf8\\xa1\\x88\\xee\\x73\\x5c\\xec\\x70\\x5b\\xf1\\\n\\x93\\x82\\xec\\x98\\x89\\xd2\\x58\\x3e\\xed\\x76\\x5b\\xf8\\xb6\\xa1\\xf4\\x84\\\n\\x67\\xeb\\x6e\\x5a\\xea\\x6c\\x59\\xe9\\x6f\\x5f\\xf1\\xa8\\x9b\\xce\\x53\\x3a\\\n\\xe9\\x71\\x57\\xf7\\xb3\\xa0\\xf2\\x80\\x65\\xfa\\xd9\\xd3\\xe8\\x69\\x58\\xe7\\\n\\x67\\x57\\xe7\\x6c\\x5d\\xf1\\xa5\\x99\\xca\\x4f\\x35\\xe5\\x6d\\x52\\xf0\\x9f\\\n\\x8e\\xf4\\x99\\x84\\xf1\\x9d\\x90\\xf3\\xaf\\xa6\\xe6\\x65\\x56\\xe5\\x62\\x55\\\n\\xeb\\x89\\x7d\\xe7\\x91\\x85\\xc6\\x4a\\x31\\xe0\\x73\\x60\\xf7\\xb3\\xa4\\xe3\\\n\\x61\\x54\\xe2\\x5f\\x53\\xf2\\xa9\\x9f\\xd1\\x61\\x50\\xda\\x60\\x46\\xe6\\x88\\\n\\x78\\xf5\\xb0\\xa3\\xed\\x92\\x89\\xec\\x92\\x88\\xe1\\x5d\\x52\\xdd\\x7d\\x6f\\\n\\xc0\\x44\\x2b\\xd3\\x59\\x3f\\xe3\\x84\\x75\\xf4\\xac\\xa1\\xec\\x8b\\x7f\\xe4\\\n\\x67\\x5c\\xe3\\x66\\x5b\\xea\\x87\\x7d\\xf1\\xa8\\x9f\\xdd\\x7c\\x6f\\xbf\\x43\\\n\\x29\\xcc\\x52\\x38\\xd4\\x64\\x52\\xe7\\x90\\x84\\xee\\xa0\\x95\\xed\\x9f\\x95\\\n\\xe5\\x8e\\x83\\xce\\x5d\\x4c\\xbd\\x41\\x28\\xc4\\x48\\x2f\\xc2\\x46\\x2c\\xc0\\\n\\x44\\x2a\\xbe\\x42\\x28\\x43\\x24\\xce\\x14\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\\n\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\\n\\x05\\x1d\\x48\\x00\\x00\\x00\\xbc\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\\n\\x0e\\x18\\x99\\x98\\x59\\x90\\xb8\\xac\\x6c\\xec\\x1c\\x1c\\x9c\\x5c\\xdc\\x30\\\n\\x3e\\x0f\\x2f\\x1f\\xbf\\x80\\x80\\xa0\\x90\\xb0\\x08\\x84\\x2f\\x2a\\xc6\\x27\\\n\\x2e\\x2e\\x21\\x21\\x29\\x25\\x2d\\x23\\x0b\\x16\\x90\\xe3\\x13\\x97\\x57\\x90\\\n\\x90\\x50\\x54\\x52\\x56\\x51\\x05\\xf1\\x15\\x39\\xd5\\x14\\x24\\xa5\\x24\\x24\\\n\\x94\\xd5\\x35\\x34\\xb5\\xb4\\x81\\x02\\x3a\\xba\\x7a\\x52\\x8a\\x4a\\x12\\x12\\\n\\x1a\\xfa\\x06\\x86\\x46\\xc6\\x40\\x01\\x13\\x53\\x33\\x25\\x65\\x75\\x73\\x09\\\n\\x03\\x0b\\x4b\\x2b\\x6b\\x1b\\xa0\\x80\\xad\\x9d\\xbd\\xba\\x86\\xbe\\x83\\xa3\\\n\\xa5\\x93\\xb3\\x8b\\xab\\x1b\\xc8\\x10\\x77\\x0f\\x7d\\x03\\x0b\\x09\\x09\\x67\\\n\\x4f\\x2f\\x6f\\x1f\\xb0\\x2d\\xbe\\x7e\\xfe\\x96\\x4e\\x01\\x81\\x5e\\x41\\xde\\\n\\xc1\\x21\\x10\\x87\\x84\\x86\\x85\\x47\\x44\\x46\\x45\\xc7\\xc4\\xc6\\xc1\\x9c\\\n\\x1a\\x9f\\x90\\x98\\x94\\x9c\\x92\\x9a\\x86\\xe4\\x9b\\xf4\\x8c\\xcc\\x2c\\x1c\\\n\\xfe\\x06\\x00\\x3a\\x5d\\x1b\\xdc\\x1e\\x58\\x2f\\x2c\\x00\\x00\\x00\\x1d\\x74\\\n\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\\n\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\\n\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\\n\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\\n\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\\n\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\\n\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\\n\\x60\\x82\\\n\\x00\\x00\\x03\\x41\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x6e\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xd9\\xb4\\x34\\xe1\\xc2\\x5e\\xe2\\xc3\\x60\\\n\\xe2\\xc3\\x5f\\xdb\\xb6\\x3c\\xda\\xb3\\x36\\xfe\\xfe\\xfd\\xff\\xff\\xfe\\xff\\\n\\xfe\\xfe\\xff\\xfe\\xfd\\xfb\\xf7\\xea\\xe4\\xc7\\x6b\\xe3\\xc7\\x6b\\xe6\\xcd\\\n\\x79\\xe5\\xca\\x74\\xda\\xaf\\x35\\xfe\\xfc\\xf7\\xf8\\xe4\\x8e\\xf5\\xde\\x91\\\n\\xf5\\xe0\\x9f\\xf6\\xe1\\xac\\xfe\\xfb\\xef\\xfe\\xfd\\xf4\\xfe\\xfc\\xf3\\xfe\\\n\\xfc\\xf1\\xfe\\xfb\\xee\\xff\\xfd\\xfa\\xda\\xaf\\x36\\xda\\xaa\\x36\\xfd\\xfa\\\n\\xf1\\xf5\\xde\\x94\\xf4\\xdc\\x93\\xf2\\xd5\\x81\\xed\\xca\\x6a\\xea\\xcb\\x6c\\\n\\xef\\xd3\\x85\\xef\\xd2\\x80\\xef\\xd0\\x7a\\xee\\xcf\\x76\\xee\\xcf\\x72\\xfb\\\n\\xf7\\xe9\\xda\\xae\\x34\\xda\\xab\\x35\\xfb\\xf6\\xe8\\xef\\xd4\\x94\\xee\\xce\\\n\\x88\\xe9\\xc1\\x73\\xf6\\xe9\\xc9\\xfe\\xfc\\xf2\\xfe\\xfc\\xf0\\xda\\xab\\x36\\\n\\xda\\xa6\\x37\\xff\\xfd\\xf8\\xff\\xfd\\xf6\\xff\\xfc\\xf5\\xfc\\xf6\\xd8\\xf8\\\n\\xe6\\x94\\xf7\\xe3\\x85\\xf6\\xdf\\x76\\xf5\\xdb\\x68\\xf4\\xd8\\x5c\\xfc\\xf4\\\n\\xd7\\xda\\xa4\\x35\\xda\\xa1\\x36\\xfe\\xfc\\xf6\\xfc\\xf2\\xc8\\xfb\\xef\\xb9\\\n\\xfa\\xec\\xac\\xf9\\xe8\\x9c\\xf7\\xe3\\x8b\\xf6\\xe0\\x7c\\xf6\\xdc\\x6c\\xf5\\\n\\xd9\\x5d\\xf4\\xd6\\x4f\\xf3\\xd3\\x44\\xfc\\xf3\\xd0\\xda\\x9f\\x35\\xda\\x9a\\\n\\x36\\xfd\\xfa\\xf2\\xfa\\xed\\xb3\\xf9\\xe9\\xa4\\xf8\\xe6\\x95\\xf7\\xe2\\x85\\\n\\xf6\\xde\\x76\\xf5\\xdb\\x65\\xf4\\xd7\\x57\\xf3\\xd4\\x49\\xf2\\xd1\\x3b\\xf1\\\n\\xce\\x30\\xfb\\xf2\\xcc\\xda\\x98\\x35\\xda\\x94\\x35\\xfe\\xfa\\xef\\xf9\\xe9\\\n\\xa1\\xf8\\xe5\\x91\\xf7\\xe1\\x81\\xf6\\xde\\x72\\xf5\\xda\\x63\\xf4\\xd7\\x54\\\n\\xf3\\xd3\\x47\\xf2\\xd0\\x39\\xf1\\xcd\\x2e\\xf0\\xcb\\x26\\xfb\\xf2\\xca\\xd9\\\n\\x8e\\x33\\xfa\\xf0\\xdc\\xf4\\xdd\\xa7\\xf4\\xdb\\x9e\\xf3\\xda\\x96\\xf3\\xd8\\\n\\x8e\\xf3\\xd7\\x86\\xf2\\xd4\\x7f\\xf2\\xd3\\x79\\xf1\\xd2\\x72\\xf1\\xd0\\x6c\\\n\\xf1\\xcf\\x69\\xf8\\xea\\xc2\\xd8\\x88\\x2d\\xd8\\x87\\x2d\\xd8\\x86\\x2c\\xff\\\n\\xff\\xff\\xfc\\x1d\\x3c\\x65\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\\n\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\\n\\x00\\x00\\x00\\xad\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x20\\x03\\x30\\x32\\\n\\x31\\x33\\x33\\xb3\\xb0\\x22\\x04\\xd8\\xd8\\x39\\x38\\xb9\\x38\\xb8\\x79\\x78\\\n\\x79\\x79\\xf9\\xf8\\x41\\x02\\x02\\x82\\x42\\xc2\\x22\\xa2\\x62\\xe2\\x12\\x92\\\n\\x62\\x52\\xd2\\x32\\x40\\x01\\x59\\x39\\x79\\x05\\x45\\x25\\x65\\x15\\x55\\x35\\\n\\x75\\x0d\\x4d\\x2d\\xa0\\x80\\xb6\\x8e\\xae\\x9e\\xbe\\x81\\xa1\\x84\\xa1\\x91\\\n\\x98\\x14\\x87\\x31\\x50\\xc0\\x84\\xc3\\xd4\\xcc\\x5c\\xc2\\xc2\\xd2\\xca\\xda\\\n\\xc6\\xd6\\xce\\x1e\\x28\\xe0\\xe0\\xe8\\xe4\\xec\\xe2\\xea\\xe6\\xee\\xe1\\xe9\\\n\\xe5\\xed\\xe3\\x0b\\x14\\xf0\\xf3\\x0f\\x08\\x0c\\x0a\\x0e\\x09\\x0d\\x0b\\x8f\\\n\\x88\\x8c\\x8a\\x06\\x0a\\xc4\\xc4\\xc6\\xc5\\x27\\x24\\x26\\x25\\xa7\\xa4\\xa6\\\n\\xa5\\x67\\xc4\\x00\\x05\\x32\\xb3\\xb2\\x73\\x72\\xf3\\xf2\\x0b\\x0a\\x8b\\x8a\\\n\\x4b\\x4a\\x33\\x41\\x0e\\x29\\x2b\\x2f\\x83\\x82\\xf2\\xb2\\x0a\\x22\\xbc\\x06\\\n\\x00\\x7d\\xf6\\x22\\x9e\\x7c\\xc3\\xfb\\x88\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\\n\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\\n\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x31\\x2d\\x30\\\n\\x33\\x54\\x31\\x37\\x3a\\x30\\x38\\x3a\\x33\\x32\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x89\\x59\\xcc\\x2c\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x02\\xde\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x0b\\\n\\x50\\x4c\\x54\\x45\\x55\\x86\\xc6\\xa2\\xc1\\xef\\x9f\\xc0\\xed\\x9d\\xbe\\xeb\\\n\\x9a\\xbc\\xeb\\x96\\xba\\xe9\\x93\\xb7\\xe7\\x90\\xb5\\xe6\\x8c\\xb2\\xe4\\x88\\\n\\xaf\\xe2\\x84\\xac\\xe0\\x80\\xa9\\xdd\\x7d\\xa5\\xdc\\x7a\\xa3\\xda\\xa1\\xc1\\\n\\xee\\xf4\\xf7\\xfb\\x74\\xa0\\xd7\\x9e\\xbf\\xec\\xa5\\xd5\\x9c\\xa1\\xd3\\x98\\\n\\x9d\\xd0\\x94\\x98\\xce\\x90\\x93\\xcb\\x8b\\x8e\\xc9\\x87\\x89\\xc6\\x82\\x84\\\n\\xc3\\x7e\\x80\\xc1\\x7a\\x7c\\xbe\\x76\\x6f\\x9b\\xd4\\x9b\\xbd\\xeb\\xff\\xff\\\n\\xff\\x6a\\x97\\xd1\\x98\\xba\\xe9\\xa6\\xc3\\xe9\\x64\\x93\\xce\\x94\\xb7\\xe7\\\n\\xa9\\xc4\\xe8\\xac\\xc7\\xe8\\xeb\\xf1\\xf7\\x5f\\x8f\\xcb\\x8f\\xb4\\xe5\\xf2\\\n\\xf6\\xfa\\xaa\\xc6\\xe9\\xac\\xc6\\xe9\\xac\\xc7\\xea\\xad\\xc7\\xe9\\xae\\xc9\\\n\\xe9\\xb0\\xc9\\xe9\\xb0\\xc8\\xe8\\xb5\\xcc\\xe8\\xde\\xe7\\xf2\\x59\\x8a\\xc8\\\n\\x8c\\xb1\\xe3\\xf1\\xf6\\xfa\\xae\\xc9\\xea\\xb0\\xc9\\xea\\xdb\\xe5\\xf1\\x55\\\n\\x86\\xc6\\x87\\xae\\xe1\\xf0\\xf4\\xfa\\xb2\\xcb\\xea\\xb3\\xcc\\xea\\xb7\\xce\\\n\\xea\\xbd\\xd1\\xeb\\xd8\\xe2\\xf0\\x82\\xaa\\xdf\\xef\\xf3\\xf9\\xbb\\xd0\\xeb\\\n\\x7e\\xa8\\xdd\\xba\\xd0\\xeb\\x7a\\xa4\\xd9\\xee\\xf3\\xf9\\xbe\\xd2\\xeb\\xbf\\\n\\xd3\\xeb\\x75\\xa1\\xd7\\xed\\xf2\\xf8\\xea\\xf0\\xf7\\xe6\\xed\\xf6\\xe2\\xea\\\n\\xf4\\xde\\xe7\\xf3\\xdb\\xe4\\xf1\\x72\\x9e\\xd6\\x6e\\x99\\xd3\\x68\\x96\\xd1\\\n\\x63\\x92\\xce\\x5e\\x8e\\xcb\\x5b\\x8a\\xc9\\x56\\x87\\xc7\\x52\\x84\\xc3\\x6f\\\n\\xdf\\x96\\x13\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\\n\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\\n\\xad\\x49\\x44\\x41\\x54\\x18\\xd3\\x65\\xcf\\xd7\\x0e\\x82\\x40\\x10\\x40\\x51\\\n\\xec\\xdd\\xb5\\x77\\x57\\x51\\xb1\\x2b\\x76\\x45\\x85\\x45\\xb0\\xf7\\xae\\xff\\\n\\xff\\x25\\x0e\\xc4\\x10\\x12\\x6e\\x32\\x0f\\x7b\\x66\\x5e\\x96\\xa2\\x8c\\x99\\\n\\xcc\\x16\\xab\\xcd\\xee\\x70\\xba\\xdc\\x1e\\xaf\\x0f\\xde\\x7e\\xa4\\x2b\\x00\\\n\\x10\\x44\\xa1\\x70\\x24\\x1a\\x8b\\x27\\x92\\xa9\\x34\\xca\\x00\\x64\\x11\\xd6\\\n\\x42\\x39\\x80\\x3c\\xa2\\xb5\\x50\\x01\\xa0\\x88\\x68\\x5c\\x82\\x2d\\x03\\x53\\\n\\xae\\x00\\x54\\x6b\\xf5\\x46\\xb3\\xd5\\x66\\x19\\xb6\\xd3\\xed\\xf5\\x01\\x06\\\n\\xc3\\x11\\x1e\\xff\\x2f\\x26\\x1c\\xc0\\x74\\x36\\xe7\\x21\\x81\\x21\\x3c\\x2f\\\n\\x2a\\xb0\\x90\\x04\\x2c\\xc3\\x96\\xc0\\xa8\\xb0\\x94\\x56\\x32\\x44\\x08\\x91\\\n\\x65\\x15\\xd6\\x9b\\x2d\\xde\\xe9\\x2f\\xf6\\x87\\xe3\\xe9\\x7c\\xb9\\x8a\\x6a\\\n\\x0a\\xdc\\xee\\x8f\\xe7\\xeb\\xfd\\xf9\\x72\\x6a\\xc6\\xbf\\xff\\x00\\x09\\xbd\\\n\\x1f\\xca\\xcd\\x2c\\xe5\\xf3\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\\n\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\\n\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\\n\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\\n\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\\n\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\\n\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\\n\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\\n\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x22\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x56\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xeb\\xbc\\x3c\\xea\\xba\\x3a\\xf1\\xd4\\x85\\\n\\xf0\\xd1\\x82\\xe9\\xba\\x3a\\xfd\\xfa\\xf1\\xfa\\xef\\xd5\\xe6\\xb2\\x35\\xe9\\\n\\xb9\\x3a\\xf2\\xd8\\x94\\xfe\\xfc\\xf3\\xfe\\xfa\\xe7\\xf0\\xd3\\x8f\\xe3\\xac\\\n\\x31\\xe8\\xb7\\x38\\xff\\xfd\\xf9\\xf9\\xe9\\x94\\xfa\\xeb\\x9e\\xfe\\xfa\\xec\\\n\\xe1\\xa9\\x2f\\xf4\\xdf\\xa9\\xfd\\xf9\\xed\\xd6\\xa3\\x3e\\xfc\\xf5\\xd4\\xf1\\\n\\xd7\\xa2\\xde\\xa3\\x2b\\xed\\xc8\\x71\\xff\\xfe\\xf9\\xf4\\xdc\\x5e\\xd5\\xa2\\\n\\x3e\\xf4\\xd9\\x5c\\xfe\\xfb\\xed\\xe5\\xbb\\x68\\xe6\\xb4\\x36\\xf7\\xea\\xc8\\\n\\xfd\\xfa\\xe6\\xf4\\xda\\x5d\\xd5\\xa1\\x3d\\xf2\\xd7\\x57\\xfc\\xf3\\xc7\\xf4\\\n\\xe3\\xc0\\xd9\\x99\\x24\\xe6\\xb3\\x36\\xf0\\xd2\\x8c\\xfe\\xfb\\xea\\xf8\\xe6\\\n\\x94\\xf4\\xda\\x5c\\xdd\\xb1\\x47\\xf2\\xd7\\x56\\xf5\\xdb\\x5c\\xfd\\xf8\\xde\\\n\\xe7\\xc0\\x7d\\xd4\\x8e\\x1d\\xe5\\xb1\\x34\\xfe\\xfb\\xf3\\xfb\\xf2\\xc3\\xf6\\\n\\xdc\\x5c\\xf6\\xdf\\x64\\xeb\\xcb\\x57\\xf2\\xd6\\x55\\xf5\\xd9\\x54\\xf8\\xe7\\\n\\x94\\xfb\\xf4\\xe3\\xd0\\x87\\x17\\xe5\\xb0\\x34\\xf1\\xd7\\x9d\\xfd\\xf9\\xe7\\\n\\xf8\\xe5\\x8b\\xf6\\xdb\\x5a\\xf4\\xda\\x5b\\xf2\\xd6\\x54\\xf5\\xd8\\x52\\xf4\\\n\\xd6\\x50\\xfc\\xf6\\xd8\\xe5\\xbf\\x88\\xc9\\x79\\x0e\\xe8\\xbf\\x62\\xfe\\xfc\\\n\\xf4\\xfa\\xef\\xb5\\xf5\\xda\\x58\\xf3\\xd8\\x57\\xf2\\xd7\\x58\\xf2\\xd6\\x58\\\n\\xf4\\xd9\\x57\\xf5\\xd8\\x51\\xf4\\xd7\\x4e\\xf6\\xda\\x62\\xd2\\x93\\x44\\xe3\\\n\\xad\\x31\\xf5\\xe3\\xbe\\xfe\\xfb\\xef\\xfe\\xfb\\xee\\xfe\\xfc\\xef\\xfe\\xfb\\\n\\xec\\xfe\\xfc\\xf2\\xeb\\xce\\xab\\xc1\\x68\\x03\\xe2\\xaa\\x2f\\xe0\\xa7\\x2d\\\n\\xdf\\xa4\\x2b\\xdd\\xa1\\x29\\xdc\\x9e\\x27\\xda\\x9b\\x25\\xd9\\x98\\x23\\xd6\\\n\\x93\\x20\\xd3\\x8c\\x1b\\xcf\\x85\\x16\\xcc\\x7e\\x11\\xc9\\x77\\x0d\\xc6\\x71\\\n\\x09\\xc3\\x6c\\x06\\xbf\\x64\\x00\\xff\\xff\\xff\\xc5\\xd6\\x50\\xc8\\x00\\x00\\\n\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\\n\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xa6\\x49\\x44\\x41\\x54\\\n\\x18\\xd3\\x63\\x60\\xc0\\x01\\x18\\x99\\xd0\\xf8\\xcc\\x2c\\xa8\\x02\\xac\\x6c\\\n\\xec\\x1c\\xc8\\x7c\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\x24\\x01\\x7e\\x01\\x41\\x21\\\n\\x61\\x11\\x24\\xbe\\xa8\\x98\\xb8\\xb8\\x84\\xa4\\x14\\x5c\\x40\\x5a\\x46\\x56\\\n\\x4e\\x4e\\x5e\\x41\\x11\\xc6\\x57\\x52\\x56\\x51\\x55\\x53\\x53\\xd7\\xd0\\xd4\\\n\\x82\\xf0\\xb5\\x75\\x74\\xf5\\xf4\\x0d\\xd4\\x0c\\x8d\\x8c\\x4d\\x4c\\xc1\\x02\\\n\\x66\\xe6\\x16\\x96\\xfa\\x56\\xd6\\x36\\xb6\\x76\\xf6\\x0e\\x20\\xbe\\xa3\\x93\\\n\\xb3\\x8b\\xab\\x9b\\x9a\\x9a\\xbb\\x87\\xa7\\x97\\xb7\\x0f\\x50\\xc0\\xd7\\xcf\\\n\\x3f\\x20\\x20\\x30\\x28\\x38\\x24\\x34\\x2c\\x5c\\x37\\x82\\x81\\x21\\x32\\xca\\\n\\x2f\\x3a\\x26\\x26\\x36\\x36\\x3a\\x46\\x41\\x21\\x2e\\x3e\\x21\\x91\\x21\\x29\\\n\\x39\\x25\\x35\\x2d\\x3d\\x23\\x33\\x2b\\x3b\\x27\\x37\\x2f\\x3f\\xb1\\x00\\xc3\\\n\\xdb\\x00\\xe1\\x5f\\x1c\\xa1\\xaa\\x7b\\xb8\\x00\\x00\\x00\\x00\\x1d\\x74\\x45\\\n\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\\n\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\\n\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\\n\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\x2d\\\n\\x30\\x34\\x54\\x31\\x35\\x3a\\x35\\x34\\x3a\\x34\\x35\\x2b\\x30\\x32\\x3a\\x30\\\n\\x30\\x4b\\x28\\x58\\x45\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\\n\\x82\\\n\\x00\\x00\\x03\\x1d\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x4a\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x68\\x5d\\x56\\x7a\\x3f\\x13\\x7d\\x3e\\x0d\\\n\\x76\\x3c\\x0c\\x69\\x39\\x12\\x63\\x56\\x4e\\x69\\x63\\x5f\\x7d\\x4d\\x28\\x96\\\n\\x61\\x2d\\x88\\x49\\x0f\\x93\\x60\\x2c\\x73\\x3e\\x0c\\x60\\x3d\\x1b\\x63\\x5e\\\n\\x59\\x79\\x52\\x37\\x93\\x5a\\x25\\x76\\x3e\\x0c\\x85\\x54\\x24\\x73\\x3e\\x0e\\\n\\x84\\x55\\x26\\x69\\x3e\\x16\\x50\\x30\\x14\\x67\\x36\\x11\\x71\\x4b\\x2a\\x9e\\\n\\x75\\x4c\\x8e\\x63\\x3b\\x5b\\x35\\x11\\x7b\\x52\\x28\\x59\\x39\\x1c\\x55\\x32\\\n\\x10\\x78\\x48\\x18\\xd1\\xb7\\x9b\\xed\\xc9\\xa3\\xe8\\xc5\\x9f\\xcd\\xa1\\x74\\\n\\xdd\\xb0\\x81\\xce\\xb3\\x96\\x7e\\x4c\\x1a\\x8f\\x5d\\x30\\xee\\xca\\xa6\\xea\\\n\\xcc\\xab\\xf6\\xd0\\xa7\\xf6\\xd0\\xa8\\xee\\xcd\\xa7\\x9a\\x62\\x2e\\x3d\\x3d\\\n\\x3d\\x9e\\x6f\\x41\\xf8\\xcc\\x9c\\xf7\\xd4\\xaf\\xf6\\xcf\\xa5\\xa6\\x76\\x41\\\n\\x37\\x37\\x37\\x49\\x49\\x49\\x4b\\x4b\\x4b\\x98\\x98\\x98\\x5c\\x5c\\x5c\\xa3\\\n\\x7c\\x55\\x4c\\x4c\\x4c\\x4e\\x4e\\x4e\\x77\\x77\\x77\\x97\\x97\\x97\\x59\\x59\\\n\\x59\\xab\\xab\\xab\\xa5\\xa5\\xa5\\x54\\x54\\x54\\x86\\x86\\x86\\x62\\x62\\x62\\\n\\x4a\\x4a\\x4a\\x63\\x63\\x63\\xa4\\xa4\\xa4\\x50\\x50\\x50\\x52\\x52\\x52\\x5b\\\n\\x5b\\x5b\\xb8\\xb8\\xb8\\xc1\\xc1\\xc1\\x57\\x57\\x57\\x4d\\x4d\\x4d\\x5a\\x5a\\\n\\x5a\\x7e\\x7e\\x7e\\x60\\x60\\x60\\xce\\x7c\\x28\\xea\\xb3\\x78\\x7a\\x7a\\x7a\\\n\\x83\\x83\\x83\\x5d\\x5d\\x5d\\x55\\x55\\x55\\x64\\x64\\x64\\x5f\\x5f\\x5f\\x6d\\\n\\x6d\\x6d\\xed\\xb8\\x7e\\xc7\\x74\\x29\\xd1\\x7d\\x29\\xee\\xba\\x82\\x8f\\x8f\\\n\\x8f\\x72\\x72\\x72\\x6f\\x6f\\x6f\\x84\\x84\\x84\\xef\\xbc\\x83\\xca\\x77\\x2a\\\n\\xcd\\x79\\x25\\x5e\\x5e\\x5e\\x4f\\x4f\\x4f\\x80\\x80\\x80\\x45\\x45\\x45\\xce\\\n\\x7e\\x2e\\xd3\\xa2\\x6d\\x47\\x47\\x47\\x38\\x38\\x38\\xff\\xff\\xff\\x47\\xab\\\n\\x2f\\x95\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xad\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x0a\\x18\\x99\\x98\\x59\\x58\\xd9\\\n\\x10\\x7c\\x76\\x0e\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\xb8\\x00\\xbf\\x80\\xa0\\x90\\\n\\xb0\\x88\\xa8\\x18\\x5c\\x40\\x5c\\x42\\x52\\x4a\\x5a\\x46\\x56\\x0e\\x2e\\x20\\\n\\xaf\\xa0\\xa8\\xa4\\xac\\xa2\\xaa\\x06\\x17\\x50\\xd7\\xd0\\xd4\\xd2\\xd6\\xd4\\\n\\xd1\\x85\\x0b\\xe8\\xe9\\x1b\\x18\\x1a\\x1a\\x19\\x9b\\xc0\\xf8\\xa6\\x66\\xe6\\\n\\x16\\x96\\x96\\x56\\xe6\\xd6\\x56\\x10\\xbe\\x8d\\x95\\xb5\\xad\\x9d\\xbd\\x83\\\n\\xa3\\x93\\xb3\\x0b\\x44\\xc0\\xd5\\xcd\\xdd\\xc3\\xd3\\xcb\\xdb\\xc7\\xd7\\xcf\\\n\\x3f\\x00\\xc4\\x0f\\x0c\\x0a\\x0e\\xf1\\x0f\\x35\\xb5\\x0a\\x0b\\x8f\\x88\\x8c\\\n\\x8a\\x06\\x0a\\xc4\\xc4\\x46\\xc4\\x05\\xdb\\x44\\x5a\\xc7\\x27\\x24\\x86\\x25\\\n\\x25\\x83\\x94\\xa4\\xa4\\xa6\\x25\\x26\\xa6\\x3b\\x86\\x24\\xba\\x64\\x64\\x66\\\n\\x41\\xad\\xf5\\x35\\xcd\\xce\\xce\\xc8\\xce\\xc1\\xea\\x71\\x00\\xf6\\x9a\\x1e\\\n\\xf1\\xbb\\x46\\x33\\x11\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\\n\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\\n\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\\n\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\\n\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\\n\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\\n\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\\n\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x3e\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x68\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x84\\xb6\\x6e\\x80\\xb3\\x6a\\x7c\\xb1\\x67\\\n\\x77\\xae\\x63\\x87\\xb8\\x71\\xa4\\xce\\x94\\xcb\\xe6\\xc3\\xd4\\xeb\\xcf\\xce\\\n\\xe9\\xc9\\xb8\\xdd\\xaf\\x7f\\xb9\\x6d\\x69\\xa5\\x58\\x87\\xb8\\x70\\xbb\\xdc\\\n\\xaf\\xe0\\xf2\\xdc\\xbd\\xe4\\xb6\\xa5\\xdb\\x9b\\xa0\\xd9\\x96\\xaf\\xdf\\xa5\\\n\\xc5\\xe8\\xc0\\x8a\\xc2\\x79\\x5f\\x9e\\x50\\xb7\\xda\\xaa\\xdc\\xf1\\xd8\\x9d\\\n\\xd8\\x92\\x93\\xcd\\x88\\x8e\\xcc\\x84\\x96\\xd4\\x8b\\x95\\xd4\\x8a\\x8e\\xd2\\\n\\x83\\xb7\\xe0\\xaf\\x7d\\xb9\\x6b\\x56\\x98\\x48\\x97\\xc7\\x85\\xd7\\xee\\xd2\\\n\\xa0\\xd9\\x95\\x94\\xd3\\x8a\\x89\\xc8\\x7f\\xff\\xff\\xff\\x85\\xcd\\x79\\x7c\\\n\\xc3\\x6b\\x7e\\xc7\\x6f\\xb5\\xdf\\xac\\x57\\x9e\\x45\\x83\\xb5\\x6d\\xb6\\xdd\\\n\\xac\\xaf\\xdf\\xa6\\x8c\\xcb\\x81\\x86\\xc9\\x7c\\x79\\xbd\\x6e\\x6a\\xac\\x5b\\\n\\x77\\xbc\\x60\\x73\\xba\\x5c\\x99\\xd1\\x8b\\x92\\xc5\\x80\\x47\\x8e\\x3c\\x7e\\\n\\xb2\\x69\\xbe\\xe2\\xb6\\x97\\xd5\\x8b\\x86\\xc9\\x7a\\x70\\xb8\\x59\\x7e\\xc1\\\n\\x69\\xaa\\xd4\\x9d\\x42\\x8b\\x38\\x7a\\xaf\\x65\\xb3\\xdd\\xa9\\x8a\\xcf\\x7d\\\n\\x81\\xcc\\x75\\x7d\\xbe\\x67\\xab\\xd4\\x9c\\x3d\\x88\\x34\\x75\\xac\\x61\\x98\\\n\\xcc\\x8a\\x96\\xd3\\x89\\x7a\\xc6\\x6b\\x70\\xc1\\x63\\x65\\xab\\x55\\x72\\xb9\\\n\\x5b\\x97\\xcc\\x85\\x8d\\xbe\\x7b\\x39\\x85\\x30\\x68\\xab\\x53\\xb4\\xdd\\xaa\\\n\\x79\\xc1\\x64\\x71\\xbe\\x5f\\x6e\\xb5\\x58\\x74\\xb7\\x5c\\xb4\\xda\\xa6\\x43\\\n\\x8f\\x38\\x66\\xa3\\x56\\x7d\\xb9\\x6a\\xb2\\xdb\\xa8\\x6f\\xb5\\x59\\x6f\\xb5\\\n\\x58\\x74\\xb7\\x5b\\xb3\\xd9\\xa5\\x6c\\xaa\\x5a\\x34\\x82\\x2c\\x5d\\x9c\\x4d\\\n\\x78\\xb4\\x64\\xb5\\xdb\\xa8\\x98\\xcc\\x87\\x7d\\xbc\\x66\\x7c\\xba\\x64\\x98\\\n\\xcb\\x86\\xb4\\xd9\\xa5\\x6b\\xaa\\x58\\x34\\x81\\x2c\\x53\\x96\\x45\\x50\\x99\\\n\\x41\\x8f\\xc2\\x7d\\xa6\\xd0\\x96\\xa6\\xcf\\x96\\x89\\xbe\\x78\\x42\\x8d\\x36\\\n\\x44\\x8c\\x3a\\x40\\x89\\x36\\x3c\\x87\\x32\\x37\\x84\\x2f\\x47\\x6d\\xe6\\x4b\\\n\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\\n\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xb0\\x49\\x44\\\n\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x0e\\x18\\x99\\x98\\x59\\x90\\xb8\\xac\\x6c\\\n\\xec\\x1c\\x9c\\x5c\\xdc\\x3c\\x30\\x3e\\x2f\\x1f\\xbf\\x80\\xa0\\x90\\xb0\\x88\\\n\\xa8\\x18\\x94\\x2f\\x2e\\x21\\x29\\x25\\x2d\\x23\\x2b\\x27\\xaf\\xa0\\x08\\x16\\\n\\x50\\x52\\x56\\x51\\x55\\x53\\x57\\xd7\\xd0\\xd4\\xd2\\xd6\\x01\\xf1\\x75\\xf5\\\n\\xf4\\x0d\\x0c\\x8d\\xd4\\xd5\\x8d\\x4d\\x4c\\xcd\\xcc\\x2d\\x80\\x02\\x96\\x56\\\n\\xd6\\x36\\xea\\x60\\x60\\x6b\\x67\\xef\\x00\\x14\\x70\\x74\\x72\\x76\\x81\\x0a\\\n\\xb8\\xba\\xb9\\x03\\x05\\x3c\\x3c\\xbd\\xbc\\x7d\\x7c\\x81\\x5c\\x5b\\x3f\\xff\\\n\\x80\\x40\\x90\\x21\\x41\\xc1\\x21\\xa1\\x26\\x40\\x81\\xb0\\xf0\\x88\\x48\\xb0\\\n\\x2d\\x51\\xd1\\x31\\x26\\xa6\\xb6\\xb1\\x71\\xf1\\x09\\x89\\x49\\x10\\x87\\x24\\\n\\xa7\\xa4\\xa6\\xa5\\x67\\x64\\x66\\x65\\xe7\\xc0\\x9c\\x9a\\x9b\\x97\\x5f\\x50\\\n\\x58\\x54\\x9c\\x83\\xe4\\x9b\\x92\\xd2\\xb2\\x72\\x1c\\xfe\\x06\\x00\\x96\\xde\\\n\\x21\\x11\\x0d\\xa6\\x85\\x1b\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\\n\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\\n\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\\n\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\\n\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\\n\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\\n\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\x2d\\x30\\x34\\x54\\x31\\\n\\x36\\x3a\\x30\\x38\\x3a\\x31\\x37\\x2b\\x30\\x32\\x3a\\x30\\x30\\x42\\xf6\\x67\\\n\\x0a\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\xa8\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xad\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xe3\\x63\\x61\\xe2\\x57\\x51\\xe3\\x62\\x5f\\\n\\xce\\x78\\x73\\xec\\x6f\\x6e\\xeb\\x68\\x66\\xe9\\x62\\x5f\\xf0\\x78\\x78\\xf0\\\n\\x74\\x74\\xeb\\x6b\\x69\\xec\\x71\\x6f\\xcc\\x77\\x72\\xdb\\x5a\\x54\\xf2\\x7c\\\n\\x7c\\xf7\\x93\\x97\\xe9\\x68\\x64\\xe3\\x58\\x52\\xd9\\x56\\x4d\\x77\\xa8\\x6e\\\n\\xe0\\x52\\x4c\\xf4\\xa2\\xa2\\xec\\x6c\\x6a\\xea\\x63\\x61\\xea\\x66\\x65\\xe7\\\n\\x61\\x5c\\xe2\\x57\\x4f\\x7a\\x9e\\x75\\x85\\xb4\\x7c\\x7e\\xaf\\x76\\x78\\xab\\\n\\x6f\\xe1\\x54\\x4e\\xf9\\xb1\\xb4\\xf5\\x96\\x95\\xeb\\x6a\\x66\\xec\\x72\\x6e\\\n\\xe5\\x5c\\x5a\\xe2\\x58\\x51\\x6b\\xa0\\x64\\x8f\\xba\\x86\\xa2\\xc6\\x99\\x7c\\\n\\xad\\x74\\xf4\\x96\\x97\\xf4\\x93\\x93\\xf0\\x8d\\x8c\\xe8\\x60\\x5c\\xe8\\x61\\\n\\x5d\\x65\\x9f\\x5d\\xbe\\xd6\\xb9\\x8f\\xba\\x87\\x78\\xac\\x71\\xdc\\x59\\x53\\\n\\xf4\\x96\\x98\\xf3\\x91\\x91\\xf0\\x8a\\x89\\xe7\\x5f\\x5b\\xe4\\x58\\x51\\xd8\\\n\\x54\\x49\\x68\\xa0\\x60\\xc9\\xde\\xc5\\xb9\\xd4\\xb4\\xaa\\xc9\\xa4\\x9a\\xab\\\n\\x81\\xc3\\x6d\\x61\\xe0\\x58\\x50\\xe4\\x5b\\x58\\xdc\\x52\\x49\\xbe\\x63\\x60\\\n\\x7f\\x89\\xa6\\x71\\x9a\\xc1\\x6b\\x85\\xa5\\x69\\xa1\\x62\\xc5\\xda\\xc0\\xb3\\\n\\xd0\\xad\\xb1\\xce\\xab\\xa6\\xc8\\x9e\\x76\\xaa\\x6d\\x7e\\x7b\\x95\\xc8\\x61\\\n\\x5a\\xe3\\x58\\x50\\xe0\\x56\\x4f\\xc8\\x5f\\x58\\x84\\x78\\x90\\x66\\x90\\xbb\\\n\\x8f\\xb3\\xd1\\x7b\\xa2\\xc6\\x4f\\x78\\xa9\\x6b\\x9f\\x63\\xaf\\xcd\\xa9\\xac\\\n\\xcc\\xa6\\xa9\\xc9\\xa2\\x9f\\xc5\\x99\\x74\\xa9\\x6b\\x4f\\x7c\\xae\\xb0\\xc8\\\n\\xdc\\x81\\x9f\\xbf\\x65\\x8d\\xb8\\x68\\x91\\xbc\\x60\\x8a\\xb7\\x52\\x7e\\xb1\\\n\\x6c\\x96\\x68\\x6c\\xa3\\x66\\x99\\xc0\\x93\\xa4\\xc7\\x9e\\x51\\x7e\\xaf\\xbc\\\n\\xd0\\xe3\\xab\\xc3\\xda\\x9e\\xb8\\xd3\\x7d\\xa3\\xc7\\x6f\\x98\\xc1\\x5c\\x89\\\n\\xb6\\x62\\x8e\\xba\\x54\\x80\\xb1\\x65\\x95\\x61\\x6a\\xa2\\x63\\x69\\xa1\\x61\\\n\\xb8\\xcd\\xe1\\xa5\\xc0\\xd8\\xa7\\xc0\\xd8\\x9d\\xba\\xd4\\x60\\x8c\\xb8\\x61\\\n\\x8d\\xb8\\x56\\x7f\\xad\\x9f\\xbb\\xd5\\x9e\\xbb\\xd6\\x9c\\xb8\\xd3\\x94\\xb3\\\n\\xd1\\x5d\\x89\\xb7\\x56\\x81\\xb2\\x4d\\x75\\xa8\\x5b\\x7b\\xa0\\x58\\x81\\xb2\\\n\\x89\\xab\\xcb\\x95\\xb4\\xd1\\x63\\x8e\\xbb\\x5a\\x87\\xb5\\x4d\\x77\\xab\\x56\\\n\\x75\\x9b\\x57\\x78\\xa1\\x56\\x80\\xb2\\x52\\x7e\\xaf\\x53\\x75\\xa1\\xff\\xff\\\n\\xff\\xe8\\xd4\\x43\\xc2\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\\n\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\\n\\x00\\x00\\xd5\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x01\\x18\\x99\\x98\\\n\\x98\\x11\\x3c\\x16\\x56\\x36\\x76\\x0e\\x4e\\x76\\x2e\\x6e\\x1e\\xa8\\x00\\x2f\\\n\\x1f\\xbf\\x80\\xa0\\xa0\\x00\\x3f\\x9f\\x10\\x84\\x2f\\x2c\\x22\\x2a\\x26\\xce\\\n\\xcf\\x2f\\x20\\x21\\x29\\x05\\xe4\\x49\\xcb\\xc8\\xca\\xc9\\x2b\\x28\\x2a\\x71\\\n\\x2b\\xab\\x48\\xb2\\xab\\x02\\x05\\xd4\\xd4\\x35\\x34\\xa5\\x14\\xb4\\xb4\\x75\\\n\\x74\\x25\\xf5\\xd8\\x41\\x2a\\xf4\\x0d\\x0c\\x8d\\x8c\\x95\\x4c\\x4c\\xcd\\xcc\\\n\\xd9\\xf5\\x2c\\x2c\\x81\\x02\\x56\\xd6\\x36\\xb6\\x76\\xf6\\x0e\\x6c\\xda\\xe2\\\n\\x8e\\x4e\\xce\\x2e\\xae\\x6e\\x0c\\xee\\x1e\\x9e\\x5e\\xde\\x3e\\xbe\\x7e\\xfe\\\n\\x01\\x81\\x41\\xc1\\x21\\xa1\\x61\\x0c\\xe1\\x11\\x91\\x51\\xd1\\x31\\xb1\\x71\\\n\\xf1\\x09\\x21\\x21\\xc1\\x89\\x49\\xc9\\x0c\\x0c\\x29\\xa9\\x69\\xe9\\x46\\x19\\\n\\x99\\x59\\xd9\\x39\\xb9\\x79\\x49\\xf9\\x05\\x20\\x77\\x14\\x16\\x15\\x27\\x97\\\n\\x94\\x96\\x95\\x57\\x24\\x55\\xe6\\x27\\x43\\xdd\\x5a\\x55\\x5d\\x53\\x5b\\x57\\\n\\x9f\\x5f\\xd9\\xd0\\x08\\xf3\\x4e\\x53\\x73\\x4b\\x6b\\x5b\\x7b\\x47\\x27\\x92\\\n\\x7f\\xbb\\xba\\x7b\\x7a\\x81\\x14\\x00\\x6c\\x1c\\x2c\\xdd\\x5b\\x17\\xa3\\xbe\\\n\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\\n\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\\n\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x32\\x2d\\x30\\x34\\x2d\\x30\\x34\\x54\\x30\\x38\\x3a\\x34\\x37\\x3a\\x31\\\n\\x34\\x2b\\x30\\x32\\x3a\\x30\\x30\\x82\\xc7\\x38\\x06\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\xdb\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xe9\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x36\\x6b\\xbc\\x36\\x6b\\xbb\\x36\\x6a\\xbb\\\n\\x39\\x6c\\xbc\\x3b\\x6e\\xbd\\x3a\\x6d\\xbb\\x38\\x6b\\xbb\\x3e\\x70\\xbb\\xd1\\\n\\xe0\\xf6\\xca\\xa0\\x90\\xc6\\x61\\x2a\\xbc\\x42\\x04\\xbf\\x59\\x1f\\xd6\\xa2\\\n\\x86\\xea\\xf0\\xfa\\xed\\xf2\\xfb\\xf6\\xf9\\xfd\\xf7\\xfa\\xfd\\xeb\\xf1\\xfb\\\n\\xdf\\xe9\\xf8\\xbd\\xd0\\xec\\x5e\\x89\\xc9\\xca\\x9f\\x91\\xcf\\x74\\x3c\\xf7\\\n\\xb5\\x8d\\xfe\\xd6\\xb8\\xf5\\xa8\\x72\\xcb\\x6c\\x2f\\xd5\\xa6\\x91\\xf2\\xf6\\\n\\xfc\\xf8\\xfb\\xfe\\xf1\\xf6\\xfc\\xe2\\xec\\xf9\\xdb\\xe7\\xf8\\xba\\xd0\\xee\\\n\\xbc\\x58\\x23\\xf6\\xb5\\x8d\\xff\\x92\\x4d\\xff\\x77\\x11\\xff\\x86\\x21\\xeb\\\n\\x8a\\x40\\xbf\\x5a\\x23\\xe8\\xf0\\xfa\\xdd\\xe8\\xf8\\xdb\\xe6\\xf7\\x7a\\xa3\\\n\\xe1\\xc3\\xd5\\xef\\x35\\x69\\xb7\\xfe\\xcd\\xae\\xff\\xff\\xff\\xef\\x7f\\x18\\\n\\xf8\\xfa\\xfe\\xef\\xf4\\xfc\\xdf\\xe9\\xf9\\xdb\\xe7\\xf7\\xd9\\xe5\\xf7\\x78\\\n\\xa2\\xe0\\xa9\\xc2\\xe7\\x35\\x68\\xb6\\xba\\x55\\x1d\\xf4\\x9d\\x63\\xff\\x7f\\\n\\x18\\xf8\\x76\\x00\\xee\\x76\\x00\\xe1\\x68\\x03\\xbf\\x58\\x1d\\xf3\\xf7\\xfd\\\n\\xe5\\xed\\xfa\\xd8\\xe5\\xf6\\x77\\xa0\\xde\\xa4\\xbe\\xe4\\x34\\x67\\xb4\\xc4\\\n\\x97\\x86\\xc7\\x65\\x28\\xe6\\x77\\x21\\xea\\x79\\x05\\xdd\\x64\\x01\\xbc\\x4d\\\n\\x06\\x90\\x6d\\x6b\\x69\\x90\\xca\\x65\\x8c\\xc8\\x64\\x8c\\xc8\\x74\\x9c\\xda\\\n\\x9f\\xba\\xe1\\x34\\x66\\xb3\\xc5\\xd8\\xf2\\x9d\\x7f\\x85\\xb1\\x50\\x1f\\xbb\\\n\\x42\\x04\\xb2\\x4f\\x1b\\x98\\x76\\x77\\x7b\\xa3\\xe1\\x79\\xa2\\xe1\\x77\\xa0\\\n\\xdf\\x76\\x9f\\xde\\x74\\x9e\\xdd\\x72\\x9c\\xdb\\x74\\x9d\\xdc\\x9a\\xb5\\xdd\\\n\\x34\\x65\\xb1\\xc2\\xd5\\xf2\\x7a\\xa3\\xe3\\x7b\\xa3\\xe2\\x7b\\xa4\\xe2\\x78\\\n\\xa1\\xe0\\x75\\x9e\\xde\\x73\\x9b\\xda\\x73\\x9b\\xd9\\x95\\xb0\\xda\\x33\\x64\\\n\\xaf\\xbe\\xd2\\xf0\\x7a\\xa3\\xe2\\x77\\x9f\\xde\\x76\\x9f\\xdd\\x72\\x9b\\xd9\\\n\\x71\\x99\\xd8\\x70\\x99\\xd6\\x8e\\xab\\xd5\\x33\\x63\\xad\\x36\\x6a\\xba\\xbb\\\n\\xd0\\xef\\x7a\\xa2\\xe2\\x6d\\x96\\xd3\\x8a\\xa7\\xd2\\x32\\x62\\xab\\xb8\\xce\\\n\\xef\\xf7\\xfa\\xfe\\x88\\xc0\\x62\\x6a\\x93\\xcf\\x84\\xa3\\xce\\x32\\x61\\xaa\\\n\\x38\\x6c\\xbb\\xb6\\xcc\\xee\\x7a\\xa2\\xe1\\xc2\\xdc\\xbf\\x68\\x90\\xcd\\x81\\\n\\x9e\\xcc\\x32\\x61\\xa8\\x37\\x6b\\xba\\xb3\\xca\\xed\\x7a\\xa2\\xe0\\x65\\x8d\\\n\\xca\\x7c\\x9b\\xc9\\x31\\x60\\xa7\\x35\\x6a\\xba\\xad\\xc6\\xeb\\xad\\xc5\\xea\\\n\\x7c\\x9a\\xc8\\x79\\x98\\xc7\\x35\\x69\\xb9\\x35\\x69\\xb8\\x35\\x68\\xb7\\x35\\\n\\x68\\xb5\\x34\\x66\\xb2\\x33\\x65\\xb0\\x33\\x64\\xae\\x32\\x63\\xac\\x32\\x62\\\n\\xaa\\x32\\x61\\xa9\\x31\\x60\\xa8\\x31\\x60\\xa6\\x31\\x61\\xa8\\x60\\xf3\\xb6\\\n\\xd5\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\\n\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xf5\\x49\\\n\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x60\\x04\\x02\\x26\\x26\\x66\\x66\\x16\\x56\\\n\\x36\\x76\\x0e\\x06\\x06\\x06\\x46\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\x01\\x41\\\n\\x21\\x61\\x11\\x51\\x31\\xa0\\x80\\xb8\\x84\\xa4\\x94\\xb4\\x8c\\xac\\x9c\\xbc\\\n\\x82\\xa2\\x92\\xb2\\x28\\x07\\x03\\xa3\\x8a\\xaa\\x9a\\xba\\x86\\xa6\\x96\\x90\\\n\\xa0\\xb6\\x8e\\xae\\x9e\\xbe\\x01\\x03\\x23\\x8f\\xa1\\x91\\x91\\x91\\x31\\x8f\\\n\\x89\\xa9\\x99\\xb9\\x85\\xa5\\x95\\x35\\x03\\x93\\x8d\\xad\\x9d\\xbd\\x83\\xa3\\\n\\x93\\xb3\\x8b\\xb9\\x85\\xab\\x9b\\xbb\\x07\\x03\\x93\\xa7\\x97\\xb7\\x8f\\xaf\\\n\\x9f\\x7f\\x40\\x60\\x50\\x50\\x50\\x70\\x48\\x28\\x03\\x73\\x58\\x78\\x44\\x64\\\n\\x54\\x74\\x4c\\x6c\\x5c\\x7c\\x42\\x62\\x52\\x72\\x0a\\x03\\x73\\x6a\\x5a\\x5a\\\n\\x7a\\x7a\\x46\\x6c\\xa6\\x5b\\x56\\x52\\x76\\x4e\\x6e\\x1e\\x03\\x73\\x7e\\x41\\\n\\x81\\x5e\\x7a\\x4c\\x66\\x61\\x51\\x52\\x71\\x49\\x69\\x59\\x39\\x43\\x45\\x65\\\n\\x95\\x3c\\x1c\\x54\\xd7\\xd4\\x32\\xb0\\xd7\\xc5\\xd6\\x37\\x40\\x81\\x60\\x63\\\n\\x53\\x33\\x43\\x4b\\x6b\\x5b\\x7d\\x3b\\x14\\x08\\x76\\x74\\x76\\x31\\x74\\xf7\\\n\\xf4\\x22\\x54\\xf4\\xf5\\x4f\\x60\\x98\\x38\\x69\\x32\\xc2\\x8c\\x29\\x53\\x27\\\n\\x30\\x54\\x4c\\x9b\\x3e\\x63\\xa6\\xc7\\xac\\xd9\\x73\\xe6\\xce\\x9b\\xbf\\x60\\\n\\xc2\\xc2\\x45\\x00\\x2d\\x67\\x4a\\x8c\\x0a\\x08\\x7d\\xd2\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\\n\\x32\\x30\\x31\\x32\\x2d\\x31\\x30\\x2d\\x31\\x32\\x54\\x31\\x35\\x3a\\x32\\x34\\\n\\x3a\\x34\\x38\\x2b\\x30\\x32\\x3a\\x30\\x30\\xfd\\x43\\x80\\xe1\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\\n\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x30\\x2d\\x31\\x32\\x54\\x31\\x35\\x3a\\x32\\\n\\x34\\x3a\\x34\\x38\\x2b\\x30\\x32\\x3a\\x30\\x30\\x8c\\x1e\\x38\\x5d\\x00\\x00\\\n\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x01\\xfc\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x8a\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x7b\\xa7\\xdc\\x66\\x8b\\xc0\\x7a\\xa4\\xdb\\\n\\xff\\xff\\xff\\x63\\x87\\xbd\\x79\\xa3\\xd9\\xf9\\xfb\\xfc\\xf8\\xfb\\xfc\\x33\\\n\\x34\\x36\\x60\\x85\\xba\\x79\\xa2\\xd8\\xfa\\xfd\\xfd\\xfa\\xfc\\xfc\\x5e\\x81\\\n\\xb7\\x76\\xa0\\xd5\\xfc\\xfd\\xfd\\x5c\\x7e\\xb5\\x75\\x9e\\xd4\\xfc\\xfe\\xfe\\\n\\xfb\\xfd\\xfd\\x5a\\x7c\\xb2\\x73\\x9c\\xd1\\x58\\x7a\\xb0\\x6f\\x97\\xcc\\xfc\\\n\\xff\\xff\\xfd\\xff\\xff\\x54\\x75\\xac\\x6e\\x94\\xca\\xfe\\xff\\xff\\xf9\\xfc\\\n\\xfc\\x53\\x73\\xaa\\x6c\\x92\\xc8\\xfc\\xfc\\xfc\\x51\\x72\\xa9\\x51\\x71\\xa9\\\n\\x68\\x8e\\xc3\\x64\\x88\\xbe\\x61\\x85\\xbb\\x5f\\x83\\xb9\\x5c\\x7e\\xb4\\x58\\\n\\x7b\\xb1\\x57\\x79\\xae\\x56\\x76\\xad\\x54\\x75\\xab\\x53\\x73\\xa9\\x24\\x5e\\\n\\xc3\\x48\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x75\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x75\\x8f\\xd7\\x12\\x82\\x40\\x10\\x04\\x5b\\x1c\\\n\\x73\\x02\\x4f\\xcc\\xa0\\x72\\x62\\xf6\\xff\\x7f\\x4f\\xa0\\xd4\\x33\\x40\\xbf\\\n\\x6d\\xd7\\xd4\\xd4\\x2c\\xfc\\x52\\xfb\\xc2\\x83\\xba\\x3e\\x69\\x40\\x53\\xad\\\n\\x76\\xa7\\x20\\x17\\x5d\\xe8\\xa9\\x3f\\x50\\x7e\\x15\\x66\\x08\\x23\\xf9\\x72\\\n\\x22\\xa8\\x4e\\x3c\\x3b\\xb2\\xc4\\x58\\x66\\xe2\\x12\\x21\\x4c\\x65\\x8c\\x13\\\n\\xb3\\x12\\x31\\xd7\\x62\\xe9\\xc4\\x0a\\xd6\\x52\\xf4\\x1a\\x16\\x6b\\x03\\xdb\\\n\\xcc\\xef\\xde\\xd3\\x13\\xb0\\x7b\\x2f\\x3d\\x1c\\x4f\\xe1\\xf9\\x72\\xbd\\xdd\\\n\\xad\\xfd\\x7b\\x9e\\x07\\x3f\\x40\\x08\\x49\\x1d\\x8b\\x8c\\x90\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\\n\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\x32\\x2d\\x30\\x35\\x54\\x31\\x34\\x3a\\x32\\\n\\x33\\x3a\\x34\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x9f\\xf7\\xc9\\xd5\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\\n\\x79\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\x32\\x2d\\x30\\x35\\x54\\x31\\x34\\x3a\\\n\\x32\\x33\\x3a\\x34\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xee\\xaa\\x71\\x69\\x00\\\n\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x22\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x56\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xeb\\xbc\\x3c\\xea\\xba\\x3a\\xf1\\xd4\\x85\\\n\\xf0\\xd1\\x82\\xe9\\xba\\x3a\\xfd\\xfa\\xf1\\xfa\\xef\\xd5\\xe6\\xb2\\x35\\xe9\\\n\\xb9\\x3a\\xf2\\xd8\\x94\\xfe\\xfc\\xf3\\xfe\\xfa\\xe7\\xf0\\xd3\\x8f\\xe3\\xac\\\n\\x31\\xe8\\xb7\\x38\\xff\\xfd\\xf9\\xf9\\xe9\\x94\\xfa\\xeb\\x9e\\xfe\\xfa\\xec\\\n\\xe1\\xa9\\x2f\\xf4\\xdf\\xa9\\xfd\\xf9\\xed\\xd6\\xa3\\x3e\\xfc\\xf5\\xd4\\xf1\\\n\\xd7\\xa2\\xde\\xa3\\x2b\\xed\\xc8\\x71\\xff\\xfe\\xf9\\xf4\\xdc\\x5e\\xd5\\xa2\\\n\\x3e\\xf4\\xd9\\x5c\\xfe\\xfb\\xed\\xe5\\xbb\\x68\\xe6\\xb4\\x36\\xf7\\xea\\xc8\\\n\\xfd\\xfa\\xe6\\xf4\\xda\\x5d\\xd5\\xa1\\x3d\\xf2\\xd7\\x57\\xfc\\xf3\\xc7\\xf4\\\n\\xe3\\xc0\\xd9\\x99\\x24\\xe6\\xb3\\x36\\xf0\\xd2\\x8c\\xfe\\xfb\\xea\\xf8\\xe6\\\n\\x94\\xf4\\xda\\x5c\\xdd\\xb1\\x47\\xf2\\xd7\\x56\\xf5\\xdb\\x5c\\xfd\\xf8\\xde\\\n\\xe7\\xc0\\x7d\\xd4\\x8e\\x1d\\xe5\\xb1\\x34\\xfe\\xfb\\xf3\\xfb\\xf2\\xc3\\xf6\\\n\\xdc\\x5c\\xf6\\xdf\\x64\\xeb\\xcb\\x57\\xf2\\xd6\\x55\\xf5\\xd9\\x54\\xf8\\xe7\\\n\\x94\\xfb\\xf4\\xe3\\xd0\\x87\\x17\\xe5\\xb0\\x34\\xf1\\xd7\\x9d\\xfd\\xf9\\xe7\\\n\\xf8\\xe5\\x8b\\xf6\\xdb\\x5a\\xf4\\xda\\x5b\\xf2\\xd6\\x54\\xf5\\xd8\\x52\\xf4\\\n\\xd6\\x50\\xfc\\xf6\\xd8\\xe5\\xbf\\x88\\xc9\\x79\\x0e\\xe8\\xbf\\x62\\xfe\\xfc\\\n\\xf4\\xfa\\xef\\xb5\\xf5\\xda\\x58\\xf3\\xd8\\x57\\xf2\\xd7\\x58\\xf2\\xd6\\x58\\\n\\xf4\\xd9\\x57\\xf5\\xd8\\x51\\xf4\\xd7\\x4e\\xf6\\xda\\x62\\xd2\\x93\\x44\\xe3\\\n\\xad\\x31\\xf5\\xe3\\xbe\\xfe\\xfb\\xef\\xfe\\xfb\\xee\\xfe\\xfc\\xef\\xfe\\xfb\\\n\\xec\\xfe\\xfc\\xf2\\xeb\\xce\\xab\\xc1\\x68\\x03\\xe2\\xaa\\x2f\\xe0\\xa7\\x2d\\\n\\xdf\\xa4\\x2b\\xdd\\xa1\\x29\\xdc\\x9e\\x27\\xda\\x9b\\x25\\xd9\\x98\\x23\\xd6\\\n\\x93\\x20\\xd3\\x8c\\x1b\\xcf\\x85\\x16\\xcc\\x7e\\x11\\xc9\\x77\\x0d\\xc6\\x71\\\n\\x09\\xc3\\x6c\\x06\\xbf\\x64\\x00\\xff\\xff\\xff\\xc5\\xd6\\x50\\xc8\\x00\\x00\\\n\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\\n\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xa6\\x49\\x44\\x41\\x54\\\n\\x18\\xd3\\x63\\x60\\xc0\\x01\\x18\\x99\\xd0\\xf8\\xcc\\x2c\\xa8\\x02\\xac\\x6c\\\n\\xec\\x1c\\xc8\\x7c\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\x24\\x01\\x7e\\x01\\x41\\x21\\\n\\x61\\x11\\x24\\xbe\\xa8\\x98\\xb8\\xb8\\x84\\xa4\\x14\\x5c\\x40\\x5a\\x46\\x56\\\n\\x4e\\x4e\\x5e\\x41\\x11\\xc6\\x57\\x52\\x56\\x51\\x55\\x53\\x53\\xd7\\xd0\\xd4\\\n\\x82\\xf0\\xb5\\x75\\x74\\xf5\\xf4\\x0d\\xd4\\x0c\\x8d\\x8c\\x4d\\x4c\\xc1\\x02\\\n\\x66\\xe6\\x16\\x96\\xfa\\x56\\xd6\\x36\\xb6\\x76\\xf6\\x0e\\x20\\xbe\\xa3\\x93\\\n\\xb3\\x8b\\xab\\x9b\\x9a\\x9a\\xbb\\x87\\xa7\\x97\\xb7\\x0f\\x50\\xc0\\xd7\\xcf\\\n\\x3f\\x20\\x20\\x30\\x28\\x38\\x24\\x34\\x2c\\x5c\\x37\\x82\\x81\\x21\\x32\\xca\\\n\\x2f\\x3a\\x26\\x26\\x36\\x36\\x3a\\x46\\x41\\x21\\x2e\\x3e\\x21\\x91\\x21\\x29\\\n\\x39\\x25\\x35\\x2d\\x3d\\x23\\x33\\x2b\\x3b\\x27\\x37\\x2f\\x3f\\xb1\\x00\\xc3\\\n\\xdb\\x00\\xe1\\x5f\\x1c\\xa1\\xaa\\x7b\\xb8\\x00\\x00\\x00\\x00\\x1d\\x74\\x45\\\n\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\\n\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\\n\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\\n\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\\n\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\\n\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\\n\\x82\\\n\\x00\\x00\\x02\\x6d\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xc6\\\n\\x50\\x4c\\x54\\x45\\x00\\x00\\x00\\xd8\\xd8\\xd8\\xd7\\xd7\\xd7\\xd6\\xd6\\xd6\\\n\\xd5\\xd5\\xd5\\xd3\\xd3\\xd3\\xd2\\xd2\\xd2\\xeb\\xeb\\xeb\\xf5\\xf5\\xf5\\xfc\\\n\\xfc\\xfc\\xf4\\xf4\\xf4\\xe8\\xe8\\xe8\\xce\\xce\\xce\\xf8\\xf8\\xf8\\xff\\xff\\\n\\xff\\xf2\\xf2\\xf2\\xf1\\xf1\\xf1\\xf7\\xf7\\xf7\\xc9\\xc9\\xc9\\xef\\xef\\xef\\\n\\xee\\xee\\xee\\xe9\\xe9\\xea\\xf0\\xf0\\xf0\\xec\\xec\\xec\\xc0\\xc0\\xc0\\xe9\\\n\\xe9\\xe9\\xdd\\xdd\\xdd\\xb3\\xb3\\xb3\\xed\\xed\\xed\\xab\\xab\\xab\\xd4\\xd4\\\n\\xd4\\x75\\x75\\x75\\x74\\x74\\x74\\x73\\x73\\x73\\x7b\\x7b\\x7b\\xfa\\xfa\\xfa\\\n\\xa7\\xa7\\xa7\\x7f\\x7f\\x7f\\x80\\x80\\x80\\x7e\\x7e\\x7e\\xe5\\xe5\\xe5\\xa2\\\n\\xa2\\xa2\\xd1\\xd1\\xd1\\xe4\\xe4\\xe4\\xe1\\xe1\\xe1\\x9d\\x9d\\x9d\\xfe\\xfe\\\n\\xfe\\xe2\\xe2\\xe2\\xfb\\xfb\\xfb\\xc6\\xc6\\xc6\\x99\\x99\\x99\\xc4\\xc4\\xc4\\\n\\xe3\\xe3\\xe3\\xb9\\xb9\\xb9\\xf3\\xf3\\xf3\\xe7\\xe7\\xe7\\xaa\\xaa\\xaa\\xe6\\\n\\xe6\\xe6\\x93\\x93\\x93\\x9c\\x9c\\x9c\\x97\\x97\\x97\\x96\\x96\\x96\\x92\\x92\\\n\\x92\\x90\\x90\\x90\\x8e\\x8e\\x8e\\x00\\x00\\x00\\xc2\\x92\\x6a\\x77\\x00\\x00\\\n\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\\n\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xaa\\x49\\x44\\x41\\x54\\\n\\x18\\xd3\\x6d\\x8f\\x59\\x12\\x82\\x30\\x14\\x04\\x15\\xc4\\x24\\x04\\x02\\x08\\\n\\xb2\\x89\\x0a\\x2a\\x8b\\x82\\x80\\xb8\\xef\\xde\\xff\\x54\\x06\\x53\\xa2\\x1f\\\n\\xcc\\x5f\\x77\\xd5\\xab\\x37\\xd3\\xe9\\xb4\\xa6\\xcb\\xf1\\x3d\\xa1\\xff\\xc7\\\n\\x00\\x22\\x24\\x62\\xa9\\x61\\x99\\xc8\\x8a\\xaa\\x11\\x38\\x68\\x58\\x37\\x86\\\n\\xa6\\x05\\x08\\xb4\\x6b\\xe6\\x00\\xd1\\xc9\\x27\\x0e\\x71\\x47\\x54\\xf0\\x50\\\n\\xf3\\x98\\xc0\\xa2\\x31\\xa6\\x62\\x82\\x4c\\x6f\\xea\\xfb\\x41\\x30\\x03\\xce\\\n\\x7c\\x41\\x85\\x80\\x74\\x10\\x46\\x71\\x14\\x87\\x09\\x16\\x97\\x54\\xac\\x14\\\n\\xe8\\xb0\\x93\\x54\\xc9\\xd6\\x54\\x48\\x69\\x8e\\x99\\x28\\xca\\x4d\\x55\\xbf\\\n\\xd9\\x9a\\x24\\x49\\xd2\\x5d\\x91\\xe5\\x45\\xc5\\x8a\\xec\\xad\\xfc\\x80\\x8f\\\n\\x6a\\x99\\x55\\xdf\\xaa\\x27\\xe9\\x0c\\x15\\xd7\\xbe\\xfc\\xc6\\x5c\\x6f\\xf7\\\n\\xc7\\xf3\\xd5\\x3e\\xfc\\x0d\\x4b\\x61\\x0e\\xed\\xc1\\xa9\\xe2\\x25\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\\n\\x65\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\x31\\x2d\\x31\\x38\\x54\\x31\\x34\\x3a\\\n\\x34\\x31\\x3a\\x32\\x34\\x2b\\x30\\x31\\x3a\\x30\\x30\\x6c\\x2d\\xf1\\x8c\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\\n\\x66\\x79\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\x31\\x2d\\x31\\x38\\x54\\x31\\x34\\\n\\x3a\\x34\\x31\\x3a\\x32\\x34\\x2b\\x30\\x31\\x3a\\x30\\x30\\x1d\\x70\\x49\\x30\\\n\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x27\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x26\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xc7\\xc7\\xc7\\xc4\\xc4\\xc4\\xe5\\xe5\\xe5\\\n\\xe4\\xe4\\xe4\\xac\\xac\\xac\\xd1\\xd1\\xd1\\xce\\xce\\xce\\xca\\xca\\xca\\xc2\\\n\\xc2\\xc2\\xde\\xde\\xde\\xdd\\xdd\\xdd\\xb2\\xb2\\xb2\\xa7\\xa7\\xa7\\xa3\\xa3\\\n\\xa3\\xdc\\xdc\\xdc\\xed\\xed\\xed\\xdb\\xdb\\xdb\\xbe\\xbe\\xbe\\xd6\\xd6\\xd6\\\n\\xd4\\xd4\\xd4\\xb0\\xb0\\xb0\\xcb\\xcb\\xcb\\xe7\\xe7\\xe7\\xb7\\xb7\\xb7\\xd9\\\n\\xd9\\xd9\\xd2\\xd2\\xd2\\xc8\\xc8\\xc8\\x79\\x79\\x79\\xc5\\xc5\\xc5\\xcc\\xcc\\\n\\xcc\\xc9\\xc9\\xc9\\xba\\xba\\xba\\x9c\\x9c\\x9c\\xa1\\xa1\\xa1\\xc6\\xc6\\xc6\\\n\\xc1\\xc1\\xc1\\x89\\x89\\x89\\xc0\\xc0\\xc0\\xd8\\xd8\\xd8\\xcd\\xcd\\xcd\\xbc\\\n\\xbc\\xbc\\x82\\x82\\x82\\x8f\\x8f\\x8f\\xc3\\xc3\\xc3\\x8c\\x8c\\x8c\\x87\\x87\\\n\\x87\\x83\\x83\\x83\\xe9\\xe9\\xe9\\xa5\\xa5\\xa5\\x6b\\x6b\\x6b\\xbf\\xbf\\xbf\\\n\\xe2\\xe2\\xe2\\xb1\\xb1\\xb1\\xa8\\xa8\\xa8\\x61\\x61\\x61\\xa0\\xa0\\xa0\\xcf\\\n\\xcf\\xcf\\x9e\\x9e\\x9e\\x99\\xab\\x8e\\x72\\x96\\x5d\\x66\\x8e\\x4f\\x5a\\x82\\\n\\x42\\x50\\x68\\x42\\x53\\x53\\x53\\xaa\\xaa\\xaa\\x94\\xa8\\x89\\x81\\xab\\x61\\\n\\xb4\\xd4\\x95\\xd0\\xe6\\xba\\x8f\\xbb\\x6a\\x57\\x8f\\x2d\\x37\\x6b\\x19\\xa6\\\n\\xa6\\xa6\\xd5\\xd5\\xd5\\x60\\x89\\x48\\xb1\\xd3\\x90\\xb1\\xd6\\x92\\xff\\xff\\\n\\xff\\x8c\\xbc\\x65\\x8f\\xbc\\x67\\x85\\x85\\x85\\x4c\\x7b\\x31\\xb6\\xd4\\x9c\\\n\\xb2\\xd2\\x95\\x81\\x81\\x81\\x6f\\x6f\\x6f\\x64\\x64\\x64\\x3a\\x6c\\x1d\\x8b\\\n\\xba\\x62\\x87\\xba\\x60\\x87\\xb9\\x60\\xbd\\xbd\\xbd\\x48\\x64\\x38\\x53\\x8c\\\n\\x28\\x8d\\xba\\x64\\x58\\x58\\x58\\x51\\x51\\x51\\xaa\\xf7\\xa1\\x26\\x00\\x00\\\n\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\\n\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xdb\\x49\\x44\\x41\\x54\\\n\\x18\\xd3\\x63\\x60\\x80\\x00\\x46\\x26\\x06\\x14\\xc0\\xc8\\xcc\\xc2\\x0a\\xe7\\\n\\xb0\\xb1\\x73\\x30\\x70\\x72\\x71\\xf3\\x30\\xb0\\xf2\\xf2\\x81\\x05\\xf8\\x05\\\n\\x04\\x39\\x85\\x84\\x45\\x44\\x59\\xc5\\xc4\\x25\\xc0\\x02\\x4c\\xfc\\x22\\x92\\\n\\x82\\xc2\\x22\\x92\\x52\\x62\\xd2\\x32\\x60\\x01\\x59\\x11\\x39\\x79\\x05\\x45\\\n\\x25\\x4e\\x65\\x15\\x09\\x55\\x20\\x57\\x9a\\x49\\x4d\\x5d\\x43\\x53\\x8b\\x81\\\n\\x41\\x5b\\x87\\x53\\x43\\x57\\x4f\\x9f\\x81\\xc9\\x40\\x58\\x9e\\xdd\\x10\\xa4\\\n\\x92\\x95\\x49\\x41\\x99\\xdb\\x88\\xc1\\xd8\\x44\\x4a\\x59\\xc3\\x14\\x24\\x60\\\n\\xc6\\x29\\xa1\\x26\\x65\\xce\\xc0\\xa7\\x6d\\x61\\xa9\\x2c\\x67\\x05\\xd4\\x62\\\n\\x6d\\x63\\x6b\\x67\\xef\\x00\\x52\\x2a\\xab\\x22\\xcb\\xe8\\xc8\\xeb\\xe4\\xec\\\n\\xe2\\xea\\xe6\\xee\\x01\\x14\\xf0\\xf4\\x92\\x15\\x63\\x93\\x67\\xf4\\xf6\\xf1\\\n\\xf5\\xf3\\x0f\\x00\\x09\\x68\\x72\\x79\\xea\\x07\\x32\\x71\\x06\\x05\\xfb\\xf9\\\n\\xf9\\x85\\x80\\x04\\x42\\xc3\\xc2\\x19\\xf4\\xc5\\x18\\x23\\x22\\xa3\\xfc\\xa2\\\n\\xc1\\x2a\\x40\\x20\\x34\\x86\\x27\\x36\\x2e\\x3e\\x24\\x3e\\x0e\\x26\\xc0\\x90\\\n\\x90\\xc8\\xe0\\x01\\x02\\x0c\\x00\\x1f\\xd9\\x1c\\xf8\\x66\\xa0\\x03\\xd0\\x00\\\n\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\\n\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\\n\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\\n\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x01\\x31\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x01\\x03\\x00\\x00\\x00\\x25\\x3d\\x6d\\x22\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x06\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x00\\x00\\x00\\x55\\xc2\\xd3\\x7e\\x00\\x00\\\n\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x12\\x49\\\n\\x44\\x41\\x54\\x08\\xd7\\x63\\x10\\x60\\x60\\xc0\\x8a\\xe4\\xff\\x61\\x15\\x07\\\n\\x00\\x2f\\xdd\\x02\\x0e\\xf2\\xb4\\xaf\\x67\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\\n\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\\n\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\\n\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x02\\x09\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x90\\\n\\x50\\x4c\\x54\\x45\\x00\\x00\\x00\\x7b\\xa7\\xdc\\x66\\x8b\\xc0\\x7a\\xa4\\xdb\\\n\\xff\\xff\\xff\\x63\\x87\\xbd\\x79\\xa3\\xd9\\xf9\\xfb\\xfc\\xf8\\xfb\\xfc\\x33\\\n\\x34\\x36\\x60\\x85\\xba\\x79\\xa2\\xd8\\xfa\\xfd\\xfd\\xfa\\xfc\\xfc\\x5e\\x81\\\n\\xb7\\x76\\xa0\\xd5\\xfc\\xfd\\xfd\\x5c\\x7e\\xb5\\x75\\x9e\\xd4\\xfc\\xfe\\xfe\\\n\\xfb\\xfd\\xfd\\x5a\\x7c\\xb2\\x73\\x9c\\xd1\\x58\\x7a\\xb0\\x6f\\x97\\xcc\\xfc\\\n\\xff\\xff\\xfd\\xff\\xff\\x54\\x75\\xac\\x6e\\x94\\xca\\xfe\\xff\\xff\\xfa\\xfe\\\n\\xfe\\xf9\\xfc\\xfc\\x53\\x73\\xaa\\x6c\\x92\\xc8\\xfc\\xfc\\xfc\\x51\\x72\\xa9\\\n\\x51\\x71\\xa9\\x68\\x8e\\xc3\\x64\\x88\\xbe\\x61\\x85\\xbb\\x5f\\x83\\xb9\\x5c\\\n\\x7e\\xb4\\x58\\x7b\\xb1\\x57\\x79\\xae\\x56\\x76\\xad\\x54\\x75\\xab\\x53\\x73\\\n\\xa9\\x00\\x00\\x00\\x67\\x14\\x96\\xea\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\x7c\\x49\\x44\\x41\\x54\\x18\\xd3\\x6d\\x8f\\xd7\\x12\\\n\\xc2\\x30\\x0c\\x04\\x97\\x70\\x14\\x53\\x03\\x26\\xf4\\x4e\\xe8\\xe5\\xff\\x3f\\\n\\x0f\\xe3\\x0c\\x0e\\x04\\xee\\x49\\xb7\\xb3\\x33\\x92\\xa0\\x98\\xd2\\x57\\x22\\\n\\x28\\xeb\\x33\\x15\\xa8\\xaa\\x56\\x77\\x93\\x31\\x1e\\x34\\xa0\\xa9\\x56\\xfb\\\n\\xd5\\x33\\xd0\\x81\\xae\\x62\\xdf\\x33\\xd0\\x7b\\x1b\\x2a\\x18\\x01\\x38\\xa3\\\n\\x2f\\x3b\\x88\\x03\\x48\\x60\\x28\\x6b\\x73\\x63\\xf4\\x07\\x8c\\x35\\x99\\xe6\\\n\\x60\\x06\\x73\\x69\\xe1\\xd7\\x1a\\xb3\\x5c\\x69\\x0d\\x1b\\xc7\\xb7\\xe1\\xf4\\\n\\x1d\\xa4\\xfb\\xe8\\x70\\x3c\\x9d\\x93\\xcb\\xf5\\x76\\x7f\\xa4\\xe9\\xcf\\xf3\\\n\\x3c\\x01\\x1a\\x02\\x08\\x27\\x9c\\xf3\\x75\\xea\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x32\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x35\\x35\\x3a\\x33\\\n\\x33\\x2b\\x30\\x31\\x3a\\x30\\x30\\x4b\\xe5\\xe0\\xc7\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x35\\x35\\x3a\\\n\\x33\\x33\\x2b\\x30\\x31\\x3a\\x30\\x30\\x3a\\xb8\\x58\\x7b\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x57\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x80\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xea\\xba\\x3a\\xeb\\xbc\\x3c\\xf0\\xd1\\x82\\\n\\xf1\\xd4\\x85\\xe6\\xb2\\x35\\xfa\\xef\\xd5\\xfd\\xfa\\xf1\\xe9\\xba\\x3a\\xe3\\\n\\xac\\x31\\xf0\\xd3\\x8f\\xfe\\xfa\\xe7\\xfe\\xfc\\xf3\\xf2\\xd8\\x94\\xe9\\xb9\\\n\\x3a\\xe1\\xa9\\x2f\\xfe\\xfa\\xec\\xfa\\xeb\\x9e\\xf9\\xe9\\x94\\xff\\xfd\\xf9\\\n\\xe8\\xb7\\x38\\xde\\xa3\\x2b\\xf1\\xd7\\xa2\\xfc\\xf5\\xd4\\xd6\\xa3\\x3e\\xfd\\\n\\xf9\\xed\\xf4\\xdf\\xa9\\xe5\\xbb\\x68\\xfe\\xfb\\xed\\xf4\\xd9\\x5c\\xd5\\xa2\\\n\\x3e\\xf4\\xdc\\x5e\\xff\\xfe\\xf9\\xed\\xc8\\x71\\xd9\\x99\\x24\\x65\\x9f\\x31\\\n\\x76\\xa9\\x42\\xf2\\xd7\\x57\\xd5\\xa1\\x3d\\xf4\\xda\\x5d\\xfd\\xfa\\xe6\\xf7\\\n\\xea\\xc8\\xe6\\xb4\\x36\\xd4\\x8e\\x1d\\x57\\x98\\x28\\x81\\xb3\\x5a\\x6e\\xa4\\\n\\x34\\xf2\\xd7\\x56\\xdd\\xb1\\x47\\xf4\\xda\\x5c\\xf8\\xe6\\x94\\xfe\\xfb\\xea\\\n\\xf0\\xd2\\x8c\\xe6\\xb3\\x36\\x47\\x8f\\x17\\x74\\xab\\x4f\\xaa\\xcb\\x91\\x7c\\\n\\xaf\\x55\\x63\\x9e\\x30\\x69\\xa2\\x34\\x6f\\xa4\\x38\\x6f\\xa5\\x3d\\xf6\\xdc\\\n\\x5c\\xfb\\xf2\\xc3\\xfe\\xfb\\xf3\\xe5\\xb1\\x34\\x37\\x87\\x07\\x68\\xa5\\x46\\\n\\xa1\\xc7\\x8a\\x90\\xbc\\x74\\xa8\\xcb\\x90\\xad\\xcd\\x94\\xb0\\xce\\x96\\x6b\\\n\\xa3\\x37\\xf6\\xdb\\x5a\\xf8\\xe5\\x8b\\xfd\\xf9\\xe7\\xf1\\xd7\\x9d\\xe5\\xb0\\\n\\x34\\x26\\x7f\\x00\\x5c\\xa0\\x3c\\x98\\xc2\\x83\\x82\\xb5\\x67\\x80\\xb3\\x61\\\n\\x85\\xb6\\x66\\x89\\xb8\\x6b\\x8e\\xba\\x6f\\x63\\x9f\\x31\\xf5\\xda\\x58\\xfa\\\n\\xef\\xb5\\xfe\\xfc\\xf4\\xe8\\xbf\\x62\\xba\\x69\\x03\\x41\\x8a\\x1b\\x66\\xa5\\\n\\x48\\x97\\xc2\\x82\\x85\\xb6\\x6a\\x9e\\xc5\\x88\\xa1\\xc6\\x8a\\xa5\\xc8\\x8d\\\n\\xa9\\xca\\x90\\x5b\\x9b\\x29\\xfe\\xfb\\xee\\xfe\\xfb\\xef\\xf5\\xe3\\xbe\\xe3\\\n\\xad\\x31\\xbf\\x64\\x00\\xbc\\x68\\x03\\x3d\\x7a\\x01\\x62\\xa3\\x46\\x96\\xc1\\\n\\x80\\x5e\\x9f\\x3a\\x3c\\x8b\\x0f\\x44\\x8f\\x15\\x4a\\x91\\x1b\\x52\\x97\\x21\\\n\\xda\\x9b\\x25\\xdc\\x9e\\x27\\xdd\\xa1\\x29\\xdf\\xa4\\x2b\\xe0\\xa7\\x2d\\xe2\\\n\\xaa\\x2f\\x1f\\x7b\\x00\\x5f\\xa1\\x43\\x2b\\x83\\x01\\x1e\\x7b\\x03\\x21\\x7d\\\n\\x00\\xff\\xff\\xff\\x9a\\xd5\\xd9\\xb5\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\xb1\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x80\\x00\\\n\\x46\\x26\\x06\\x54\\xc0\\xcc\\x82\\x2a\\xc2\\xca\\xc6\\xce\\x81\\xcc\\xe7\\xe4\\\n\\xe2\\xe6\\xe1\\xe5\\x43\\x12\\xe0\\x17\\x10\\x14\\x12\\x16\\x41\\xf0\\x45\\xc5\\\n\\xc4\\x25\\x24\\x24\\xa5\\x10\\x22\\xd2\\x32\\xb2\\x72\\x72\\xf2\\x0a\\x8a\\x30\\\n\\xbe\\x92\\xb2\\x8a\\xaa\\x9a\\x9a\\xba\\x86\\xa6\\x16\\x84\\xaf\\xad\\xa3\\xab\\\n\\xa7\\xaf\\x66\\x60\\x68\\x64\\x6c\\x62\\x0a\\x16\\x30\\x33\\xb7\\xb0\\xb4\\xb2\\\n\\xb6\\xb1\\xb5\\xb3\\x77\\x70\\x04\\xf1\\x9d\\x9c\\x5d\\x5c\\xdd\\x2c\\xdc\\x3d\\\n\\x3c\\xbd\\xbc\\x7d\\x7c\\xfd\\x18\\x18\\xfc\\x03\\x02\\x83\\x82\\x43\\x42\\xc3\\\n\\xdc\\xc3\\x23\\x22\\x22\\xa3\\xa2\\x19\\x18\\x62\\x62\\xe3\\xe2\\x13\\x12\\x93\\\n\\x92\\x53\\x52\\xd3\\xd2\\xd2\\xa3\\x32\\x32\\x19\\xb2\\xb2\\x73\\x72\\xf3\\xf2\\\n\\x0b\\x0a\\x8b\\x8a\\x4b\\x4a\\xcb\\xca\\x2b\\x2a\\x41\\xa6\\x54\\x55\\xd7\\xa0\\\n\\x79\\xb5\\xb6\\x0e\\xc1\\x06\\x00\\x9b\\xbd\\x21\\x71\\x58\\x2a\\x68\\xbd\\x00\\\n\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\\n\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\\n\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\\n\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x20\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x56\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x36\\x6b\\xbc\\x36\\x6b\\xbb\\x36\\x6a\\xbb\\\n\\x39\\x6c\\xbc\\x3b\\x6e\\xbd\\x3a\\x6d\\xbb\\x38\\x6b\\xbb\\x3e\\x70\\xbb\\xd1\\\n\\xe0\\xf6\\xd1\\xe0\\xf7\\xf8\\xfb\\xfe\\xf7\\xfb\\xfe\\xf6\\xf9\\xfd\\xf0\\xf5\\\n\\xfc\\xea\\xf0\\xfa\\xed\\xf2\\xfb\\xf7\\xfa\\xfd\\xeb\\xf1\\xfb\\xdf\\xe9\\xf8\\\n\\xbd\\xd0\\xec\\x5e\\x89\\xc9\\xd1\\xdf\\xf6\\xb3\\xb3\\xb3\\xf6\\xfa\\xfe\\xf6\\\n\\xfa\\xfd\\x98\\x98\\x98\\xee\\xf3\\xfb\\xea\\xf1\\xfb\\xf2\\xf6\\xfc\\xf1\\xf6\\\n\\xfc\\xe2\\xec\\xf9\\xdb\\xe7\\xf8\\xba\\xd0\\xee\\xd0\\xdf\\xf6\\xe9\\xf1\\xfa\\\n\\xee\\xf4\\xfb\\xe8\\xf0\\xfa\\xdd\\xe8\\xf8\\xdb\\xe6\\xf7\\xc3\\xd5\\xef\\x35\\\n\\x69\\xb7\\xcc\\xdd\\xf5\\xe9\\xf0\\xfa\\xf3\\xf8\\xfd\\xf8\\xfa\\xfe\\xef\\xf4\\\n\\xfc\\xdf\\xe9\\xf9\\xdb\\xe7\\xf7\\xd9\\xe5\\xf7\\xa9\\xc2\\xe7\\x35\\x68\\xb6\\\n\\xc9\\xdc\\xf4\\xe1\\xec\\xf9\\xe3\\xed\\xf9\\xee\\xf4\\xfc\\xf3\\xf7\\xfd\\xe5\\\n\\xed\\xfa\\xd8\\xe5\\xf6\\xa4\\xbe\\xe4\\x34\\x67\\xb4\\xc7\\xd9\\xf4\\x9f\\xba\\\n\\xe1\\x34\\x66\\xb3\\xc5\\xd8\\xf2\\x9a\\xb5\\xdd\\x34\\x65\\xb1\\xc2\\xd5\\xf2\\\n\\x95\\xb0\\xda\\x33\\x64\\xaf\\xbe\\xd2\\xf0\\x8e\\xab\\xd5\\x33\\x63\\xad\\x36\\\n\\x6a\\xba\\xbb\\xd0\\xef\\xb4\\xbe\\xcd\\x8d\\xa8\\xd1\\x32\\x62\\xab\\xb8\\xce\\\n\\xef\\xf7\\xfa\\xfe\\xcc\\xcc\\xcc\\x74\\x99\\xce\\x86\\xa4\\xcd\\x32\\x61\\xaa\\\n\\x38\\x6c\\xbb\\xb6\\xcc\\xee\\xc2\\xdc\\xbf\\x68\\x90\\xcc\\x81\\x9e\\xcc\\x32\\\n\\x61\\xa8\\x37\\x6b\\xba\\xb3\\xca\\xed\\x65\\x8d\\xca\\x7c\\x9b\\xc9\\x31\\x60\\\n\\xa7\\x35\\x6a\\xba\\xad\\xc6\\xeb\\xad\\xc5\\xea\\x7c\\x9a\\xc8\\x79\\x98\\xc7\\\n\\x35\\x69\\xb9\\x35\\x69\\xb8\\x35\\x68\\xb7\\x35\\x68\\xb5\\x34\\x66\\xb2\\x33\\\n\\x65\\xb0\\x33\\x64\\xae\\x32\\x63\\xac\\x32\\x62\\xaa\\x32\\x61\\xa9\\x31\\x60\\\n\\xa8\\x31\\x60\\xa6\\x31\\x61\\xa8\\xff\\xff\\xff\\x3c\\x87\\xf5\\xd1\\x00\\x00\\\n\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\\n\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xcd\\x49\\x44\\x41\\x54\\\n\\x18\\xd3\\x63\\x60\\x60\\x04\\x02\\x26\\x26\\x66\\x66\\x16\\x56\\x36\\x76\\x0e\\\n\\x06\\x06\\x06\\x46\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\x01\\x5e\\x41\\x21\\x61\\\n\\x11\\x51\\xa0\\x80\\x98\\xb8\\x84\\xa4\\x94\\xb4\\x8c\\x2c\\xb7\\x9c\\xbc\\x82\\\n\\xa2\\x08\\x07\\x03\\xa3\\x92\\xb8\\x9c\\x9c\\x94\\xb2\\x8a\\x20\\xaf\\xaa\\x9a\\\n\\xba\\xb8\\x86\\x26\\x03\\xa3\\x96\\xb8\\xaa\\xaa\\x94\\xb6\\x8e\\xae\\x9e\\xbe\\\n\\x81\\xa1\\xb8\\x91\\x31\\x03\\x93\\x89\\xb8\\xa9\\xa9\\x99\\xb9\\xa0\\x85\\xa5\\\n\\x81\\xa1\\x95\\xb8\\xb5\\x0d\\x03\\x93\\xad\\xb8\\x14\\x1c\\x88\\xdb\\xd9\\x33\\\n\\x30\\x3b\\x88\\x23\\x01\\x47\\x27\\x06\\x66\\x67\\x64\\x01\\x17\\x57\\x06\\x66\\\n\\x37\\x64\\x01\\x77\\x0f\\x06\\x4f\\x2f\\x71\\x6e\\x38\\xf0\\xf6\\xf1\\x65\\x60\\\n\\xf7\\x13\\xf7\\x0f\\x80\\x02\\xde\\xc0\\xa0\\x60\\x86\\x90\\x50\\x71\\xff\\x30\\\n\\x28\\xe0\\x0d\\x8f\\x88\\x64\\x88\\x8a\\x46\\x52\\x11\\x13\\x1b\\xc7\\x10\\x9f\\\n\\x90\\x88\\x30\\x23\\x29\\x39\\x8e\\xc1\\x33\\x25\\x35\\x2d\\xdd\\x26\\x23\\x33\\\n\\x2b\\x3b\\x27\\x37\\x2f\\x2e\\xbf\\x00\\x00\\xe0\\x92\\x29\\xcc\\x5c\\xb8\\xd7\\\n\\xa7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\\n\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\\n\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\\n\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\\n\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\\n\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x0d\\\n\\x4c\\x9f\\xff\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x51\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x6b\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xba\\xba\\xba\\xb8\\xb8\\xb8\\xb7\\xb7\\xb7\\\n\\xb6\\xb6\\xb6\\xb4\\xb4\\xb4\\xb3\\xb3\\xb3\\xbb\\xbb\\xbb\\xd0\\xd0\\xd0\\xe8\\\n\\xe8\\xe8\\xf3\\xf3\\xf3\\xfd\\xfd\\xfd\\xfc\\xfc\\xfc\\xed\\xed\\xed\\xe0\\xe0\\\n\\xe0\\xc2\\xc2\\xc2\\xad\\xad\\xad\\xe1\\xe1\\xe1\\xfe\\xfe\\xfe\\xff\\xff\\xff\\\n\\xfb\\xfb\\xfb\\xcf\\xcf\\xcf\\xa9\\xa9\\xa9\\xb9\\xb9\\xb9\\xf8\\xf8\\xf8\\xea\\\n\\xea\\xea\\xa7\\xa7\\xa7\\xf7\\xf7\\xf7\\xe7\\xe7\\xe7\\xef\\xef\\xef\\xf6\\xf6\\\n\\xf6\\xfa\\xfa\\xfa\\xf0\\xf0\\xf0\\xde\\xde\\xde\\xc3\\xc3\\xc3\\xe6\\xe6\\xe6\\\n\\xa5\\xa5\\xa5\\xb5\\xb5\\xb5\\xeb\\xeb\\xeb\\xd6\\xd6\\xd6\\xd5\\xd5\\xd5\\xd1\\\n\\xd1\\xd1\\xbc\\xbc\\xbc\\xc0\\xc0\\xc0\\xe5\\xe5\\xe5\\xa3\\xa3\\xa3\\xf5\\xf5\\\n\\xf5\\xee\\xee\\xee\\xe2\\xe2\\xe2\\xcd\\xcd\\xcd\\x6e\\xa4\\x3c\\x65\\x9f\\x31\\\n\\xde\\xe1\\xdd\\xa0\\xa0\\xa0\\xb2\\xb2\\xb2\\xf4\\xf4\\xf4\\xdd\\xdd\\xdd\\xe3\\\n\\xe3\\xe3\\xc9\\xc9\\xc9\\x67\\xa0\\x36\\x81\\xb3\\x5a\\x57\\x98\\x28\\x9b\\x9e\\\n\\x99\\xb0\\xb0\\xb0\\x6f\\xa5\\x3d\\x6e\\xa3\\x38\\x68\\xa1\\x34\\x62\\x9d\\x30\\\n\\x7c\\xaf\\x55\\xaa\\xcb\\x91\\x74\\xab\\x4f\\x46\\x8f\\x18\\xae\\xae\\xae\\xf2\\\n\\xf2\\xf2\\xd8\\xd8\\xd8\\x6b\\xa3\\x37\\xb0\\xce\\x96\\xad\\xcd\\x94\\xa8\\xcb\\\n\\x90\\x90\\xbc\\x74\\xa1\\xc7\\x8a\\x68\\xa5\\x46\\x35\\x87\\x07\\xac\\xac\\xac\\\n\\xd4\\xd4\\xd4\\x63\\x9f\\x31\\x8e\\xba\\x6f\\x89\\xb8\\x6b\\x85\\xb6\\x66\\x80\\\n\\xb3\\x61\\x82\\xb5\\x67\\x98\\xc2\\x83\\x5c\\xa0\\x3c\\x25\\x7f\\x00\\xdb\\xdb\\\n\\xdb\\x5b\\x9b\\x29\\xa9\\xca\\x90\\xa5\\xc8\\x8d\\xa1\\xc6\\x8a\\x9e\\xc5\\x88\\\n\\x85\\xb6\\x6a\\x97\\xc2\\x82\\x66\\xa5\\x48\\x21\\x7d\\x00\\xce\\xce\\xce\\x52\\\n\\x97\\x22\\x4a\\x91\\x1c\\x44\\x8f\\x16\\x3c\\x8b\\x10\\x5e\\x9f\\x3a\\x96\\xc1\\\n\\x80\\x62\\xa3\\x46\\x21\\x7d\\x03\\xa1\\xa1\\xa1\\x9f\\x9f\\x9f\\xab\\xab\\xab\\\n\\x95\\x95\\x95\\x2e\\x83\\x06\\x5f\\xa1\\x43\\x20\\x7b\\x01\\x1e\\x7b\\x03\\x62\\\n\\x35\\xdc\\xec\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\\n\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\\n\\xc0\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x0a\\x18\\x99\\x98\\x59\\x58\\\n\\xd9\\xe0\\x5c\\x76\\x0e\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\x01\\xa8\\xb4\\xa0\\\n\\x90\\x30\\x18\\x88\\x88\\x8a\\x81\\x05\\xc4\\x25\\x60\\x02\\x92\\x52\\x60\\x01\\\n\\x66\\x69\\x19\\x59\\x39\\x11\\x79\\x05\\x45\\x25\\x65\\x15\\xb0\\x80\\xaa\\x9c\\\n\\x9a\\xa2\\xba\\x86\\xa6\\x92\\x96\\xb6\\x8e\\x2e\\x58\\x80\\x55\\x4f\\x5f\\xd9\\\n\\x40\\x59\\xd0\\xd0\\xc8\\xd8\\xc4\\x14\\x2c\\x60\\x66\\x2e\\x29\\x68\\x61\\xa9\\\n\\x68\\x65\\x6d\\x63\\x6b\\x07\\x16\\xb0\\xe7\\x92\\xb1\\x70\\x70\\x74\\x72\\x76\\\n\\x71\\x75\\x73\\x07\\x0b\\x78\\x78\\x1a\\x78\\x79\\xfb\\xf8\\xba\\xfa\\xf9\\x07\\\n\\x04\\x06\\x81\\x04\\x82\\x15\\x14\\x43\\x42\\x7d\\xc3\\xc2\\x23\\x22\\xa3\\xa2\\\n\\x63\\x62\\x81\\x02\\x62\\x8a\\x5c\\x71\\xf1\\x09\\x89\\x49\\xc9\\x29\\xa9\\x69\\\n\\xe9\\x60\\x3d\\x2a\\x19\\xbc\\x99\\x59\\xd9\\x39\\xb9\\x79\\xf9\\x05\\x50\\xcf\\\n\\x14\\x16\\x15\\x16\\x4b\\x95\\x94\\x96\\x95\\xa3\\x7a\\x39\\xbd\\x02\\x44\\x02\\\n\\x00\\xf6\\x5c\\x21\\x39\\x14\\xa2\\xf1\\x9a\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\\n\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\\n\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x02\\x5b\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xc9\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x57\\xa2\\x4e\\x56\\xa1\\x4d\\x6d\\xb3\\x63\\\n\\x69\\xaf\\x5f\\x55\\xa0\\x4c\\x6c\\xb2\\x62\\x8f\\xd1\\x82\\x85\\xc8\\x7a\\x60\\\n\\xa6\\x57\\x54\\x9f\\x4b\\x6a\\xb0\\x60\\x8d\\xcf\\x81\\x8b\\xcf\\x7f\\x61\\xa7\\\n\\x58\\x40\\x85\\x39\\x53\\x9e\\x4b\\x8a\\xce\\x7f\\x89\\xce\\x7e\\x3d\\x82\\x37\\\n\\x66\\xb6\\x5c\\x79\\xc0\\x6d\\x52\\x9d\\x4a\\x68\\xae\\x5e\\x89\\xcd\\x7d\\x87\\\n\\xcd\\x7c\\x5f\\xa5\\x56\\x3c\\x81\\x36\\x66\\xb5\\x5b\\x86\\xc9\\x79\\x8d\\xce\\\n\\x80\\x5a\\xa6\\x51\\x51\\x9c\\x49\\x67\\xad\\x5c\\x86\\xcc\\x7c\\x85\\xcb\\x79\\\n\\x5d\\xa4\\x54\\x3b\\x80\\x35\\x63\\xb0\\x59\\x76\\xbd\\x6b\\x90\\xd2\\x84\\x85\\\n\\xc9\\x7a\\x6a\\xb2\\x60\\x6d\\xb4\\x63\\x83\\xc9\\x78\\x82\\xcb\\x78\\x5c\\xa3\\\n\\x53\\x3a\\x7f\\x34\\x6d\\xb5\\x63\\x87\\xcc\\x7b\\x81\\xca\\x76\\x81\\xc9\\x76\\\n\\x5a\\xa2\\x52\\x3a\\x7e\\x34\\x51\\x9a\\x49\\x64\\xac\\x5b\\x82\\xca\\x77\\x7e\\\n\\xc8\\x74\\x59\\xa0\\x51\\x39\\x7d\\x33\\x47\\x8e\\x40\\x5c\\xa3\\x54\\x57\\x9f\\\n\\x4f\\x38\\x7c\\x32\\x3d\\x83\\x37\\x37\\x7b\\x31\\xff\\xff\\xff\\x17\\x87\\x61\\\n\\x92\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\\n\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x6c\\x49\\\n\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x20\\x09\\x30\\xa2\\xf1\\x99\\x98\\x59\\x50\\\n\\xf8\\xac\\x6c\\xec\\x1c\\x9c\\x48\\x7c\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\x04\\x5f\\\n\\x80\\x45\\x50\\x88\\x53\\x18\\xcc\\x14\\x11\\x05\\x12\\x62\\xe2\\x12\\x92\\x52\\\n\\xd2\\x60\\xbe\\x8c\\xac\\x9c\\x3c\\x83\\x82\\xa2\\x92\\xb2\\x8a\\x2a\\x44\\xad\\\n\\x9a\\xba\\x86\\xa6\\x96\\xb6\\x8e\\xae\\x9e\\x3e\\x4c\\xb7\\xbc\\x81\\x90\\xa1\\\n\\x91\\xb1\\x89\\x29\\xc2\\x3c\\x33\\x73\\x0b\\x4b\\x2b\\x6b\\x64\\x17\\xd8\\xd8\\\n\\xda\\xd9\\xa3\\xba\\xd1\\xc1\\x91\\x04\\x0f\\x02\\x00\\x8d\\x75\\x08\\xa0\\x44\\\n\\x6f\\x4b\\x25\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\\n\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\\n\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\\n\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\\n\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\\n\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\x2d\\x30\\x34\\x54\\x31\\x36\\x3a\\x30\\\n\\x34\\x3a\\x35\\x37\\x2b\\x30\\x32\\x3a\\x30\\x30\\xdc\\x80\\x89\\x7e\\x00\\x00\\\n\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x01\\x0d\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x01\\x03\\x00\\x00\\x00\\x25\\x3d\\x6d\\x22\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x06\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x00\\x00\\x00\\x55\\xc2\\xd3\\x7e\\x00\\x00\\\n\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x17\\x49\\\n\\x44\\x41\\x54\\x08\\xd7\\x63\\x10\\x60\\x60\\xc0\\x8a\\xe4\\xff\\x31\\x00\\x01\\\n\\xe3\\x07\\x04\\x09\\x06\\x00\\x43\\x89\\x03\\x80\\xda\\x4b\\xcd\\x68\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\\n\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\\n\\x33\\x37\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\\n\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\\n\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\\n\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x04\\x91\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x02\\x79\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x36\\x6b\\xbc\\x36\\x6b\\xbb\\x36\\x6a\\xbb\\\n\\x39\\x6c\\xbc\\x3b\\x6e\\xbd\\x3a\\x6d\\xbb\\x38\\x6b\\xbb\\x3e\\x70\\xbb\\xd1\\\n\\xe0\\xf6\\xd1\\xe0\\xf7\\xf8\\xfb\\xfe\\xf7\\xfb\\xfe\\xf6\\xf9\\xfd\\xf0\\xf5\\\n\\xfc\\xea\\xf0\\xfa\\xed\\xf2\\xfb\\xf7\\xfa\\xfd\\xeb\\xf1\\xfb\\xdf\\xe9\\xf8\\\n\\xbd\\xd0\\xec\\x5e\\x89\\xc9\\xd1\\xdf\\xf6\\x80\\xaa\\xe9\\xf6\\xfa\\xfe\\xf6\\\n\\xfa\\xfd\\x64\\x8c\\xc8\\xee\\xf3\\xfb\\xea\\xf1\\xfb\\xf2\\xf6\\xfc\\xf1\\xf6\\\n\\xfc\\xe2\\xec\\xf9\\xdb\\xe7\\xf8\\xba\\xd0\\xee\\xd0\\xdf\\xf6\\x7e\\xa8\\xe8\\\n\\x76\\x89\\xbe\\xec\\xdb\\xe3\\xee\\xf4\\xfb\\xe8\\xf0\\xfa\\xdd\\xe8\\xf8\\xdb\\\n\\xe6\\xf7\\x8f\\x97\\xcb\\xd9\\x9f\\xaf\\x63\\x64\\xa0\\xcc\\xdd\\xf5\\x7e\\xa8\\\n\\xe7\\xea\\xe0\\xea\\xff\\x77\\x7a\\xfe\\x76\\x79\\xf4\\xe0\\xe5\\xf8\\xfa\\xfe\\\n\\xef\\xf4\\xfc\\xdf\\xe9\\xf9\\xdb\\xe7\\xf7\\xde\\xce\\xdd\\xf8\\x61\\x64\\xf9\\\n\\x68\\x6a\\xb2\\x58\\x75\\xc9\\xdc\\xf4\\x7d\\xa7\\xe7\\xe4\\xdd\\xe9\\xff\\x7e\\\n\\x81\\xfe\\x7e\\x81\\xfd\\x71\\x74\\xf4\\xdf\\xe4\\xe5\\xed\\xfa\\xf8\\x5f\\x62\\\n\\xfb\\x6d\\x6f\\xff\\x7c\\x7e\\xc7\\xd9\\xf4\\x7d\\xa6\\xe6\\x68\\x8b\\xc5\\xfc\\\n\\x71\\x74\\xfe\\x7a\\x7d\\xff\\x87\\x8a\\xfd\\x79\\x7c\\xfb\\x69\\x6c\\x7d\\x84\\\n\\xb6\\x7c\\x83\\xb6\\xf8\\x5e\\x61\\xfa\\x6c\\x6e\\xff\\x7a\\x7d\\xf7\\x5f\\x61\\\n\\xed\\x46\\x4a\\xc5\\xd8\\xf2\\x7b\\xa4\\xe3\\x7a\\xa3\\xe3\\x7e\\xa2\\xdf\\xfa\\\n\\x6b\\x6f\\xfd\\x74\\x77\\xff\\x82\\x86\\xfc\\x73\\x76\\xf8\\x62\\x64\\xf7\\x5d\\\n\\x60\\xfa\\x6a\\x6d\\xff\\x79\\x7b\\xee\\x46\\x49\\x39\\x63\\xad\\xc2\\xd5\\xf2\\\n\\x7b\\xa3\\xe2\\x7f\\xa1\\xde\\xf7\\x63\\x67\\xfb\\x6d\\x70\\xff\\x7e\\x80\\xff\\\n\\x7b\\x7e\\xff\\x79\\x7c\\xff\\x77\\x79\\xf7\\x5c\\x5e\\xed\\x45\\x48\\x97\\xac\\\n\\xd5\\x33\\x64\\xaf\\xbe\\xd2\\xf0\\x7a\\xa3\\xe2\\x7a\\xa3\\xe1\\x7e\\xa0\\xdc\\\n\\xf5\\x5a\\x5e\\xff\\x79\\x7d\\xff\\x5b\\x5e\\xff\\x58\\x5b\\xff\\x74\\x76\\xee\\\n\\x43\\x47\\x73\\x96\\xd1\\x8e\\xab\\xd5\\x33\\x63\\xad\\x36\\x6a\\xba\\xbb\\xd0\\\n\\xef\\x7a\\xa2\\xe2\\xf7\\xdf\\xe2\\xf7\\x5b\\x5d\\xff\\x76\\x79\\xff\\x56\\x59\\\n\\xff\\x54\\x57\\xff\\x70\\x72\\xf0\\x46\\x48\\x82\\x86\\xb9\\x8a\\xa7\\xd2\\x32\\\n\\x62\\xab\\xb8\\xce\\xef\\x79\\xa2\\xe1\\xf7\\xfa\\xfe\\x88\\xc0\\x62\\x9a\\xae\\\n\\x60\\xf6\\x5a\\x5c\\xfa\\x64\\x67\\xff\\x72\\x74\\xff\\x70\\x73\\xff\\x6e\\x70\\\n\\xff\\x6c\\x6e\\xf7\\x55\\x57\\xee\\x3d\\x3f\\x94\\x8f\\xb3\\x32\\x61\\xaa\\x38\\\n\\x6c\\xbb\\xb6\\xcc\\xee\\x7a\\xa2\\xe1\\xca\\xc5\\xad\\xf6\\x59\\x5b\\xfa\\x63\\\n\\x66\\xff\\x71\\x74\\xf6\\x58\\x5a\\xed\\x42\\x44\\xeb\\x3d\\x3f\\xf4\\x4d\\x50\\\n\\xff\\x67\\x68\\xf5\\x4e\\x50\\xeb\\x34\\x36\\x50\\x57\\x92\\x37\\x6b\\xba\\xb3\\\n\\xca\\xed\\x7a\\xa2\\xe0\\xf6\\xde\\xe2\\xf6\\x58\\x5b\\xfa\\x62\\x65\\xff\\x70\\\n\\x71\\xf6\\x56\\x59\\xec\\x41\\x42\\x8b\\xbb\\x60\\xe7\\x33\\x35\\xf2\\x45\\x47\\\n\\xff\\x62\\x63\\xf4\\x48\\x4a\\xe9\\x2d\\x2f\\x35\\x6a\\xba\\xad\\xc6\\xeb\\xad\\\n\\xc5\\xea\\xf6\\xcf\\xd2\\xf5\\x56\\x58\\xfa\\x61\\x63\\xf6\\x55\\x58\\xed\\x41\\\n\\x43\\xf7\\xf4\\xf7\\xe6\\x2c\\x2e\\xf1\\x3f\\x41\\xf6\\x4a\\x4c\\xea\\x2f\\x31\\\n\\x35\\x69\\xb9\\x35\\x69\\xb8\\x35\\x68\\xb7\\x64\\x5f\\x99\\xf2\\x4c\\x4f\\xeb\\\n\\x3e\\x40\\x38\\x63\\xac\\x33\\x64\\xae\\x32\\x63\\xac\\x32\\x62\\xaa\\x32\\x61\\\n\\xa9\\x36\\x5e\\xa3\\xe1\\x22\\x25\\x5e\\x4f\\x85\\xff\\xff\\xff\\x11\\x45\\x6e\\\n\\xec\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\\n\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x01\\x1b\\x49\\\n\\x44\\x41\\x54\\x18\\xd3\\x01\\x10\\x01\\xef\\xfe\\x00\\x00\\x01\\x01\\x01\\x01\\\n\\x02\\x02\\x03\\x03\\x04\\x05\\x06\\x07\\x08\\x00\\x00\\x00\\x01\\x09\\x0a\\x0b\\\n\\x0c\\x0d\\x0e\\x0f\\x10\\x0d\\x11\\x12\\x13\\x14\\x15\\x00\\x00\\x01\\x16\\x17\\\n\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x0b\\x1e\\x1f\\x20\\x21\\x14\\x08\\x00\\x01\\x22\\\n\\x23\\x1e\\x1e\\x24\\x25\\x26\\x11\\x0d\\x27\\x28\\x29\\x2a\\x2b\\x2c\\x00\\x01\\\n\\x2d\\x2e\\x27\\x2f\\x30\\x31\\x32\\x33\\x34\\x35\\x36\\x37\\x38\\x39\\x3a\\x00\\\n\\x02\\x3b\\x3c\\x3d\\x30\\x3e\\x3f\\x40\\x41\\x42\\x36\\x37\\x43\\x44\\x45\\x43\\\n\\x00\\x02\\x46\\x47\\x48\\x49\\x4a\\x4b\\x4c\\x4d\\x4e\\x4f\\x50\\x51\\x52\\x53\\\n\\x54\\x00\\x03\\x55\\x56\\x57\\x58\\x59\\x5a\\x5b\\x5c\\x5d\\x5e\\x5f\\x60\\x5e\\\n\\x61\\x62\\x00\\x03\\x63\\x57\\x57\\x64\\x65\\x66\\x67\\x68\\x69\\x6a\\x6b\\x6c\\\n\\x6d\\x6e\\x6f\\x00\\x03\\x70\\x71\\x71\\x72\\x64\\x73\\x74\\x75\\x76\\x77\\x78\\\n\\x79\\x7a\\x7b\\x7c\\x00\\x7d\\x7e\\x7f\\x0b\\x0b\\x0b\\x80\\x81\\x82\\x83\\x84\\\n\\x85\\x86\\x87\\x88\\x89\\x00\\x07\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\\n\\x93\\x94\\x95\\x96\\x97\\x98\\x00\\x99\\x9a\\x9b\\x8c\\x9c\\x9d\\x9e\\x9f\\xa0\\\n\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\x00\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\\n\\xb0\\xb1\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\x00\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\\n\\xbe\\xbf\\x0b\\x0b\\xbf\\xc0\\xc1\\xc2\\xc3\\x00\\x7d\\xc4\\xc5\\xc6\\xc7\\xc8\\\n\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xc3\\xd1\\x0a\\x9f\\x5c\\xc3\\x06\\x53\\\n\\xc3\\xc4\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\\n\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\\n\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x02\\xbc\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x14\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xfe\\x78\\x74\\xfd\\x75\\x72\\xfd\\x72\\x6f\\\n\\xfc\\x6d\\x6b\\xfb\\x69\\x67\\xfa\\x64\\x63\\xf9\\x5e\\x5e\\xf8\\x58\\x59\\xf7\\\n\\x53\\x54\\xf6\\x4c\\x4f\\xff\\xb9\\xb8\\xff\\xc6\\xc6\\xff\\xd1\\xd1\\xff\\xdb\\\n\\xdb\\xff\\xd6\\xd6\\xfd\\xc0\\xbf\\xec\\xa5\\xa5\\xee\\xa2\\xa2\\xf2\\xa0\\xa0\\\n\\xef\\x99\\x9a\\xe3\\x90\\x90\\xe3\\x7e\\x7f\\xf3\\x3e\\x43\\xff\\x9d\\x9b\\xff\\\n\\xb3\\xb3\\xff\\xab\\xab\\xff\\xd5\\xd5\\xff\\xd0\\xd0\\xff\\xad\\xad\\xfd\\x75\\\n\\x75\\xe3\\x68\\x68\\xe6\\x64\\x64\\xee\\x63\\x63\\xeb\\x5c\\x5c\\xcd\\x4d\\x4d\\\n\\xd8\\x88\\x88\\xdb\\x6f\\x71\\xf0\\x31\\x37\\xfe\\x76\\x72\\xfe\\x89\\x86\\xff\\\n\\xa5\\xa5\\xff\\xe1\\xe1\\xff\\xff\\xff\\xff\\xc1\\xc1\\xfd\\x54\\x54\\xe6\\x4b\\\n\\x4b\\xe9\\x4a\\x4a\\xf1\\x4a\\x4a\\xde\\x42\\x42\\xd7\\x85\\x85\\xde\\x64\\x66\\\n\\xf0\\x2f\\x36\\xfd\\x80\\x7f\\xff\\xb1\\xb1\\xff\\xe7\\xe7\\xff\\xcf\\xcf\\xfe\\\n\\x5b\\x5b\\xec\\x4a\\x4a\\xef\\x4b\\x4b\\xef\\x48\\x48\\xdd\\x86\\x86\\xdf\\x61\\\n\\x64\\xf0\\x2e\\x34\\xfa\\x62\\x62\\xfc\\x77\\x77\\xff\\xc7\\xc7\\xff\\xd4\\xd4\\\n\\xfe\\x64\\x64\\xf0\\x45\\x45\\xf4\\x47\\x47\\xeb\\x8a\\x8a\\xe0\\x61\\x64\\xef\\\n\\x2c\\x33\\xf7\\x56\\x57\\xfa\\x76\\x77\\xfe\\x75\\x75\\xf4\\x41\\x41\\xf8\\x8b\\\n\\x8b\\xe2\\x6d\\x6f\\xef\\x2b\\x32\\xf5\\x48\\x4b\\xf9\\x7b\\x7d\\xfe\\xa8\\xa8\\\n\\xfb\\x89\\x89\\xee\\x70\\x72\\xef\\x29\\x31\\xf2\\x3a\\x3f\\xf9\\x72\\x74\\xf7\\\n\\x70\\x72\\xee\\x28\\x30\\xee\\x27\\x2e\\xb8\\x7a\\x72\\xff\\x00\\x00\\x00\\x01\\\n\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\\n\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x82\\x49\\x44\\x41\\x54\\x18\\xd3\\\n\\x63\\x60\\x20\\x07\\x30\\x32\\x32\\x32\\x31\\xb3\\xb0\\xb2\\xb1\\x73\\x70\\x72\\\n\\x81\\xf9\\xdc\\x3c\\xbc\\x7c\\xfc\\x02\\x82\\x42\\xc2\\x22\\xa2\\x62\\xe2\\x40\\\n\\xbe\\x84\\xa4\\x94\\xb4\\x8c\\xac\\x9c\\xbc\\x82\\xa2\\x92\\xb2\\x8a\\xaa\\x1a\\\n\\x03\\x83\\xba\\x86\\xa6\\x96\\xb6\\x8e\\xae\\x9e\\xbe\\x81\\xa1\\x91\\xb1\\x09\\\n\\x48\\x0f\\x8b\\xa9\\x99\\xb9\\x85\\xa5\\x95\\xb5\\x8d\\xad\\x9d\\x3d\\xc4\\x54\\\n\\x07\\x47\\x27\\x67\\x17\\x57\\x37\\x77\\x0f\\x4f\\x98\\x3d\\x5e\\xde\\xce\\x3e\\\n\\xbe\\x7e\\xfe\\x01\\x08\\x9b\\x03\\x83\\x82\\x43\\x42\\xc3\\x90\\xdd\\x12\\x1e\\\n\\x11\\x19\\x85\\xea\\x3a\\xcf\\x68\\xb2\\x3c\\x05\\x06\\x00\\xb6\\x77\\x10\\xef\\\n\\xf7\\x67\\x53\\xe2\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\\n\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\\n\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\\n\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\\n\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\\n\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\x2d\\x30\\x34\\x54\\x31\\x36\\x3a\\\n\\x30\\x31\\x3a\\x34\\x32\\x2b\\x30\\x32\\x3a\\x30\\x30\\xa4\\x3b\\x6d\\x03\\x00\\\n\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x75\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xae\\\n\\x50\\x4c\\x54\\x45\\xfd\\xfd\\xfd\\xd8\\xd8\\xd8\\xd7\\xd7\\xd7\\xd6\\xd6\\xd6\\\n\\xd5\\xd5\\xd5\\xd3\\xd3\\xd3\\xd2\\xd2\\xd2\\xeb\\xeb\\xeb\\xf5\\xf5\\xf5\\xfc\\\n\\xfc\\xfc\\xf4\\xf4\\xf4\\xe8\\xe8\\xe8\\xce\\xce\\xce\\xf8\\xf8\\xf8\\xff\\xff\\\n\\xff\\xf2\\xf2\\xf2\\xf1\\xf1\\xf1\\xf7\\xf7\\xf7\\xc9\\xc9\\xc9\\xef\\xef\\xef\\\n\\xee\\xee\\xee\\xed\\xed\\xed\\xec\\xec\\xec\\xc0\\xc0\\xc0\\xe9\\xe9\\xe9\\xdd\\\n\\xdd\\xdd\\xb3\\xb3\\xb3\\xab\\xab\\xab\\xd4\\xd4\\xd4\\xf0\\xf0\\xf0\\xe5\\xe5\\\n\\xe5\\xe7\\xe7\\xe7\\xe6\\xe6\\xe6\\xfa\\xfa\\xfa\\xa7\\xa7\\xa7\\xea\\xea\\xea\\\n\\xa2\\xa2\\xa2\\xd1\\xd1\\xd1\\xe4\\xe4\\xe4\\xe1\\xe1\\xe1\\x9d\\x9d\\x9d\\xfe\\\n\\xfe\\xfe\\xe3\\xe3\\xe3\\xe2\\xe2\\xe2\\xfb\\xfb\\xfb\\xc6\\xc6\\xc6\\x99\\x99\\\n\\x99\\xc4\\xc4\\xc4\\xb9\\xb9\\xb9\\xf3\\xf3\\xf3\\xaa\\xaa\\xaa\\x93\\x93\\x93\\\n\\x9c\\x9c\\x9c\\x97\\x97\\x97\\x96\\x96\\x96\\x92\\x92\\x92\\x90\\x90\\x90\\x8e\\\n\\x8e\\x8e\\x53\\x54\\xd2\\xa0\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\\n\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x0e\\x6f\\xbd\\x30\\x4f\\\n\\x00\\x00\\x00\\xa1\\x49\\x44\\x41\\x54\\x18\\xd3\\x6d\\xcf\\x59\\x03\\x42\\x40\\\n\\x14\\x05\\x60\\x91\\x66\\xc6\\x30\\x43\\x0c\\xa3\\xb2\\xb4\\x91\\x48\\xfb\\xf6\\\n\\xff\\xff\\x58\\x97\\x4a\\x3d\\x38\\x6f\\xdf\\x79\\xb9\\xe7\\x2a\\x4a\\x6f\\x06\\\n\\xaa\\x36\\xd4\\x47\\x7f\\x46\\x98\\x10\\x83\\x9a\\x9d\\x2d\\x66\\x71\\xdb\\x61\\\n\\x78\\xdc\\xd9\\xf5\\x84\\xf0\\x11\\xc3\\x41\\x63\\x15\\x7d\\x2c\\x25\\x0b\\x27\\\n\\x50\\x68\\xd8\\x11\\x6d\\x24\\x35\\xbc\\x29\\x14\\x33\\x12\\x09\\x24\\x44\\x1c\\\n\\x27\\xa9\\x9c\\x2f\\xa0\\xd0\\x89\\x8b\\x96\\x60\\x08\\x35\\x56\\x50\\xac\\x39\\\n\\x96\\xb2\\x75\\xc6\\xf3\\x0d\\x14\\x66\\x56\\xd0\\x24\\x05\\x6e\\xcb\\x6a\\x57\\\n\\x37\\x67\\xf6\\x11\\x6b\\x99\\x17\\x65\\xfd\\x1e\\x72\\xf0\\x8b\\x23\\x4d\\xec\\\n\\x2a\\xaf\\xbf\\x53\\x4f\\x66\\x8a\\x79\\x18\\x9c\\x7f\\xcf\\x5c\\xae\\xb7\\xfb\\\n\\xe3\\xd9\\xff\\xf8\\x0b\\x55\\x88\\x0e\\xa7\\x3c\\xf7\\x8e\\x70\\x00\\x00\\x00\\\n\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\\n\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\\n\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\\n\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\\n\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\x30\\x31\\\n\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\\n\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\\n\\x30\\x32\\x2d\\x32\\x34\\x54\\x31\\x34\\x3a\\x30\\x32\\x3a\\x32\\x38\\x2b\\x30\\\n\\x31\\x3a\\x30\\x30\\xc1\\xf8\\x81\\xe0\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\\n\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\xf2\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xe3\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x98\\x98\\x98\\x90\\x90\\x90\\x8b\\x8b\\x8b\\\n\\x88\\x88\\x88\\x81\\x81\\x81\\x78\\x78\\x78\\x71\\x71\\x71\\x6f\\x6f\\x6f\\x76\\\n\\x76\\x76\\xc9\\xc9\\xc9\\xc8\\xc8\\xc8\\xc6\\xc6\\xc6\\xc4\\xc4\\xc4\\x9b\\x93\\\n\\x7f\\xf9\\xe0\\xa4\\xf3\\xbe\\x41\\x85\\x7c\\x69\\x93\\x93\\x92\\x5c\\x5c\\x5c\\\n\\x6d\\x6d\\x6d\\xae\\xae\\xae\\xd2\\xd2\\xd2\\xb0\\xb0\\xb0\\xa3\\xa3\\xa3\\x9f\\\n\\x9f\\x9f\\xb7\\xb7\\xb7\\x9e\\x9e\\x9e\\xc0\\xc0\\xc0\\xaa\\xaa\\xaa\\x72\\x72\\\n\\x72\\x69\\x69\\x69\\x6a\\x6a\\x6a\\x67\\x67\\x67\\x53\\x53\\x53\\x6c\\x6c\\x6c\\\n\\xbc\\xbc\\xbc\\xa6\\xa6\\xa6\\xdd\\xdd\\xdd\\xd8\\xd8\\xd8\\xd5\\xd5\\xd5\\xcc\\\n\\xcc\\xcc\\x84\\x84\\x84\\x97\\x97\\x97\\xb4\\xb4\\xb4\\x9d\\x9d\\x9d\\x8d\\x8d\\\n\\x8d\\x40\\x40\\x40\\xba\\xba\\xba\\xb7\\xc7\\xda\\x69\\x9a\\xd4\\x5e\\x96\\xd5\\\n\\x5c\\x96\\xd5\\x63\\x97\\xd1\\xa2\\xb3\\xc5\\x96\\x96\\x96\\x68\\x68\\x68\\x3e\\\n\\x3e\\x3e\\x9b\\x9b\\x9b\\xd7\\xd7\\xd7\\x6a\\x9a\\xd4\\x62\\x99\\xd6\\x66\\x9b\\\n\\xd7\\x64\\x9c\\xd7\\x60\\x99\\xd6\\x63\\x97\\xd0\\xad\\xad\\xad\\x5e\\x5e\\x5e\\\n\\xa9\\xa9\\xa9\\x92\\x92\\x92\\x5f\\x5f\\x5f\\x7c\\x7c\\x7c\\x3b\\x3b\\x3b\\x65\\\n\\x65\\x65\\x94\\x94\\x94\\xd0\\xd0\\xd0\\x5e\\x97\\xd6\\x66\\x9d\\xd9\\x6a\\x9f\\\n\\xd9\\x69\\x9e\\xd9\\x65\\x9b\\xd8\\x5f\\x98\\xd6\\xa5\\xa5\\xa5\\x56\\x56\\x56\\\n\\x57\\x57\\x57\\x75\\x75\\x75\\x39\\x39\\x39\\x62\\x62\\x62\\x8e\\x8e\\x8e\\xc7\\\n\\xc7\\xc7\\x65\\x9c\\xd7\\x6a\\xa0\\xd9\\x67\\x9d\\xd8\\x62\\x9a\\xd7\\x50\\x50\\\n\\x50\\x85\\x85\\x85\\x4e\\x4e\\x4e\\x6e\\x6e\\x6e\\x37\\x37\\x37\\x60\\x60\\x60\\\n\\x87\\x87\\x87\\xb9\\xb9\\xb9\\x64\\x96\\xd0\\x61\\x9a\\xd8\\x67\\x9c\\xd8\\x66\\\n\\x9c\\xd8\\x68\\x9a\\xce\\x8c\\x8c\\x8c\\x83\\x51\\x35\\xbc\\x56\\x1e\\xbc\\x42\\\n\\x04\\xac\\x45\\x0b\\x8f\\x58\\x39\\x35\\x35\\x35\\x7e\\x7e\\x7e\\x95\\xa5\\xb8\\\n\\x64\\x96\\xce\\x60\\x9a\\xd6\\x63\\x9b\\xd7\\x68\\x99\\xce\\x83\\x93\\xa3\\x8c\\\n\\x59\\x3f\\xce\\x72\\x38\\xf7\\xb5\\x8d\\xfe\\xd6\\xb8\\xf5\\xa8\\x72\\xca\\x6b\\\n\\x2e\\x6d\\x3a\\x1f\\x7a\\x7a\\x7a\\x93\\x93\\x93\\x86\\x86\\x86\\x58\\x58\\x58\\\n\\xa9\\x43\\x0b\\xf6\\xb5\\x8d\\xff\\x92\\x4d\\xff\\x77\\x11\\xff\\x86\\x21\\xeb\\\n\\x8a\\x40\\xa7\\x42\\x09\\x46\\x46\\x46\\x44\\x44\\x44\\x41\\x41\\x41\\x3f\\x3f\\\n\\x3f\\x3c\\x3c\\x3c\\x34\\x34\\x34\\xbb\\x42\\x04\\xfe\\xcd\\xae\\xff\\xff\\xff\\\n\\xef\\x7f\\x18\\xb9\\x45\\x03\\xf4\\x9d\\x63\\xff\\x7f\\x18\\xf8\\x76\\x00\\xee\\\n\\x76\\x00\\xe1\\x68\\x03\\xc3\\x57\\x1a\\xc9\\x64\\x25\\xe6\\x77\\x21\\xea\\x79\\\n\\x05\\xdd\\x64\\x01\\xbd\\x4d\\x04\\x2a\\xc6\\x36\\x29\\x00\\x00\\x00\\x01\\x74\\\n\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\\n\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xe9\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\\n\\x60\\xc0\\x00\\x8c\\x4c\\xcc\\x2c\\xac\\x6c\\xec\\x1c\\x9c\\x2c\\x30\\x01\\x2e\\\n\\x6e\\x1e\\x5e\\x3e\\x7e\\x01\\x41\\x21\\x06\\x61\\x61\\x61\\x06\\x06\\x11\\x51\\\n\\x31\\x71\\x09\\x49\\x29\\x46\\x69\\x19\\x59\\x39\\x79\\x05\\x45\\x25\\x06\\x65\\\n\\x15\\x55\\x15\\x35\\x75\\x0d\\x4d\\x09\\x2d\\x6d\\x1d\\x5d\\x3d\\x16\\x7d\\x06\\\n\\x79\\x55\\x03\\x43\\x23\\x63\\x13\\x53\\x33\\x73\\x76\\x51\\x46\\x0b\\x56\\x4b\\\n\\x06\\x45\\x2b\\x6b\\x1b\\x5b\\x3b\\x7b\\x07\\x47\\x27\\x67\\x17\\x57\\x37\\x77\\\n\\x0f\\x06\\x4f\\x2f\\x6f\\x1f\\x5f\\x3f\\xff\\x80\\xc0\\xa0\\x60\\x09\\xe6\\x90\\\n\\xd0\\x30\\x86\\xf0\\x88\\x48\\x9f\\x28\\xff\\xe8\\x98\\x58\\xab\\x38\\xe9\\xf8\\\n\\x84\\xc4\\x24\\x86\\xe4\\x94\\xd4\\xb4\\xf4\\x8c\\x98\\xcc\\xac\\xec\\x9c\\xdc\\\n\\xbc\\xfc\\x82\\x42\\x06\\xe7\\x22\\xe6\\xe2\\x92\\xd2\\xb2\\xf2\\x8a\\xca\\xaa\\\n\\xea\\x9a\\xda\\xba\\x7a\\x86\\x10\\x0e\\xc5\\x06\\x2b\\xc6\\xc6\\xa6\\xe6\\x96\\\n\\xd6\\xb6\\xf6\\x8e\\xce\\x2e\\x06\\x86\\xa4\\xc2\\xee\\x9e\\xde\\xbe\\xfe\\x09\\\n\\x13\\x27\\x4d\\x9e\\x3c\\x79\\xca\\x44\\x84\\x9f\\xa6\\x4e\\x9b\\x3e\\x63\\xe6\\\n\\xac\\xa9\\x08\\x81\\xd9\\x73\\xe6\\xce\\x9b\\xbf\\x00\\xc5\\xdf\\x53\\xf3\\x80\\\n\\xf2\\x00\\x47\\xe3\\x3a\\x60\\xa4\\x86\\x5d\\x65\\x00\\x00\\x00\\x1d\\x74\\x45\\\n\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\\n\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\\n\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\\n\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x32\\x2d\\\n\\x31\\x30\\x54\\x31\\x31\\x3a\\x35\\x34\\x3a\\x31\\x39\\x2b\\x30\\x31\\x3a\\x30\\\n\\x30\\x0f\\xcd\\xf5\\xa2\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\\n\\x82\\\n\\x00\\x00\\x02\\xd1\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xf9\\\n\\x50\\x4c\\x54\\x45\\xf9\\xf9\\xf9\\xba\\xba\\xba\\xb8\\xb8\\xb8\\xb7\\xb7\\xb7\\\n\\xb6\\xb6\\xb6\\xb4\\xb4\\xb4\\xb3\\xb3\\xb3\\xbb\\xbb\\xbb\\xd0\\xd0\\xd0\\xe8\\\n\\xe8\\xe8\\xf3\\xf3\\xf3\\xfd\\xfd\\xfd\\xfc\\xfc\\xfc\\xed\\xed\\xed\\xe0\\xe0\\\n\\xe0\\xc2\\xc2\\xc2\\xad\\xad\\xad\\xe1\\xe1\\xe1\\xfe\\xfe\\xfe\\xff\\xff\\xff\\\n\\xfb\\xfb\\xfb\\xcf\\xcf\\xcf\\xa9\\xa9\\xa9\\xb9\\xb9\\xb9\\xf8\\xf8\\xf8\\xea\\\n\\xea\\xea\\xa7\\xa7\\xa7\\xf7\\xf7\\xf7\\xe7\\xe7\\xe7\\xef\\xef\\xef\\xf6\\xf6\\\n\\xf6\\xfa\\xfa\\xfa\\xf0\\xf0\\xf0\\xde\\xde\\xde\\xc3\\xc3\\xc3\\xe6\\xe6\\xe6\\\n\\xa5\\xa5\\xa5\\xb5\\xb5\\xb5\\xeb\\xeb\\xeb\\xd6\\xd6\\xd6\\xd5\\xd5\\xd5\\xd1\\\n\\xd1\\xd1\\xbc\\xbc\\xbc\\xc0\\xc0\\xc0\\xe5\\xe5\\xe5\\xa3\\xa3\\xa3\\xf5\\xf5\\\n\\xf5\\xee\\xee\\xee\\xe2\\xe2\\xe2\\xcd\\xcd\\xcd\\xe3\\xe3\\xe3\\xa0\\xa0\\xa0\\\n\\xb2\\xb2\\xb2\\xf4\\xf4\\xf4\\xdd\\xdd\\xdd\\xc9\\xc9\\xc9\\xbd\\xbd\\xbd\\xbf\\\n\\xbf\\xbf\\x9e\\x9e\\x9e\\xb0\\xb0\\xb0\\xd9\\xd9\\xd9\\xdb\\xdb\\xdb\\xc4\\xc4\\\n\\xc4\\x9b\\x9b\\x9b\\xae\\xae\\xae\\xf2\\xf2\\xf2\\xd8\\xd8\\xd8\\xdc\\xdc\\xdc\\\n\\x96\\x96\\x96\\xac\\xac\\xac\\xd4\\xd4\\xd4\\xd2\\xd2\\xd2\\x90\\x90\\x90\\x8b\\\n\\x8b\\x8b\\xce\\xce\\xce\\x8a\\x8a\\x8a\\xa1\\xa1\\xa1\\x9f\\x9f\\x9f\\xab\\xab\\\n\\xab\\x95\\x95\\x95\\x8d\\x8d\\x8d\\x89\\x89\\x89\\x00\\x00\\x00\\x86\\xb4\\x3e\\\n\\x93\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\\n\\x00\\x01\\x62\\x4b\\x47\\x44\\x52\\x0d\\x60\\x2d\\x90\\x00\\x00\\x00\\xb2\\x49\\\n\\x44\\x41\\x54\\x18\\xd3\\x6d\\xcf\\xd9\\x1a\\x42\\x50\\x14\\x05\\x60\\x11\\x95\\\n\\x42\\x9a\\x09\\x39\\x69\\xd6\\x20\\x85\\x24\\x9a\\xe7\\xf9\\xfd\\x5f\\xa6\\xbe\\\n\\xdd\\x70\\x65\\xdd\\xed\\x7f\\xdd\\xec\\x85\\x61\\xa1\\x89\\xe0\\x44\\x94\\xa4\\\n\\xfe\\x67\\x2c\\x9e\\xa0\\x93\\x29\\x86\\xe5\\xd2\\xdf\\x9a\\xcf\\x64\\x21\\xb9\\\n\\x7c\\x01\\xa0\\x58\\xfa\\x81\\x20\\x02\\x10\\x65\\x49\\x56\\x72\\x15\\x15\\x55\\\n\\xb5\\x1a\\x40\\x5d\\x69\\xa0\\x66\\xab\\x5d\\xed\\xe8\\xdd\\x1e\\x00\\xd9\\x1f\\\n\\x68\\x86\\xc6\\x0f\\x39\\xce\\x1c\\x01\\x8c\\x2d\\x81\\xb7\\x4d\\xe4\\x4c\\x5c\\\n\\x63\\x0a\\xe0\\xd1\\x92\\x3d\\x63\\xfd\\x00\\x8f\\xf1\\x73\\x80\\xc5\\xd2\\x58\\\n\\xb5\\xd6\\x2b\\x9d\\x22\\xd8\\x0d\\xc0\\x56\\x45\\xbb\\xbd\\xdf\\x74\\x3d\\x0a\\\n\\x1d\\x00\\x0a\\x88\\xf6\\xdf\\xa0\\x3b\\x5a\\x70\\xfc\\xbc\\x5a\\x3b\\x31\\x56\\\n\\xdf\\x92\\x8d\\xc8\\xf9\\x37\\xe6\\x72\\xbd\\xdc\\xc4\\xfb\\xe3\\x19\\x3a\\xfc\\\n\\x05\\x37\\xbd\\x15\\x9a\\x03\\x84\\x59\\x6d\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\\n\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\\n\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x03\\x38\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x4a\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xae\\xc6\\xe3\\xc8\\xd0\\xdb\\xd3\\xd5\\xd7\\\n\\xd2\\xd4\\xd6\\xc4\\xcd\\xd8\\xaa\\xc1\\xdf\\xa8\\xc3\\xe6\\xd2\\xd7\\xdd\\xe8\\\n\\xec\\xf1\\xf3\\xf6\\xfa\\xfb\\xfd\\xfe\\xf2\\xf5\\xf9\\xe5\\xe9\\xee\\xc7\\xcd\\\n\\xd4\\x9f\\xba\\xdd\\xd4\\xd8\\xde\\xf7\\xf8\\xfb\\xff\\xff\\xff\\xf6\\xf9\\xfc\\\n\\xee\\xf3\\xfa\\xed\\xf3\\xfa\\xf4\\xf8\\xfc\\xf3\\xf6\\xf9\\xc4\\xca\\xd1\\x9c\\\n\\xb7\\xda\\xeb\\xf1\\xf9\\xe3\\xec\\xf7\\xe8\\xef\\xf9\\xe6\\xef\\xf8\\xdf\\xe9\\\n\\xf6\\xba\\xbf\\xc7\\xae\\xc5\\xe2\\x59\\x8c\\xcd\\x58\\x8b\\xcb\\xd8\\xdf\\xe7\\\n\\x94\\xab\\xc8\\xc7\\xcf\\xda\\xe1\\xeb\\xf7\\x53\\x84\\xc3\\xe5\\xee\\xf8\\xdd\\\n\\xe8\\xf6\\x4e\\x7b\\xb4\\xf1\\xf5\\xfb\\xea\\xef\\xf6\\xa0\\xa9\\xb4\\xd1\\xd3\\\n\\xd5\\xe9\\xf0\\xf9\\x52\\x83\\xc0\\x52\\x83\\xc1\\x4d\\x7a\\xb3\\x4d\\x7a\\xb4\\\n\\x57\\x8a\\xca\\xf9\\xfb\\xfd\\xa5\\xa7\\xa9\\xd0\\xd2\\xd4\\xec\\xf2\\xfa\\x5a\\\n\\x8e\\xd1\\x51\\x80\\xbd\\x55\\x86\\xc5\\x50\\x7e\\xb9\\x56\\x88\\xc8\\xf1\\xf5\\\n\\xfa\\xa0\\xa2\\xa4\\xc2\\xcb\\xd6\\xef\\xf3\\xf8\\xf2\\xf6\\xfb\\xe4\\xed\\xf7\\\n\\x59\\x8d\\xd0\\x59\\x8c\\xcf\\xe0\\xea\\xf6\\x58\\x8b\\xcd\\xdc\\xe7\\xf5\\xdb\\\n\\xe4\\xef\\x94\\x9c\\xa7\\xa7\\xbe\\xdc\\xe1\\xe5\\xec\\xfe\\xfe\\xff\\x5c\\x90\\\n\\xd2\\x5b\\x8f\\xd1\\xda\\xe5\\xf5\\xfa\\xfc\\xfe\\xbf\\xc9\\xd6\\x81\\x98\\xb6\\\n\\xbe\\xc3\\xca\\xed\\xf1\\xf7\\xdb\\xe6\\xf5\\xdc\\xe4\\xef\\x92\\x9a\\xa3\\x94\\\n\\xb0\\xd2\\xb3\\xbb\\xc3\\xe8\\xee\\xf4\\xef\\xf4\\xfb\\xdb\\xe4\\xee\\x91\\x9c\\\n\\xa8\\x79\\x94\\xb7\\x8c\\xa7\\xca\\xa3\\xab\\xb3\\xc8\\xd1\\xdc\\xe1\\xe8\\xf1\\\n\\xd6\\xe0\\xed\\xb8\\xc3\\xd2\\x8c\\x94\\x9f\\x77\\x92\\xb5\\x83\\x9b\\xb8\\x8e\\\n\\x97\\xa2\\x94\\x96\\x98\\x90\\x92\\x95\\x88\\x91\\x9c\\x79\\x91\\xae\\x9d\\x63\\\n\\xc3\\x79\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xc8\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x0a\\x18\\x99\\x98\\x59\\x58\\xd9\\\n\\xe0\\x5c\\x76\\x0e\\x4e\\x2e\\x6e\\x6e\\x1e\\x5e\\x3e\\x7e\\x28\\x5f\\x40\\x50\\\n\\x48\\x58\\x44\\x54\\x4c\\x48\\x5c\\x42\\x12\\x2c\\xc0\\x21\\x28\\x24\\x25\\x2d\\\n\\x23\\x23\\x2b\\x27\\x24\\x2e\\x0f\\xe2\\x2b\\x70\\x02\\xf9\\x8a\\x40\\xbe\\x92\\\n\\xb4\\x90\\xb2\\x0a\\x50\\x40\\x95\\x4b\\x4c\\x4d\\x5d\\x51\\x43\\x53\\x4b\\x49\\\n\\x4d\\x5b\\x47\\x17\\x28\\xa0\\xc7\\xad\\x6f\\x60\\xa8\\x24\\x67\\x64\\x6c\\x22\\\n\\x27\\x6d\\x6a\\x06\\x14\\x30\\xe7\\xb6\\xb0\\xb4\\x52\\xd2\\xb7\\xb6\\xb1\\xd5\\\n\\x54\\xb3\\xb3\\x07\\x0a\\x38\\x38\\x3a\\x39\\xbb\\xb8\\xba\\xa9\\x29\\xb9\\x7b\\\n\\x88\\x78\\x7a\\x01\\x05\\xbc\\x7d\\x7c\\xd5\\xa4\\xfd\\x34\\x35\\xe5\\xfc\\x03\\\n\\x02\\x83\\x82\\x41\\xd6\\x84\\x84\\x0a\\x69\\xba\\x79\\x84\\x05\\x84\\xf9\\x86\\\n\\x47\\x80\\xdd\\x11\\x19\\x15\\xed\\x1b\\xa3\\xe6\\x26\\x1a\\x18\\x1b\\x17\\x0f\\\n\\x71\\x6a\\x42\\x62\\x52\\xb2\\x93\\x48\\x4a\\x6a\\x5a\\x3a\\xdc\\x37\\x19\\x99\\\n\\x59\\xd9\\x39\\xb9\\xd8\\x3d\\x0e\\x00\\x5b\\x1e\\x1e\\xca\\x83\\x2b\\xb9\\x5b\\\n\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\\n\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\\n\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x32\\x2d\\x30\\x31\\x2d\\x32\\x34\\x54\\x31\\x36\\x3a\\x33\\x31\\x3a\\x31\\\n\\x33\\x2b\\x30\\x31\\x3a\\x30\\x30\\xfc\\xaf\\x3c\\x19\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x49\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x5c\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xa2\\xc1\\xef\\x9f\\xc0\\xed\\x9d\\xbe\\xeb\\\n\\x9a\\xbc\\xeb\\x96\\xba\\xe9\\x93\\xb7\\xe7\\x90\\xb5\\xe6\\x8c\\xb2\\xe4\\x88\\\n\\xaf\\xe2\\x84\\xac\\xe0\\x80\\xa9\\xdd\\x7d\\xa5\\xdc\\x7a\\xa3\\xda\\xa1\\xc1\\\n\\xee\\xf4\\xf7\\xfb\\x74\\xa0\\xd7\\x9e\\xbf\\xec\\xa5\\xd5\\x9c\\xa1\\xd3\\x98\\\n\\x9d\\xd0\\x94\\x98\\xce\\x90\\x93\\xcb\\x8b\\x8e\\xc9\\x87\\x89\\xc6\\x82\\x84\\\n\\xc3\\x7e\\x80\\xc1\\x7a\\x7c\\xbe\\x76\\x6f\\x9b\\xd4\\x9b\\xbd\\xeb\\xff\\xff\\\n\\xff\\x6a\\x97\\xd1\\x98\\xba\\xe9\\xa6\\xc3\\xe9\\x64\\x93\\xce\\x94\\xb7\\xe7\\\n\\xa9\\xc4\\xe8\\xac\\xc7\\xe8\\xeb\\xf1\\xf7\\x5f\\x8f\\xcb\\x8f\\xb4\\xe5\\xf2\\\n\\xf6\\xfa\\xaa\\xc6\\xe9\\xac\\xc6\\xe9\\xac\\xc7\\xea\\xad\\xc7\\xe9\\xae\\xc9\\\n\\xe9\\xb0\\xc9\\xe9\\xb0\\xc8\\xe8\\xb5\\xcc\\xe8\\xde\\xe7\\xf2\\x59\\x8a\\xc8\\\n\\x8c\\xb1\\xe3\\xf1\\xf6\\xfa\\xae\\xc9\\xea\\xb0\\xc9\\xea\\xdb\\xe5\\xf1\\x55\\\n\\x86\\xc6\\x87\\xae\\xe1\\xf0\\xf4\\xfa\\xb2\\xcb\\xea\\xb3\\xcc\\xea\\xb7\\xce\\\n\\xea\\x8e\\xae\\xa2\\x71\\x97\\x5f\\x66\\x8e\\x4f\\x5f\\x89\\x49\\x4f\\x7f\\x7b\\\n\\x82\\xaa\\xdf\\xef\\xf3\\xf9\\xbb\\xd0\\xeb\\x91\\xaf\\x9d\\x81\\xab\\x61\\xb4\\\n\\xd4\\x95\\xd0\\xe6\\xba\\x8f\\xbb\\x6a\\x57\\x8f\\x2d\\x37\\x6b\\x19\\x7e\\xa8\\\n\\xdd\\xba\\xd0\\xeb\\xbd\\xd1\\xeb\\x60\\x89\\x49\\xb1\\xd3\\x90\\xb1\\xd6\\x92\\\n\\x8c\\xbc\\x65\\x8f\\xbc\\x67\\x7a\\xa4\\xd9\\xee\\xf3\\xf9\\xbe\\xd2\\xeb\\xbf\\\n\\xd3\\xeb\\x4c\\x7b\\x31\\xb6\\xd4\\x9c\\xb2\\xd2\\x95\\x75\\xa1\\xd7\\xed\\xf2\\\n\\xf8\\xea\\xf0\\xf7\\xe6\\xed\\xf6\\xe2\\xea\\xf4\\xde\\xe7\\xf3\\xdb\\xe4\\xf1\\\n\\xd8\\xe2\\xf0\\x3e\\x70\\x22\\x8b\\xba\\x62\\x87\\xba\\x60\\x87\\xb9\\x60\\x72\\\n\\x9e\\xd6\\x6e\\x99\\xd3\\x68\\x96\\xd1\\x63\\x92\\xce\\x5e\\x8e\\xcb\\x5b\\x8a\\\n\\xc9\\x56\\x87\\xc7\\x52\\x84\\xc3\\x44\\x77\\x6b\\x53\\x8c\\x28\\x8d\\xba\\x64\\\n\\x43\\xaa\\x7a\\x07\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\\n\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\\n\\x00\\xc7\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x04\\x8c\\x4c\\xcc\\x2c\\\n\\xac\\x6c\\xec\\x1c\\x9c\\x5c\\xdc\\x3c\\xbc\\x40\\x3e\\x1f\\x3f\\x12\\x10\\x00\\\n\\x0a\\x08\\xf2\\x0b\\x09\\x8b\\x88\\x8a\\x89\\x4b\\x48\\x4a\\x49\\xf3\\xcb\\x00\\\n\\x05\\x64\\xf9\\xe5\\xe0\\x80\\x5f\\x1e\\x28\\xa0\\xc0\\xaf\\x08\\x07\\xfc\\x4a\\\n\\x40\\x01\\x65\\x7e\\x45\\x39\\x15\\xa0\\xac\\x2a\\x10\\xab\\xa9\\x03\\x05\\x34\\\n\\x34\\xb5\\xb4\\x75\\x74\\xf5\\xf4\\x55\\xf5\\x0d\\x0c\\x8d\\x8c\\x81\\x02\\x26\\\n\\xa6\\x66\\x72\\xe6\\x50\\x15\\x16\\x96\\x40\\x01\\x2b\\x6b\\x1b\\x5b\\x20\\xb0\\\n\\x53\\xb5\\x77\\x70\\x74\\x72\\x06\\x0a\\xb8\\xb8\\xda\\xc9\\xb9\\x01\\x65\\xdd\\\n\\x3d\\x3c\\xbd\\xbc\\x7d\\x7c\\x19\\x18\\xfc\\x5c\\xfd\\xdd\\x80\\x20\\x20\\x30\\\n\\x28\\x58\\x2e\\x24\\x14\\x28\\x10\\x16\\x1e\\x21\\x17\\x09\\x54\\x11\\x15\\x0d\\\n\\x24\\x62\\x80\\x02\\xb1\\x71\\xf1\\x09\\x89\\x49\\xc9\\x29\\xa9\\x69\\xe9\\x72\\\n\\x19\\x20\\x15\\x99\\x59\\xd9\\x39\\xb9\\x79\\xf9\\x05\\x85\\x45\\xc5\\x31\\xc5\\\n\\x45\\xbe\\x48\\xbe\\xf6\\x05\\x01\\x06\\x00\\x4e\\x6c\\x27\\xda\\x78\\x70\\x82\\\n\\x14\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\\n\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\\n\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\\n\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\\n\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x04\\x48\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x02\\x2b\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x98\\x98\\x98\\x90\\x90\\x90\\x8b\\x8b\\x8b\\\n\\x88\\x88\\x88\\x81\\x81\\x81\\x78\\x78\\x78\\x71\\x71\\x71\\x6f\\x6f\\x6f\\x76\\\n\\x76\\x76\\xc9\\xc9\\xc9\\xc8\\xc8\\xc8\\xc6\\xc6\\xc6\\xc4\\xc4\\xc4\\x9b\\x93\\\n\\x7f\\xf9\\xe0\\xa4\\xf3\\xbe\\x41\\x85\\x7c\\x69\\x93\\x93\\x92\\x5c\\x5c\\x5c\\\n\\x6d\\x6d\\x6d\\xae\\xae\\xae\\xd2\\xd2\\xd2\\xb0\\xb0\\xb0\\xa3\\xa3\\xa3\\x9f\\\n\\x9f\\x9f\\xb7\\xb7\\xb7\\x9e\\x9e\\x9e\\xc0\\xc0\\xc0\\xaa\\xaa\\xaa\\x72\\x72\\\n\\x72\\x69\\x69\\x69\\x6a\\x6a\\x6a\\x67\\x67\\x67\\x53\\x53\\x53\\x6c\\x6c\\x6c\\\n\\xbc\\xbc\\xbc\\xa6\\xa6\\xa6\\xdd\\xdd\\xdd\\xd8\\xd8\\xd8\\xd5\\xd5\\xd5\\xcc\\\n\\xcc\\xcc\\x84\\x84\\x84\\x97\\x97\\x97\\xb4\\xb4\\xb4\\x9d\\x9d\\x9d\\x8d\\x8d\\\n\\x8d\\x40\\x40\\x40\\xba\\xba\\xba\\xb7\\xc7\\xda\\x69\\x9a\\xd4\\x5e\\x96\\xd5\\\n\\x5c\\x96\\xd5\\x63\\x97\\xd1\\xa2\\xb3\\xc5\\x96\\x96\\x96\\x68\\x68\\x68\\x3e\\\n\\x3e\\x3e\\x9b\\x9b\\x9b\\xd7\\xd7\\xd7\\x6a\\x9a\\xd4\\x62\\x99\\xd6\\x66\\x9b\\\n\\xd7\\x6e\\x97\\xd4\\x7b\\x9e\\xd4\\x71\\x98\\xd0\\x82\\xa4\\xd6\\x68\\x8e\\xcd\\\n\\x69\\x90\\xcd\\x75\\x9a\\xd0\\x73\\x99\\xd1\\x62\\x8b\\xc8\\x35\\x41\\x53\\x65\\\n\\x65\\x65\\x94\\x94\\x94\\xd0\\xd0\\xd0\\x5e\\x97\\xd6\\x66\\x9d\\xd9\\x6a\\x9f\\\n\\xd9\\x65\\x8d\\xcc\\xb0\\xcd\\xf3\\xff\\xff\\xff\\xb3\\xc7\\xe3\\xa1\\xbf\\xea\\\n\\x60\\x89\\xc9\\x62\\x62\\x62\\x8e\\x8e\\x8e\\xc7\\xc7\\xc7\\x65\\x9c\\xd7\\x69\\\n\\x9e\\xd9\\x5b\\x86\\xc7\\x9e\\xc0\\xef\\x6e\\x93\\xcc\\xf7\\xfb\\xff\\xf1\\xf8\\\n\\xff\\x8c\\xaf\\xe4\\x61\\x8a\\xc7\\x60\\x60\\x60\\x87\\x87\\x87\\xb9\\xb9\\xb9\\\n\\x64\\x96\\xd0\\x61\\x9a\\xd8\\x67\\x9c\\xd8\\x5d\\x88\\xc8\\xa1\\xbf\\xef\\xfa\\\n\\xfc\\xfd\\xfb\\xfc\\xfe\\xfd\\xfd\\xfe\\xfc\\xfd\\xfe\\xfa\\xfb\\xfd\\xfb\\xfc\\\n\\xfd\\x85\\xa8\\xdd\\x53\\x7f\\xc1\\x5e\\x5e\\x5e\\x7e\\x7e\\x7e\\x95\\xa5\\xb8\\\n\\x64\\x96\\xce\\x60\\x9a\\xd6\\x65\\x8d\\xca\\x99\\xb8\\xea\\x7e\\xa5\\xdd\\x80\\\n\\xa6\\xdd\\x7c\\xa3\\xdb\\x7a\\xa0\\xd9\\x79\\xa0\\xd9\\x78\\x9f\\xd8\\x78\\x9e\\\n\\xd8\\x5d\\x84\\xbf\\x57\\x57\\x57\\x7a\\x7a\\x7a\\x61\\x8b\\xc9\\x92\\xb5\\xe6\\\n\\x81\\xa7\\xe2\\x81\\xa7\\xe1\\x7d\\xa3\\xde\\x7b\\xa1\\xdc\\x79\\x9f\\xdb\\x77\\\n\\x9e\\xd9\\x73\\x9a\\xd4\\x57\\x7e\\xbb\\x37\\x37\\x37\\x35\\x35\\x35\\x46\\x46\\\n\\x46\\x44\\x44\\x44\\x41\\x41\\x41\\x54\\x81\\xc4\\x97\\xb6\\xea\\xea\\xf3\\xf3\\\n\\xe6\\xf1\\xed\\xe6\\xf1\\xef\\xe6\\xf0\\xef\\xe5\\xf1\\xed\\xed\\xf5\\xf3\\x79\\\n\\x9c\\xd5\\x44\\x70\\xb0\\x51\\x7f\\xc3\\x9a\\xb6\\xef\\xe8\\xf3\\xea\\x84\\xbf\\\n\\x51\\x98\\xc9\\x6f\\x99\\xc9\\x71\\x84\\xbf\\x54\\xe9\\xf4\\xe4\\x7b\\x9c\\xdd\\\n\\x3a\\x69\\xaa\\x55\\x83\\xc6\\xba\\xce\\xef\\xff\\xff\\xdd\\xc7\\xee\\x87\\xd7\\\n\\xf4\\xa2\\xd7\\xf6\\xa2\\xc7\\xee\\x8c\\xff\\xff\\xe0\\x85\\xa2\\xdd\\x3e\\x6a\\\n\\xab\\x33\\x68\\xba\\x58\\x84\\xc3\\x68\\x8b\\xd3\\x70\\x8f\\xe1\\x6c\\x8d\\xdc\\\n\\x6d\\x8b\\xda\\x6e\\x8a\\xd7\\x6c\\x8b\\xcd\\x44\\x6d\\xab\\x2e\\x5f\\xa6\\x82\\\n\\xc9\\x8a\\x45\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\\n\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\\n\\xf7\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x00\\x8c\\x4c\\xcc\\x2c\\xac\\\n\\x6c\\xec\\x1c\\x9c\\x2c\\x30\\x01\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\x01\\x41\\x21\\\n\\x06\\x61\\x61\\x61\\x06\\x06\\x11\\x51\\x31\\x71\\x09\\x49\\x29\\x46\\x69\\x19\\\n\\x59\\x39\\x79\\x05\\x45\\x25\\x06\\x65\\x15\\x55\\x15\\x35\\x75\\x0d\\x4d\\x09\\\n\\x2d\\x6d\\x1d\\x5d\\x3d\\x16\\x7d\\x06\\x79\\x55\\x03\\x43\\x23\\x63\\x13\\x53\\\n\\x33\\x73\\x76\\x51\\x46\\x0b\\x56\\x4b\\x06\\x45\\x2b\\x6b\\x1b\\x5b\\x3b\\x7b\\\n\\x07\\x47\\x27\\x67\\x17\\x57\\x37\\x77\\x0f\\x06\\x4f\\x2f\\x6f\\x1f\\x5f\\x3f\\\n\\xff\\x80\\xc0\\xa0\\x40\\x20\\x08\\x0e\\x61\\x08\\x0d\\x0b\\xf7\\x89\\x88\\x8c\\\n\\x8a\\x0e\\x8c\\x09\\x0c\\x8c\\x8d\\x8b\\x4f\\x60\\x48\\x4c\\x4a\\x4e\\x49\\x4d\\\n\\x4b\\xcf\\xc8\\xcc\\xca\\xce\\xc9\\xcd\\xcb\\x2f\\x60\\x28\\x2c\\x62\\x2e\\x2e\\\n\\x29\\x2d\\x2b\\xaf\\xa8\\xac\\xaa\\xae\\xa9\\xad\\xab\\x67\\x68\\xe0\\x50\\x6c\\\n\\xb4\\x62\\x6c\\x6a\\x6e\\x69\\x6d\\x6b\\xef\\xe8\\xec\\xea\\x66\\x60\\xe8\\xe9\\\n\\xed\\xeb\\x9f\\x30\\x71\\xd2\\xe4\\x29\\x53\\xa7\\x4d\\x9f\\x31\\x73\\x16\\xd4\\\n\\xfd\\xb3\\xe7\\xcc\\x9d\\x37\\x7f\\xc1\\xc2\\x45\\x8b\\x97\\x40\\x05\\x96\\x2e\\\n\\x5b\\xbe\\x62\\xe5\\xaa\\xd5\\x6b\\xd6\\xae\\x83\\x0a\\xac\\xdf\\xb0\\x71\\xd3\\\n\\xe6\\x2d\\x5b\\xb7\\x6d\\xdf\\x01\\x00\\xa2\\x43\\x46\\x5a\\x88\\x2a\\xb7\\x2c\\\n\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\\n\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\\n\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x30\\x31\\x2d\\x31\\x30\\x54\\x30\\x38\\x3a\\x35\\x30\\x3a\\x31\\x30\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x5b\\x2f\\xc5\\x80\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x32\\x2d\\x30\\x31\\x2d\\x31\\x30\\x54\\x30\\x38\\x3a\\x35\\x30\\x3a\\x31\\\n\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x2a\\x72\\x7d\\x3c\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xb2\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xd8\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xd8\\xd8\\xd8\\xd7\\xd7\\xd7\\xd6\\xd6\\xd6\\\n\\xd5\\xd5\\xd5\\xd3\\xd3\\xd3\\xd2\\xd2\\xd2\\xeb\\xeb\\xeb\\xf5\\xf5\\xf5\\xfc\\\n\\xfc\\xfc\\xf4\\xf4\\xf4\\xe8\\xe8\\xe8\\xce\\xce\\xce\\xf8\\xf8\\xf8\\xff\\xff\\\n\\xff\\xf2\\xf2\\xf2\\xf1\\xf1\\xf1\\xf7\\xf7\\xf7\\xc9\\xc9\\xc9\\xec\\xec\\xec\\\n\\xed\\xed\\xed\\xc1\\xc1\\xc1\\xc0\\xc0\\xc0\\x75\\x75\\x76\\x89\\x89\\x8a\\x87\\\n\\x87\\x88\\xe9\\xe9\\xe9\\xdd\\xdd\\xdd\\xb3\\xb3\\xb3\\xf0\\xf0\\xf0\\x75\\x75\\\n\\x75\\xc0\\xc0\\xc1\\x6f\\x74\\x7c\\xee\\xee\\xee\\xab\\xab\\xab\\xd4\\xd4\\xd4\\\n\\xef\\xef\\xef\\x74\\x74\\x75\\x88\\x88\\x89\\xad\\xad\\xad\\xe6\\xe6\\xe6\\xfa\\\n\\xfa\\xfa\\xa7\\xa7\\xa7\\x73\\x73\\x74\\xae\\xae\\xaf\\xe5\\xe5\\xe5\\xa2\\xa2\\\n\\xa2\\xd1\\xd1\\xd1\\x73\\x73\\x73\\xe7\\xe7\\xe7\\xe4\\xe4\\xe4\\xe1\\xe1\\xe1\\\n\\x9d\\x9d\\x9d\\xfe\\xfe\\xfe\\x87\\x87\\x87\\x86\\x86\\x87\\xe2\\xe2\\xe2\\xfb\\\n\\xfb\\xfb\\xc6\\xc6\\xc6\\x99\\x99\\x99\\xc4\\xc4\\xc4\\xe3\\xe3\\xe3\\xb9\\xb9\\\n\\xb9\\xf3\\xf3\\xf3\\xaa\\xaa\\xaa\\x93\\x93\\x93\\x9c\\x9c\\x9c\\x97\\x97\\x97\\\n\\x96\\x96\\x96\\x92\\x92\\x92\\x90\\x90\\x90\\x8e\\x8e\\x8e\\x13\\x2d\\x61\\x47\\\n\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\\n\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xb4\\x49\\x44\\\n\\x41\\x54\\x18\\xd3\\x6d\\x8f\\x47\\x16\\x82\\x30\\x00\\x44\\xb1\\x26\\x21\\x10\\\n\\x40\\x22\\x1a\\x35\\xd6\\xc4\\x8e\\x1d\\x05\\xb1\\xd7\\xfb\\xdf\\xc8\\xf8\\x7c\\\n\\x96\\x85\\xb3\\xfb\\x7f\\x33\\x33\\x9a\\xf6\\x37\\x89\\x64\\x2a\\x9d\\xc9\\xfe\\\n\\x30\\x80\\x08\\xe9\\xd8\\xf8\\xb0\\x49\\x4c\\xcb\\x76\\x08\\xcc\\x7d\\x18\\xb8\\\n\\x94\\xba\\x79\\x02\\xbd\\x27\\x27\\x01\\xb1\\x0b\\x45\\xc5\\xac\\x44\\xca\\x15\\\n\\x25\\x52\\xd0\\xe1\\xd5\\x22\\xa8\\xd5\\x19\\xd6\\x1b\\x4d\\x25\\x5a\\x88\\x0b\\\n\\xd9\\xee\\x48\\xc9\\xba\\xa5\\x5e\\x5f\\x89\\x0c\\x12\\x62\\xc0\\x86\\x4a\\xf8\\\n\\x58\\x1f\\x29\\x31\\xb6\\x60\\x63\\xc2\\xa6\\x5c\\xb2\\x99\\x35\\x5f\\x28\\x61\\\n\\xcc\\x02\\xba\\x5c\\xf9\\xbe\\x60\\x61\\xb4\\x8e\\x9f\\x35\\x1b\\x1e\\x51\\xba\\\n\\xdd\\x86\\x34\\x08\\xe3\\xd7\\x90\\x9d\\x1b\\xec\\xf1\\xd4\\x8e\\xe6\\xf1\\x7b\\\n\\xea\\xc1\\xe8\\x42\\xab\\xec\\x1d\\xbf\\x67\\x4e\\xe7\\xcb\\xf5\\x76\\xff\\x7f\\\n\\xfc\\x01\\x98\\x75\\x11\\xf9\\xe8\\x64\\x1c\\x20\\x00\\x00\\x00\\x1d\\x74\\x45\\\n\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\\n\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\\n\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\x31\\x2d\\x31\\\n\\x38\\x54\\x31\\x34\\x3a\\x33\\x36\\x3a\\x31\\x34\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x29\\x45\\xf8\\x95\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\x31\\x2d\\\n\\x31\\x38\\x54\\x31\\x34\\x3a\\x33\\x36\\x3a\\x31\\x34\\x2b\\x30\\x31\\x3a\\x30\\\n\\x30\\x58\\x18\\x40\\x29\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\\n\\x82\\\n\\x00\\x00\\x03\\xdf\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xd1\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x98\\x98\\x98\\x90\\x90\\x90\\x8b\\x8b\\x8b\\\n\\x88\\x88\\x88\\x81\\x81\\x81\\x78\\x78\\x78\\x71\\x71\\x71\\x6f\\x6f\\x6f\\x76\\\n\\x76\\x76\\xc9\\xc9\\xc9\\xc8\\xc8\\xc8\\xc6\\xc6\\xc6\\xc4\\xc4\\xc4\\x9b\\x93\\\n\\x7f\\xf9\\xe0\\xa4\\xf3\\xbe\\x41\\x85\\x7c\\x69\\x93\\x93\\x92\\x5c\\x5c\\x5c\\\n\\x6d\\x6d\\x6d\\xae\\xae\\xae\\xd2\\xd2\\xd2\\xb0\\xb0\\xb0\\xa3\\xa3\\xa3\\x9f\\\n\\x9f\\x9f\\xb7\\xb7\\xb7\\x9e\\x9e\\x9e\\xc0\\xc0\\xc0\\xaa\\xaa\\xaa\\x72\\x72\\\n\\x72\\x69\\x69\\x69\\x6a\\x6a\\x6a\\x67\\x67\\x67\\x53\\x53\\x53\\x6c\\x6c\\x6c\\\n\\xbc\\xbc\\xbc\\xa6\\xa6\\xa6\\xdd\\xdd\\xdd\\xd8\\xd8\\xd8\\xd5\\xd5\\xd5\\xcc\\\n\\xcc\\xcc\\x84\\x84\\x84\\x97\\x97\\x97\\xb4\\xb4\\xb4\\x9d\\x9d\\x9d\\x8d\\x8d\\\n\\x8d\\x40\\x40\\x40\\xba\\xba\\xba\\xb7\\xc7\\xda\\x69\\x9a\\xd4\\x5e\\x96\\xd5\\\n\\x5c\\x96\\xd5\\x63\\x97\\xd1\\xa2\\xb3\\xc5\\x96\\x96\\x96\\x68\\x68\\x68\\x3e\\\n\\x3e\\x3e\\x9b\\x9b\\x9b\\xd7\\xd7\\xd7\\x6a\\x9a\\xd4\\x62\\x99\\xd6\\x66\\x9b\\\n\\xd7\\x64\\x9c\\xd7\\x60\\x99\\xd6\\x63\\x97\\xd0\\xad\\xad\\xad\\x5e\\x5e\\x5e\\\n\\xa9\\xa9\\xa9\\x92\\x92\\x92\\x5f\\x5f\\x5f\\x7c\\x7c\\x7c\\x3b\\x3b\\x3b\\x65\\\n\\x65\\x65\\x94\\x94\\x94\\xd0\\xd0\\xd0\\x5e\\x97\\xd6\\x66\\x9d\\xd9\\x6a\\x9f\\\n\\xd9\\x69\\x9e\\xd9\\x65\\x9b\\xd8\\x5f\\x98\\xd6\\xa5\\xa5\\xa5\\x56\\x56\\x56\\\n\\x57\\x57\\x57\\x75\\x75\\x75\\x39\\x39\\x39\\x62\\x62\\x62\\x8e\\x8e\\x8e\\xc7\\\n\\xc7\\xc7\\x65\\x9c\\xd7\\x6a\\xa0\\xd9\\x67\\x9d\\xd8\\x62\\x9a\\xd7\\x50\\x50\\\n\\x50\\x85\\x85\\x85\\x4e\\x4e\\x4e\\x6e\\x6e\\x6e\\x37\\x37\\x37\\x60\\x60\\x60\\\n\\x87\\x87\\x87\\xb9\\xb9\\xb9\\x64\\x96\\xd0\\x61\\x9a\\xd8\\x67\\x9c\\xd8\\x66\\\n\\x9c\\xd8\\x68\\x9a\\xce\\x8c\\x8c\\x8c\\x5c\\x6e\\x51\\x70\\x94\\x5b\\x66\\x8e\\\n\\x4f\\x58\\x81\\x40\\x59\\x70\\x4c\\x35\\x35\\x35\\x7e\\x7e\\x7e\\x95\\xa5\\xb8\\\n\\x64\\x96\\xce\\x60\\x9a\\xd6\\x63\\x9b\\xd7\\x68\\x99\\xce\\x83\\x93\\xa3\\x62\\\n\\x75\\x56\\x81\\xab\\x61\\xb4\\xd4\\x95\\xd0\\xe6\\xba\\x8f\\xbb\\x6a\\x57\\x8f\\\n\\x2d\\x35\\x52\\x25\\x7a\\x7a\\x7a\\x93\\x93\\x93\\x86\\x86\\x86\\x58\\x58\\x58\\\n\\x5c\\x85\\x44\\xb1\\xd3\\x90\\xb1\\xd6\\x92\\xff\\xff\\xff\\x8c\\xbc\\x65\\x8f\\\n\\xbc\\x67\\x37\\x69\\x1a\\x46\\x46\\x46\\x44\\x44\\x44\\x41\\x41\\x41\\x3f\\x3f\\\n\\x3f\\x3c\\x3c\\x3c\\x34\\x34\\x34\\x4c\\x7b\\x31\\xb6\\xd4\\x9c\\xb2\\xd2\\x95\\\n\\x37\\x6b\\x19\\x39\\x6c\\x1b\\x8b\\xba\\x62\\x87\\xba\\x60\\x87\\xb9\\x60\\x53\\\n\\x8c\\x28\\x8d\\xba\\x64\\x8a\\xb8\\x62\\x57\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\\n\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\\n\\x05\\x1d\\x48\\x00\\x00\\x00\\xe8\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\\n\\x00\\x8c\\x4c\\xcc\\x2c\\xac\\x6c\\xec\\x1c\\x9c\\x2c\\x30\\x01\\x2e\\x6e\\x1e\\\n\\x5e\\x3e\\x7e\\x01\\x41\\x21\\x06\\x61\\x61\\x61\\x06\\x06\\x11\\x51\\x31\\x71\\\n\\x09\\x49\\x29\\x46\\x69\\x19\\x59\\x39\\x79\\x05\\x45\\x25\\x06\\x65\\x15\\x55\\\n\\x15\\x35\\x75\\x0d\\x4d\\x09\\x2d\\x6d\\x1d\\x5d\\x3d\\x16\\x7d\\x06\\x79\\x55\\\n\\x03\\x43\\x23\\x63\\x13\\x53\\x33\\x73\\x76\\x51\\x46\\x0b\\x56\\x4b\\x06\\x45\\\n\\x2b\\x6b\\x1b\\x5b\\x3b\\x7b\\x07\\x47\\x27\\x67\\x17\\x57\\x37\\x77\\x0f\\x06\\\n\\x4f\\x2f\\x6f\\x1f\\x5f\\x3f\\xff\\x80\\xc0\\xa0\\x60\\x09\\xe6\\x90\\xd0\\x30\\\n\\x86\\xf0\\x88\\x48\\x9f\\x28\\xff\\xe8\\x98\\x58\\xab\\x38\\xe9\\xf8\\x84\\xc4\\\n\\x24\\x86\\xe4\\x94\\xd4\\xb4\\xf4\\x8c\\x98\\xcc\\xac\\xec\\x9c\\xdc\\xbc\\xfc\\\n\\x82\\x42\\x06\\xe7\\x22\\xe6\\xe2\\x92\\xd2\\xb2\\xf2\\x8a\\xca\\xaa\\xea\\x9a\\\n\\xda\\xba\\x7a\\x86\\x10\\x0e\\xc5\\x06\\x2b\\xc6\\xc6\\xa6\\xe6\\x96\\xd6\\xb6\\\n\\xf6\\x8e\\xce\\x2e\\x06\\x86\\xa4\\xc2\\xee\\x9e\\xde\\xbe\\xfe\\x09\\x13\\x27\\\n\\xb5\\xb7\\xb7\\x4f\\x9e\\x82\\xf0\\xd3\\xd4\\x69\\xd3\\xdb\\x67\\x74\\x22\\x09\\\n\\x4c\\x99\\x39\\x6b\\xf2\\xac\\x99\\x48\\x02\\x0c\\x53\\x40\\x80\\x01\\x00\\x47\\\n\\xf5\\x3b\\xd6\\x96\\xdb\\x1b\\x5e\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\\n\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\\n\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\\n\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\\n\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\\n\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\\n\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\\n\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x31\\x2d\\x31\\x30\\x54\\\n\\x30\\x38\\x3a\\x34\\x37\\x3a\\x30\\x38\\x2b\\x30\\x31\\x3a\\x30\\x30\\xf6\\x65\\\n\\xf7\\x7c\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x09\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x41\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x9e\\x9e\\x9e\\xcd\\xcd\\xc7\\xe4\\xe4\\xdb\\\n\\xe5\\xe5\\xdb\\xe5\\xe5\\xdc\\xe6\\xe6\\xdd\\xe7\\xe7\\xde\\xe8\\xe8\\xdf\\xe8\\\n\\xe8\\xe0\\xd3\\xd3\\xcd\\xdf\\xdf\\xd6\\xc6\\xc6\\xc4\\xc1\\xc1\\xc1\\xc3\\xc3\\\n\\xc3\\xc4\\xc4\\xc4\\xc5\\xc5\\xc5\\xce\\xc3\\xa3\\xd9\\xbf\\x73\\xca\\xc7\\xbf\\\n\\xcd\\xcd\\xcd\\xdf\\xdf\\xd7\\xc9\\xc9\\xc7\\xc6\\xc6\\xc6\\xc8\\xc8\\xc8\\xca\\\n\\xc8\\xc2\\xd9\\xbc\\x6b\\xed\\xdb\\xab\\xd4\\xc0\\x8b\\xd1\\xd1\\xd0\\xea\\xea\\\n\\xe3\\xe1\\xe1\\xd9\\xcc\\xcc\\xcb\\xc7\\xc7\\xc7\\xca\\xca\\xca\\xcb\\xcb\\xcb\\\n\\xd3\\xc1\\x92\\xeb\\xd7\\xa4\\xfb\\xf4\\xdc\\xd6\\xb1\\x59\\xd4\\xcb\\xb7\\xeb\\\n\\xeb\\xe5\\xe2\\xe2\\xdb\\xcf\\xcf\\xcd\\xcc\\xcc\\xcc\\xce\\xce\\xce\\xd0\\xca\\\n\\xba\\xf8\\xeb\\xb4\\xf8\\xe6\\x8e\\xee\\xdd\\xb5\\xd4\\xb5\\x73\\xeb\\xea\\xe3\\\n\\xbe\\xbe\\xbb\\xec\\xec\\xe6\\xed\\xed\\xe6\\xed\\xed\\xe7\\xee\\xee\\xe8\\xee\\\n\\xee\\xe7\\xde\\xc2\\x85\\xec\\xd9\\xac\\xf8\\xe3\\x82\\xc2\\x88\\x33\\xfa\\xed\\\n\\xac\\xcf\\x9e\\x43\\xe5\\xd5\\xb4\\xc0\\xc0\\xbe\\xac\\xa0\\x86\\xdf\\xbd\\x7b\\\n\\xf9\\xea\\xa2\\xf6\\xdc\\x61\\xc2\\x87\\x31\\xf7\\xe1\\x77\\xf0\\xde\\xb6\\xc2\\\n\\x95\\x4a\\xa0\\x9d\\x98\\xef\\xdb\\xab\\xf7\\xe0\\x74\\xf5\\xda\\x58\\xf5\\xdb\\\n\\x5d\\xf8\\xe6\\x90\\xe1\\xc1\\x92\\xe1\\xc2\\x8e\\xf9\\xe8\\x97\\xf5\\xdb\\x5b\\\n\\xc2\\x88\\x32\\xf6\\xde\\x6a\\xf6\\xe7\\xb1\\xc2\\x83\\x2d\\xc9\\x91\\x38\\xf6\\\n\\xec\\xdd\\xf9\\xee\\xbd\\xf8\\xea\\xac\\xf8\\xea\\xab\\xf8\\xea\\xad\\xfb\\xf3\\\n\\xd4\\xe4\\xc8\\xa4\\xbe\\x7b\\x26\\xc5\\x8a\\x32\\xc4\\x87\\x30\\xc3\\x85\\x2f\\\n\\xc1\\x81\\x2b\\xc0\\x7f\\x29\\xbf\\x7d\\x28\\xbd\\x79\\x25\\xbd\\x77\\x23\\xbc\\\n\\x76\\x22\\xff\\xff\\xff\\x92\\xf7\\xd9\\x03\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\\n\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\\n\\x05\\x1d\\x48\\x00\\x00\\x00\\xa2\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xa0\\\n\\x0a\\x60\\x44\\x02\\x60\\x3e\\x13\\x33\\x33\\x0b\\x2b\\x2b\\x1b\\x1b\\x3b\\x07\\\n\\x27\\x17\\x48\\x84\\x91\\x9b\\x87\\x97\\x97\\x8f\\x5f\\x40\\x50\\x48\\x58\\x84\\\n\\x13\\x2c\\x20\\x2a\\xc6\\x27\\x20\\x2e\\x21\\x29\\x25\\x2d\\x23\\x2b\\x07\\x16\\\n\\x90\\x57\\x50\\x94\\x50\\x52\\x56\\x51\\x55\\x53\\xd7\\xd0\\x04\\x0b\\x68\\x69\\\n\\x2b\\xeb\\xe8\\xea\\xa9\\xeb\\x1b\\x18\\x1a\\x19\\x03\\x05\\x18\\x4d\\x4c\\xcd\\\n\\xcc\\x2d\\x2c\\xad\\xac\\x6d\\x6c\\xed\\xec\\x1d\\x1c\\x19\\xa1\\x96\\x3a\\x39\\\n\\xbb\\xb8\\xba\\xb9\\x7b\\x78\\x7a\\x31\\x42\\xdd\\x62\\xef\\xed\\xe3\\xeb\\xeb\\\n\\xe7\\x1f\\x00\\x77\\x5c\\x60\\x90\\x6b\\x70\\x48\\x70\\x68\\x58\\x38\\x94\\x1f\\\n\\x11\\x19\\x15\\x1d\\x13\\x13\\x13\\x1b\\x17\\x9f\\x00\\x11\\x48\\x4c\\x4a\\x0e\\\n\\x4f\\x49\\x4d\\x4b\\x48\\xcf\\xc8\\x04\\x00\\x59\\x6a\\x19\\x13\\xbf\\x13\\x35\\\n\\x89\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\\n\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\\n\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\\n\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x32\\x2d\\x30\\x33\\x2d\\x33\\x30\\x54\\x31\\x30\\x3a\\x30\\x34\\x3a\\\n\\x34\\x38\\x2b\\x30\\x32\\x3a\\x30\\x30\\x5c\\xf0\\x3a\\xc4\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x88\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xd8\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xc7\\xc7\\xc7\\xc4\\xc4\\xc4\\xe5\\xe5\\xe5\\\n\\xe4\\xe4\\xe4\\xac\\xac\\xac\\xd1\\xd1\\xd1\\xce\\xce\\xce\\xca\\xca\\xca\\xc2\\\n\\xc2\\xc2\\xde\\xde\\xde\\xdd\\xdd\\xdd\\xb2\\xb2\\xb2\\xa7\\xa7\\xa7\\xa3\\xa3\\\n\\xa3\\xdc\\xdc\\xdc\\xed\\xed\\xed\\xdb\\xdb\\xdb\\xbe\\xbe\\xbe\\xd6\\xd6\\xd6\\\n\\xd4\\xd4\\xd4\\xb0\\xb0\\xb0\\xcb\\xcb\\xcb\\xe7\\xe7\\xe7\\xb7\\xb7\\xb7\\xd9\\\n\\xd9\\xd9\\xd2\\xd2\\xd2\\xc8\\xc8\\xc8\\x79\\x79\\x79\\xc5\\xc5\\xc5\\xcc\\xcc\\\n\\xcc\\xc9\\xc9\\xc9\\xba\\xba\\xba\\x9c\\x9c\\x9c\\xa1\\xa1\\xa1\\xc6\\xc6\\xc6\\\n\\xc1\\xc1\\xc1\\x89\\x89\\x89\\xc0\\xc0\\xc0\\xd8\\xd8\\xd8\\xcd\\xcd\\xcd\\xbc\\\n\\xbc\\xbc\\x82\\x82\\x82\\x8f\\x8f\\x8f\\xc3\\xc3\\xc3\\x8c\\x8c\\x8c\\x87\\x87\\\n\\x87\\x83\\x83\\x83\\xe9\\xe9\\xe9\\xa5\\xa5\\xa5\\x1e\\x6a\\xbf\\x6b\\x6b\\x6b\\\n\\xbf\\xbf\\xbf\\xe2\\xe2\\xe2\\xb1\\xb1\\xb1\\xff\\xff\\xff\\x61\\x61\\x61\\xa0\\\n\\xa0\\xa0\\xcf\\xcf\\xcf\\x9e\\x9e\\x9e\\x66\\x66\\x66\\x53\\x53\\x53\\xaa\\xaa\\\n\\xaa\\xa6\\xa6\\xa6\\xd5\\xd5\\xd5\\x85\\x85\\x85\\x81\\x81\\x81\\x6f\\x6f\\x6f\\\n\\x64\\x64\\x64\\xbd\\xbd\\xbd\\x58\\x58\\x58\\x51\\x51\\x51\\x9d\\xc9\\xef\\x33\\\n\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\\n\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xb3\\x49\\x44\\\n\\x41\\x54\\x18\\xd3\\x55\\x8f\\x69\\x17\\x81\\x60\\x10\\x46\\xa7\\x97\\xe4\\x0d\\\n\\x25\\x25\\x2d\\x2a\\x14\\x4a\\x88\\x2c\\x59\\x22\\xbb\\xff\\xff\\x8f\\xb4\\x9d\\\n\\x4e\\xee\\xa7\\x79\\xee\\x79\\xce\\xcc\\x19\\x80\\x0c\\x02\\xc1\\x1f\\x44\\xa5\\\n\\x4a\\x16\\xa1\\x46\\xd5\\x01\\xd3\\x8d\\x26\\x90\\x2d\\x26\\x15\\x6c\\x9b\\xc3\\\n\\x1d\\x5e\\xe8\\x92\\x62\\x4f\\x4a\\x05\\x62\\x05\\x99\\xe3\\x05\\x59\\x11\\xd5\\\n\\x7e\\x2a\\x34\\x41\\x37\\x06\\xc3\\x11\\x36\\x2d\\x69\\x1c\\x47\\x15\\x4d\\xa6\\\n\\xb6\\x33\\x03\\x70\\xe7\\xd8\\x5e\\x2c\\x3d\\x40\\x2b\\xde\\xa0\\xd6\\x00\\x7e\\\n\\xc6\\x06\\xb6\\x3b\\xc5\\xb4\\xf7\\xb1\\x08\\x12\\xfc\\x03\\x30\\xee\\xf1\\x64\\\n\\xea\\xe7\\x58\\x84\\x61\\x18\\xf8\\x97\\x78\\x0b\\xa9\\x59\\x1a\\x71\\xcd\\x1b\\\n\\xc9\\x95\\xe8\\xa6\\x89\\x35\\x23\\x69\\xe4\\xc2\\xa1\\x23\\xef\\x8e\\x4a\\x8d\\\n\\xc7\\xf3\\x05\\x9e\\x58\\x12\\xa9\\x7c\\xe7\\x67\\x8b\\x0f\\x3f\\xdf\\x7c\\xf8\\\n\\x01\\x61\\x98\\x19\\x1a\\x47\\x73\\x61\\xe7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x31\\x31\\x2d\\x31\\x35\\x54\\x31\\x31\\x3a\\x35\\x37\\x3a\\x35\\x39\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\xad\\x85\\x98\\x1e\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x32\\x2d\\x31\\x31\\x2d\\x31\\x35\\x54\\x31\\x31\\x3a\\x35\\x37\\x3a\\x35\\\n\\x39\\x2b\\x30\\x31\\x3a\\x30\\x30\\xdc\\xd8\\x20\\xa2\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x44\\x50\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x03\\x1b\\x00\\x00\\x00\\xb5\\x08\\x03\\x00\\x00\\x00\\x00\\xfe\\x12\\xf8\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x02\\xf4\\\n\\x50\\x4c\\x54\\x45\\x01\\x04\\x00\\xfe\\xff\\xfc\\xf1\\xe8\\xe1\\xb8\\xb3\\xb2\\\n\\xe7\\xe9\\xe6\\xb8\\xb7\\xaf\\xe9\\xeb\\xe8\\xe5\\xe4\\xdb\\xfc\\xfe\\xfb\\xfa\\\n\\xec\\xed\\xec\\xee\\xea\\xf9\\xfe\\xff\\xc9\\xcb\\xc8\\xbf\\xbe\\xb5\\x97\\x92\\\n\\x91\\x03\\x06\\x01\\xaf\\xae\\xa5\\x3d\\x3f\\x3c\\x15\\x10\\x0f\\x0a\\x0c\\x08\\\n\\x26\\x28\\x25\\x73\\x6f\\x6d\\xcd\\xc5\\xbe\\x0b\\x04\\x03\\x07\\x0a\\x05\\x0f\\\n\\x11\\x0e\\x49\\x45\\x44\\xc3\\xc2\\xb9\\x23\\x24\\x22\\x75\\x77\\x74\\xcc\\xcb\\\n\\xc2\\x1f\\x1b\\x1a\\x45\\x47\\x44\\x2d\\x2f\\x2c\\xa5\\xa4\\x9c\\x39\\x3b\\x38\\\n\\x63\\x65\\x62\\xd6\\xce\\xc7\\xba\\xbc\\xb9\\x00\\x06\\x09\\xde\\xe0\\xdc\\x03\\\n\\x0a\\x0d\\xcf\\xce\\xc5\\x34\\x35\\x33\\x87\\x88\\x85\\xd9\\xd8\\xcf\\x7e\\x80\\\n\\x7d\\xc7\\xc9\\xc5\\xe0\\xd8\\xd1\\xaa\\xac\\xa9\\x30\\x34\\x36\\x82\\x84\\x81\\\n\\xbd\\xbf\\xbc\\xb3\\xb5\\xb2\\x09\\x0f\\x11\\xed\\xe5\\xdd\\x9a\\x9c\\x99\\xab\\\n\\xa6\\xa5\\x12\\x14\\x11\\xa3\\x9e\\x9c\\xe6\\xde\\xd7\\x57\\x58\\x56\\x16\\x12\\\n\\x10\\x78\\x7a\\x77\\x92\\x94\\x91\\x57\\x52\\x51\\x0e\\x10\\x0c\\x6b\\x66\\x65\\\n\\xea\\xe2\\xda\\x5f\\x61\\x5e\\x53\\x55\\x52\\x5f\\x5b\\x59\\x1e\\x1a\\x19\\xce\\\n\\xd0\\xcc\\x19\\x1a\\x18\\x50\\x52\\x4f\\x6b\\x6c\\x6a\\x6f\\x71\\x6e\\x17\\x18\\\n\\x16\\x72\\x74\\x71\\x7b\\x7d\\x7a\\x40\\x42\\x3f\\xda\\xd2\\xca\\x2b\\x2d\\x2a\\\n\\x00\\x01\\x00\\x1f\\x20\\x1e\\x31\\x32\\x30\\xe3\\xe5\\xe2\\xd8\\xda\\xd6\\x96\\\n\\x98\\x95\\x9f\\xa1\\x9e\\x49\\x4a\\x48\\x1c\\x1e\\x1b\\x55\\x51\\x4f\\xa4\\xa6\\\n\\xa3\\xb5\\xb0\\xae\\xad\\xaf\\xac\\x14\\x16\\x13\\x5b\\x5d\\x5a\\x67\\x68\\x66\\\n\\x4e\\x4f\\x4d\\xd5\\xd7\\xd4\\xc3\\xc5\\xc2\\xa7\\xa9\\xa6\\x36\\x38\\x35\\xd3\\\n\\xd5\\xd2\\xef\\xf2\\xee\\xb0\\xb2\\xaf\\xb7\\xb9\\xb6\\xf6\\xfc\\xfe\\xf2\\xf7\\\n\\xfa\\xda\\xdc\\xd9\\x7c\\xa8\\xdb\\x69\\x8c\\xc0\\x7b\\xa3\\xde\\x5c\\x86\\xbf\\\n\\x4b\\x4d\\x4a\\xf8\\xfa\\xf7\\xd1\\xd3\\xd0\\x77\\xa3\\xd6\\x60\\x85\\xb8\\xe0\\\n\\xe2\\xdf\\x8c\\x8e\\x8b\\xd0\\xd2\\xcf\\xfa\\xfc\\xf9\\x5b\\x7c\\xb6\\xf2\\xf4\\\n\\xf1\\x89\\x8b\\x88\\x73\\x9f\\xd2\\x8e\\x90\\x8d\\x11\\x1b\\x25\\xf5\\xf7\\xf3\\\n\\x56\\x7a\\xad\\xc0\\xc2\\xbf\\x0f\\x16\\x1c\\x76\\x9a\\xcf\\xea\\xf3\\xfc\\x51\\\n\\x73\\xac\\x70\\x93\\xc7\\x57\\x82\\xba\\x52\\x7d\\xb5\\x0b\\x13\\x19\\xba\\xe3\\\n\\xff\\xfa\\xe9\\xea\\xfa\\xbd\\xbe\\x86\\xce\\xff\\xfa\\x90\\x8c\\xfb\\x89\\x87\\\n\\x94\\xd6\\xff\\x99\\xcc\\xf3\\xf4\\x00\\x00\\xd3\\xeb\\xfd\\xf9\\xd7\\xd7\\xf7\\\n\\x98\\x93\\xd8\\xeb\\xf7\\xf6\\x9c\\x9c\\x3f\\x52\\x67\\x57\\xae\\x50\\x58\\xb3\\\n\\x4d\\x4c\\xa9\\x45\\x2e\\x90\\x2c\\x23\\x88\\x25\\x28\\x81\\x1e\\xa0\\xd3\\x99\\\n\\x86\\xc5\\x7e\\x3e\\x9d\\x39\\x82\\xbe\\x6e\\x55\\x7d\\xbc\\x7b\\xbb\\xff\\x80\\\n\\xb8\\xf8\\x7a\\xba\\xff\\xad\\xc5\\xd7\\xa8\\xbf\\xd1\\x7f\\xb7\\xf7\\xc8\\xe0\\\n\\xf3\\xb4\\xcb\\xdd\\x70\\xa3\\xdb\\x6c\\x9e\\xd7\\x61\\x95\\xcd\\x75\\xb8\\xf5\\\n\\x76\\xb9\\xf7\\x69\\xa6\\xdd\\x7c\\xb5\\xf4\\x62\\x8d\\xc7\\x30\\x48\\x61\\x3a\\\n\\x51\\x6c\\x23\\x36\\x4a\\x77\\xaa\\xe4\\x1e\\x2c\\x3b\\x68\\x9f\\xd0\\x3d\\x5a\\\n\\x79\\x68\\x95\\xc7\\x73\\x89\\x9a\\x83\\x9a\\xab\\x6b\\x81\\x92\\xa0\\xb8\\xc9\\\n\\xbb\\xd3\\xe5\\x57\\x7f\\xaa\\x2d\\x41\\x56\\x5d\\x87\\xb3\\x16\\x20\\x2a\\x29\\\n\\x3c\\x50\\x34\\x54\\x6d\\x73\\xb3\\xf1\\x5f\\x96\\xc6\\x41\\x63\\x82\\x4f\\x80\\\n\\xab\\x70\\xac\\xe4\\x83\\xb1\\xe5\\x7c\\xb7\\xf0\\x50\\x62\\x79\\x7c\\x92\\xa3\\\n\\xb2\\xca\\xe9\\x97\\xae\\xbf\\x47\\x6a\\x8f\\x5e\\x8e\\xc1\\x18\\x27\\x36\\x76\\\n\\xb2\\xea\\x25\\x34\\x43\\x1a\\x24\\x2f\\x3b\\x58\\x72\\x5c\\x6a\\x7c\\x8f\\xa6\\\n\\xb7\\xb6\\xd4\\xef\\x83\\xc2\\xf4\\x78\\xbe\\xf5\\xa8\\xc4\\xe9\\x53\\x7a\\xa6\\\n\\x4d\\x75\\x9a\\x79\\xb5\\xed\\x47\\x59\\x6f\\x47\\x6d\\x8c\\x63\\x93\\xbf\\x53\\\n\\x7e\\xa3\\x60\\x76\\x86\\x9a\\xc0\\xef\\x6f\\xa5\\xd7\\x7a\\xb6\\xee\\x4d\\x7f\\\n\\xbc\\x73\\xa9\\xdb\\xc4\\xdc\\xee\\x91\\xb7\\xe6\\x94\\xcc\\x8b\\x90\\xaf\\xa2\\\n\\x66\\x90\\x50\\x4c\\x80\\x79\\x81\\xab\\x61\\xb3\\xd4\\x96\\xcf\\xe6\\xb7\\x56\\\n\\x8f\\x28\\x36\\x6c\\x15\\xff\\xff\\xff\\x19\\x4f\\x7b\\xec\\x00\\x00\\x00\\x01\\\n\\x62\\x4b\\x47\\x44\\xfb\\xa2\\x6a\\x36\\xdc\\x00\\x00\\x40\\x43\\x49\\x44\\x41\\\n\\x54\\x78\\xda\\xed\\x7d\\x7b\\x60\\xdc\\xd4\\x95\\xb7\\x34\\xa3\\xc8\\xd7\\xbe\\\n\\x89\\x4d\\xe4\\x38\\x4a\\xa6\\xce\\x86\\x42\\x1d\\xc5\\x8d\\x71\\x9c\\xc1\\x31\\\n\\x98\\x38\\x04\\xc7\\x04\\x3b\\x10\\x4c\\x20\\x93\\x10\\xde\\x29\\x89\\xd3\\x0d\\\n\\x5d\\xc9\\x2d\\x34\\xde\\x06\\x07\\xda\\x6d\\x0a\\x85\\x6d\\x53\\x96\\x5d\\xd8\\\n\\xb6\\xbb\\x7d\\x7d\\xdd\\xee\\x97\\x38\\xc5\\x40\\x3b\\xe0\\xf2\\x0a\\xb4\\xb4\\\n\\xa5\\xa5\\xa4\\xc4\\x43\\xe9\\x6e\\x0d\\x5b\\xd6\\xe6\\xeb\\x50\\xfa\\x48\\xb2\\\n\\xaf\\xef\\xf9\\xd7\\x77\\xee\\xbd\\x7a\\x8e\\xa4\\x19\\xcd\\x8c\\x66\\x3c\\xc6\\\n\\x3e\\x1e\\xcf\\x48\\x3a\\xf7\\x5e\\x9d\\x73\\x75\\xef\\x39\\xf7\\x4a\\xf7\\xe8\\\n\\xc7\\x71\\x7c\\x64\\xf6\\x50\\xb4\\xe2\\xb4\\xcd\\x21\\xd1\\x74\\xb2\\xcb\\xa2\\\n\\x41\\x25\\x13\\xc7\\xf1\\xc2\\xec\\xa1\\x79\\x15\\xa7\\x6d\\x0e\\x89\\xa6\\x93\\\n\\x5d\\x16\\x0d\\x2a\\x99\\xb8\\x99\\xdb\\xad\\x0b\\xa0\\xca\\x33\\x62\\x73\\x7e\\\n\\xa3\\x72\\x09\\xfa\\x86\\x38\\x6b\\x88\\x18\\xb1\\xe9\\x96\\x21\\x2f\\x89\\xa6\\\n\\x93\\x5d\\x16\\x0d\\x2a\\x99\\xe6\\xfc\\x46\\x65\\x4b\\x34\\xe7\\x37\\xa6\\x91\\\n\\xa0\\x6f\\x54\\x55\\x45\\x66\\xc7\\x87\\x0e\\x7e\\xa7\\x5d\\x0a\\x97\\x44\\x95\\\n\\xc9\\x2e\\x8b\\x06\\x95\\xfc\\x21\\x7e\\x03\\x55\\xd7\\x88\\xb3\\xe2\\x53\\x45\\\n\\x8c\\x18\\x0e\\x98\\x7c\\x7e\\xd9\\x24\\x42\\x15\\xc9\\x2e\\x8b\\x06\\x95\\xfc\\\n\\xa9\\x32\\xfc\\xc6\\x02\\xae\\x96\\x7c\\xd7\\x4d\\x7b\\x67\\x2d\\xe5\\x27\\x52\\\n\\x63\\xf8\\x8d\\xb3\\x16\\x4a\\xf5\\x8b\\x1a\\xaa\\xaa\\x16\\x73\\xf0\\xa9\\x97\\\n\\x97\\x2c\\x8d\\xbd\\x0f\\xf8\\xf3\\x16\\xd6\\xd7\\x37\\x2e\\x63\\x69\\xff\\x44\\\n\\x2e\\x9f\\x44\\xbe\\x35\\x6f\\x63\\x2f\\x27\\xfb\\x35\\xcb\\xeb\\x3c\\xd9\\xa0\\\n\\xc8\\xd9\\x4b\\xe5\\xf7\\x9f\\x93\\xb5\\xf0\\xcc\\x53\\x58\\xb9\\x0d\\xbd\\x0b\\\n\\xb9\\xfc\\xb6\\x93\\xc8\\x4b\\xea\\xa5\\xb3\\xdf\\xe7\\xc3\\x3e\\xf7\\x03\\x74\\\n\\xbf\\xb1\\x56\\x67\\x2c\\x28\\x4b\\xfd\\x16\\x77\\x6d\\x44\\xf0\\x1b\\x30\\xeb\\\n\\x58\\xc0\\x49\\x4d\\x35\\xc2\\x0a\\x45\\x9c\\xee\\xde\\x5a\\xca\\x4f\\x84\\xf9\\\n\\x0d\\xb1\\x7a\\x65\\xf3\\x39\\x82\\xf0\\xc1\\x55\\x2d\\xc2\\x02\\x59\\x58\\xa0\\\n\\x80\\xf3\\x3c\\xaf\\x55\\x5a\\x2d\\xb6\\xc9\\x6b\\x84\\xc8\\x07\\xe3\\xe7\\xd3\\\n\\x3a\\x68\\x97\\xcb\\x26\\x11\\xa9\\x7f\\xef\\x9a\\xb7\\xb1\\xa5\\x28\\xec\\xae\\\n\\xed\\x90\\x6b\\x44\\x17\\x1b\\xb6\\xd6\\xca\\xb5\\x55\\x17\\x5c\\xd8\\xd1\\xe9\\\n\\x5f\\xb8\\xfb\\x14\\x66\\x6e\\x43\\xef\\x82\\x2e\\xbf\\x75\\x92\\x3a\\x51\\xa8\\\n\\x6a\\x6b\\xbd\\x68\\xb1\\x27\\x3b\\xb2\\xae\\x43\\x80\\xfd\\x79\\x4b\\xba\\x74\\\n\\xc6\\x82\\xb2\\xd4\\x6f\\x11\\x9f\\x1a\\x36\\xdf\\x80\\xef\\x76\\x6e\\x7d\\x3c\\\n\\x12\\x59\\xcc\\x45\\x22\\x7f\\x12\\xbb\\x78\\x49\\xe3\\x39\\x55\\x8b\\xe5\\x0d\\\n\\x17\\x5f\\x7c\\x49\\xc3\\xc5\\x4b\\xd7\\x45\\xaa\\xda\\xba\\x37\\x4a\\x3d\\xe0\\\n\\x62\\x66\\xfa\\x87\\xdd\\x6c\\x87\\xcd\\x26\\xb9\\xf5\\xd2\\x08\\x5c\\xcf\\x48\\\n\\x54\\x89\\x44\\x65\\x72\\x01\\xc5\\x4d\\xdd\\x91\\x26\\xa5\\xf5\\x52\\x38\\x26\\\n\\xd0\\xb4\\xb2\\x22\\x5d\\xd6\\x0b\\x1b\\x7d\\x67\\x2d\\x96\\x5b\\x2f\\xbe\\xf8\\\n\\x03\\x17\\x94\\xa4\\x1a\\x0c\\x89\\x68\\xcd\\x67\\x65\\x7f\\xa0\\x17\\x7e\\x7a\\\n\\x7b\\x95\\x88\\x9b\\x0d\\x5b\\x8b\\x5a\\x22\\x20\\x79\\x4b\\xab\\x7f\\xe1\\xee\\\n\\x53\\x98\\xb9\\x37\\xeb\\x7a\\x5f\\xb0\\x98\\x6b\\x90\\x2e\\x07\\xe7\\xb3\\x38\\\n\\xb6\\x54\\x6e\\x3c\\x07\\x32\\xb4\\x5e\\xbc\\xb1\\x07\\x12\\xb4\\x5d\\x21\\xd1\\\n\\x0a\\xc8\\x2e\\x22\\x88\\x26\\x46\\xc4\\xde\\xcb\\x3c\\xd9\\x35\\x55\\x17\\x43\\\n\\x43\\x8a\\x74\\xf7\\x0a\\x4d\\x67\\x4b\\xa4\\xf0\\x76\\x25\\xb2\\x40\\x86\\x53\\\n\\xc9\\xd9\\x8b\\x9f\\xde\\xd6\\xc2\\x71\\x98\\x6a\\xd6\\x75\\x39\\x98\\x51\\xae\\\n\\x26\\xf2\\xfe\\x2d\\x97\\x5e\\xd0\\x70\\xb1\\x30\\x4f\\xbe\\xf2\\x82\\xd6\\xba\\\n\\x65\\x91\\xd6\\xfe\\x48\\xe4\\xec\\xde\\xaa\\xf3\\x56\\x5d\\x55\\x13\\xa9\\x99\\\n\\xb1\\x1f\\x11\\x3e\\xa2\\x7e\\xd3\\xa4\\x26\\x22\\x54\\xd5\\x2e\\x91\\x63\\x1b\\\n\\x9a\\x22\\x91\\x05\\x4a\\xa4\\x5d\\xa6\\xd7\\xf4\\x9c\\x7e\\x31\\xd2\\x22\\xcb\\\n\\xb1\\xad\\x4d\\x11\\x92\\xb6\\xea\\x7d\\x5c\\xe4\\xac\\xa5\\x11\\xe1\\xac\\x3e\\\n\\xb8\\xb6\\x57\\x9f\\x77\\xcd\\xb6\\xab\\x42\\xae\\x06\\x9b\\x44\\x50\\xff\\xc2\\\n\\x82\\xba\\xec\\xec\\xc4\\xbc\\x8d\\x17\\xd4\\x74\\x49\\x67\\x29\\x11\\x37\\x5b\\\n\\x14\\xaf\\xe1\\x36\\x13\\x25\\x22\\x7e\\xb9\\x49\\xf7\\xb7\\x9d\\xc2\\x99\\x3b\\\n\\x42\\xf5\\x86\\xda\\x80\\xcb\\x7f\\x55\\xa4\\x61\\x7b\\xa4\\x66\\xc7\\x96\\xaa\\\n\\x0b\\xae\\xec\\x80\\x6c\\x67\\xb7\\x7d\\x70\\x5b\\x43\\x4d\\x24\\xb6\\xbe\\xab\\\n\\x6d\\xd5\\xb2\\x5c\\x1a\\x70\\x22\\xa9\\xb9\\xce\\x7e\\x6f\\x76\\xe4\\xca\\xb3\\\n\\x23\\xe2\\xca\\xfa\\x79\\x02\\x14\\x7e\\x69\\x83\\x44\\x6a\\x1e\\x3e\\x54\\x34\\\n\\xef\\xe2\\xa7\\xb9\\xb5\\x08\\xfa\\x7d\\xaa\\x1a\\x41\\x58\\xc1\\x45\\x3a\\xe5\\\n\\xa6\\x28\\x17\\x11\\x9a\\xaa\\xae\\x5d\\x7c\\x3e\\x08\\xce\\xb5\\x89\\xf3\\x12\\\n\\x5d\\xd7\\x2e\\xae\\xab\\xd9\\x29\\xb7\\x09\\x62\\x67\\x1f\\x68\\x3e\\xb3\\x3f\\\n\\x11\\xfd\\x3e\\x15\\x68\\x1e\\x69\\xbb\\xae\\xbb\\x4f\\xbe\\x5e\\x6c\\xe7\\x6a\\\n\\xe0\\x9a\\x12\\x5e\\x54\\x36\\x8f\\x92\\xb4\\xd5\\xd1\\xba\\x2a\\xa1\\xef\\xfa\\\n\\x48\\xef\\x16\\xb0\\x70\\x8b\\xc5\\xaa\\x75\\xcb\\x4b\\x51\\x0d\\xba\\x44\\x35\\\n\\xe0\\xc0\\x12\\xd9\\xd9\\xb2\\xd8\\x78\\x5d\\xe4\\x92\\x1b\\xda\\xe5\\x1a\\x37\\\n\\x9b\\xb8\\x84\\x4b\\xc5\\xaa\\x88\\x20\\xfa\\xe5\\xe6\\x22\\xee\\x53\\x98\\xb9\\\n\\xa1\\x05\\xb7\\x5d\\xd2\\xdb\\x27\\xaf\\x8b\\x44\\xeb\\xda\\x60\\x88\\x59\\x13\\\n\\x69\\xba\\x54\\x58\\xdc\\x2a\\x83\\x53\\x5d\\x1c\\x11\\xd7\\xdd\\x18\\xd9\\xc9\\\n\\x9d\\x57\\x53\\xd5\\xd9\\x97\\x4b\\x03\\xe2\\x9c\\xc4\\xc8\\x3c\\xc5\\x9b\\x5d\\\n\\xb3\\x58\\xde\\x19\\xa9\\x25\\x63\\x93\\x2a\\xe1\\x4f\\xce\\x57\\x84\\x76\\x0e\\\n\\x3e\\x35\\x91\\x15\\x4a\\xd6\\xe2\\xa7\\xb5\\xb5\\x18\\xcf\\x37\\xa0\\x0f\\x8b\\\n\\xbd\\xe7\\x92\\x9e\\xbc\\xae\\x51\\xda\\x71\\x13\\x27\\x12\\x17\\xb9\\x38\\x11\\\n\\xb9\\x00\\xda\\xcc\\xfb\\x38\\x49\\x92\\x3b\\x80\\x25\\xcc\\xd4\\x0f\\x19\\x27\\\n\\x45\\x8c\\xf9\\x06\\x7c\\xef\\x84\\xd6\\x5e\\x25\\xf4\\x2c\\x8f\\x2c\\x96\\x05\\\n\\x18\\x6a\\x88\\xc0\\xba\\xb9\\x3f\\xd2\\xb6\\x99\\xd4\\x47\\x4f\\x9f\\x00\\x53\\\n\\xb1\\x1a\\x70\\x27\\xe2\\x96\\xcb\\x04\\xa9\\x9d\\xb8\\x7e\\x51\\x84\\x6a\\x68\\\n\\x0f\\xb3\\x1a\\xec\\x12\\xf1\\xd0\\xa4\\x16\\x28\\xd9\\xd9\\xb2\\xb8\\x35\\x16\\\n\\x89\\x9d\\x03\\xf2\\xba\\xd9\\x82\\xb0\\x53\\x69\\x22\\x36\\xba\\xeb\\x52\\xef\\\n\\xdc\\xef\\xab\\xbb\\x00\\xbe\\xa3\\x8a\\x67\\xe1\\x11\\xaa\\xb7\\x20\\x7c\\x60\\\n\\x79\\xa4\\xbd\\x2e\\x22\\x2c\\x96\\x45\\xe1\\xc2\\x46\\x69\\xd5\\x4d\\x75\\x91\\\n\\x05\\x09\\x68\\xd2\\xe4\\xfa\\xcb\\x92\\x54\\xdf\\x2c\\xe7\\xd2\\x00\\xe6\\x1b\\\n\\x50\\x51\\xe7\\xf4\\x79\\x9f\\x44\\x14\\x63\\xad\\x91\\x1d\\xb5\\x55\\xd5\\xd7\\\n\\x91\\xf6\\x25\\x43\\xcd\\x47\\xc8\\x78\\x6a\\x01\\xe7\\x53\\xfc\\x34\\xb7\\x96\\\n\\x1a\\x2a\\x3a\\x27\\x63\\x51\\xa0\\x7d\\x78\\x67\\x5f\\x2f\\x27\\x5c\\xc3\\xdd\\\n\\x22\\x0a\\x67\\x71\\x91\\x15\\x1c\\x71\\x26\\x82\\xb8\\x80\\x13\\xda\\xb8\\xf3\\\n\\x22\\x55\\x5d\\x4d\\x2c\\xd3\\x8c\\xfc\\xc0\\x30\\x8a\\xea\\xca\\x16\\xf7\\xd4\\\n\\x08\\xeb\\xe2\\xc4\\xc4\\xed\\xaa\\x17\\x56\\xc8\\x44\\x51\\x62\\x24\\xd6\\xaf\\\n\\x17\\x2e\\x7c\\x3f\\xf1\\xa3\\xbb\\x3a\\x22\\xd5\\xd0\\xd0\\x16\\x2b\\x42\\x64\\\n\\xb1\\xb4\\x6e\\x5b\\x44\\x6c\\x57\\x60\\xf0\\x75\\xfd\\xf6\\x70\\xab\\xc1\\x26\\\n\\x91\\x8c\\xa1\\x4d\\xb5\\x73\\x39\\xd8\\x91\\x26\\xb9\\xfd\\x43\\x5d\\xe0\\xde\\\n\\x5d\\x6c\\xb2\\xb1\\xa3\\x85\\xe8\\xb0\\xac\\xd1\\x3b\\x77\\x5b\\x62\\x33\\x5c\\\n\\xf4\\x73\\x96\\x7b\\x16\\x2e\\x56\\x5d\\xb8\\x03\\x46\\xd7\\x91\\x5b\\x3a\\xa0\\\n\\x1f\\x54\\x5d\\x00\\x67\\xb8\\x46\\xbe\\x45\\x8c\\x9c\\x95\\xa8\\x69\\xe7\\x40\\\n\\xf1\\x75\\x8d\\x42\\x9b\\x72\\x9e\\x20\\x5e\\x3a\\x3f\\x97\\x06\\x09\\xfa\\xb8\\\n\\x0c\\xe6\\x1b\\x5e\\x27\\x81\\x43\\xeb\\xb6\\xbd\\xef\\xe2\\x2e\\xf1\\x3c\\xf9\\\n\\x16\\x01\\xda\\x17\\x69\\x5b\\x2b\\x64\\x41\\xbc\\x85\\xf3\\x29\\x7e\\x9a\\x5b\\\n\\x0b\\xa9\\xce\\x1a\\x81\\x93\\xe9\\x4c\\x0a\\xfa\\xb0\\xd0\\x59\\xc7\\x89\\x4d\\\n\\xdc\\x2d\\x91\\xc5\\x3b\\x94\\x4b\\xc1\\x5a\\x52\\x8b\\xb9\\x18\\x2e\\x5a\\xec\\\n\\xd6\\xae\\xae\\x1b\\x62\\xd3\\xfd\\x90\\xb2\\x48\\x12\\x44\\x9b\\xa5\\x5c\\xde\\\n\\x70\\x4d\\xa4\\x69\\x61\\x0f\\x31\\x5b\\xa0\\xa4\\x10\\x69\\x6b\\x95\\x16\\x8b\\\n\\x5d\\xdb\\x77\\x9f\\x57\\xd5\\x74\\xee\\x07\\x48\\x4b\\x81\\x81\\xf0\\x4a\\x41\\\n\\x58\\xd4\\xb8\\x95\\x4c\\xc5\\xba\\xbb\\xae\\xd9\\x01\\x1b\\x61\\x57\\x83\\x2e\\\n\\x91\\x5e\\xff\\x4d\\x40\\x6d\\xbe\\xec\\x84\\x20\\x9c\\xdb\\x48\\xe5\\x75\\xb3\\\n\\xc1\\xd4\\x9d\\x23\\xd5\\x5e\\x2b\\xd4\\xc2\\xb0\\xc8\\x2b\\x37\\x8c\\xe8\\xcf\\\n\\x6e\\x8b\\x2c\\x7e\\x7f\\x83\\x67\\xe1\\xa2\\xd8\\xb5\\x7c\\xcb\\x79\\x55\\x1f\\\n\\x84\\xda\\x68\\x87\\xc1\\x3f\\x9c\\x01\\x9a\\x80\\xb0\\x78\\x87\\x7c\\xe9\\x62\\\n\\xe5\\xb2\\xae\\x6b\\xb6\\x6d\\x85\\xeb\\xdf\\x7b\\x69\\xdb\\x4d\\x0b\\x73\\x69\\\n\\xa0\\x40\\x8b\\x6a\\xdb\\x2a\\x2d\\xf6\\x66\\x0b\\x91\\x4b\\xa5\\x3d\\xbb\\x23\\\n\\x91\\x0f\\xca\\x67\\x45\\x48\\xe1\\x50\\xed\\x03\\xf2\\x39\\x97\\xee\\xa9\\xcb\\\n\\x52\\xfc\\xf4\\x91\\xc0\\x44\\xe7\\x14\\x52\\xbb\\x2b\\x64\\xd8\\xa9\\xea\\x05\\\n\\xb3\\xd4\\xba\\x54\\x8e\\x77\\xd6\\x47\\xdb\\x39\\x91\\x8c\\x09\\x23\\xc4\\x52\\\n\\x9d\\x77\\x53\\x47\\x73\\xec\\x3c\\x98\\xb7\\x8b\\x33\\xf3\\x43\\x29\\x62\\x0c\\\n\\x7e\\xc9\\x9d\\xa8\\xcd\\x57\\x7c\\xa8\\xb9\\xaf\\xa1\\x8a\\x8d\\x7a\\x3b\\xe4\\\n\\x66\\xe9\\xa6\\x05\\xd0\\x86\\xe6\\x77\\x4b\\x52\\x5f\\xc3\\x05\\x30\\xff\\x10\\\n\\x22\\x5d\\xdb\\xe4\\xb6\\x48\\xab\\x0c\\x33\\xd4\\x15\\xdc\\xb2\\x8e\\x8b\\x1b\\\n\\x2e\\x10\\xc2\\xac\\x06\\xbb\\x44\\x0a\\x5f\\x53\\x05\\x27\\x51\\x94\\x84\\x72\\\n\\xab\\x3f\\x3b\\x12\\xa9\\x95\\xf7\\x12\\x79\\x33\\xd9\\xc4\\x6f\\x08\\xe2\\x87\\\n\\xff\\x54\\x92\\x77\\xdc\\x5c\\xe5\\x91\\x9b\\xdc\\x81\\x3a\\xaf\\xf7\\xa2\\xfa\\\n\\xcb\\x1b\\x2e\\x15\\x3c\\xd8\\xa4\\x21\\x6c\\x06\\xbd\\x97\\x93\\xa7\\x3d\\x0a\\\n\\xf1\\x50\\x22\\x6b\\x02\\x4b\\xa2\\x2b\\xea\\x1a\\x3a\\x3e\\xd4\\x00\\xd9\\xf7\\\n\\xdd\\x24\\x77\\x9c\\xdd\\x96\\x4b\\x83\\x3a\\x59\\x6e\\xee\\x8f\\xb5\\x7b\\xb1\\\n\\x49\\x95\\x57\\x89\\x57\\xca\\x8b\\x81\\xd3\\x2a\\x19\\xed\\x2b\\xd2\\x2a\\xf5\\\n\\x6d\\x48\\x78\\x17\\x3f\\xcd\\xad\\x85\\xf6\\x0f\\xf0\\x1b\\x09\\x1c\\x61\\xa3\\\n\\x43\\x36\\x37\\x27\\xf3\\x10\\xc1\\xde\\x85\\x22\\xc2\\x05\\xf4\\x9e\\xd6\\xcc\\\n\\x26\\xc1\\x1c\\xfc\\xc2\\x16\\xb1\\x68\\x7a\\x0d\\x90\\xeb\\x57\\xcd\\x6e\\xa9\\\n\\x88\\x50\\x1b\\xd4\\xfb\\x8b\\x11\\xf2\\x03\\x8e\\xf4\\xba\\x38\\x1c\\x5e\\x00\\\n\\x73\\x58\\x72\\x34\\xec\\x6a\\xb0\\x24\\x12\\xcd\\x23\\xbe\\x6c\\x41\\x70\\x72\\\n\\x4d\\x36\\x35\\xca\\xa4\\xe9\\x55\\xe9\\xb7\\x85\\x32\\x73\\x93\\x0b\\x08\\xaa\\\n\\x89\\x82\\xe0\\x55\\x38\\xed\\x59\\x44\\x6f\\xaa\\xb9\\x59\\x23\\x54\\x16\\x98\\\n\\xa0\\x40\\x91\\xe4\\x96\\x76\\x55\\x44\\x70\\x9e\\xdd\\x43\\x44\\xa1\\xea\\x36\\\n\\x1f\\x11\\x29\\x5b\\x8c\\x88\\x11\\xbd\\xc9\\xe9\\x8a\\x56\\x19\\x63\\x7b\\xbf\\\n\\xe2\\xa7\\x91\\x88\\xb4\\x11\\x72\\x9f\\x0a\\x11\\xd1\\xe8\\x1e\\xa9\\x20\\x91\\\n\\xec\\xd5\\x90\\x23\\x74\\x66\\x42\\x2a\\x4c\\x20\\x8f\\x8e\\x08\\x63\\xc6\\x7e\\\n\\x6a\\xaa\\xe8\\xf5\\x60\\xf7\\xa9\\x84\\x88\\xde\\x88\\x68\\x83\\x00\\xdd\\x28\\\n\\xd3\\xba\\x3c\\xac\\x8d\\x88\\xe2\\xce\\xc5\\x3b\\x6a\\x23\\x64\\x2a\\x66\\x34\\\n\\xce\\x30\\xab\\xc1\\x92\\x48\\xc6\\x11\\xd3\\x5a\\xf9\\xb2\\x69\\x53\\xa2\\x57\\\n\\x24\\x83\\xad\\xb0\\xc1\\x3c\\x88\\x2b\\xb2\\x4e\\x9d\\xa9\\x2e\\xd9\\x64\\x5d\\\n\\x5a\\xf4\\xae\\x0d\\xab\\x59\\x0a\\xac\\x4a\\xe8\\x12\\x54\\x98\\x8d\\xc2\\xec\\\n\\x5a\\x3f\\x6a\\x2f\\xdb\\x47\\x44\\xd6\\xf6\\x6b\\x6a\\xbc\\xab\\x9c\\x8a\\x48\\\n\\x7b\\x02\\x6d\\x65\\xa4\\x7d\\x51\\x81\\x59\\x97\\xf7\\x2c\\x7e\\x3a\\x3f\\x4c\\\n\\x4c\\x91\\x3d\\xdf\\xa8\\x22\\x7d\\x43\\x34\\x2b\\x28\\x62\\xfd\\x5b\\xd6\\x4c\\\n\\x9c\\xc1\\x1f\\xd1\\x9a\\x6f\\x60\\xd6\\xf6\\x05\\x47\\x9b\\x10\\x98\\xdf\\x64\\\n\\x57\\x8c\\x7a\\x0e\\xa0\\x79\\xf2\\x15\\xe4\\x30\\xb9\\x37\\x14\\x7e\\x35\\x58\\\n\\x12\\xc9\\x28\\xe2\\x2e\\x3a\\x93\\x5d\\x55\\x5d\\x65\\x4f\\x21\\x66\\x4c\\x28\\\n\\x04\\xd3\\xd8\\x65\\xaa\\x8b\\xa8\\x62\\xd0\\xd8\\xab\\x3c\\x6b\\x83\\x37\\xf4\\\n\\xa6\\x3d\\xcc\\xd1\\x4d\\xc4\\xa8\\x4c\\x2b\\xa9\\x46\\xf4\\xd6\\xdb\\x29\\xa2\\\n\\xa8\\x9b\\x14\\xef\\x2a\\xa7\\xb7\\x02\\x99\\x05\\xb6\\x4e\\xc3\\xae\\x80\\x5f\\\n\\xf1\\xd3\\xf9\\xa9\\x8a\\x18\\x7e\\x83\\xa7\\xdd\\x82\\xf5\\x5f\\x51\\xb7\\x50\\\n\\xa2\\x6e\\xc3\\x8c\\x21\\x86\\x48\\xd6\\x97\\xb0\\x55\\x26\\x33\\xf0\\x9b\\x18\\\n\\xb4\\x88\\x31\\xdf\\xa8\\x32\\xfa\\x02\\x33\\x11\\x02\\x9d\\x5e\\x18\\xed\\x8b\\\n\\x52\\x95\\xc8\\xdc\\x04\\xb3\\x7b\\xf4\\xd6\\x05\\x19\\xb2\\x90\\x23\\x25\\x90\\\n\\x48\\x21\\xf5\\x4f\\x07\\x79\\x11\\x3f\\x76\\x4d\\x4d\\x75\\x95\\xa8\\x5b\\x63\\\n\\x17\\x9b\\x0a\\x4f\\x4d\\x7d\\xc4\\x4b\\x5d\\x98\\x0a\\xb0\\xc6\\x57\\xe3\\x59\\\n\\x1b\\xa2\\xe1\\x44\\x99\\x11\\xaf\\xa9\\xd2\\x2f\\xb6\\xc0\\x9a\\x88\\xee\\x42\\\n\\x85\\x5c\\x1a\\xd0\\x64\\xa4\\x04\\xef\\x2a\\x17\\x23\\x7a\\x6b\\xa3\\x73\\x10\\\n\\x7a\\x0a\\xda\\xb2\\x88\\xcf\\x66\\xc5\\x57\\x44\\x3b\\x61\\xdf\\x55\\x35\\xa4\\\n\\x27\\xb3\\x75\\xb8\\xd8\\x9c\\x6a\\x90\\xab\\xc3\\xfa\\xb1\\xd9\\xbd\\x75\\x23\\\n\\x5a\\x43\\xb4\\xa9\\x9e\\xb1\\xdf\\xa6\\x81\\x22\\x8b\\x7b\\xf4\\xe6\\x2f\\x1a\\\n\\x06\\x4c\\x64\\x7e\\x13\\x46\\xcc\\x64\\x28\\x2c\\x32\\x13\\xcd\\x52\\x09\\xba\\\n\\x79\\x63\\x5e\\x9f\\x1c\\x2e\\x81\\x44\\xd8\\x70\\x1b\\xbe\\xec\\x2a\\x22\\x13\\\n\\x1d\\xa7\\xbb\\xd9\\x64\\xb2\\xad\\x9b\\x5e\\x6f\\xb6\\xd1\\xf8\\x3d\\x0b\\x27\\\n\\x3d\\x4b\\xa8\\x32\\x52\\x30\\x45\\x75\\x53\\x5e\\x23\\x32\\x8f\\xea\\xa7\\xb7\\\n\\x53\\x44\\x7d\\xae\\xea\\x5d\\xe5\\xc6\\x7c\\x56\\x60\\x0e\\x44\\x6f\\x69\\x4c\\\n\\x66\\xd1\\x29\\xdb\\xb4\\x7f\\x1b\\xca\\xb3\\x75\\xb8\\x38\\x1a\\x9d\\x37\\x6f\\\n\\xed\\xda\\xb5\\xd1\\xb5\\xf3\\xa2\\x40\\xf3\\xe8\\xd6\\x3c\\xf8\\x87\\x63\\xe4\\\n\\x8b\\x1c\\xbd\\x05\\x0e\\xcc\\xe0\\xcf\\x2d\\x6b\\xd7\\x12\\x0d\\xd6\\x7e\\x04\\\n\\x8c\\x18\\xd5\\x2f\\x0a\\x07\\x89\\xbe\\xb0\\x7d\\x0b\\x39\\x10\\xa5\\x7a\\x92\\\n\\x2f\\xca\\x20\\xfc\\x28\\x4d\\x75\\x0b\\xe4\\x23\\x69\\xa2\\x51\\x56\\x39\\xa5\\\n\\x90\\x68\\x2d\\xa3\\x79\\xb7\\xf8\\xb1\\xf5\\x93\\xaf\\xf5\\xd6\\x67\\x1e\\xbd\\\n\\x42\\x4c\\x74\\x0f\\x76\\x94\\x5e\\xc7\\xa8\\x7f\\x6d\\xe8\\x29\\xe8\\x85\\x9e\\\n\\xc7\\x2e\\x36\\x24\\xff\\x33\\x52\\x2f\\x50\\x34\\x39\\xb2\\x36\\x97\\x06\\xac\\\n\\xb1\\x44\\xd7\\xfa\\x6a\\x40\\xd8\\xf3\\x68\\xa3\\xd2\\xab\\x9b\\x56\\xef\\x5a\\\n\\xda\\xae\\xbc\\x8b\\x9f\\xb6\\xa6\\x02\\x02\\x91\\x8b\\x4e\\x5a\\x01\\xc7\\x71\\\n\\x75\\x09\\x59\\x4e\\x24\\x38\\x39\\x51\\x57\\x07\\x1b\\xb2\\xcc\\xc1\\x37\\x6c\\\n\\x11\\x4a\\x24\\x60\\x93\\x03\\x96\\xcc\\x25\\xe4\\xba\\x19\\xf8\\x4d\\x24\\x97\\\n\\x15\\x39\\xa1\\x24\\xa8\\x4a\\x9c\\xa1\\x1b\\x07\\xdf\\x64\\xa3\\x4e\\x21\\x6a\\\n\\x42\\x5a\\x5a\\x07\\x44\\x5b\\x85\\xee\\xd7\\x41\\xad\\xc0\\x5f\\x5d\\x1d\\xab\\\n\\x0f\\x8e\\x23\\x47\\x4a\\x25\\x91\\x4e\\xbe\\xec\\x3a\\x0e\\x3e\\x75\\xb2\\x27\\\n\\x3b\\x21\\xb3\\x54\\x89\\x84\\x2f\\x9b\\x68\\x25\\xfb\\xb1\\xf5\\x04\\xe4\\x07\\\n\\x12\\x11\\x2d\\x61\\xb7\\x8e\\x55\\x08\\xbd\\xfe\\x90\\x23\\x97\\x06\\x75\\xb4\\\n\\xe6\\x38\\x5f\\x0d\\x28\\x5b\\xa6\\xd9\\x69\\xfb\\xe2\\x12\\x54\\x1b\\x72\\x42\\\n\\xd6\\xda\\xa6\\xbf\\x9d\\x98\\x9a\\x11\\xe5\\x41\\x1f\\x85\\x4a\\xce\\xf1\\x2a\\\n\\x6f\\x92\\x4a\\x3f\\x3c\\xc7\\x3b\\x29\\xdb\\x3e\\x6e\\xe3\\x67\\x0a\\x81\\x6a\\\n\\x3b\\x77\\xc2\\x8f\\xaa\\x3a\\x0f\\xab\\xa6\\xe2\\xa0\\x8e\\xb9\\x4f\\x37\\xb1\\\n\\x8d\\x55\\x3a\\x89\\x78\\x9f\\x53\\x50\\xb6\\xaa\\xa2\\x9c\\xb9\\x3d\\xb3\\x1b\\\n\\xea\\xd2\\x3f\\xff\\xdc\\xba\\x7e\\x8e\\x56\\xa0\\xea\\xd5\\xe2\\x2f\\x9a\\x95\\\n\\x16\\x0f\\xb4\\x65\\x63\\xf3\\x3b\\x07\\x32\\x8f\\xd8\\x2a\\x3d\\x57\\xf1\\xd3\\\n\\x40\\x18\\x63\\x5d\\x40\\x8e\\x33\\xc5\\x83\\x86\\xa0\\x0b\\x9c\\xd0\\x2c\\x91\\\n\\xe9\\xbe\\xa5\\x03\\xfd\\x26\\x7c\\x63\\x1b\\x0f\\xa0\\x0c\\x6e\\xa5\\x7d\\x63\\\n\\xd6\\xcc\\xc9\\x26\\x1a\\x18\\x40\\xa6\\x5a\\xa0\\x3d\\x53\\x19\\x5b\\x15\\x83\\\n\\xac\\xa6\\x82\\xe8\\xbf\\x51\\x88\\x6a\\x6b\\x40\\x21\\x4b\\xc4\\x67\\x65\\xb7\\\n\\x61\\xe3\\xca\\xf8\\xe5\\xb6\\x1a\\x97\\x07\\x1b\\x07\\x39\\xb7\\xc9\\xc5\\xb4\\\n\\xcd\\x62\\x7b\\x99\\x41\\x34\\x30\\x1a\\x93\\xbf\\x06\\x46\\x95\\x5b\\x7c\\xde\\\n\\x79\\x92\\x0a\\x68\\x27\\xfa\\x35\\x46\\xc8\\x38\\xc0\\xd9\\x7c\\x80\\x69\\x9f\\\n\\xea\\x9c\\x35\\xc3\\xcb\\x19\\x55\\x65\\xe7\\xa3\\x01\\x7e\\xe6\\x10\\x1a\\xf4\\\n\\x92\\x16\\xe5\\x5d\\x4e\\x98\\x12\\x0d\\x06\\x60\\xa3\\x42\\x73\\x0f\\x64\\x67\\\n\\x67\\xe6\\x46\\x05\\xd4\\x07\\x1a\\xc8\\x5f\\x86\\xe9\\xac\\xf1\\xe0\\xc4\\x71\\\n\\xee\\x63\\xaa\\x9c\\x71\\x40\\xce\\xc2\\x47\\x6d\\x98\\x9f\\x31\\x94\\xa3\\xb1\\\n\\x4c\\x87\\x44\\x03\\x03\\x25\\x64\\x1b\\xea\\x7e\\xd4\\x41\\x1f\\x0b\\x96\\x3b\\\n\\x24\\x0d\\x2a\\xae\\xca\\x03\\x93\\x57\\xdf\\x70\\xf9\\x09\\x45\\xf5\\xe7\\xe3\\\n\\xe0\\xaa\\x0f\\x06\\x4e\\x59\\x2a\\xca\\x61\\xe3\\xf2\\xa0\\xb0\\xca\\x09\\xe6\\\n\\x37\\x0a\\x65\\x1b\\xea\\xde\\x8e\\xec\\x74\\x47\\xb0\\xdc\\x79\\x6a\\xc0\\x11\\\n\\x62\\x87\\xec\\x6d\\x4a\\x97\\xc1\\xe2\\x9a\\x5b\\xb6\\x0c\\x6e\\xb2\\xd2\\x64\\\n\\x49\\xe1\\xcf\\xcc\\x87\\x7c\\x4b\\xf1\\xee\\x1b\\x79\\xec\\x23\\x32\\x9f\\xdb\\\n\\xcc\\xd5\\xd7\\xd7\\x2f\\xa4\\xf3\\xc2\\xcd\\x1f\\xdf\\xb8\\x64\\xd5\\x47\\xc8\\\n\\xd6\\xe0\\xad\\xfd\\x4b\\x6e\\xbc\\xb2\\xc6\\x4c\\x39\\x28\\xf3\\xfb\\xaf\\xae\\\n\\x3f\\xdf\\xe3\\x84\\x7b\\xaf\\x5e\\x5a\\xbf\\xe8\\xfc\\xfd\\x79\\x6b\\x35\\x54\\\n\\x9f\\x67\\x06\\x66\\xe3\\xa8\\xb4\\xf5\\xf5\\xb7\\x79\\x97\\xb8\\xd9\\x14\\xd0\\\n\\x53\\x2b\\x53\\x97\\x70\\xa8\\xb4\\x7e\\xc3\\x60\\xff\\x39\\xcc\\x06\\xe2\\x8c\\\n\\x60\\xef\\x13\\x19\\xec\\x15\\x1f\\x20\\x1a\\x92\\xba\\x3c\\x70\\x43\\xfd\\xf6\\\n\\x3b\\x75\\xee\\xc2\\x95\\x79\\x69\\xa0\\x37\\x7c\\xfa\\xc5\\xf9\\xb0\\x39\\x7b\\\n\\x3a\\x5b\\x06\\x93\\x38\\xfb\\x86\\x57\\x82\\xcc\\xa4\\xa1\\x74\\x0e\\x3f\\xf2\\\n\\xec\\x1b\\x8a\\x1a\\x7c\\x9f\\xcc\\x37\\xd0\\x30\\x07\\xe6\\xa8\\x61\\x15\\x78\\\n\\x91\\xbd\\xd2\\x3a\\x4d\\xeb\\x94\\xa0\\x19\\x0d\\x49\\x2d\\x22\\x1a\\xec\\x6d\\\n\\x34\\x3a\\x07\\x1a\\x56\\xf8\\xa1\\x84\\x36\\xec\\x3e\\xa1\\x28\\x45\\x55\\x74\\\n\\x20\\x5e\\x9b\\xb7\\xf0\\x28\\xdf\\x71\\x2b\\xb5\\x71\\x4c\\x5a\\x84\\xb0\\x67\\\n\\x89\\xc8\\x14\\xd0\\x53\\x2b\\x4b\\x97\\x70\\xa8\\xb4\\x7e\\xc3\\x60\\xdf\\xce\\\n\\xf3\\x07\\x69\\xb7\\xa0\\x5f\\x77\\x39\\xd9\\x5a\\xa3\\xc0\\xf3\\x51\\x89\\xdc\\\n\\x70\\x89\\x77\\x6b\\x42\\xec\\x12\\xc6\\x8c\\xc6\\xf2\\xd2\\xc0\\xba\\xac\\x9c\\\n\\xd3\\x6f\\xd8\\xd9\\x5c\\x46\\xf3\\x9f\\x81\\x7d\\x23\\x2f\\xbf\\x01\\xf3\\x0d\\\n\\xb5\\x49\\x21\\xed\\x05\\x0e\\xa3\\x78\\x2d\\xe6\\xb1\\x5a\\x7b\\x27\\x46\\x0b\\\n\\x5b\\x35\\xd2\\xd4\\x62\\x5b\\xa8\\x25\\xde\\xcc\\x61\\x99\\x93\\x9b\\x65\\x99\\\n\\xa4\\x12\\x2e\\xab\\xbf\\xe8\\xca\\xfd\\xdb\\x6e\\xe6\\xf7\\x2f\\x01\\x2b\\x25\\\n\\xad\\x50\\x6a\\xef\\xa6\\x77\\x62\\x58\\x42\\xf8\\x7c\\xf2\\xa2\\xa5\\x5b\\xc0\\\n\\x8d\\xd4\\xac\\x5f\\x0a\\xe9\\x60\\x7f\\xd3\\x92\\x4f\\x5e\\x7f\\x23\\x35\\xe1\\\n\\x2c\\xeb\\x66\\xae\\xe5\\xa2\\xfe\\x35\\x34\\xbd\\x70\\xd9\\xd2\\xa5\\x57\\x05\\\n\\xd5\\x96\\xdd\\xd7\\x69\\xa2\\x0d\\x1b\\xfa\\xd5\\xe0\\xc7\\x97\\x2e\\x59\\xb4\\\n\\x8b\\x27\\xa5\\x5d\\x74\\xfd\\xd6\\x8b\\x3e\\x74\\x33\\x6c\\x12\\xee\\xa6\\x4d\\\n\\xc0\\xbf\\x3c\\x3a\\x24\\xbb\\xb4\\xd2\\xcb\\x01\\x5d\\xf2\\x75\\x59\\xd9\\x24\\\n\\x2a\\x39\\xfb\\x53\\x86\\x31\\x73\\xf6\\x0d\\xc6\\xae\\xed\\xc5\\xfc\\x5f\\x2c\\\n\\xba\\x04\\x2a\\xa5\\x4b\\xe9\\x42\\x6a\\x34\\xce\\x54\\xc4\\xdb\\xf6\\xe6\\xa3\\\n\\x81\\xbd\\x59\\xe7\\xf6\\x1b\\x7c\\x66\\x6f\\xa1\\x2c\\xdb\\xc0\\x8b\\x77\\x26\\\n\\x33\\x47\\x50\\x3e\\x7d\\x8c\\xb1\\x32\\x47\\x6b\\x9c\\x7d\\x6c\\x96\\xc9\\xe2\\\n\\x32\\x87\\x6d\\xae\\x41\\x5a\\x61\\x7e\\xa3\\xfa\\x36\\x93\\x60\\xbe\\xc1\\x6c\\\n\\xad\\xd6\\xd0\\xcf\\xf3\\x2b\\x13\\x07\\x68\\xc5\\x22\\x5e\\x4c\\x08\\x74\\x6b\\\n\\xd7\\x72\\xc2\\x85\\x26\\x86\\x36\\xd7\\xe1\\x26\\x0e\\xc3\\x0e\\x8e\\x81\\x79\\\n\\x8a\\x6f\\x6d\\xe8\\xc1\\x51\\xf9\\x26\\xb4\\x77\\x3b\\xaa\\x6d\\x96\\x63\\x2d\\\n\\x5d\\x98\\x25\\xe4\\xc0\\x28\\xc7\\x08\\x9f\\x47\\x7b\\x7a\\x34\\x71\\x55\\x2b\\\n\\xec\\xd7\\xaa\\x03\\xf2\\x3e\\xad\\xb7\\x47\\xcf\\xba\\x61\\x38\\xd1\\xa2\\xb5\\\n\\xd2\\x82\\x71\\xac\\x57\\x13\\x1a\\x83\\xba\\x1c\\x62\\xc4\\x2c\\xcf\\x80\\x56\\\n\\x35\\x68\\x5a\\xab\\x84\\x86\\x13\\x5b\\xb5\\x5a\\xb9\\x55\\xab\\xed\\x83\\x4d\\\n\\xe0\\xe2\\xa8\\xb4\\x1f\\x47\\xb7\\x7b\\x69\\x65\\x94\\xb3\\x99\\x0b\\xe9\\x56\\\n\\x4b\\xb9\\xfc\\x86\\x76\\x90\\x6e\\x38\\xc7\\x54\\x94\\x8d\\xe3\\x9d\\x08\\x0b\\\n\\xf4\\xba\\x0c\\x28\\x60\\xce\\xda\\xf5\\xd9\\x24\\x6e\\xe8\\xc9\\x47\\x03\\x7b\\\n\\x3b\\xf2\\xf2\\x1b\\x66\\x53\\x74\\x26\\xb2\\xf7\\x0d\\x17\\x33\\x93\\xe1\\x18\\\n\\x89\\x39\\xba\\x11\\x3b\\xe0\\x91\\x26\\xe3\\x88\\xb5\\xc1\\x79\\x14\\x9e\\xa9\\\n\\x46\\x21\\x7e\\x43\\x91\\x2c\\x22\\xf3\\x0d\\xb0\\xb5\\x1b\\x25\\x45\\x69\\xd5\\\n\\xd0\\xbe\\x84\\x3e\\x6b\\x30\\xb6\\xf0\\x6a\\x85\\x58\\x62\\xf8\\xc7\\xc3\\x09\\\n\\xb8\\x00\\x64\\x47\\x50\\x0e\\x80\\x79\\xea\\xdb\\xbb\\x1d\\xb7\\xee\\xee\\x40\\\n\\xad\\x5b\\x30\\xd2\\x6e\\xee\\xf9\\xb4\\xbc\\x4b\\x4f\\xa8\\x36\\xc9\\x03\\xb8\\\n\\x3a\\xba\\x9d\\x17\\x15\\x11\\xa1\\xe8\\x76\\xad\\x29\\x51\\x8d\\x04\\xb9\\x61\\\n\\x9f\\x8a\\xf5\\xac\\x12\\x8c\\xcd\\xa0\\xc7\\x90\\xf4\\x62\\x62\\x10\\xa1\\x41\\\n\\x21\\xd0\\x55\\xb4\\xfc\\xc6\\x46\\xa0\\xeb\\x79\\x24\\x68\\x68\\xb0\\x16\\x8a\\\n\\x49\\x54\\x83\\x98\\x9a\\x4a\\x4b\\x24\\x92\\xe2\\xe5\\x51\\xdc\\xb3\\x01\\xbb\\\n\\xb5\\x32\\x08\\x6f\\xe6\\x02\\x9e\\x31\\x90\\x44\\x25\\x66\\xab\\xfc\\xa7\\xf4\\\n\\x27\\x0a\\xb4\\x6b\\x64\\xf8\\x0d\\x4d\\x59\\xc9\\xab\\x88\\xd4\\x25\\x3a\\xb8\\\n\\xa8\\xe7\\x6e\\x31\\xa6\\x5f\\x6d\\xbc\\xa6\\x31\\xd0\\x1d\\xc8\\x4c\\xbf\\xc1\\\n\\x17\\xec\\x37\\x5c\\x4e\\x22\\x93\\xc1\\xd9\\x3e\\x2c\\x9d\\xbb\\x64\\x67\\xdf\\\n\\x70\\x1c\\xf1\\x4e\\xe3\\x3f\\x3c\\x2b\\xc4\\x6f\\xe0\\xa1\\x61\\x83\\x86\\x86\\\n\\x74\\xbf\\x81\\x30\\x12\\x7a\\x7b\\x79\\x91\\xa3\\xcd\\xf4\\xee\\x43\\xbc\\xc0\\\n\\xb6\\x50\\xb4\\x8f\\x8e\\xdb\\x87\\x65\\x75\\x58\\xc6\\xcc\\x2c\\xef\\x4b\\x80\\\n\\x79\\x5a\\xad\\x60\\x69\\x20\\x3e\\xbc\\x7c\\x38\\x1e\\xd5\\xba\\x60\\xc0\\xc2\\\n\\x6f\\x59\\xae\\x27\\x04\\xe3\\x8d\\x11\\x9e\\x2f\\xa3\\x7d\\x9c\\xb4\\xb1\\x43\\\n\\x92\\x49\\x16\\xac\\xed\\x8d\\xc9\\x8d\\xbb\\x58\\xd6\\xf9\\x64\\x60\\xa6\\xea\\\n\\x65\\xc9\\x30\\xda\\x41\\x41\\x9f\\xad\\x1a\\x7e\\x83\\xce\\x37\\x78\\xdc\\xb9\\\n\\x4d\\x5a\\xb5\\x87\\x16\\x43\\x86\\x4e\\xd4\\x69\\x24\\xa8\\xf3\\x5a\\xb6\\x5e\\\n\\x95\\x86\\xbc\\xb4\\x32\\xca\\x19\\x0e\\xad\\x6f\\x94\\x6b\\xbe\\x41\\x88\\x75\\\n\\x0d\\xf4\\x19\\x3b\\x1b\\xb7\\xc9\\x1a\\xaf\\x3b\\x53\\x34\\x78\\xb5\\xb4\\xaa\\\n\\xb6\\x43\\xe7\\xae\\x96\\xf2\\xd1\\x20\\x97\\xdf\\x30\\x18\\xc5\\xfb\\x8d\\x8c\\\n\\x42\\x3c\\xfa\\x06\\xe7\\x1c\\x81\\xf1\\xbe\\x43\\xb2\\x02\\xfa\\x46\\x0e\\xbf\\\n\\x81\\x30\\x36\\xef\\x07\\xda\\xe6\\x1b\\xea\\x5e\\x05\\xf1\\x74\\x46\\x8d\\x5a\\\n\\xb7\\x21\\x7e\\x55\\x0b\\x31\\x3b\\xea\\x0d\\xbb\\xd5\\x6b\\x94\\xfd\\x2a\\x78\\\n\\xea\\x26\\x59\\xa3\\x66\\x19\\x7c\\xc0\\x4a\\x1e\\x75\\x2e\\xc7\\xbd\\x2d\\x92\\\n\\xda\\xbb\\xa1\\x63\\xff\\xcd\\x3b\\x10\\x99\\xef\\x76\\x18\\x09\\x87\\x13\\x30\\\n\\xbe\\x5a\\xd3\\x88\\x04\\xa5\\x1a\\xab\\xda\\x01\\xb4\\x19\\x4a\\xd7\\xee\\x51\\\n\\xc9\\xf0\\x87\\x66\\x5d\\x73\\x6f\\x53\\x82\\x39\\x18\\x52\\x56\\x17\\xe6\\xa3\\\n\\x1f\\x0e\\x74\\x15\\x9d\\xf3\\x0d\\x98\\xaa\\x24\\xda\\x11\\x6a\\xe7\\x74\\x77\\\n\\xa5\\x97\\x48\\xb6\\xf0\\x90\\x14\\xdd\\xa1\\x7a\\x6a\\xc5\\xc8\\x2c\\xa2\\x68\\\n\\x2a\\x97\\xdf\\x20\\x4f\\xad\\x59\\xd7\\xc8\\xf0\\x1b\\x78\\x48\\xbe\\xdb\\xd0\\\n\\x08\\x0d\\x6b\\x08\\xd7\\x5e\\xad\\x73\\xf7\\x06\\xd3\\x31\\x0f\\xbf\\x11\\x66\\\n\\xdf\\xf0\\x98\\xae\\xb8\\x4e\\xe1\\x9e\\xe9\\x97\\xdc\\x6f\\x38\\x08\\xfc\\x06\\\n\\x66\\x46\\x67\\x5f\\x2c\\xc6\\xf3\\xd1\\xe6\\x75\\xfb\\xd5\\x4e\\xa9\\x93\\x47\\\n\\x43\\x52\\x4b\\x0d\\x3f\\xd8\\xd3\\x28\\x22\\xb1\\x2e\\xaa\\x75\\x27\\xd0\\x90\\\n\\xa2\\xe9\\x66\\xf9\\x6a\\x32\\x69\\x58\\x86\\x3b\\xa5\\x9b\\xb4\\x4e\\xb9\\x1b\\\n\\x69\\xcb\\xaf\\x12\\xf0\\x60\\xac\\x81\\x25\\x04\\x3f\\xa1\\xdc\\x7a\\xe8\\xda\\\n\\x78\\x0b\\xe9\\x57\\x87\\x0e\\xed\\x89\\x11\\x9b\\x8e\\x9b\\xe4\\x76\\x54\\xdb\\\n\\x48\\xb2\\xde\\x2d\\xc4\\x1b\\xa8\\x83\\x61\\x65\\x2d\\xdc\\x74\\xe8\\xda\\x45\\\n\\xeb\\x02\\x5d\\x45\\x66\\xc4\\xb0\\x61\\xf4\\xd1\\x01\\x25\\x8a\\xdb\\xe2\\x32\\\n\\x91\\x0a\\x19\\x25\\x2a\\x74\\x12\\x83\\xb6\\x6d\\x6b\\x41\\x5e\\x5a\\xe9\\xc5\\\n\\xa0\\x21\\xee\\xee\\x80\\xa7\\x0c\\x20\\x51\\xe9\\xd9\\x9f\\xa5\\xa3\\x23\\xa3\\\n\\x6f\\x38\\xfc\\x06\\xd2\\x94\\x41\\xc3\\x6f\\xe0\\x6d\\x2d\\xfc\\x50\\x7f\\x54\\\n\\xbf\\xb0\\x6b\\x1a\\xf3\\xd1\\xc0\\xaf\\x99\\xd9\\xd9\\xde\\x96\\x3b\\xa3\\x6f\\\n\\x38\\x67\\x25\\xee\\xbe\\xc1\\xfe\\x3c\\xa7\\xf2\\x8e\\x92\\xed\\xc5\\xf8\\x9c\\\n\\xb4\\x14\\xf3\\x0d\\x47\\xd5\\xb0\\xf9\\x46\\x7d\\xbd\\x2c\\xed\\x59\\x09\\xc3\\\n\\xda\\x15\\xe7\\xca\\x4a\\x3c\\x8a\\xc1\\xb9\\x0c\\xf4\\xf6\\xcb\\xdb\\x1b\\xee\\\n\\x83\\x11\\x4f\\xad\\xb4\\xfd\\x7c\\x05\\x1d\\xda\\x21\\xb7\\x33\\xb3\\x2c\\xde\\\n\\x24\\x49\\x0d\\x2a\\xd6\\x94\\x3b\\xd5\\x03\\xca\\xf5\\x2a\\x3e\\xd0\\xdb\\x2f\\\n\\x5d\\xbe\\x41\\xc3\\x2c\\x21\\x38\\x98\\x0d\\xf7\\x4a\\xad\\x1a\\xaf\\x0a\\xdd\\\n\\x52\\xc7\\x1e\\x81\\xb8\\x07\\x60\\xf5\\x2b\\xf1\\xd5\\x90\\xb5\\x1b\\xb2\\xc2\\\n\\x54\\x58\\xb7\\xf2\\x30\\x67\\xd8\\x23\\x49\\x5b\\x71\\xc0\\x67\\xf3\\x0e\\xbf\\\n\\x81\\xf8\\x3b\\xfb\\x9b\\xcf\\x8d\\xca\\xab\\xc9\\x08\\xcd\\xe1\\x37\\x78\\xdc\\\n\\xa2\\x1c\\xc0\\x5e\\x5a\\x19\\xe5\\x1c\\xda\\xb1\\xa4\\x26\\xd8\\x29\\x83\\x48\\\n\\x54\\x62\\xb6\\x8a\\x3e\\x4b\\xe7\\x1b\\x46\\xdf\\xb8\\xdf\\xc9\\x8e\\x93\\x2e\\\n\\x4f\\xeb\\x12\\x0f\\xc7\\xe5\\xed\\xd7\\x41\\xd2\\x55\\xf5\\xc0\\x6d\\xd8\\x92\\\n\\xcf\\x7c\\xc3\\x1a\\xb6\\x70\\x8e\\x1b\\x3e\\x86\\xdf\\xc8\\xf2\\xec\\x8f\\xfe\\\n\\x9a\\x4c\\xf6\\xab\\xe7\\xf6\\x48\\x6c\\x70\\x5d\\xd9\\xdd\\xf7\\xa9\\xdc\\x63\\\n\\x2a\\xf7\\xe0\\x2a\\xcb\\xb3\\xc8\\xa2\\xfd\\x06\\x22\\x7e\\x03\\xba\\x02\\x0c\\\n\\xb4\\xc8\\x7d\\x1c\\x44\\x76\\x68\\x53\\xa5\\x47\\x30\\x5d\\x95\\xa8\\xd2\\x5b\\\n\\x3c\\xe4\\x9b\\x70\\x81\\xa3\\xb2\\xc4\\x2a\\x79\\xca\\x80\\x68\\x1e\\x55\\x5f\\\n\\xe2\\x45\\x46\\x6b\\x60\\xbc\\xd9\\xa3\\x0b\\x0c\\x87\\x31\\x7b\\x10\\x01\\x59\\\n\\x48\\x21\\xac\\x50\\x68\\xd6\\x98\\x0c\\xec\\xc8\\x92\\x36\\x44\\x47\\x78\\x41\\\n\\x2e\\x22\\x6f\\xf8\\x0d\\xf3\\x4e\\x2c\\xcc\\x53\\x48\\x6e\\x95\\x14\\x4b\\x8b\\\n\\xd6\\x0b\\x85\\x99\\xc8\\x42\\x8c\\x3c\\xb5\\xd2\\x49\\x55\\xf3\\x7e\\xb6\\xe2\\\n\\x2f\\x51\\xc9\\xd9\\xf8\\x2f\\xe9\\x0f\\xe9\\x1b\\x64\\x11\\xf2\\xfd\\x76\\xb6\\\n\\xca\\xaf\\xdb\\x83\\xf5\\x4a\\xa9\\x06\\xa5\\xc9\\xaa\\x5f\\x1c\\x85\\xa9\\x06\\\n\\x6e\\x9c\\x5f\\x06\\x0d\\x42\\xa4\\xd0\\x9f\\x75\\x14\\xef\\x37\\x9c\\xeb\\xa9\\\n\\x68\\x8b\\x61\\x47\\xc8\\x64\\x84\\xed\\xa8\\xb6\\xa5\\xba\\xbc\\x99\\x40\\xb5\\\n\\xf2\\x20\\x7b\\x42\\x75\\x58\\xb6\\xca\\x42\\x8e\\x82\\x1d\\x6b\\x66\\x9d\\x8c\\\n\\x40\\x14\\x70\\x05\\xd1\\x6d\\x43\\xf1\\x4e\\x67\\x3e\\xef\\x53\\x87\\x40\\x65\\\n\\x79\\xbe\\xa1\\x92\\xbe\\x71\\xd0\\x3c\\xec\\xf0\\x1b\\xaa\\xaa\\x35\\x76\\x61\\\n\\x53\\x4d\\xa6\\xe9\\x55\\xbb\\x60\\x12\\xb7\\x27\\x58\\xcd\\x16\\x27\\x62\\x88\\\n\\x54\\x9e\\xbe\\x91\\xe7\\x7c\\x23\\x1b\\xe1\\xe0\\x6d\\xd7\\x48\\x18\\xde\\x4d\\\n\\x20\\xf7\\x29\\x02\\x19\\x31\\xb4\\x5a\\xee\\xd5\\xbc\\x55\\xae\\xd7\\xa9\\x5c\\\n\\x12\\x85\\xc4\\xbe\\xff\\x63\\x1f\\xbb\\xe3\\x8e\\xcf\\xdd\\x75\\xd7\\xe7\\x3f\\\n\\x73\\x3f\\x21\\x27\\x1b\\x45\\x77\\x67\\xe4\\x23\\xbe\\x52\\x8d\\x1d\\x28\\x87\\\n\\x06\\x21\\x52\\x05\\xfa\\x8d\\x9d\\xd9\\x8a\\x2f\\x64\\xe0\\x51\\xc2\\x60\\x97\\\n\\x60\\x46\\x0c\\xf9\\xde\\x13\\x36\\xef\\xce\\x95\\x4b\\xa2\\x90\\xd8\\xd8\\x72\\\n\\x0c\\x6e\\xb6\\xf7\\x64\\x4d\\xd5\\xca\\xa2\\x41\\x25\\x53\\xfe\\x7e\\x23\\xb3\\\n\\x2f\\x84\\xbf\\x16\\xbf\\x74\\x8b\\xde\\x83\\x1a\\xb1\\xf2\\xc5\\x17\\x94\\xc5\\\n\\x6f\\xe8\\x51\\x8c\\xbc\\xb9\\x93\\x5f\\x6d\\x94\\x52\\x83\\x4a\\xa6\\xbc\\xfd\\\n\\x46\\x76\\x3f\\x11\\x06\\x95\\xb0\\x61\\x56\\x9e\\x11\\x2b\\x8f\\xdf\\x60\\xa4\\\n\\x47\\xf6\\x85\\x5c\\x1b\\x73\\x7e\\xc3\\xa6\\xeb\\x74\\x8b\\x5c\\x04\\x55\\x9e\\\n\\x11\\x2b\\xcf\\x7c\\xc3\\x76\\x28\\xf4\\xda\\x98\\xf3\\x1b\\x96\\xae\\x33\\x29\\\n\\xce\\x2f\\x93\\x2a\\xcf\\x88\\x95\\xd3\\x6f\\x94\\xa6\\x36\\xe6\\xfc\\x86\\x49\\\n\\x79\\xc4\\xf9\\x59\\x54\\x29\\xd5\\x53\\xa0\\x11\\x2b\\xa1\\xe5\\x2b\\xb7\\xdf\\\n\\x08\\xa1\\x36\\xbc\\x4b\\xf1\\x58\\xcd\\x14\\xe2\\x49\\xa6\\x85\\xca\\x32\\xdf\\\n\\xe8\\x5e\\xe4\\xf4\\x35\\xe4\\xa5\\x58\\xf5\\x67\\xaf\\x84\\x8d\\x45\\xe5\\xd5\\\n\\x36\\xbf\\xb8\\x3f\\x83\\x42\\x0b\\xf2\\xf3\\x95\\xa8\\x22\\xd9\\xf9\\x69\\xe0\\\n\\xbb\\x66\\x64\\x16\\xf9\\x8d\\x42\\xe6\\x1b\\x4a\\xc6\\xca\\x9c\\xba\\x8e\\x96\\\n\\xd6\\x58\\x22\\x06\\x9d\\x2e\\xd8\\x92\\x9d\\xd0\\x28\\xaf\\xb8\\x3f\\xf3\\x58\\\n\\x68\\x41\\x7e\\x7e\\x12\\x55\\x26\\x3b\\x3f\\x0d\\x38\\x6b\\x49\\x93\\xd7\\x7a\\\n\\xaa\\x99\\x48\\x05\\xce\\x37\\xda\\xdf\\x5f\\x57\\x7f\\xd9\\x6d\\xfc\\xd9\\xdc\\\n\\x00\\xbf\\x7f\\xe9\\x76\\xb0\\xff\\x1b\\xea\\xb7\\xb7\\x5f\\xb1\\x64\\xd1\\x66\\\n\\xde\\xbe\\xbd\\x7f\\x77\\xfd\\x45\\x5b\\x21\\xbb\\xac\\xd4\\xf1\\x5c\\xe3\\xd9\\\n\\x75\\xdb\\x58\\x72\\x2c\\x37\\x62\\xc4\\xf7\\x2b\\xaa\\x0a\\x7d\\x43\\xdc\\x53\\\n\\x5f\\xb7\\x68\\x2d\\xc9\\xb6\\xb5\\xfe\\xc6\\xb5\\x46\\x96\\x12\\x51\\x5e\\x71\\\n\\x7f\\xf7\\xe8\\x99\\xc2\\x0b\\xf2\\xf3\\x93\\xa8\\x32\\xd9\\xf9\\x69\\x60\\x2e\\\n\\x02\\xe4\\x67\\x99\\xdf\\x70\\xc6\\xf9\\x41\\x73\\xe9\\x93\\x1a\\x7a\\x13\\x0d\\\n\\x78\\x5d\\xa2\\x85\\x8f\\x26\\xb6\\xf2\\x8a\\x1c\\xeb\\x4d\\xc8\\xb1\\x6e\\x19\\\n\\x7c\\x81\\xb5\\x8d\\x1b\\xe4\\xee\\xee\\x44\\x2d\\x6e\\x55\\xa4\\x56\\x9e\\x4b\\\n\\xc4\\x7a\\x6a\\x59\\x72\\x94\\x68\\x1c\\xdc\\xb7\\x2e\\xd1\\x48\\x1c\\x0a\\xee\\\n\\x4d\\xf4\\x34\\xc8\\x7d\\x34\\x5b\\x8f\\xbc\\x5c\\xcf\\x52\\x2a\\x6d\\xf3\\x89\\\n\\xfb\\x5b\\x6e\\xf8\\x95\\xf0\\x82\\xfc\\x7c\\x24\\xaa\\x50\\x76\\x7e\\x1a\\xf8\\\n\\xf6\\x8d\\xf7\\xb8\\xdf\\xc8\\x8c\\xf3\\xe3\\x71\\x7f\\xf3\\xb2\\x15\\x43\\x2a\\\n\\xd6\\xe4\\x38\\xde\\x92\\x18\\xe2\\x95\\x0e\\x55\\x53\\x9a\\xe1\\x1f\\xe6\\x0f\\\n\\xd6\\x36\\xbe\\xbc\\x63\\x70\\xb0\\xe3\\x4f\\x31\\x56\\x1a\\x11\\xcf\\x29\\x9a\\\n\\x7a\\x1b\\x4d\\xde\\xa6\\x26\\xe4\\x84\\xa2\\xc8\\x6b\\x79\\xf0\\x1b\\xf8\\xd0\\\n\\xf0\\xb5\\xd1\\xc3\\x0a\\xcd\\xa6\\xf6\\x2b\\x7a\\x96\\x52\\x69\\x9b\\x47\\xdc\\\n\\xdf\\xee\\x0d\\x46\\x87\\x08\\x2f\\xc8\\xcf\\x4f\\xa2\\xca\\x64\\xe7\\xa7\\x41\\\n\\x46\\x54\\x45\\xc8\\x27\\x99\\x16\\x0a\\xe6\\x37\\x9c\\x71\\x7e\\x24\\xee\\x25\\\n\\x9e\\x48\\x48\\x60\\xde\\xd7\\xcb\\x07\\xfa\\xb6\\x21\\x98\\x37\\x18\\xff\\xbc\\\n\\x6d\\x1b\\x43\\x07\\x48\\xc8\\x32\\x9b\\x6f\\xd4\\x2d\\x07\\x8b\\x4d\\x93\\xab\\\n\\xbc\\xd2\\xbf\\x66\\xcd\\x0a\\x0d\\x51\\xbf\\x11\\x6d\\x3c\\xbc\\x70\\xa3\\x4c\\\n\\xb2\\xa9\\xa8\\x51\\x36\\xb3\\x94\\x86\\xf2\\x8a\\xfb\\x33\\x33\\x95\\x6e\\x7d\\\n\\xd7\\x7b\\xca\\x6f\\xf8\\xf4\\x8d\\xf7\\xba\\xdf\\xc8\\x88\\xf3\\xe3\\xb5\\x68\\\n\\xa7\\x70\\x73\\x47\\x3d\\x46\\x6b\\x13\\xb7\\xc2\\x38\\x49\\x65\\x7d\\x02\\x93\\\n\\x5f\\xfb\\xb6\\xd4\\xb1\\xe6\\xc3\\x7f\\xb1\\x06\\x93\\x2e\\xa3\\x42\\x37\\xe0\\\n\\x31\\x4b\\x4e\\xba\\x0e\\x5b\\x89\\x0b\\xe9\\x96\\x4b\\x1a\\xee\\x03\\x21\\x12\\\n\\x8b\\x78\\xb4\\x88\\x33\\xb3\\x94\\x86\\xf2\\x89\\xfb\\xb3\\x16\\x59\\x84\\x16\\\n\\xe4\\xe7\\x27\\x51\\x65\\xb2\\xf3\\xd3\\x60\\xb6\\xde\\xa7\\xb2\\x8f\\xb7\\xa9\\\n\\xdf\\xa8\\xee\\x53\\x60\\x96\\xb0\\x03\\x3a\\x49\\xbf\\x92\\x18\\x64\\x8e\\x81\\\n\\x0c\\x9c\\xd8\\xaf\\xb1\\x8d\\xb7\\x28\\xdd\\xbb\\x13\\xbd\\x3c\\x6e\\x96\\x1a\\\n\\x0e\\xd2\\x5b\\x52\\x56\\x72\\x44\\x17\\xf8\\x40\\x9a\\x7e\\xa5\\x21\\xa6\\x70\\\n\\x87\\x48\\xff\\x41\\x8d\\x75\\x46\\x96\\x12\\x51\\xc0\\xb8\\x3f\\xa4\\xc6\\xb7\\\n\\xb5\\x98\\xcb\\x82\\xc3\\x0b\\xf2\\xf3\\x91\\xa8\\x42\\xd9\\xf9\\x69\\x90\\x23\\\n\\xee\\x6f\\x26\\x52\\x20\\xbf\\xe1\\xd0\\x15\\xe6\\x1b\\x58\\x1d\\x3e\\x57\\x51\\\n\\x62\\xc4\\x06\\xf7\\xd4\\xc5\\xa9\\xfd\\x77\\xfd\\x93\\x9b\\x51\\xda\\x6e\\x49\\\n\\xd9\\x23\\x22\\xb4\\xa1\\xb9\\x4f\\xa0\\x7d\\x03\\x92\\xaf\\x42\\xf4\\xd6\\x2d\\\n\\x8b\\xd4\\x80\\x34\\x6b\\xfa\\x9a\\xaf\\xd8\\x94\\xb8\\x47\\xa5\\x7d\\x43\\xd6\\\n\\xb3\\x94\\xc5\\x6f\\xf8\\xc7\\xfd\\x21\\xad\\x25\\x71\\xa0\\x04\\x41\\x7e\\x7e\\\n\\x12\\x55\\x26\\x3b\\x3f\\x0d\\x66\\xab\\xdf\\x90\\x33\\x9f\\x6f\\x60\\x95\\x84\\\n\\xcb\\x91\\x50\\x98\\x4f\\xd2\\x9b\\x4a\\x24\\x36\\xce\\xeb\\x9f\\x84\\xc7\\x21\\\n\\x12\\x0e\\xa0\\xd2\\xf0\\x39\\x7b\\x72\\x4a\\x24\\x92\\x4f\\xa5\\x01\\x76\\xf4\\\n\\x18\\x52\\x8d\\x2c\\x25\\xa2\\xa0\\x71\\x7f\\xa8\\x73\\x61\\x29\\x82\\xfc\\x7c\\\n\\x24\\xaa\\x50\\x76\\x59\\x34\\xa8\\x64\\x2a\\xec\\xf9\\x06\\xd2\\xd7\\xac\\xed\\\n\\xdd\\x2a\\x29\\x82\\x15\\xa0\\xe7\\xf5\\xcf\\xb3\\xd4\\x28\\x23\\xb9\\xce\\x30\\\n\\x7f\\x90\\xf3\\x50\\x89\\xa8\\xd0\\xb8\\xbf\\x69\\x93\\x68\\xe6\\xf8\\x8d\\xd2\\\n\\x9e\\x64\\x5a\\xa8\\xa8\\xf5\\x54\\xb8\\x53\\xbe\\x7c\\x5d\\xf0\\xf1\\x0f\\x24\\\n\\xef\\xef\\x9c\\xd6\\x95\\x8a\\xf9\\xc5\\xfd\\x85\\x1e\\xe4\\x97\\xbf\\x44\\x73\\\n\\x7e\\x63\\x1a\\xa9\\xa8\\xf5\\x54\\x18\\x07\\x7d\\xc1\\x87\\x91\\x7c\\x9a\\x01\\\n\\xac\\xf2\\x8a\\xfb\\x0b\\x3f\\xc8\\x2f\\x7f\\x89\\xe6\\xfc\\xc6\\x34\\x52\\xfe\\\n\\x71\\x7f\\x28\\x23\\x32\\x37\\x9f\\xb5\\x87\\xd3\\x8d\\xd7\\x33\\x4b\\xe3\\xfe\\\n\\x8a\\xac\\x8d\\x52\\x6a\\x50\\xc9\\x54\\x50\\xbc\\x78\\xc2\\xae\\x7b\\xc9\\xe3\\\n\\x00\\x43\\xa4\\xca\\x33\\x62\\x73\\x7e\\xa3\\x72\\xa9\\xa0\\xf7\\x8c\\xc8\\x33\\\n\\x35\\x0e\\xb0\\xf2\\x8c\\xd8\\x9c\\xdf\\xa8\\x5c\\x0a\\x05\\x7f\\x63\\xc6\\x50\\\n\\xe5\\x19\\xb1\\x39\\xbf\\x51\\xb9\\x54\\x34\\x6e\\x53\\x41\\x71\\x80\\x6e\\x2a\\\n\\x8f\\x71\\x09\\xcf\\x88\\xcd\\x0c\\xbc\\xbf\\x72\\xfa\\x0d\\x3f\\xbc\\xbf\\x0c\\\n\\xfc\\x8d\\x80\\x78\\x7f\\xc1\\x89\\xb3\\x17\\x18\\x82\\x3e\\xf6\\x92\\x3d\\x0e\\\n\\x86\\x82\\xf7\\x97\\x17\\x88\\x9f\\x33\\xb4\\x8e\\x05\\xe6\\x5d\\xbd\\x8f\\x0f\\\n\\x7b\\x05\\xec\\x6c\\xc5\\xfb\\xcb\\xce\\xb6\\xf0\\xfe\\x76\\xd6\\x81\\xc6\\xfa\\\n\\x2a\\xe8\\xe9\\xc0\\xfb\\xcb\\x42\\x5c\\x76\\x46\\x9e\\xa5\\x05\\x3b\\x65\\xb1\\\n\\x7e\\xc3\\x0f\\xef\\x2f\\x2f\\x10\\x3f\\x67\\x68\\x1d\\x2b\\x4e\\xeb\\x89\\x87\\\n\\xbe\\x02\\x76\\xb6\\xe2\\xfd\\x65\\x65\\x5b\\x78\\x7f\\xb8\\x33\\x66\\xde\\xb4\\\n\\x9e\\x16\\xbc\\xbf\\x2c\\x54\\x29\\x7d\\x23\\x04\\xbc\\x3f\\x74\\x40\\xae\\xd5\\\n\\xe8\\xcb\\x90\\xf4\\x20\\x3a\\x47\\x70\\x9d\\xb9\\xa9\\x43\\xfa\\x91\\xd0\\x3a\\\n\\x82\\xea\\xb7\\xca\\x02\\xda\\xe3\\xd5\\xc5\\x32\\x2d\\xd7\\x16\\x9c\\xd7\\xbf\\\n\\xc6\\xc4\\x00\\x2c\\x8c\\x66\\x2b\\xde\\x5f\\x56\\xb6\\x85\\xf7\\xa7\\x2e\\xb3\\\n\\x5e\\x9d\\x5e\\x26\\xbc\\x3f\\x07\\x8b\\xbc\\x0f\\xdd\\xb1\\x91\\xf1\\x72\\x76\\\n\\xde\\x78\\x59\\x03\\xef\\xe5\\x88\\xac\\x32\\x3d\\x41\\xfd\\xf2\\x1f\\x70\\x95\\\n\\x0c\\xef\\x0f\\x5d\\xa2\\x50\\x10\\x3f\\x23\\x88\\xce\\x11\\x5c\\x67\\x6c\\x9a\\\n\\x90\\x7e\\x9b\\x39\\x8a\\xea\\x67\\x03\\xda\\xc3\\xd5\\xeb\\x17\\xd2\\x35\\xb1\\\n\\x66\\x70\\x1e\\x81\\xf8\\x33\\x32\\xe4\\xab\\xa6\\x71\\xa1\\x66\\x29\\xde\\x5f\\\n\\x36\\xb6\\x85\\xf7\\xc7\\xa3\\xd8\\xb9\\xcb\\x2f\\xda\\xa4\\x8f\\x35\\x4b\\x8d\\\n\\xf7\\xe7\\x01\\xd8\\xe7\\xf5\\xb1\\x27\\x60\\xb9\\x78\\x8b\\xe5\\xe8\\x36\\x6e\\\n\\x21\\x3c\\x10\\x00\\xf3\\xa1\\x52\\xe1\\xfd\\x41\\x43\\xba\\x8d\\x82\\xf8\\xe9\\\n\\x41\\x74\\x8e\\xe0\\x3a\\x73\\x53\\x87\\xf4\\x5b\\x8e\\x89\\xbd\\x86\\xa3\\xaa\\\n\\x09\\xb4\\xb7\\xb1\\xe3\\xf2\\xee\\x03\\x0c\\x60\\xc3\\x08\\xce\\x23\\x10\\x7f\\\n\\x06\\x06\\x60\\x9e\\x5a\\x9a\\x17\\x6a\\x56\\xe2\\xfd\\x65\\x67\\x5b\\x78\\x7f\\\n\\xbc\\xda\\x7b\\xa7\\x26\\xc6\\xd6\\xeb\\x3a\\x96\\x18\\xef\\x8f\\x1e\\xc8\\xf4\\\n\\x00\\x01\\xfa\\x06\\xcf\\x67\\xf4\\x0d\\x9f\\x13\\xfb\\x21\\xd1\\x04\\xa7\\x92\\\n\\xe1\\xfd\\xd5\\xac\\x44\\x14\\xc4\\xcf\\x02\\xcf\\xb3\\x82\\xeb\\x8c\\x4d\\x4e\\\n\\x87\\xf4\\x6b\\xd6\\x81\\x00\\xb1\\x05\\xb4\\x47\\x10\\x2f\\xa8\\x85\\x37\\x83\\\n\\xf3\\x08\\xc4\\x9f\\x91\\x41\\x2e\\x70\\xed\\xc9\\x6c\\xc5\\xfb\\xcb\\xc2\\x76\\\n\\xe0\\xfd\\xa9\\x50\\xe7\\x51\\x03\\xe1\\xa1\\xc4\\x78\\x7f\\xbc\\xe3\\x88\\x4f\\\n\\xdf\\xe0\\x5c\\xfe\\x26\\xb3\\x8f\\x78\\x9d\\xd8\\xc8\\xe5\\xf7\\xce\\xac\\x80\\\n\\x54\\x32\\xbc\\xbf\\xce\\x38\\x03\\xf1\\xd3\\x83\\xe8\\x9c\\xc1\\x75\\xc6\\x26\\\n\\x83\\xf4\\xbb\\xbb\\xcb\\xc4\\x4b\\xb2\\x80\\xf6\\x08\\x51\\x50\\x59\\x23\\x38\\\n\\x2f\\x61\\x65\\xd0\\xba\\x0a\\x7c\\xa6\\x32\\x3b\\xf1\\xfe\\xb2\\xb2\\xed\\x78\\\n\\x7f\\x5a\\x43\\x0d\\x8f\\xdb\\x0d\\x2c\\xcc\\xb2\\xe3\\xfd\\xf9\\xf9\\x0d\\x47\\\n\\x99\\x01\\xfa\\x86\\xdb\\x5d\\x14\\x66\\xc9\\x4a\\x86\\xf7\\x67\\x80\\xf8\\xe9\\\n\\x41\\x74\\xc8\\x1e\\x5c\\x67\\x6c\\x72\\x14\\xd2\\x4f\\xeb\\x8e\\xa1\\xa1\\x84\\\n\\x36\\x4c\\x6e\\x94\\x58\\x40\\x7b\\xa4\\x68\\x92\\xca\\x0c\\xce\\xb3\\x65\\xd8\\\n\\x73\\x43\\x41\\xba\\x06\\x8e\\xfb\\x7b\\xcf\\xe1\\xfd\\x65\\x61\\xdb\\xf1\\xfe\\\n\\xf8\\xc6\\x9e\\x43\\x42\\x5c\\x9f\\x66\\x94\\x15\\xef\\x8f\\x0b\\xd4\\x37\\xec\\\n\\x5d\\xc1\\x9e\\xcb\\x91\\xc8\\x76\\x23\\xb9\\x14\\x7d\\x23\\x0c\\xbc\\x3f\\x1d\\\n\\xc4\\x4f\\x65\\x41\\x74\\xc8\\xdb\\x6f\\x18\\x90\\x7e\\x0c\\x0b\\x90\\xb7\\x80\\\n\\xf6\\x58\\xd9\\xc4\\x51\\x64\\x06\\xe7\\x41\\x06\\x29\\x26\\x16\\xa4\\x6b\\xe0\\\n\\xb8\\xbf\\xf7\\x18\\xde\\x5f\\x0e\\xb6\\x89\\xf7\\x07\\x07\\x62\\xb2\\xb4\\x45\\\n\\x9b\\x06\\xbc\\x3f\\xbf\\x47\\x1f\\xf6\\x79\\xb6\\x1b\\xc2\\x2f\\xc3\\x6f\\x78\\\n\\x20\\x00\\x7a\\x94\\x13\\x9c\\x4a\\x85\\xf7\\x47\\xc1\\xfd\\x54\\x16\\xec\\x67\\\n\\x81\\xe7\\xe9\\xc1\\x75\\xc6\\x26\\x4f\\x21\\xfd\\x28\\x4a\\x90\\x7e\\x13\\xc8\\\n\\x00\\xda\\xa3\\xa4\\x03\\xfa\\x19\\xc1\\x79\\x3a\\x14\\x1f\\x66\\x27\\x2a\\x88\\\n\\x66\\x29\\xde\\x5f\\x36\\xb6\\x1d\\xef\\x0f\\x33\\x34\\xc5\\xe9\\xc0\\xfb\\x2b\\\n\\xd0\\xb2\\x17\\x94\\x2b\\x70\\xe9\\x45\\xfb\\x0d\\x1f\\xbc\\x3f\\x06\\xe2\\x87\\\n\\x73\\x04\\xd1\\x99\\x03\\x78\\xf6\\x93\\x3b\\xe0\\x0e\\x15\\x05\\x5d\\x33\\x4b\\\n\\xf1\\xfe\\xb2\\xb1\\xed\\x78\\x7f\\x26\\xa8\\x62\\x59\\xf1\\xfe\\x32\\x6e\\xed\\\n\\x06\\xa4\\xc2\\x72\\xe5\\x77\\x8a\\x10\\xe6\\x1b\\xd9\\x6a\\x26\\x1b\\x78\\x9e\\\n\\x3b\\x75\\x1e\\x69\\x0b\\xa2\\xd9\\x8a\\xf7\\x97\\x95\\x3d\\xed\\x78\\x7f\\x85\\\n\\xad\\xab\\x0a\\x67\\x35\\x56\\xf6\\x33\\x78\\x1c\\x0c\\x0f\\xef\\x8f\\xcf\\x02\\\n\\x9e\\x57\\x5c\\xda\\x82\\x68\\xb6\\xe2\\xfd\\x65\\x65\\xcf\\xe1\\xfd\\xf9\\x50\\\n\\x19\\xf0\\xfe\\xf2\\x02\\x39\\x2e\\xad\\xb6\\x73\\x71\\x7f\\x85\\xd4\\x46\\x29\\\n\\x35\\xa8\\x64\\xaa\\x40\\xbc\\xbf\\x12\\x52\\xe5\\x19\\xb1\\x0a\\xf0\\x1b\\xd3\\\n\\xaa\\x41\\x25\\xd3\\x1c\\xde\\x5f\\x45\\x4b\\x64\\xb2\\xf7\\xed\\x1b\\xda\\xbc\\\n\\x79\\xf3\\xfc\\x02\\xd9\\xa5\\xac\\x8d\\x39\\xbf\\x61\\xe9\\x3a\\x93\\xe2\\xfc\\\n\\x32\\xa9\\xf2\\x8c\\x58\\x40\\xab\\x8b\\x86\\x54\\x84\\x35\\x74\\xed\\xfc\\x82\\\n\\xd8\\xfc\\x47\\x1d\\xf4\\xb1\\x50\\x6b\\x63\\xce\\x6f\\x98\\x14\\x52\\x9c\\xdf\\\n\\xf4\\xd0\\x8c\\xc5\\xfb\\x43\\x43\\xfc\\x81\\xe1\\x2e\\x5e\\x13\\xe6\\x17\\xc2\\\n\\xe6\\x6f\\x47\\x76\\xba\\xa3\\xb8\\xda\\xf0\\x11\\xd1\\xf1\\x78\\x8d\\x73\\xb1\\\n\\x43\\x8f\\xca\\x2b\\x3d\\x85\\x35\\xdf\\x20\\xc8\\x7d\\xc6\\xbf\\x07\\xcb\\xf7\\\n\\x58\\x79\\x11\\xff\\x66\\x2c\\xde\\x1f\\x6a\\x52\\x87\\xd1\\xea\\xbb\\x35\\xb5\\\n\\x6b\\x35\\xce\\x9f\\xcd\\xff\\x39\\xaf\\xaa\\x7c\\x9c\\x10\\xd9\\xfb\\x44\\x06\\\n\\xdb\\x8a\\xfb\\x23\\x14\\x34\\xde\\xcf\\xad\\x81\\xfd\\x09\\xb5\\x8b\\xed\\x5a\\\n\\x83\\x5b\\xf9\\x14\\xd6\\x7c\\x83\\x21\\x0b\\x78\\x21\\xf8\\xe1\\xf3\\xdd\\xb1\\\n\\x7f\\xd6\\xb1\\xf2\\x22\\xfe\\xcd\\x54\\xbc\\x3f\\x8c\\xf6\\x55\\x0f\\xae\\x1e\\\n\\xae\\xbe\\xef\\x0b\\xea\\xe0\\x5e\\x7f\\xf6\\x03\\x7f\\xe5\\xc9\\x06\\xbf\\xc1\\\n\\xf3\\x07\\x69\\xbf\\xa0\\x5f\\x77\\x39\\xd9\\x56\\xdc\\x1f\\x3d\\x18\\x34\\xde\\\n\\xcf\\xad\\x81\\xcd\\x6b\\xb8\\xfc\\x46\\x29\\xe2\\xf2\\x4a\\x4d\\x85\\xcd\\x37\\\n\\xfe\\xf4\\x22\\x9e\\xbf\\x9c\\x13\\xf8\\x85\\x4b\\x56\\x52\\xb8\\x3e\\x82\\xb6\\\n\\x81\\xf4\\x7f\\xde\\x80\\xee\\xbb\\x9a\\x5b\\xc9\\x1f\\xec\\xef\\xa7\\x87\\x74\\\n\\x7c\\x40\\x7e\\xff\\x86\\xfe\\xba\\x1d\\xf7\\xf0\\x88\\x00\\x3c\\x1d\\xda\\x54\\\n\\xdf\\x77\\x9d\\x1c\\x2c\\x48\\x20\\x24\\x9a\\xb1\\x78\\x7f\\x68\\x18\\x21\\x4d\\\n\\x55\\x1f\\x7c\\xf0\\x0b\\x5a\\x57\\x3b\\xf6\\x61\\x3f\\xf0\\xd7\\x7f\\xf3\\x57\\\n\\xb8\\xed\\x1e\\x37\\x9b\\xff\\x94\\x61\\xdc\\x9c\\x7d\\x23\\x33\\xee\\x8f\\x6a\\\n\\x1b\\x34\\xde\\xcf\\xad\\x81\\x6d\\x19\\xa0\\xcb\\x6f\\xbc\\x67\\xfa\\x46\\x2e\\\n\\xbc\\x3f\\xdc\\x92\\x58\\xbd\\x53\\xe6\\x3a\\x35\\x79\\x4f\\x0f\\x85\\xeb\\xb3\\\n\\x23\\x6f\\x98\\xd0\\x7d\\x9d\\x89\\x56\\x3e\\x9a\\xd8\\x40\\x0e\\xe9\\xf8\\x80\\\n\\x3c\\xda\\x9a\\x88\\x35\\x48\\x52\\x0d\\x71\\x17\\xb8\\x21\\x11\\x5f\\xb6\\x5d\\\n\\x29\\xbb\\xdf\\x98\\x91\\x78\\x7f\\x78\\xb5\\xc8\\xf3\\xf7\\x3d\\xf8\\xd0\\xc3\\\n\\xd0\\x39\\x06\\x57\\x78\\xb3\\x1f\\xf8\\xeb\\xbf\\xfd\\xdb\\xbf\\xfe\\x2b\\xe4\\\n\\xc1\\x06\\xbf\\xa1\\x1d\\xa4\\x1b\\xb4\\x6f\\x7c\\xc2\\xc1\\xb6\\xc5\\xfd\\xb1\\\n\\xb2\\x02\\xc6\\xfb\\xb9\\x35\\xb0\\x05\\xdf\\xcd\\x1e\\xbf\\xe1\\x8a\\xf3\\x1b\\\n\\x4e\\xb4\\x5c\\xa2\\x74\\xf4\\xec\\x4a\\x5c\\xa8\\x31\\xb8\\x3e\\x3b\\xf2\\x06\\\n\\x83\\xee\\x93\\xd5\\x43\\x52\\x23\\xbe\\x35\\xd1\\x46\\xc1\\x38\\x18\\x3e\\x20\\\n\\x8f\\x6e\\x6c\\xd6\\xd4\\x15\\x9d\\x1a\\x4d\\xda\\x2f\\x8b\\x68\\xb8\\xcc\\x63\\\n\\xaa\\x99\\x8a\\xf7\\x87\\xd0\\x5e\\x41\\xfb\\xe2\\x83\\x0f\\x3d\\xf4\\xf0\\x43\\\n\\x5f\\xa8\\xb6\\x5a\\xbf\\x9d\\xcd\\x7f\\xe9\\x6f\\xfe\\x96\\x74\\x0e\\xdc\\xf6\\\n\\x67\\xd8\\xc9\\x56\\xf9\\x4f\\xd1\\xc5\\x60\\xc6\\x7c\\xc3\\xe9\\x37\\x6c\\x71\\\n\\x7f\\x4c\\xdd\\x80\\xf1\\x7e\\x6e\\x0d\\x3c\\xa2\\xf4\\x66\\x81\\xdf\\x70\\xe1\\\n\\xfd\\x35\\xae\\xea\\x5d\\xd4\\x1d\\xef\\x51\\x44\\x03\\xae\\xcf\\xee\\x37\\x28\\\n\\x74\\x9f\\x82\\xd0\\x16\\xf9\\x1e\\x79\\x21\\x46\\x04\\xa5\\xc9\\xc0\\x07\\x4c\\\n\\x40\\x3f\\x41\\x88\\x21\\x37\\xc1\\x10\\x0c\\x69\\xd3\\xe3\\x37\\x66\\x1e\\xde\\\n\\x1f\\x42\\x51\\x11\\x83\\xe3\\x78\\xe8\\xa1\\x07\\xbf\\x80\\xf6\\xad\\xcd\\x64\\\n\\x63\\xe8\\x1c\\xe8\\x4b\\x5f\\xa6\\x9d\\x43\\x1d\\x70\\xb1\\x6f\\x37\\xca\\x23\\\n\\x9d\\x03\\x7d\\xc6\\xce\\xb6\\xc7\\xfd\\xb1\\xa3\\x01\\xe3\\xfd\\xdc\\x1a\\xd8\\\n\\xd6\\xa0\\xdb\\xd6\\xa8\\xbf\\xd7\\xfd\\x46\\x26\\xde\\x9f\\xda\\xa0\\x48\\x5b\\\n\\xae\\x53\\xa4\\x98\\x01\\xd7\\xe7\\xf0\\x1b\\x3a\\x74\\x1f\\x1e\\x96\\xe3\\x89\\\n\\xeb\\xe9\\x21\\x1d\\x1f\\x90\\xe7\\x97\\x37\\x1f\\xe2\\x3f\\xdc\\x33\\x40\\x93\\\n\\x5e\\xde\\x7c\\x1b\\x3f\\x7f\\x7a\\xfc\\x06\\xdb\\x9b\\x51\\x78\\x7f\\x88\\xdf\\\n\\xfb\\x80\\xf6\\x77\\x0f\\x3e\\xfc\\xd0\\x83\\x0f\\xab\\x83\\x51\\x17\\x1b\\xa3\\\n\\x76\\x41\\xfd\\x12\\x8c\\xaa\\xbe\\xfc\\xe5\\xea\\x03\\x19\\x6c\\xe2\\x37\\x54\\\n\\x66\\xee\\xdc\\xf3\\x0d\\x7b\\xdc\\x1f\\x3b\\x1a\\x30\\xde\\xcf\\x2d\\xa2\\x47\\\n\\x94\\xde\\x7b\\xdf\\x6f\\xb8\\xf0\\xfe\\x50\\x54\\x51\\x76\\x0d\\x72\\xca\\x9d\\\n\\xa8\\x5f\\xe9\\xa1\\x70\\x7d\\x4e\\xbf\\x01\\x8e\\x85\\xa2\\xe6\\x25\\x24\\x8d\\\n\\x1e\\x32\\xf0\\x01\\xf1\\x56\\x79\\xd5\\x32\\xa9\\x43\\xa4\\x7e\\x63\\x83\\x1c\\\n\\xdf\\xd0\\x58\\x7e\\xbf\\x31\\x63\\xf1\\xfe\\xb4\\x15\\x02\\xba\\xef\\xc1\\x07\\\n\\x1f\\xd6\\x06\\xcd\\x20\\x2b\\x8b\\x0d\\x46\\x2b\\x2a\\x68\\x5f\\xfa\\x9b\\x2f\\\n\\xff\\xbd\\x17\\xfb\\xb3\\xc6\\x11\\xda\\x37\\x1c\\x7e\\xc3\\x11\\xf7\\x47\\x28\\\n\\x68\\xbc\\x9f\\x5b\\x44\\xef\\xbe\\x61\\x3c\\xfe\\xe0\\x67\\x5a\\xd7\\x28\\x0c\\\n\\xef\\x0f\\x46\\xaf\\x1d\\x72\\x35\\xbe\\x31\\x31\\xa8\\xee\\xba\\xbc\\xc3\\x80\\\n\\xeb\\xb3\\xff\\x13\\xbf\\x81\\xf8\\xeb\\x94\\x1e\\x06\\xea\\x67\\xe0\\x03\\x22\\\n\\xb5\\xa1\\x4f\\x89\\xdf\\x43\\x6f\\x67\\x21\\xb5\\x47\\xee\\xbb\\x70\\xfa\\xee\\\n\\x53\\xcd\\x34\\xbc\\x3f\\x70\\xda\\x7f\\x26\\xa0\\x2f\\x3e\\x84\\x06\\x6d\\xf1\\\n\\x87\\xb6\\xdc\\x84\\x8d\\xbf\\xf4\\xf7\\xd5\\x6e\\xb6\\x8a\\x3e\\x0b\\x57\\xcc\\\n\\xba\\x87\\x7b\\xbf\\x93\\x6d\\xc5\\xfd\\xe5\\x15\\xef\\x97\\x29\\x83\\xdf\\xb3\\\n\\x3f\\x43\\xc4\\xf7\\xc8\\xb3\\xbf\\xdc\\xef\\x4d\\x57\\xc9\\xca\\x66\\x8a\\x55\\\n\\x46\\x43\\xe2\\x90\\x0b\\xe9\\x8f\\x58\\x5d\\xcc\\xc0\\x60\\xc9\\x8f\\x4a\\x70\\\n\\x69\\x68\\x00\\x9d\\x6a\\x26\\x31\\x62\\xfe\\xca\\x48\\x33\\x1c\\xef\\x0f\\x45\\\n\\x0f\\x40\\xfd\\x47\\xb1\\x2f\\xbb\\x4b\\xb3\\xf7\\x1c\\xeb\\x36\\xd6\\x5f\\x92\\\n\\x6f\\xfa\\xec\\x4f\\x85\\xc1\\xd5\\xfd\\x76\\xb6\\x23\\xee\\x2f\\x9f\\x78\\xbf\\\n\\x82\\x34\\x98\\x51\\x54\\xe8\\x7a\\x2a\\x5b\\xd3\\xf1\\x41\\xf9\\x73\\xa2\\xf9\\\n\\x39\\x1b\\x17\\x62\\x25\\x94\\x1a\\x14\\xc9\\x45\\x33\\x1c\\xef\\x4f\\x45\\x1f\\\n\\x59\\x69\\x6f\\xfb\\x19\\x6c\\x8c\\xa3\\x5d\\x03\\x5e\\x6c\\x95\\xf4\\x8d\\x83\\\n\\xe6\\x61\\x87\\xdf\\xb0\\xc7\\xfd\\xe5\\x15\\xef\\x57\\x90\\x06\\x33\\x8a\\xe6\\\n\\xd6\\x53\\x79\\xa4\\xaa\\x5c\\xbc\\x3f\\xd4\\x19\\xc5\\xbe\\x6c\\xf0\\xcf\\xbb\\\n\\xbc\\xd9\\xf7\\x7f\\xec\\x63\\x77\\xdc\\xf1\\xb9\\xbb\\xee\\xfa\\xfc\\x67\\xee\\\n\\x27\\xe4\\x64\\x5b\\x71\\x7f\\x79\\xc5\\xfb\\x15\\xa8\\xc1\\x0c\\xa2\\xb9\\xf8\\\n\\x0d\\x8f\\x54\\x95\\x8b\\xf7\\x87\\x9c\\x41\\x7a\\x41\\xd9\\xc6\\x61\\xe4\\x55\\\n\\xb8\\x33\\x4f\\xe0\\x78\\xbf\\x02\\x35\\x98\\x41\\x54\\x5e\\xbc\\xbf\\xe9\\xa6\\\n\\x59\\x1a\\xf7\\x47\\x2e\\x9f\\x75\\x4b\\x3a\\xef\\xda\\x28\\xa5\\x06\\x95\\x4c\\\n\\x73\\x78\\x7f\\x15\\x2d\\x51\\xa8\\x6c\\xd6\\x45\\xd4\\xa0\\xb9\\xcb\\xa2\\x41\\\n\\x25\\xd3\\x1c\\xde\\x5f\\x45\\x4b\\x14\\x3a\\x1b\\x05\\xcf\\x5d\\x16\\x0d\\x2a\\\n\\x99\\xe6\\xf0\\xfe\\x2a\\x5a\\xa2\\x90\\xd8\\x73\\x71\\x7f\\x85\\x50\\xa5\\xe0\\\n\\xfd\\x95\\x87\\x66\\x2b\\xde\\x5f\\x99\\xe3\\xfe\\xbc\\xde\\x87\\xeb\\x7a\\xe7\\\n\\xa7\\xc7\\x2a\\x92\\xcc\\xf7\\x7b\\x66\\x7f\\x57\\x67\\x96\\x67\\x89\\x0e\\x56\\\n\\xc1\\x8f\\x1c\\x4b\\x86\\xf7\\x77\\xc3\\x32\\xd8\\xd9\\x53\\x27\\xc0\\x91\\x3a\\\n\\x23\\xc2\\x6e\\x33\\xa7\\x7f\\x9c\\x34\\x54\\xef\\x73\\x20\\xf4\\x05\\xb0\\xb3\\\n\\x15\\xef\\x2f\\x78\\xdc\\xdf\\x47\\x0c\\xed\\x03\\x87\\xff\\x85\\x8a\\xf7\\xc7\\\n\\xf9\\x6f\\x14\\x4c\\xe1\\xf6\\x8d\\x30\\xf0\\xfe\\x6a\\xe1\\x32\\x1c\\x92\\xe2\\\n\\xeb\\x78\\xd4\\x12\\x33\\xee\\x20\\x42\\x32\\xfa\\xc9\\xac\\x5d\\xe4\\x7d\\x20\\\n\\xfc\\x05\\xb0\\xb3\\x15\\xef\\x2f\\x70\\xdc\\x9f\\xd8\\x67\\xc4\\xb6\\x04\\x0e\\\n\\xff\\x0b\\x15\\xef\\xaf\\xf2\\xfb\\x46\\x08\\x78\\x7f\\x64\\xe9\\x33\\x8a\\xc6\\\n\\x6b\\xf7\\xf0\\x28\\xd6\\x82\\xdb\\xf6\\x74\\xd4\\x2f\\xda\\x65\\x2d\\x58\\xd2\\\n\\xc1\\xfb\\x6e\\xbd\\x0a\\xfa\\x4f\\xfd\\x66\\x62\\xa9\\xaf\\xbf\\x91\\x5a\\x68\\\n\\xe1\\xb2\\xa5\\x4b\\xaf\\xa2\\xa6\\x5b\\xb8\\x62\\xe3\\xf6\\xad\\x09\\x3e\\x5c\\\n\\x9a\\xad\\x78\\x7f\\x41\\xe3\\xfe\\xd0\\xfa\\x2d\\x79\\x87\\xff\\x15\\x87\\xf7\\\n\\x97\\xf9\\xb2\\x74\\x27\\xd7\\x96\\xcc\\x35\\x12\\x73\\x8f\\xbb\\xdc\\x60\\xca\\\n\\xc6\\x0b\\xd5\\x0b\\xa3\\x52\\xe1\\xfd\\x21\\xbc\\x3d\\x8a\\xb7\\xb4\\xee\\x93\\\n\\xf6\\xab\\xd2\\x30\\x8a\\x37\\xf0\\x2c\\xc0\\x8e\\x05\\x48\\xe8\\xe0\\x7d\\x38\\\n\\xba\\x9c\\xc7\\x9d\\x3b\\x48\\xc8\\xd9\\xb5\\xf2\\x3e\\xad\\xb7\\x87\\xc7\\xb1\\\n\\x5e\\x4d\\x68\\xac\\x25\\x10\\x18\\x64\\x6b\\x47\\x29\\xfc\\xc6\\x6c\\xc4\\xfb\\\n\\x33\\xe2\\xfe\\x32\\xc6\\x54\\xae\\xb8\\xbf\\x68\\x6c\\xd8\\xb0\\x7b\\x81\\xc3\\\n\\xff\\x0a\\xc5\\xfb\\xe3\\xb2\\xba\\x91\\xcc\\xe3\\x9c\\x95\\x85\\xf7\\xf9\\xf6\\\n\\x61\\x15\\xbe\\xc4\\xb1\\x74\\x78\\x7f\\xbb\\x5b\\x71\\xe3\\x7c\\xb5\\x31\\x3a\\\n\\x2c\\x21\\x74\\xad\\xa6\\xd1\\x00\\x3b\\xf3\\x43\\xc1\\xfb\\xb0\\xda\\x77\\x0f\\\n\\xba\\xa9\\x56\\x23\\x70\\x4c\\x72\\xc3\\x3e\\x15\\xf3\\x62\\x62\\x10\\xa1\\x41\\\n\\x61\\x38\\xc1\\x6b\\x89\\x41\\x5c\\xbd\\x2b\\xec\\xc0\\x89\\xd9\\x89\\xf7\\x67\\\n\\xc4\\xfd\\xe9\\x5d\\xc3\\x3f\\xee\\x4f\\x6c\\x24\\x55\\xaf\\xab\\x18\\x34\\xfc\\\n\\xaf\\x50\\xbc\\xbf\\xfc\\xfa\\x06\\x6f\\xcf\\xcf\\x65\\xcf\\xc2\\x7b\\xf5\\x93\\\n\\x02\\xa8\\x64\\x78\\x7f\\xf8\\xc3\\xb1\\x01\\x09\\xa3\\x2d\\x1b\\x5a\\x76\\x93\\\n\\x00\\xbb\\x8b\\x57\\x75\\x27\\x0c\\xbf\\x61\\x80\\xf7\\xf1\\xda\\x55\\x3d\\xa2\\\n\\x7c\\x80\\xd8\\x67\\x6d\\x6f\\x4c\\x6e\\xdc\\x85\\xf7\\xc9\\x64\\x49\\xa8\\x06\\\n\\x07\\x86\\x64\\x70\\x3d\\xf3\\x4b\\xe5\\x37\\x66\\x1b\\xde\\x1f\\x8b\\xfb\\xd3\\\n\\xbb\\x86\\x6f\\xdc\\x1f\\x5e\\xbf\\x4e\\xcb\\x3f\\xfc\\xaf\\x50\\xbc\\x3f\\xab\\\n\\x6f\\xd8\\x02\\x05\\x0b\\xe8\\x1b\\x19\\x37\\xbe\\xbc\\x73\\x15\\x44\\x25\\xc3\\\n\\xfb\\x43\\xa2\\x54\\xdb\\x8b\\x70\\x34\\x1e\\x5b\\x83\\x05\\x39\\x8a\\xf0\\x0a\\\n\\x87\\xdf\\xa0\\x79\\xf0\\xbe\\x7b\\xaf\\x8b\\x21\\xb0\\xcf\\xbc\\x76\\x8f\\x4a\\\n\\x46\\x37\\x82\\xdc\\x85\\xf9\\x68\\x27\\x18\\xaf\\x9a\\xba\\x95\\x30\\x1f\\x2c\\\n\\xc9\\x7d\\xaa\\x59\\x87\\xf7\\xa7\\xc7\\xfd\\xe9\\x5d\\xc3\\x3f\\xee\\x0f\\xc3\\\n\\x78\\x40\\xe6\\x36\\xea\\xcc\\xa0\\xe1\\x7f\\x45\\xe0\\xfd\\x71\\x3e\\x63\\x21\\\n\\x3e\\x4b\\xdf\\xb0\\x4d\\xf5\\x33\\x4e\\x59\\x11\\x7e\\xc3\\x41\\x7e\\x78\\x7f\\\n\\x30\\x81\\xdd\\xfe\\x61\\x1e\\x69\\xf7\\xf6\\x57\\x63\\x68\\x84\\x2c\\xc0\\x4e\\\n\\xa1\\x81\\x75\\x09\\x03\\xed\\x0f\\xa3\\xf8\\xe5\\xd7\\x93\\x2d\\xdc\\x24\\xb7\\\n\\xa3\\xda\\x46\\x1e\\x2d\\xdc\\x74\\x48\\x68\\x5c\\x47\\x4c\\xf7\\x4d\\xdd\\xb7\\\n\\x09\\xf1\\x52\\xf8\\x8d\\xd9\\x88\\xf7\\x47\\xe2\\xfe\\xcc\\xae\\xe1\\x1f\\xf7\\\n\\x87\\x31\\x81\\xe2\\xd5\\xaf\\x6b\\xd0\\xf0\\xbf\\xc2\\xf1\\xfe\\xd8\\x9f\\x63\\\n\\x56\\x50\\x40\\xdf\\xa8\\xb0\\xf9\\x86\\xa3\\x6a\\x7c\\xf0\\xfe\\xc0\\xcc\\x2a\\\n\\xd5\\x30\\x7b\\x8d\\xc5\\x79\\x15\\xd7\\x76\\x74\\xb0\\x00\\x3b\\xcb\\x36\\x33\\\n\\x40\\xeb\\x5a\\x49\\x83\\x2d\\x19\\xab\\xb5\\xfd\\x4a\\x7c\\x35\\xcc\\x00\\xf6\\\n\\x48\\xd2\\x56\\x8d\\x0c\\xb9\\xb4\\x5e\\xa9\\x6f\\x43\\xa9\\xe6\\x1b\\x6c\\x67\\\n\\xb6\\xe0\\xfd\\x05\\x8e\\xfb\\x83\\x61\\x2c\\x9d\\x48\\xe5\\x15\\xfe\\x57\\x38\\\n\\xde\\x1f\\x6f\\xb6\\x5e\\x03\\xba\\xcf\\xeb\\x8e\\x93\\xeb\\x41\\x61\\xb6\\xdb\\\n\\x53\\x1e\\x1b\\xd3\\xe8\\x37\\x7c\\xf0\\xfe\\xf4\\x2d\\x7d\\x05\\x34\\x66\\x03\\\n\\x31\\x15\\x9b\\xb1\\x75\\x7a\\xf4\\x1d\\x66\\xb8\\x80\\x08\\x58\\x34\\x3e\\x10\\\n\\x51\\x88\\x6b\\xc2\\x52\\x8b\\x80\\xf5\\xf3\\x17\\x76\\x76\\xe2\\xfd\\x91\\xb8\\\n\\x3f\\xb4\\x2a\\xae\\x07\\xfe\\xf9\\xc7\\xfd\\xf1\\x7a\\xd4\\x59\\x5e\\xe1\\x7f\\\n\\x73\\xeb\\xa9\\xfc\\x75\\xf7\\xc1\\xfb\\xb3\\xaf\\x6a\\xf3\\x6d\\x46\\xc8\\x5c\\\n\\x15\\x6a\\x0f\\x16\\xa4\\xdb\\xa8\\x14\\xcb\\xb4\\x66\\x29\\xde\\x1f\\x89\\xfb\\\n\\xc3\\x07\\xab\\x8d\\xc3\\xbe\\x71\\x7f\\x3a\\xe5\\x17\\xfe\\x37\\xb7\\x9e\\xca\\\n\\x97\\xde\\x83\\xeb\\xa9\\xde\\x7b\\x78\\x7f\\x01\\xe3\\xfe\\x74\\xca\\x2f\\xfc\\\n\\x6f\\xce\\x6f\\xf8\\xeb\\xfe\\xde\\x8b\\xdf\\x78\\xef\\xe1\\xfd\\x61\\x5b\\xec\\\n\\xbe\\x8b\\xed\\x89\\xf7\\x17\\x3c\\xfc\\x6f\\xce\\x6f\\x58\\x94\\x37\\xde\\x5f\\\n\\x05\\xd1\\x5c\\xdc\\xdf\\x5c\\xdc\\x5f\\x70\\x9a\\x8b\\x17\\xaf\\x68\\x89\\xe6\\\n\\xe2\\xfe\\xa6\\x91\\xe6\\xf0\\xfe\\x2a\\x47\\xa2\\x96\\x0b\\xb7\\xf2\\xfc\\xd6\\\n\\x0b\\x5b\\xbc\\xd8\\x61\\x01\\xfa\\xcd\\xc5\\xfd\\x05\\xa7\\x39\\xbc\\xbf\\x4a\\\n\\x91\\xe8\\xe3\\xb5\\xc2\\xe0\\x3d\\xad\\x5b\\x07\\x07\\xf7\\xd6\\x7e\\xdc\\xc5\\\n\\xce\\x05\\xe8\\x97\\xa3\\xf0\\x4a\\x88\\xfb\\x73\\x3c\\xe0\\x28\\x79\\xbd\\xfa\\\n\\x51\\x3e\\x52\\xcc\\xbd\\x9f\\xca\\x8f\\xca\\x63\\xee\\xac\\x37\\xa1\\x37\\x0c\\\n\\xf5\\xc6\\x76\\xd7\\x36\\xec\\x8e\\xf5\\x76\\x36\\xb8\\xd8\\xb9\\x00\\xfd\\x72\\\n\\x14\\x5e\\x11\\x78\\x7f\\x2e\\x9e\\x67\\x3b\\xf5\\x78\\x7c\\x68\\x27\\x1b\\xcb\\\n\\xf5\\xac\\x31\\x7b\\x90\\x60\\xfe\\xa1\\x21\\xc5\\xcc\\x37\\x7c\\xb1\\xfa\\x6e\\\n\\xbb\\xb1\\xac\\x28\\x7e\\xc1\\x89\\x19\\x31\\x7a\\x17\\xb6\\x2e\\x47\\xcd\\x94\\\n\\x12\\xe4\\xcf\\x25\\x11\\x50\\xbc\\x45\\xd3\\x62\\xd1\\x7d\\xf7\\x44\\xe3\\x2a\\\n\\x3e\\x3f\\x9e\\xc9\\xce\\x05\\xe8\\x97\\xa3\\xf0\\x7c\\xf0\\xfe\\x08\\x6d\\xfd\\\n\\x50\\xfd\\xb9\\xab\\x03\\xc6\\xfe\\x05\\xc4\\xfb\\x73\\x37\\x49\\xef\\x05\\xb4\\\n\\xf6\\x18\\x29\\x0f\\xf2\\x63\\xfb\\x05\\x12\\xda\\x12\\x67\\x3d\\xaf\\x67\\xa6\\\n\\x22\\xe6\\x1b\\x3e\\xf8\\x00\\xb8\\x2d\\x9e\\x28\\xeb\\xdb\\xd1\\x83\\x13\\x33\\\n\\x62\\xc4\\x76\\x0e\\x4a\\xcb\\xb2\\xa7\\x2c\\x25\\xc8\\x9f\\x4b\\x22\\xb2\\xd1\\\n\\x83\\xf6\\xc4\\xbe\\xd2\\xdd\\x1d\\x8b\\x5d\\x81\\x7b\\x32\\xd9\\x39\\xf0\\xfe\\\n\\x72\\x16\\x9e\\x07\\xde\\x1f\\x39\\xdb\\xba\\xe5\\x07\\xd4\\x96\\xbe\\x80\\xb1\\\n\\x7f\\xc1\\xf0\\xfe\\xdc\\x4d\\xd2\\x67\\x6d\\x79\\x8e\\x96\\xeb\\xc3\\xce\\x5c\\\n\\x57\\xe2\\x99\\x8b\\xcb\\x5a\\x84\\x47\\xae\\xc2\\xe6\\x1b\\x16\\x56\\xdf\\x75\\\n\\x8b\\xea\\x1a\\xaf\\x23\\x3e\\x64\\x43\\xfd\\xf6\\xf6\\x2b\\x96\\x2c\\xda\\xcc\\\n\\xdf\\x23\\x37\\x96\\x17\\x55\\x23\\x38\\x99\\x46\\x4c\\x8b\\x77\\x63\\x5e\\xb8\\\n\\xac\\xfe\\xa2\\x2b\\xf7\\xeb\\x31\\x88\\x7c\\xcd\\xfa\\xa5\\xb0\\x67\\xa4\\x2c\\\n\\x29\\xc8\\x9f\\x97\\x44\\x78\\x4f\\xed\\xcd\\x9d\\x97\\x6c\\xd9\\x50\\xdb\\xb9\\\n\\xe6\\xce\\x98\\xeb\\x45\\xe9\\x39\\xf0\\xfe\\x72\\x15\\x9e\\x07\\xde\\x1f\\x11\\\n\\x05\\x69\\x48\\x6b\\x5d\\x8f\\x83\\xc5\\xfe\\x05\\xc3\\xfb\\x0b\\xd6\\x37\\xb8\\\n\\x9c\\x2d\\x37\\x23\\x00\\xd0\\x95\\x36\\x5b\\x8f\\x0a\\xa5\\x6f\\xe4\\xc2\\xfb\\\n\\xb3\\xb0\\xfa\\xf0\\x75\\xf2\\xb6\\xd6\\x46\\xf9\\x3a\\x82\\xf1\\xd7\\x9b\\x90\\\n\\x63\\xdd\\x72\\x0c\\xed\\x6d\\x29\\x33\\x1a\\x53\\x70\\x32\\x8d\\x58\\x4f\\x5c\\\n\\xe3\\x71\\xac\\x5b\\x13\\xe2\\x1b\\x58\\x0c\\x22\\x8f\\xf6\\xf4\\x68\\xe2\\xaa\\\n\\x56\\x33\\x65\\x29\\x41\\xfe\\xbc\\x24\\x42\\xda\\x0d\\x3d\\x5b\\x12\\xea\\x7d\\\n\\x5b\\xb6\\xf4\\xc4\\x3c\\xde\\x84\\x9e\\x1d\\xef\\x2f\\x57\\xe1\\x41\\xe3\\xfe\\\n\\x0c\\xc2\\x9d\\x09\\xe9\\x40\\xc0\\xd8\\xbf\\x60\\x78\\x7f\\x5e\\x7d\\xc3\\x6c\\\n\\xe5\\xae\\xd5\\x87\\xbc\\x6f\\xc3\\xb5\\x05\\x00\\xda\\x22\\x69\\xb9\\x5c\\xb9\\\n\\x32\\xe5\\xcb\\x96\\x38\\xe3\\x5c\\x19\\x94\\x2b\\xce\\xcf\\xc2\\xea\\x43\\x8d\\\n\\xf2\\x7d\\xd5\\x22\\x38\\x10\\xa5\\x43\\xd5\\x94\\x66\\xf8\\x5f\\x44\\x96\\x0c\\\n\\x56\\xb8\\xdf\\x50\\xd7\\x2d\\x87\\x61\\x84\\xa0\\x1c\\x40\\x6a\\x54\\x1a\\xa2\\\n\\x31\\x88\\xbc\\xa8\\x88\\x08\\x45\\xb7\\x1b\\x29\\x4b\\x0a\\xf2\\xe7\\x96\\x88\\\n\\xac\\x1f\\x53\\x11\\x5c\\xad\\xaf\\x7e\\xed\\xab\\x5f\\xc7\\xdf\\xf8\\x6f\\xdf\\\n\\xfc\\xa6\\x93\\x9d\\x03\\xef\\x2f\\x87\\xba\\x41\\xe3\\xfe\\x4c\\xc2\\xfb\\xd5\\\n\\x9b\\x6e\\xc0\\xc1\\x62\\xff\\x82\\xe1\\xfd\\x79\\xf4\\x0d\\xb3\\x95\\x3b\\xe2\\\n\\x5d\\x73\\xb4\\x72\\x93\\xe9\\x8e\\xb0\\xcd\\x92\\xa9\\x94\\x7e\\xc3\\x85\\xf7\\\n\\x67\\x60\\xf5\\x61\\x79\\x3b\\x8f\\xf1\\x76\\x19\\xe6\\x1e\\xc8\\xfc\\x67\\xe8\\\n\\x4d\\x95\\x48\\xba\\x11\\x1b\\xe8\\xdf\\x07\\x1d\\x78\\x5f\\x42\\xe3\\xd1\\x7c\\\n\\x99\\xc5\\x20\\xa2\\x7d\\x9c\\xb4\\xb1\\x43\\x32\\xdf\\xd8\\x58\\x52\\x90\\x3f\\\n\\xb7\\x44\\x3c\\x5b\\x5c\\x59\\x57\\xf7\\xb5\\x7f\\xf8\\xd6\\x3f\\xd6\\x7d\\xf3\\\n\\xab\\x5f\\xfd\\x66\\x06\\x3b\\x07\\xde\\x5f\\x8e\\xc2\\x83\\xc5\\xfd\\xd9\\x73\\\n\\xe2\\x15\\x72\\xc0\\xd8\\xbf\\x60\\x78\\x7f\\x7e\\x63\\x2a\\xfb\\x1c\\xda\\x9e\\\n\\x33\\x7b\\xed\\xbb\\x67\\xde\\x5c\\xd6\\x4c\\xa5\\xf4\\x1b\\x2e\\xbc\\x3f\\x03\\\n\\xab\\x0f\\x37\\x2a\\x02\\x18\\xe0\\x45\\x14\\xe7\\x8f\\x00\\x34\\x51\\x8f\\xa1\\\n\\x56\\xb6\\xdf\\xd0\\x76\\xd0\\xf8\\x12\\x41\\x5e\\xc9\\xa3\\x35\\xf7\\xb2\\x18\\\n\\x44\\x24\\x28\\xd5\\x58\\xd5\\xcc\\x15\\xa9\\x25\\x05\\xf9\\x73\\x49\\x64\\x9c\\\n\\x34\\xc1\\x7f\\xfd\\x5b\\xdf\\xfa\\x06\\x26\\x7d\\x43\\xcd\\x60\\xe7\\xc0\\xfb\\\n\\xcb\\x56\\x78\\xd0\\xb8\\x3f\\x93\\x5a\\xaf\\x42\\x68\\x45\\x47\\xc0\\xd8\\xbf\\\n\\x60\\x78\\x7f\\x41\\xfa\\x86\\x9b\\xeb\\x47\\xde\\x7d\\x83\\xcb\\x96\\x9e\\x2f\\\n\\x91\\xdf\\x70\\xe3\\xfd\\x19\\x58\\x7d\\xb8\\x56\\xde\\xb1\\x75\\x9b\\xb2\\x4e\\\n\\xc7\\xfa\\x43\\xba\\xc7\\xa8\\x6c\\xbf\\xd1\\x5b\\xcb\\x16\\xd1\\x5f\\xdd\\x7d\\\n\\xb7\\x10\\x6f\\xd0\\x63\\x10\\xd5\\x1b\\x76\\x1f\\xd2\\xf6\\xdc\\x60\\x24\\x2c\\\n\\x29\\xc8\\x9f\\x4b\\x22\\x83\\x64\\xfc\\x8f\\xff\\xf8\\x8d\\x6f\\xda\\xc7\\x54\\\n\\x41\\xf1\\xfe\\xb2\\x17\\x1e\\x30\\xee\\x4f\\x27\\x32\\xd0\\xd4\\xae\\x6e\\x08\\\n\\x18\\xfb\\x17\\x10\\xef\\x2f\\xbf\\xbe\\xe1\\x79\\x3b\\xd8\\x3b\\x57\\xc6\\x86\\\n\\x67\\xae\\x10\\xef\\xe1\\xe6\\xc4\\xfb\\x33\\xb1\\xfa\\x30\\x5f\\xdb\\x28\\x37\\\n\\x5e\\x88\\x1d\\x38\\xb1\\x15\\xee\\x37\\xb0\\xd2\\x4c\\x9f\\x70\\x60\\xb1\\x5b\\\n\\x92\\x1a\\x60\\xd2\\xcd\\xa2\\xfe\\x04\\xd8\\x8b\\x89\\x66\\xca\\x52\\x82\\xfc\\\n\\x65\\x4a\\x64\\x92\\x0c\\xe6\\x9d\\x44\\x54\\xa9\\x2a\\x76\\xb1\\x73\\xe1\\xfd\\\n\\xf9\\x17\\x9e\\x1f\\xde\\x1f\\x09\\x2b\\xab\\x95\\xa4\\xdd\\x5a\\xc0\\xd8\\xbf\\\n\\xc0\\x78\\x7f\\x99\\x3c\\x77\\x98\\x9e\\xc5\\xf5\\xed\\x1b\\xd9\\x62\\x03\\xed\\\n\\x43\\xb2\\xcc\\x66\\x1d\\xda\\xb3\\xbf\\x00\\xef\\x4d\\x37\\xb1\\xfa\\x30\\xa2\\\n\\x80\\xe1\\x76\\xac\\x3f\\xfb\\x9b\\x9c\\x2a\\x8b\\xcc\\xc7\\xcc\\x8c\\x30\\xc6\\\n\\x0c\\xab\\x90\\x05\\x28\\x3a\\x22\\x0d\\x4b\\x09\\xf2\\xe7\\x21\\x11\\x23\\xa5\\\n\\xfa\\x6b\\x5f\\xfb\\xfa\\xd7\\x79\\x6f\\xbf\\xc1\\xe7\\xc2\\xfb\\xf3\\x2d\\x3c\\\n\\x68\\xdc\\x1f\\x0d\\xf8\\xe3\\x59\\x34\\x26\\x5d\\x98\\x18\\x24\\xf6\\x2f\\xa8\\\n\\xef\\x2a\\x74\\xcd\\x48\\x61\\xf3\\xbe\\x2c\\xcf\\xc7\\x8b\\x5b\\x33\\x92\\xf3\\\n\\xf9\\x86\\x0b\\xab\\xcf\\x89\\xf5\\x57\\xa1\\x3d\\xc3\\xf0\\x1b\\xc6\\x5e\\x66\\\n\\xc0\\xe2\\x74\\x2c\\x14\\x73\\x5a\\x7e\\x4e\\x26\\x73\\x71\\x99\\xcc\\x37\\xb0\\\n\\x07\\x3b\\x07\\xde\\x9f\\x6f\\xe1\\x41\\xe3\\xfe\\x68\\xc0\\x9f\\x2d\\x1a\\x33\\\n\\x50\\xec\\x5f\\xa9\\xd7\\xe1\\x86\\xdb\\x37\\xf2\\x2a\\x63\\xf6\\xad\\xa7\\xca\\\n\\x7e\\xbd\\xcb\\x01\\xf2\\x97\\x29\\x91\\x45\\xea\\xd7\\xbf\\xf5\\xdf\\xd9\\x5c\\\n\\xdc\\x93\\x9d\\x1d\\xef\\xcf\\xbf\\xf0\\x3c\\xf0\\xfe\\xec\\xc2\\x04\\x8a\\xfd\\\n\\x2b\\xf1\\x3a\\xdc\\xe9\\xeb\\x1a\\x73\\xf1\\x1b\\x99\\x29\\xca\\x01\\xf2\\xe7\\\n\\x2f\\x91\\x0a\\x73\\xf1\\x6f\\xd0\\xb9\\xb8\\x97\\xdf\\xe0\\x73\\xe1\\xfd\\xf9\\\n\\x15\\x9e\\x7f\\xdc\\x1f\\x15\\x26\\x50\\xec\\xdf\\x5c\\xfc\\x86\\x4d\\xd9\\x8c\\\n\\x5e\\x79\\x64\\x8e\\xe6\\xe8\\x3d\\x49\\x45\\xe3\\xfd\\xf1\\x47\\x8e\\x72\\x33\\\n\\xe4\\x4f\\x3e\\x2a\\x1f\\x39\\x72\\xb4\\xc2\\x28\\x87\\x44\\xd3\\xc9\\x2e\\x8b\\\n\\x06\\x15\\x4c\\x45\\xe3\\xfd\\xf1\\x47\\xb8\\xa3\\x23\\x33\\xe4\\xef\\xe8\\xb1\\\n\\x23\\x47\\x46\\x2a\\x8a\\x48\\xd3\\xb1\\xed\\xb1\\x0f\\xa1\\x4c\\xf6\\xb7\\xbf\\\n\\xfd\\x08\\xa1\\x6c\\xb9\\x7d\\x0b\\x3f\\xc6\\x8a\\x1e\\x19\\xa5\\x3b\\xa3\\x01\\\n\\x73\\x17\\xa4\\x41\\xbe\\xec\\x8a\\xa6\\xa2\\xf1\\x37\\xf8\\x23\\xd3\\xdd\\xe2\\\n\\x03\\xff\\x8d\\x1c\\xab\\x34\\xbf\\x31\\xe2\\x61\\x56\\x47\\x8e\\x1e\\x3b\\x76\\\n\\x2c\\x93\\x3d\\xf2\\xc8\\xa3\\x84\\x1e\\x7b\\x24\\x57\\x6e\\x0f\\xf6\\xe8\\xd1\\\n\\xa3\\x8f\\x7f\\xe7\\x71\\x9d\\x3e\\x05\\xff\\xdf\\x0d\\x92\\xbb\\x08\\x0d\\x82\\\n\\xb3\\x2b\\x9b\\x8a\\xc6\\x6d\\xe2\\x8f\\x28\\xc9\\xa3\\x33\\xe3\\xef\\x68\\xf2\\\n\\x89\\x23\\x47\\x92\\xa1\\xd0\\x93\\xa1\\x94\\x42\\x7a\\xac\\x25\\x11\\xb1\\xeb\\\n\\xa3\\x23\\xa3\\x47\\x47\\x47\\xdd\\xec\\xa3\\x8f\\x40\\xbf\\x78\\x8c\\x74\\x0e\\\n\\xbf\\xdc\\xfe\\x85\\x1f\\x4d\\x26\\xbf\\xf3\\xa8\\x9d\\xee\\x08\\x90\\xfb\\x89\\\n\\x27\\x46\\x46\\xf2\\xd3\\x80\\x3e\\x78\\x63\\x47\\x39\\x37\\x9b\\x73\\x32\\x4a\\\n\\x47\\xe1\\x9d\\x62\\x34\\x04\\xbf\\x01\\xad\\x4e\\x91\\xc9\\x1f\\xe7\\xdd\\x26\\\n\\x65\\xc6\\x7d\\x62\\xba\\xfb\\xc6\\xd8\\xb1\\x63\\x0a\\x35\\x62\\xf2\\x61\\xf8\\\n\\x53\\x64\\x6f\\x63\\x01\\x2c\\xc2\\x3f\\x96\\xcd\\xa0\\x1c\\xfb\\x8e\\x7c\\x34\\\n\\x04\\x3a\\x96\\x1c\\x1d\\x1d\\x35\\xcd\\xea\\xb1\\x51\\x62\\xe2\\xe1\\x58\\x92\\\n\\x6c\\x39\\xd9\\xa3\\xe0\\x37\\x1e\\x19\\x7d\\xc4\\xe1\\x39\\x9c\\xb9\\xfd\\x0b\\\n\\x1f\\x83\\x9d\\xdb\\x49\\x97\\xf8\\x0a\\x21\\xb2\\xf1\\xbd\\x8c\\xdc\\x9f\\x78\\\n\\x0a\\xbe\\xbe\\x0b\\x2a\\x8d\\x3d\\x7d\\x58\\x7e\\xe6\\x59\\x7a\\x6c\\xe4\\xb9\\\n\\xc7\\xf3\\xd3\\x80\\x83\\xad\\xd1\\xa3\\xb4\\x5e\\x38\\xd9\\xc5\\x1e\\xa5\\x87\\\n\\x46\\xfd\\xea\\x3c\\xc0\\xa9\\x02\\xd6\\xf8\\x68\\x28\\x57\\x86\\x90\\x4f\\xdf\\\n\\xc8\\xcf\\x6f\\xc8\\x60\\xe8\\xa0\\xac\\xe3\\x87\\x9f\\x1f\\xf5\\xa0\\x31\\x68\\\n\\x65\\xdf\\x55\\xe8\\xb5\\x9f\\x66\\x4a\\x8e\\x8d\\xc1\\x85\\x02\\x89\\x8e\\x8e\\\n\\x1d\\x1b\\xfd\\x8e\\xb7\\xb4\\x84\\xf9\\x5d\\x05\\xf8\\x90\\xd6\\x9f\\xc6\\x5e\\\n\\x50\\x42\\x11\\x88\\x38\\x08\\x22\\x11\\xdb\\x4b\\x26\\xbf\\xff\\x83\\x17\\x93\\\n\\xa3\\x2f\\xfe\\xe0\\xfb\\x2e\\x76\\x72\\x84\\xf8\\x8d\\x1f\\x3e\\xfa\\xa3\\x87\\\n\\x1f\\x7d\\xec\\x87\\x9e\\xb9\\xfd\\x0b\\x87\\xf6\\x49\\xfd\\x06\\xed\\x17\\xf4\\\n\\xeb\\x0e\\x47\\xee\\xb1\\xb1\\x4f\\x3f\\x3b\\x3a\\xfa\\xe3\\x0e\\xe5\\xd8\\xd8\\\n\\xf3\\x4f\\x8f\\x3d\\xfb\\xd2\\x73\\x54\\xf3\\xa3\\x3f\\x79\\x26\\x3f\\x0d\\xa8\\\n\\xbd\\x1e\\x7d\\x02\\xb6\\xe4\\x51\\xc5\\xc5\\x4e\\xd2\\x43\\x49\\x9f\\x6a\\x0b\\\n\\x52\\x9b\\x01\\x6b\\x3c\\x19\\xca\\x95\\xa1\\x35\\x90\\x0c\\xc1\\x6f\\x80\\xeb\\\n\\x84\\x2a\\x18\\xfb\\xe9\\xcb\\x30\\xd4\\x78\\xb9\\xf9\\xf0\\xcf\\x5e\\x39\\xa1\\\n\\xfc\\xbc\\xe3\\xf0\\xab\\xc9\\xe4\\xc9\\x97\\x9a\\x3b\\x9e\\x1e\\x07\\xff\\xfc\\\n\\x02\\x54\\xdc\\x4b\\x4f\\x41\\xa2\\xc3\\x3f\\x01\\xde\\x61\\x85\\x6c\\x12\\xe6\\\n\\xcf\\x5e\\x29\\xbd\\x8f\\x35\\x69\\x24\\x95\\x4c\\x2a\\xd4\\xc1\\x8f\\xa5\\x92\\\n\\xaf\\xe8\\xd2\\x82\\x08\\x27\\x38\\x4b\\xda\\x9f\\x8d\\xc1\\xe5\\x7c\\x21\\x91\\\n\\x32\\xa5\\x05\\x5e\\xb3\\x87\\xb4\\x8a\\xa2\\x84\\xe0\\xb3\\xc9\\x28\\x2a\\x69\\\n\\x8c\\x6b\\x46\\x47\\x5f\\xfb\\xc5\\x8f\\x1e\\xfb\\xe1\\xf7\\x5f\\x7c\\xec\\xb1\\\n\\x1f\\xfe\\xe2\\x35\\x27\\x1b\\x06\\x5b\\x74\\xbe\\xf1\\x7a\\xea\\x09\\xe8\\x1c\\\n\\xbf\\xf4\\xc8\\xed\\x5f\\x38\\x5c\\x9b\\xd1\\xd4\\xed\\xc6\\x70\\x8a\\xf5\\x0d\\\n\\x67\\xee\\x7f\\x7a\\x09\\xfe\\x3f\\xfd\\x4f\\x5c\\x72\\xec\\xe9\\x67\\x8f\\x1e\\\n\\xfb\\x67\\xa6\\xd9\\x13\\xc9\\x4f\\xff\\x73\\x5e\\x1a\\xc8\\x30\\xe3\\x4f\\x8e\\\n\\x25\\xe9\\xa0\\x46\\xc9\\x64\\x8f\\xd0\\x43\\xf4\\x9b\\x4b\\x1a\\x63\\x2f\\x63\\\n\\x10\\xc6\\x71\\x8a\\xbe\\x41\\x8f\\x25\\xf5\\x71\\x91\\x6f\\x1a\\xf6\\x65\\x26\\\n\\xb6\\x06\\x73\\xf0\\x23\\x27\\x43\\xb8\\x30\\x7a\\x7b\\x49\\x16\\xe6\\x37\\x6c\\\n\\x71\\x80\\xfc\\x91\\x04\\x1d\\x1f\\x3f\\xf5\\xab\\x89\\xb1\\xd1\\x37\\x5e\\x1e\\\n\\x7b\\xfc\\x57\\x4f\\xbf\\xc0\\x3d\\x9f\\x7c\\xfe\\xf0\\xe8\\xe8\\x33\\x4f\\x4d\\\n\\x9c\\xfc\\xd5\\xf3\\xc9\\x64\\xea\\x04\\x88\\xfe\\x93\\xe6\\x57\\x92\\x9f\\xb8\\\n\\x37\\xf9\\x5d\\xee\\x99\\x67\\xe1\\x20\\x61\\xbe\\x42\\x7f\\xcb\\x46\\x49\\x32\\\n\\x80\\x06\\x23\\x36\\x02\\xe6\\x6c\\xe4\\xa5\\x37\\x5f\\xd1\\xa5\\xfd\\x17\\xa7\\\n\\xb4\\xc0\\x3c\\x01\\xc3\\x83\\x7f\\x6e\\x7e\\x65\\xf4\\x27\\xf7\\x26\\x5f\\x00\\\n\\x69\\x9f\\x65\\xd2\\x4e\\x58\\xd2\\x8e\\x8c\\x42\\x67\\x2f\\x5e\\xa0\\x14\\xa9\\\n\\xb7\\x11\\xc3\\xf2\\xa7\\x92\\x2f\\x7e\\xfb\\xd7\\xaf\\xfd\\xfa\\x17\\xdf\\x87\\\n\\xaf\\xb7\\xc0\\x7d\\xd8\\xd9\\x50\\x85\\x64\\xb2\\xf1\\xaf\\x93\\x93\\x0f\\x4f\\\n\\xbd\\xad\\x7b\\x0e\\x67\\x6e\\xff\\xc2\\x89\\xdb\\xa0\\x7e\\xe3\\x8b\\xb4\\x6b\\\n\\x90\\xef\\xcf\\xd9\\x73\\x8f\\x8c\\xfe\\xea\\x7f\\x8c\\x8e\\x3e\\x4e\\xb4\\x26\\\n\\x3d\\x22\\xf5\\xf4\\x9b\\x34\\xff\\x13\\xa3\\xcf\\x3f\\x95\\x8f\\x06\\x23\\x4a\\\n\\x8a\\x74\\x06\\x2a\\xec\\x08\\x97\\xc9\\x66\\x87\\xe8\\x37\\x34\\x5f\\xd2\\x93\\\n\\xc0\\xbd\\x24\\xf5\\x0d\\xd6\\xd6\\x09\\x5f\\x96\\xd9\\x11\\x9a\\x9f\\x7c\\xb9\\\n\\xd3\\x98\\x2c\\x33\\xb1\\x99\\x86\\x6e\\x24\\xb8\\xf0\\xda\\x4b\\xb1\\x78\\x7f\\\n\\x32\\x3e\\x92\\x1a\\x4d\\xa5\\x46\\x7f\\x73\\xf8\\xf1\\x54\\xf2\\x71\\xe5\\x78\\\n\\x7a\\xfc\\xd5\\xc3\\x27\\xe4\\x67\\xa1\\x55\\x25\\x4f\\x2a\\xcf\\x8e\\x25\\x5f\\\n\\xbd\\x37\\x35\\x32\\x7a\\x42\\x4e\\x8d\\xa4\\xee\\xfd\\x71\\xea\\xa9\\xe7\\xc7\\\n\\x4f\\x70\\xc7\\xc7\\xd2\\x3f\\xbe\\x37\\x75\\x92\\x3b\\x39\\x36\\x02\\xbf\\xc9\\\n\\x72\\xfd\\x8d\\x26\\x53\\x23\\xe3\\x32\\x18\\x31\\x72\\xc5\\x7e\\x73\\xef\\x93\\\n\\xc9\\x14\\x48\\x9b\\x1c\\xff\\xb1\\x2e\\x2d\\x08\\xf4\\xec\\xd8\\xc8\\xab\\x87\\\n\\x81\\x7d\\x82\\x4b\\xa5\\xc7\\xef\\x7d\\x75\\xf4\\xa9\\xe7\\xc7\\x40\\xda\\x24\\\n\\x93\\xf6\\x59\\x2a\\xad\\x4e\\x49\\x50\\xa8\\x68\\xa2\\x86\\x95\\x34\\x1d\\x7d\\\n\\xef\\x2b\\x2f\\x8e\\xa6\\xde\\xf9\\xe1\\x23\\x8f\\xbc\\xf5\\xce\\x58\\xfa\\xfb\\\n\\x5f\\xb1\\xb3\\x47\\xa1\\xf6\\x46\\xa1\\x73\\xbc\\x3e\\x35\\x39\\x39\\x39\\xf5\\\n\\xf0\\xa3\\xdf\\xfe\\x65\\x66\\x6e\\xff\\xc2\\xe1\\xda\\xc0\\xd6\\x67\\x6d\\x5e\\\n\\xe3\\xd1\\x2f\\xde\\xe1\\xc8\\x7d\\x52\\x39\\x9e\\xa2\\x5a\\x8f\\x8e\\x8d\\xa4\\\n\\x93\\xbf\\x6d\\x7e\\x97\\xe4\\x1f\\x49\\xa5\\x7e\\xf7\\xe9\\x7c\\x34\\x20\\xf6\\\n\\x1a\\x6a\\x16\\x84\\x05\\xff\\xcc\\x65\\xb0\\x93\\xf4\\x10\\xfd\\x4e\\xd2\\xb6\\\n\\x4b\\x36\\x64\\xba\\x01\\x19\\x46\\xc9\\x26\\xa4\\x1f\\xa5\\x3c\\x9a\\x86\\xe4\\\n\\x26\\x39\\x5c\\x69\\x4c\\x96\\x95\\x58\\xb6\\x15\\x48\\x9c\\x47\\xf1\\x57\\x86\\\n\\x49\\x9f\\x2a\\xd0\\x6f\\x58\\x71\\x80\\x03\\xfc\\x11\\x05\\x44\\x3f\\x21\\xbd\\\n\\x00\\x75\\x73\\x9c\\x4b\\x27\\xa1\\xdd\\xbc\\xa0\\x24\\xd3\\xef\\x72\\xa9\\x17\\\n\\xb8\\xe6\\xe6\\x0e\\x49\\x06\\x95\\x5e\\xe0\\xa0\\xc2\\x9e\\x7e\\x29\\xdd\\x71\\\n\\x02\\x5a\\xe1\\x2b\\xa9\\xe4\\xbb\\x0a\\xfc\\x2e\\x01\\xae\\x52\\xb6\\xae\\xc1\\\n\\xb4\\x4d\\xd2\\x0b\\x95\\x3e\\x7e\\xef\\x77\\xc7\\x53\\x49\\x26\\x6d\\x82\\x49\\\n\\x9b\\x24\\xd2\\xd6\\x37\\x83\\xf5\\x4b\\x11\\xa7\\xc0\\xa4\\x85\\x4d\\x18\\x47\\\n\\x51\\x69\\x81\\xd9\\x61\\xba\\xeb\\xd4\\x0b\\x61\\x78\\x6e\\x68\\xf3\\xe0\\x2d\\\n\\x8c\\x51\\xd1\\x58\\xfa\\xf7\\xc9\\x5f\\xbf\\xf3\\xce\\x6b\\xaf\\xc1\\x7f\\xf2\\\n\\xd7\\x69\\x3b\\x9b\\x6e\\x3d\\xfb\\xc8\\x8f\\x1e\\xfd\\x57\\xda\\x39\\xde\\x86\\\n\\xce\\x91\\x99\\xdb\\xb7\\x70\\xd0\\x19\\x34\\xff\\x8e\\xad\\x6b\\x80\\xdf\\x70\\\n\\xe4\\x3e\\x0e\\x3a\\x52\\xad\\xe1\\x0b\\x26\\xe3\\x6c\\x24\\x05\\xd9\\x7e\\xb2\\\n\\x24\\x1f\\x0d\\x52\\x1c\\x6d\\xc4\\xf4\\x6c\\x29\\x2e\\x83\\x3d\\x4a\\x0f\\xd1\\\n\\xef\\x14\\x6b\\xbb\\x1c\\x6d\\x7a\\x64\\x0c\\x44\\xae\\x8c\\x42\\x3b\\x52\\x8a\\\n\\xf1\\x92\\x2c\\x3f\\xf9\\x22\\x0c\\x76\\xc4\\x4c\\x63\\xb2\\xcc\\xc4\\x0a\\x2d\\\n\\x87\\xa3\\x89\\xc7\\x52\\xa9\\xb0\\xee\\x53\\x11\\x69\\x0b\\xf2\\x1b\\x66\\x1c\\\n\\x20\\xc6\\x3c\\xb1\\x1a\\x13\\x3f\\x7d\\x15\\xe4\\x1c\\x7f\\x32\\xf1\\x9d\\xe4\\\n\\xf8\\xab\\x1d\\x27\\xe4\\xd1\\xe4\\x09\\x25\\xf5\\xa4\\x72\\x32\\x99\\x7c\\xe5\\\n\\x38\\x1b\\x53\\x8d\\x27\\x4f\\x34\\xbf\\xfa\\x53\\xd8\\x94\\x8f\\xa7\\xd2\\x60\\\n\\x92\\x9e\\x4c\\x9c\\x84\\x6c\\xc7\\xcb\\xd7\\x37\\xe0\\x6f\\x84\\xcc\\x37\\x40\\\n\\xce\\x67\\x7f\\xfa\\xbb\\x27\\x46\\xd3\\x36\\x69\\x41\\x40\\x2a\\x6d\\x6a\\xe2\\\n\\x53\\x29\\x22\\x22\\x54\\xf9\\xbb\\xcd\\x3f\\xa6\\xd2\\x7e\\x6a\\x3c\\x49\\xa4\\\n\\xa5\\xcc\\xe3\\xba\\x49\\xa1\\xe9\\x43\\x30\\x4c\\xf4\\xdf\\xb0\\xfc\\x49\\x98\\\n\\x6f\\xbc\\xf5\\xd6\\x0f\\x5e\\x7c\\xf1\\x07\\x6f\\xbd\\xf5\\x8b\\xd7\\x9c\\x6c\\\n\\x6a\\x39\\xc9\\xb0\\x0a\\x3a\\xc7\\x1f\\xa6\\x26\\x1f\\x7d\\xe4\\x97\\xa9\\x51\\\n\\x67\\xee\\x2c\\x85\\x8f\\x42\\xdd\\xd3\\xbe\\xf1\\x8e\\xde\\x35\\x1e\\xfd\\x9c\\\n\\xa3\\xf0\\xe3\\xf2\\x04\\xd9\\x85\\x0b\\x96\\x3c\\xf9\\xdc\\x9b\\x7f\\x34\\x4b\\\n\\x38\\xa1\\xe4\\xa1\\xc1\\x28\\x69\\xaa\\xb4\\x0d\\xeb\\xdb\\x1e\\x6c\\xf2\\x6d\\\n\\x6d\\xa4\\x59\\x19\\x9c\\x95\\x7e\\x94\\xed\\x18\\xbf\\x9c\\x99\\xcb\\x2a\\xd3\\\n\\x64\\x39\\x13\\x5b\\x2c\\x73\\xb7\\x78\\x1a\\x4d\\x15\\xe4\\x37\\x6c\\x71\\x80\\\n\\x88\\xf8\\x8d\\xa9\\x97\\xfe\\x69\\x8a\\x56\\xc4\\x73\\x2f\\x3f\\xfb\\xe4\\x9b\\\n\\x3f\\x7b\\x97\\x3b\\x95\\x02\\xbf\\x91\\x7a\\xee\\xa9\\x93\\x27\\xdf\\x78\\x03\\\n\\x18\\xef\\x12\\x9b\\x94\\xfa\\xe9\\x4f\\x7f\\x4e\\x36\\x5f\\x9a\\x78\\x92\\x6c\\\n\\xbc\\x01\\x23\\xf8\\x67\\xde\\x08\\x4b\\x91\\x5c\\x94\\x9e\\x62\\xff\\x47\\x8e\\\n\\xc0\\xf7\\x4b\\xbf\\x4d\\xa5\\xa6\\x92\\xba\\xb4\\xff\\x62\\x93\\x76\\x42\\x97\\\n\\x96\\x28\\x63\\x4a\\xfb\\x47\\xb2\\xf1\\x1c\\x48\\xfb\\x86\\x21\\xed\\xa9\\xd4\\\n\\x89\\xba\\x93\\x21\\x88\\x44\\x04\\x32\\x5b\\x77\\x7a\\xea\\xd4\\x6b\\xbf\\xff\\\n\\xfd\\xef\\xd3\\xa9\\xdf\\xbf\\xf8\\xeb\\xd7\\xa6\\xec\\x6c\\xfa\\x0b\\xc3\\xbc\\\n\\xb1\\x1f\\x42\\xe7\\x98\\x9c\\x9a\\xfc\\xd1\\x63\\xbf\\x74\\xe5\\xf6\\x2f\\x1c\\\n\\x7e\\x93\\x63\\xb7\\xdb\\xbc\\xc6\\xa3\\x8f\\x9e\\x76\\xe4\\x26\\x63\\x2a\\x76\\\n\\x8d\\x52\\x5f\\x79\\x39\\x6d\\x15\\x61\\x0d\\x21\\x03\\x68\\x70\\x2a\\x45\\x2b\\\n\\x8d\\x1a\\xfa\\x53\\x7a\\xfb\\x34\\xd9\\x53\\xe4\\x50\\x9a\\x7e\\x33\\x1e\\xdd\\\n\\x60\\x5d\\x8f\\x33\\xd2\\x2b\\xec\\xf7\\x54\\xca\\xf8\\xe5\\x52\\x46\\x62\\xc5\\\n\\x4c\\x63\\xb2\\x9c\\x89\\x53\\xc6\\x59\\x4f\\x9d\\x52\\xc2\\xe9\\x1b\\x4c\\xda\\\n\\x42\\xfc\\x86\\x73\\xad\\x61\\x7a\\x3c\\x55\\xa7\\x34\\x2b\\x4a\\x7d\\x73\\xea\\\n\\xcc\\xcb\\xf2\\xe1\\xa7\\xc9\\x78\\x2a\\xf5\\x6e\\x5d\\x2a\\x75\\xe6\\xa5\\xe6\\\n\\xe6\\x67\\xfe\\x98\\x4e\\xd3\\x7a\\x4f\\xa5\\x7e\\x9e\\x00\\xa3\\xf4\\xae\\xf2\\\n\\xb4\\x74\\xf8\\x5f\\xd2\\xa9\\xf4\\x99\\x97\\x3b\\xea\\x9f\\xf9\\x63\\xb1\\x3a\\\n\\x04\\xa5\\xf1\\x34\\xfd\\xe7\\x8e\\x1c\\x19\\x4f\\xa5\\xe4\\xe6\\x25\\x72\\x1d\\\n\\x91\\xf6\\x0d\\xa9\\xd9\\x2e\\xad\\xdc\\xf1\\xcc\\x93\\x44\\x5a\\x3a\\x99\\xf8\\\n\\xb9\\x7c\\x1c\\x36\\x95\\xe7\\xa9\\xb4\\xa0\\x58\\x47\\xf3\\x33\\x4f\\xb2\\x6a\\\n\\x83\\xbf\\x67\\xdf\\x54\\x8a\\xed\\x1c\\xe3\\xe3\\xc9\\x71\\x52\\x98\\xde\\xba\\\n\\xc7\\xd3\\xe9\\xf4\\x2b\\xa3\\x23\\x63\\xa9\\x74\\x3a\\x99\\x1a\\x4f\\xda\\xd9\\\n\\xe3\\xb4\\xc1\\x26\\xd3\\x63\\xa9\\x5f\\x92\\xce\\x01\\x5e\\x63\\x14\\x7a\\x8a\\\n\\x23\\x77\\x96\\xc2\\x21\\x77\\x7a\\xec\\x7b\\x46\\xdf\\x78\\xe7\\x1d\\xf8\\xba\\\n\\x2b\\x65\\xb2\\x41\\xdd\\xd4\\x9b\\xbf\\x49\\xd1\\x6b\\x94\\x4e\\x76\\xc8\\x4b\\\n\\x14\\x45\\x49\\xa5\\x7f\\x05\\xff\\xe9\\xa7\\x9f\\xca\\x4b\\x83\\x71\\x85\\xdc\\\n\\x4b\\x82\\x0d\\xf8\\x56\\x48\\x29\\x16\\x9b\\xca\\x2f\\x2b\\x8c\\x6d\\x76\\x89\\\n\\x14\\x49\\xa5\\xb7\\x64\\x7d\\xc3\\xf4\\x54\\x34\\x2d\\x4b\\xc3\\x65\\xa6\\x21\\\n\\x07\\x14\\x47\\x62\\x7a\\x3a\\x52\\x28\\x50\\x2a\\xa7\\xb7\\x0b\\x42\\x50\\xbd\\\n\\xb4\\xbc\\x02\\xfc\\x86\\x73\\x3d\\x95\\x42\\x6a\\x80\\x14\\x08\\xa6\\x6f\\x7c\\\n\\x6a\\x62\\x2a\\x4d\\xf7\\x4f\\x8d\\xa7\\xa6\\xc6\\x53\\xe9\\x49\\xda\\xbb\\x29\\\n\\xfd\\xf6\\x39\\xda\\xf0\\xa6\\xa0\\x15\\xa4\\xa1\\x29\\x9c\\x9a\\x20\\xfc\\x32\\\n\\x11\\x91\\x8e\\x7c\\xe0\\x3a\\x4e\\x4c\\xd2\\xad\\x74\\xea\\xd4\\xd4\\x14\\xdd\\\n\\x32\\xa4\\x3d\\x03\\x76\\x6e\\x9c\\x49\\x0b\\x66\\xe3\\x37\\xcf\\xa5\\x88\\x3f\\\n\\x99\\x48\\xa7\\x89\\x9c\\xa7\\xa0\\x8c\\xc9\\x71\\x5a\\xd4\\xc4\\xe4\\xa9\\x34\\\n\\xcd\\x58\\x1c\\x25\\x49\\x27\\x4b\\x9f\\x4a\\x93\\xf6\\x49\\x04\\x9c\\x98\\x04\\\n\\xc1\\xa0\\x6c\\x22\\x18\\x9c\\xce\\xc6\\x06\\x71\\x88\\xcc\\x20\\x22\\x74\\x8e\\\n\\x7f\\xfb\\xb7\\xd7\\x7f\\x99\\x1a\\x9f\\x98\\x74\\xe6\\xce\\x52\\x78\\x0a\\xc4\\\n\\x4f\\x7f\\x96\\xf6\\x8d\\x77\\xde\\x61\\x0f\\xff\\x4e\\xa7\\x4c\\x36\\xe9\\x94\\\n\\xbf\\x7d\\x39\\x7d\\x8a\\x68\\x0d\\x6a\\x81\\x9a\\xa4\\x52\\x7e\\xd7\\x3c\\x35\\\n\\x3e\\x7e\\xef\\xbb\\x53\\x41\\x35\\x00\\xf1\\x98\\xc3\\x39\\x95\\x4e\\x1b\\x9e\\\n\\x27\\x83\\x4d\\x0f\\x93\\x8d\\x53\\x69\\x9a\\x5a\\x3f\\xc2\\xf6\\xc8\\x05\\xa0\\\n\\x3c\\x5a\\x05\\x3a\\xcb\\x9d\\xc6\\x62\\xb9\\x12\\x3b\\x73\\x85\\xd0\\x5c\\x48\\\n\\x81\\x21\\x3c\\xdf\\x80\\xb2\\xc6\\xc7\\x4f\\x4d\\x4e\\x8c\\x4f\\x40\\xcf\\x18\\\n\\x9f\\x20\\xad\\x08\\xbe\\x60\\x93\\xd4\\x43\\xfa\\x0c\\xd9\\x99\\x9c\\x38\\x75\\\n\\xe6\\xf8\\x9b\\xbf\\x85\\xc6\\xf7\\xae\\x3c\\x01\\x7b\\x53\\x13\\x93\\x67\\x52\\\n\\x13\\xa7\\xa6\\x48\\x83\\x28\\xc3\\x5f\\x5a\\x97\\x29\\x0d\\xf3\\x8d\\xf4\\x04\\\n\\xdd\\x4d\\x13\\x79\\x27\\x4e\\x19\\x95\\x31\\x35\\x0e\\x3d\\x23\\x3d\\x3e\\x45\\\n\\xa5\\x1d\\x9f\\x3c\\x79\\xe6\\xdd\\x37\\x7f\\x0b\\x62\\xbe\\x5b\\x07\\x09\\xcf\\\n\\x4c\\x4d\\x9e\\x61\\x65\\xb0\\xbe\\x71\\x86\\x74\\x6c\\x50\\xb5\\xa8\\xda\\x3f\\\n\\xc5\\x4a\\x98\\x9c\\xa0\\xad\\x1b\\x8a\\x9f\\x98\\x98\\x80\\xb3\\x4c\\x90\\xda\\\n\\x81\\xba\\x74\\xb2\\x53\\x94\\x47\\xce\\xfd\\xd6\\x63\\x30\\xd7\\x98\\x22\\x69\\\n\\xa7\\xd2\\x26\\x3b\\x6b\\xe1\\xa7\\xc6\\xe1\\x2a\\x7c\\xef\\x8b\\xb6\\x25\\x23\\\n\\x5f\\xfc\\x7c\\xda\\x62\\xc3\\xc6\\xf8\\xa7\\x8f\\xd3\\x6b\\x74\\x86\\x34\\x2b\\\n\\x10\\x60\\x2a\\xfd\\xb3\\xdf\\x9d\\x9a\\xfa\\xdd\\x1b\\xa9\\xc0\\x1a\\x4c\\x4c\\\n\\x4c\\xf8\\xb2\\x4f\\xda\\xd8\\x6c\\xc3\\x99\\xda\\xd8\\xa3\\xbf\\x13\\x94\\x5c\\\n\\x65\\xe9\\xc7\\x2c\\x96\\x2b\\xb1\\x57\\xae\\x62\\x08\\x5a\\xe7\\x44\\x3a\\x84\\\n\\xe7\\xe2\\x5c\\x9a\\x4b\\x37\\x9f\\x51\\xd2\\xca\\xa4\\x32\\xc1\\x9d\\xaa\\x1b\\\n\\xaf\\x83\\x6d\\x38\\x36\\xa9\\x7f\\x4f\\x70\\xe4\\x6f\\x52\\x91\\xeb\\xd2\\xdc\\\n\\x84\\x0c\\xae\\x9b\\xee\\x43\\x6a\\xb2\\xaf\\x94\\xe3\\x8f\\xc8\\x41\\x64\\x9a\\\n\\xe4\\x98\\x21\\x9d\\xa4\\x75\\x39\\x4e\\x1c\\x02\\x38\\x0b\\xf2\\x0b\\x1f\\x66\\\n\\x24\\x4f\\x41\\xd3\\x38\\x33\\x01\\x9d\\x62\\xc9\\x4b\\xd0\\xaf\\x27\\xde\\x55\\\n\\xe8\\x45\\x48\\xa7\\x4f\\x4e\\x92\\x54\\xe9\\x25\\x40\\xcd\\xcd\\xcd\\x4b\\xce\\\n\\x90\\x22\\xa6\\x8a\\xf8\\x40\\x87\\x23\\x5f\\x50\\xfa\\x91\\xd3\\xe9\\x53\\xf0\\\n\\x0b\\x8e\\x00\\xda\\x30\\x9c\\x66\\x9c\\xee\\x59\\xec\\x23\\xd0\\x5f\\x89\\x3f\\\n\\x21\\xe6\\x1f\\xec\\xd9\\x5b\\xbf\\x4c\\x81\\x30\\xe0\\xd8\\x8c\\xdc\\xd9\\x0b\\\n\\x3f\\x42\\x8d\\xeb\\xd4\\x91\\xef\\x7d\\xef\\x63\\x77\\xdc\\x71\\x17\\xfc\\x1d\\\n\\xb9\\xeb\\xae\\xfb\\x3f\\x6f\\xb1\\xa1\\xac\\x89\\xa9\\xdf\\xbd\\x34\\x01\\x32\\\n\\x90\\xf3\\xc3\\xb9\\xc6\\x27\\xcf\\xd0\\xc6\\xf6\\xc6\\xf1\\x74\\x50\\x0d\\x8e\\\n\\x9c\\x22\\x16\\xe8\\xcc\\x24\\xa9\\x95\\xa9\\x33\\x93\\xfa\\x9f\\xce\\x9e\\xb2\\\n\\xb3\\x89\\x2e\\xc4\\xe0\\x8f\\x5b\\x19\\x74\\x26\\xcd\\x49\\xfc\\x80\\x91\\x78\\\n\\xca\\x9d\\x46\\xff\\x01\\x46\\x66\\xe2\\x49\\x7a\\x29\\x59\\xea\\xa2\\xae\\x8b\\\n\\xae\\xdb\\x29\\xf2\\x15\\x86\\xdf\\x00\\x3a\\x6d\\x8b\\x08\\x39\\x9d\\x67\\x04\\\n\\xc9\\x34\\xd0\\xe9\\xd3\\xa7\\xcd\\x2f\\xfa\\x7b\\xda\\x12\\xdd\\xd8\\x39\\xed\\\n\\x95\\xcd\\xa6\\x23\\xcd\\x59\\xe8\\x47\\x2f\\xfe\\x74\\x46\\xb1\\x6c\\xe7\\xf4\\\n\\x11\\x07\\xdb\\xb7\\x62\\x0d\\x39\\xb3\\x16\\xee\\x7b\\x3d\\x9c\\x97\\xec\\xf4\\\n\\xe9\\x8c\\x23\\x46\\xc5\\x04\\xd2\\xc0\\x2a\\x26\\xa3\\xfc\\xd3\\xee\\xb3\\x9e\\\n\\x76\\xd4\\xf7\\xe9\\xd3\\x9e\\x4a\\x9e\\xd6\\x45\\x72\\xa5\\x39\\xed\\x38\\x49\\\n\\x46\\xc5\\x79\\xd6\\x46\\x41\\x57\\x87\\x51\\xf1\\x7e\\x83\\xc6\\xc8\\x52\\x44\\\n\\x70\\xb2\\xa1\\x62\\xfd\\xf5\\x31\\x2c\\x89\\x11\\x55\\xa9\\xb9\\xde\\x54\\xa0\\\n\\x65\\xc1\\x9e\\x0d\\x9f\\x74\\xf9\\xf0\\xc0\\x4e\\x43\\x32\\x06\\x7b\\x8e\\xdc\\\n\\x2f\\x50\\xc0\\xe6\\x97\\x8d\\x54\\xfa\\x3a\\x59\\xfa\\x5e\\x12\\xfa\\x8e\\x95\\\n\\x83\\xc5\\x89\\xa3\\x62\\xe3\\x0b\\xef\\xdc\\x49\\x22\\x29\\x35\\xe3\\x34\\xe4\\\n\\x1d\\x3c\\x76\\xf6\\xc0\\x00\\x39\\xa5\\x01\\xd8\\x87\\x8c\\xaa\\x3d\\x78\\x90\\\n\\xb1\\xdb\\x76\\xe6\\x28\\x5c\\x85\\x94\\x07\\x79\\xfa\\x2e\\x18\\xfa\\x2e\\x11\\\n\\x02\\x93\\x7e\\xd0\\x76\\x6e\\x60\\xda\\x10\\xaf\\x41\\x33\\x35\\xd8\\x1b\\x25\\\n\\x9c\\x1a\\x80\\xdc\\x90\\x51\\x65\\x55\\x44\\x9a\\x00\\x36\\xd9\\xbc\\xc5\\x3e\\\n\\xa8\\xc7\\xe6\\xaa\\xaa\\x2d\\x03\\xdb\\xe4\\x59\\x68\\xae\\x6a\\xec\\x83\\x98\\\n\\xbc\\xe6\\x4a\\x43\\x7f\\x54\\x2a\\xb3\\x23\\x31\\x61\\x91\\x70\\x61\\x3d\\x75\\\n\\xb1\\x04\\x75\\x46\\x4b\\x2f\\xda\\x6f\\x20\\xb3\\xb5\\xa9\\x0e\\xc1\\xd8\\x9e\\\n\\xd1\\x53\\xb0\\xd1\\x20\\x31\\x6f\\x34\\xbc\\x80\\x17\\x21\\x3c\\x22\\xef\\x7e\\\n\\xda\\x39\\x60\\x81\\x41\\xaa\\xd6\\x16\\xa9\\x60\\xec\\x82\\x8b\\xc4\\xfa\\x8b\\\n\\x79\\x0c\\x75\\x90\\xf7\\x1b\\x4a\\x0a\\x21\\x6c\\x54\\x16\\xda\\xb9\\xd3\\xaa\\\n\\x18\\xfd\\x9c\\x36\\x36\\x6e\\x1b\\x20\\x6f\\xfd\\xa0\\x2d\\xc3\\x8c\\xeb\\x56\\\n\\x55\\xe3\\x1e\\x3a\\x1e\\x68\\x53\\xb3\\x14\\x0e\\xa6\\x80\\xbc\\x11\\x26\\x33\\\n\\x89\\xc9\\xde\\xe9\\xec\\x59\\x46\\x3a\\x6c\\x07\\xcc\\xcc\\xa9\\x01\\xb5\\x37\\\n\\xbe\\x6c\\x15\\x65\\xb0\\xb1\\xe7\\x9e\\xaa\\x7f\\x79\\x9d\\x17\\x3b\\xa5\\xb3\\\n\\x72\\xa8\\xde\\x65\\x16\\x4f\\xb4\\xc6\\xd4\\xc2\\xf0\\xc5\\x73\\xe2\\xff\\xd9\\\n\\x5f\\x13\\x63\\x3f\\xe6\\x88\\xe5\\x47\\xac\\x49\\x94\\xfe\\xcf\\x2e\\xec\\x60\\\n\\xe6\\x05\\xc0\\xbc\\xdd\\xd8\\x60\\x55\\xaf\\x76\\x4c\\x9d\\x0a\\x79\\xb7\\x82\\\n\\x21\\xb4\\xa3\\x2f\\x93\\x97\\x73\\x55\\xe3\\x42\\xbf\\x6d\\x27\\x37\\x5f\\x93\\\n\\x63\\x55\\x0a\\x72\\xb0\\x07\\x0d\\x96\\xd5\\x61\\x6d\\xec\\xc1\\x81\\xac\\x85\\\n\\x67\\x7b\\xc7\\x87\\x7e\\x6e\\xcf\\x06\\x46\\xad\\x02\\x1f\\x50\\x83\\x41\\xa3\\\n\\x05\\xa8\\xaa\\xab\\x69\\xab\\x36\\x36\\xad\\x57\\xd5\\xde\\xf3\\xd8\\x1e\\xaf\\\n\\x9b\\x29\\xd5\\x6e\\xae\\xac\\x12\\x8c\\x34\\xb6\\x7a\\x70\\x25\\x36\\x37\\xc1\\\n\\xc6\\x15\\x71\\x5d\\xe8\\xb7\\x6a\\x16\\x18\\x8a\\xdf\\xc8\\x24\\xaf\\xb7\\x74\\\n\\x78\\x1f\\x2b\\xc7\\x9f\\xfd\\x84\\x03\\x83\\x1e\\x22\\x78\\x08\\x89\\xdc\\xf2\\\n\\x3a\\x0b\\x22\\x43\\x94\\x42\\xbf\\xed\\x45\\xda\\x9a\\x8e\\x57\\x95\\xb9\\xde\\\n\\xd2\\x81\\xf8\\x8c\\xdc\\xd9\\x0a\\xc7\\x59\\xf0\\xfe\\x32\\xcf\\x9d\\x51\\x0d\\\n\\xd4\\x26\\x14\\xad\\x01\\xef\\x66\\xa3\\x2c\\x7b\\xbe\\xd5\\x10\\x9c\\x8a\\xb9\\\n\\x2e\\x28\\xe3\\x9d\\x83\\xa5\\xf1\\x1b\\xc5\\x52\\xa9\\xb0\\xf6\\x72\\x5c\\xc7\\\n\\xd0\\xa5\\xcd\\xad\\x87\\xbb\\xb7\\x66\\x08\\x3c\\x58\\x44\\xee\\xea\\x1c\\x78\\\n\\x7f\\x03\\xa1\\xe0\\xfd\\xb1\\x52\\x3c\\xdf\\x86\\x1e\\xda\\x49\\xa6\\x85\\x8a\\\n\\xf7\\x1b\\x0c\\x37\\x76\\xfe\\xc7\\x97\\xd6\\x6f\\xbb\\x84\\x1d\\x1a\\xd2\\x5f\\\n\\x7c\\x46\\x21\\x2c\\x36\\x7f\\x7c\\xe3\\x92\\x55\\x1f\\xf1\\x3d\\x3f\\xa4\\x19\\\n\\x72\\xbd\\x27\\xad\\x64\\x58\\x7b\\x58\\xef\\x1b\\x65\\x92\\x36\\x80\\x1e\\xe5\\\n\\xc1\\x17\\xcf\\x8e\\xf7\\x57\\x1c\\xe9\\xa5\\xd8\\xdf\\x63\\xcb\\xb9\\xd9\\x33\\\n\\x91\\x8a\\xf6\\x1b\\x0c\\xc7\\x69\\xb5\\xb4\\x4e\\x43\\xab\\x1b\\x3f\\xc9\\xaa\\\n\\x43\\x7f\\xf3\\xe7\\x30\\xc7\\xe3\\xbd\\xc0\\xd0\\x3a\\x25\\xbf\\xe6\\x46\\xd2\\\n\\xb8\\x5e\\x94\\x56\\x3a\\xac\\xbd\\x6a\\x6a\\xc4\\xca\\x25\\x6d\\x10\\x3d\\x1c\\\n\\x8e\\xc1\\x0d\\x30\\x5e\\xdc\\x4b\\x03\\x83\\xe1\\xfd\\x15\\x49\\x7a\\x29\\xfa\\\n\\xeb\\x9a\\xe9\\x21\\xce\\xcd\\x9e\\x89\\x14\\xce\\x7c\\x03\\xc5\\x5b\\xc8\\xeb\\\n\\x85\\xf7\\xae\\xc3\\x9b\\xb9\\x4d\\x4b\\xae\\x84\\x32\\x85\\x2b\\x36\\x6e\\xdf\\\n\\x9a\\x00\\x46\\x2d\\x99\\xd3\\xd5\\xde\\x69\\xa0\\xeb\\x99\\x20\\x7b\\x9b\\x96\\\n\\x7c\\x52\\x4f\\x03\\xc6\\xd8\\xc0\\xdc\\x1b\\xfc\\xf8\\xd2\\x25\\x8b\\x76\\x51\\\n\\xac\\x3d\\x03\\x7e\\xef\\xfa\\x1b\\xeb\\x17\\x86\\xf6\\x2a\\x45\\x66\\xc4\\xca\\\n\\x25\\x6d\\x10\\xcc\\x40\\x9b\\x59\\xf5\\x02\\x18\\x0f\\xc9\\x6f\\x64\\xc5\\xfb\\\n\\x0b\\xa5\\x4e\\x29\\x8a\\x25\\x37\\xe7\\x37\\xec\\x71\\x7f\\xd5\\xd4\\x6f\\x88\\\n\\xf2\\x01\\xfa\\xba\\x4c\\x15\\x4c\\x65\\xad\\xba\\x17\\x2c\\x70\\xac\\x57\\x13\\\n\\x76\\x70\\xfc\\xca\\x04\\x7d\\xa5\\x2a\\xc1\\x39\\x63\\xe8\\x7a\\x06\\xc8\\x1e\\\n\\x24\\xd3\\x58\\x1a\\x30\\xc6\\xc8\\xc0\\xdc\\x5b\\xd5\\xa0\\x69\\xad\\x12\\xc1\\\n\\xda\\x33\\xe0\\xf7\\xae\\x95\\xf7\\x69\\xbd\\x01\\x50\\xe7\\x82\\x11\\x33\\x62\\\n\\xe5\\x92\\x36\\x08\\x66\\xa0\\x65\\x56\\x3d\\x01\\xc6\\x43\\xf3\\x1b\\xfe\\x78\\\n\\x7f\\xe1\\xd4\\xa9\\x7f\\xdf\\x98\\x65\\x7e\\xc3\\x8c\\xfb\\xeb\\xe8\\x90\\xc8\\\n\\x7c\\x03\\x5a\\x0b\\xd8\\xcc\\xc6\\x8d\\xd2\\x12\\xb5\\x29\\x51\\x8d\\x87\\x65\\\n\\x5e\\x4b\\x0c\\xe2\\xea\\x5d\\x09\\xb4\\x2f\\x61\\x20\\xaf\\x32\\x74\\xbd\\x3e\\\n\\x13\\x64\\xaf\\x5a\\x4f\\xa3\\xa8\\x4d\\xf0\\x61\\x98\\x7b\\x48\\xd0\\xd0\\x60\\\n\\xad\\x42\\xb0\\xf6\\x74\\xf8\\x3d\\x2c\\xc8\\x0d\\xfb\\xc2\\x7b\\x12\\x42\\x8d\\\n\\x58\\xd9\\xa4\\x0d\\x82\\x19\\x68\\x99\\x55\\x4f\\x80\\xf1\\x50\\xfc\\x46\\x76\\\n\\xbc\\xbf\\x50\\xea\\xd4\\x00\\x87\\x99\\xf3\\x1b\\x8a\\x89\\xfe\\x37\\x40\\xf1\\\n\\xff\\x90\\x20\\x0b\\xe4\\x9e\\xff\\x70\\x02\\xcc\\x2a\\x26\\xa3\\xf2\\x21\\x19\\\n\\x21\\x3c\\x1f\\x1a\\x0d\\x27\\x90\\x0c\\x77\\x1f\\xa2\\xe8\\x7a\\xfc\\x6a\\xc5\\\n\\x00\\xd9\\xe3\\xb0\\xc6\\xd2\\x40\\x16\\xf8\\x50\\xcc\\x3d\\x1e\\x77\\x6e\\x93\\\n\\x56\\x75\\xcb\\xc8\\x82\\xdf\\x43\\xda\\xde\\x98\\xdc\\xb8\\x2b\\x2c\\x6d\\xd9\\\n\\x7b\\xd4\\xcb\\x25\\x6d\\x10\\xcc\\x40\\x1b\\xde\\x9f\\x17\\xc0\\x78\\x78\\xf3\\\n\\x0d\\xde\\x07\\xef\\x2f\\x9c\\x3a\\xcd\\xd2\\x37\\x66\\x9b\\xdf\\x30\\xe2\\xfe\\\n\\x60\\xf8\\x41\\xe6\\x1b\\x98\\xdf\\xd1\\x02\\xde\\x83\\xda\\x54\\x85\\x07\\xbb\\\n\\xca\\xd7\\xd4\\xad\\xe4\\x51\\x14\\x86\\x14\\xf1\\x5a\\x52\\x3f\\xad\\xdb\\x18\\\n\\xba\\x5e\\xe7\\x72\\x03\\x64\\x0f\\x66\\xa9\\x7a\\x1a\\x66\\x89\\x29\\x70\\x90\\\n\\x90\\x68\\x47\\x78\\x85\\x62\\xc1\\xef\\xad\\xe4\\xb5\\x7b\\x54\\x18\\xb7\\x84\\\n\\xa5\\xad\\x8e\\xbf\\x51\\x26\\x69\\x83\\x60\\x06\\x5a\\x66\\xd5\\x13\\x60\\x3c\\\n\\x34\\xbf\\xe1\\x8b\\xf7\\x17\\x4e\\x9d\\xce\\xdd\\xa7\\x32\\x33\\xd9\\x9f\\x40\\\n\\x0d\\x50\\x84\\x5f\\xe9\\xce\\xbb\\xb5\\xe1\\xb8\\x44\\xcc\\x2a\\xbd\\x9b\\x73\\\n\\x53\\xf7\\x6d\\x42\\x1c\\xca\\x8e\\x36\\xaf\\xdb\\xaf\\x76\\x4a\\x9d\\x3a\\xba\\\n\\xde\\x32\\x13\\x64\\x8f\\xd7\\xd3\\x30\\x4b\\x4c\\x31\\xf7\\xd0\\x01\\x25\\x8a\\\n\\xdb\\xe2\\xb2\\x36\\xc4\\xdd\\x4d\\xe0\\xf7\\x0e\\xed\\x89\\xe1\\x26\\xb9\\x1d\\\n\\xd5\\x86\\x86\\x90\\xc6\\xfc\\x46\\x99\\xa4\\x0d\\x84\\x19\\x68\\xf3\\x1b\\x04\\\n\\x60\\xbc\\x27\\x03\\x60\\x3c\\x24\\xbf\\x91\\x05\\xef\\x2f\\x9c\\x3a\\xcd\\xd2\\\n\\x37\\x66\\x99\\xdf\\x70\\xe8\\x4e\\x9e\\x6f\\x20\\x3c\\xd4\\x7d\\xb1\\xdc\\xb8\\\n\\x41\\x64\\x96\\x18\\xfe\\xb5\\x5e\\xa9\\x6f\\x83\\x02\\x36\\x7a\\xc5\\xb9\\xb2\\\n\\x12\\x8f\\x62\\x9e\\xa1\\xeb\\xa9\\x16\\xc8\\x9e\\x91\\xc6\\xb4\\xdf\\x0a\\xe2\\\n\\xef\\xec\\xef\\x38\\x37\\x2a\\x0f\\x6b\\x3b\\x64\\x91\\xc0\\xef\\xed\\x11\\x91\\\n\\x5a\\xdb\\xaf\\xc4\\x57\\x87\\xa5\\xad\\x7e\\x9f\\xaa\\x4c\\xd2\\x06\\xc1\\x0c\\\n\\xb4\\x01\\xc1\\x62\\x95\\x82\\xac\\x19\\x2b\\xb8\\x32\\xd8\\x39\\x72\\x67\\x63\\\n\\xe7\\xc0\\xfb\\x0b\\xa5\\x4e\\xe7\\xfc\\x86\\x4e\\x72\\xe6\\xf3\\x0d\\x9e\\x62\\\n\\xe7\\xd1\\x97\\x2b\\x90\\x4d\\x9e\\x2e\\x38\\xa2\\x0f\\xe0\\x11\\x59\\xfd\\x89\\\n\\xb1\\x9e\\x02\\x5b\\x20\\x7b\\x46\\x1a\\xf8\\xa3\\x49\\xe8\\x22\\x51\\x44\\x96\\\n\\x53\\x22\\xb2\\x1a\\x15\\xd1\\x25\\xa1\\x08\\x86\\x3e\\x38\\x44\\xf4\\x40\\x03\\\n\\xa9\\xa8\\x4c\\xd2\\x06\\xc0\\x0c\\xb4\\x99\\x55\\x84\\xb3\\xb2\\x73\\xe4\\xce\\\n\\xc6\\xce\\x86\\xf7\\x17\\x56\\x9d\\x16\\xc8\\xae\\x64\\x0a\\x6b\\x3d\\x95\\xeb\\\n\\x89\\x98\\x01\\x74\\x4a\\xbe\\xd8\\xb2\\x6f\\x7d\\x45\\xae\\x3b\\x8d\\x8d\\xac\\\n\\xc1\\x84\\x01\\x28\\x18\\x2a\\x82\\x92\\x61\\xc4\\x2a\\x47\\xda\\xb2\\x3c\\x17\\\n\\xcf\\x86\\xf7\\x57\\x34\\xcd\\xe1\\x36\\xf9\\xee\\x87\\xbb\\x9e\\xaa\\xc4\\x58\\\n\\x62\\x21\\x1b\\x31\\x3f\\x69\\xf3\\xc0\\x0c\\x0c\\x69\\x42\\x91\\x83\\x9d\\x15\\\n\\xef\\xaf\\xd8\\x4a\\x98\\xf3\\x1b\\x7e\\xfb\\xfa\\x7a\\xaa\\x99\\x41\\xe5\\x31\\\n\\x62\\xf9\\x60\\x06\\x96\\x67\\x3d\\x55\\x56\\xbc\\xbf\\x62\\xb5\\x9d\\xf3\\x1b\\\n\\x7e\\xfb\\x64\\xf0\\xe1\\x28\\xa3\\x92\\xb1\\x32\\x2b\\xcf\\x88\\x95\\xc5\\x6f\\\n\\x18\\x61\\x83\\xe6\\x4e\\x98\\xb5\\x31\\xe7\\x37\\xb2\\xee\\xdb\\xf1\\xff\\x2a\\\n\\x1a\\x47\\xb6\\xf2\\x8c\\x58\\x79\\xfc\\x06\\x23\\xd6\\x45\\xd4\\xa0\\xb9\\xcb\\\n\\xa2\\x41\\x25\\x53\\xf1\\xf1\\xe2\\xbc\\xf3\\xbe\\x55\\x49\\xe2\\x39\\xc2\\xa2\\\n\\xca\\x33\\x62\\xe5\\x99\\x6f\\xd8\\x0e\\x85\\x5e\\x1b\\x01\\x65\\xf8\\x03\\xd0\\\n\\xbf\\xff\\xfb\\xbf\\x8f\\x8f\\x7f\\xf4\\xa3\\xb7\\xdf\\x1e\\xc2\\x69\\xcb\\x40\\\n\\xa1\\xf8\\x8d\\x19\\x33\\xff\\xa8\\x3c\\x23\\x56\\x4e\\xbf\\x51\\x9a\\xda\\x08\\\n\\x76\\x92\\xb7\\x35\\x93\\x54\\xed\\xf1\\x10\\x4e\\x5b\\x06\\x0a\\xc5\\x6f\\xb8\\\n\\xe2\\x39\\x0a\\xa4\\x92\\x1b\\x75\\x5f\\x1b\\x57\\xc0\\x99\\xc3\\x11\\xb6\\xdc\\\n\\x7e\\x23\\x0f\\x76\\x7e\\x1a\\xd8\\xa2\\xfd\\x38\\x7b\\xa3\\x62\\x6c\\xf4\\x07\\\n\\xed\\x1f\\x80\\xfe\\xe3\\x3f\\xfe\\xe3\\x5b\\xdf\\xfa\\x96\\xf6\\xd9\\x50\\xaa\\\n\\xae\\xe4\\x14\\xbe\\xdf\\x60\\xf3\\x8d\\x22\\x03\\xe8\\x36\\x2f\\x59\\x03\\xdf\\\n\\xd7\\x5f\\x2e\\x84\\xab\\x2d\\x33\\x62\\x9b\\xb9\\xfa\\xfa\\xfa\\xa5\\x37\\x0c\\\n\\x79\\x9e\\x19\\x68\\x53\\xdd\\xca\\xdc\\x45\\x85\\x14\\x9b\\x58\\x09\\x7e\\x63\\\n\\xc5\\x07\\x78\\x7e\\x43\\x7f\\xfd\\xd9\\xd7\\xf2\\xd6\\x2f\\xff\\x11\\xd2\\x30\\\n\\xc8\\x8d\\xe8\\x25\\x75\\x2c\\xf5\\xc2\\x95\\x59\\x4b\\xb1\\x9e\\x88\\x73\\xbc\\\n\\xfd\\xee\\x8c\\xce\\xfe\\x83\\x56\\xcd\\xde\\xc4\\x04\\x66\\x54\\xfb\\xcb\\x0a\\\n\\x1e\\x5a\\xd8\\x28\\x74\\xbf\\x41\\xe7\\x1b\\x45\\x07\\xd0\\xa1\\x5a\\x69\\x25\\\n\\x3f\\x2c\\xed\\x0d\\xf9\\x79\\x07\\x5b\\x4f\\x45\\xd6\\x43\\xe1\\xea\\x5a\\xc9\\\n\\xbc\\x6b\\xe0\\x0c\\xd0\\xd3\\xa4\\xde\\x86\\xdc\\x25\\x85\\x14\\x9b\\x58\\x9e\\\n\\xb8\\xbf\\xac\\x6c\\xad\\x51\\x50\\x5b\\xce\\x15\\xb4\\xde\\x6e\\xde\\xf8\\xe5\\\n\\x79\\xb1\\x8f\\x34\\x0c\\x72\\x27\\xba\\x97\\x89\\x83\\xa2\\xb1\\xac\\xa5\\x58\\\n\\xf1\\xe2\\xbc\\xb5\\x6b\\xb2\\xb5\\xb7\\xb5\\xb7\\x4d\\xd2\\xbe\\x1b\\x4a\\xd5\\\n\\x95\\x9c\\x4a\\x33\\xdf\\x28\\x3a\\x80\\x0e\\xe3\\xee\\x55\\xc2\\xf2\\xda\\xd0\\\n\\x5f\\x3c\\x44\\xdf\\x3a\\xd3\\xa4\\x90\\xc5\\x4b\\xb8\\x67\\xbd\\xe3\\xcc\\x6c\\\n\\x93\\x57\\xf9\\xbf\\xb8\\x61\\xb8\\x63\\x3f\\xf1\\x2e\\x24\\x26\\x10\\xe4\\xd5\\\n\\x19\\x9b\\x36\\x41\\x01\\x97\\xdf\\xa3\\x97\\x14\\x24\\xa6\\x2f\\xb0\\x44\\x8c\\\n\\x4a\\x18\\xf7\\x97\\x95\\x5d\\xdb\\x8b\\xd4\\xbe\\x61\\x8d\\x3c\\xf7\\x37\\x7e\\\n\\x79\\xb4\\x7e\\x8b\\xde\\xf7\\xf7\\x36\\xea\\xaf\\x16\\xc3\\xdb\\xf6\\x66\\x2b\\\n\\x25\\xbb\\xdf\\x50\\xff\\x9d\\xf4\\x0e\\xac\\x56\\xbf\\xae\\x21\\x74\\xdf\\xf7\\\n\\xc2\\xa8\\xb9\\xd2\\x53\\x38\\x7e\\xc3\\x86\\xff\\x47\\xe7\\x1b\\x45\\x07\\xd0\\\n\\xf1\\x58\\x6b\\xfc\\xf4\\x7a\\x35\\xec\\xc7\\xe4\\xc4\\x88\\x21\\x3d\\xac\\x02\\\n\\xad\\xe8\\x73\\x9c\\x99\\x6d\\x82\\x89\\x8b\\x77\\xe2\\x55\\xb5\\x3c\\x8b\\x09\\\n\\x24\\xf2\\x32\\x06\\x8e\\x4a\\xfb\\x71\\x74\\xb9\\xb9\\x78\\x3c\\x40\\x4c\\x5f\\\n\\x50\\x89\\x18\\x95\\x32\\xee\\x2f\\x1b\\x1b\\xc7\\x3b\\x91\\x90\\xe8\\xdc\\xb6\\\n\\xf4\\xd6\\xdb\\x8c\\x5f\\x9e\\x8f\\xc6\\x86\\x99\\xc1\\x43\\xe7\\x76\\x22\\x43\\\n\\xbe\\x9e\\x6c\\x27\\xc9\\x3e\\xdf\\xa8\\x86\\xbe\\xf1\\xfa\\xdb\\x6f\\xbf\\xfe\\\n\\x3a\\x7c\\x5e\\x9f\\xd1\\x7d\\x23\\x5f\\xbf\\x61\\xc3\\xff\\x93\\x60\\xbe\\x81\\\n\\x8b\\x0e\\xa0\\xe3\\xc9\\xa5\\x50\\x3a\\x43\\xd7\\xd6\\xf4\\x1b\\x64\\x7b\\xb5\\\n\\xe3\\xcc\\xfa\\x26\\x18\\xca\\x3e\\x15\\x5d\\x18\\xe7\\x59\\x4c\\x20\\xc8\\x6b\\\n\\xa4\\xc1\\xcb\\xa3\\x78\\xf7\\x06\\xf3\\x8d\\x82\\x01\\x62\\xfa\\x02\\x4b\\x44\\\n\\xa9\\x74\\x71\\x7f\\xd9\\xd9\\x9a\\xb2\\x52\\x6d\\x4b\\xf4\\x68\\x42\\x6c\\x3d\\\n\\xd6\\x7f\\x79\\xb1\\x51\\x18\\x66\\x0f\\xad\\x86\\x25\\xf3\\x6d\\x87\\x6b\\x1a\\\n\\x71\\x96\\x93\\x98\\xa3\\x29\\x6f\\xbf\\x31\\x5e\\xfd\\x3a\\xff\\x3a\\x8f\\xe1\\\n\\x9f\\x57\\xff\\xee\\x48\\x28\\x55\\x57\\x72\\x0a\\xc7\\x6f\\x58\\xf8\\x7f\\x24\\\n\\x0e\\x10\\x15\\x1d\\x40\\xa7\\xf2\\xb8\\x5d\\xda\\xdd\\x7f\\x6d\\xd8\\xda\\xda\\\n\\xfd\\x06\\x8e\\xf6\\xd9\\xce\\xcc\\x36\\xf7\\x80\\x40\\x3d\\xb2\\xd4\\x21\\x25\\\n\\xda\\xf5\\x98\\x40\\x8c\\x0d\\x06\\x5a\\xb6\\x5e\\x95\\xcc\\xf9\\x7b\\x90\\x98\\\n\\xbe\\xa0\\x12\\xe9\\x5b\\x25\\x8c\\xfb\\xcb\\xc2\\xc6\\x6d\\xb2\\x86\\x06\\x14\\\n\\xb8\\x3c\\x51\\xc9\\xf8\\xc5\\xeb\\xd7\\x69\\xba\\x73\\x6d\\xd8\\x6d\\x58\\x03\\\n\\xb4\\x5a\\xca\\x76\\x12\\xb3\\x47\\x78\\xce\\x37\\xaa\\xc7\\xef\\x7b\\x9d\\xd2\\\n\\xdb\\xff\\xf9\\x5f\\xff\\xf5\\x5f\\xff\\x33\\x94\\xaa\\x2b\\x39\\x85\\xe3\\x37\\\n\\x4c\\xfc\\x3f\\x44\\xe7\\x1b\\xc5\\x06\\xd0\\x75\\x61\\x24\\xc0\\x64\\x3e\\xb6\\\n\\xb0\\xc8\\x57\\x32\\xbb\\xc8\\xee\\x37\\xf0\\xa6\\x5b\\x91\\x75\\x66\\x2a\\x04\\\n\\x6a\\xe7\\x90\\xd8\\xd1\\x2e\\x1c\\x38\\xd0\\xdb\\xcd\\xa2\\x34\\x64\\x64\\x30\\\n\\x78\\x3c\\x24\\x45\\x77\\x58\\x2b\\x2f\\x02\\xc4\\xf4\\x05\\x96\\x88\\x52\\xe9\\\n\\xe2\\xfe\\xb2\\xb2\\xf1\\x90\\x7c\\x37\\xda\\x2f\\x1f\\x80\\x7a\\xe8\\x30\\x7e\\\n\\x31\\x0c\\x04\\x64\\x6e\\x23\\x11\\x2a\\xbe\\xcb\\x14\\x65\\xaf\\x92\\xed\\x24\\\n\\x66\\xbf\\xc8\\xec\\x1b\\x8c\\xfd\\x51\\xed\\x75\\xfe\\x47\\xf0\\xfb\\x9f\\xff\\\n\\xeb\\x7f\\xff\\x9f\\xff\\xf5\\x7f\\xff\\xdf\\x8c\\xb8\\x51\\xc5\\x45\\x3c\\x48\\\n\\x10\\xf2\\xdb\\x8f\\x88\\x2e\\x1e\\xf9\\x11\\x44\\x21\\x42\\xfe\\x22\\x35\\x02\\\n\\xdd\\x10\\x49\\xba\\xaa\\x07\\x28\\x0b\\x78\\x94\\x2d\\xd2\\x1d\\xfd\\x08\\x14\\\n\\x54\\x45\\xf3\\xd1\\xbc\\xa2\\x28\\x0a\\x91\\x70\\x49\\x78\\x40\\x64\\xa7\\x24\\\n\\x32\\xc3\\x69\\x6c\\x67\\x66\\x9b\\xe4\\xb0\\x40\\xce\\x2c\\xd2\\x5f\\xc1\\xc6\\\n\\x10\\xe8\\x11\\xa3\\xa0\\xb0\\x44\\x23\\x12\\xe9\\x75\\x48\\x4e\\x04\\xa7\\xae\\\n\\x11\\x45\\xf3\\x34\\x36\\x76\\x8e\\xdc\\x05\\xb3\\x89\\xa2\\xf4\\x2a\\x89\\xa4\\\n\\xd6\\xf5\\x5f\\x38\\x56\\x13\\x11\\x98\\xa2\\xd6\\x85\\x15\\x0b\\x3e\\x09\\x94\\\n\\x58\\xad\\x17\\xf5\\xc0\\x03\\xa4\\x72\\xc3\\xa9\\xbc\\x12\\x13\\x87\\xdd\\xa4\\\n\\xbf\\x3e\\x3c\\xf0\\x3e\\xe6\\x5d\\x3c\\x3d\\x00\\x82\\xac\\xde\\xc1\\xec\\x7d\\\n\\xf0\\xe4\\xee\\x15\\xcf\\x22\\x88\\xcc\\xb8\\x36\\x6c\\xec\\x60\\x23\\x66\\x02\\\n\\xf1\\x66\\x5e\\x76\\x24\\x54\\x32\\x4f\\xc9\\xb6\\x91\\xfd\\xcc\\xec\\xed\\xc8\\\n\\x99\\xf6\\x2c\\x93\\x61\\x2b\\x28\\x34\\x89\\xac\\x50\\x3f\\x6c\\xac\\xde\\x75\\\n\\xb3\\x73\\xe4\\x2e\\x98\\xcd\\x2e\\x03\\x36\\xde\\x0e\\xcd\\x63\\xdb\\x41\\x8c\\\n\\xd5\\xdc\\xa2\\x04\\x93\\xc1\\xac\\xbc\\x92\\x5c\\xd7\\xd2\\x10\\xff\\xff\\x01\\\n\\xbe\\xeb\\x7e\\x77\\x23\\x92\\xbc\\x75\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\\n\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\\n\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\\n\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\\n\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x31\\x33\\x54\\\n\\x30\\x39\\x3a\\x31\\x38\\x3a\\x31\\x37\\x2b\\x30\\x31\\x3a\\x30\\x30\\xac\\xbf\\\n\\x9e\\x49\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\\n\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x31\\x33\\\n\\x54\\x30\\x39\\x3a\\x31\\x38\\x3a\\x31\\x37\\x2b\\x30\\x31\\x3a\\x30\\x30\\xdd\\\n\\xe2\\x26\\xf5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x98\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x8f\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xc7\\xc7\\xc7\\xc4\\xc4\\xc4\\xe5\\xe5\\xe5\\\n\\xe4\\xe4\\xe4\\xac\\xac\\xac\\xd1\\xd1\\xd1\\xce\\xce\\xce\\xca\\xca\\xca\\xc2\\\n\\xc2\\xc2\\xde\\xde\\xde\\xdd\\xdd\\xdd\\xb2\\xb2\\xb2\\xa7\\xa7\\xa7\\xa3\\xa3\\\n\\xa3\\xdc\\xdc\\xdc\\xed\\xed\\xed\\xdb\\xdb\\xdb\\xbe\\xbe\\xbe\\xd6\\xd6\\xd6\\\n\\xd4\\xd4\\xd4\\xb0\\xb0\\xb0\\xcb\\xcb\\xcb\\xe7\\xe7\\xe7\\xb7\\xb7\\xb7\\xd9\\\n\\xd9\\xd9\\xd2\\xd2\\xd2\\xc8\\xc8\\xc8\\x79\\x79\\x79\\xc5\\xc5\\xc5\\xcc\\xcc\\\n\\xcc\\xc9\\xc9\\xc9\\xba\\xba\\xba\\x9c\\x9c\\x9c\\xa1\\xa1\\xa1\\xc6\\xc6\\xc6\\\n\\xc1\\xc1\\xc1\\x89\\x89\\x89\\xc0\\xc0\\xc0\\xd8\\xd8\\xd8\\xcd\\xcd\\xcd\\xbc\\\n\\xbc\\xbc\\x82\\x82\\x82\\xae\\xa2\\x7c\\xd8\\xbe\\x72\\xc4\\xc1\\xb9\\x8c\\x8c\\\n\\x8c\\x87\\x87\\x87\\x83\\x83\\x83\\xe9\\xe9\\xe9\\xa5\\xa5\\xa5\\xda\\xb8\\x5c\\\n\\xed\\xdb\\xab\\xd1\\xbc\\x88\\x6b\\x6b\\x6b\\xbf\\xbf\\xbf\\xe2\\xe2\\xe2\\xb1\\\n\\xb1\\xb1\\xeb\\xd7\\xa4\\xfb\\xf4\\xdc\\xd6\\xb0\\x58\\xbd\\xb5\\xa1\\x61\\x61\\\n\\x61\\x8f\\x8f\\x8f\\xa0\\xa0\\xa0\\xcf\\xcf\\xcf\\x9e\\x9e\\x9e\\xd6\\xae\\x52\\\n\\xf8\\xeb\\xb4\\xf8\\xe6\\x8e\\xee\\xdd\\xb5\\xcb\\xac\\x6b\\x66\\x65\\x63\\x58\\\n\\x58\\x58\\x53\\x53\\x53\\xc7\\xc7\\xc6\\xc5\\xaa\\x6f\\xec\\xd9\\xac\\xf8\\xe3\\\n\\x82\\xc2\\x88\\x33\\xfa\\xed\\xac\\xcf\\x9e\\x43\\x99\\x81\\x56\\xa6\\xa6\\xa6\\\n\\xd5\\xd5\\xd5\\xd2\\xc5\\xab\\xdf\\xbd\\x7b\\xf9\\xea\\xa2\\xf6\\xdc\\x61\\xc2\\\n\\x87\\x31\\xf7\\xe1\\x77\\xf0\\xde\\xb6\\xbb\\x8e\\x42\\x71\\x6b\\x62\\x85\\x84\\\n\\x82\\xc0\\x99\\x50\\xef\\xdb\\xab\\xf7\\xe0\\x74\\xf5\\xda\\x58\\xf5\\xdb\\x5d\\\n\\xf8\\xe6\\x90\\xe1\\xc1\\x92\\x9f\\x78\\x3d\\x81\\x81\\x81\\x6f\\x6f\\x6f\\x64\\\n\\x64\\x64\\xe1\\xc2\\x8e\\xf9\\xe8\\x97\\xf5\\xdb\\x5b\\xc2\\x88\\x32\\xf6\\xde\\\n\\x6a\\xf6\\xe7\\xb1\\xc2\\x83\\x2d\\xc9\\x91\\x38\\xf6\\xec\\xdd\\xf9\\xee\\xbd\\\n\\xf8\\xea\\xac\\xf8\\xea\\xab\\xf8\\xea\\xad\\xfb\\xf3\\xd4\\xe4\\xc8\\xa4\\xbe\\\n\\x7b\\x26\\xc5\\x8a\\x32\\xc3\\x87\\x31\\xc0\\x84\\x30\\xbf\\x82\\x2e\\xc0\\x80\\\n\\x2b\\xc0\\x7f\\x29\\xbf\\x7d\\x28\\xbd\\x79\\x25\\xbd\\x77\\x23\\xbc\\x76\\x22\\\n\\xff\\xff\\xff\\x4c\\xd3\\x49\\x60\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\\n\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\\n\\x48\\x00\\x00\\x00\\xe3\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x80\\x00\\x46\\\n\\x26\\x06\\x14\\xc0\\xc8\\xcc\\xc2\\x0a\\xe7\\xb0\\xb1\\x73\\x30\\x70\\x72\\x71\\\n\\xf3\\x30\\xb0\\xf2\\xf2\\x81\\x05\\xf8\\x05\\x04\\x39\\x85\\x84\\x45\\x44\\x59\\\n\\xc5\\xc4\\x25\\xc0\\x02\\x4c\\xfc\\x22\\x92\\x82\\xc2\\x22\\x92\\x52\\x62\\xd2\\\n\\x32\\x60\\x01\\x59\\x11\\x39\\x79\\x05\\x45\\x25\\x4e\\x65\\x15\\x09\\x55\\x20\\\n\\x57\\x9a\\x49\\x4d\\x5d\\x43\\x53\\x8b\\x81\\x41\\x5b\\x47\\x57\\x43\\x4f\\xdf\\\n\\x80\\x81\\xc9\\x50\\x58\\x9e\\xdd\\x08\\x28\\x63\\x6c\\x62\\xaa\\xa0\\xcc\\x6d\\\n\\xc6\\x60\\x6e\\x21\\xa5\\xac\\x61\\x09\\x14\\xb0\\xb2\\xb6\\xb1\\x55\\x93\\xb2\\\n\\x63\\xe0\\xb3\\x77\\x70\\x54\\x96\\x73\\x62\\x70\\x76\\x71\\x75\\x73\\xf7\\xf0\\\n\\xf4\\x02\\x4a\\xb1\\xca\\xaa\\xc8\\x7a\\xfb\\xf8\\xfa\\xf9\\x07\\x04\\x06\\x81\\\n\\x6d\\x09\\x0e\\x91\\x15\\x0b\\x0d\\x0b\\x8f\\x88\\x8c\\x8a\\x8e\\x89\\x05\\x09\\\n\\x68\\x72\\x05\\xc7\\xc5\\x27\\x24\\x26\\x25\\x25\\xa7\\xa4\\xa6\\x81\\x04\\xd2\\\n\\x33\\x32\\x19\\xb2\\xb2\\x23\\x72\\x72\\x73\\xf2\\xf2\\x0b\\xa0\\xde\\x29\\x2c\\\n\\x2a\\x2e\\x29\\x2d\\x2d\\x2d\\x2b\\xaf\\xa8\\x84\\x08\\x54\\x55\\xd7\\xd4\\xd6\\\n\\xd5\\x37\\x54\\x36\\x36\\x35\\x03\\x00\\x5d\\xac\\x28\\x03\\x4d\\x76\\xcf\\x56\\\n\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\\n\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\\n\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\\n\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x88\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xd2\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x85\\x85\\x85\\x9e\\x9e\\x9e\\x7c\\x7c\\x7c\\\n\\x4c\\x4c\\x4c\\x91\\x91\\x91\\xe8\\xe8\\xe8\\xdd\\xdd\\xdd\\xc1\\xc1\\xc1\\x81\\\n\\x81\\x81\\x7b\\x7b\\x7b\\xd9\\xd9\\xd9\\xc4\\xc4\\xc4\\x73\\x73\\x73\\xd5\\xd5\\\n\\xd5\\x58\\x58\\x58\\x4b\\x4b\\x4b\\x65\\x65\\x65\\x92\\x92\\x92\\x79\\x79\\x79\\\n\\xa8\\xa8\\xa8\\x32\\x32\\x32\\x82\\x82\\x82\\x3f\\x3f\\x3f\\xbd\\xbd\\xbd\\xce\\\n\\xce\\xce\\xc2\\xc2\\xc2\\xad\\xad\\xad\\x67\\x67\\x67\\x52\\x52\\x52\\x41\\x41\\\n\\x41\\x46\\x46\\x46\\x51\\x51\\x51\\x4d\\x4d\\x4d\\x8d\\x8d\\x8d\\xaa\\xaa\\xaa\\\n\\xae\\xae\\xae\\x97\\x97\\x97\\x71\\x71\\x71\\x78\\x78\\x78\\x8f\\xa1\\x85\\x71\\\n\\x95\\x5c\\x66\\x8e\\x4f\\x58\\x82\\x41\\x44\\x6d\\x2d\\x4a\\x4a\\x4a\\x64\\x64\\\n\\x64\\x6b\\x6b\\x6b\\x69\\x7d\\x5e\\x81\\xab\\x61\\xb4\\xd4\\x95\\xd0\\xe6\\xba\\\n\\x8f\\xbb\\x6a\\x57\\x8f\\x2d\\x37\\x6b\\x19\\x5d\\x87\\x44\\xb1\\xd3\\x90\\xb1\\\n\\xd6\\x92\\xff\\xff\\xff\\x8c\\xbc\\x65\\x8f\\xbc\\x67\\x4c\\x7b\\x31\\xb6\\xd4\\\n\\x9c\\xb2\\xd2\\x95\\x39\\x6c\\x1b\\x8b\\xba\\x62\\x87\\xba\\x60\\x87\\xb9\\x60\\\n\\x53\\x8c\\x28\\x8d\\xba\\x64\\x57\\x36\\x1a\\xc7\\x00\\x00\\x00\\x01\\x74\\x52\\\n\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\\n\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x90\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\\n\\xa0\\x12\\x60\\x64\\x62\\x66\\x60\\x60\\x66\\x62\\x84\\x72\\x59\\x58\\xd9\\xd8\\\n\\x39\\x38\\xb9\\xb8\\xd9\\x79\\x58\\x59\\xc0\\x02\\xbc\\x7c\\xfc\\x02\\x82\\x42\\\n\\xc2\\x82\\x02\\xfc\\x22\\xbc\\x20\\xbe\\xa8\\x18\\x03\\x83\\xb8\\x84\\xa4\\x94\\\n\\xb4\\x38\\x03\\x83\\x98\\x28\\x48\\x44\\x86\\x41\\x56\\x4e\\x5e\\x41\\x41\\x5e\\\n\\x4e\\x16\\xc8\\x04\\x01\\x45\\x25\\x65\\x15\\x55\\x35\\x75\\x55\\x0d\\x4d\\x2d\\\n\\x6d\\x1d\\xb0\\x88\\xae\\x9e\\xbe\\x3e\\x03\\x83\\x81\\xa1\\x91\\xb1\\x89\\xa9\\\n\\x19\\xc2\\x6e\\x73\\x0b\\x4b\\x2b\\x6b\\x1b\\x24\\x01\\x5b\\x3b\\x2b\\x2b\\x2b\\\n\\x7b\\x24\\x01\\x07\\x47\\x27\\x2b\\x67\\x64\\x15\\x66\\x2e\\xae\\xf6\\xae\\x2e\\\n\\x48\\x02\\x0c\\x66\\x20\\xc0\\x00\\x00\\xa4\\xdf\\x0e\\xf7\\xb9\\x50\\xa7\\xe0\\\n\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\\n\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\\n\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\\n\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\xa0\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xbc\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xc7\\xc7\\xc7\\xc4\\xc4\\xc4\\xe5\\xe5\\xe5\\\n\\xe4\\xe4\\xe4\\xac\\xac\\xac\\xd1\\xd1\\xd1\\xce\\xce\\xce\\xca\\xca\\xca\\xc2\\\n\\xc2\\xc2\\xde\\xde\\xde\\xdd\\xdd\\xdd\\xb2\\xb2\\xb2\\xa7\\xa7\\xa7\\xa3\\xa3\\\n\\xa3\\xdc\\xdc\\xdc\\xed\\xed\\xed\\xdb\\xdb\\xdb\\xbe\\xbe\\xbe\\xd6\\xd6\\xd6\\\n\\xd4\\xd4\\xd4\\xb0\\xb0\\xb0\\xcb\\xcb\\xcb\\xe7\\xe7\\xe7\\xb7\\xb7\\xb7\\xd9\\\n\\xd9\\xd9\\xd2\\xd2\\xd2\\xc8\\xc8\\xc8\\x79\\x79\\x79\\xc5\\xc5\\xc5\\xcc\\xcc\\\n\\xcc\\xc9\\xc9\\xc9\\xba\\xba\\xba\\x9c\\x9c\\x9c\\xa1\\xa1\\xa1\\xc6\\xc6\\xc6\\\n\\xc1\\xc1\\xc1\\x89\\x89\\x89\\xc0\\xc0\\xc0\\xd8\\xd8\\xd8\\xcd\\xcd\\xcd\\xbc\\\n\\xbc\\xbc\\x6e\\x97\\xd4\\x7b\\x9e\\xd4\\x71\\x98\\xd0\\x82\\xa4\\xd6\\x68\\x8e\\\n\\xcd\\x69\\x90\\xcd\\x75\\x9a\\xd0\\x73\\x99\\xd1\\x62\\x8b\\xc8\\x83\\x83\\x83\\\n\\xe9\\xe9\\xe9\\xa5\\xa5\\xa5\\x65\\x8d\\xcc\\xb0\\xcd\\xf3\\xff\\xff\\xff\\xb3\\\n\\xc7\\xe3\\xa1\\xbf\\xea\\x60\\x89\\xc9\\xbf\\xbf\\xbf\\xe2\\xe2\\xe2\\xb1\\xb1\\\n\\xb1\\x5b\\x86\\xc7\\x9e\\xc0\\xef\\x6e\\x93\\xcc\\xf7\\xfb\\xff\\xf1\\xf8\\xff\\\n\\x8c\\xaf\\xe4\\x61\\x8a\\xc7\\x8f\\x8f\\x8f\\xa0\\xa0\\xa0\\xcf\\xcf\\xcf\\x5d\\\n\\x88\\xc8\\xa1\\xbf\\xef\\xfa\\xfc\\xfd\\xfb\\xfc\\xfe\\xfd\\xfd\\xfe\\xfc\\xfd\\\n\\xfe\\xfa\\xfb\\xfd\\xfb\\xfc\\xfd\\x85\\xa8\\xdd\\x53\\x7f\\xc1\\x65\\x8d\\xca\\\n\\x99\\xb8\\xea\\x7e\\xa5\\xdd\\x80\\xa6\\xdd\\x7c\\xa3\\xdb\\x7a\\xa0\\xd9\\x79\\\n\\xa0\\xd9\\x78\\x9f\\xd8\\x78\\x9e\\xd8\\x5d\\x84\\xbf\\xa6\\xa6\\xa6\\xd5\\xd5\\\n\\xd5\\x61\\x8b\\xc9\\x92\\xb5\\xe6\\x81\\xa7\\xe2\\x81\\xa7\\xe1\\x7d\\xa3\\xde\\\n\\x7b\\xa1\\xdc\\x79\\x9f\\xdb\\x77\\x9e\\xd9\\x73\\x9a\\xd4\\x57\\x7e\\xbb\\x54\\\n\\x81\\xc4\\x97\\xb6\\xea\\xea\\xf3\\xf3\\xe6\\xf1\\xed\\xe6\\xf1\\xef\\xe6\\xf0\\\n\\xef\\xe5\\xf1\\xed\\xed\\xf5\\xf3\\x79\\x9c\\xd5\\x44\\x70\\xb0\\x81\\x81\\x81\\\n\\x6f\\x6f\\x6f\\x64\\x64\\x64\\x51\\x7f\\xc3\\x9a\\xb6\\xef\\xe8\\xf3\\xea\\x84\\\n\\xbf\\x51\\x98\\xc9\\x6f\\x99\\xc9\\x71\\x84\\xbf\\x54\\xe9\\xf4\\xe4\\x7b\\x9c\\\n\\xdd\\x3a\\x69\\xaa\\x55\\x83\\xc6\\xba\\xce\\xef\\xff\\xff\\xdd\\xc7\\xee\\x87\\\n\\xd7\\xf4\\xa2\\xd7\\xf6\\xa2\\xc7\\xee\\x8c\\xff\\xff\\xe0\\x85\\xa2\\xdd\\x3e\\\n\\x6a\\xab\\x33\\x68\\xba\\x58\\x84\\xc3\\x68\\x8b\\xd3\\x70\\x8f\\xe1\\x6c\\x8d\\\n\\xdc\\x6d\\x8b\\xda\\x6e\\x8a\\xd7\\x6c\\x8b\\xcd\\x44\\x6d\\xab\\x2e\\x5f\\xa6\\\n\\xa3\\x09\\x05\\xda\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\\n\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\\n\\x00\\xe7\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x80\\x00\\x46\\x26\\x06\\x14\\\n\\xc0\\xc8\\xcc\\xc2\\x0a\\xe7\\xb0\\xb1\\x73\\x30\\x70\\x72\\x71\\xf3\\x30\\xb0\\\n\\xf2\\xf2\\x81\\x05\\xf8\\x05\\x04\\x39\\x85\\x84\\x45\\x44\\x59\\xc5\\xc4\\x25\\\n\\xc0\\x02\\x4c\\xfc\\x22\\x92\\x82\\xc2\\x22\\x92\\x52\\x62\\xd2\\x32\\x60\\x01\\\n\\x59\\x11\\x39\\x79\\x05\\x45\\x25\\x4e\\x65\\x15\\x09\\x55\\x20\\x57\\x9a\\x49\\\n\\x4d\\x5d\\x43\\x53\\x4b\\x5b\\x47\\x57\\x4f\\xdf\\xc0\\xd0\\xc8\\x98\\x81\\xc9\\\n\\x44\\x58\\x9e\\xdd\\xd4\\xcc\\xdc\\xc2\\xd2\\x02\\x08\\xac\\xac\\x19\\x6c\\x6c\\\n\\xa5\\x94\\x35\\xec\\xec\\x1d\\x2c\\x1c\\x2d\\x2c\\x9c\\x9c\\x5d\\x5c\\x19\\xf8\\\n\\xdc\\xdc\\x3d\\x94\\xe5\\x3c\\xbd\\xbc\\x7d\\x7c\\xfd\\xfc\\x03\\x02\\x83\\x80\\\n\\xa6\\xb0\\xca\\xaa\\xc8\\x06\\x87\\x84\\x86\\x85\\x47\\x44\\x46\\x45\\xc7\\x00\\\n\\x05\\x62\\xe3\\x64\\xc5\\xe2\\x13\\x12\\x93\\x92\\x53\\x52\\xd3\\xd2\\x33\\x80\\\n\\x02\\x9a\\x5c\\xb1\\xc6\\x99\\x59\\xd9\\x39\\xb9\\x79\\xf9\\x05\\x85\\x45\\x40\\\n\\x81\\xe2\\x92\\x52\\x86\\xb2\\xf2\\x8a\\xca\\xaa\\xea\\x9a\\xda\\xba\\x7a\\xa8\\\n\\x7f\\x1a\\x1a\\x9b\\x9a\\x5b\\x5a\\xdb\\xda\\x3b\\x3a\\xa1\\x02\\x5d\\xdd\\x3d\\\n\\xbd\\x7d\\xfd\\x13\\x26\\x4e\\x9a\\x0c\\x00\\xf3\\x9e\\x2f\\x41\\x28\\x28\\x39\\\n\\x7f\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\\n\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\\n\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\\n\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\\n\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\\n\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x01\\x0f\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x01\\x03\\x00\\x00\\x00\\x25\\x3d\\x6d\\x22\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x06\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xff\\xff\\xff\\x55\\x7c\\xf5\\x6c\\x00\\x00\\\n\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\\n\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x0c\\x49\\x44\\x41\\x54\\\n\\x08\\xd7\\x63\\x60\\x20\\x0d\\x00\\x00\\x00\\x30\\x00\\x01\\xc7\\xaa\\x85\\x8e\\\n\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\\n\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\\n\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\\n\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\\n\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x31\\x2d\\x31\\x38\\x54\\\n\\x30\\x38\\x3a\\x33\\x32\\x3a\\x32\\x36\\x2b\\x30\\x31\\x3a\\x30\\x30\\x58\\x7e\\\n\\xca\\xd4\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x94\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xd5\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x45\\x45\\x45\\x8a\\x8a\\x8a\\x98\\x98\\x98\\\n\\x9d\\x9d\\x9d\\x9f\\x9f\\x9f\\x6a\\x6a\\x6a\\x97\\x97\\x97\\xa2\\xa2\\xa2\\xad\\\n\\xad\\xad\\xc5\\xc5\\xc5\\x90\\x90\\x90\\x8b\\x8b\\x8b\\xa4\\xa4\\xa4\\xa0\\xa0\\\n\\xa0\\xa9\\xa9\\xa9\\xaa\\xaa\\xaa\\xc8\\xc8\\xc8\\x93\\x93\\x93\\x9a\\x9a\\x9a\\\n\\xb3\\xb3\\xb3\\xc0\\xc0\\xc0\\xca\\xca\\xca\\xe1\\xe1\\xe1\\xc6\\xc6\\xc6\\x9e\\\n\\x9e\\x9e\\xb1\\xb1\\xb1\\xa3\\xa3\\xa3\\xb4\\xb4\\xb4\\xf6\\xd4\\x5e\\xf6\\xd8\\\n\\x61\\xf9\\xe6\\x99\\xf3\\xcd\\x35\\xa6\\xa6\\xa6\\xbd\\xbd\\xbd\\xf6\\xd0\\x5c\\\n\\xe3\\xd4\\x5c\\xad\\xc7\\x4e\\x7c\\xbc\\x41\\x96\\xcf\\x7f\\x1b\\x9d\\x00\\xc1\\\n\\xc1\\xc1\\xf6\\xd6\\x60\\xf5\\xd8\\x61\\xab\\xc6\\x4d\\x64\\xb7\\x3b\\x4a\\xb2\\\n\\x34\\x47\\xb1\\x33\\x88\\xcc\\x7c\\x13\\x9b\\x00\\x9b\\x9b\\x9b\\xea\\xd5\\x5e\\\n\\x8b\\xbf\\x44\\x4c\\xb2\\x34\\x5b\\xa3\\x76\\x6a\\x99\\xa7\\xa3\\xba\\xd2\\x4b\\\n\\x75\\xaf\\x48\\xb1\\x33\\x51\\xaa\\x54\\x6a\\x98\\xa7\\xa4\\xba\\xd6\\xa5\\xba\\\n\\xd7\\xa2\\xb8\\xd6\\x80\\xa3\\xbc\\x88\\xa4\\xca\\x63\\x87\\xba\\x70\\x91\\xbf\\\n\\xf9\\xe2\\x96\\xf3\\xcb\\x33\\xff\\xff\\xff\\xae\\x04\\x58\\x0e\\x00\\x00\\x00\\\n\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\\n\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xc2\\x49\\x44\\x41\\x54\\x18\\\n\\xd3\\x4d\\x8f\\x6b\\x17\\x42\\x50\\x10\\x45\\x09\\x89\\xc4\\x24\\xe9\\x21\\x57\\\n\\x0f\\x95\\x10\\x3d\\x50\\xb7\\x42\\xa9\\xfe\\xff\\x5f\\x2a\\xa4\\x3a\\xdf\\xf6\\\n\\x9e\\x35\\x6b\\xce\\x10\\xc4\\x2f\\x64\\x9e\\x7f\\xaa\\x51\\x34\\xf3\\x15\\x64\\\n\\x9d\\x6d\\x70\\x14\\xc3\\x37\\xab\\xb1\\xd0\\x62\\x45\\x09\\xa0\\x2d\\x7f\\x98\\\n\\xe6\\x3a\\x12\\x28\\x5d\\xb5\\xd7\\x2f\\x79\\x30\\xd4\\x60\\xc4\\xeb\\x08\\x19\\\n\\xe3\\x42\\xd0\\xc3\\x09\\x4c\\x67\\xc8\\x9c\\x2f\\x96\\x56\\xce\\x02\\xa7\\xc1\\\n\\xca\\x76\\xdc\\xb5\\xe7\\x6f\\xb6\\xf9\\x82\\xb6\\x83\\xa9\\xbd\\x0f\\x42\\x3f\\\n\\x3a\\x1c\\xf1\\x5b\\xb0\\x8a\\x34\\x9a\\x39\\xc1\\xe9\\x7c\\x89\\x93\\x34\\x17\\\n\\x0d\\x11\\x78\\xe4\\x86\\xe7\\x6b\\x72\\xcb\\x30\\x26\\xc8\\x1a\\x27\\x29\\xba\\\n\\xb9\\xf6\\x2f\\xc9\\x1d\\x17\\x27\\x28\\x0a\\xba\\x68\\xee\\x45\\xf1\\x0d\\x97\\\n\\xa5\\x68\\x06\\x54\\xb4\\xf0\\x0f\\x49\\xf6\\x69\\xcd\\xf0\\xed\\x87\\xb1\\xdc\\\n\\x1c\\x53\\x5c\\xbd\\xd1\\x94\\x9f\\x63\\x6b\\x8b\\x71\\x29\\x5e\\x37\\x40\\x14\\\n\\xc2\\xcd\\x83\\x56\\x50\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\\n\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\\n\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\\n\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\\n\\x35\\x2d\\x30\\x33\\x54\\x30\\x38\\x3a\\x32\\x39\\x3a\\x30\\x30\\x2b\\x30\\x32\\\n\\x3a\\x30\\x30\\x66\\x45\\x9e\\x56\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\\n\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x3e\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x68\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x84\\xb6\\x6e\\x80\\xb3\\x6a\\x7c\\xb1\\x67\\\n\\x77\\xae\\x63\\x87\\xb8\\x71\\xa4\\xce\\x94\\xcb\\xe6\\xc3\\xd4\\xeb\\xcf\\xce\\\n\\xe9\\xc9\\xb8\\xdd\\xaf\\x7f\\xb9\\x6d\\x69\\xa5\\x58\\x87\\xb8\\x70\\xbb\\xdc\\\n\\xaf\\xe0\\xf2\\xdc\\xbd\\xe4\\xb6\\xa5\\xdb\\x9b\\xa0\\xd9\\x96\\xaf\\xdf\\xa5\\\n\\xc5\\xe8\\xc0\\x8a\\xc2\\x79\\x5f\\x9e\\x50\\xb7\\xda\\xaa\\xdc\\xf1\\xd8\\x9d\\\n\\xd8\\x92\\x93\\xcd\\x88\\x8e\\xcc\\x84\\x96\\xd4\\x8b\\x95\\xd4\\x8a\\x8e\\xd2\\\n\\x83\\xb7\\xe0\\xaf\\x7d\\xb9\\x6b\\x56\\x98\\x48\\x97\\xc7\\x85\\xd7\\xee\\xd2\\\n\\xa0\\xd9\\x95\\x94\\xd3\\x8a\\x89\\xc8\\x7f\\xff\\xff\\xff\\x85\\xcd\\x79\\x7c\\\n\\xc3\\x6b\\x7e\\xc7\\x6f\\xb5\\xdf\\xac\\x57\\x9e\\x45\\x83\\xb5\\x6d\\xb6\\xdd\\\n\\xac\\xaf\\xdf\\xa6\\x8c\\xcb\\x81\\x86\\xc9\\x7c\\x79\\xbd\\x6e\\x6a\\xac\\x5b\\\n\\x77\\xbc\\x60\\x73\\xba\\x5c\\x99\\xd1\\x8b\\x92\\xc5\\x80\\x47\\x8e\\x3c\\x7e\\\n\\xb2\\x69\\xbe\\xe2\\xb6\\x97\\xd5\\x8b\\x86\\xc9\\x7a\\x70\\xb8\\x59\\x7e\\xc1\\\n\\x69\\xaa\\xd4\\x9d\\x42\\x8b\\x38\\x7a\\xaf\\x65\\xb3\\xdd\\xa9\\x8a\\xcf\\x7d\\\n\\x81\\xcc\\x75\\x7d\\xbe\\x67\\xab\\xd4\\x9c\\x3d\\x88\\x34\\x75\\xac\\x61\\x98\\\n\\xcc\\x8a\\x96\\xd3\\x89\\x7a\\xc6\\x6b\\x70\\xc1\\x63\\x65\\xab\\x55\\x72\\xb9\\\n\\x5b\\x97\\xcc\\x85\\x8d\\xbe\\x7b\\x39\\x85\\x30\\x68\\xab\\x53\\xb4\\xdd\\xaa\\\n\\x79\\xc1\\x64\\x71\\xbe\\x5f\\x6e\\xb5\\x58\\x74\\xb7\\x5c\\xb4\\xda\\xa6\\x43\\\n\\x8f\\x38\\x66\\xa3\\x56\\x7d\\xb9\\x6a\\xb2\\xdb\\xa8\\x6f\\xb5\\x59\\x6f\\xb5\\\n\\x58\\x74\\xb7\\x5b\\xb3\\xd9\\xa5\\x6c\\xaa\\x5a\\x34\\x82\\x2c\\x5d\\x9c\\x4d\\\n\\x78\\xb4\\x64\\xb5\\xdb\\xa8\\x98\\xcc\\x87\\x7d\\xbc\\x66\\x7c\\xba\\x64\\x98\\\n\\xcb\\x86\\xb4\\xd9\\xa5\\x6b\\xaa\\x58\\x34\\x81\\x2c\\x53\\x96\\x45\\x50\\x99\\\n\\x41\\x8f\\xc2\\x7d\\xa6\\xd0\\x96\\xa6\\xcf\\x96\\x89\\xbe\\x78\\x42\\x8d\\x36\\\n\\x44\\x8c\\x3a\\x40\\x89\\x36\\x3c\\x87\\x32\\x37\\x84\\x2f\\x47\\x6d\\xe6\\x4b\\\n\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\\n\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xb0\\x49\\x44\\\n\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x0e\\x18\\x99\\x98\\x59\\x90\\xb8\\xac\\x6c\\\n\\xec\\x1c\\x9c\\x5c\\xdc\\x3c\\x30\\x3e\\x2f\\x1f\\xbf\\x80\\xa0\\x90\\xb0\\x88\\\n\\xa8\\x18\\x94\\x2f\\x2e\\x21\\x29\\x25\\x2d\\x23\\x2b\\x27\\xaf\\xa0\\x08\\x16\\\n\\x50\\x52\\x56\\x51\\x55\\x53\\x57\\xd7\\xd0\\xd4\\xd2\\xd6\\x01\\xf1\\x75\\xf5\\\n\\xf4\\x0d\\x0c\\x8d\\xd4\\xd5\\x8d\\x4d\\x4c\\xcd\\xcc\\x2d\\x80\\x02\\x96\\x56\\\n\\xd6\\x36\\xea\\x60\\x60\\x6b\\x67\\xef\\x00\\x14\\x70\\x74\\x72\\x76\\x81\\x0a\\\n\\xb8\\xba\\xb9\\x03\\x05\\x3c\\x3c\\xbd\\xbc\\x7d\\x7c\\x81\\x5c\\x5b\\x3f\\xff\\\n\\x80\\x40\\x90\\x21\\x41\\xc1\\x21\\xa1\\x26\\x40\\x81\\xb0\\xf0\\x88\\x48\\xb0\\\n\\x2d\\x51\\xd1\\x31\\x26\\xa6\\xb6\\xb1\\x71\\xf1\\x09\\x89\\x49\\x10\\x87\\x24\\\n\\xa7\\xa4\\xa6\\xa5\\x67\\x64\\x66\\x65\\xe7\\xc0\\x9c\\x9a\\x9b\\x97\\x5f\\x50\\\n\\x58\\x54\\x9c\\x83\\xe4\\x9b\\x92\\xd2\\xb2\\x72\\x1c\\xfe\\x06\\x00\\x96\\xde\\\n\\x21\\x11\\x0d\\xa6\\x85\\x1b\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\\n\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\\n\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\\n\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\\n\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\\n\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\\n\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\\n\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\\n\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x20\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x53\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xdd\\x6a\\x68\\xdc\\x64\\x63\\xda\\x64\\x61\\\n\\xd9\\x63\\x5d\\xdf\\x6a\\x6a\\xed\\x93\\x8e\\xf8\\xc3\\xbe\\xf9\\xd3\\xcc\\xf9\\\n\\xcb\\xc4\\xf4\\xb4\\xaa\\xe2\\x70\\x66\\xd1\\x5e\\x53\\xe0\\x69\\x6a\\xf2\\xad\\\n\\xaa\\xfd\\xdc\\xd8\\xfa\\xba\\xae\\xfa\\xa3\\x91\\xfa\\x9d\\x8b\\xfb\\xa9\\x9c\\\n\\xfc\\xc7\\xba\\xe9\\x7b\\x70\\xcc\\x5b\\x4c\\xf3\\xa7\\xa3\\xfd\\xdb\\xd4\\xfa\\\n\\x9a\\x87\\xf0\\x91\\x7f\\xf1\\x8e\\x7a\\xf8\\x94\\x7f\\xf9\\x92\\x7e\\xf8\\x8c\\\n\\x76\\xf8\\xb6\\xa8\\xe3\\x6e\\x63\\xc7\\x57\\x45\\xea\\x83\\x7d\\xfc\\xd4\\xcd\\\n\\xf7\\x93\\x7e\\xee\\x8a\\x75\\xf6\\x84\\x6c\\xf3\\x79\\x63\\xf8\\xaf\\xa4\\xd0\\\n\\x4f\\x3e\\xde\\x6a\\x67\\xf5\\xaf\\xa5\\xfa\\xab\\x9d\\xf0\\x8c\\x77\\xec\\x5f\\\n\\x54\\xf2\\x77\\x63\\xf4\\x8e\\x81\\xe9\\x7f\\x78\\xc0\\x53\\x3a\\xdb\\x69\\x64\\\n\\xf9\\xb9\\xaf\\xfa\\x93\\x7f\\xf0\\x85\\x70\\xff\\xff\\xff\\xe9\\x59\\x4d\\xee\\\n\\x6a\\x5e\\xf1\\x9d\\x96\\xbe\\x4f\\x36\\xda\\x63\\x5f\\xf7\\xab\\xa1\\xf8\\x86\\\n\\x70\\xf6\\x82\\x68\\xea\\x66\\x5c\\xf1\\x9c\\x96\\xbc\\x50\\x32\\xd7\\x62\\x5c\\\n\\xee\\x8c\\x81\\xf7\\x91\\x7e\\xf3\\x73\\x5d\\xe9\\x5b\\x4f\\xf0\\x83\\x7b\\xe2\\\n\\x7b\\x75\\xba\\x4b\\x2e\\xdb\\x56\\x4b\\xf6\\xab\\xa2\\xf0\\x64\\x56\\xee\\x66\\\n\\x52\\xe6\\x58\\x4c\\xe6\\x5a\\x52\\xf5\\xa3\\x9f\\xc4\\x50\\x34\\xcf\\x61\\x53\\\n\\xe3\\x6b\\x61\\xf5\\xac\\xa1\\xea\\x5c\\x50\\xe6\\x59\\x4e\\xe6\\x56\\x4c\\xe6\\\n\\x56\\x50\\xf4\\xa2\\x9e\\xd6\\x60\\x54\\xb8\\x4a\\x2a\\xcb\\x59\\x49\\xe0\\x65\\\n\\x5c\\xf5\\xa6\\xa1\\xef\\x86\\x7e\\xe9\\x63\\x5b\\xe7\\x5d\\x59\\xee\\x84\\x7d\\\n\\xf4\\xa0\\x9e\\xd7\\x5d\\x51\\xb7\\x4a\\x2b\\xc6\\x55\\x42\\xcc\\x52\\x3c\\xe8\\\n\\x7a\\x75\\xee\\x92\\x8f\\xe4\\x78\\x71\\xc1\\x4d\\x33\\xbe\\x53\\x38\\xbd\\x51\\\n\\x35\\xbc\\x4b\\x30\\xb8\\x4e\\x2e\\xb2\\xe5\\x95\\xfc\\x00\\x00\\x00\\x01\\x74\\\n\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\\n\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xa7\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\\n\\x60\\xc0\\x0e\\x18\\x99\\x98\\x59\\x90\\xb8\\xac\\x6c\\xec\\x1c\\x9c\\x5c\\xdc\\\n\\x3c\\x30\\x3e\\x2f\\x1f\\xbf\\x80\\xa0\\x90\\xb0\\x88\\xa8\\x18\\x94\\x2f\\x2e\\\n\\x21\\x29\\x25\\x2d\\x23\\x2b\\x27\\xaf\\xa0\\x08\\x16\\x50\\x52\\x16\\x52\\x51\\\n\\x55\\x03\\x02\\x75\\x0d\\x4d\\x10\\x5f\\x4b\\x5b\\x47\\x57\\x0f\\x0c\\xf4\\x0d\\\n\\x0c\\x8d\\x80\\x02\\xc6\\x26\\xa6\\x66\\xe6\\x60\\x60\\x61\\x69\\x65\\x0d\\x14\\\n\\xb0\\xb1\\xb5\\xb3\\x87\\x0a\\x38\\x38\\x3a\\x01\\x05\\x9c\\x5d\\x5c\\xdd\\x2c\\\n\\xc0\\xc0\\xdd\\xc3\\xd3\\x0b\\x64\\x88\\xb7\\x8f\\xaf\\x1f\\x88\\xef\\x1f\\x10\\\n\\x18\\x04\\xb6\\x25\\x38\\x24\\x54\\x2f\\xcc\\x22\\x3c\\x22\\x32\\x2a\\x3a\\x06\\\n\\xe2\\x90\\xd8\\xb8\\xf8\\x84\\xc4\\xa4\\xe4\\x94\\xd4\\x34\\x98\\x53\\xd3\\x33\\\n\\x32\\xb3\\xb2\\xb2\\x73\\xd2\\x90\\x7c\\x93\\x9b\\x97\\x5f\\x80\\xc3\\xdf\\x00\\\n\\x55\\xf3\\x20\\x2b\\x6d\\xfa\\x10\\xb8\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\\n\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\\n\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\\n\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\\n\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\\n\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\\n\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\\n\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\\n\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x01\\x9c\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x81\\x50\\x4c\\x54\\x45\\x00\\x00\\x38\\x3f\\x3f\\x3f\\x41\\x41\\\n\\x41\\x46\\x46\\x46\\x4a\\x4a\\x4a\\x4b\\x4b\\x4b\\x4c\\x4c\\x4c\\x4d\\x4d\\x4d\\\n\\x51\\x51\\x51\\x52\\x52\\x52\\x58\\x58\\x58\\x64\\x64\\x64\\x65\\x65\\x65\\x67\\\n\\x67\\x67\\x6b\\x6b\\x6b\\x71\\x71\\x71\\x73\\x73\\x73\\x78\\x78\\x78\\x79\\x79\\\n\\x79\\x7b\\x7b\\x7b\\x7c\\x7c\\x7c\\x81\\x81\\x81\\x82\\x82\\x82\\x85\\x85\\x85\\\n\\x8d\\x8d\\x8d\\x91\\x91\\x91\\x92\\x92\\x92\\x97\\x97\\x97\\x9e\\x9e\\x9e\\xa8\\\n\\xa8\\xa8\\xaa\\xaa\\xaa\\xad\\xad\\xad\\xae\\xae\\xae\\xbd\\xbd\\xbd\\xc1\\xc1\\\n\\xc1\\xc2\\xc2\\xc2\\xc4\\xc4\\xc4\\xce\\xce\\xce\\xd5\\xd5\\xd5\\xd9\\xd9\\xd9\\\n\\xdd\\xdd\\xdd\\xe8\\xe8\\xe8\\x32\\x32\\x32\\x9f\\xe6\\xc8\\x1a\\x00\\x00\\x00\\\n\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\\n\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x09\\x70\\x48\\x59\\x73\\x00\\\n\\x00\\x0b\\x13\\x00\\x00\\x0b\\x13\\x01\\x00\\x9a\\x9c\\x18\\x00\\x00\\x00\\x07\\\n\\x74\\x49\\x4d\\x45\\x07\\xdd\\x06\\x07\\x07\\x07\\x1d\\x59\\xeb\\x84\\xd3\\x00\\\n\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x43\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\\n\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\\n\\x47\\x49\\x4d\\x50\\xef\\x64\\x25\\x6e\\x00\\x00\\x00\\x6b\\x49\\x44\\x41\\x54\\\n\\x18\\xd3\\xad\\x8c\\xc7\\x11\\x80\\x20\\x00\\x04\\x4f\\x31\\x60\\x42\\xcc\\x01\\\n\\x03\\xe6\\xd0\\x7f\\x81\\x8a\\xe3\\x58\\x81\\xfb\\xba\\xdb\\xc7\\x02\\xff\\x50\\\n\\x34\\x29\\x90\\x36\\xc5\\x7b\\xad\\xea\\xd8\\xc7\\x2c\\xd9\\xf6\\xb9\\xb2\\x1e\\\n\\xc1\\x57\\xd7\\xf4\\xeb\\xd8\\x37\\xdd\\x96\\xab\\x7f\\xe6\\x80\\x36\\x2c\\x53\\\n\\xaf\\x01\\xf9\\xa9\\x4c\\x00\\x47\\x27\\x94\\x12\\xdd\\xb9\\xa7\\xc2\\x2e\\x3b\\\n\\x79\\x67\\x85\\xfc\\xb2\\xc6\\x5f\\x59\\x11\\x46\\x42\\x76\\xa5\\xfd\\x66\\x3d\\\n\\xc6\\x00\\xc6\\x3c\\x03\\xb8\\x00\\x26\\xf8\\x09\\xe1\\xf9\\xba\\xb9\\x05\\x00\\\n\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x8c\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xaa\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x4c\\x92\\xd2\\x45\\x8c\\xcd\\x41\\x8b\\xcb\\\n\\x40\\x8b\\xc9\\x49\\x91\\xd1\\x6a\\xa0\\xd0\\xa0\\xbf\\xe0\\xae\\xc5\\xe3\\x9f\\\n\\xbc\\xdf\\x62\\x97\\xc8\\x35\\x7d\\xbd\\x47\\x8d\\xcf\\x8c\\xb2\\xd9\\xb8\\xcd\\\n\\xe6\\x9d\\xba\\xe0\\x85\\xab\\xd7\\x82\\xa9\\xd6\\x91\\xb3\\xd9\\xab\\xc2\\xe1\\\n\\x86\\xae\\xd4\\x35\\x6b\\xb1\\x47\\x8e\\xce\\xb3\\xca\\xe6\\x7d\\xa9\\xd6\\x79\\\n\\xa5\\xd1\\xa8\\xc4\\xe2\\xa8\\xc3\\xe1\\x76\\xa2\\xd0\\x77\\xa4\\xd1\\xa2\\xbd\\\n\\xdd\\x85\\xac\\xd0\\x35\\x66\\xab\\x68\\x9c\\xcd\\xb4\\xcb\\xe7\\x7a\\xa5\\xd4\\\n\\x77\\xa0\\xd0\\x74\\x9e\\xcf\\xf5\\xf8\\xfb\\x71\\x9e\\xcb\\x71\\x9d\\xcb\\x77\\\n\\xa1\\xcd\\xa5\\xc0\\xdf\\x5b\\x8a\\xb9\\x41\\x8e\\xcb\\x9f\\xbc\\xe0\\x93\\xb3\\\n\\xdb\\x75\\xa0\\xcf\\x72\\x9e\\xcd\\x71\\x9c\\xcb\\xa3\\xbf\\xdd\\xa2\\xbf\\xdd\\\n\\x6b\\x99\\xc5\\x6b\\x98\\xc4\\x85\\xab\\xd1\\x97\\xba\\xd8\\x35\\x56\\x9e\\x3b\\\n\\x85\\xc5\\xb0\\xc9\\xe4\\x7a\\xa3\\xd0\\x71\\x9d\\xcc\\x6c\\x9a\\xc7\\x6b\\x98\\\n\\xc5\\xff\\xff\\xff\\xfe\\xff\\xff\\x69\\x96\\xc3\\x68\\x94\\xc1\\x68\\x94\\xc2\\\n\\x6d\\x98\\xc3\\xab\\xc5\\xdf\\x34\\x53\\x95\\x35\\x7e\\xbf\\xaf\\xc7\\xe3\\x6a\\\n\\x97\\xc4\\x69\\x96\\xc4\\xd4\\xe0\\xee\\xf4\\xf7\\xfb\\x66\\x90\\xbf\\x65\\x8f\\\n\\xbe\\x64\\x8f\\xbe\\x69\\x92\\xbe\\xaa\\xc6\\xdf\\x34\\x50\\x92\\x35\\x7e\\xbc\\\n\\x9c\\xbc\\xdb\\x89\\xad\\xd5\\x6c\\x98\\xc7\\x69\\x95\\xc3\\x67\\x93\\xc1\\xd3\\\n\\xdf\\xed\\xf4\\xf7\\xfa\\x63\\x8b\\xbb\\x63\\x8a\\xb9\\x62\\x8a\\xb8\\x78\\x9d\\\n\\xc5\\x93\\xb8\\xd2\\x35\\x51\\x90\\x5e\\x91\\xbf\\xa8\\xc2\\xe0\\x6c\\x96\\xc5\\\n\\x69\\x91\\xc2\\xb8\\xcb\\xe1\\xfc\\xfd\\xfe\\xd0\\xdc\\xea\\x5e\\x85\\xb4\\x5e\\\n\\x85\\xb3\\x99\\xb5\\xd4\\x56\\x7b\\xae\\x35\\x69\\xab\\x81\\xaa\\xcf\\xa2\\xbc\\\n\\xda\\x66\\x91\\xbe\\x62\\x8c\\xba\\x5f\\x89\\xb7\\x5e\\x84\\xb3\\x5d\\x83\\xb1\\\n\\x5c\\x83\\xb0\\x8d\\xaa\\xcd\\x79\\xa5\\xc6\\x34\\x50\\x89\\x33\\x55\\x9f\\x7d\\\n\\xa7\\xcb\\x9f\\xbb\\xd8\\x77\\x9c\\xc3\\x62\\x8a\\xb6\\x60\\x86\\xb4\\x72\\x96\\\n\\xbe\\x97\\xb3\\xd1\\x77\\xa3\\xc5\\x35\\x4f\\x84\\x34\\x55\\x99\\x57\\x80\\xb2\\\n\\x93\\xb7\\xd5\\xa6\\xc3\\xdb\\xa6\\xc3\\xda\\x90\\xb4\\xd2\\x52\\x7a\\xab\\x34\\\n\\x4f\\x86\\x34\\x52\\x92\\x34\\x50\\x8a\\x34\\x4f\\x88\\x35\\x50\\x89\\xba\\xf0\\\n\\x4c\\x1a\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xbc\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x0e\\x18\\x99\\x98\\x59\\x90\\xb8\\\n\\xac\\x6c\\xec\\x1c\\x1c\\x9c\\x5c\\xdc\\x30\\x3e\\x0f\\x2f\\x1f\\xbf\\x80\\xa0\\\n\\x90\\xb0\\x88\\x28\\x84\\x2f\\xc6\\x2b\\x2e\\x21\\x29\\x25\\x2d\\x23\\x2b\\x27\\\n\\xaf\\x00\\x16\\x50\\x54\\x52\\x56\\x51\\x55\\x53\\x53\\xd7\\xd0\\xd4\\xd2\\x06\\\n\\xf1\\x75\\x74\\xf5\\xf4\\x0d\\x0c\\x8d\\x8c\\x4d\\x4c\\x4c\\xcd\\xcc\\x2d\\x80\\\n\\x02\\x96\\x56\\xd6\\x36\\xb6\\x76\\xf6\\x0e\\x8e\\x4e\\xce\\x2e\\xae\\x6e\\x40\\\n\\x01\\x77\\x0f\\x19\\x13\\x4f\\x2f\\x6f\\x1f\\x5f\\x3f\\xff\\x80\\xc0\\x20\\xa0\\\n\\x40\\x70\\x48\\x68\\x58\\x78\\x44\\x64\\x54\\x74\\x4c\\x6c\\x5c\\x7c\\x02\\xc8\\\n\\x90\\xc4\\xa4\\xe4\\x94\\xd4\\x34\\x87\\xf4\\x8c\\xcc\\xac\\x6c\\xb0\\x2d\\x39\\\n\\xb9\\x79\\xf9\\x05\\x85\\x45\\xc5\\x25\\xa5\\x65\\xe5\\x10\\x87\\x54\\x54\\x56\\\n\\x55\\xd7\\xd4\\xd6\\xd5\\x37\\x34\\xc2\\x9c\\xda\\xd4\\xdc\\xd2\\xda\\xd6\\xde\\\n\\xd1\\x89\\xe4\\x9b\\xae\\xee\\x9e\\x5e\\x1c\\xfe\\x06\\x00\\x02\\x1a\\x28\\x1b\\\n\\xda\\x0a\\xf8\\x36\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\\n\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\\n\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\\n\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\\n\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\\n\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\\n\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\\n\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x0c\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x90\\\n\\x50\\x4c\\x54\\x45\\x00\\x00\\x00\\x7b\\xa7\\xdc\\x66\\x8b\\xc0\\x7a\\xa4\\xdb\\\n\\xff\\xff\\xff\\x63\\x87\\xbd\\x79\\xa3\\xd9\\xf9\\xfb\\xfc\\xf8\\xfb\\xfc\\x33\\\n\\x34\\x36\\x60\\x85\\xba\\x79\\xa2\\xd8\\xfa\\xfd\\xfd\\xfa\\xfc\\xfc\\x5e\\x81\\\n\\xb7\\x76\\xa0\\xd5\\xfc\\xfd\\xfd\\x5c\\x7e\\xb5\\x75\\x9e\\xd4\\xfc\\xfe\\xfe\\\n\\xfb\\xfd\\xfd\\x5a\\x7c\\xb2\\x73\\x9c\\xd1\\x58\\x7a\\xb0\\x6f\\x97\\xcc\\xfc\\\n\\xff\\xff\\xfd\\xff\\xff\\x54\\x75\\xac\\x6e\\x94\\xca\\xfe\\xff\\xff\\xfa\\xfe\\\n\\xfe\\xf9\\xfc\\xfc\\x53\\x73\\xaa\\x6c\\x92\\xc8\\xfc\\xfc\\xfc\\x51\\x72\\xa9\\\n\\x51\\x71\\xa9\\x68\\x8e\\xc3\\x64\\x88\\xbe\\x61\\x85\\xbb\\x5f\\x83\\xb9\\x5c\\\n\\x7e\\xb4\\x58\\x7b\\xb1\\x57\\x79\\xae\\x56\\x76\\xad\\x54\\x75\\xab\\x53\\x73\\\n\\xa9\\x00\\x00\\x00\\x67\\x14\\x96\\xea\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\x7f\\x49\\x44\\x41\\x54\\x18\\xd3\\x6d\\x8f\\xd7\\x12\\\n\\x82\\x30\\x10\\x45\\x8f\\xb8\\x96\\xa8\\xd8\\x22\\x56\\x04\\x4b\\xec\\xe5\\xff\\\n\\x3f\\xcf\\x24\\x30\\x20\\xe2\\x7d\\xd8\\xd9\\x73\\xe6\\xce\\x6c\\x02\\xbf\\x69\\\n\\x54\\x12\\x40\\x53\\xbe\\xd3\\x82\\xb6\\x74\\xba\\x6e\\x55\\xca\\xcd\\x1e\\xf4\\\n\\x65\\x10\\x7a\\xf6\\x62\\x08\\x23\\x19\\x67\\xec\\xc5\\x24\\x6f\\x58\\xaa\\x34\\\n\\x1c\\x14\\x8d\\xa9\\xe8\\x99\\xca\\x62\\x45\\x04\\x73\\xd1\\xba\\xbc\\xb2\\xf8\\\n\\x23\\x96\\xb2\\x5a\\x97\\x62\\x03\\xb1\\xc8\\x36\\xbf\\x9b\\xa4\\xb2\\x83\\xbd\\\n\\xa5\\x43\\xf1\\xf4\\x23\\x98\\x53\\x70\\xbe\\x5c\\x6f\\xd1\\xfd\\xf1\\x7c\\xbd\\\n\\x8d\\xa9\\x7d\\x9e\\x0f\\x29\\xc3\\x08\\x3e\\x72\\x35\\xcb\\xb4\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\\n\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x35\\\n\\x35\\x3a\\x32\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\xe4\\x9f\\xd5\\x63\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\\n\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\\n\\x35\\x35\\x3a\\x32\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x95\\xc2\\x6d\\xdf\\x00\\\n\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x98\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xc6\\\n\\x50\\x4c\\x54\\x45\\x00\\x00\\x00\\xd8\\xd8\\xd8\\xd7\\xd7\\xd7\\xd6\\xd6\\xd6\\\n\\xd5\\xd5\\xd5\\xd3\\xd3\\xd3\\xd2\\xd2\\xd2\\xeb\\xeb\\xeb\\xf5\\xf5\\xf5\\xfc\\\n\\xfc\\xfc\\xf4\\xf4\\xf4\\xe8\\xe8\\xe8\\xce\\xce\\xce\\xf8\\xf8\\xf8\\xff\\xff\\\n\\xff\\xf2\\xf2\\xf2\\xf1\\xf1\\xf1\\xf7\\xf7\\xf7\\xc9\\xc9\\xc9\\xef\\xef\\xef\\\n\\xee\\xee\\xee\\xe9\\xe9\\xea\\xf0\\xf0\\xf0\\xec\\xec\\xec\\xc0\\xc0\\xc0\\x75\\\n\\x75\\x75\\x74\\x74\\x74\\xe9\\xe9\\xe9\\xdd\\xdd\\xdd\\xb3\\xb3\\xb3\\xed\\xed\\\n\\xed\\x7f\\x7f\\x7f\\x80\\x80\\x80\\xab\\xab\\xab\\xd4\\xd4\\xd4\\x73\\x73\\x73\\\n\\x7b\\x7b\\x7b\\xfa\\xfa\\xfa\\xa7\\xa7\\xa7\\x7e\\x7e\\x7e\\xe5\\xe5\\xe5\\xa2\\\n\\xa2\\xa2\\xd1\\xd1\\xd1\\xe4\\xe4\\xe4\\xe1\\xe1\\xe1\\x9d\\x9d\\x9d\\xfe\\xfe\\\n\\xfe\\xe2\\xe2\\xe2\\xfb\\xfb\\xfb\\xc6\\xc6\\xc6\\x99\\x99\\x99\\xc4\\xc4\\xc4\\\n\\xe3\\xe3\\xe3\\xb9\\xb9\\xb9\\xf3\\xf3\\xf3\\xe7\\xe7\\xe7\\xaa\\xaa\\xaa\\xe6\\\n\\xe6\\xe6\\x93\\x93\\x93\\x9c\\x9c\\x9c\\x97\\x97\\x97\\x96\\x96\\x96\\x92\\x92\\\n\\x92\\x90\\x90\\x90\\x8e\\x8e\\x8e\\x00\\x00\\x00\\x34\\x61\\x64\\x9f\\x00\\x00\\\n\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\\n\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xac\\x49\\x44\\x41\\x54\\\n\\x18\\xd3\\x6d\\x8f\\xdb\\x16\\x42\\x50\\x14\\x45\\x45\\x3a\\x87\\xc3\\x96\\xc8\\\n\\x3d\\x94\\x8a\\x22\\xa4\\xfb\\xbd\\xff\\xff\\xaa\\x8e\\x61\\xa4\\x1e\\xec\\xb7\\\n\\x39\\x1f\\xd6\\x5e\\x8b\\x61\\x3a\\xaf\\xc7\\x72\\x7d\\x7e\\xf0\\xc7\\x08\\x0b\\\n\\x82\\x48\\xa4\\x96\\x65\\x90\\x95\\xa1\\x0a\\x78\\xd4\\xb2\\xa6\\x8f\\x0d\\x13\\\n\\x01\\xb6\\x6a\\x66\\x11\\x68\\x00\\xb6\\x03\\xe0\\x82\\x37\\xa1\\x82\\xc3\\xaa\\\n\\x0f\\x10\\x84\\x00\\x44\\xd4\\xa7\\x54\\xcc\\x04\\xc3\\xb7\\x1d\\x27\\x8a\\xe6\\\n\\xc8\\x5d\\x2c\\xa9\\xe0\\x05\\x0d\\x05\\x61\\x1c\\xc6\\x41\\x42\\xc4\\x15\\x15\\\n\\x6b\\x05\\xbb\\x4d\\x46\\xaa\\x64\\x1b\\x2a\\xa4\\x34\\x27\\x4d\\x46\\x51\\x6e\\\n\\xab\\xfa\\xcd\\xce\\x80\\x24\\x49\\xf7\\x45\\x96\\x17\\x55\\x53\\xe4\\x60\\xe6\\\n\\x47\\x72\\x1a\\x96\\x59\\xf5\\xad\\x7a\\x96\\x2e\\x58\\xf1\\xac\\xeb\\x6f\\xcc\\\n\\xed\\xfe\\x78\\xbe\\xde\\xdd\\xc3\\x3f\\x85\\x11\\x0f\\x59\\xb8\\x3e\\x1d\\x15\\\n\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\\n\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\\n\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x33\\x2d\\x30\\x31\\x2d\\x31\\x38\\x54\\x31\\x34\\x3a\\x34\\x32\\x3a\\x31\\x30\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\xfd\\xda\\x69\\x7f\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x33\\x2d\\x30\\x31\\x2d\\x31\\x38\\x54\\x31\\x34\\x3a\\x34\\x32\\x3a\\x31\\\n\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x8c\\x87\\xd1\\xc3\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x79\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x8f\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xb3\\x70\\x2d\\xb5\\x73\\x2e\\xb7\\x77\\x30\\\n\\xba\\x7a\\x32\\xc2\\x8b\\x48\\xd0\\xa6\\x6a\\xd1\\xa9\\x6e\\xc6\\x93\\x51\\xbb\\\n\\x82\\x37\\xb7\\x76\\x30\\xc3\\x8d\\x4b\\xd2\\xaa\\x70\\xd2\\xaa\\x71\\xd2\\xac\\\n\\x74\\xd3\\xaf\\x7a\\xc4\\x97\\x56\\xb7\\x82\\x39\\xb8\\x79\\x31\\xc4\\x90\\x4d\\\n\\xd3\\xab\\x73\\xc6\\x94\\x52\\xba\\x83\\x3b\\xb9\\x85\\x3c\\xc2\\x95\\x56\\xcf\\\n\\xac\\x7d\\xbc\\x91\\x55\\xac\\x79\\x38\\xba\\x7a\\x33\\xc6\\x91\\x50\\xd3\\xad\\\n\\x76\\xc6\\x95\\x54\\xbc\\x89\\x41\\xd5\\xd4\\xd2\\xb4\\x83\\x41\\xbb\\x8d\\x55\\\n\\xc7\\xa5\\x77\\xb2\\x84\\x50\\x9e\\x68\\x33\\xba\\x7e\\x34\\xc6\\x93\\x52\\xd3\\\n\\xae\\x79\\xc4\\x97\\x55\\xba\\x87\\x42\\xcc\\xcb\\xca\\xed\\xed\\xed\\xef\\xef\\\n\\xef\\xdc\\xdb\\xd9\\xa6\\x76\\x3d\\xae\\x80\\x4d\\xbd\\x9a\\x6b\\xa2\\x75\\x47\\\n\\x8b\\x54\\x2d\\xbb\\x7f\\x36\\xc6\\x95\\x53\\xc4\\x97\\x57\\xba\\x87\\x43\\xd0\\\n\\xcf\\xcd\\xee\\xee\\xee\\xdb\\xda\\xd9\\x97\\x64\\x38\\x9f\\x70\\x44\\xb1\\x8c\\\n\\x5c\\x94\\x64\\x3c\\x7a\\x41\\x26\\xba\\x84\\x39\\xc2\\x96\\x57\\xb3\\x80\\x3e\\\n\\xe0\\xde\\xdc\\xe3\\xe1\\xdf\\x81\\x4b\\x2d\\x90\\x5f\\x3a\\x79\\x3e\\x25\\xb0\\\n\\x7e\\x38\\x91\\x8f\\x8d\\xf6\\xf6\\xf6\\x74\\x74\\x74\\x76\\x76\\x76\\x77\\x77\\\n\\x77\\x78\\x78\\x78\\xf4\\xf4\\xf4\\x8d\\x8b\\x8a\\x77\\x41\\x2a\\x8b\\x8b\\x8b\\\n\\xf1\\xf1\\xf1\\x99\\x99\\x99\\x9c\\x9c\\x9c\\x7c\\x7c\\x7c\\x85\\x85\\x85\\xf0\\\n\\xf0\\xf0\\x7b\\x7b\\x7b\\x9e\\x9e\\x9e\\xa1\\xa1\\xa1\\x81\\x81\\x81\\x71\\x71\\\n\\x71\\x56\\xa1\\x4d\\x56\\x8d\\x50\\xa4\\xc1\\xa2\\x7e\\x7e\\x7e\\xa4\\xa4\\xa4\\\n\\xa6\\xa6\\xa6\\xa8\\xd6\\xa1\\x62\\xaf\\x59\\x56\\x9e\\x4d\\x49\\x91\\x41\\x62\\\n\\xb1\\x58\\x70\\xb4\\x66\\x7d\\xbf\\x72\\x6d\\xb4\\x62\\x62\\x91\\x5e\\xe5\\xe5\\\n\\xe5\\x82\\x82\\x82\\xa9\\xa9\\xa9\\xac\\xac\\xac\\x89\\x89\\x89\\xe2\\xe2\\xe2\\\n\\x7e\\xbc\\x76\\x8f\\xca\\x84\\x80\\xc1\\x74\\x5e\\xa4\\x55\\x2f\\x70\\x2a\\x3b\\\n\\x80\\x35\\x3f\\x70\\x3b\\x4d\\x69\\x4b\\x68\\x68\\x68\\x87\\x87\\x87\\x8c\\x8c\\\n\\x8c\\x52\\x52\\x52\\x51\\x72\\x4e\\x49\\x83\\x43\\x3b\\x7e\\x36\\x24\\x63\\x21\\\n\\xff\\xff\\xff\\xa3\\x2b\\x10\\x6a\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\\n\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\\n\\x48\\x00\\x00\\x00\\xc4\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x0e\\x18\\\n\\x99\\x98\\x59\\x90\\xf9\\x4c\\xac\\x6c\\xec\\x1c\\x9c\\x08\\x3e\\x17\\x37\\x0f\\\n\\x2f\\x1f\\xbf\\x80\\x20\\x8c\\x2f\\x24\\x2c\\x22\\x2a\\x26\\x2e\\x21\\x29\\x25\\\n\\x0d\\xe1\\xcb\\xc8\\xca\\xc9\\x2b\\x28\\x2a\\x2a\\x29\\xab\\xa8\\xaa\\x81\\xf8\\\n\\xea\\x1a\\x9a\\x5a\\xda\\x3a\\xba\\x7a\\xfa\\x06\\x86\\x46\\xc6\\x26\\x0c\\x0c\\\n\\xa6\\x66\\xfc\\xe6\\x16\\x96\\x56\\x7a\\x7a\\x7a\\xd6\\x36\\xb6\\x76\\xf6\\x0e\\\n\\x0c\\x0c\\x8e\\x4e\\xce\\x2e\\xba\\x7a\\x20\\xe0\\xea\\xe6\\xee\\x01\\xd2\\xe3\\\n\\xe9\\xe5\\xad\\xe7\\xe3\\xeb\\xe7\\xaf\\x17\\x10\\x18\\x04\\x31\\x35\\x38\\x44\\\n\\xcf\\x2f\\x34\\x2c\\x5c\\x2f\\xc0\\x17\\x6a\\x6d\\x44\\xa4\\x5e\\x54\\x74\\x4c\\\n\\xac\\x5e\\x40\\x1c\\x84\\x1f\\x9f\\x90\\x18\\x99\\x94\\x9c\\x12\\x11\\x99\\x9a\\\n\\x96\\x9e\\xc1\\xc0\\x90\\x99\\x95\\x9d\\x93\\x9b\\x97\\x5f\\x50\\x58\\x54\\x5c\\\n\\x52\\x5a\\x56\\x5e\\xc1\\x10\\x9f\\x51\\x59\\x55\\x5d\\x53\\x5b\\x14\\x5c\\x57\\\n\\xdf\\xd0\\xd8\\x54\\xd1\\x8c\\xe1\\x6f\\x00\\xd2\\x37\\x28\\xf3\\x65\\x47\\x53\\\n\\xba\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\\n\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\\n\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\\n\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x32\\x2d\\x30\\x32\\x2d\\x32\\x30\\x54\\x31\\x34\\x3a\\x31\\x39\\x3a\\\n\\x35\\x37\\x2b\\x30\\x31\\x3a\\x30\\x30\\xd0\\x2a\\x90\\xa0\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x0a\\x1b\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\xc5\\x00\\x00\\x00\\x13\\x08\\x02\\x00\\x00\\x00\\xaf\\x3d\\x5e\\x95\\\n\\x00\\x00\\x00\\x01\\x73\\x52\\x47\\x42\\x00\\xae\\xce\\x1c\\xe9\\x00\\x00\\x00\\\n\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0e\\x9c\\x00\\x00\\x0e\\x75\\x01\\x88\\x28\\\n\\x1b\\x78\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\xe0\\x02\\x10\\x09\\x32\\\n\\x33\\xad\\x38\\xbb\\x35\\x00\\x00\\x00\\x19\\x74\\x45\\x58\\x74\\x43\\x6f\\x6d\\\n\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\\n\\x68\\x20\\x47\\x49\\x4d\\x50\\x57\\x81\\x0e\\x17\\x00\\x00\\x09\\x88\\x49\\x44\\\n\\x41\\x54\\x68\\xde\\xed\\x5a\\x69\\x54\\x53\\xd7\\x16\\xde\\xc9\\x4d\\x98\\x12\\\n\\x12\\x04\\x84\\x04\\x50\\x06\\x47\\xc0\\x04\\x51\\x99\\x9c\\x18\\x44\\x01\\x65\\\n\\x0a\\xe2\\xf0\\x6c\\xb5\\x0a\\x45\\x96\\x53\\xeb\\x54\\xc5\\x22\\x88\\x80\\x58\\\n\\x87\\x57\\x95\\x22\\x98\\xaa\\xcf\\xd7\\x2a\\x43\\x6b\\x05\\x99\\xaa\\x75\\x7a\\\n\\xb6\\xce\\x80\\x95\\xf6\\x39\\xd6\\xa5\\x8c\\x32\\xda\\x20\\x21\\x90\\xf1\\xde\\\n\\xbc\\x1f\\x57\\xaf\\x14\\x92\\x10\\x82\\xed\\x7b\\x6b\\xbd\\x7c\\x3f\\xb2\\xee\\\n\\xdd\\xe7\\xbb\\x67\\xef\\xfd\\x9d\\x73\\xcf\\x74\\x43\\xfa\\xbd\\xb5\\x01\\xf4\\\n\\xd0\\xe3\\x1d\\x81\\xac\\x97\\x40\\x0f\\x7d\\x7f\\xd2\\x43\\xdf\\x9f\\xf4\\xf8\\\n\\x3f\\x00\\x85\\xb8\\xaa\\xa8\\xa8\\x1a\\x90\\x1d\\x1c\\x1a\\x29\\x68\\x6b\\xd4\\\n\\x40\\x90\\x4a\\xa5\\x24\\x32\\xd9\\x80\\x4a\\xfd\\xaf\\x24\\xf3\\xf3\\xbd\\x6a\\\n\\x57\\x17\\x67\\x43\\x43\\xc3\\xa1\\x54\\xf2\\x4e\\x74\\xd0\\x06\\xed\\xed\\x2f\\\n\\x3f\\xdd\\xbe\\x23\\xf1\\xd3\\xad\\x0e\\xf6\\x23\\xff\\xd7\\xc4\\xd1\\x59\\x49\\\n\\x4a\\xef\\x9b\\x90\\x30\\x9e\\x06\\x6a\\x8f\\xa8\\x53\\x43\\x69\\x65\\xd5\\xdd\\\n\\xa4\\x1d\\x69\\x35\\x35\\xb5\\x3d\\x62\\xb1\\xa7\\xc7\\xe4\\xdd\\xbb\\x52\\xc7\\\n\\x8e\\x19\\xfd\\x57\\x76\\xa6\\xa6\\xa6\\xe6\\xd9\\xc1\\x61\\x47\\xb2\\x33\\x17\\\n\\xcc\\xe7\\xd5\\xd4\\xd4\\xb6\\xb4\\xb6\\xf9\\x78\\x7b\\xea\\x56\\x95\\xce\\x3a\\\n\\xac\\x5e\\xb7\\xe1\\xf2\\x95\\xab\\x18\\x8a\\xd2\\xe9\\x34\\x37\\x37\\x6e\\x7c\\\n\\x5c\\xac\\x86\\x18\\x10\\x0a\\x52\\x78\\xb6\\x64\\xcb\\xe6\\x0d\\xea\\x08\\x43\\\n\\xcc\\x42\\x9d\\x38\\xef\\x96\\x3c\\xc0\\x7c\\xa7\\x54\\x0f\\x0d\\xb5\\x5c\\xbf\\\n\\x71\\xf3\\xbd\\xa5\\x31\\x9f\\x6c\\x5a\\xff\\xe4\\x61\\xf5\\xd3\\x47\\xbf\\x4c\\\n\\x74\\xe3\\x06\\xcf\\x8b\\x78\\xfe\\xbc\\xe6\\xaf\\xec\\x4f\\x36\\x36\\xec\\x92\\\n\\xa2\\xd3\\x11\\xe1\\xa1\\x00\\x50\\x5a\\x7e\\xee\\x6c\\x49\\xe9\\x50\\x6a\\xd3\\\n\\x4d\\x07\\x99\\x54\\xba\\xf5\\x93\\x8d\\x8f\\x1f\\xdc\\x2b\\xfc\\xae\\xc0\\xc9\\\n\\xd1\\x81\\x17\\xbd\\xe8\\x4c\\x51\\xb1\\x3a\\xb2\\x29\\xdd\\x14\\x00\\x8c\\x8c\\\n\\x8d\\xd4\\x11\\x86\\x9e\\x85\\x4a\\x71\\xde\\x2d\\x19\\x00\\x44\\x22\\xd1\\xf1\\\n\\x13\\x5f\\x37\\x34\\x36\\xf6\\x1d\\x9f\\xd4\\x81\\x44\\x22\\x69\\xd0\\x51\\xa9\\\n\\x54\\xae\\xdf\\xb4\\x35\\x25\\x39\\x71\\x56\\x80\\x1f\\x00\\x18\\x19\\x19\\x25\\\n\\x25\\x26\\xd4\\xd4\\xd6\\xa5\\x65\\xec\\x39\\x71\\xec\\x48\\x59\\xf9\\x39\\x85\\\n\\x42\\x11\\x19\\x11\\x86\\x93\\x73\\xf8\\x47\\x7d\\x67\\xce\\x70\\x71\\x1e\\x2f\\\n\\x97\\x2b\\xb2\\xb2\\x73\\x2e\\x5f\\xb9\\x4a\\xa3\\xd1\\xe2\\xe3\\x62\\x03\\xfc\\\n\\x7d\\x6b\\x6a\\xeb\\xbe\\x3e\\x99\\x1b\\xc5\\x8b\\x38\\x94\\x79\\x98\\xc9\\x64\\\n\\xfa\\xf9\\xce\\xa0\\xd1\\x68\\x01\\xfe\\xbe\\xf8\\x1b\\x73\\x32\\x37\\x7f\\xc3\\\n\\xfa\\x75\\xf8\\x4c\\x7a\\x32\\x37\\xdf\\x7d\\xa2\\x1b\\x8d\\x46\\xeb\\xcd\\x4f\\\n\\xd8\\xb2\\xe9\\xd2\\xe5\\x2b\\xae\\x2e\\xce\\x77\\xee\\xdf\\xbf\\xfb\\xf3\\x3d\\\n\\x99\\x4c\\x96\\x97\\xff\\xad\\xab\\x8b\\xb3\\x9b\\x1b\\xa7\\xbf\\x2f\\xdd\\x5a\\\n\\x45\\xb3\\x0e\\x00\\x60\\x60\\x68\\xa8\\xc4\\x30\\x04\\x41\\x1c\\x1d\\xec\\x93\\\n\\xb7\\x6f\\xa3\\xd3\\xe9\\x09\\xdb\\x92\\x42\\xe7\\x06\\x1b\\x1a\\x1a\\xf6\\x8f\\\n\\x81\\x4a\\xa5\\x90\\xc9\\x64\\x2a\\x85\\x0a\\x00\\xfd\\x4b\\xaf\\x5d\\xbf\\xa1\\\n\\x7d\\x16\\x35\\xb5\\x75\\xff\\xfc\\xea\\xe4\\x82\\xe8\\xa8\\x1c\\xfe\\x31\\x91\\\n\\x48\\x14\\x34\\x3b\\x30\\xc0\\xdf\\x37\\x33\\x2b\\xa7\\xae\\xbe\\xde\\xd3\\x63\\\n\\xca\\xda\\xd5\\xf1\\x02\\x41\\x07\\x2e\\x8e\\x81\\x19\\xf3\\xd6\\xed\\x8a\\xdc\\\n\\xfc\\x82\\xee\\xee\\x1e\\x5b\\x1b\\x9b\\xf4\\xd4\\x64\\x00\\xe8\\x63\\x69\\x6f\\\n\\x7f\\x89\\x93\\x3b\\xa4\\xd2\\x83\\x5f\\x1c\\x5e\\xf9\\x61\\x0c\\xff\\xe8\\xf1\\\n\\x86\\xfa\\x46\\x0e\\xc7\\x75\\xfd\\x47\\x6b\\x8c\\x8c\\x8c\\x00\\xa0\\xb5\\xb5\\\n\\x2d\\x87\\x7f\\xf4\\x79\\x4d\\x2d\\x8b\\x65\\x2d\\x12\\x75\\x4b\\x24\\x12\\xbf\\\n\\x99\\xd3\\xb5\\x5a\\x8f\\x93\\x48\\x24\\xcd\\x84\\x07\\x0f\\x1f\\x35\\x34\\x34\\\n\\x46\\xf1\\xc2\\x7b\\x1b\\x17\\x2f\\x8c\\xbe\\xfa\\xe3\\x4f\\x78\\xe7\\xdd\\xb6\\\n\\x7d\\x07\\x86\\x61\\xf8\\x8a\\x21\\x3d\\x63\\xaf\\xd5\\x70\\x4b\\x00\\xd8\\xbc\\\n\\x65\\x5b\\x63\\x63\\xd3\\x91\\xec\\xcc\\xb8\\xd8\\x15\\xcb\\x63\\xe3\\x9f\\xfc\\\n\\xf6\\x54\\x26\\x93\\x65\\x66\\xe5\\x24\\x26\\xa5\\xf8\\x78\\x7b\\xb9\\xb9\\x71\\\n\\xda\\xda\\x5f\\xee\\xff\\xfc\\x10\\x5e\\xdb\\xd9\\x92\\xb2\\xac\\x6c\\xfe\\xcd\\\n\\x9b\\xb7\\x71\\xe9\\x93\\x53\\xd2\\xe8\\x74\\x7a\\x1f\\xbe\\x4c\\x2e\\xcb\\xcc\\\n\\xca\\x41\\x31\\xb4\\xa6\\xb6\\xae\\xae\\xae\\xbe\\xab\\xab\\xeb\\xfe\\x83\\x87\\\n\\x82\\x8e\\x0e\\x95\\xbe\\x74\\xeb\\x4c\\x03\\xaf\\x1e\\x28\\x08\\x8a\\xa2\\xc4\\\n\\x6d\\x7c\\x5c\\x4c\\x97\\xa8\\xeb\\x5e\\xf5\\xaf\\xea\\x62\\xa0\\x20\\x08\\x99\\\n\\x4c\\x56\\x59\\x3a\\xa8\\x2c\\x24\\x12\\x49\\x56\\x36\\x3f\\x87\\x7f\\x2c\\x32\\\n\\x3c\\x74\\xaa\\x8f\\xd7\\x86\\xcd\\x5b\\x63\\x57\\xae\\xf2\\xf1\\xf6\\x8c\\x9e\\\n\\xcf\\xe3\\x1f\\x3d\\x7e\\x2a\\xaf\\x80\\x10\\xe7\\x45\\x53\\xd3\\xca\\x55\\x6b\\\n\\x23\\xc3\\xc3\\xe2\\xe3\\x62\\xbd\\x3c\\xa7\\x00\\x40\\x7f\\x0b\\x41\\x26\\x91\\\n\\x48\\x5f\\x1e\\xfd\\x47\\x72\\x4a\\xda\\xcc\\xe9\\xd3\\x78\\xbc\\xf0\\xfc\\x82\\\n\\xd3\\x07\\x33\\x0f\\x03\\x80\\x42\\xa1\\x08\\x8f\\x5a\\xc8\\xe5\\x72\\x0e\\x67\\\n\\x1e\\x98\\xec\\x3e\\xb1\\xac\\xfc\\xdc\\xbe\\x3d\\xbb\\x46\\x8d\\x72\\x52\\x3d\\\n\\x3e\\xf5\\x7e\\x0b\\xb5\\x11\\xb1\\xb1\\xf1\\xc5\\xb0\\x61\\x66\\x78\\xb7\\x25\\\n\\xc0\\x66\\xb3\\x84\\xc2\\x2e\\x14\\x45\\x23\\x23\\xc2\\x12\\x93\\x77\\x5e\\xfd\\\n\\xf1\\x5a\\x80\\xbf\\x6f\\x71\\x49\\x59\\x74\\x54\\xa4\\xa5\\xa5\\xe5\\x8b\\xa6\\\n\\xa6\\x92\\xb2\\xf2\\xc7\\x0f\\xaa\\x0d\\x0d\\x0c\\xec\\x6c\\x6d\\xa7\\x4d\\xf5\\\n\\x3e\\xff\\xc3\\xc5\\x98\\xe5\\xcb\\x00\\xe0\\xc0\\xfe\\x3d\\x78\\x64\\xbf\\x0b\\\n\\x04\\x49\\xc9\\x3b\\x9b\\x9b\\x5b\\xd8\\x6c\\xd6\\x85\\x8b\\x97\\xd7\\xac\\x5a\\\n\\x79\\xa6\\xe8\\xac\\x9f\\xef\\x8c\\xeb\\x37\\x6e\\x72\\x26\\xb8\\x3a\\xd8\\x8f\\\n\\xec\\xea\\x12\\xf5\\xe6\\x4b\\x24\\x12\\x00\\x30\\xa0\\x1a\\x2c\\x7b\\x7f\\xc9\\\n\\xfd\\x07\\x0f\\x6d\\xd8\\xec\\xf5\\x1f\\xad\\xc1\\xf5\\xea\\xef\\x6b\\xdc\\xd8\\\n\\x31\\x83\\x1a\\x8d\\xb4\\xd1\\x01\\x00\\x48\\x40\\xc2\\x94\\x18\\x71\\x4b\\xa3\\\n\\xd1\\x2c\\x2c\\x2c\\xba\\xbb\\xbb\\x35\\xc7\\xa0\\xb2\\xf4\\xe3\\x75\\xab\\xb5\\\n\\xcf\\x82\\xc5\\xb2\\x06\\x80\\xd4\\x94\\xed\\x16\\xe6\\xe6\\x00\\x70\\xa6\\xb0\\\n\\x78\\xe5\\x87\\x31\\x61\\xa1\\x73\\x01\\xa0\\xb2\\xf2\\xee\\x93\\x27\\x4f\\x17\\\n\\x2d\\x98\\x8f\\x8b\\xd3\\x50\\xdf\\x28\\x11\\x4b\\xd8\\x6c\\x96\\xab\\x8b\\xf3\\\n\\xeb\\x6d\\x41\\xdb\\xcb\\x3e\\x16\\xbc\\x12\\x03\\xaa\\x81\\xa9\\x39\\x9d\\x4c\\\n\\x26\\x27\\x27\\x26\\x8c\\x19\\x33\\x1a\\x00\\x5e\\xbc\\x68\\xba\\x57\\xfd\\x0b\\\n\\x00\\x3c\\x7e\\xf2\\x9b\\x50\\x28\\x8c\\x8a\\x0c\\x07\\x80\\x45\\x0b\\xa3\\xd3\\\n\\x32\\xf6\\xd4\\xd6\\xd6\\xe1\\x4f\\x51\\x34\\x48\\x49\\x88\\xa8\\x79\\x90\\x37\\\n\\x36\\x36\\xea\\xea\\x12\\xa1\\x28\\x8a\\x20\\x08\\x61\\x14\\x08\\x04\\x16\\xe6\\\n\\xe6\\x08\\x82\\x20\\x08\\xb2\\x64\\xf1\\xc2\\xdc\\xfc\\x6f\\x02\\xfc\\x7d\\xbf\\\n\\x39\\x7d\\x26\\x27\\xeb\\x20\\x00\\xdc\\x7f\\xf0\\x50\\x2e\\x57\\x84\\x45\\x44\\\n\\x63\\x18\\xa6\\x04\\xa5\\x52\\xa9\\x1c\\x36\\xcc\\xcc\\xc4\\xc4\\x18\\x00\\x2c\\\n\\x2d\\x2d\\x89\\xac\\x66\\xcf\\x9e\\x55\\x54\\x5c\\xea\\xe7\\x3b\\x63\\xc4\\x08\\\n\\xdb\\xc5\\x8b\\x16\\xf8\\x07\\x06\\xef\\xfb\\x6c\\xd7\\xd9\\xe2\\xd2\\xe5\\x1f\\\n\\x2c\\x05\\x80\\x3e\\x7c\\x7c\\x33\\x42\\x26\\xf7\\x6d\\x78\\x95\\xbe\\x06\\x35\\\n\\xc1\\x69\\xa9\\x03\\x00\\xa0\\x18\\x8a\\x61\\x6f\\x39\\x32\\xb9\\xbc\\x43\\xd0\\\n\\xe1\\xe8\\x60\\xaf\\x2e\\x06\\x4c\\xa9\\xc4\\x30\\x4c\\x9b\\x08\\x35\\x73\\x68\\\n\\x34\\xda\\x1f\\x5b\\xc4\\x98\\x88\\xd9\\xd8\\xc4\\x58\\x26\\x95\\x12\\xe2\\x4c\\\n\\x9c\\xc8\\x5d\\xb6\\x74\\x49\\xe0\\x9c\\x79\\x3e\\x3e\\xde\\x29\\x49\\xdb\\xb8\\\n\\x5c\\x4e\\x7f\\x4b\\x6f\\x25\\x4d\\x4c\\x4c\\x88\\x6a\\xe9\\x74\\x3a\\x7e\\x61\\\n\\x67\\x6b\\x2b\\x16\\x8b\\x4b\\x4a\\xcb\\x43\\x82\\x83\\xae\\x5c\\xbd\\x4a\\x41\\\n\\x28\\x13\\x5c\\x5d\\x54\\xec\\xef\\x54\\x0e\\xef\\x03\\x8a\\xe8\\xc6\\xe5\\x62\\\n\\x28\\xfa\\xd3\\xb5\\x1b\\xfe\\x7e\\x33\\x09\\x63\\xf9\\xb9\\x1f\\xf0\\xe5\\x14\\\n\\x00\\xc4\\xac\\xf8\\x60\\xba\\x6f\\xe0\\x9d\\x8a\\x4a\\x3b\\x3b\\xdb\\xd1\\xa3\\\n\\x47\\x01\\x00\\x9d\\x46\\xa7\\x99\\x98\\x7c\\x5f\\x5a\\x48\\xa1\\xbc\\x0d\\xa0\\\n\\xf7\\x4c\\x81\\x63\\xc9\\xdf\\x16\\xee\\xff\\xfb\\x21\\x81\\xa0\\x63\\xc1\\x7c\\\n\\x9e\\x83\\xfd\\x48\\xce\\x04\\xd7\\xb2\\xef\\xcf\\x57\\x56\\xdd\\xdd\\xbf\\x77\\\n\\x77\\xff\\x30\\xf0\\x29\\x15\\x6f\\x4e\\x04\\x41\\xe4\\x72\\xf9\\x6b\\x15\\x54\\\n\\xf9\\xd2\\x61\\x9a\\x1b\\x50\\x07\\x00\\x40\\x51\\x8c\\xf0\\x0b\\x00\\x45\\x45\\\n\\xc5\\x2e\\x2e\\xce\\x4e\\x4e\\x8e\\xcd\\x2d\\xad\\x2a\\x63\\x50\\x28\\x14\\x72\\\n\\x85\\x5c\\x5d\\x84\\xda\\x67\\xa1\\xc4\\x30\\xe2\\x17\\x00\\x14\\x8a\\xb7\\x31\\\n\\x28\\xe4\\x72\\x12\\x89\\xd4\\x5b\\x9c\\xa4\\xc4\\x84\\xb8\\xd8\\x15\\xd9\\x47\\\n\\xbe\\x9c\\x17\\x11\\x5d\\x75\\xfb\\x9a\\xb5\\xb5\\x55\\x1f\\x8b\\xa5\\xa5\\x05\\\n\\x41\\xc6\\x30\\x0c\\x7b\\x93\\x38\\x51\\xad\\x99\\x19\\x73\\xc3\\xc7\\xeb\\x4e\\\n\\xe5\\x15\\x9c\\xca\\x2b\\xb0\\x1f\\x39\\xa2\\xe8\\x4c\\x01\\x71\\xb2\\x40\\x56\\\n\\xb9\\xbe\\x56\\x79\\xad\\x0e\\x66\\x66\\xcc\\xf8\\x95\\xb1\\x1b\\x37\\x6f\\x7d\\\n\\xf6\\xec\\x39\\x6e\\x39\\x77\\xfe\\x42\\x61\\x61\\x31\\xb1\\x13\\x76\\x74\\xb0\\\n\\xf7\\xf2\\xf4\\xd8\\xb8\\x39\\x61\\xed\\xea\\x78\\xdc\\xe2\\xe1\\x31\\x99\\x46\\\n\\x33\\xd9\\xbe\\x23\\x55\\x2e\\x57\\x10\\x8e\\xa4\\x52\\x29\\xfe\\x8a\\x13\\x35\\\n\\xcf\\xf2\\xf7\\xab\\x6f\\x68\\xac\\xa8\\xac\\x9c\\x3e\\x6d\\x2a\\x00\\x2c\\x7d\\\n\\x7f\\xc9\\xde\\xfd\\x07\\x82\\xe6\\x04\\x52\\xa9\\x14\\xfc\\xac\\xab\\x37\\x5f\\\n\\x81\\xa2\\x00\\x20\\x57\\xc8\\x01\\xc0\\x6a\\xb8\\x65\\x75\\xf5\\xaf\\x1a\\x7c\\\n\\x69\\xb9\\xc5\\x1b\\x94\\x0e\\x78\\x48\\x78\\x54\\x4a\\xa5\\xf2\\xfc\\x85\\x8b\\\n\\xa9\\xbb\\x3e\\xfb\\x7c\\xdf\\x6e\\xb5\\xf9\\xca\\x64\\x00\\x20\\x95\\x48\\xd5\\\n\\x45\\xa8\\x7d\\x16\\x62\\xb1\\x04\\x00\\x08\\x83\\x44\\x2a\\x45\\xdf\\xf4\\x2d\\\n\\xb1\\x44\\x82\\xa2\\x18\\x21\\x0e\\xfe\\xd2\\xb2\\x58\\xd6\\x3b\\x77\\x6c\\xb7\\\n\\xb6\\xb6\\x6a\\x69\\x69\\xed\\x6f\\xe9\\xad\\xa4\\x44\\x22\\xc1\\xde\\x54\\x25\\\n\\x95\\xca\\x08\\xa7\\x79\\x05\\xdf\\xc6\\xc7\\xc5\\x1e\\xe3\\x67\\xa7\\xa7\\xa5\\\n\\x38\\x3a\\xd8\\x0f\\x70\\x3e\\x8e\\x3f\\xa6\\xa5\\x88\\x78\\x97\\xe7\\x45\\x86\\\n\\xfb\\x05\\x86\\x84\\xf3\\x16\\xce\\x09\\x09\\x4f\\xcf\\xd8\\x53\\x78\\x3a\\xcf\\\n\\xd1\\xd1\\x81\\x20\\xcc\\xe7\\x45\\x18\\x18\\x18\\x4c\\x9e\\xe4\\xfe\\x7a\\x1f\\\n\\x44\\xa5\\xe6\\xe7\\x7e\\x75\\xeb\\xd6\\x1d\\xe7\\x09\\xee\\xbe\\x01\\x41\\x5c\\\n\\x77\\xaf\\x4b\\x97\\xff\\xd5\\xd3\\xd3\\x03\\x00\\x8a\\x37\\x7a\\x01\\x00\\x85\\\n\\x42\\x09\\x09\\x9a\\xed\\xec\\x3c\\x1e\\x5f\\xb4\\x86\\x87\\xce\\x6d\\x69\\x69\\\n\\xe5\\x45\\xbe\\x5e\\xf8\\xf7\\xe1\\xe3\\xb7\\xf8\\x6f\\x78\\xe8\\xbc\\xca\\xaa\\\n\\xbb\\x93\\x3c\\xa6\\xa6\\x67\\xec\\x55\\xe9\\x4b\\xfb\\x53\\x83\\x41\\xe9\\x20\\\n\\x11\\x4b\\xb2\\xb2\\xf9\\xde\\xd3\\xfd\\xc7\\xbb\\xba\\x1f\\xe1\\x1f\\xcf\\x3f\\\n\\x79\\x82\\xcb\\xe5\\x68\\xce\\xb7\\xa7\\xa7\\x47\\x5d\\x84\\xda\\x67\\x21\\xea\\\n\\x16\\xf5\\x1e\\xe0\\xf1\\xe5\\x07\\x7e\\x2d\\xec\\x14\\xa2\\x18\\x4a\\xf8\\xba\\\n\\x78\\xf9\\x8a\\x33\\x67\\x52\\xf0\\xbc\\x48\\x0f\\x9f\\x99\\x6e\\x5c\\x0e\\x87\\\n\\xe3\\xda\\xdf\\x42\\x90\\xc5\\x62\\x31\\x86\\x61\\x44\\x7f\\x12\\x0a\\xbb\\x88\\\n\\x6b\\xee\\x04\\xd7\\x98\\xb8\\x55\\xe3\\x5c\\xdc\\x6c\\x46\\x8c\\x72\\x1a\\xeb\\\n\\x9a\\x9e\\xb1\\xf7\\xf5\\x70\\x4e\\xfc\\xbf\\xa0\\xa2\\xa2\\x2a\\x24\\x8c\\xa7\\\n\\x41\\x3b\\x71\\xb7\\xd0\\x98\\xc6\\xd0\\x70\\x2e\\xdc\\xd9\\x29\\x7c\\xf4\\xf8\\\n\\x09\\x93\\xc9\\x70\\x1e\\x3f\\x4e\\xcb\\x06\\x68\\x6e\\x6e\\xe9\\x78\\xf5\\xca\\\n\\xc2\\xdc\\xdc\\xda\\xda\\xea\\xdd\\x1e\\x47\\xc9\\xe5\\x8a\\x96\\xd6\\x16\\x36\\\n\\x8b\\x45\\x4c\\x10\\x5a\\xfa\\x1a\\x8a\\x0e\\x28\\x8a\\x76\\x77\\xf7\\xc8\\x64\\\n\\x52\\x06\\x93\\xa9\\xf2\\x23\\x81\\xe6\\x18\\xfa\\x97\\xea\\x9c\\x85\\x06\\x08\\\n\\x85\\x5d\\xaf\\x3a\\x3b\\x19\\xa6\\xa6\\x66\\x66\\x4c\\x75\\x16\\xcd\\xb8\\x78\\\n\\xe9\\xca\\xe9\\xef\\x0a\\xf9\\x39\\x5f\\x90\\x48\\x24\\x85\\x42\\x71\\xa7\\xa2\\\n\\x8a\\x17\\xbd\\xf8\\xe1\\xbf\\xef\\x5a\\x5a\\x58\\x50\\xfa\\x9c\\xfc\\x8a\\xbb\\\n\\x85\\x3a\\x37\\x21\\x93\\xc9\\xf0\\xf6\\xf2\\x18\\xd4\\x23\\x6c\\x36\\x8b\\xcd\\\n\\x66\\xfd\\x19\\xc7\\x9b\\x54\\x2a\\x65\\x84\\x9d\\x9d\\x6e\\xbe\\x74\\xd6\\x01\\\n\\x41\\x10\\x06\\xc3\\x14\\xc0\\x54\\xb7\\x7c\\xfb\\x97\\x0e\\x25\\x0b\\x75\\x60\\\n\\x30\\x4c\\x19\\x0c\\x53\\xcd\\x96\\x01\\x3e\\x49\\x55\\x56\\x39\\x39\\x39\\xe2\\\n\\x2b\\x4b\\x0a\\x85\\x32\\x65\\xb2\\xbb\\x95\\xd5\\x70\\x06\\x83\\xf1\\x87\\xf5\\\n\\x78\\x70\\x68\\xa4\\xfe\\x73\\xa6\\x5e\\x07\\x6d\\x10\\x34\\x27\\xf0\\xbd\\x65\\\n\\xb1\\x16\\xe6\\xe6\\x63\\xc7\\x8e\\x6e\\x6d\\x6b\\xcf\\x2f\\x38\\x9d\\x9a\\x92\\\n\\x84\\x8f\\xc7\\x24\\xfd\\xff\\xe9\\xf4\\xd0\\x01\\xcf\\x9e\\x3d\\x3f\\x7f\\xe1\\\n\\x52\\x47\\xc7\\x2b\\x6b\\xab\\xe1\\x21\\x21\\x73\\xec\\x6c\\x6d\\xfb\\xae\\x9f\\\n\\xf4\\xd0\\x63\\xe8\\xf8\\x0f\\x4b\\xe6\\x2d\\xcd\\x32\\x30\\x37\\x2f\\x00\\x00\\\n\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x01\\xfb\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x84\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x7b\\xa7\\xdc\\x66\\x8b\\xc0\\x7a\\xa4\\xdb\\\n\\xff\\xff\\xff\\x63\\x87\\xbd\\x79\\xa3\\xd9\\xf9\\xfb\\xfc\\xf8\\xfb\\xfc\\x33\\\n\\x34\\x36\\x60\\x85\\xba\\x79\\xa2\\xd8\\xfa\\xfd\\xfd\\xfa\\xfc\\xfc\\x5e\\x81\\\n\\xb7\\x76\\xa0\\xd5\\xfc\\xfd\\xfd\\x5c\\x7e\\xb5\\x75\\x9e\\xd4\\xfc\\xfe\\xfe\\\n\\x5a\\x7c\\xb2\\x73\\x9c\\xd1\\x58\\x7a\\xb0\\x6f\\x97\\xcc\\xfc\\xff\\xff\\x54\\\n\\x75\\xac\\x6e\\x94\\xca\\xfe\\xff\\xff\\xfa\\xfe\\xfe\\xf9\\xfc\\xfc\\x53\\x73\\\n\\xaa\\x6c\\x92\\xc8\\x51\\x72\\xa9\\x51\\x71\\xa9\\x68\\x8e\\xc3\\x64\\x88\\xbe\\\n\\x61\\x85\\xbb\\x5f\\x83\\xb9\\x5c\\x7e\\xb4\\x58\\x7b\\xb1\\x57\\x79\\xae\\x56\\\n\\x76\\xad\\x54\\x75\\xab\\x53\\x73\\xa9\\x35\\xed\\x2b\\x05\\x00\\x00\\x00\\x01\\\n\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\\n\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x7a\\x49\\x44\\x41\\x54\\x18\\xd3\\\n\\x6d\\x8f\\xd7\\x0e\\xc2\\x40\\x0c\\x04\\x87\\xb0\\x94\\xa3\\x97\\xd0\\xeb\\xd1\\\n\\xcb\\xff\\xff\\x1f\\x97\\x73\\x10\\x09\\xb0\\x0f\\x96\\x77\\xb4\\x5a\\xd9\\xf0\\\n\\xad\\x4a\\x49\\x09\\x54\\x55\\x54\\x0d\\xea\\x6a\\x34\\xc3\\xe6\\x0c\\xb4\\xa0\\\n\\xad\\x4e\\x37\\x78\\x67\\xa4\\x07\\x7d\\x0d\\x32\\x2f\\x23\\x43\\x4b\\x44\\x13\\\n\\x47\\x9e\\xf8\\x80\\x90\\x18\\x69\\x9c\\x35\\x38\\x6b\\x49\\x61\\x12\\xc1\\x3b\\\n\\x31\\xfd\\x03\\x66\\x9a\\x17\\xc0\\x02\\x96\\xd2\\x2a\\x07\\xeb\\x8d\\xb6\\xb0\\\n\\x2b\\x9d\\xbe\\x07\\x7f\\x48\\x8e\\xa7\\xf3\\x25\\xbd\\xde\\xee\\x8f\\xa7\\xf7\\\n\\x3f\\xcf\\xf3\\x02\\x05\\x8e\\x07\\xb5\\xca\\xef\\x5a\\x88\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\\n\\x32\\x30\\x31\\x33\\x2d\\x30\\x32\\x2d\\x30\\x35\\x54\\x31\\x35\\x3a\\x32\\x31\\\n\\x3a\\x35\\x33\\x2b\\x30\\x31\\x3a\\x30\\x30\\xbb\\xd6\\xda\\x6e\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\\n\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\x32\\x2d\\x30\\x35\\x54\\x31\\x35\\x3a\\x32\\\n\\x31\\x3a\\x35\\x33\\x2b\\x30\\x31\\x3a\\x30\\x30\\xca\\x8b\\x62\\xd2\\x00\\x00\\\n\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x04\\x09\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xf5\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xa2\\xc1\\xef\\x9f\\xc0\\xed\\x9d\\xbe\\xeb\\\n\\x9a\\xbc\\xeb\\x96\\xba\\xe9\\x93\\xb7\\xe7\\x90\\xb5\\xe6\\x8c\\xb2\\xe4\\x88\\\n\\xaf\\xe2\\x84\\xac\\xe0\\x80\\xa9\\xdd\\x7d\\xa5\\xdc\\x7a\\xa3\\xda\\xa1\\xc1\\\n\\xee\\xf4\\xf7\\xfb\\x74\\xa0\\xd7\\x9e\\xbf\\xec\\xa5\\xd5\\x9c\\xa1\\xd3\\x98\\\n\\x9d\\xd0\\x94\\x98\\xce\\x90\\x93\\xcb\\x8b\\x8e\\xc9\\x87\\x89\\xc6\\x82\\x84\\\n\\xc3\\x7e\\x80\\xc1\\x7a\\x7c\\xbe\\x76\\x6f\\x9b\\xd4\\x9b\\xbd\\xeb\\xff\\xff\\\n\\xff\\x6a\\x97\\xd1\\x98\\xba\\xe9\\xa6\\xc3\\xe9\\x64\\x93\\xce\\x94\\xb7\\xe7\\\n\\xa9\\xc4\\xe8\\xac\\xc7\\xe8\\xeb\\xf1\\xf7\\x5f\\x8f\\xcb\\x8f\\xb4\\xe5\\xf2\\\n\\xf6\\xfa\\xaa\\xc6\\xe9\\xac\\xc6\\xe9\\xac\\xc7\\xea\\xad\\xc7\\xe9\\x6e\\x97\\\n\\xd4\\x7b\\x9e\\xd4\\x71\\x98\\xd0\\x82\\xa4\\xd6\\x68\\x8e\\xcd\\x69\\x90\\xcd\\\n\\x75\\x9a\\xd0\\x73\\x99\\xd1\\x62\\x8b\\xc8\\x8c\\xb1\\xe3\\xf1\\xf6\\xfa\\xae\\\n\\xc9\\xea\\xb0\\xc9\\xea\\x65\\x8d\\xcc\\xb0\\xcd\\xf3\\xb3\\xc7\\xe3\\xa1\\xbf\\\n\\xea\\x60\\x89\\xc9\\x87\\xae\\xe1\\xf0\\xf4\\xfa\\xb2\\xcb\\xea\\xb3\\xcc\\xea\\\n\\x5b\\x86\\xc7\\x9e\\xc0\\xef\\x6e\\x93\\xcc\\xf7\\xfb\\xff\\xf1\\xf8\\xff\\x8c\\\n\\xaf\\xe4\\x61\\x8a\\xc7\\x82\\xaa\\xdf\\xef\\xf3\\xf9\\xb7\\xce\\xea\\xbb\\xd0\\\n\\xeb\\x5d\\x88\\xc8\\xa1\\xbf\\xef\\xfa\\xfc\\xfd\\xfb\\xfc\\xfe\\xfd\\xfd\\xfe\\\n\\xfc\\xfd\\xfe\\xfa\\xfb\\xfd\\xfb\\xfc\\xfd\\x85\\xa8\\xdd\\x53\\x7f\\xc1\\x7e\\\n\\xa8\\xdd\\xba\\xd0\\xeb\\x65\\x8d\\xca\\x99\\xb8\\xea\\x7e\\xa5\\xdd\\x80\\xa6\\\n\\xdd\\x7c\\xa3\\xdb\\x7a\\xa0\\xd9\\x79\\xa0\\xd9\\x78\\x9f\\xd8\\x78\\x9e\\xd8\\\n\\x5d\\x84\\xbf\\x7a\\xa4\\xd9\\xee\\xf3\\xf9\\xbe\\xd2\\xeb\\xbf\\xd3\\xeb\\x61\\\n\\x8b\\xc9\\x92\\xb5\\xe6\\x81\\xa7\\xe2\\x81\\xa7\\xe1\\x7d\\xa3\\xde\\x7b\\xa1\\\n\\xdc\\x79\\x9f\\xdb\\x77\\x9e\\xd9\\x73\\x9a\\xd4\\x57\\x7e\\xbb\\x75\\xa1\\xd7\\\n\\xed\\xf2\\xf8\\xea\\xf0\\xf7\\xe6\\xed\\xf6\\xe2\\xea\\xf4\\xde\\xe7\\xf3\\x54\\\n\\x81\\xc4\\x97\\xb6\\xea\\xea\\xf3\\xf3\\xe6\\xf1\\xed\\xe6\\xf1\\xef\\xe6\\xf0\\\n\\xef\\xe5\\xf1\\xed\\xed\\xf5\\xf3\\x79\\x9c\\xd5\\x44\\x70\\xb0\\x72\\x9e\\xd6\\\n\\x6e\\x99\\xd3\\x68\\x96\\xd1\\x63\\x92\\xce\\x5e\\x8e\\xcb\\x5b\\x8a\\xc9\\x51\\\n\\x7f\\xc3\\x9a\\xb6\\xef\\xe8\\xf3\\xea\\x84\\xbf\\x51\\x98\\xc9\\x6f\\x99\\xc9\\\n\\x71\\x84\\xbf\\x54\\xe9\\xf4\\xe4\\x7b\\x9c\\xdd\\x3a\\x69\\xaa\\x55\\x83\\xc6\\\n\\xba\\xce\\xef\\xff\\xff\\xdd\\xc7\\xee\\x87\\xd7\\xf4\\xa2\\xd7\\xf6\\xa2\\xc7\\\n\\xee\\x8c\\xff\\xff\\xe0\\x85\\xa2\\xdd\\x3e\\x6a\\xab\\x33\\x68\\xba\\x58\\x84\\\n\\xc3\\x68\\x8b\\xd3\\x70\\x8f\\xe1\\x6c\\x8d\\xdc\\x6d\\x8b\\xda\\x6e\\x8a\\xd7\\\n\\x6c\\x8b\\xcd\\x44\\x6d\\xab\\x2e\\x5f\\xa6\\x28\\x09\\x12\\xd0\\x00\\x00\\x00\\\n\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\\n\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xee\\x49\\x44\\x41\\x54\\x18\\\n\\xd3\\x63\\x60\\x60\\x64\\x62\\x66\\x61\\x65\\x63\\xe7\\xe0\\xe4\\xe2\\xe6\\xe1\\\n\\x65\\x60\\x60\\xe0\\xe3\\x47\\x02\\x02\\x40\\x01\\x41\\x7e\\x21\\x61\\x11\\x51\\\n\\x31\\x71\\x09\\x49\\x29\\x69\\x7e\\x19\\xa0\\x80\\x2c\\xbf\\x1c\\x1c\\xf0\\xcb\\\n\\x03\\x05\\x14\\xf8\\x15\\xe1\\x80\\x5f\\x09\\x28\\xa0\\xcc\\xaf\\x28\\xa7\\x02\\\n\\x94\\x55\\x05\\x62\\x35\\x75\\xa0\\x80\\x86\\xa6\\x96\\xb6\\x8e\\xae\\x9e\\xbe\\\n\\x81\\xa1\\x91\\xb1\\x89\\xa9\\x19\\x03\\x83\\xb9\\x85\\xa5\\x9c\\x95\\x9c\\xb5\\\n\\x8d\\x9c\\x2d\\xc8\\x14\\x3b\\x7b\\x06\\x07\\x47\\x27\\x67\\x67\\x67\\x17\\x57\\\n\\x39\\x37\\x39\\x39\\x77\\x0f\\x4f\\x2f\\x06\\x6f\\x1f\\x5f\\x39\\x3f\\x39\\xff\\\n\\x80\\xc0\\xa0\\xe0\\x90\\xd0\\xb0\\xf0\\x08\\x86\\x48\\x9f\\x28\\x3f\\x3f\\xbf\\\n\\xe8\\x98\\xd8\\xb8\\xf8\\x84\\xc4\\xa4\\xe4\\x14\\x86\\xd4\\xb4\\x74\\xb9\\x0c\\\n\\xb9\\xcc\\xac\\xec\\x9c\\xdc\\xbc\\xfc\\x82\\xc2\\x22\\x86\\xe2\\x92\\xd2\\xb2\\\n\\xf2\\x8a\\xca\\xaa\\xea\\x9a\\xda\\xba\\xfa\\x86\\xc6\\x26\\x86\\xe6\\x96\\xd6\\\n\\xb6\\xf6\\x8e\\xce\\xae\\xee\\x9e\\xde\\xbe\\xfe\\x09\\x13\\x27\\x31\\x40\\xc0\\\n\\xe4\\x29\\x53\\xa7\\x4d\\x9f\\x31\\x73\\xd6\\xec\\x39\\x50\\x81\\xb9\\xf3\\xe6\\\n\\x2f\\x58\\xb8\\x68\\xf1\\x92\\xa5\\xcb\\x00\\x01\\xe9\\x3d\\xbe\\xf4\\x6d\\xb0\\\n\\x76\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\\n\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\\n\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\\n\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\\n\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xa3\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xf0\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x6e\\x94\\x58\\x66\\x8e\\x4f\\x59\\x84\\x40\\\n\\x68\\x8f\\x51\\x81\\xab\\x61\\xb4\\xd4\\x95\\xd0\\xe6\\xba\\x8f\\xbb\\x6a\\x57\\\n\\x8f\\x2d\\x37\\x6b\\x19\\x80\\xab\\xe8\\x7e\\xa9\\xe8\\x5d\\x87\\x44\\xb1\\xd3\\\n\\x90\\xb1\\xd6\\x92\\xff\\xff\\xff\\x8c\\xbc\\x65\\x8f\\xbc\\x67\\x80\\xab\\xea\\\n\\x7c\\xa9\\xe8\\x74\\xa2\\xe2\\x4c\\x7b\\x31\\xb6\\xd4\\x9c\\xb2\\xd2\\x95\\x79\\\n\\xa7\\xe6\\xad\\xc8\\xef\\x87\\xb0\\xe8\\x60\\x95\\xdd\\x39\\x6c\\x1b\\x8b\\xba\\\n\\x62\\x87\\xba\\x60\\x87\\xb9\\x60\\x6e\\xa0\\xe2\\xa8\\xc7\\xee\\xa3\\xc2\\xed\\\n\\x75\\xa4\\xe3\\x47\\x84\\xd6\\x53\\x8c\\x28\\x8d\\xba\\x64\\x62\\x97\\xe1\\xa1\\\n\\xc1\\xec\\x92\\xb7\\xe8\\x99\\xbb\\xe9\\x61\\x97\\xdd\\x2c\\x72\\xcd\\x53\\x8e\\\n\\xdb\\x99\\xbb\\xea\\x80\\xaa\\xe3\\x81\\xab\\xe3\\x8a\\xb1\\xe4\\x4b\\x88\\xd6\\\n\\x1a\\x62\\xc6\\x43\\x84\\xd6\\x90\\xb5\\xe7\\x74\\xa3\\xe0\\x77\\xa4\\xe0\\x81\\\n\\xab\\xe2\\x43\\x7f\\xd3\\x19\\x59\\xc6\\x35\\x77\\xd2\\x87\\xaf\\xe4\\x72\\xa1\\\n\\xdf\\x7c\\xa9\\xe1\\x3f\\x7a\\xd0\\x18\\x53\\xc0\\x23\\x6e\\xcd\\x7e\\xa8\\xe1\\\n\\x79\\xa6\\xe0\\x3d\\x77\\xd0\\x17\\x50\\xbd\\x1a\\x62\\xc9\\x75\\xa3\\xdf\\x3c\\\n\\x74\\xcf\\x16\\x4a\\xbd\\x18\\x59\\xc4\\x3b\\x71\\xcc\\x15\\x45\\xb9\\x16\\x4e\\\n\\xc0\\x14\\x41\\xb7\\x44\\x84\\x99\\xb6\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\x8d\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x40\\x00\\\n\\x46\\x26\\x66\\x24\\x1e\\x03\\x0b\\x2b\\x1b\\x3b\\x07\\x27\\x17\\x90\\xc5\\xcd\\\n\\x03\\x16\\xe0\\xe5\\xe3\\x17\\x10\\x14\\x02\\x09\\x08\\x8b\\x88\\x82\\x04\\xc4\\\n\\xc4\\x05\\x04\\x04\\x24\\x40\\x02\\x92\\x52\\xd2\\x32\\x40\\x4a\\x56\\x4e\\x5e\\\n\\x40\\x01\\xac\\x42\\x51\\x49\\x59\\x45\\x95\\x81\\x81\\x4b\\x4d\\x5d\\x42\\x5d\\\n\\x0d\\x24\\xa0\\xa1\\xa9\\xa5\\xad\\xa3\\x0b\\x14\\x01\\x01\\x90\\x66\\x3d\\x7d\\\n\\x03\\x43\\x23\\x63\\x13\\x84\\x7d\\xa6\\x66\\xe6\\x16\\x96\\x56\\xd6\\x08\\x01\\\n\\x1b\\x5b\\x3b\\x7b\\x07\\x47\\x24\\x17\\x39\\x39\\xbb\\xb8\\xba\\x21\\x3b\\xd1\\\n\\xdd\\xc3\\xd3\\x0b\\x99\\xcf\\xe0\\xed\\xe3\\x8b\\xc2\\x67\\xf0\\xf3\\x67\\x20\\\n\\x09\\x00\\x00\\x37\\xbd\\x0d\\x74\\xef\\x72\\x64\\x5e\\x00\\x00\\x00\\x1d\\x74\\\n\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\\n\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\\n\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\\n\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\\n\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\\n\\x2d\\x30\\x34\\x54\\x31\\x36\\x3a\\x34\\x32\\x3a\\x33\\x32\\x2b\\x30\\x32\\x3a\\\n\\x30\\x30\\xf5\\x10\\xac\\x9b\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\\n\\x60\\x82\\\n\\x00\\x00\\x03\\x1b\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x4a\\\n\\x50\\x4c\\x54\\x45\\x00\\x00\\x00\\xec\\xce\\x40\\xeb\\xcc\\x3f\\xea\\xcb\\x3e\\\n\\xe9\\xc9\\x3c\\xe9\\xc7\\x3b\\xe8\\xc4\\x3a\\xe7\\xc2\\x38\\xe6\\xc0\\x36\\xe5\\\n\\xbd\\x35\\xe4\\xbb\\x33\\xe3\\xb8\\x31\\xfa\\xed\\x9a\\xf9\\xeb\\x99\\xf9\\xe8\\\n\\x97\\xf8\\xe5\\x94\\xf7\\xe2\\x91\\xf6\\xdf\\x8e\\xf5\\xdb\\x8b\\xeb\\xc7\\x56\\\n\\xf1\\xd9\\x64\\xfa\\xeb\\x9a\\xf4\\xd8\\x48\\xf3\\xd3\\x44\\xf1\\xce\\x3f\\xf0\\\n\\xc8\\x3a\\xf5\\xdc\\x8c\\xed\\xcb\\x62\\xea\\xca\\x3d\\xf9\\xe9\\x93\\xf7\\xe1\\\n\\x72\\xf3\\xd4\\x45\\xf2\\xce\\x41\\xf0\\xc9\\x3c\\xf5\\xdc\\x8a\\xef\\xd0\\x70\\\n\\xe4\\xbb\\x3d\\xef\\xd4\\x5b\\xf9\\xea\\x99\\xf4\\xd6\\x47\\xf2\\xd0\\x42\\xf0\\\n\\xcb\\x3d\\xf3\\xd5\\x6e\\xf3\\xd7\\x7f\\xe7\\xc0\\x4a\\xf5\\xe1\\x80\\xf8\\xe6\\\n\\x8e\\xf3\\xd2\\x43\\xf1\\xcd\\x3f\\xef\\xc7\\x39\\xea\\xc6\\x58\\xec\\xcd\\x4f\\\n\\xf9\\xe9\\x98\\xf3\\xd5\\x4a\\xf1\\xcf\\x45\\xf0\\xca\\x40\\xee\\xc2\\x38\\xa2\\\n\\xc1\\xef\\x9f\\xc0\\xed\\x9d\\xbe\\xeb\\x9a\\xbc\\xeb\\x96\\xba\\xe9\\x93\\xb7\\\n\\xe7\\x90\\xb5\\xe6\\x62\\x8b\\xc8\\x6b\\x6b\\x6b\\xf2\\xda\\x75\\xf8\\xe6\\x93\\\n\\xf7\\xe3\\x91\\xf6\\xe0\\x8d\\xa1\\xc1\\xee\\xf4\\xf7\\xfb\\xa1\\xbf\\xea\\x60\\\n\\x89\\xc9\\xe2\\xb6\\x2f\\x9e\\xbf\\xec\\xa5\\xd5\\x9c\\xa1\\xd3\\x98\\x9d\\xd0\\\n\\x94\\x98\\xce\\x90\\x93\\xcb\\x8b\\x8e\\xc9\\x87\\x8c\\xaf\\xe4\\x61\\x8a\\xc7\\\n\\xe0\\xb2\\x2d\\x9b\\xbd\\xeb\\xff\\xff\\xff\\x85\\xa8\\xdd\\x53\\x7f\\xc1\\xdf\\\n\\xaf\\x2b\\x98\\xba\\xe9\\xa6\\xc3\\xe9\\x78\\x9e\\xd8\\x5d\\x84\\xbf\\xe7\\xbc\\\n\\x4f\\x73\\x9a\\xd4\\x57\\x7e\\xbb\\xdf\\xae\\x2d\\xde\\xab\\x2b\\x79\\x9c\\xd5\\\n\\x44\\x70\\xb0\\xde\\xac\\x29\\xdc\\xa9\\x27\\x94\\xb7\\xe7\\x7b\\x9c\\xdd\\x3a\\\n\\x69\\xaa\\x8f\\xb4\\xe5\\x85\\xa2\\xdd\\x3e\\x6a\\xab\\x00\\x00\\x00\\xd6\\x08\\\n\\xf6\\xaa\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xab\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x02\\x18\\x99\\x98\\x59\\x58\\xd9\\\n\\xd8\\x39\\x38\\xb9\\xb8\\x21\\x02\\x4c\\x3c\\xbc\\x7c\\xfc\\x02\\x82\\x42\\xc2\\\n\\x30\\xbe\\x88\\xa8\\x98\\xb8\\x84\\xa4\\x94\\x34\\x94\\xcf\\x20\\x23\\x2b\\x27\\\n\\xaf\\xa0\\xa8\\xa4\\xac\\x02\\x33\\x42\\x55\\x4d\\x5d\\x43\\x53\\x4b\\x5b\\x07\\\n\\xc6\\x67\\xd5\\xd5\\xd3\\x37\\x30\\x94\\x32\\x82\\xdb\\x61\\x6c\\x62\\x6a\\x66\\\n\\x6e\\x61\\x69\\x65\\x6d\\x63\\x6b\\x67\\xef\\xe0\\xc8\\xc0\\xe6\\xe4\\xec\\xe2\\\n\\xaa\\xe4\\xe6\\x0e\\x01\\x1e\\x9e\\x0c\\x60\\xeb\\xbd\\xbc\\xdd\\x7d\\x7c\\xfd\\\n\\xfc\\x03\\x02\\x83\\x82\\x21\\xda\\x42\\x42\\xdd\\xc3\\xc0\\x20\\x3c\\x02\\x22\\\n\\x10\\x19\\xe5\\x1e\\x0d\\x06\\x31\\xb1\\x10\\x7e\\x5c\\x28\\xd4\\x8c\\xf8\\x04\\\n\\xb0\\x40\\x62\\x52\\x14\\xd4\\x8c\\xe4\\x14\\x10\\x3f\\x35\\x8d\\x21\\x1d\\x6a\\\n\\x46\\x46\\x26\\xd4\\x31\\x59\\x50\\x33\\xb2\\x73\\x00\\xa6\\xff\\x27\\x4c\\x0f\\\n\\x9b\\x65\\x96\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\\n\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\\n\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\\n\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\\n\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\\n\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x33\\x2d\\x33\\x30\\x54\\x31\\x30\\x3a\\x34\\\n\\x39\\x3a\\x31\\x39\\x2b\\x30\\x32\\x3a\\x30\\x30\\xf7\\x40\\xc7\\x26\\x00\\x00\\\n\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xc1\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x11\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xff\\x77\\x7a\\xfe\\x76\\x79\\xf8\\x61\\x64\\\n\\xf9\\x68\\x6a\\xf3\\x51\\x54\\xff\\x7e\\x81\\xfe\\x7e\\x81\\xfd\\x71\\x74\\xf8\\\n\\x5f\\x62\\xfb\\x6d\\x6f\\xff\\x7c\\x7e\\xfe\\x71\\x74\\xfe\\x7a\\x7d\\xff\\x87\\\n\\x8a\\xfd\\x79\\x7c\\xfb\\x69\\x6c\\xf8\\x5e\\x61\\xfa\\x6c\\x6e\\xff\\x7a\\x7d\\\n\\xf7\\x5f\\x61\\xf0\\x46\\x49\\xfc\\x6b\\x6e\\xfd\\x74\\x77\\xff\\x82\\x86\\xfc\\\n\\x73\\x76\\xf8\\x62\\x64\\xf7\\x5d\\x60\\xfa\\x6a\\x6d\\xff\\x79\\x7b\\xef\\x45\\\n\\x48\\xf9\\x63\\x66\\xfb\\x6d\\x70\\xff\\x7e\\x80\\xff\\x7b\\x7e\\xff\\x79\\x7c\\\n\\xff\\x77\\x79\\xf7\\x5c\\x5e\\xef\\x44\\x47\\xf6\\x5a\\x5d\\xff\\x79\\x7d\\xff\\\n\\x5b\\x5e\\xff\\x58\\x5b\\xff\\x74\\x76\\xef\\x43\\x46\\xf7\\x5b\\x5d\\xff\\x76\\\n\\x79\\xff\\x56\\x59\\xff\\x54\\x57\\xff\\x70\\x72\\xf0\\x46\\x48\\xf6\\x5a\\x5c\\\n\\xfa\\x64\\x67\\xff\\x72\\x74\\xff\\x70\\x73\\xff\\x6e\\x70\\xff\\x6c\\x6e\\xf7\\\n\\x55\\x57\\xee\\x3d\\x3f\\xf6\\x59\\x5b\\xfa\\x63\\x66\\xff\\x71\\x74\\xf6\\x58\\\n\\x5a\\xee\\x41\\x43\\xec\\x3c\\x3e\\xf4\\x4d\\x50\\xff\\x67\\x68\\xf5\\x4e\\x50\\\n\\xeb\\x34\\x36\\xf6\\x58\\x5b\\xfa\\x62\\x65\\xff\\x70\\x71\\xf6\\x56\\x59\\xee\\\n\\x40\\x42\\xe9\\x32\\x35\\xf2\\x45\\x47\\xff\\x62\\x63\\xf4\\x48\\x4a\\xe9\\x2d\\\n\\x2f\\xf5\\x56\\x58\\xfa\\x61\\x63\\xf6\\x55\\x58\\xed\\x3f\\x41\\xe6\\x2a\\x2c\\\n\\xf1\\x3f\\x41\\xf6\\x4a\\x4c\\xea\\x2f\\x31\\xf2\\x4c\\x4f\\xed\\x3e\\x40\\xe4\\\n\\x22\\x24\\xff\\xff\\xff\\xee\\x57\\x63\\x09\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\\n\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\\n\\x05\\x1d\\x48\\x00\\x00\\x00\\x8a\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x20\\\n\\x06\\x30\\x32\\x41\\x68\\x66\\x16\\x56\\x08\\x9f\\x8d\\x9d\\x03\\x44\\x73\\x72\\\n\\x71\\x73\\x82\\x05\\x78\\x78\\xf9\\xf8\\x05\\x18\\x18\\x04\\x85\\x84\\x45\\x44\\\n\\x21\\x4a\\xc5\\xc4\\x25\\x24\\xa5\\xa4\\x65\\x64\\xa5\\xe5\\x60\\x86\\xc8\\x2b\\\n\\x28\\x2a\\x29\\xab\\xa8\\xaa\\x21\\x8c\\x55\\xd7\\xd0\\xd4\\xd2\\xd6\\x41\\xb2\\\n\\x47\\x57\\x4f\\xdf\\xc0\\xd0\\x08\\xc1\\x37\\x36\\x31\\x35\\x33\\xb7\\xb0\\xb4\\\n\\x82\\xf1\\xad\\x6d\\x6c\\xed\\xec\\x1d\\x1c\\x9d\\x9c\\x5d\\x20\\x7c\\x57\\x37\\\n\\x77\\x0f\\x4f\\x06\\x06\\x2f\\x6f\\x1f\\x5f\\x3f\\xb0\\x80\\x7f\\x40\\x60\\x10\\\n\\x88\\x0e\\x0e\\x09\\x0d\\x83\\x28\\x09\\x8f\\x80\\xd0\\x91\\x61\\x44\\xf9\\x14\\\n\\x00\\x8e\\xb3\\x10\\x21\\x2f\\xce\\x2b\\x78\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x31\\x2d\\x32\\x34\\\n\\x54\\x31\\x34\\x3a\\x30\\x33\\x3a\\x33\\x38\\x2b\\x30\\x31\\x3a\\x30\\x30\\x30\\\n\\x9b\\xd4\\x55\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x31\\x2d\\x32\\\n\\x34\\x54\\x31\\x34\\x3a\\x30\\x33\\x3a\\x33\\x38\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x41\\xc6\\x6c\\xe9\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x04\\x07\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xfb\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xa3\\xa3\\xa3\\xa0\\xa0\\xa0\\x9d\\x9d\\x9d\\\n\\x9a\\x9a\\x9a\\x97\\x97\\x97\\x94\\x94\\x94\\xa2\\xa2\\xa2\\xbc\\xbc\\xbc\\xca\\\n\\xca\\xca\\xcc\\xcc\\xcc\\xc2\\xc2\\xc2\\xad\\xad\\xad\\x8c\\x8c\\x8c\\xa1\\xa1\\\n\\xa1\\xc4\\xc4\\xc4\\xbe\\xbe\\xbe\\x96\\x96\\x96\\x93\\x93\\x93\\xae\\xae\\xae\\\n\\x84\\x84\\x84\\xba\\xba\\xba\\xbf\\xbf\\xbf\\x98\\x98\\x98\\x87\\x87\\x87\\xa8\\\n\\xa8\\xa8\\x9e\\x9e\\x9e\\x89\\x89\\x89\\xa9\\xa9\\xa9\\x79\\x79\\x79\\x99\\x99\\\n\\x99\\xc6\\xc6\\xc6\\x7d\\x7d\\x7d\\xab\\xab\\xab\\x76\\x76\\x76\\xe1\\xc3\\x61\\\n\\xa8\\xa0\\x88\\x91\\x91\\x91\\x8e\\x8e\\x8e\\xdc\\xb9\\x5a\\xdf\\xb8\\x55\\xde\\\n\\xb5\\x51\\xdd\\xb1\\x4d\\xdc\\xad\\x49\\xd7\\xa8\\x46\\x78\\x78\\x78\\x8d\\x7e\\\n\\x65\\xd8\\x99\\x31\\xe1\\xc2\\x60\\xfc\\xf3\\xc9\\xfd\\xf3\\xcb\\xfe\\xf6\\xd4\\\n\\xff\\xf6\\xd7\\xff\\xf4\\xd8\\xff\\xf8\\xe0\\xff\\xf8\\xdf\\xff\\xf5\\xda\\xfc\\\n\\xf1\\xcd\\xfa\\xed\\xc2\\xfa\\xeb\\xbd\\xd6\\x93\\x2b\\xe0\\xbf\\x5c\\xfc\\xf3\\\n\\xc8\\xf9\\xdf\\x75\\xfd\\xe6\\x89\\xff\\xe7\\x95\\xff\\xe5\\x9a\\xff\\xee\\xaa\\\n\\xff\\xed\\xa8\\xff\\xe3\\x99\\xf9\\xd5\\x74\\xf3\\xcc\\x59\\xf1\\xc8\\x4f\\xfa\\\n\\xe9\\xbb\\xd5\\x8d\\x24\\xdf\\xbb\\x58\\xfc\\xf1\\xc7\\xf9\\xdc\\x6f\\xed\\xbb\\\n\\x56\\xef\\xbd\\x61\\xff\\xe7\\x9b\\xe2\\xa6\\x35\\xe1\\xa4\\x4b\\xff\\xe2\\x90\\\n\\xe9\\xad\\x49\\xe3\\xa4\\x38\\xf0\\xc4\\x49\\xf9\\xe8\\xb8\\xd4\\x88\\x1e\\xde\\\n\\xb7\\x53\\xfc\\xf0\\xc6\\xf8\\xd9\\x6a\\xfd\\xe2\\x7c\\xff\\xe8\\x90\\xff\\xe9\\\n\\x99\\xdf\\x9f\\x32\\xb2\\x8b\\x54\\xff\\xe2\\x8a\\xf9\\xd0\\x6a\\xf1\\xc5\\x50\\\n\\xf0\\xc1\\x46\\xf9\\xe7\\xb6\\xd3\\x83\\x18\\xdd\\xb2\\x4e\\xfb\\xef\\xc3\\xf8\\\n\\xd6\\x65\\xec\\xb6\\x4c\\xef\\xbd\\x5a\\xff\\xeb\\x95\\xdd\\x97\\x30\\xab\\x82\\\n\\x4d\\xff\\xe1\\x84\\xe9\\xa9\\x41\\xe1\\x9f\\x32\\xef\\xbe\\x42\\xf9\\xe5\\xb4\\\n\\xd2\\x7e\\x13\\xfb\\xee\\xc1\\xf7\\xd3\\x5f\\xfc\\xdb\\x6c\\xff\\xe5\\x7f\\xff\\\n\\xed\\x8f\\xff\\xf2\\x97\\xff\\xed\\x93\\xff\\xdf\\x7c\\xf8\\xcc\\x5b\\xef\\xbe\\\n\\x46\\xee\\xba\\x3c\\xf9\\xe3\\xb3\\xd1\\x79\\x0e\\xdb\\xa8\\x43\\xfb\\xec\\xbf\\\n\\xf5\\xcf\\x59\\xec\\xb0\\x41\\xef\\xba\\x4e\\xef\\xc2\\x5a\\xef\\xc6\\x60\\xef\\\n\\xc4\\x5c\\xef\\xb6\\x4c\\xe6\\xa5\\x37\\xe1\\x9a\\x2a\\xee\\xb8\\x38\\xf8\\xe3\\\n\\xb1\\xd0\\x75\\x09\\xda\\xa3\\x3d\\xfa\\xeb\\xbc\\xfc\\xeb\\xbc\\xfe\\xee\\xbf\\\n\\xff\\xf4\\xc6\\xff\\xf8\\xce\\xff\\xfa\\xd3\\xff\\xf8\\xd0\\xff\\xf2\\xc7\\xfc\\\n\\xe9\\xba\\xf9\\xe4\\xb3\\xf8\\xe2\\xb0\\xcf\\x71\\x05\\xd9\\x9d\\x36\\xd7\\x94\\\n\\x2c\\xd6\\x90\\x28\\xd5\\x8c\\x23\\xd3\\x84\\x1a\\xd2\\x80\\x15\\xd1\\x7c\\x11\\\n\\xd0\\x76\\x0a\\xcf\\x73\\x07\\xcf\\x70\\x04\\xce\\x6e\\x01\\xff\\xff\\xff\\x59\\\n\\xda\\xa5\\xa8\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\\n\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\\n\\xe6\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x00\\x01\\x46\\x26\\x66\\x16\\x56\\\n\\x36\\x06\\x38\\x60\\xe7\\xe0\\xe4\\xe2\\xe4\\xe6\\xe1\\x85\\xf1\\xf9\\xf8\\x05\\\n\\xf8\\x04\\x85\\x58\\x85\\x85\\x45\\xa0\\x02\\xa2\\x62\\xe2\\x20\\x4a\\x42\\x52\\\n\\x0a\\xc2\\x67\\xe6\\xe7\\x83\\x30\\xa4\\x65\\x64\\xc1\\xb4\\x9c\\x3c\\xd4\\x38\\\n\\x05\\x45\\x25\\x10\\xa5\\xac\\xa2\\xaa\\xa6\\xae\\xa1\\xa9\\xa5\\xad\\xa3\\xab\\\n\\xa4\\xa7\\x0f\\x14\\x30\\x30\\x34\\x32\\x36\\x31\\x35\\x33\\xb7\\xb0\\xb4\\xb2\\\n\\xb6\\xb6\\x01\\x0a\\xd8\\xda\\xd9\\x3b\\x38\\x3a\\x39\\xbb\\xb8\\xba\\xb9\\x7b\\\n\\x78\\x7a\\x01\\x05\\xbc\\x7d\\x7c\\xfd\\xfc\\x03\\x02\\x83\\x82\\x43\\x42\\xc3\\\n\\xc2\\x23\\x80\\x02\\x91\\x51\\xd1\\x31\\xb1\\x71\\xf1\\x09\\x89\\x49\\xc9\\x29\\\n\\xa9\\x69\\x40\\x81\\xf4\\x8c\\xcc\\xac\\xec\\x9c\\xdc\\xbc\\xfc\\x82\\xc2\\xa2\\\n\\xe2\\x12\\xa0\\x80\\x76\\x69\\x59\\x79\\x45\\x65\\x55\\x75\\x4d\\x6d\\x5d\\x7d\\\n\\x43\\x23\\x50\\xa0\\xa9\\xb9\\xa5\\xb5\\xad\\xbd\\xa3\\xb3\\xab\\xbb\\xa7\\xb7\\\n\\xaf\\x1f\\x28\\x30\\x61\\xe2\\xa4\\xc9\\x53\\xa6\\x4e\\x9b\\x3e\\x63\\xe6\\xac\\\n\\xd9\\xb3\\xe7\\x00\\x05\\xe6\\xea\\xcf\\x9b\\xbf\\x20\\x62\\xe1\\xa2\\xc5\\x8d\\\n\\x4b\\x96\\x2e\\x5b\\xce\\x00\\x00\\x7c\\x93\\x39\\x4d\\x29\\x46\\x49\\xbc\\x00\\\n\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\\n\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\\n\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x33\\\n\\x2d\\x30\\x31\\x2d\\x30\\x38\\x54\\x31\\x36\\x3a\\x33\\x39\\x3a\\x34\\x31\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\x25\\x6c\\xfc\\xd3\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x33\\x2d\\x30\\x31\\x2d\\x30\\x38\\x54\\x31\\x36\\x3a\\x33\\x39\\x3a\\x34\\x31\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x54\\x31\\x44\\x6f\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x23\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x41\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xf9\\x82\\x67\\xf7\\x80\\x65\\xf5\\x7e\\x63\\\n\\xf3\\x7c\\x61\\xf9\\x82\\x68\\xee\\x83\\x6e\\xf4\\xa6\\x92\\xf8\\xb4\\xa0\\xf3\\\n\\xa6\\x91\\xe9\\x7d\\x68\\xeb\\x73\\x59\\xf8\\x81\\x66\\xf1\\x97\\x84\\xfb\\xbd\\\n\\xa9\\xf8\\xa3\\x8a\\xf6\\x89\\x6b\\xf8\\xa2\\x89\\xfa\\xbc\\xa8\\xec\\x92\\x7f\\\n\\xe4\\x6c\\x52\\xf6\\x7f\\x65\\xf0\\x97\\x83\\xf5\\x82\\x63\\xff\\xff\\xff\\xf3\\\n\\x7e\\x61\\xf3\\x7c\\x60\\xf9\\xb9\\xa6\\xea\\x8d\\x7b\\xde\\x64\\x4a\\xec\\x81\\\n\\x6c\\xf5\\x81\\x62\\xf4\\x80\\x62\\xf1\\x7a\\x5f\\xf0\\x78\\x5f\\xef\\x76\\x5d\\\n\\xf8\\xb5\\xa5\\xdd\\x70\\x5d\\xf8\\xa1\\x88\\xee\\x73\\x5c\\xec\\x70\\x5b\\xf1\\\n\\x93\\x82\\xec\\x98\\x89\\xd2\\x58\\x3e\\xed\\x76\\x5b\\xf8\\xb6\\xa1\\xf4\\x84\\\n\\x67\\xeb\\x6e\\x5a\\xea\\x6c\\x59\\xe9\\x6f\\x5f\\xf1\\xa8\\x9b\\xce\\x53\\x3a\\\n\\xe9\\x71\\x57\\xf7\\xb3\\xa0\\xf2\\x80\\x65\\xfa\\xd9\\xd3\\xe8\\x69\\x58\\xe7\\\n\\x67\\x57\\xe7\\x6c\\x5d\\xf1\\xa5\\x99\\xca\\x4f\\x35\\xe5\\x6d\\x52\\xf0\\x9f\\\n\\x8e\\xf4\\x99\\x84\\xf1\\x9d\\x90\\xf3\\xaf\\xa6\\xe6\\x65\\x56\\xe5\\x62\\x55\\\n\\xeb\\x89\\x7d\\xe7\\x91\\x85\\xc6\\x4a\\x31\\xe0\\x73\\x60\\xf7\\xb3\\xa4\\xe3\\\n\\x61\\x54\\xe2\\x5f\\x53\\xf2\\xa9\\x9f\\xd1\\x61\\x50\\xda\\x60\\x46\\xe6\\x88\\\n\\x78\\xf5\\xb0\\xa3\\xed\\x92\\x89\\xec\\x92\\x88\\xe1\\x5d\\x52\\xdd\\x7d\\x6f\\\n\\xc0\\x44\\x2b\\xd3\\x59\\x3f\\xe3\\x84\\x75\\xf4\\xac\\xa1\\xec\\x8b\\x7f\\xe4\\\n\\x67\\x5c\\xe3\\x66\\x5b\\xea\\x87\\x7d\\xf1\\xa8\\x9f\\xdd\\x7c\\x6f\\xbf\\x43\\\n\\x29\\xcc\\x52\\x38\\xd4\\x64\\x52\\xe7\\x90\\x84\\xee\\xa0\\x95\\xed\\x9f\\x95\\\n\\xe5\\x8e\\x83\\xce\\x5d\\x4c\\xbd\\x41\\x28\\xc4\\x48\\x2f\\xc2\\x46\\x2c\\xc0\\\n\\x44\\x2a\\xbe\\x42\\x28\\x43\\x24\\xce\\x14\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\\n\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\\n\\x05\\x1d\\x48\\x00\\x00\\x00\\xbc\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\\n\\x0e\\x18\\x99\\x98\\x59\\x90\\xb8\\xac\\x6c\\xec\\x1c\\x1c\\x9c\\x5c\\xdc\\x30\\\n\\x3e\\x0f\\x2f\\x1f\\xbf\\x80\\x80\\xa0\\x90\\xb0\\x08\\x84\\x2f\\x2a\\xc6\\x27\\\n\\x2e\\x2e\\x21\\x21\\x29\\x25\\x2d\\x23\\x0b\\x16\\x90\\xe3\\x13\\x97\\x57\\x90\\\n\\x90\\x50\\x54\\x52\\x56\\x51\\x05\\xf1\\x15\\x39\\xd5\\x14\\x24\\xa5\\x24\\x24\\\n\\x94\\xd5\\x35\\x34\\xb5\\xb4\\x81\\x02\\x3a\\xba\\x7a\\x52\\x8a\\x4a\\x12\\x12\\\n\\x1a\\xfa\\x06\\x86\\x46\\xc6\\x40\\x01\\x13\\x53\\x33\\x25\\x65\\x75\\x73\\x09\\\n\\x03\\x0b\\x4b\\x2b\\x6b\\x1b\\xa0\\x80\\xad\\x9d\\xbd\\xba\\x86\\xbe\\x83\\xa3\\\n\\xa5\\x93\\xb3\\x8b\\xab\\x1b\\xc8\\x10\\x77\\x0f\\x7d\\x03\\x0b\\x09\\x09\\x67\\\n\\x4f\\x2f\\x6f\\x1f\\xb0\\x2d\\xbe\\x7e\\xfe\\x96\\x4e\\x01\\x81\\x5e\\x41\\xde\\\n\\xc1\\x21\\x10\\x87\\x84\\x86\\x85\\x47\\x44\\x46\\x45\\xc7\\xc4\\xc6\\xc1\\x9c\\\n\\x1a\\x9f\\x90\\x98\\x94\\x9c\\x92\\x9a\\x86\\xe4\\x9b\\xf4\\x8c\\xcc\\x2c\\x1c\\\n\\xfe\\x06\\x00\\x3a\\x5d\\x1b\\xdc\\x1e\\x58\\x2f\\x2c\\x00\\x00\\x00\\x1d\\x74\\\n\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\\n\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\\n\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\\n\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\\n\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\\n\\x2d\\x30\\x34\\x54\\x31\\x35\\x3a\\x35\\x35\\x3a\\x32\\x30\\x2b\\x30\\x32\\x3a\\\n\\x30\\x30\\x30\\xbd\\x15\\x5b\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\\n\\x60\\x82\\\n\\x00\\x00\\x02\\x05\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x90\\\n\\x50\\x4c\\x54\\x45\\x00\\x00\\x00\\x7b\\xa7\\xdc\\x66\\x8b\\xc0\\x7a\\xa4\\xdb\\\n\\xff\\xff\\xff\\x63\\x87\\xbd\\x79\\xa3\\xd9\\xf9\\xfb\\xfc\\xf8\\xfb\\xfc\\x33\\\n\\x34\\x36\\x60\\x85\\xba\\x79\\xa2\\xd8\\xfa\\xfd\\xfd\\xfa\\xfc\\xfc\\x5e\\x81\\\n\\xb7\\x76\\xa0\\xd5\\xfc\\xfd\\xfd\\x5c\\x7e\\xb5\\x75\\x9e\\xd4\\xfc\\xfe\\xfe\\\n\\xfb\\xfd\\xfd\\x5a\\x7c\\xb2\\x73\\x9c\\xd1\\x58\\x7a\\xb0\\x6f\\x97\\xcc\\xfc\\\n\\xff\\xff\\xfd\\xff\\xff\\x54\\x75\\xac\\x6e\\x94\\xca\\xfe\\xff\\xff\\xfa\\xfe\\\n\\xfe\\xf9\\xfc\\xfc\\x53\\x73\\xaa\\x6c\\x92\\xc8\\xfc\\xfc\\xfc\\x51\\x72\\xa9\\\n\\x51\\x71\\xa9\\x68\\x8e\\xc3\\x64\\x88\\xbe\\x61\\x85\\xbb\\x5f\\x83\\xb9\\x5c\\\n\\x7e\\xb4\\x58\\x7b\\xb1\\x57\\x79\\xae\\x56\\x76\\xad\\x54\\x75\\xab\\x53\\x73\\\n\\xa9\\x00\\x00\\x00\\x67\\x14\\x96\\xea\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\x78\\x49\\x44\\x41\\x54\\x18\\xd3\\x75\\x8f\\x57\\x0e\\\n\\xc2\\x50\\x0c\\x04\\x87\\xb0\\x10\\x3a\\x81\\x47\\xe8\\x24\\x94\\x47\\x2f\\xf7\\\n\\x3f\\x1e\\x49\\x90\\x30\\x75\\x3e\\x2c\\x79\\xb4\\x5a\\xd9\\xf0\\x49\\xe9\\x8d\\\n\\x00\\xca\\x7a\\xa5\\x02\\x55\\x85\\x35\\xd5\\x73\\x72\\xd1\\x80\\xa6\\x5a\\xed\\\n\\x62\\x29\\x46\\x07\\xba\\x8a\\x64\\xa2\\xf7\\x27\\x61\\x1d\\x59\\xa2\\x2f\\x37\\\n\\xb0\\x44\\x0c\\x43\\x39\\x67\\x62\\xf4\\x43\\x8c\\x35\\x99\\x9a\\x98\\xc1\\x5c\\\n\\x5a\\x3c\\x4a\\x93\\x24\\xd5\\x12\\x56\\x99\\x5f\\x3f\\x4f\\xdf\\x80\\xdf\\x06\\\n\\xbb\\xfd\\xe1\\x18\\x9f\\xce\\x97\\xeb\\xcd\\xfb\\xaf\\xe7\\xb9\\x03\\x47\\xca\\\n\\x08\\x85\\x7d\\x79\\xa8\\x8f\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\\n\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\\n\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x35\\x35\\x3a\\x32\\x30\\x2b\\x30\\x31\\\n\\x3a\\x30\\x30\\xb6\\xa7\\xfa\\xc4\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\\n\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\\n\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x35\\x35\\x3a\\x32\\x30\\x2b\\x30\\\n\\x31\\x3a\\x30\\x30\\xc7\\xfa\\x42\\x78\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\\n\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x04\\x11\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xf5\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x71\\x71\\x71\\x6f\\x6f\\x6f\\x6d\\x6d\\x6d\\\n\\x52\\x52\\x52\\x4d\\x4d\\x4d\\x49\\x49\\x49\\x6c\\x6c\\x6c\\x69\\x69\\x69\\x57\\\n\\x57\\x57\\x48\\x48\\x48\\x43\\x43\\x43\\x65\\x65\\x65\\x6c\\xba\\xe5\\x74\\xbc\\\n\\xec\\x6e\\xb8\\xeb\\x68\\xb6\\xeb\\xcd\\xcb\\x80\\xea\\xd7\\x80\\x47\\x47\\x47\\\n\\x42\\x42\\x42\\x3d\\x3d\\x3d\\x68\\x68\\x68\\x61\\x61\\x61\\x36\\xbf\\x7f\\x69\\\n\\xc5\\xdd\\x70\\xc2\\xff\\x67\\xbf\\xff\\xac\\xcb\\xae\\xf9\\xe0\\x68\\x41\\x41\\\n\\x41\\x37\\x37\\x37\\x64\\x64\\x64\\x60\\x60\\x60\\x5c\\x5c\\x5c\\x45\\xc4\\x4f\\\n\\x2c\\xba\\x4b\\x60\\xbd\\xd8\\x62\\xba\\xff\\x65\\xb9\\xff\\x7d\\xbb\\xdb\\x3b\\\n\\x3b\\x3b\\x36\\x36\\x36\\x31\\x31\\x31\\x5c\\xcb\\x4f\\x7a\\xd7\\x57\\x6a\\xd1\\\n\\x42\\x5e\\xc7\\x70\\x50\\xb8\\xb6\\x3f\\xae\\xcb\\x2c\\x2c\\x2c\\x5b\\x5b\\x5b\\\n\\x9e\\xe2\\x72\\xa4\\xe3\\x7c\\xa0\\xe3\\x78\\x6e\\x97\\xd4\\x7b\\x9e\\xd4\\x71\\\n\\x98\\xd0\\x82\\xa4\\xd6\\x68\\x8e\\xcd\\x69\\x90\\xcd\\x75\\x9a\\xd0\\x73\\x99\\\n\\xd1\\x62\\x8b\\xc8\\x56\\x56\\x56\\x51\\x51\\x51\\x65\\x8d\\xcc\\xb0\\xcd\\xf3\\\n\\xff\\xff\\xff\\xb3\\xc7\\xe3\\xa1\\xbf\\xea\\x60\\x89\\xc9\\x4c\\x4c\\x4c\\x6e\\\n\\xc6\\xf8\\x77\\xc8\\xff\\x72\\xc5\\xff\\x5b\\x86\\xc7\\x9e\\xc0\\xef\\x6e\\x93\\\n\\xcc\\xf7\\xfb\\xff\\xf1\\xf8\\xff\\x8c\\xaf\\xe4\\x61\\x8a\\xc7\\x4b\\x4b\\x4b\\\n\\x46\\x46\\x46\\x5d\\x88\\xc8\\xa1\\xbf\\xef\\xfa\\xfc\\xfd\\xfb\\xfc\\xfe\\xfd\\\n\\xfd\\xfe\\xfc\\xfd\\xfe\\xfa\\xfb\\xfd\\xfb\\xfc\\xfd\\x85\\xa8\\xdd\\x53\\x7f\\\n\\xc1\\x45\\x45\\x45\\x40\\x40\\x40\\x65\\x8d\\xca\\x99\\xb8\\xea\\x7e\\xa5\\xdd\\\n\\x80\\xa6\\xdd\\x7c\\xa3\\xdb\\x7a\\xa0\\xd9\\x79\\xa0\\xd9\\x78\\x9f\\xd8\\x78\\\n\\x9e\\xd8\\x5d\\x84\\xbf\\x61\\x8b\\xc9\\x92\\xb5\\xe6\\x81\\xa7\\xe2\\x81\\xa7\\\n\\xe1\\x7d\\xa3\\xde\\x7b\\xa1\\xdc\\x79\\x9f\\xdb\\x77\\x9e\\xd9\\x73\\x9a\\xd4\\\n\\x57\\x7e\\xbb\\x3a\\x3a\\x3a\\x35\\x35\\x35\\x30\\x30\\x30\\x9d\\xdf\\x6e\\xa3\\\n\\xe0\\x77\\x9e\\xe0\\x73\\x54\\x81\\xc4\\x97\\xb6\\xea\\xea\\xf3\\xf3\\xe6\\xf1\\\n\\xed\\xe6\\xf1\\xef\\xe6\\xf0\\xef\\xe5\\xf1\\xed\\xed\\xf5\\xf3\\x79\\x9c\\xd5\\\n\\x44\\x70\\xb0\\x34\\x34\\x34\\x51\\x7f\\xc3\\x9a\\xb6\\xef\\xe8\\xf3\\xea\\x84\\\n\\xbf\\x51\\x98\\xc9\\x6f\\x99\\xc9\\x71\\x84\\xbf\\x54\\xe9\\xf4\\xe4\\x7b\\x9c\\\n\\xdd\\x3a\\x69\\xaa\\x2e\\x2e\\x2e\\x29\\x29\\x29\\x24\\x24\\x24\\x55\\x83\\xc6\\\n\\xba\\xce\\xef\\xff\\xff\\xdd\\xc7\\xee\\x87\\xd7\\xf4\\xa2\\xd7\\xf6\\xa2\\xc7\\\n\\xee\\x8c\\xff\\xff\\xe0\\x85\\xa2\\xdd\\x3e\\x6a\\xab\\x33\\x68\\xba\\x58\\x84\\\n\\xc3\\x68\\x8b\\xd3\\x70\\x8f\\xe1\\x6c\\x8d\\xdc\\x6d\\x8b\\xda\\x6e\\x8a\\xd7\\\n\\x6c\\x8b\\xcd\\x44\\x6d\\xab\\x2e\\x5f\\xa6\\x37\\xe2\\x85\\xfa\\x00\\x00\\x00\\\n\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\\n\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xf6\\x49\\x44\\x41\\x54\\x18\\\n\\xd3\\x63\\x60\\x64\\x62\\x66\\x00\\x03\\x16\\x56\\x36\\x30\\xcd\\xc4\\xce\\xc1\\\n\\x09\\x06\\xac\\x5c\\xdc\\x60\\x01\\x76\\x0e\\x1e\\x5e\\x3e\\x7e\\x01\\x41\\x21\\\n\\x61\\x11\\x51\\xb0\\x80\\x18\\x8f\\xb8\\x84\\xa4\\x94\\xb4\\x8c\\xac\\x1c\\x83\\\n\\x3c\\x58\\x40\\x41\\x51\\x49\\x59\\x45\\x55\\x4d\\x5d\\x43\\x53\\x4b\\x1b\\x2c\\\n\\xa0\\xa8\\xc4\\xa9\\xa3\\xab\\xa7\\x6f\\x60\\xa8\\xa5\\x6d\\x04\\x16\\x30\\xe6\\\n\\x64\\x31\\x31\\x35\\x33\\xb7\\xb0\\xb4\\xb2\\xb6\\xb1\\xb5\\xb3\\x67\\x60\\x70\\\n\\x70\\x14\\x03\\x5a\\xe1\\xe4\\xec\\xe2\\xea\\x02\\x04\\x6e\\xee\\x0c\\x8e\\x1e\\\n\\xc2\\x9e\\x5e\\xde\\x3e\\xbe\\x2e\\x7e\\x2e\\x2e\\xfe\\x01\\x81\\x41\\x0c\\xc1\\\n\\x21\\x72\\x40\\x5b\\x42\\xc3\\xc2\\x23\\x22\\xa3\\xa2\\x63\\x62\\xe3\\x18\\xe2\\\n\\x13\\x34\\x81\\xb6\\x24\\x26\\x25\\xa7\\xa4\\xa6\\xa5\\x67\\x64\\x66\\x31\\x24\\\n\\x30\\x68\\x01\\x6d\\xc9\\xce\\xc9\\xcd\\xcb\\x2f\\x28\\x2c\\x2a\\x2e\\x61\\x28\\\n\\x2d\\x2b\\xaf\\xa8\\xac\\xaa\\xae\\xa9\\xad\\xab\\x6f\\x68\\x6c\\x6a\\x6e\\x61\\\n\\x68\\x65\\x28\\x03\\xda\\xd2\\xd6\\xde\\xd1\\xd9\\xd5\\xdd\\xd3\\xdb\\xd7\\xcf\\\n\\x30\\x61\\xe2\\x24\\xa0\\x6b\\x26\\x4f\\x99\\x3a\\x6d\\xfa\\x8c\\x99\\xb3\\x66\\\n\\xcf\\x81\\x78\\x9d\\x61\\xee\\xbc\\xf9\\x0b\\x16\\x2e\\x5a\\xbc\\x64\\xe9\\x32\\\n\\x00\\xcc\\x7a\\x3c\\x24\\x4b\\x99\\x9f\\x8a\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\x31\\x2d\\x31\\x38\\\n\\x54\\x31\\x34\\x3a\\x33\\x30\\x3a\\x31\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xd0\\\n\\x14\\xac\\xc1\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\x31\\x2d\\x31\\\n\\x38\\x54\\x31\\x34\\x3a\\x33\\x30\\x3a\\x31\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\xa1\\x49\\x14\\x7d\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x02\\x97\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xd8\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xd5\\xd5\\xd5\\xd4\\xd4\\xd4\\xd2\\xd2\\xd2\\\n\\xd1\\xd1\\xd1\\xd0\\xd0\\xd0\\xce\\xce\\xce\\xcd\\xcd\\xcd\\xd3\\xd3\\xd3\\xfd\\\n\\xfd\\xfd\\xe4\\xe4\\xe4\\xe2\\xe2\\xe2\\xe0\\xe0\\xe0\\xcb\\xcb\\xcb\\xca\\xca\\\n\\xca\\xf3\\xf3\\xf3\\xfb\\xfb\\xfb\\xc7\\xc7\\xc7\\xc8\\xc8\\xc8\\xf7\\xf7\\xf7\\\n\\xfb\\xe9\\xe8\\xfa\\xc1\\xbf\\xde\\xde\\xde\\xc3\\xc3\\xc3\\xfc\\xfc\\xfc\\xfc\\\n\\xeb\\xeb\\xfa\\x90\\x8d\\xfa\\x89\\x87\\xfa\\xc0\\xbe\\xdc\\xdc\\xdc\\xc0\\xc0\\\n\\xc0\\xeb\\xeb\\xeb\\xfa\\xfa\\xfa\\xfb\\xe8\\xe8\\xfa\\x8f\\x8d\\xf4\\x07\\x07\\\n\\xfa\\x91\\x8e\\xda\\xda\\xda\\xbd\\xbd\\xbd\\xe9\\xe9\\xe9\\xfa\\xd6\\xd5\\xfa\\\n\\x8a\\x87\\xd9\\xd9\\xd9\\xb9\\xb9\\xb9\\xe8\\xe8\\xe8\\xfa\\xd8\\xd8\\xf9\\x8e\\\n\\x8c\\xfa\\x8f\\x8c\\xfa\\xbd\\xbc\\xd7\\xd7\\xd7\\xb5\\xb5\\xb5\\xe7\\xe7\\xe7\\\n\\xfa\\x94\\x92\\xf3\\x93\\x91\\xfd\\xfb\\xfb\\xb7\\xb7\\xb7\\xbc\\xbc\\xbc\\xe5\\\n\\xe5\\xe5\\xf9\\x8d\\x8a\\xfa\\x92\\x8f\\xf5\\x9c\\x9a\\xf9\\xf4\\xf3\\xb8\\xb8\\\n\\xb8\\xfa\\xd7\\xd6\\xf9\\x9c\\x9a\\xfd\\xf7\\xf7\\xb4\\xb4\\xb4\\xb6\\xb6\\xb6\\\n\\xb1\\xb1\\xb1\\xd8\\xd8\\xd8\\xad\\xad\\xad\\xff\\xff\\xff\\x15\\x26\\x9e\\x04\\\n\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\\n\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x99\\x49\\x44\\\n\\x41\\x54\\x18\\xd3\\x5d\\xcc\\x67\\x03\\x81\\x60\\x18\\x85\\xe1\\x87\\x54\\x4e\\\n\\x8b\\x84\\x8c\\x64\\x64\\x46\\xf6\\xde\\xfb\\xff\\xff\\x24\\xbc\\x51\\xb8\\xbf\\\n\\x9d\\xeb\\xc3\\xa1\\x48\\x94\\x8b\\xf1\\x82\\x48\\x41\\x71\\xbc\\x92\\x42\\xe1\\\n\\x20\\x0b\\x0a\\x20\\xab\\x1f\\xe0\\x21\\x92\\x96\\x48\\x42\\xd1\\xdf\\x20\\x40\\\n\\xd1\\x52\\x46\\x3a\\x83\\xac\\xe9\\x83\\x08\\xe4\\x8c\\x7c\\xa1\\x68\\xa1\\x64\\\n\\x33\\x50\\xcb\\xa8\\x54\\x6b\\x8e\\x53\\xb7\\xd0\\x68\\x32\\xd1\\x5b\\x68\\x77\\\n\\x1c\\x26\\x6e\\x97\\x89\\xd9\\x83\\xd7\\x7f\\xca\\x60\\x88\\xd1\\x98\\x89\\x3d\\\n\\x61\\x32\\x9d\\xcd\\xdd\\x85\\x7f\\xbc\\x5c\\xc1\\x5b\\x6f\\xb6\\xbb\\xcf\\x26\\\n\\xda\\x4b\\x38\\x1c\\x4f\\xe1\\x26\\x3a\\xcb\\x80\\x7b\\xa1\\xaf\\xae\\xca\\xed\\\n\\x67\\x13\\xdd\\xff\\x76\\xd0\\x03\\x49\\x66\\x0f\\x33\\x11\\x3a\\x57\\x9e\\x00\\\n\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\\n\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\\n\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\\n\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x30\\x34\\x2d\\x30\\x32\\x54\\x31\\x31\\x3a\\x34\\x33\\x3a\\x31\\x30\\\n\\x2b\\x30\\x32\\x3a\\x30\\x30\\x36\\x68\\x3e\\x15\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x10\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x84\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x85\\x85\\x85\\x9e\\x9e\\x9e\\x7c\\x7c\\x7c\\\n\\x4c\\x4c\\x4c\\x91\\x91\\x91\\xe8\\xe8\\xe8\\xdd\\xdd\\xdd\\xc1\\xc1\\xc1\\x81\\\n\\x81\\x81\\x7b\\x7b\\x7b\\xd9\\xd9\\xd9\\xc4\\xc4\\xc4\\x73\\x73\\x73\\xd5\\xd5\\\n\\xd5\\x58\\x58\\x58\\x4b\\x4b\\x4b\\x65\\x65\\x65\\x92\\x92\\x92\\x79\\x79\\x79\\\n\\xa8\\xa8\\xa8\\x32\\x32\\x32\\x82\\x82\\x82\\x3f\\x3f\\x3f\\xbd\\xbd\\xbd\\xce\\\n\\xce\\xce\\xc2\\xc2\\xc2\\xad\\xad\\xad\\x67\\x67\\x67\\x52\\x52\\x52\\x41\\x41\\\n\\x41\\x46\\x46\\x46\\x51\\x51\\x51\\x4d\\x4d\\x4d\\x8d\\x8d\\x8d\\xaa\\xaa\\xaa\\\n\\xae\\xae\\xae\\x97\\x97\\x97\\x71\\x71\\x71\\x78\\x78\\x78\\x4a\\x4a\\x4a\\x64\\\n\\x64\\x64\\x6b\\x6b\\x6b\\xff\\xff\\xff\\xf1\\x13\\x89\\xe5\\x00\\x00\\x00\\x01\\\n\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\\n\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x66\\x49\\x44\\x41\\x54\\x18\\xd3\\\n\\xad\\x8e\\x35\\x16\\x80\\x30\\x00\\x43\\x83\\x14\\x77\\x29\\x2e\\x2d\\xde\\xfb\\\n\\x1f\\x10\\x0a\\x4c\\xcc\\xfc\\x29\\xf9\\x43\\x5e\\x80\\x9f\\x50\\x54\\x0d\\xd0\\\n\\x54\\xe5\\xad\\x3a\\x31\\x4c\\xcb\\x76\\x5c\\xd3\\x23\\xfa\\x2d\\xfc\\x20\\x8c\\\n\\xe2\\x24\\x8d\\xa3\\x30\\xf3\\x65\\xcf\\x29\\x50\\x94\\x55\\xdd\\x14\\x00\\xcd\\\n\\xa5\\x69\\xd1\\xf5\\xc3\\x38\\x0e\\x7d\\x77\\x45\\x09\\xe3\\xd3\\xbc\\xac\\xdb\\\n\\x32\\x4f\\x9c\\x3d\\xab\\xfb\\x21\\x04\\x20\\xc4\\xb1\\xff\\x75\\xfb\\xcb\\x09\\\n\\x0b\\x9f\\x06\\x31\\x74\\x10\\xab\\xb0\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\\n\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\\n\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\\n\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\\n\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x39\\x2d\\x31\\x38\\x54\\\n\\x31\\x31\\x3a\\x34\\x32\\x3a\\x30\\x39\\x2b\\x30\\x32\\x3a\\x30\\x30\\xb5\\xfb\\\n\\x49\\x8a\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\\n\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x39\\x2d\\x31\\x38\\\n\\x54\\x31\\x31\\x3a\\x34\\x32\\x3a\\x30\\x39\\x2b\\x30\\x32\\x3a\\x30\\x30\\xc4\\\n\\xa6\\xf1\\x36\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x13\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x4a\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xa8\\x39\\x2f\\xc4\\x33\\x27\\xc3\\x35\\x25\\\n\\xab\\x38\\x2b\\x88\\x65\\x34\\x87\\x58\\x1d\\xe9\\x1e\\x0b\\xfa\\x5c\\x51\\xfe\\\n\\xcf\\xcb\\xfe\\xb2\\xac\\xfc\\x3e\\x31\\xd7\\x39\\x2e\\xfb\\xf7\\xef\\xbb\\x84\\\n\\x36\\xf5\\x28\\x07\\xf5\\x26\\x05\\xf5\\x24\\x04\\xf5\\x21\\x04\\xf5\\x1e\\x03\\\n\\xfc\\x9b\\x93\\xff\\xda\\xd7\\xff\\xe8\\xe7\\xff\\xcf\\xcd\\xff\\xca\\xc7\\xc0\\\n\\xb4\\xa0\\xe2\\xbc\\x86\\xa4\\x72\\x2e\\xf7\\x25\\x09\\xff\\xa2\\x9b\\xff\\xa5\\\n\\x9f\\xff\\xa0\\x9b\\xff\\xbc\\xb8\\xff\\xcc\\xc8\\xff\\xbb\\xb6\\xff\\xd4\\xd1\\\n\\xff\\x9c\\x95\\x97\\x6e\\x35\\xe4\\xc1\\x8f\\x8f\\x5f\\x21\\xf9\\x1f\\x0c\\xff\\\n\\x5c\\x51\\xff\\x5b\\x50\\xff\\x89\\x81\\xff\\xa4\\x9f\\xff\\xc7\\xc4\\xff\\xc9\\\n\\xc5\\xff\\xa3\\x9d\\xf0\\x75\\x70\\xac\\x79\\x35\\xdb\\xaf\\x6e\\xfb\\x26\\x17\\\n\\xff\\xa2\\x9d\\xff\\x5e\\x54\\xff\\x60\\x57\\xff\\x8a\\x82\\xff\\xaa\\xa5\\xff\\\n\\xd0\\xcd\\xff\\xbb\\xb7\\xff\\xa0\\x9a\\xd7\\x94\\x93\\xc0\\x8c\\x42\\xdf\\xb7\\\n\\x7d\\xcd\\x2f\\x18\\xfe\\x96\\x8f\\xff\\x85\\x7d\\xff\\x67\\x5c\\xff\\x68\\x5e\\\n\\xff\\x8c\\x85\\xff\\xb0\\xaa\\xff\\xe0\\xdf\\xff\\xc1\\xbd\\xff\\xb9\\xb5\\xd1\\\n\\x98\\x98\\xd6\\xa2\\x56\\xc7\\x92\\x46\\xeb\\x2a\\x0c\\xff\\x53\\x49\\xff\\x83\\\n\\x7c\\xff\\xae\\xa9\\xff\\xc4\\xc0\\xfc\\xa6\\x9f\\xf2\\x5d\\x54\\xf9\\x58\\x4d\\\n\\xc0\\x67\\x5e\\xb0\\x7e\\x3a\\xf7\\x28\\x0b\\xfe\\x9b\\x94\\xff\\xa8\\xa3\\xff\\\n\\xa8\\xa2\\xfe\\xb6\\xb2\\xf9\\x43\\x35\\xec\\x20\\x0c\\xce\\x55\\x4b\\xe5\\x6a\\\n\\x60\\x32\\x1d\\x16\\xd4\\x9e\\x53\\x9a\\x6a\\x2b\\xab\\x38\\x29\\xd5\\x2e\\x16\\\n\\xec\\x24\\x0a\\xea\\x24\\x0a\\xd8\\x25\\x12\\xaa\\x34\\x28\\x9c\\x6b\\x2c\\xb1\\\n\\x80\\x3c\\xca\\x97\\x4d\\xbe\\x8c\\x45\\xac\\x7b\\x38\\xff\\xff\\xff\\x20\\xab\\\n\\x67\\x3c\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xa3\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x01\\x18\\x99\\x98\\x59\\x58\\xd9\\\n\\xd8\\xe0\\x7c\\x76\\x0e\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\x90\\x08\\xbf\\x80\\xa0\\\n\\x90\\xb0\\x88\\xa8\\x98\\xb8\\x84\\xa4\\x94\\x34\\x48\\x52\\x46\\x56\\x4e\\x5e\\\n\\x41\\x51\\x49\\x59\\x4e\\x45\\x55\\x4d\\x1d\\x24\\xa0\\x21\\xab\\xa9\\xa5\\xad\\\n\\xa3\\xab\\xa7\\x6f\\x60\\x68\\x04\\x36\\xc3\\xd8\\xc4\\xd4\\xcc\\xdc\\xc2\\xd2\\\n\\xca\\xda\\xc6\\xd6\\x0e\\x24\\x60\\xef\\xe0\\xe8\\xe4\\xec\\xe2\\xea\\xe6\\xee\\\n\\xe1\\xe9\\xe5\\x0d\\x12\\xf0\\xb1\\xd6\\xf2\\xf5\\xf3\\x0f\\x08\\x0c\\x0a\\x0e\\\n\\xf1\\x0a\\x05\\x09\\x84\\x85\\x47\\x44\\x46\\x45\\xc7\\xc4\\x32\\xc4\\xc5\\x27\\\n\\x24\\x82\\x8c\\x48\\x4a\\x4e\\x49\\x4d\\x4b\\x07\\xb1\\x32\\xbc\\xd8\\x50\\xdc\\\n\\xca\\x96\\x89\\x2e\\x90\\x85\\x2e\\xe0\\x95\\x8d\\x2e\\x90\\x83\\xea\\x5f\\x36\\\n\\x88\\x5f\\x01\\x46\\xf4\\x19\\xc1\\x78\\xa2\\x86\\x34\\x00\\x00\\x00\\x1d\\x74\\\n\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\\n\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\\n\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\\n\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\\n\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\\n\\x2d\\x30\\x34\\x54\\x31\\x35\\x3a\\x35\\x37\\x3a\\x33\\x37\\x2b\\x30\\x32\\x3a\\\n\\x30\\x30\\x3d\\x45\\xfb\\x76\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\\n\\x60\\x82\\\n\\x00\\x00\\x02\\xfd\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x3e\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x85\\x85\\x85\\x9e\\x9e\\x9e\\x7c\\x7c\\x7c\\\n\\x4c\\x4c\\x4c\\x91\\x91\\x91\\xe8\\xe8\\xe8\\xdd\\xdd\\xdd\\xc1\\xc1\\xc1\\x81\\\n\\x81\\x81\\x7b\\x7b\\x7b\\xd9\\xd9\\xd9\\xc4\\xc4\\xc4\\xaa\\x9b\\x72\\xd8\\xa5\\\n\\x58\\xdb\\xb1\\x85\\xd0\\x9d\\x46\\x73\\x73\\x73\\xd5\\xd5\\xd5\\x58\\x58\\x58\\\n\\x4b\\x4b\\x4b\\x65\\x65\\x65\\x92\\x92\\x92\\x79\\x79\\x79\\x94\\x81\\x40\\xe7\\\n\\xbe\\x77\\xf0\\xd2\\xb4\\xff\\xf3\\xe5\\xef\\xd2\\xac\\xc7\\x8c\\x48\\x32\\x32\\\n\\x32\\x82\\x82\\x82\\x3f\\x3f\\x3f\\xbd\\xbd\\xbd\\xce\\xce\\xce\\xc2\\xc2\\xc2\\\n\\xad\\xad\\xad\\x77\\x68\\x35\\xee\\xd5\\x7e\\xf9\\xe3\\xb2\\xe7\\xc0\\x8b\\xf6\\\n\\xd3\\xae\\xfc\\xe0\\xc4\\xd3\\x9f\\x66\\x67\\x67\\x67\\x52\\x52\\x52\\x41\\x41\\\n\\x41\\x46\\x46\\x46\\x51\\x51\\x51\\x73\\x66\\x3c\\xed\\xd3\\x7c\\xfd\\xf6\\xc4\\\n\\xf6\\xdd\\x6c\\xed\\xca\\x6d\\xd7\\xa3\\x63\\xd2\\x9b\\x5d\\x4d\\x4d\\x4d\\x8d\\\n\\x8d\\x8d\\xaa\\xaa\\xaa\\xae\\xae\\xae\\x97\\x97\\x97\\x71\\x71\\x71\\x95\\x88\\\n\\x5f\\xee\\xd3\\x79\\xfd\\xf7\\xc7\\xf5\\xdc\\x5f\\xf7\\xe2\\x5b\\xf2\\xd6\\x7a\\\n\\xdc\\x97\\x40\\x4a\\x4a\\x4a\\x64\\x64\\x64\\x6b\\x6b\\x6b\\x8f\\x71\\x32\\xe7\\\n\\xcb\\x77\\xf5\\xdc\\x5e\\xf7\\xe1\\x5a\\xf1\\xd4\\x7b\\xdb\\x94\\x42\\xd6\\xb8\\\n\\x73\\xfd\\xf6\\xc2\\xf7\\xdf\\x63\\xf8\\xe2\\x5d\\xf0\\xd3\\x79\\xdb\\x95\\x43\\\n\\xd5\\xb6\\x7a\\xd1\\xb7\\x90\\xe4\\xc9\\x55\\xf5\\xdf\\x5b\\xed\\xd0\\x78\\xda\\\n\\x94\\x41\\xaa\\x89\\x43\\xff\\xf2\\xe0\\xd8\\x9a\\x54\\xbe\\x7a\\x1a\\xc5\\x98\\\n\\x49\\xc1\\x82\\x34\\x83\\x65\\x2b\\xf9\\xc7\\x94\\xf9\\xc9\\x91\\xc9\\x85\\x41\\\n\\xaa\\x64\\x1c\\x55\\x3d\\x11\\x87\\x5f\\x28\\xbd\\x88\\x49\\xbc\\x8d\\x42\\xff\\\n\\xff\\xff\\xfd\\xc2\\x4c\\xf4\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\\n\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\\n\\x00\\x00\\x00\\x99\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xa0\\x0e\\x60\\x64\\\n\\x62\\x66\\x60\\x60\\x66\\x62\\x84\\x72\\x59\\x58\\xd9\\xd8\\x39\\x38\\xb9\\xb8\\\n\\xd9\\x79\\x78\\xf9\\xf8\\x05\\x80\\x02\\x82\\x42\\xc2\\x22\\xa2\\x62\\xe2\\xa2\\\n\\x22\\x12\\x92\\x52\\xd2\\x32\\xb2\\x0c\\x72\\xf2\\x0c\\x0c\\x0a\\x8a\\x4a\\xca\\\n\\x2a\\xaa\\x6a\\xea\\x1a\\x9a\\x5a\\xda\\x0c\\x0c\\x3a\\x0c\\xba\\x7a\\xfa\\x06\\\n\\x06\\x86\\x46\\xc6\\x26\\xa6\\x66\\xe6\\x40\\x2d\\x16\\x96\\x56\\xd6\\x36\\xb6\\\n\\x76\\xf6\\x0e\\x8e\\x4e\\xce\\x2e\\x60\\x53\\x5d\\xdd\\xdc\\xdd\\x3d\\x3c\\x1d\\\n\\xbc\\xbc\\x7d\\x7c\\x11\\x36\\xfb\\xf9\\x07\\x04\\x06\\x05\\x23\\xf8\\x21\\xa1\\\n\\x61\\xe1\\x11\\x91\\x08\\x7e\\x54\\x74\\x4c\\x6c\\x5c\\x3c\\x92\\x53\\x13\\x12\\\n\\x93\\x92\\x53\\x90\\xdd\\x9e\\x9a\\x96\\x9e\\x01\\x63\\x03\\x00\\xc3\\x5d\\x16\\\n\\x42\\xde\\x70\\x99\\x68\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\\n\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\\n\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\\n\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x39\\x2d\\x31\\x38\\x54\\x31\\x33\\x3a\\\n\\x34\\x30\\x3a\\x30\\x32\\x2b\\x30\\x32\\x3a\\x30\\x30\\xd3\\x55\\x78\\x06\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\\n\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x39\\x2d\\x31\\x38\\x54\\x31\\x33\\\n\\x3a\\x34\\x30\\x3a\\x30\\x32\\x2b\\x30\\x32\\x3a\\x30\\x30\\xa2\\x08\\xc0\\xba\\\n\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x27\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x3e\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xba\\xba\\xba\\xb8\\xb8\\xb8\\xb7\\xb7\\xb7\\\n\\xb6\\xb6\\xb6\\xb4\\xb4\\xb4\\xb3\\xb3\\xb3\\xbb\\xbb\\xbb\\xd0\\xd0\\xd0\\xe8\\\n\\xe8\\xe8\\xf3\\xf3\\xf3\\xfd\\xfd\\xfd\\xfc\\xfc\\xfc\\xed\\xed\\xed\\xe0\\xe0\\\n\\xe0\\xc2\\xc2\\xc2\\xad\\xad\\xad\\xe1\\xe1\\xe1\\xfe\\xfe\\xfe\\xff\\xff\\xff\\\n\\xfb\\xfb\\xfb\\xcf\\xcf\\xcf\\xa9\\xa9\\xa9\\xb9\\xb9\\xb9\\xf8\\xf8\\xf8\\xea\\\n\\xea\\xea\\xa7\\xa7\\xa7\\xf7\\xf7\\xf7\\xe7\\xe7\\xe7\\xef\\xef\\xef\\xf6\\xf6\\\n\\xf6\\xfa\\xfa\\xfa\\xf0\\xf0\\xf0\\xde\\xde\\xde\\xc3\\xc3\\xc3\\xe6\\xe6\\xe6\\\n\\xa5\\xa5\\xa5\\xb5\\xb5\\xb5\\xeb\\xeb\\xeb\\xd6\\xd6\\xd6\\xd5\\xd5\\xd5\\xd1\\\n\\xd1\\xd1\\xbc\\xbc\\xbc\\xc0\\xc0\\xc0\\xe5\\xe5\\xe5\\xa3\\xa3\\xa3\\xf5\\xf5\\\n\\xf5\\xee\\xee\\xee\\xe2\\xe2\\xe2\\xcd\\xcd\\xcd\\xe3\\xe3\\xe3\\xa0\\xa0\\xa0\\\n\\xb2\\xb2\\xb2\\xf4\\xf4\\xf4\\xdd\\xdd\\xdd\\xc9\\xc9\\xc9\\xbd\\xbd\\xbd\\xbf\\\n\\xbf\\xbf\\x9e\\x9e\\x9e\\xb0\\xb0\\xb0\\xd9\\xd9\\xd9\\xdb\\xdb\\xdb\\xc4\\xc4\\\n\\xc4\\xc0\\x4d\\x0e\\xbc\\x42\\x04\\xb9\\x45\\x03\\xae\\xae\\xae\\xf2\\xf2\\xf2\\\n\\xd8\\xd8\\xd8\\xdc\\xdc\\xdc\\xd1\\x73\\x38\\xf7\\xb5\\x8d\\xfe\\xd6\\xb8\\xf5\\\n\\xa8\\x72\\xc9\\x6b\\x2d\\x65\\x66\\x15\\xac\\xac\\xac\\xd4\\xd4\\xd4\\xd2\\xd2\\\n\\xd2\\xa9\\x50\\x0a\\xf6\\xb5\\x8d\\xff\\x92\\x4d\\xff\\x77\\x11\\xff\\x86\\x21\\\n\\xeb\\x8a\\x40\\xa6\\x4c\\x07\\xbb\\x42\\x04\\xfe\\xcd\\xae\\xef\\x7f\\x18\\xce\\\n\\xce\\xce\\xaa\\x4d\\x07\\xf4\\x9d\\x63\\xff\\x7f\\x18\\xf8\\x76\\x00\\xee\\x76\\\n\\x00\\xe1\\x68\\x03\\xa9\\x4b\\x06\\xa1\\xa1\\xa1\\x9f\\x9f\\x9f\\xab\\xab\\xab\\\n\\xc3\\x57\\x1a\\xc9\\x64\\x25\\xe6\\x77\\x21\\xea\\x79\\x05\\xdd\\x64\\x01\\xbd\\\n\\x4d\\x04\\x1b\\x50\\x37\\x8f\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\\n\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\\n\\x00\\x00\\x00\\xc3\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x0a\\x18\\x99\\\n\\x98\\x59\\x58\\xd9\\xe0\\x5c\\x76\\x0e\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\x01\\\n\\xa8\\xb4\\xa0\\x90\\x30\\x18\\x88\\x88\\x8a\\x81\\x05\\xc4\\x25\\x60\\x02\\x92\\\n\\x52\\x60\\x01\\x66\\x69\\x19\\x59\\x39\\x11\\x79\\x05\\x45\\x25\\x65\\x15\\xb0\\\n\\x80\\xaa\\x9c\\x9a\\xa2\\xba\\x86\\xa6\\x92\\x96\\xb6\\x8e\\x2e\\x58\\x80\\x55\\\n\\x4f\\x5f\\xd9\\x40\\x59\\xd0\\x90\\x9f\\xdf\\xc8\\x18\\x2c\\x60\\x62\\x2a\\x29\\\n\\x68\\x66\\xa4\\x68\\x6e\\x61\\x69\\x60\\x05\\x16\\xb0\\xe6\\x92\\x31\\xb3\\xe1\\\n\\xb3\\xb5\\x63\\xb2\\x77\\x70\\x04\\x0b\\x38\\x39\\x1b\\xb8\\x68\\xb8\\xba\\x68\\\n\\xbb\\xb9\\x7b\\x78\\x7a\\x79\\x03\\x05\\x7c\\x14\\x14\\x7d\\xfd\\x6c\\xd5\\xfd\\\n\\x03\\x02\\x83\\x82\\x43\\x42\\x81\\x02\\x62\\x8a\\x5c\\xb6\\x40\\x81\\xb0\\x70\\\n\\xa0\\x53\\x22\\xc2\\x40\\x7a\\x54\\x22\\x79\\x4d\\xf5\\x4c\\xa3\\xa2\\x63\\x62\\\n\\xe3\\xe2\\x13\\xc0\\xa6\\x24\\x26\\x25\\x26\\x4b\\xa5\\xa4\\xa6\\xa5\\x67\\x64\\\n\\xa2\\xf8\\xd9\\x11\\x64\\x0b\\x00\\xd9\\x3b\\x1d\\xf2\\xfc\\x26\\xb9\\xc5\\x00\\\n\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\\n\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\\n\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\\n\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\xa0\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xa1\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xa2\\xc1\\xef\\x9f\\xc0\\xed\\x9d\\xbe\\xeb\\\n\\x9a\\xbc\\xeb\\x96\\xba\\xe9\\x93\\xb7\\xe7\\x90\\xb5\\xe6\\x8c\\xb2\\xe4\\x88\\\n\\xaf\\xe2\\x84\\xac\\xe0\\x80\\xa9\\xdd\\x7d\\xa5\\xdc\\x7a\\xa3\\xda\\xa1\\xc1\\\n\\xee\\xf4\\xf7\\xfb\\x74\\xa0\\xd7\\x9e\\xbf\\xec\\xa5\\xd5\\x9c\\xa1\\xd3\\x98\\\n\\x9d\\xd0\\x94\\x98\\xce\\x90\\x93\\xcb\\x8b\\x8e\\xc9\\x87\\x89\\xc6\\x82\\x84\\\n\\xc3\\x7e\\x80\\xc1\\x7a\\x7c\\xbe\\x76\\x6f\\x9b\\xd4\\x9b\\xbd\\xeb\\xff\\xff\\\n\\xff\\x6a\\x97\\xd1\\x98\\xba\\xe9\\xa6\\xc3\\xe9\\x64\\x93\\xce\\x94\\xb7\\xe7\\\n\\xa9\\xc4\\xe8\\xac\\xc7\\xe8\\xba\\xba\\xba\\xb4\\xb4\\xb4\\xeb\\xf1\\xf7\\x5f\\\n\\x8f\\xcb\\x8f\\xb4\\xe5\\xf2\\xf6\\xfa\\xaa\\xc6\\xe9\\xac\\xc6\\xe9\\xac\\xc7\\\n\\xea\\xad\\xc7\\xe9\\xae\\xc9\\xe9\\xb7\\xc4\\xd5\\xba\\xbb\\xbd\\xb1\\xc5\\xdf\\\n\\xc0\\xc0\\xc0\\xbe\\xbe\\xbe\\xd1\\xd7\\xe0\\x9e\\xa3\\xab\\xa3\\xa3\\xa3\\x8c\\\n\\xb1\\xe3\\xf1\\xf6\\xfa\\xae\\xc9\\xea\\xb0\\xc9\\xea\\xda\\xda\\xda\\xbf\\xbf\\\n\\xbf\\xd6\\xd6\\xd6\\xd8\\xd8\\xd8\\xb8\\xb8\\xb8\\xd4\\xd4\\xd4\\x88\\x88\\x88\\\n\\x87\\xae\\xe1\\xf0\\xf4\\xfa\\xb2\\xcb\\xea\\xb3\\xcc\\xea\\xb6\\xc1\\xce\\xd2\\\n\\xd2\\xd2\\xab\\xab\\xab\\x81\\x81\\x81\\x8a\\x8a\\x8a\\xca\\xca\\xca\\x93\\x93\\\n\\x93\\x82\\xaa\\xdf\\xef\\xf3\\xf9\\xb7\\xce\\xea\\xbb\\xd0\\xeb\\xe8\\xe8\\xe8\\\n\\x86\\x86\\x86\\x99\\x99\\x9a\\xe2\\xe2\\xe2\\xb6\\xb6\\xb6\\x87\\x87\\x87\\x7e\\\n\\xa8\\xdd\\xba\\xd0\\xeb\\xa5\\xa5\\xa5\\xb7\\xb7\\xb7\\xe1\\xe1\\xe1\\x9c\\x9c\\\n\\x9c\\xb5\\xcd\\xea\\x99\\x9a\\x9a\\xd5\\xd5\\xd5\\x99\\x99\\x99\\x65\\x65\\x65\\\n\\x7a\\xa4\\xd9\\xee\\xf3\\xf9\\xbe\\xd2\\xeb\\xbf\\xd3\\xeb\\xf9\\xf9\\xf9\\xcd\\\n\\xcd\\xcd\\xc9\\xc9\\xc9\\xbd\\xbd\\xbd\\x9a\\x9a\\x9a\\xb5\\xb5\\xb5\\xc2\\xc2\\\n\\xc2\\x6d\\x6d\\x6d\\x75\\xa1\\xd7\\xed\\xf2\\xf8\\xea\\xf0\\xf7\\xe6\\xed\\xf6\\\n\\xe2\\xea\\xf4\\xde\\xe7\\xf3\\xdb\\xe4\\xf1\\xa0\\xa0\\xa0\\xa1\\xa1\\xa1\\xc4\\\n\\xc4\\xc4\\x72\\x9e\\xd6\\x6e\\x99\\xd3\\x68\\x96\\xd1\\x63\\x92\\xce\\x5e\\x8e\\\n\\xcb\\x5b\\x8a\\xc9\\x56\\x87\\xc7\\x72\\x86\\x9f\\x69\\x69\\x69\\x5e\\x81\\xae\\\n\\xa2\\xa2\\xa2\\x8b\\x8b\\x8b\\x58\\x79\\xa3\\x5d\\x5d\\x5d\\x59\\x59\\x59\\x72\\\n\\x72\\x72\\x5c\\x5c\\x5c\\xfa\\x13\\xc4\\x24\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\\n\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\\n\\x05\\x1d\\x48\\x00\\x00\\x00\\xd9\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\\n\\x00\\x8c\\x4c\\xcc\\x2c\\xac\\x6c\\xec\\x1c\\x9c\\x5c\\xdc\\x3c\\xbc\\x40\\x3e\\\n\\x1f\\x3f\\x12\\x10\\x00\\x0a\\x08\\xf2\\x0b\\x09\\x8b\\x88\\x8a\\x89\\x4b\\x48\\\n\\x4a\\x49\\xf3\\xcb\\x00\\x05\\x64\\xf9\\xe5\\xe0\\x80\\x5f\\x1e\\x28\\xa0\\xc0\\\n\\xaf\\x08\\x07\\xfc\\x4a\\x40\\x01\\x65\\x7e\\x45\\x39\\x15\\xa0\\xac\\xaa\\x9c\\\n\\x9a\\xba\\x86\\x26\\x50\\x40\\x4b\\x5b\\x47\\x57\\x4f\\xdf\\xc0\\xd0\\xc8\\xd8\\\n\\xc4\\xd4\\xcc\\xdc\\x82\\x81\\xc1\\xd2\\xca\\x5a\\xce\\x46\\x4e\\x4e\\xcd\\xd6\\\n\\xce\\xde\\xc1\\xd1\\xc9\\x99\\x81\\xc1\\xc5\\xd5\\xcd\\x1d\\x08\\x3c\\x3c\\xbd\\\n\\xbc\\x7d\\xd4\\x7d\\xfd\\x18\\x18\\xfc\\x03\\x02\\xe5\\x82\\xe4\\xd4\\x7d\\x83\\\n\\x43\\xe4\\xe4\\x42\\xc3\\xc2\\x23\\x18\\x22\\x03\\xa2\\x82\\x82\\x82\\xa2\\x63\\\n\\x62\\xe3\\xe2\\xe3\\x13\\x12\\x93\\x92\\x19\\x52\\x52\\xd3\\xe4\\xd2\\xe5\\x32\\\n\\x32\\xb3\\xb2\\xe3\\x72\\x72\\xf3\\xf2\\x19\\x18\\x0a\\x0a\\x8b\\x8a\\x4b\\x4a\\\n\\xcb\\xca\\xb3\\xa2\\x7d\\xf3\\x2a\\x2a\\x81\\x02\\x55\\xd5\\x35\\xb5\\x75\\xf5\\\n\\x0d\\x8d\\x4d\\xcd\\x2d\\xad\\x6d\\xed\\x1d\\xc8\\xde\\xee\\xec\\x02\\x91\\x00\\\n\\xe9\\xf7\\x30\\x0a\\x7a\\xab\\x7c\\x2c\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\\n\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\\n\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\\n\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\\n\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\\n\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\\n\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\\n\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\\n\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x7a\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xba\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x95\\xc0\\xf4\\x8b\\xba\\xf0\\x7f\\xb2\\xea\\\n\\x70\\xa8\\xe2\\x70\\xc1\\x63\\x6d\\xbf\\x60\\x6a\\xbd\\x5e\\x68\\xbb\\x5b\\x8b\\\n\\xb9\\xf0\\xc9\\xd4\\xf0\\xc2\\xcd\\xee\\x60\\x9c\\xd8\\x6c\\xbe\\x5f\\xb1\\xda\\\n\\xac\\xaf\\xd9\\xa9\\x63\\xb8\\x57\\x7d\\xb0\\xe9\\xc0\\xcb\\xed\\xb8\\xc3\\xea\\\n\\x51\\x8d\\xce\\x00\\x00\\x00\\x68\\xbb\\x5c\\xae\\xd8\\xa8\\xac\\xd7\\xa5\\x5f\\\n\\xb5\\x54\\x6d\\xa4\\xe1\\x5f\\x99\\xd7\\x50\\x8c\\xcd\\x42\\x7e\\xc4\\x64\\xb8\\\n\\x58\\x61\\xb6\\x55\\x5e\\xb4\\x53\\x5b\\xb2\\x50\\x58\\xb1\\x4d\\x50\\xaa\\x47\\\n\\x48\\xa3\\x3f\\x30\\x8f\\x2c\\x2a\\x88\\x27\\x26\\x83\\x23\\x26\\x81\\x22\\x57\\\n\\xb0\\x4c\\x96\\xcc\\x8e\\x8c\\xc8\\x83\\x3f\\x9c\\x38\\x2a\\x87\\x26\\x5a\\xaf\\\n\\x53\\x58\\xae\\x51\\x24\\x7f\\x21\\x4e\\xa8\\x45\\x88\\xc6\\x7f\\x55\\xac\\x4f\\\n\\x23\\x7d\\x20\\x45\\xa1\\x3d\\x36\\x93\\x30\\x26\\x82\\x22\\x7c\\xc0\\x72\\x24\\\n\\x7e\\x20\\x57\\xad\\x50\\x3d\\x9a\\x36\\x2f\\x8c\\x2a\\xff\\xff\\xff\\x99\\x3c\\\n\\x14\\xce\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x9a\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x5d\\x8c\\xd7\\x12\\x82\\x40\\x10\\x04\\xc7\\x80\\\n\\x62\\x8e\\xab\\x87\\x01\\x45\\x30\\xdc\\x21\\xea\\x21\\xe2\\xa1\\xfe\\xff\\x77\\\n\\x49\\x11\\x14\\xed\\x97\\xad\\xe9\\x9a\\x1d\\x94\\xca\\x95\\x2a\\x00\\xad\\x56\\\n\\xd7\\x91\\xd0\\x68\\xb6\\xda\\xf1\\xe9\\x74\\x7b\\xfd\\x54\\x0c\\x86\\xa3\\x31\\\n\\x11\\x4d\\xa6\\xcc\\x48\\xc5\\x6c\\xbe\\x58\\x82\\x60\\xae\\xd6\\x16\\xbe\\x10\\\n\\xfe\\x20\\x18\\x1b\\xdb\\xc1\\x76\\xb7\\x3f\\x64\\x82\\xb8\\x70\\x8f\\xe4\\x9d\\\n\\xce\\x97\\xbc\\x21\\x7d\\x70\\x09\\x5c\\x83\\xc2\\x86\\xd4\\x6e\\x40\\x2e\\x38\\\n\\x97\\x8e\\x2e\\xcc\\xf0\\x33\\xca\\x19\\x13\\xc2\\x17\\xd6\\x3d\\x17\\x92\\x29\\\n\\xa5\\x34\\xe5\\xca\\x28\\x33\\x8e\\x88\\x51\\xee\\x23\\xc8\\x7f\\x9e\\xe1\\xcb\\\n\\x93\\x85\\x9c\\x10\\xd9\\xbf\\x19\\x41\\x92\\xdf\\x5a\\x6b\\x10\\x10\\x3d\\xd9\\\n\\x2e\\x69\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\\n\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\\n\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\\n\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\\n\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\\n\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\\n\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\\n\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x9d\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xff\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x95\\xc0\\xf4\\x8b\\xba\\xf0\\x7f\\xb2\\xea\\\n\\x70\\xa8\\xe2\\x70\\xc1\\x63\\x6d\\xbf\\x60\\x6a\\xbd\\x5e\\x68\\xbb\\x5b\\x8b\\\n\\xb9\\xf0\\xc9\\xd4\\xf0\\xc2\\xcd\\xee\\x60\\x9c\\xd8\\x6c\\xbe\\x5f\\xb1\\xda\\\n\\xac\\xaf\\xd9\\xa9\\x63\\xb8\\x57\\x7d\\xb0\\xe9\\xc0\\xcb\\xed\\xb8\\xc3\\xea\\\n\\x51\\x8d\\xce\\x00\\x00\\x00\\x68\\xbb\\x5c\\xae\\xd8\\xa8\\xac\\xd7\\xa5\\x5f\\\n\\xb5\\x54\\x6d\\xa4\\xe1\\x5f\\x99\\xd7\\x50\\x8c\\xcd\\x42\\x7e\\xc4\\x64\\xb8\\\n\\x58\\x61\\xb6\\x55\\x5e\\xb4\\x53\\x5b\\xb2\\x50\\x58\\xb1\\x4d\\x50\\xaa\\x47\\\n\\x48\\xa3\\x3f\\x30\\x8f\\x2c\\x2a\\x88\\x27\\x26\\x83\\x23\\x26\\x81\\x22\\x57\\\n\\xb0\\x4c\\x96\\xcc\\x8e\\x8c\\xc8\\x83\\x3f\\x9c\\x38\\x2a\\x87\\x26\\x5a\\xaf\\\n\\x53\\x58\\xae\\x51\\x24\\x7f\\x21\\x4e\\xa8\\x45\\x88\\xc6\\x7f\\x7c\\xc0\\x72\\\n\\x36\\x94\\x30\\x26\\x82\\x22\\x57\\xad\\x50\\x55\\xac\\x4f\\x23\\x7d\\x20\\x45\\\n\\xa1\\x3d\\x3d\\x9a\\x36\\x36\\x93\\x30\\x2f\\x8c\\x2a\\x6e\\x94\\x58\\x66\\x8e\\\n\\x4f\\x59\\x84\\x40\\x81\\xab\\x61\\xb4\\xd4\\x95\\xd0\\xe6\\xba\\x8f\\xbb\\x6a\\\n\\x57\\x8f\\x2d\\x37\\x6b\\x19\\x5e\\x89\\x45\\xb1\\xd3\\x90\\xb1\\xd6\\x92\\xff\\\n\\xff\\xff\\x8c\\xbc\\x65\\x8f\\xbc\\x67\\x4c\\x7b\\x31\\xb6\\xd4\\x9c\\xb2\\xd2\\\n\\x95\\x38\\x6d\\x1b\\x8b\\xba\\x62\\x87\\xba\\x60\\x87\\xb9\\x60\\x53\\x8c\\x28\\\n\\x8d\\xba\\x64\\x88\\x20\\xb3\\xa8\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\\n\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\\n\\x48\\x00\\x00\\x00\\xa1\\x49\\x44\\x41\\x54\\x18\\xd3\\x5d\\x8c\\x55\\x12\\xc2\\\n\\x40\\x10\\x05\\x1f\\xee\\xce\\x02\\xc1\\xdd\\x5d\\x13\\xdc\\x02\\x2c\\x12\\x24\\\n\\xdc\\xff\\x2c\\x10\\x20\\x52\\xf4\\xcf\\x4c\\x75\\x75\\x3d\\xe8\\xf4\\x06\\x23\\\n\\x00\\x93\\xd9\\x62\\xc5\\x07\\x9b\\xdd\\xe1\\x7c\\x1f\\x97\\xdb\\xe3\\xfd\\x0a\\\n\\x9f\\x3f\\x10\\x24\\x84\\x84\\xc2\\x11\\xe6\\x2b\\xa2\\xb1\\x78\\x02\\x04\\xc9\\\n\\x54\\x3a\\x03\\x15\\x82\\x3f\\x08\\x98\\x6c\\x2e\\x8f\\x42\\xb1\\x54\\xfe\\x09\\\n\\x52\\xa9\\xd6\\xea\\xa4\\xd1\\x6c\\xb5\\xe5\\xa2\\xd3\\xed\\xf5\\x31\\x18\\x8e\\\n\\x58\\x59\\x70\\xe3\\xc9\\x54\\xfa\\x58\\xed\\xe8\\x6c\\xbe\\xd0\\x8c\\x02\\xcb\\\n\\xd5\\x7a\\xb3\\xe5\\x95\\x51\\xec\\xf6\\x07\\x7a\\x3c\\xf1\\x72\\xd3\\xc1\\xf9\\\n\\x42\\x29\\x15\\x14\\xc1\\xe1\\x7a\\xbb\\xd3\\x87\\x5a\\x00\\xbc\\xf8\\x14\\x9e\\\n\\xa2\\x46\\x80\\x97\\xc0\\x0b\\x3f\\xac\\x15\\x2c\\x28\\xd8\\xeb\\x40\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\\n\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\\n\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\\n\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\\n\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\\n\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x1f\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x01\\x73\\x52\\x47\\x42\\x00\\xae\\xce\\x1c\\xe9\\x00\\x00\\x01\\\n\\xcb\\x50\\x4c\\x54\\x45\\xff\\x71\\x34\\xff\\x41\\x00\\xff\\x43\\x00\\xff\\x45\\\n\\x00\\xff\\x47\\x00\\xff\\x4b\\x00\\xff\\x4d\\x00\\xff\\x51\\x00\\xff\\x53\\x00\\\n\\xff\\x55\\x00\\xff\\x59\\x00\\xff\\x5d\\x00\\xff\\x5f\\x00\\xff\\x63\\x00\\xff\\\n\\x65\\x00\\xff\\x67\\x00\\xff\\x69\\x00\\xff\\x6d\\x00\\xff\\x71\\x00\\xff\\x75\\\n\\x00\\xff\\x77\\x00\\xff\\x71\\x33\\xff\\x7b\\x00\\xff\\x7d\\x00\\xff\\x81\\x00\\\n\\xff\\x83\\x00\\xff\\x7a\\x37\\xff\\x85\\x00\\xff\\x7b\\x38\\xff\\x87\\x00\\xff\\\n\\x89\\x00\\xff\\x7d\\x46\\xff\\x8b\\x00\\xff\\x82\\x3c\\xff\\x84\\x3c\\xff\\x8a\\\n\\x3f\\xff\\x86\\x55\\xff\\x8b\\x3f\\xff\\x8c\\x40\\xff\\x8a\\x58\\xff\\x8c\\x55\\\n\\xff\\x92\\x43\\xff\\x94\\x45\\xff\\x93\\x60\\xff\\x99\\x47\\xff\\x9b\\x49\\xff\\\n\\x9a\\x50\\xff\\x9c\\x49\\xff\\x9a\\x64\\xff\\x9b\\x62\\xff\\xa0\\x4e\\xff\\xa1\\\n\\x4f\\xff\\x9d\\x67\\xff\\xa1\\x54\\xff\\xa2\\x50\\xff\\xa6\\x41\\xff\\xa4\\x4f\\\n\\xff\\xa0\\x66\\xff\\xa0\\x67\\xff\\xa1\\x68\\xff\\xa6\\x52\\xff\\xa7\\x52\\xff\\\n\\xa8\\x53\\xff\\xa4\\x6a\\xff\\xa9\\x54\\xff\\xa5\\x6b\\xff\\xaa\\x55\\xff\\xaa\\\n\\x57\\xff\\xab\\x55\\xff\\xac\\x55\\xff\\xac\\x56\\xff\\xac\\x58\\xff\\xaf\\x49\\\n\\xff\\xad\\x56\\xff\\xad\\x57\\xff\\xa9\\x6d\\xff\\xae\\x58\\xff\\xae\\x59\\xff\\\n\\xaf\\x58\\xff\\xab\\x6e\\xff\\xae\\x5e\\xff\\xb1\\x4e\\xff\\xaf\\x59\\xff\\xaf\\\n\\x5a\\xff\\xb0\\x5a\\xff\\xac\\x70\\xff\\xae\\x68\\xff\\xab\\x82\\xff\\xb1\\x64\\\n\\xff\\xaf\\x70\\xff\\xb2\\x63\\xff\\xb0\\x70\\xff\\xb2\\x67\\xff\\xb3\\x63\\xff\\\n\\xb4\\x73\\xff\\xb6\\x6d\\xff\\xb5\\x73\\xff\\xb1\\x8b\\xff\\xb6\\x77\\xff\\xb9\\\n\\x6a\\xff\\xb7\\x76\\xff\\xb6\\x7c\\xff\\xb9\\x6d\\xff\\xb9\\x76\\xff\\xbb\\x6d\\\n\\xff\\xba\\x74\\xff\\xb8\\x81\\xff\\xba\\x77\\xff\\xb9\\x86\\xff\\xbd\\x74\\xff\\\n\\xb8\\x92\\xff\\xbb\\x84\\xff\\xbe\\x79\\xff\\xbc\\x84\\xff\\xbd\\x84\\xff\\xbf\\\n\\x7a\\xff\\xc0\\x79\\xff\\xc1\\x7d\\xff\\xc1\\x7e\\xff\\xc0\\x84\\xff\\xc0\\x85\\\n\\xff\\xc2\\x7d\\xff\\xc2\\x82\\xff\\xc3\\x7e\\xff\\xc3\\x80\\xff\\xc5\\x7e\\xff\\\n\\xc5\\x7f\\xff\\xc5\\x81\\xff\\xc6\\x81\\xff\\xc7\\x80\\xff\\xc8\\x82\\xff\\xc8\\\n\\x83\\xff\\xc8\\x84\\xff\\xc9\\x80\\xff\\xca\\x83\\xff\\xca\\x84\\xff\\xc8\\x90\\\n\\xff\\xca\\x86\\xff\\xc6\\x9c\\xff\\xc7\\x97\\xff\\xcb\\x83\\xff\\xcb\\x86\\xff\\\n\\xcc\\x86\\xff\\xcc\\x97\\xff\\xcc\\x99\\xff\\xcd\\x99\\xff\\xce\\xae\\xff\\xd0\\\n\\xa4\\xff\\xd1\\xae\\xff\\xd2\\xae\\xff\\xd4\\xaf\\xff\\xd5\\xaf\\xf4\\xf7\\xfb\\\n\\xb2\\xf0\\x45\\x6f\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\\n\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\\n\\x00\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0b\\x13\\x00\\x00\\x0b\\x13\\x01\\x00\\\n\\x9a\\x9c\\x18\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\xdd\\x0c\\x10\\x09\\\n\\x1b\\x17\\xd2\\xa9\\x6a\\x1d\\x00\\x00\\x00\\xc0\\x49\\x44\\x41\\x54\\x18\\xd3\\\n\\x63\\x60\\x90\\x90\\x96\\x96\\x96\\x95\\x93\\x93\\x53\\x00\\x02\\x59\\x41\\x06\\\n\\x06\\x09\\xf3\\xdc\\x92\\xca\\xea\\xba\\x86\\xa6\\xb6\\xce\\xde\\xbe\\x9e\\x40\\\n\\x7e\\x06\\xe9\\xdc\\x24\\xbf\\x19\\x10\\xe0\\x1c\\x94\\xd1\\x28\\xce\\x20\\x5d\\\n\\xe2\\x3c\\x03\\x06\\x9c\\x9d\\x6a\\xc4\\x18\\x24\\x4b\\x41\\x2c\\x67\\x10\\x02\\\n\\xd2\\xc5\\xc2\\x0c\\xd2\\xd5\\x20\\xbe\\x33\\x18\\xcf\\x70\\xce\\x16\\x64\\x90\\\n\\xad\\x45\\x16\\x48\\x00\\x1a\\x5a\\x3f\\x03\\x01\\x9c\\xa3\\x79\\x18\\x64\\x1b\\\n\\x90\\x55\\xf8\\x73\\x31\\xc8\\x35\\x23\\x0b\\x38\\x72\\x30\\xc8\\xb6\\x20\\xdb\\\n\\x62\\xcd\\xc6\\x20\\xdb\\x56\\x85\\x30\\x42\\xc6\\x84\\x85\\x41\\xb6\\x3d\\x0d\\\n\\xee\\x52\\x3f\\x19\\x03\\x26\\x06\\x89\\xd6\\xe4\\x98\\x14\\x67\\x67\\x65\\x4b\\\n\\x43\\x3f\\x79\\x75\\x15\\x6d\\x66\\x06\\x3e\\x8f\\xda\\xb2\\x82\\xf4\\xb8\\x48\\\n\\x6f\\x7b\\x2b\\x13\\x03\\x6d\\x51\\x56\\x06\\x06\\x1e\\x11\\x61\\x21\\x01\\x5e\\\n\\x6e\\x4e\\x76\\x56\\x16\\x46\\x66\\x56\\x06\\x00\\xfe\\x82\\x58\\x55\\x32\\x6e\\\n\\xe2\\xb0\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x84\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x8c\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x74\\xc7\\x68\\x74\\xc5\\x66\\xc2\\xaa\\x5f\\\n\\xce\\xa7\\x61\\xcf\\xa8\\x64\\xce\\xa6\\x62\\xcc\\xa1\\x5d\\xc8\\x9c\\x57\\x62\\\n\\xb2\\x59\\x60\\xaf\\x58\\x8b\\xce\\x81\\x90\\xcf\\x86\\x75\\xc1\\x64\\xbc\\xa6\\\n\\x5b\\x6e\\xc0\\x63\\xc7\\x9a\\x57\\xc7\\x97\\x57\\x66\\xb6\\x5c\\x62\\xb1\\x59\\\n\\x79\\xbb\\x71\\x77\\xb9\\x6f\\x5c\\xaa\\x54\\x7b\\xc3\\x66\\x8a\\xcd\\x80\\xa7\\\n\\xd6\\x9e\\x8c\\xcc\\x83\\x73\\xc2\\x69\\x6c\\xbe\\x62\\xc3\\x91\\x50\\x64\\xb3\\\n\\x5a\\x78\\xbb\\x70\\x94\\xc7\\x8d\\x7a\\xba\\x73\\x5a\\xa8\\x52\\xcd\\xa6\\x5e\\\n\\x89\\xba\\x63\\x87\\xca\\x7e\\x98\\xcd\\x8e\\x9f\\xd1\\x97\\x6b\\xbc\\x60\\x61\\\n\\xb1\\x59\\x93\\xc7\\x8c\\x85\\xbf\\x7d\\x79\\xb9\\x72\\x59\\xa7\\x52\\xce\\xa6\\\n\\x60\\x6d\\xbf\\x63\\xa0\\xd0\\x98\\x69\\xb9\\x5f\\x5f\\xae\\x57\\x92\\xc6\\x8c\\\n\\x8d\\xc3\\x87\\x5e\\xaa\\x57\\xcf\\xa7\\x62\\x6d\\xbf\\x62\\x6c\\xbd\\x61\\x6a\\\n\\xbb\\x60\\x68\\xb9\\x5e\\x67\\xb7\\x5d\\x5d\\xab\\x55\\x5b\\xa9\\x53\\x57\\xa4\\\n\\x50\\x55\\xa2\\x4e\\xcd\\xa5\\x61\\xbd\\x86\\x4c\\xc9\\x9f\\x5b\\xb8\\x7f\\x47\\\n\\xc6\\x99\\x56\\xc6\\x96\\x55\\xb9\\x81\\x49\\xb6\\x79\\x43\\xc4\\x95\\x55\\xc1\\\n\\x8f\\x4f\\xc3\\x92\\x55\\xd2\\xab\\x6f\\xbe\\x73\\x40\\x63\\xb3\\x5a\\x5d\\xac\\\n\\x55\\x5b\\xaa\\x54\\xc1\\x8c\\x52\\xd6\\xb4\\x79\\x51\\x9e\\x4b\\x50\\x9c\\x4a\\\n\\x4e\\x99\\x48\\x4c\\x97\\x47\\x4a\\x95\\x45\\x64\\xb0\\x5c\\x8a\\xc1\\x84\\x8b\\\n\\xc1\\x86\\xbc\\x84\\x4b\\xb7\\x7e\\x47\\xbb\\x81\\x4c\\xdb\\xbf\\x87\\x4f\\x9b\\\n\\x4a\\x7e\\xb6\\x79\\x79\\xb3\\x74\\x77\\xb8\\x71\\x7b\\xb8\\x74\\x86\\xbd\\x80\\\n\\xc1\\x8e\\x58\\x4d\\x99\\x48\\x77\\xb3\\x73\\x68\\xa9\\x63\\x5e\\xa1\\x5a\\x59\\\n\\x7c\\x3a\\x5f\\xad\\x56\\x89\\xbf\\x83\\x6e\\xb1\\x68\\x4b\\x96\\x46\\x4e\\x97\\\n\\x4a\\x62\\xa4\\x5f\\x75\\xb0\\x71\\x5b\\x9e\\x57\\x46\\x8b\\x3f\\x5c\\xab\\x54\\\n\\x6f\\xb3\\x69\\x6d\\xb1\\x67\\x56\\xa4\\x4f\\x52\\x9f\\x4c\\x49\\x94\\x45\\x9c\\\n\\x60\\x34\\x4c\\x8f\\x42\\x60\\xa1\\x5c\\x5a\\x9c\\x56\\x42\\x8c\\x3f\\x58\\xa6\\\n\\x51\\x56\\xa3\\x4f\\x8d\\x60\\x32\\x43\\x8c\\x3f\\x42\\x8b\\x3f\\xff\\xff\\xff\\\n\\xfc\\x93\\xfb\\x71\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\\n\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\\n\\x00\\xd2\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x60\\x64\\x62\\x66\\x61\\x65\\\n\\x63\\xe7\\x60\\x00\\x02\\x4e\\x2e\\x06\\x06\\x46\\x6e\\x1e\\x5e\\x3e\\x7e\\x06\\\n\\x06\\x01\\x41\\x21\\x06\\x61\\x11\\x51\\x31\\x06\\x71\\x09\\x49\\x29\\x69\\x19\\\n\\xa0\\xac\\xac\\x9c\\xb0\\xbc\\x82\\xa2\\x12\\x83\\xb2\\x8a\\xaa\\x9a\\xba\\x06\\\n\\x48\\xbd\\xa6\\x96\\xb6\\x8e\\x2e\\x03\\x83\\x1e\\x83\\xbe\\xba\\x81\\x21\\x48\\\n\\xc0\\xc8\\xd8\\xc4\\x14\\x48\\x99\\x99\\x5b\\x58\\x5a\\x59\\x83\\x04\\x6c\\x6c\\\n\\x75\\xed\\xec\\x19\\x18\\x1c\\x18\\xe0\\xc0\\x11\\x4c\\x3a\\x21\\x04\\x9c\\xc1\\\n\\xa4\\x8b\\x2b\\x8c\\xef\\xe6\\x0e\\xa1\\x3d\\x3c\\x21\\xb4\\x97\\xb7\\x0f\\x84\\\n\\xe1\\xab\\x69\\xe4\\xe7\\xcf\\xc0\\x10\\x10\\x18\\x14\\x1c\\x12\\x1a\\x06\\x12\\\n\\x09\\x8f\\x88\\xd4\\x8d\\x8a\\x8e\\x89\\x8d\\x8b\\x4f\\x00\\xf3\\x8d\\x12\\x93\\\n\\x92\\xed\\x80\\x74\\x4a\\x6a\\x5a\\x7a\\x46\\x26\\x03\\x43\\x56\\x62\\x76\\x0e\\\n\\xc8\\x7a\\x06\\x86\\xdc\\xbc\\xfc\\x82\\xc2\\x22\\x86\\xe2\\x92\\xd2\\x32\\x86\\\n\\x72\\x90\\x40\\x45\\x65\\x55\\x75\\x4d\\x2d\\x03\\x43\\x5d\\x3d\\xdc\\x21\\x0d\\\n\\x8d\\x4d\\x0c\\x00\\x41\\x33\\x23\\xd8\\x7d\\xa2\\x96\\xfb\\x00\\x00\\x00\\x1d\\\n\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\\n\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\\n\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\\n\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\\n\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\\n\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\\n\\x36\\x2d\\x30\\x38\\x54\\x31\\x30\\x3a\\x34\\x30\\x3a\\x33\\x31\\x2b\\x30\\x32\\\n\\x3a\\x30\\x30\\x64\\x9c\\xec\\x87\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\\n\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x06\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x8d\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x7b\\xa7\\xdc\\x66\\x8b\\xc0\\x7a\\xa4\\xdb\\\n\\xff\\xff\\xff\\x63\\x87\\xbd\\x79\\xa3\\xd9\\xf9\\xfb\\xfc\\xf8\\xfb\\xfc\\x33\\\n\\x34\\x36\\x60\\x85\\xba\\x79\\xa2\\xd8\\xfa\\xfd\\xfd\\xfa\\xfc\\xfc\\x5e\\x81\\\n\\xb7\\x76\\xa0\\xd5\\xfc\\xfd\\xfd\\x5c\\x7e\\xb5\\x75\\x9e\\xd4\\xfc\\xfe\\xfe\\\n\\xfb\\xfd\\xfd\\x5a\\x7c\\xb2\\x73\\x9c\\xd1\\x58\\x7a\\xb0\\x6f\\x97\\xcc\\xfc\\\n\\xff\\xff\\xfd\\xff\\xff\\x54\\x75\\xac\\x6e\\x94\\xca\\xfe\\xff\\xff\\xfa\\xfe\\\n\\xfe\\xf9\\xfc\\xfc\\x53\\x73\\xaa\\x6c\\x92\\xc8\\xfc\\xfc\\xfc\\x51\\x72\\xa9\\\n\\x51\\x71\\xa9\\x68\\x8e\\xc3\\x64\\x88\\xbe\\x61\\x85\\xbb\\x5f\\x83\\xb9\\x5c\\\n\\x7e\\xb4\\x58\\x7b\\xb1\\x57\\x79\\xae\\x56\\x76\\xad\\x54\\x75\\xab\\x53\\x73\\\n\\xa9\\x86\\xf7\\xcc\\x35\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\\n\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\\n\\x00\\x00\\x7c\\x49\\x44\\x41\\x54\\x18\\xd3\\x65\\x8f\\x57\\x0e\\x02\\x21\\x00\\\n\\x05\\xc7\\xf5\\x59\\xd6\\xba\\x8a\\x6b\\xef\\x62\\x2f\\xf7\\x3f\\x9e\\x02\\x11\\\n\\x57\\x9d\\x0f\\x92\\x99\\xbc\\x04\\x80\\x5f\\x4a\\x5f\\x24\\x50\\x56\\x91\\x0a\\\n\\x54\\x55\\xab\\x2b\\x75\\xb8\\xd0\\x80\\xa6\\x5a\\x6d\\x2f\\xfe\\xe8\\x40\\x57\\\n\\x59\\x58\\xfb\\xd0\\x0b\\x8b\\xe8\\x85\\x45\\x70\\xb7\\xe8\\xcb\\x0c\\xb2\\xb7\\\n\\x2b\\x87\\xa1\\x8c\\x89\\xae\\x51\\x08\\xd1\\x5d\\x18\\x6b\\x32\\xfd\\x5c\\x3b\\\n\\x83\\xb9\\xb4\\x48\\x03\\xcb\\x95\\xd6\\xb0\\x79\\xf5\\x6d\\x7c\\xfa\\x0e\\xec\\\n\\x3e\\x39\\x1c\\x4f\\xe7\\xfc\\x72\\xbd\\xdd\\x1f\\xd6\\xfe\\x7d\\x9e\\x27\\x27\\\n\\xa9\\x08\\x40\\x2f\\x70\\xd0\\xab\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\\n\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\\n\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x34\\x39\\x3a\\x32\\x33\\x2b\\x30\\\n\\x31\\x3a\\x30\\x30\\x5c\\xfd\\xdf\\x17\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\\n\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x34\\x39\\x3a\\x32\\x33\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\x2d\\xa0\\x67\\xab\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\\n\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xb4\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x06\\x00\\x00\\x00\\x1f\\xf3\\xff\\x61\\\n\\x00\\x00\\x00\\x01\\x73\\x52\\x47\\x42\\x00\\xae\\xce\\x1c\\xe9\\x00\\x00\\x00\\\n\\x06\\x62\\x4b\\x47\\x44\\x00\\xff\\x00\\xff\\x00\\xff\\xa0\\xbd\\xa7\\x93\\x00\\\n\\x00\\x00\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0b\\x13\\x00\\x00\\x0b\\x13\\x01\\\n\\x00\\x9a\\x9c\\x18\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\xdf\\x01\\x16\\\n\\x10\\x13\\x05\\x6a\\x0d\\x33\\xc4\\x00\\x00\\x02\\x34\\x49\\x44\\x41\\x54\\x38\\\n\\xcb\\xbd\\x93\\xbd\\x4b\\x5b\\x61\\x14\\xc6\\x7f\\x37\\x5c\\x9a\\x41\\x9c\\x3a\\\n\\x88\\x29\\x56\\x70\\xe8\\x85\\x42\\x2a\\x04\\xa4\\xa5\\x69\\x1b\\x5a\\x74\\xa8\\\n\\x38\\x48\\x16\\x3b\\x39\\xb7\\xb8\\x64\\xe8\\xa6\\x53\\x88\\xa0\\xa0\\x60\\x87\\\n\\xd0\\xc9\\xf6\\x2f\\xd0\\x29\\xc5\\x41\\x82\\xd1\\xa5\\x2d\\xc5\\xdb\\xda\\xa1\\\n\\x1f\\x89\\xd5\\x7e\\x98\\x5c\\xd4\\x41\\x63\\x72\\x6f\\xee\\xbd\\xef\\x7b\\xf3\\\n\\x76\\x4a\\xda\\x8a\\x50\\xa1\\xd0\\xb3\\x9d\\x0f\\x9e\\xf3\\x9c\\xe7\\x9c\\x03\\\n\\xff\\x68\\xda\\xe9\\xc0\\xf4\\xf4\\xb4\\xea\\xee\\xee\\x66\\x67\\x67\\x87\\x4c\\\n\\x26\\xa3\\x01\\x4c\\x4d\\x4d\\xa9\\xbe\\xbe\\x3e\\x2c\\xcb\\x62\\x72\\x72\\x52\\\n\\x3b\\x13\\x60\\x64\\x64\\x44\\x0d\\x0d\\x0d\\x31\\x36\\x36\\x86\\x6d\\xdb\\xec\\\n\\xed\\xed\\x51\\x28\\x14\\xf0\\x7d\\x9f\\xf1\\xf1\\x71\\x74\\x5d\\xc7\\xb2\\x2c\\\n\\x36\\x37\\x37\\x59\\x5d\\x5d\\x25\\x97\\xcb\\x69\\x00\\x7a\\x0b\\xc0\\x30\\x0c\\\n\\x06\\x07\\x07\\x49\\xa5\\x52\\xd4\\x6a\\x35\\x22\\x91\\x08\\xd1\\x68\\x14\\xcb\\\n\\xb2\\x98\\x9b\\x9b\\xa3\\x52\\xa9\\xd0\\xd9\\xd9\\xc9\\xe8\\xe8\\x28\\x86\\x61\\\n\\x90\\xcb\\xe5\\x7e\\xd1\\x88\\xc5\\x62\\x2a\\x9d\\x4e\\xab\\x96\\x9f\\x48\\x24\\\n\\x54\\x3e\\x9f\\x57\\xa6\\x69\\xaa\\x8d\\x8d\\x0d\\xb5\\xb4\\xb4\\xa4\\x12\\x89\\\n\\x44\\x3b\\x9f\\x4e\\xa7\\x55\\x2c\\x16\\x53\\x6d\\x06\\xa6\\x69\\x6a\\x03\\x03\\\n\\x03\\x0a\\x20\\x99\\x4c\\xaa\\xa3\\xa3\\x23\\x66\\x67\\x67\\xe9\\xe8\\xe8\\x00\\\n\\xc0\\xb6\\x6d\\x42\\xa1\\x10\\xc9\\x64\\x52\\x2d\\x2f\\x2f\\x6b\\xe5\\x72\\x19\\\n\\xd3\\x34\\xff\\x1c\\xa1\\x52\\xa9\\x30\\x3f\\x3f\\xaf\\x7a\\x7a\\x7a\\xd0\\x75\\\n\\x9d\\xfd\\xfd\\x7d\\x8a\\xc5\\x22\\xe1\\x70\\x98\\xde\\xde\\x5e\\xba\\xba\\xba\\\n\\x90\\x52\\x12\\x8f\\xc7\\x55\\xa1\\x50\\x38\\x7b\\x0b\\xc3\\xc3\\xc3\\x2a\\x12\\\n\\x89\\x70\\x7c\\xe5\\x00\\x7b\\x5d\\xb0\\xf2\\x62\\x45\\x03\\x98\\x98\\x98\\x50\\\n\\x00\\xd9\\x6c\\x56\\x3b\\xd7\\x6e\\xef\\x3f\\xb9\\xdb\\xb8\\x37\\x13\\x2f\\x9d\\\n\\xfb\\x0e\\x1e\\xbf\\x7c\\xa8\\x00\\x02\\x19\\x20\\x85\\xc4\\x2e\\x7b\\xf8\\xbe\\\n\\xe0\\x73\\xa9\\xf8\\xfe\\xcd\\xcc\\x56\\x7f\\xab\\x38\\x5b\\xa8\\x2b\\xc7\\x97\\\n\\xd4\\x5d\\x9f\\xaa\\xe3\\xb2\\xf0\\xe0\\xb2\\xd6\\xd6\\xe0\\xe6\\xc5\\xdb\\x04\\\n\\xcd\\x00\\xd9\\x94\\x7c\\x0d\\xff\\x40\\x04\\x92\\x7a\\xdd\\xbe\\x56\\x7f\\xe4\\\n\\xbc\\xfe\\xf8\\xb4\\x74\\x1d\\xc0\\xf1\\x24\\x77\\x2e\\x81\\xe7\\xe9\\x3c\\x7b\\\n\\xeb\\xd0\\x16\\x31\\x90\\x01\\x22\\x10\\xc8\\xa6\\x44\\x36\\x25\\x9e\\xf4\\x90\\\n\\x81\\xc4\\x17\\x02\\xe1\\x4b\\xd1\\x6a\\x72\\xd2\\xf0\\x68\\x34\\x74\\x5c\\x37\\\n\\xa0\\x5a\\xfd\\x0d\\x40\\x0a\\xc9\\xda\\xb7\\x3c\\xbe\\x27\\xf0\\x5d\\x41\\xc8\\\n\\xbd\\xc0\\xe1\\xc1\\x21\\xa5\\x4f\\x5f\\xde\\x6d\\x2f\\xee\\xde\\x6a\\x01\\x1c\\\n\\xd7\\x5d\\x9e\\x9b\\x0e\\xd5\\x9a\\xc3\\xc9\\x49\\xe3\\xec\\x5f\\xe8\\x4f\\x5d\\\n\\xbd\\xe1\\x7b\\x62\\x4d\\xf8\\xf2\\xfb\\xf6\\xe2\\xae\\xf1\\x37\\x11\\x43\\xa7\\\n\\x03\\x5b\\x0b\\x1f\\x5e\\x09\\x5f\\xae\\x4b\\x21\\xa3\\xfc\\x0f\\xfb\\x09\\x63\\\n\\x99\\x1f\\x19\\x59\\x1f\\x65\\x06\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\\n\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xb4\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x06\\x00\\x00\\x00\\x1f\\xf3\\xff\\x61\\\n\\x00\\x00\\x00\\x01\\x73\\x52\\x47\\x42\\x00\\xae\\xce\\x1c\\xe9\\x00\\x00\\x00\\\n\\x06\\x62\\x4b\\x47\\x44\\x00\\xff\\x00\\xff\\x00\\xff\\xa0\\xbd\\xa7\\x93\\x00\\\n\\x00\\x00\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0b\\x13\\x00\\x00\\x0b\\x13\\x01\\\n\\x00\\x9a\\x9c\\x18\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\xdf\\x01\\x16\\\n\\x10\\x13\\x05\\x6a\\x0d\\x33\\xc4\\x00\\x00\\x02\\x34\\x49\\x44\\x41\\x54\\x38\\\n\\xcb\\xbd\\x93\\xbd\\x4b\\x5b\\x61\\x14\\xc6\\x7f\\x37\\x5c\\x9a\\x41\\x9c\\x3a\\\n\\x88\\x29\\x56\\x70\\xe8\\x85\\x42\\x2a\\x04\\xa4\\xa5\\x69\\x1b\\x5a\\x74\\xa8\\\n\\x38\\x48\\x16\\x3b\\x39\\xb7\\xb8\\x64\\xe8\\xa6\\x53\\x88\\xa0\\xa0\\x60\\x87\\\n\\xd0\\xc9\\xf6\\x2f\\xd0\\x29\\xc5\\x41\\x82\\xd1\\xa5\\x2d\\xc5\\xdb\\xda\\xa1\\\n\\x1f\\x89\\xd5\\x7e\\x98\\x5c\\xd4\\x41\\x63\\x72\\x6f\\xee\\xbd\\xef\\x7b\\xf3\\\n\\x76\\x4a\\xda\\x8a\\x50\\xa1\\xd0\\xb3\\x9d\\x0f\\x9e\\xf3\\x9c\\xe7\\x9c\\x03\\\n\\xff\\x68\\xda\\xe9\\xc0\\xf4\\xf4\\xb4\\xea\\xee\\xee\\x66\\x67\\x67\\x87\\x4c\\\n\\x26\\xa3\\x01\\x4c\\x4d\\x4d\\xa9\\xbe\\xbe\\x3e\\x2c\\xcb\\x62\\x72\\x72\\x52\\\n\\x3b\\x13\\x60\\x64\\x64\\x44\\x0d\\x0d\\x0d\\x31\\x36\\x36\\x86\\x6d\\xdb\\xec\\\n\\xed\\xed\\x51\\x28\\x14\\xf0\\x7d\\x9f\\xf1\\xf1\\x71\\x74\\x5d\\xc7\\xb2\\x2c\\\n\\x36\\x37\\x37\\x59\\x5d\\x5d\\x25\\x97\\xcb\\x69\\x00\\x7a\\x0b\\xc0\\x30\\x0c\\\n\\x06\\x07\\x07\\x49\\xa5\\x52\\xd4\\x6a\\x35\\x22\\x91\\x08\\xd1\\x68\\x14\\xcb\\\n\\xb2\\x98\\x9b\\x9b\\xa3\\x52\\xa9\\xd0\\xd9\\xd9\\xc9\\xe8\\xe8\\x28\\x86\\x61\\\n\\x90\\xcb\\xe5\\x7e\\xd1\\x88\\xc5\\x62\\x2a\\x9d\\x4e\\xab\\x96\\x9f\\x48\\x24\\\n\\x54\\x3e\\x9f\\x57\\xa6\\x69\\xaa\\x8d\\x8d\\x0d\\xb5\\xb4\\xb4\\xa4\\x12\\x89\\\n\\x44\\x3b\\x9f\\x4e\\xa7\\x55\\x2c\\x16\\x53\\x6d\\x06\\xa6\\x69\\x6a\\x03\\x03\\\n\\x03\\x0a\\x20\\x99\\x4c\\xaa\\xa3\\xa3\\x23\\x66\\x67\\x67\\xe9\\xe8\\xe8\\x00\\\n\\xc0\\xb6\\x6d\\x42\\xa1\\x10\\xc9\\x64\\x52\\x2d\\x2f\\x2f\\x6b\\xe5\\x72\\x19\\\n\\xd3\\x34\\xff\\x1c\\xa1\\x52\\xa9\\x30\\x3f\\x3f\\xaf\\x7a\\x7a\\x7a\\xd0\\x75\\\n\\x9d\\xfd\\xfd\\x7d\\x8a\\xc5\\x22\\xe1\\x70\\x98\\xde\\xde\\x5e\\xba\\xba\\xba\\\n\\x90\\x52\\x12\\x8f\\xc7\\x55\\xa1\\x50\\x38\\x7b\\x0b\\xc3\\xc3\\xc3\\x2a\\x12\\\n\\x89\\x70\\x7c\\xe5\\x00\\x7b\\x5d\\xb0\\xf2\\x62\\x45\\x03\\x98\\x98\\x98\\x50\\\n\\x00\\xd9\\x6c\\x56\\x3b\\xd7\\x6e\\xef\\x3f\\xb9\\xdb\\xb8\\x37\\x13\\x2f\\x9d\\\n\\xfb\\x0e\\x1e\\xbf\\x7c\\xa8\\x00\\x02\\x19\\x20\\x85\\xc4\\x2e\\x7b\\xf8\\xbe\\\n\\xe0\\x73\\xa9\\xf8\\xfe\\xcd\\xcc\\x56\\x7f\\xab\\x38\\x5b\\xa8\\x2b\\xc7\\x97\\\n\\xd4\\x5d\\x9f\\xaa\\xe3\\xb2\\xf0\\xe0\\xb2\\xd6\\xd6\\xe0\\xe6\\xc5\\xdb\\x04\\\n\\xcd\\x00\\xd9\\x94\\x7c\\x0d\\xff\\x40\\x04\\x92\\x7a\\xdd\\xbe\\x56\\x7f\\xe4\\\n\\xbc\\xfe\\xf8\\xb4\\x74\\x1d\\xc0\\xf1\\x24\\x77\\x2e\\x81\\xe7\\xe9\\x3c\\x7b\\\n\\xeb\\xd0\\x16\\x31\\x90\\x01\\x22\\x10\\xc8\\xa6\\x44\\x36\\x25\\x9e\\xf4\\x90\\\n\\x81\\xc4\\x17\\x02\\xe1\\x4b\\xd1\\x6a\\x72\\xd2\\xf0\\x68\\x34\\x74\\x5c\\x37\\\n\\xa0\\x5a\\xfd\\x0d\\x40\\x0a\\xc9\\xda\\xb7\\x3c\\xbe\\x27\\xf0\\x5d\\x41\\xc8\\\n\\xbd\\xc0\\xe1\\xc1\\x21\\xa5\\x4f\\x5f\\xde\\x6d\\x2f\\xee\\xde\\x6a\\x01\\x1c\\\n\\xd7\\x5d\\x9e\\x9b\\x0e\\xd5\\x9a\\xc3\\xc9\\x49\\xe3\\xec\\x5f\\xe8\\x4f\\x5d\\\n\\xbd\\xe1\\x7b\\x62\\x4d\\xf8\\xf2\\xfb\\xf6\\xe2\\xae\\xf1\\x37\\x11\\x43\\xa7\\\n\\x03\\x5b\\x0b\\x1f\\x5e\\x09\\x5f\\xae\\x4b\\x21\\xa3\\xfc\\x0f\\xfb\\x09\\x63\\\n\\x99\\x1f\\x19\\x59\\x1f\\x65\\x06\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\\n\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x00\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x3b\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x85\\x85\\x85\\x9e\\x9e\\x9e\\x7c\\x7c\\x7c\\\n\\x4c\\x4c\\x4c\\x91\\x91\\x91\\xe8\\xe8\\xe8\\xdd\\xdd\\xdd\\xc1\\xc1\\xc1\\x81\\\n\\x81\\x81\\x7b\\x7b\\x7b\\xd9\\xd9\\xd9\\xc4\\xc4\\xc4\\x73\\x73\\x73\\xd5\\xd5\\\n\\xd5\\x58\\x58\\x58\\x4b\\x4b\\x4b\\x65\\x65\\x65\\x92\\x92\\x92\\x79\\x79\\x79\\\n\\x8e\\x83\\x63\\xbf\\xa5\\x58\\x68\\x64\\x58\\xa8\\xa8\\xa8\\x32\\x32\\x32\\x82\\\n\\x82\\x82\\x3f\\x3f\\x3f\\xbd\\xbd\\xbd\\xce\\xce\\xce\\xc3\\xc2\\xbc\\xd5\\xb8\\\n\\x67\\xed\\xdb\\xab\\xd6\\xb2\\x56\\x67\\x67\\x67\\x52\\x52\\x52\\x41\\x41\\x41\\\n\\x46\\x46\\x46\\x51\\x51\\x51\\x95\\x83\\x53\\xeb\\xd7\\xa4\\xfb\\xf4\\xdc\\xd1\\\n\\xab\\x51\\xad\\x9e\\x7c\\x4d\\x4d\\x4d\\x8d\\x8d\\x8d\\xaa\\xaa\\xaa\\xae\\xae\\\n\\xae\\x97\\x97\\x97\\x82\\x7c\\x6c\\xd0\\xab\\x54\\xf8\\xeb\\xb4\\xf8\\xe6\\x8e\\\n\\xee\\xdd\\xb5\\xbf\\x9f\\x5c\\x50\\x4f\\x4d\\x4a\\x4a\\x4a\\x64\\x64\\x64\\x6b\\\n\\x6b\\x6b\\x6c\\x6c\\x6b\\xbf\\x9c\\x4f\\xec\\xd9\\xac\\xf8\\xe3\\x82\\xc2\\x88\\\n\\x33\\xfa\\xed\\xac\\xce\\x9e\\x43\\xdf\\xbd\\x7b\\xf9\\xea\\xa2\\xf6\\xdc\\x61\\\n\\xc2\\x87\\x31\\xf7\\xe1\\x77\\xf0\\xde\\xb6\\xca\\x94\\x3a\\xcf\\x9e\\x43\\xef\\\n\\xdb\\xab\\xf7\\xe0\\x74\\xf5\\xda\\x58\\xf5\\xdb\\x5d\\xf8\\xe6\\x90\\xe1\\xc1\\\n\\x92\\xe1\\xc2\\x8e\\xf9\\xe8\\x97\\xf5\\xdb\\x5b\\xc2\\x88\\x32\\xf6\\xde\\x6a\\\n\\xf6\\xe7\\xb1\\xc2\\x83\\x2d\\xc9\\x91\\x38\\xf6\\xec\\xdd\\xf9\\xee\\xbd\\xf8\\\n\\xea\\xac\\xf8\\xea\\xab\\xf8\\xea\\xad\\xfb\\xf3\\xd4\\xe4\\xc8\\xa4\\xbe\\x7b\\\n\\x26\\xc5\\x8a\\x32\\xc4\\x87\\x30\\xc3\\x85\\x2f\\xc1\\x81\\x2b\\xc0\\x7f\\x29\\\n\\xbf\\x7d\\x28\\xbd\\x79\\x25\\xbd\\x77\\x23\\xbc\\x76\\x22\\xff\\xff\\xff\\x9c\\\n\\xf8\\x7a\\xfe\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\\n\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\\n\\x9f\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xa0\\x12\\x60\\x64\\x62\\x66\\x60\\\n\\x60\\x66\\x62\\x84\\x72\\x59\\x58\\xd9\\xd8\\x39\\x38\\xb9\\xb8\\xd9\\x79\\x58\\\n\\x59\\xc0\\x02\\xbc\\x7c\\xfc\\x02\\x82\\x42\\xc2\\x22\\xa2\\x62\\xe2\\xbc\\x20\\\n\\xbe\\x84\\x24\\x03\\x83\\x94\\xb4\\x8c\\xac\\x9c\\xbc\\x02\\x83\\xa4\\x04\\x48\\\n\\x44\\x91\\x41\\x49\\x59\\x45\\x55\\x4d\\x5d\\x43\\x53\\x4b\\x11\\xac\\x45\\x5b\\\n\\x47\\x57\\x4f\\xdf\\xc0\\xd0\\xc8\\xd8\\xc4\\xd4\\x0c\\x62\\xaa\\xb9\\x85\\xa5\\\n\\x95\\xb5\\x8d\\xad\\x9d\\xbd\\x03\\x92\\xcd\\x8e\\x4e\\xce\\x2e\\xae\\x6e\\xee\\\n\\x70\\xbe\\x87\\xa7\\x97\\xb7\\xb7\\x8f\\xaf\\x1f\\x5c\\xc0\\x3f\\xc0\\x39\\x30\\\n\\x28\\x30\\x38\\x24\\x14\\xca\\x0f\\x0b\\x8f\\x88\\x8c\\x8a\\x8a\\x8a\\x8e\\x89\\\n\\x8d\\x83\\x08\\xc4\\x27\\x24\\x86\\x26\\x25\\xa7\\xc4\\xa5\\xa6\\xa5\\x03\\x00\\\n\\x05\\xf8\\x17\\xa8\\xa3\\x12\\xcc\\x4c\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\\n\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\\n\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\\n\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\\n\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\\n\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\\n\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\\n\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\\n\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xe9\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x2c\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xec\\xce\\x40\\xeb\\xcc\\x3f\\xea\\xcb\\x3e\\\n\\xe9\\xc9\\x3c\\xe9\\xc7\\x3b\\xe8\\xc4\\x3a\\xe7\\xc2\\x38\\xe6\\xc0\\x36\\xe5\\\n\\xbd\\x35\\xe4\\xbb\\x33\\xe3\\xb8\\x31\\xfa\\xed\\x9a\\xf9\\xeb\\x99\\xf9\\xe8\\\n\\x97\\xf8\\xe5\\x94\\xf7\\xe2\\x91\\xf6\\xdf\\x8e\\xf5\\xdb\\x8b\\xeb\\xc7\\x56\\\n\\xf1\\xd9\\x64\\xfa\\xeb\\x9a\\xf4\\xd8\\x48\\xf3\\xd3\\x44\\xf1\\xce\\x3f\\xf0\\\n\\xc8\\x3a\\xf5\\xdc\\x8c\\xed\\xcb\\x62\\xea\\xca\\x3d\\xf9\\xe9\\x93\\xf7\\xe1\\\n\\x72\\xf3\\xd4\\x45\\xf2\\xce\\x41\\xf0\\xc9\\x3c\\xf5\\xdc\\x8a\\xef\\xd0\\x70\\\n\\xe4\\xbb\\x3d\\xef\\xd4\\x5b\\xf9\\xea\\x99\\xf4\\xd6\\x47\\xf2\\xd0\\x42\\xf0\\\n\\xcb\\x3d\\xf3\\xd5\\x6e\\xf3\\xd7\\x7f\\xe7\\xc0\\x4a\\xf5\\xe1\\x80\\xf8\\xe6\\\n\\x8e\\xf3\\xd2\\x43\\xf1\\xcd\\x3f\\xef\\xc7\\x39\\xea\\xc6\\x58\\xec\\xcd\\x4f\\\n\\xf9\\xe9\\x98\\xf3\\xd5\\x4a\\xf1\\xcf\\x45\\xf0\\xca\\x40\\xee\\xc2\\x38\\xf4\\\n\\xd9\\x89\\xe1\\xb4\\x2e\\xe0\\xb1\\x2c\\xdf\\xae\\x2b\\xde\\xac\\x29\\xdc\\xa9\\\n\\x27\\xdb\\xa6\\x25\\xda\\xa3\\x23\\xf2\\xda\\x75\\xf8\\xe6\\x93\\xf7\\xe3\\x91\\\n\\xf6\\xe0\\x8d\\xf5\\xdb\\x8a\\xf4\\xd7\\x88\\xf2\\xd3\\x84\\xf1\\xcf\\x7f\\xf0\\\n\\xcc\\x7c\\xef\\xc9\\x7a\\xe3\\xb4\\x48\\xe2\\xb6\\x2f\\xf3\\xd7\\x86\\xeb\\xb6\\\n\\x2f\\xec\\xbc\\x4a\\xf1\\xce\\x80\\xe6\\xb9\\x51\\xdd\\xa8\\x2c\\xda\\xa2\\x23\\\n\\xe0\\xb2\\x2d\\xee\\xcc\\x70\\xf2\\xd2\\x83\\xf1\\xce\\x7e\\xe4\\xb6\\x4a\\xdb\\\n\\xa5\\x24\\xdf\\xaf\\x2b\\xe7\\xbd\\x55\\xde\\xaa\\x2e\\xdb\\xa4\\x24\\xe7\\xbc\\\n\\x4f\\xe6\\xba\\x4c\\xdc\\xa7\\x26\\xdf\\xae\\x2d\\xde\\xab\\x2b\\xff\\xff\\xff\\\n\\x1c\\x6c\\x9c\\x30\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\\n\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\\n\\x00\\x97\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x02\\x18\\x99\\x98\\x59\\\n\\x58\\xd9\\xd8\\x39\\x38\\xb9\\xb8\\x21\\x02\\x4c\\x3c\\xbc\\x7c\\xfc\\x02\\x82\\\n\\x42\\xc2\\x30\\xbe\\x88\\xa8\\x98\\xb8\\x84\\xa4\\x94\\x34\\x94\\xcf\\x20\\x23\\\n\\x2b\\x27\\xaf\\xa0\\xa8\\xa4\\xac\\x02\\x33\\x42\\x55\\x4d\\x5d\\x43\\x53\\x4b\\\n\\x5b\\x07\\xc6\\x67\\xd5\\xd5\\xd3\\x37\\x30\\x94\\x32\\x82\\xdb\\x61\\x6c\\x62\\\n\\x6a\\x66\\x6e\\x61\\x69\\x65\\x6d\\x63\\x6b\\x67\\xef\\xc0\\xc0\\xc0\\xe6\\xe8\\\n\\xe4\\xec\\xa2\\xe4\\xea\\xe6\\xee\\xe1\\xe9\\xe5\\x0d\\xe4\\x33\\x80\\xad\\xf7\\\n\\xf1\\xf5\\xf3\\x0f\\x08\\x0c\\x0a\\x86\\x6b\\x0b\\x09\\x0d\\x0b\\x8f\\x88\\x44\\\n\\x72\\x6b\\x94\\x7b\\x74\\x4c\\x2c\\x32\\x3f\\x2e\\x3e\\x01\\xc5\\x33\\x89\\x49\\\n\\xf6\\x28\\x7c\\x5b\\x3b\\x06\\x3c\\x00\\x00\\x63\\x84\\x15\\x1d\\x1d\\xd9\\x34\\\n\\xda\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\\n\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\\n\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\\n\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\\n\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x3f\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x3b\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xc7\\xc7\\xc7\\xc4\\xc4\\xc4\\xe5\\xe5\\xe5\\\n\\xe4\\xe4\\xe4\\xac\\xac\\xac\\xd1\\xd1\\xd1\\xce\\xce\\xce\\xca\\xca\\xca\\xc2\\\n\\xc2\\xc2\\xde\\xde\\xde\\xdd\\xdd\\xdd\\xb2\\xb2\\xb2\\xa7\\xa7\\xa7\\xa3\\xa3\\\n\\xa3\\xdc\\xdc\\xdc\\xed\\xed\\xed\\xdb\\xdb\\xdb\\xbe\\xbe\\xbe\\xd6\\xd6\\xd6\\\n\\xd4\\xd4\\xd4\\xb0\\xb0\\xb0\\xcb\\xcb\\xcb\\xe7\\xe7\\xe7\\xb7\\xb7\\xb7\\xd9\\\n\\xd9\\xd9\\xd2\\xd2\\xd2\\xc8\\xc8\\xc8\\x79\\x79\\x79\\xc5\\xc5\\xc5\\xcc\\xcc\\\n\\xcc\\xc9\\xc9\\xc9\\xba\\xba\\xba\\x9c\\x9c\\x9c\\xa1\\xa1\\xa1\\xc6\\xc6\\xc6\\\n\\xc1\\xc1\\xc1\\x89\\x89\\x89\\xc0\\xc0\\xc0\\xd8\\xd8\\xd8\\xcd\\xcd\\xcd\\xbc\\\n\\xbc\\xbc\\x82\\x82\\x82\\x8f\\x8f\\x8f\\xc3\\xc3\\xc3\\x8c\\x8c\\x8c\\x87\\x87\\\n\\x87\\x83\\x83\\x83\\xe9\\xe9\\xe9\\xa5\\xa5\\xa5\\x6b\\x6b\\x6b\\xbf\\xbf\\xbf\\\n\\xe2\\xe2\\xe2\\xb1\\xb1\\xb1\\xa8\\xa8\\xa8\\x61\\x61\\x61\\xa0\\xa0\\xa0\\xcf\\\n\\xcf\\xcf\\x9e\\x9e\\x9e\\xc2\\x90\\x74\\xc0\\x5a\\x22\\xbc\\x42\\x05\\xb0\\x48\\\n\\x0d\\x89\\x4e\\x2d\\x53\\x53\\x53\\xaa\\xaa\\xaa\\xc2\\x90\\x75\\xd1\\x75\\x3b\\\n\\xf7\\xb5\\x8d\\xfe\\xd6\\xb8\\xf5\\xa8\\x72\\xcb\\x6b\\x2d\\xa6\\xa6\\xa6\\xd5\\\n\\xd5\\xd5\\xbc\\x56\\x1e\\xf6\\xb5\\x8d\\xff\\x92\\x4d\\xff\\x77\\x11\\xff\\x86\\\n\\x21\\xeb\\x8a\\x40\\xb9\\x44\\x03\\x85\\x85\\x85\\xbc\\x42\\x04\\xfe\\xcd\\xae\\\n\\xff\\xff\\xff\\xef\\x7f\\x18\\x81\\x81\\x81\\x6f\\x6f\\x6f\\x64\\x64\\x64\\xb0\\\n\\x48\\x0c\\xf4\\x9d\\x63\\xff\\x7f\\x18\\xf8\\x76\\x00\\xee\\x76\\x00\\xe1\\x68\\\n\\x03\\xb9\\x45\\x03\\xbd\\xbd\\xbd\\x91\\x59\\x39\\xc9\\x64\\x25\\xe6\\x77\\x21\\\n\\xea\\x79\\x05\\xdd\\x64\\x01\\xbd\\x4d\\x04\\x58\\x58\\x58\\x51\\x51\\x51\\x6a\\\n\\xb5\\x03\\x08\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\\n\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\\n\\xde\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x80\\x00\\x46\\x26\\x06\\x14\\xc0\\\n\\xc8\\xcc\\xc2\\x0a\\xe7\\xb0\\xb1\\x73\\x30\\x70\\x72\\x71\\xf3\\x30\\xb0\\xf2\\\n\\xf2\\x81\\x05\\xf8\\x05\\x04\\x39\\x85\\x84\\x45\\x44\\x59\\xc5\\xc4\\x25\\xc0\\\n\\x02\\x4c\\xfc\\x22\\x92\\x82\\xc2\\x22\\x92\\x52\\x62\\xd2\\x32\\x60\\x01\\x59\\\n\\x11\\x39\\x79\\x05\\x45\\x25\\x4e\\x65\\x15\\x09\\x55\\x20\\x57\\x9a\\x49\\x4d\\\n\\x5d\\x43\\x53\\x8b\\x81\\x41\\x5b\\x87\\x53\\x43\\x57\\x4f\\x9f\\x81\\xc9\\x40\\\n\\x58\\x9e\\xdd\\x10\\xa4\\x92\\x95\\x49\\x41\\x99\\xdb\\x88\\xc1\\xd8\\x44\\x4a\\\n\\x59\\xc3\\x14\\x24\\x60\\xc6\\x29\\xa1\\x26\\x65\\xce\\xc0\\xa7\\x6d\\x61\\xa9\\\n\\x2c\\x67\\x05\\xd4\\x62\\x6d\\x63\\x6b\\x67\\xef\\x00\\x52\\x2a\\xab\\x22\\xcb\\\n\\xe8\\xc8\\xeb\\xe4\\xec\\xe2\\xea\\xe6\\x0e\\x52\\xea\\xe1\\x29\\x2b\\xc6\\x26\\\n\\xcf\\xe8\\xe5\\xed\\xe3\\xeb\\xe7\\x1f\\x00\\x14\\xd0\\xe4\\xf2\\xd0\\x0f\\x64\\\n\\xe2\\x0c\\x0a\\x0e\\x09\\x09\\x09\\x0d\\x02\\x0a\\x84\\x85\\x47\\x30\\xe8\\x8b\\\n\\x31\\x46\\x46\\x45\\xc7\\xc4\\xc6\\xc5\\x43\\xfd\\x13\\x96\\xc0\\x93\\x98\\x94\\\n\\x9c\\x92\\x9a\\x06\\xf7\\x61\\x7a\\x06\\x03\\x43\\x7c\\x10\\x50\\x1e\\x00\\x13\\\n\\xd5\\x1c\\xa4\\x0d\\x15\\xb0\\xb0\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\\n\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\\n\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\\n\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\\n\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\\n\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\\n\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\\n\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\\n\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\\n\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x50\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xba\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xf4\\x45\\x48\\xf4\\x43\\x47\\xfc\\x99\\x97\\\n\\xf2\\x39\\x3e\\xf3\\x3d\\x42\\xf2\\x38\\x3d\\xf2\\x3c\\x41\\xf1\\x37\\x3c\\x44\\\n\\x7d\\xce\\xf1\\x36\\x3c\\xfb\\x6b\\x69\\xfb\\x67\\x65\\xfa\\x63\\x62\\x43\\x7c\\\n\\xcd\\x9c\\xb1\\xd0\\x70\\x9f\\xbd\\x5a\\x6b\\xad\\xe8\\x38\\x41\\x8d\\x52\\x7d\\\n\\x37\\x6b\\xb6\\x35\\x68\\xb2\\xfb\\x66\\x65\\xfe\\xb5\\xb2\\xf9\\x5d\\x5d\\x41\\\n\\x79\\xc9\\x3f\\x76\\xc5\\xe7\\x37\\x41\\xae\\x45\\x65\\x36\\x6b\\xb5\\x34\\x68\\\n\\xb1\\x8c\\xa1\\xc0\\x30\\x62\\xaa\\xf9\\x61\\x60\\xf9\\x5c\\x5c\\xf8\\x57\\x58\\\n\\xf7\\x52\\x54\\xf6\\x4d\\x4f\\xa8\\x5e\\x82\\x42\\x77\\xc6\\xf1\\x33\\x39\\xf0\\\n\\x2e\\x35\\x30\\x62\\xa9\\x8f\\x64\\x93\\xcc\\x4d\\x62\\xf0\\x3d\\x43\\xf0\\x32\\\n\\x38\\xef\\x2d\\x34\\x41\\x7a\\xca\\x3f\\x77\\xc6\\xf0\\x31\\x37\\xfe\\x96\\x94\\\n\\xee\\x27\\x2f\\x43\\x7c\\xcc\\xef\\x2b\\x32\\xee\\x26\\x2e\\xed\\x22\\x2b\\x42\\\n\\x7b\\xcc\\x93\\xac\\xd1\\x3e\\x76\\xc4\\x3e\\x75\\xc3\\xff\\xff\\xff\\x96\\xb6\\\n\\x6e\\x20\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x70\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x0f\\x18\\xd1\\xf8\\x4c\\xcc\\x2c\\\n\\xa8\\x02\\xac\\x6c\\xa8\\x7c\\x76\\x0e\\x24\\x0e\\x27\\x10\\x73\\x81\\x18\\xdc\\\n\\x3c\\xbc\\x20\\x8a\\x8f\\x5f\\x40\\x50\\x48\\x58\\x44\\x94\\x81\\x41\\x4c\\x5c\\\n\\x02\\x24\\x20\\x29\\xc5\\x20\\x2d\\x23\\x2b\\x27\\xaf\\xc0\\xa0\\xa8\\xa4\\xac\\\n\\xa2\\xaa\\xa6\\xce\\xc0\\xa0\\xa1\\x09\\x14\\xd7\\x82\\xe8\\xd7\\xd6\\xd1\\xe5\\\n\\xd0\\xd3\\x47\\x98\\x67\\x60\\xc8\\xc0\\x60\\x64\\x6c\\x02\\xe3\\x9a\\x4a\\x82\\\n\\x48\\x33\\x73\\x0b\\x28\\xdf\\xd2\\xca\\x1a\\xcd\\xb9\\x36\\x0c\\x24\\x02\\x00\\\n\\x40\\xff\\x07\\x48\\x0e\\x4d\\xd1\\xfc\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\\n\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\\n\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\\n\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\\n\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\\n\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\\n\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\\n\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\x2d\\x31\\x35\\\n\\x54\\x31\\x31\\x3a\\x30\\x37\\x3a\\x32\\x33\\x2b\\x30\\x32\\x3a\\x30\\x30\\x9d\\\n\\x80\\x43\\xfd\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x61\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x71\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xa2\\xc1\\xef\\x9f\\xc0\\xed\\x9d\\xbe\\xeb\\\n\\x9a\\xbc\\xeb\\x96\\xba\\xe9\\x93\\xb7\\xe7\\x90\\xb5\\xe6\\x8c\\xb2\\xe4\\x88\\\n\\xaf\\xe2\\x84\\xac\\xe0\\x80\\xa9\\xdd\\x7d\\xa5\\xdc\\x7a\\xa3\\xda\\xa1\\xc1\\\n\\xee\\xf4\\xf7\\xfb\\x74\\xa0\\xd7\\x9e\\xbf\\xec\\xa5\\xd5\\x9c\\xa1\\xd3\\x98\\\n\\x9d\\xd0\\x94\\x98\\xce\\x90\\x93\\xcb\\x8b\\x8e\\xc9\\x87\\x89\\xc6\\x82\\x84\\\n\\xc3\\x7e\\x80\\xc1\\x7a\\x7c\\xbe\\x76\\x6f\\x9b\\xd4\\x9b\\xbd\\xeb\\xff\\xff\\\n\\xff\\x6a\\x97\\xd1\\x98\\xba\\xe9\\xa6\\xc3\\xe9\\x64\\x93\\xce\\x94\\xb7\\xe7\\\n\\xa9\\xc4\\xe8\\xac\\xc7\\xe8\\xeb\\xf1\\xf7\\x5f\\x8f\\xcb\\x8f\\xb4\\xe5\\xf2\\\n\\xf6\\xfa\\xaa\\xc6\\xe9\\xac\\xc6\\xe9\\xac\\xc7\\xea\\xad\\xc7\\xe9\\xae\\xc9\\\n\\xe9\\xb0\\xc9\\xe9\\xb0\\xc8\\xe8\\xb5\\xcc\\xe8\\xde\\xe7\\xf2\\x59\\x8a\\xc8\\\n\\x8c\\xb1\\xe3\\xf1\\xf6\\xfa\\xae\\xc9\\xea\\xb0\\xc9\\xea\\xdb\\xe5\\xf1\\x55\\\n\\x86\\xc6\\x87\\xae\\xe1\\xf0\\xf4\\xfa\\xb2\\xcb\\xea\\xb3\\xcc\\xea\\xb7\\xce\\\n\\xea\\xb7\\x93\\x89\\xbe\\x5b\\x28\\xbc\\x43\\x05\\xbd\\x57\\x1e\\x84\\x67\\x69\\\n\\x82\\xaa\\xdf\\xef\\xf3\\xf9\\xbb\\xd0\\xeb\\xbf\\x97\\x8b\\xd2\\x76\\x3d\\xf7\\\n\\xb5\\x8d\\xfe\\xd6\\xb8\\xf5\\xa8\\x72\\xca\\x6b\\x2f\\x7e\\xa8\\xdd\\xba\\xd0\\\n\\xeb\\xbd\\xd1\\xeb\\xb8\\x56\\x22\\xf6\\xb5\\x8d\\xff\\x92\\x4d\\xff\\x77\\x11\\\n\\xff\\x86\\x21\\xeb\\x8a\\x40\\xb9\\x44\\x03\\x7a\\xa4\\xd9\\xee\\xf3\\xf9\\xbe\\\n\\xd2\\xeb\\xbf\\xd3\\xeb\\xfe\\xcd\\xae\\xef\\x7f\\x18\\xbc\\x42\\x04\\x75\\xa1\\\n\\xd7\\xed\\xf2\\xf8\\xea\\xf0\\xf7\\xe6\\xed\\xf6\\xe2\\xea\\xf4\\xde\\xe7\\xf3\\\n\\xdb\\xe4\\xf1\\xd8\\xe2\\xf0\\xbc\\x56\\x1d\\xf4\\x9d\\x63\\xff\\x7f\\x18\\xf8\\\n\\x76\\x00\\xee\\x76\\x00\\xe1\\x68\\x03\\xb9\\x45\\x03\\x72\\x9e\\xd6\\x6e\\x99\\\n\\xd3\\x68\\x96\\xd1\\x63\\x92\\xce\\x5e\\x8e\\xcb\\x5b\\x8a\\xc9\\x56\\x87\\xc7\\\n\\x52\\x84\\xc3\\x8b\\x6d\\x6e\\xc7\\x65\\x27\\xe6\\x77\\x21\\xea\\x79\\x05\\xdd\\\n\\x64\\x01\\xbc\\x4d\\x05\\x9d\\x21\\xdf\\xde\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\\n\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\\n\\x05\\x1d\\x48\\x00\\x00\\x00\\xca\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\\n\\x04\\x8c\\x4c\\xcc\\x2c\\xac\\x6c\\xec\\x1c\\x9c\\x5c\\xdc\\x3c\\xbc\\x40\\x3e\\\n\\x1f\\x3f\\x12\\x10\\x00\\x0a\\x08\\xf2\\x0b\\x09\\x8b\\x88\\x8a\\x89\\x4b\\x48\\\n\\x4a\\x49\\xf3\\xcb\\x00\\x05\\x64\\xf9\\xe5\\xe0\\x80\\x5f\\x1e\\x28\\xa0\\xc0\\\n\\xaf\\x08\\x07\\xfc\\x4a\\x40\\x01\\x65\\x7e\\x45\\x39\\x15\\xa0\\xac\\x2a\\x10\\\n\\xab\\xa9\\x03\\x05\\x34\\x34\\xb5\\xb4\\x75\\x74\\xf5\\xf4\\x55\\xf5\\x0d\\x0c\\\n\\x8d\\x8c\\x81\\x02\\x26\\xa6\\x66\\x72\\xe6\\x50\\x15\\x16\\x96\\x40\\x01\\x2b\\\n\\x6b\\x1b\\x5b\\x20\\xb0\\x53\\xb5\\x77\\x70\\x74\\x72\\x06\\x0a\\xb8\\xb8\\xda\\\n\\xc9\\xb9\\x01\\x65\\xdd\\x3d\\x3c\\xbd\\xbc\\x7d\\x80\\x02\\xbe\\xae\\x7e\\x6e\\\n\\x40\\xe0\\x1f\\x10\\x18\\x14\\x1c\\x12\\x1a\\xc6\\xc0\\x10\\x1e\\x11\\x29\\x17\\\n\\x05\\x54\\xe1\\x18\\x0d\\x24\\x62\\x62\\x19\\x18\\xe2\\xe2\\x13\\x12\\x93\\x92\\\n\\x53\\x52\\xd3\\xd2\\x33\\x32\\xb3\\xb2\\x73\\x18\\x18\\x72\\xf3\\xf2\\x0b\\x0a\\\n\\x8b\\x8a\\x4b\\x4a\\xcb\\xca\\x2b\\x2a\\xab\\x50\\xbc\\x9d\\x13\\x0b\\x94\\x07\\\n\\x00\\x58\\xb7\\x28\\x0a\\x4a\\x61\\xd8\\xca\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\\n\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\\n\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x02\\x18\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\xcf\\x50\\x4c\\x54\\x45\\x00\\x00\\x00\\xb1\\xb1\\xb1\\xb4\\xb4\\\n\\xb4\\xb5\\xb5\\xb5\\xb6\\xb6\\xb6\\xb7\\xb7\\xb7\\xb8\\xb8\\xb8\\xb9\\xb9\\xb9\\\n\\xbc\\xbc\\xbc\\xbd\\xbd\\xbd\\xc0\\xc0\\xc0\\xfc\\xb2\\x79\\xf5\\xb5\\x85\\xfa\\\n\\xb4\\x7d\\xc3\\xc3\\xc3\\xf4\\xcd\\x11\\xfb\\xb5\\x7f\\xfc\\xb6\\x7f\\xfd\\xb6\\\n\\x7f\\xfc\\xb7\\x81\\xfd\\xb7\\x81\\xfd\\xb8\\x82\\xc7\\xc7\\xc7\\xfd\\xb9\\x85\\\n\\xc8\\xc8\\xc8\\xf7\\xbd\\x8f\\xca\\xca\\xca\\xcb\\xcb\\xcb\\xfb\\xbe\\x8e\\xcd\\\n\\xcd\\xcd\\xce\\xce\\xce\\xd0\\xd0\\xd0\\xd1\\xd1\\xd1\\xd2\\xd2\\xd2\\xd3\\xd3\\\n\\xd3\\xd4\\xd4\\xd4\\xd5\\xd5\\xd5\\xd7\\xd7\\xd7\\xd8\\xd8\\xd8\\xd9\\xd9\\xd9\\\n\\xda\\xda\\xda\\xfb\\xd3\\xb4\\xdc\\xdc\\xdc\\xfb\\xd5\\xb7\\xfb\\xd5\\xb8\\xde\\\n\\xde\\xde\\xe0\\xe0\\xe0\\xe2\\xe2\\xe2\\xe4\\xe4\\xe4\\xe5\\xe5\\xe5\\xe7\\xe7\\\n\\xe7\\xfa\\xe3\\xd0\\xe8\\xe8\\xe8\\xfa\\xe4\\xd2\\xe9\\xe9\\xe9\\xfa\\xe5\\xd3\\\n\\xeb\\xeb\\xeb\\xfb\\xef\\xe6\\xf3\\xf3\\xf3\\xfd\\xf1\\xe9\\xf9\\xf6\\xf3\\xf7\\\n\\xf7\\xf7\\xfd\\xf9\\xf7\\xfa\\xfa\\xfa\\xfb\\xfb\\xfb\\xfc\\xfc\\xfc\\xfd\\xfc\\\n\\xfb\\xfd\\xfd\\xfd\\xad\\xad\\xad\\xa5\\xf6\\xa5\\xcc\\x00\\x00\\x00\\x01\\x74\\\n\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\\n\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0b\\\n\\x13\\x00\\x00\\x0b\\x13\\x01\\x00\\x9a\\x9c\\x18\\x00\\x00\\x00\\x07\\x74\\x49\\\n\\x4d\\x45\\x07\\xdd\\x04\\x0b\\x0e\\x13\\x28\\x1e\\x31\\x40\\xf2\\x00\\x00\\x00\\\n\\x1d\\x74\\x45\\x58\\x74\\x43\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\\n\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\\n\\x4d\\x50\\xef\\x64\\x25\\x6e\\x00\\x00\\x00\\x99\\x49\\x44\\x41\\x54\\x18\\xd3\\\n\\x5d\\xcc\\xd9\\x02\\x81\\x60\\x18\\x84\\xe1\\xcf\\x4e\\x51\\xd6\\x50\\x2a\\x7b\\\n\\x88\\xca\\x9a\\x90\\x6d\\xdc\\xff\\x35\\xe1\\x4f\\x85\\xf7\\x6c\\x9e\\x83\\xa1\\\n\\xe1\\xa0\\xd7\\xd5\\x35\\x95\\xa2\\xfa\\x78\\xe7\\xc4\\xd2\\x83\\xad\\x59\\x80\\\n\\xad\\x84\\xa0\\x43\\x25\\xf9\\x70\\x85\\x25\\x7d\\x40\\x83\\x25\\xb7\\x7c\\x6f\\\n\\x8e\\x85\\x10\\x80\\x0a\\xdc\\xfc\\x63\\x8d\\x37\\x31\\xe3\\x18\\x28\\x7b\\x5c\\\n\\xbc\\x8a\\x28\\xd6\\x4d\\x4c\\x0a\\x4c\\xa4\\x1d\\xd6\\xbc\\xc8\\xc4\\xc8\\x31\\\n\\x11\\x36\\x70\\xcb\\x2f\\xa9\\x4e\\x31\\x4a\\x31\\xe1\\x56\\x4c\\x9a\\xc5\\xbb\\\n\\x91\\x09\\x8e\\xf3\\x4b\\xb8\\xa5\\x46\\xfb\\x14\\x6e\\xa2\\xac\\x83\\x6d\\xe7\\\n\\x1c\\x6f\\xa2\\xa4\\x0d\\x18\\x69\\xfa\\x2a\\x61\\x8d\\x7f\\x36\\xd1\\xe3\\x6f\\\n\\x47\\x3d\\x01\\x34\\x9c\\x14\\xa2\\xe2\\x6a\\x2a\\x7d\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x09\\xf1\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\xc7\\x00\\x00\\x00\\x14\\x08\\x02\\x00\\x00\\x00\\xb6\\xcd\\xbe\\x10\\\n\\x00\\x00\\x00\\x01\\x73\\x52\\x47\\x42\\x00\\xae\\xce\\x1c\\xe9\\x00\\x00\\x00\\\n\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0e\\x9c\\x00\\x00\\x0e\\x75\\x01\\x88\\x28\\\n\\x1b\\x78\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\xe0\\x02\\x10\\x09\\x32\\\n\\x1d\\x71\\xee\\xb6\\xfa\\x00\\x00\\x00\\x19\\x74\\x45\\x58\\x74\\x43\\x6f\\x6d\\\n\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\\n\\x68\\x20\\x47\\x49\\x4d\\x50\\x57\\x81\\x0e\\x17\\x00\\x00\\x09\\x5e\\x49\\x44\\\n\\x41\\x54\\x68\\xde\\xed\\x5a\\x79\\x54\\x13\\xe7\\x16\\xbf\\xd9\\xd8\\x12\\x12\\\n\\x04\\x84\\x04\\x50\\x16\\x57\\xc0\\x04\\x51\\xd9\\xac\\xca\\x22\\x0a\\x28\\x5b\\\n\\x10\\xd1\\x67\\xab\\x55\\x28\\x70\\xdc\\x5a\\xb7\\x2a\\x96\\x45\\x04\\xc4\\xba\\\n\\xbc\\xaa\\x14\\xc1\\x54\\x7d\\xbe\\x56\\x59\\x5a\\x2a\\xc8\\x56\\xad\\x0a\\x8f\\\n\\xd6\\x9d\\xa5\\xd2\\x3e\\x41\\xa9\\x47\\x59\\x65\\xb5\\x20\\x21\\x90\\x75\\x26\\\n\\xef\\x8f\\xd1\\x91\\x42\\x92\\x52\\x96\\xbe\\x77\\xce\\xcb\\xef\\x8f\\x9c\\x99\\\n\\xfb\\xdd\\xdc\\xe5\\xf7\\xdd\\xf9\\xe6\\x7e\\x33\\x43\\xf8\\xad\\xa3\\x19\\xd4\\\n\\x50\\x63\\x5c\\x41\\x54\\x53\\xa0\\x86\\xba\\xaa\\xd4\\x50\\x57\\x95\\x1a\\xff\\\n\\x97\\x20\\xe3\\x47\\xe5\\xe5\\x95\\x7f\\xa8\\xed\\xed\\x1b\\xd8\\xdd\\xd9\\xa2\\\n\\x42\\x41\\x2c\\x16\\x13\\x88\\x44\\x0d\\x0a\\xe5\\xbf\\x92\\xcc\\x4f\\x0f\\xab\\\n\\x6d\\x6d\\xac\\x35\\x35\\x35\\xc7\\x62\\x64\\x5c\\x78\\x18\\x09\\xba\\xba\\x5e\\\n\\x7e\\x12\\x73\\x20\\xfa\\x93\\x7d\\x16\\xe6\\x53\\xff\\xd7\\xc8\\x19\\x23\\x93\\\n\\xe4\\xc1\\x27\\x3e\\x7e\\x5c\\x15\\xaa\\x03\\x82\\x5e\\x15\\xa3\\x15\\x95\\x55\\\n\\xb1\\x07\\x12\\xeb\\xeb\\x1b\\x06\\x84\\x42\\x47\\x87\\xf9\\x87\\x0f\\x25\\xcc\\\n\\x9c\\x31\\xfd\\xaf\\x2c\\xa9\\xd6\\xd6\\xb6\\x65\\xde\\x7e\\x67\\xd2\\x52\\x56\\\n\\xaf\\xe2\\xd6\\xd7\\x37\\xb4\\x77\\x74\\xba\\x38\\x3b\\x8e\\xce\\xd4\\xa8\\x79\\\n\\xd8\\xb2\\x7d\\x67\\x49\\x69\\x19\\x8a\\x20\\x34\\x1a\\xd5\\xce\\x8e\\x13\\x19\\\n\\x1e\\xa6\\x22\\x06\\x12\\x99\\x94\\x7b\\xa5\\x60\\xef\\x9e\\x9d\\xca\\x14\\xc6\\\n\\x98\\x85\\x32\\x72\\xc6\\x57\\x79\\x44\\x77\\x40\\xb9\\x72\\xa8\\xb0\\x72\\xfb\\\n\\xce\\xdd\\x77\\xd7\\x87\\x7e\\xbc\\x7b\\x47\\x5d\\x6d\\xf5\\xd3\\xc7\\x3f\\xcf\\\n\\xb5\\xe3\\x78\\xaf\\x0c\\x78\\xfe\\xbc\\xfe\\xaf\\xac\\x2a\\x13\\x13\\x56\\x41\\\n\\x5e\\x4e\\x80\\xbf\\x2f\\x00\\x14\\x16\\x5f\\xbd\\x52\\x50\\x38\\x16\\x6b\\xa3\\\n\\xe3\\x41\\x22\\x16\\xef\\xfb\\x78\\xd7\\x93\\x9a\\x87\\xb9\\xdf\\x66\\x5b\\x59\\\n\\x5a\\x70\\x83\\xd7\\x5c\\xce\\xcb\\x57\\xa6\\xac\\x4b\\xd3\\x05\\x00\\x2d\\x6d\\\n\\x2d\\x65\\x0a\\x63\\xcf\\x42\\x21\\x39\\xe3\\xab\\x0c\\x00\\x02\\x81\\xe0\\xfc\\\n\\x85\\xaf\\x9a\\x5b\\x5a\\x14\\xaf\\x55\\xa3\\x9e\\x80\\x1d\\xbb\\xf7\\xc5\\xc7\\\n\\x45\\x2f\\xf5\\x70\\x03\\x00\\x2d\\x2d\\xad\\xd8\\xe8\\xa8\\xfa\\x86\\xc6\\xc4\\\n\\xe4\\x23\\x17\\xce\\x9d\\x29\\x2a\\xbe\\x2a\\x93\\xc9\\x02\\x03\\xfc\\x30\\xe5\\\n\\x74\\xde\\x59\\xd7\\x25\\x8b\\x6d\\xac\\x67\\x4b\\xa5\\xb2\\xd4\\xb4\\xf4\\x92\\\n\\xd2\\x32\\x2a\\x95\\x1a\\x19\\x1e\\xe6\\xe1\\xee\\x5a\\xdf\\xd0\\xf8\\xd5\\xc5\\\n\\x8c\\x20\\x6e\\xc0\\xa9\\x94\\xd3\\x0c\\x06\\xc3\\xcd\\x75\\x31\\x95\\x4a\\xf5\\\n\\x70\\x77\\xc5\\xae\\x9e\\x8b\\x19\\x59\\x3b\\x77\\x6c\\xc7\\xee\\xad\\x17\\x33\\\n\\xb2\\xec\\xe7\\xda\\x51\\xa9\\xd4\\xc1\\xfa\\x51\\x7b\\x77\\xdf\\x2c\\x29\\xb5\\\n\\xb5\\xb1\\x7e\\xf0\\xe8\\x51\\xd5\\x4f\\x0f\\x25\\x12\\x49\\x66\\xd6\\x37\\xb6\\\n\\x36\\xd6\\x76\\x76\\xec\\xe1\\xbe\\x26\\xa8\\xb2\\x35\\x34\\x35\\xe5\\x28\\x4a\\\n\\x22\\x91\\x2c\\x2d\\xcc\\xe3\\x62\\xf6\\xd3\\x68\\xb4\\xa8\\xfd\\xb1\\xbe\\x2b\\\n\\xbc\\x35\\x35\\x35\\x87\\xc7\\x40\\xa1\\x90\\x89\\x44\\x22\\x85\\x4c\\x01\\x80\\\n\\xe1\\xa3\\xb7\\x6e\\xdf\\x19\\x79\\x16\\xf5\\x0d\\x8d\\xff\\xfc\\xf2\\xe2\\xea\\\n\\xe0\\xa0\\x74\\xde\\x39\\x81\\x40\\xe0\\xb5\\xcc\\xd3\\xc3\\xdd\\x35\\x25\\x35\\\n\\xbd\\xb1\\xa9\\xc9\\xd1\\x61\\xc1\\xb6\\x2d\\x91\\xdd\\xdd\\x3d\\x18\\x39\\x1a\\\n\\x7a\\x8c\\x7b\\xf7\\xcb\\x33\\xb2\\xb2\\xfb\\xfb\\x07\\x4c\\x4d\\x4c\\x92\\x12\\\n\\xe2\\x00\\x60\\x88\\xa4\\xab\\xeb\\x25\\xa6\\xdc\\x23\\x16\\x9f\\xfc\\xfc\\x74\\\n\\xc4\\x07\\xa1\\xbc\\xb3\\xe7\\x9b\\x9b\\x5a\\xd8\\x6c\\xdb\\x1d\\x1f\\x6e\\xd5\\\n\\xd2\\xd2\\x02\\x80\\x8e\\x8e\\xce\\x74\\xde\\xd9\\xe7\\xf5\\x0d\\x4c\\xa6\\xb1\\\n\\x40\\xd0\\x2f\\x12\\x89\\xdc\\x96\\x2c\\x1a\\xcf\\x6e\\xbd\\xa6\\xf6\\x71\\x73\\\n\\x73\\x4b\\x10\\xd7\\x7f\\xb0\\x70\\x6d\\x48\\x70\\xd9\\x0f\\x3f\\x62\\x85\\xbc\\\n\\x3f\\xe6\\x00\\x8a\\xa2\\x58\\x27\\x91\\x94\\x7c\\xd4\\x68\\xb2\\x21\\x00\\xec\\\n\\xd9\\xbb\\xbf\\xa5\\xa5\\xf5\\x4c\\x5a\\x4a\\x78\\xd8\\xa6\\x8d\\x61\\x91\\x75\\\n\\xbf\\x3e\\x95\\x48\\x24\\x29\\xa9\\xe9\\xd1\\xb1\\xf1\\x2e\\xce\\x4e\\x76\\x76\\\n\\xec\\xce\\xae\\x97\\xc7\\x3f\\x3b\\x85\\x59\\xbb\\x52\\x50\\x94\\x9a\\xc6\\xbb\\\n\\x7b\\xf7\\x3e\\x36\\x01\\x71\\xf1\\x89\\x34\\x1a\\x6d\\x88\\xbe\\x44\\x2a\\x49\\\n\\x49\\x4d\\x47\\x50\\xa4\\xbe\\xa1\\xb1\\xb1\\xb1\\xa9\\xaf\\xaf\\xef\\x51\\x4d\\\n\\x6d\\x77\\x4f\\x8f\\x42\\x5f\\x13\\xd5\\xa5\\x92\\x49\\x08\\x82\\xe0\\xa7\\x91\\\n\\xe1\\xa1\\x7d\\x82\\xbe\\x87\\xd5\\xbf\\x28\\x8b\\x81\\x4c\\x22\\x11\\x89\\x44\\\n\\x85\\xa3\\x7f\\x2a\\x0b\\x91\\x48\\x94\\x9a\\xc6\\x4b\\xe7\\x9d\\x0b\\xf4\\xf7\\\n\\x5d\\xe8\\xe2\\xb4\\x73\\xcf\\xbe\\xb0\\x88\\xcd\\x2e\\xce\\x8e\\xc1\\xab\\xb8\\\n\\xbc\\xb3\\xe7\\x2f\\x65\\x66\\xe3\\xe4\\xbc\\x68\\x6d\\x8d\\xd8\\xbc\\x2d\\xd0\\\n\\xdf\\x2f\\x32\\x3c\\xcc\\xc9\\x71\\x01\\x00\\x0c\\x97\\xe0\\xca\\x04\\x02\\xe1\\\n\\x8b\\xb3\\xff\\x88\\x8b\\x4f\\x5c\\xb2\\xe8\\x1d\\x2e\\xd7\\x3f\\x2b\\x3b\\xe7\\\n\\x64\\xca\\x69\\x00\\x90\\xc9\\x64\\xfe\\x41\\x21\\x1c\\x0e\\xfb\\x74\\xca\\x89\\\n\\xf9\\xf6\\x73\\x8b\\x8a\\xaf\\x1e\\x3b\\x72\\x68\\xda\\x34\\xab\\xf1\\x5c\\xab\\\n\\x5a\\x5a\\x5e\\x4c\\x9a\\xa4\\x87\\x95\\x30\\x0e\\x16\\x8b\\xc9\\xe7\\xf7\\x21\\\n\\x08\\x12\\x18\\xe0\\x17\\x1d\\x77\\xb0\\xec\\x87\\x5b\\x1e\\xee\\xae\\xf9\\x05\\\n\\x45\\xc1\\x41\\x81\\x86\\x86\\x86\\x2f\\x5a\\x5b\\x0b\\x8a\\x8a\\x9f\\xd4\\x54\\\n\\x6b\\x6a\\x68\\x98\\x99\\x9a\\xbe\\xb3\\xd0\\xf9\\xda\\xf7\\x37\\x42\\x37\\x6e\\\n\\x00\\x80\\x13\\xc7\\x8f\\x60\\xf1\\xfd\\xd6\\xdd\\x1d\\x1b\\x77\\xb0\\xad\\xad\\\n\\x9d\\xc5\\x62\\x5e\\xbf\\x51\\xb2\\x75\\x73\\xc4\\xe5\\xbc\\x2b\\x6e\\xae\\x8b\\\n\\x6f\\xdf\\xb9\\xcb\\x9e\\x63\\x6b\\x61\\x3e\\xb5\\xaf\\x4f\\x30\\x58\\x5f\\x24\\\n\\x12\\x01\\x80\\x06\\x45\\x63\\xc3\\x7b\\xeb\\x1e\\xd5\\xd4\\x9a\\xb0\\x58\\x3b\\\n\\x3e\\xdc\\x8a\\xb1\\x36\\xdc\\xd7\\xac\\x99\\x33\\x26\\xa2\\xaa\\x08\\x40\\x40\\\n\\xe5\\x28\\x7e\\x4a\\xa5\\x52\\x0d\\x0c\\x0c\\xfa\\xfb\\xfb\\x55\\xc7\\xa0\\x70\\\n\\xf4\\xa3\\xed\\x5b\\x46\\x9e\\x05\\x93\\x69\\x0c\\x00\\x09\\xf1\\x31\\x06\\xfa\\\n\\xfa\\x00\\x70\\x39\\x37\\x3f\\xe2\\x83\\x50\\x3f\\xdf\\x15\\x00\\x50\\x51\\x51\\\n\\x55\\x57\\xf7\\x74\\xcd\\xea\\x55\\x18\\x39\\xcd\\x4d\\x2d\\x22\\xa1\\x88\\xc5\\\n\\x62\\xda\\xda\\x58\\xbf\\xde\\x34\\x74\\xbe\\x1c\\x22\\xc1\\x8c\\x68\\x50\\x34\\\n\\x74\\xf5\\x69\\x44\\x22\\x31\\x2e\\x3a\\x6a\\xc6\\x8c\\xe9\\x00\\xf0\\xe2\\x45\\\n\\xeb\\xc3\\xea\\x9f\\x01\\xe0\\x49\\xdd\\xaf\\x7c\\x3e\\x3f\\x28\\xd0\\x1f\\x00\\\n\\xd6\\x84\\x04\\x27\\x26\\x1f\\x69\\x68\\x68\\xc4\\xfe\\x35\\x6e\\x55\\xa5\\xad\\\n\\xad\\xd5\\xd7\\x27\\x40\\x10\\x84\\x44\\x22\\xe1\\xc2\\xee\\xee\\x6e\\x03\\x7d\\\n\\x7d\\x12\\x89\\x44\\x22\\x91\\xd6\\xad\\x0d\\xc9\\xc8\\xfa\\xda\\xc3\\xdd\\xf5\\\n\\xeb\\x9c\\xcb\\xe9\\xa9\\x27\\x01\\xe0\\x51\\x4d\\xad\\x54\\x2a\\xf3\\x0b\\x08\\\n\\x46\\x51\\x54\\x0e\\x72\\xb9\\x5c\\x3e\\x69\\x92\\x9e\\x8e\\x8e\\x36\\x00\\x18\\\n\\x1a\\x1a\\xe2\\xb9\\x2d\\x5b\\xb6\\x34\\x2f\\xbf\\xd0\\xcd\\x75\\xf1\\x94\\x29\\\n\\xa6\\x6b\\xd7\\xac\\x76\\xf7\\xf4\\x3e\\xf6\\xe9\\xa1\\x2b\\xf9\\x85\\x1b\\xdf\\\n\\x5f\\x0f\\x00\\x43\\xf4\\xb1\\x0d\\x0b\\x91\\x48\\x18\\x12\\x9e\\x42\\x5f\\x13\\\n\\xb4\\x56\\x21\\x28\\x82\\xa2\\x6f\\x1b\\x2f\\x89\\x54\\xda\\xd3\\xdd\\x63\\x69\\\n\\x61\\xae\\x2c\\x06\\x54\\x2e\\x47\\x51\\x74\\x24\\x11\\xaa\\xd6\\xa1\\x52\\xa9\\\n\\xbf\\x9f\\x11\\x6d\\x02\\xe1\\x35\\x0f\\xda\\x3a\\xda\\x12\\xb1\\x18\\x27\\x67\\\n\\xee\\x5c\\xce\\x86\\xf5\\xeb\\x3c\\x97\\xaf\\x74\\x71\\x71\\x8e\\x8f\\xdd\\xcf\\\n\\xe1\\xb0\\x87\\x4b\\x06\\x33\\xa9\\xa3\\xa3\\x83\\x9b\\xa5\\xd1\\x68\\xd8\\x81\\\n\\x99\\xa9\\xa9\\x50\\x28\\x2c\\x28\\x2c\\xf6\\xf1\\xf6\\x2a\\x2d\\x2b\\x23\\x93\\\n\\xc8\\x73\\x6c\\x6d\\x94\\xee\\x01\\x47\\x07\\x3b\\x0e\\x07\\x45\\x90\\x1f\\x6f\\\n\\xdd\\x71\\x77\\x5b\\x82\\x0b\\x8b\\xaf\\x7e\\x8f\\xb5\\x59\\x00\\x10\\xba\\xe9\\\n\\xfd\\x45\\xae\\x9e\\x0f\\xca\\x2b\\xcc\\xcc\\x4c\\xa7\\x4f\\x9f\\x06\\x00\\x34\\\n\\x2a\\x8d\\xaa\\xa3\\xf3\\x5d\\x61\\x2e\\x99\\xfc\\x36\\x80\\xc1\\xf7\\x0e\\x0c\\\n\\xeb\\xfe\\x16\\x72\\xfc\\xef\\xa7\\xba\\xbb\\x7b\\x56\\xaf\\xe2\\x5a\\x98\\x4f\\\n\\x65\\xcf\\xb1\\x2d\\xfa\\xee\\x5a\\x45\\x65\\xd5\\xf1\\xa3\\x87\\x87\\x87\\x81\\\n\\xdd\\x64\\xb1\\x49\\x25\\x91\\x48\\x52\\xa9\\xf4\\x35\\x17\\x8a\\x7c\\x4d\\x54\\\n\\x55\\x21\\x28\\xee\\x17\\x00\\xf2\\xf2\\xf2\\x6d\\x6c\\xac\\xad\\xac\\x2c\\xdb\\\n\\xda\\x3b\\x14\\xc6\\x20\\x93\\xc9\\xa4\\x32\\xa9\\xb2\\x08\\x47\\x9e\\x85\\x1c\\\n\\x45\\xf1\\x5f\\x00\\x90\\xc9\\xde\\xc6\\x20\\x93\\x4a\\x09\\x04\\xc2\\x60\\x72\\\n\\x62\\xa3\\xa3\\xc2\\xc3\\x36\\xa5\\x9d\\xf9\\x62\\x65\\x40\\x70\\xe5\\xfd\\x5b\\\n\\xc6\\xc6\\x46\\x43\\x24\\x86\\x86\\x06\\xb8\\x32\\x8a\\xa2\\xe8\\x9b\\x0d\\x0a\\\n\\x6e\\x56\\x4f\\x8f\\xb1\\xf3\\xa3\\xed\\x97\\x32\\xb3\\x2f\\x65\\x66\\x9b\\x4f\\\n\\x9d\\x92\\x77\\x39\\x7b\\xc8\\x33\\x88\\x71\\xe8\\xab\\xf4\\xf4\\x18\\x91\\x11\\\n\\x61\\xbb\\xf6\\xec\\x7b\\xf6\\xec\\x39\\x26\\xb9\\x7a\\xed\\x7a\\x6e\\x6e\\x3e\\\n\\xbe\\x67\\xb6\\xb4\\x30\\x77\\x72\\x74\\xd8\\xb5\\x27\\x6a\\xdb\\x96\\x48\\x4c\\\n\\xe2\\xe0\\x30\\x9f\\x4a\\xd5\\x89\\x39\\x90\\x20\\x95\\xca\\xf0\\x96\\x5f\\x2c\\\n\\x16\\x63\\x97\\x3b\\x6e\\x79\\xa9\\xbb\\x5b\\x53\\x73\\x4b\\x79\\x45\\xc5\\xa2\\\n\\x77\\x16\\x02\\xc0\\xfa\\xf7\\xd6\\x1d\\x3d\\x7e\\xc2\\x6b\\xb9\\x27\\x85\\x42\\\n\\xc6\\x9e\\x8d\\x0d\\xd6\\x97\\x21\\x08\\x00\\x48\\x65\\x52\\x00\\x30\\x9a\\x6c\\\n\\x58\\x5d\\xfd\\x8b\\x0a\\x5f\\x13\\x54\\x55\\x62\\xb1\\x18\\x8b\\x4a\\x2e\\x97\\\n\\x5f\\xbb\\x7e\\x23\\xe1\\xd0\\xa7\\x9f\\x1d\\x3b\\xac\\x34\\x5f\\x89\\x04\\x00\\\n\\xc4\\x22\\xb1\\xb2\\x08\\x47\\x9e\\x85\\x50\\x28\\x02\\x00\\x5c\\x20\\x12\\x8b\\\n\\x91\\x37\\x15\\x26\\x14\\x89\\x10\\x04\\xc5\\xc9\\xc1\\x2e\\x5d\\x26\\xd3\\xf8\\\n\\xe0\\x81\\x18\\x63\\x63\\xa3\\xf6\\xf6\\x8e\\xe1\\x92\\xc1\\x4c\\x8a\\x44\\x22\\\n\\xf4\\x8d\\x29\\xb1\\x58\\x82\\x3b\\xcd\\xcc\\xfe\\x26\\x32\\x3c\\xec\\x1c\\x2f\\\n\\x2d\\x29\\x31\\xde\\xd2\\xc2\\x7c\\x42\\x9e\\xad\\xc7\\x46\\x47\\x71\\x03\\xfd\\\n\\xdd\\x3c\\x7d\\xfc\\xb9\\x21\\xcb\\x7d\\xfc\\x93\\x92\\x8f\\xe4\\xe6\\x64\\x5a\\\n\\x5a\\x5a\\xe0\\x0a\\xab\\xb8\\x01\\x1a\\x1a\\x1a\\xf3\\xe7\\xd9\\xbf\\xde\\x2b\\\n\\x51\\x28\\x59\\x19\\x5f\\xde\\xbb\\xf7\\xc0\\x7a\\x8e\\xbd\\xab\\x87\\x17\\xc7\\\n\\xde\\xe9\\x66\\xc9\\xbf\\x06\\x06\\x06\\x00\\x40\\xf6\\x86\\x35\\x00\\x20\\x93\\\n\\xc9\\x3e\\x5e\\xcb\\xac\\xad\\x67\\x63\\x2d\\xad\\xbf\\xef\\x8a\\xf6\\xf6\\x0e\\\n\\x6e\\xe0\\xeb\\x6d\\xc1\\x10\\x7d\\xec\\x14\\xfb\\xf5\\xf7\\x5d\\x59\\x51\\x59\\\n\\x35\\xcf\\x61\\x61\\x52\\xf2\\x51\\x85\\xbe\\x26\\xa8\\xaa\\x44\\x42\\x51\\x6a\\\n\\x1a\\xcf\\x79\\x91\\xfb\\x6c\\x5b\\xfb\\x33\\xbc\\xf3\\x59\\x17\\x2f\\x70\\x38\\\n\\x6c\\xd5\\xf9\\x0e\\x0c\\x0c\\x28\\x8b\\x70\\xe4\\x59\\x08\\xfa\\x05\\x83\\x17\\\n\\x7b\\xac\\x21\\xc1\\x8e\\xf9\\xbd\\x7c\\x04\\x45\\x70\\x5f\\x37\\x4a\\x4a\\xad\\\n\\xd9\\xf3\\xbc\\x57\\x06\\x3a\\xb8\\x2c\\xb1\\xe3\\xb0\\xd9\\x6c\\xdb\\xe1\\x12\\\n\\x5c\\x59\\x28\\x14\\xa2\\x28\\x8a\\x57\\x15\\x9f\\xdf\\x87\\x1f\\x73\\xe6\\xd8\\\n\\x86\\x86\\x6f\\x9e\\x65\\x63\\x67\\x32\\x65\\x9a\\xd5\\x4c\\xdb\\xa4\\xe4\\xa3\\\n\\xbf\\xeb\\x2f\\xf1\\x6f\\x16\\xca\\xcb\\x2b\\x7d\\xfc\\xb8\\x2a\\xae\\x63\\x61\\\n\\x3f\\x5f\\x9b\\x4a\\x57\\xf1\\x4c\\xb9\\xb7\\x97\\xff\\xf8\\x49\\x1d\\x83\\x41\\\n\\xb7\\x9e\\x3d\\x6b\\x84\\xd3\\xd0\\xd6\\xd6\\xde\\xf3\\xea\\x95\\x81\\xbe\\xbe\\\n\\xb1\\xb1\\xd1\\xf8\\x4e\\xb0\\x54\\x2a\\x6b\\xef\\x68\\x67\\x31\\x99\\xf8\\x2d\\\n\\x63\\x84\\xbe\\xc6\\xc2\\x03\\x82\\x20\\xfd\\xfd\\x03\\x12\\x89\\x98\\xce\\x60\\\n\\x28\\x7c\\xc1\\xa0\\x3a\\x86\\xe1\\xa3\\xa3\\xce\\x42\\x05\\xf8\\xfc\\xbe\\x57\\\n\\xbd\\xbd\\x74\\x5d\\x5d\\x3d\\x3d\\x86\\x32\\x89\\x6a\\xdc\\xb8\\x59\\x9a\\xf3\\\n\\x6d\\x2e\\x2f\\xfd\\x73\\x02\\x81\\x20\\x93\\xc9\\x1e\\x94\\x57\\x72\\x83\\xd7\\\n\\xd6\\xfe\\xbb\\xca\\xd0\\xc0\\x40\\x41\\x5f\\x35\\x20\\xe8\\x15\\xf6\\xf3\\x47\\\n\\x3d\\x91\\x0c\\x06\\xdd\\xd9\\xc9\\xe1\\x4f\\xfd\\x85\\xc5\\x62\\xb2\\x58\\xcc\\\n\\x89\\x58\\x36\\x28\\x14\\xf2\\x14\\x33\\xb3\\xd1\\xf9\\x1a\\x35\\x0f\\x24\\x12\\\n\\x89\\x4e\\xd7\\x05\\xd0\\x1d\\x5d\\xbe\\xc3\\x47\\xc7\\x92\\x85\\x32\\xd0\\xe9\\\n\\xba\\x74\\xba\\xae\\x6a\\xc9\\x1f\\xbc\\xd4\\xaa\\xa8\\xb4\\xb2\\xb2\\xc4\\x36\\\n\\x04\\x64\\x32\\x79\\xc1\\x7c\\x7b\\x23\\xa3\\xc9\\x74\\x3a\\x5d\\x41\\xb7\\xee\\\n\\xed\\x1b\\xa8\\x7e\\x2d\\xaa\\xe6\\x61\\x24\\xf0\\x5a\\xee\\xf9\\xee\\x86\\x30\\\n\\x03\\x7d\\xfd\\x99\\x33\\xa7\\x77\\x74\\x76\\x65\\x65\\xe7\\x24\\xc4\\xc7\\x0e\\\n\\x5e\\x9b\\x09\\xea\\xaf\\xf6\\xd4\\x18\\x05\\x9e\\x3d\\x7b\\x7e\\xed\\xfa\\xcd\\\n\\x9e\\x9e\\x57\\xc6\\x46\\x93\\x7d\\x7c\\x96\\x9b\\x99\\x9a\\x2a\\xee\\xab\\xd4\\\n\\x50\\x63\\xbc\\xa0\\xfe\\xbe\\x4a\\x8d\\xf1\\xc7\\x7f\\x00\\x86\\x0d\\xf7\\xcc\\\n\\x73\\x1e\\xac\\xc7\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x03\\x9d\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xb6\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xf9\\xbb\\x00\\xf7\\xb9\\x00\\xf6\\xb8\\x00\\\n\\xf5\\xb6\\x00\\xfa\\xbc\\x00\\xfb\\xda\\x75\\xfc\\xea\\xab\\xfb\\xf0\\xbd\\xfb\\\n\\xef\\xba\\xfa\\xe6\\xa6\\xf7\\xd5\\x75\\xf0\\xb0\\x00\\xfa\\xcd\\x3f\\xfc\\xe5\\\n\\x9a\\xfb\\xef\\xa9\\xf8\\xe5\\x81\\xf6\\xde\\x6e\\xf5\\xda\\x66\\xf5\\xdb\\x6e\\\n\\xf7\\xe3\\x92\\xf8\\xde\\x94\\xf1\\xc0\\x3f\\xf9\\xbc\\x00\\xfc\\xe9\\xa7\\xfa\\\n\\xeb\\x99\\xf7\\xe3\\x78\\xf7\\xde\\x6b\\xf5\\xda\\x64\\xf4\\xd7\\x5c\\xf3\\xd3\\\n\\x54\\xf3\\xd1\\x53\\xf4\\xd8\\x71\\xf7\\xdf\\x9e\\xe8\\xa6\\x00\\xfb\\xdb\\x7b\\\n\\xfb\\xef\\xa7\\xf8\\xe4\\x78\\xf7\\xdf\\x6d\\xb5\\x8f\\x57\\xf5\\xd8\\x5e\\xf4\\\n\\xd4\\x56\\xb5\\x8e\\x54\\xf1\\xcc\\x47\\xf0\\xca\\x44\\xf4\\xd8\\x7b\\xf2\\xcf\\\n\\x7b\\xe4\\xa1\\x00\\xfc\\xec\\xb2\\xf9\\xe7\\x86\\xf7\\xe0\\x6f\\xf6\\xdd\\x68\\\n\\xf5\\xd9\\x60\\xf4\\xd6\\x59\\xf3\\xd1\\x51\\xf2\\xcd\\x48\\xf0\\xca\\x40\\xef\\\n\\xc5\\x38\\xf0\\xc8\\x48\\xf6\\xdf\\xa1\\xe2\\x9e\\x00\\xf5\\xb7\\x00\\xfc\\xf3\\\n\\xc0\\xf7\\xe3\\x76\\xf6\\xde\\x6a\\xf5\\xda\\x63\\xf4\\xd7\\x5b\\xf3\\xd2\\x53\\\n\\xf2\\xce\\x4b\\xf1\\xcb\\x43\\xef\\xc6\\x3b\\xee\\xc2\\x32\\xee\\xc1\\x34\\xf6\\\n\\xdf\\x9a\\xdf\\x9b\\x00\\xf4\\xb5\\x00\\xfb\\xef\\xb8\\xf7\\xe0\\x72\\xf6\\xdb\\\n\\x64\\xe9\\xcb\\x55\\xbc\\x96\\x31\\xae\\x85\\x25\\xae\\x83\\x21\\xb9\\x8d\\x22\\\n\\xe4\\xb8\\x30\\xee\\xbf\\x2d\\xed\\xbf\\x2f\\xf6\\xde\\x99\\xdd\\x99\\x00\\xf2\\\n\\xb2\\x00\\xfb\\xea\\xaf\\xf7\\xe0\\x78\\xea\\xcc\\x57\\xb0\\x89\\x2a\\xd6\\xb1\\\n\\x3d\\xf0\\xc9\\x40\\xd2\\xa7\\x2b\\xac\\x7c\\x17\\xe2\\xb2\\x24\\xee\\xc1\\x39\\\n\\xf4\\xdb\\x9d\\xd8\\x92\\x00\\xf6\\xd6\\x7e\\xf8\\xe6\\x96\\xe7\\xc8\\x53\\xf2\\\n\\xcd\\x4a\\xf0\\xca\\x42\\xef\\xc6\\x39\\xee\\xc1\\x31\\xe4\\xc0\\x46\\xed\\xbd\\\n\\x2c\\xf2\\xcf\\x68\\xeb\\xc7\\x7e\\xd3\\x8c\\x00\\xec\\xab\\x00\\xf8\\xe2\\xa3\\\n\\xf6\\xdd\\x7c\\xf0\\xc7\\x3c\\xee\\xc3\\x34\\xed\\xbf\\x2c\\xf0\\xc8\\x50\\xf1\\\n\\xd6\\x97\\xd2\\x8a\\x00\\xee\\xbe\\x45\\xf6\\xdc\\x97\\xf6\\xdf\\x8a\\xf2\\xce\\\n\\x55\\xef\\xc5\\x3b\\xee\\xc1\\x33\\xef\\xc5\\x40\\xf2\\xd2\\x70\\xef\\xd2\\x92\\\n\\xde\\xaa\\x48\\xef\\xcb\\x75\\xf5\\xde\\xa0\\xf7\\xe3\\xa2\\xf7\\xe1\\x9e\\xf3\\\n\\xda\\x9b\\xe8\\xc1\\x75\\xd0\\x88\\x00\\xe0\\x9c\\x00\\xde\\x9a\\x00\\xdb\\x97\\\n\\x00\\xd7\\x91\\x00\\xcf\\x87\\x00\\xff\\xff\\xff\\x3c\\xcd\\xaa\\xa7\\x00\\x00\\\n\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\\n\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xc1\\x49\\x44\\x41\\x54\\\n\\x18\\xd3\\x63\\x60\\xc0\\x0e\\x18\\x99\\x98\\x59\\x90\\xb8\\xac\\x6c\\xec\\x1c\\\n\\x9c\\x5c\\xdc\\x3c\\x30\\x3e\\x2f\\x1f\\xbf\\x80\\xa0\\x90\\xb0\\x88\\xa8\\x18\\\n\\x84\\x2f\\x2e\\x21\\x29\\x25\\x2d\\x23\\x2b\\x27\\xaf\\xa0\\xa8\\x04\\xd6\\xae\\\n\\xac\\xa2\\xaa\\xa6\\xae\\xa1\\xa9\\xa5\\xad\\xa3\\xab\\xa7\\x0f\\x14\\x60\\x32\\\n\\x30\\x34\\x32\\x36\\x31\\x35\\x33\\xb7\\xb0\\xb4\\xb2\\xb6\\x01\\x0a\\xd8\\xda\\\n\\xd9\\x3b\\x38\\x3a\\x39\\xbb\\xb8\\xba\\xb9\\x7b\\x78\\x7a\\x01\\x05\\xbc\\x7d\\\n\\x7c\\xfd\\xfc\\x03\\x02\\x83\\x82\\x43\\x42\\xc3\\xc2\\x23\\x80\\x02\\x91\\x51\\\n\\xd1\\x31\\xb1\\x71\\xda\\xf1\\x09\\x89\\x49\\xc9\\x29\\xa9\\x40\\x01\\x9e\\xb4\\\n\\x74\\xf9\\x8c\\xcc\\xac\\xec\\x9c\\xdc\\xbc\\xfc\\x82\\x42\\x90\\x35\\x45\\xc5\\\n\\x25\\xf2\\xae\\xa5\\x65\\xe5\\x79\\x15\\x95\\x55\\x10\\x87\\x54\\xd7\\xd4\\xd6\\\n\\xd5\\x37\\x34\\x36\\x35\\xb7\\xc0\\x9c\\xaa\\xdf\\xda\\xd6\\xde\\xd1\\xd9\\xd5\\\n\\x8d\\xf0\\x4c\\x4f\\x6f\\x5f\\x7f\\xe1\\x04\\xec\\xfe\\x06\\x00\\xf9\\x75\\x2a\\\n\\x94\\x88\\xde\\xd7\\x3c\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\\n\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\\n\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\\n\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\\n\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\\n\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\x2d\\x30\\x34\\x54\\x31\\x35\\\n\\x3a\\x35\\x34\\x3a\\x30\\x36\\x2b\\x30\\x32\\x3a\\x30\\x30\\xfe\\x8a\\x4c\\x22\\\n\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x69\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x8c\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xec\\xce\\x40\\xeb\\xcc\\x3f\\xea\\xcb\\x3e\\\n\\xe9\\xc9\\x3c\\xe9\\xc7\\x3b\\xe8\\xc4\\x3a\\xe7\\xc2\\x38\\xe6\\xc0\\x36\\xe5\\\n\\xbd\\x35\\xe4\\xbb\\x33\\xe3\\xb8\\x31\\xfa\\xed\\x9a\\xf9\\xeb\\x99\\xf9\\xe8\\\n\\x97\\xf8\\xe5\\x94\\xf7\\xe2\\x91\\xf6\\xdf\\x8e\\xf5\\xdb\\x8b\\xeb\\xc7\\x56\\\n\\xf1\\xd9\\x64\\xfa\\xeb\\x9a\\xf4\\xd8\\x48\\xf3\\xd3\\x44\\xf1\\xce\\x3f\\xf0\\\n\\xc8\\x3a\\xf5\\xdc\\x8c\\xed\\xcb\\x62\\xea\\xca\\x3d\\xf9\\xe9\\x93\\xf7\\xe1\\\n\\x72\\xf3\\xd4\\x45\\xf2\\xce\\x41\\xf0\\xc9\\x3c\\xf5\\xdc\\x8a\\xef\\xd0\\x70\\\n\\xe4\\xbb\\x3d\\xef\\xd4\\x5b\\xf9\\xea\\x99\\xf4\\xd6\\x47\\xf2\\xd0\\x42\\xf0\\\n\\xcb\\x3d\\xf3\\xd5\\x6e\\xf3\\xd7\\x7f\\xe7\\xc0\\x4a\\xf5\\xe1\\x80\\xf8\\xe6\\\n\\x8e\\xf3\\xd2\\x43\\xf1\\xcd\\x3f\\xef\\xc7\\x39\\xea\\xc6\\x58\\xec\\xcd\\x4f\\\n\\xf9\\xe9\\x98\\xf3\\xd5\\x4a\\xf1\\xcf\\x45\\xf0\\xca\\x40\\xee\\xc2\\x38\\xf4\\\n\\xd9\\x89\\xe1\\xb4\\x2e\\xe0\\xb1\\x2c\\x70\\xa3\\x37\\x65\\x9f\\x31\\xd8\\xa9\\\n\\x27\\xdb\\xa6\\x25\\xda\\xa3\\x23\\xf2\\xda\\x75\\xf8\\xe6\\x93\\xf7\\xe3\\x91\\\n\\xf6\\xe0\\x8d\\xf5\\xdb\\x8a\\xf4\\xd7\\x88\\xf2\\xd3\\x84\\xf1\\xcf\\x7f\\x69\\\n\\xa1\\x34\\x81\\xb3\\x5a\\x57\\x98\\x28\\xd5\\xa3\\x23\\xe2\\xb6\\x2f\\x6f\\xa5\\\n\\x3d\\x6e\\xa3\\x37\\x68\\xa1\\x33\\x62\\x9d\\x30\\x7c\\xaf\\x55\\xaa\\xcb\\x91\\\n\\x74\\xab\\x4f\\x45\\x8f\\x17\\xe0\\xb2\\x2d\\x6b\\xa3\\x37\\xb0\\xce\\x96\\xad\\\n\\xcd\\x94\\xa8\\xcb\\x90\\x90\\xbc\\x74\\xa1\\xc7\\x8a\\x68\\xa5\\x46\\x35\\x87\\\n\\x07\\xdf\\xaf\\x2b\\x63\\x9f\\x31\\x8e\\xba\\x6f\\x89\\xb8\\x6b\\x85\\xb6\\x66\\\n\\x80\\xb3\\x61\\x82\\xb5\\x67\\x98\\xc2\\x83\\x5c\\xa0\\x3c\\x25\\x7f\\x00\\xe7\\\n\\xbc\\x4f\\x5b\\x9b\\x29\\xa9\\xca\\x90\\xa5\\xc8\\x8d\\xa1\\xc6\\x8a\\x9e\\xc5\\\n\\x88\\x85\\xb6\\x6a\\x97\\xc2\\x82\\x66\\xa5\\x48\\x21\\x7d\\x00\\xdf\\xae\\x2d\\\n\\xde\\xab\\x2b\\x52\\x97\\x21\\x49\\x91\\x1b\\x43\\x8f\\x15\\x3b\\x8b\\x0f\\x5e\\\n\\x9f\\x3a\\x96\\xc1\\x80\\x62\\xa3\\x46\\x1f\\x7d\\x00\\xde\\xac\\x29\\xdc\\xa9\\\n\\x27\\x2b\\x83\\x01\\x5f\\xa1\\x43\\x1f\\x7b\\x00\\x1e\\x7b\\x03\\xff\\xff\\xff\\\n\\x4d\\xc3\\x9b\\xf5\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\\n\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\\n\\x00\\xb7\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x02\\x18\\x99\\x98\\x59\\\n\\x58\\xd9\\xd8\\x39\\x38\\xb9\\xb8\\x21\\x02\\x4c\\x3c\\xbc\\x7c\\xfc\\x02\\x82\\\n\\x42\\xc2\\x30\\xbe\\x88\\xa8\\x98\\xb8\\x84\\xa4\\x94\\x34\\x94\\xcf\\x20\\x23\\\n\\x2b\\x27\\xaf\\xa0\\xa8\\xa4\\xac\\x02\\x33\\x42\\x55\\x4d\\x5d\\x43\\x53\\x4b\\\n\\x5b\\x07\\xc6\\x67\\xd5\\xd5\\xd3\\x37\\x30\\x94\\x32\\x82\\xdb\\x61\\x6c\\x62\\\n\\x6a\\x66\\x6e\\x61\\x69\\x65\\x6d\\x63\\x6b\\x67\\xef\\xc0\\xc0\\xc0\\xe6\\xe8\\\n\\xe4\\xec\\xa2\\xe4\\xea\\xe6\\xee\\xe1\\xe9\\xe5\\xed\\x03\\x54\\x00\\xb6\\xde\\\n\\xd7\\xcf\\x3f\\x20\\x30\\x28\\x38\\x24\\x14\\xa6\\x2d\\x2c\\x3c\\x22\\x32\\x38\\\n\\x2a\\x3a\\x26\\x36\\x0e\\x2a\\x10\\x9f\\x10\\x99\\x98\\x94\\x9c\\x92\\x9a\\x96\\\n\\x9e\\x01\\xe1\\x67\\x66\\x65\\xe7\\xe4\\xe6\\xe5\\x17\\x14\\x16\\x41\\x14\\x14\\\n\\x97\\x94\\x96\\x95\\x57\\x54\\x56\\x55\\xd7\\x40\\xf8\\xb5\\x75\\x60\\xaa\\xbe\\\n\\xa1\\x11\\xd5\\xd3\\x45\\x4d\\x20\\x12\\x00\\x42\\x73\\x23\\x4f\\x43\\x51\\xcc\\\n\\x81\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\\n\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\\n\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\\n\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\\n\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x55\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x74\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xec\\xce\\x40\\xeb\\xcc\\x3f\\xea\\xcb\\x3e\\\n\\xe9\\xc9\\x3c\\xe9\\xc7\\x3b\\xe8\\xc4\\x3a\\xe7\\xc2\\x38\\xe6\\xc0\\x36\\xe5\\\n\\xbd\\x35\\xe4\\xbb\\x33\\xe3\\xb8\\x31\\xfa\\xed\\x9a\\xf9\\xeb\\x99\\xf9\\xe8\\\n\\x97\\xf8\\xe5\\x94\\xf7\\xe2\\x91\\xf6\\xdf\\x8e\\xf5\\xdb\\x8b\\xeb\\xc7\\x56\\\n\\xf1\\xd9\\x64\\xfa\\xeb\\x9a\\xf4\\xd8\\x48\\xf3\\xd3\\x44\\xf1\\xce\\x3f\\xf0\\\n\\xc8\\x3a\\xf5\\xdc\\x8c\\xed\\xcb\\x62\\xea\\xca\\x3d\\xf9\\xe9\\x93\\xf7\\xe1\\\n\\x72\\xf3\\xd4\\x45\\xf2\\xce\\x41\\xf0\\xc9\\x3c\\xf5\\xdc\\x8a\\xef\\xd0\\x70\\\n\\xe4\\xbb\\x3d\\xef\\xd4\\x5b\\xf9\\xea\\x99\\xf4\\xd6\\x47\\xf2\\xd0\\x42\\xf0\\\n\\xcb\\x3d\\xf3\\xd5\\x6e\\xf3\\xd7\\x7f\\xe7\\xc0\\x4a\\xf5\\xe1\\x80\\xf8\\xe6\\\n\\x8e\\xf3\\xd2\\x43\\xf1\\xcd\\x3f\\xef\\xc7\\x39\\xea\\xc6\\x58\\xec\\xcd\\x4f\\\n\\xf9\\xe9\\x98\\xf3\\xd5\\x4a\\xf1\\xcf\\x45\\xf0\\xca\\x40\\xee\\xc2\\x38\\xf4\\\n\\xd9\\x89\\xe1\\xb4\\x2e\\xe0\\xb1\\x2c\\xdf\\xae\\x2b\\xde\\xac\\x29\\xdc\\xa9\\\n\\x27\\xdb\\xa6\\x25\\xda\\xa3\\x23\\xf2\\xda\\x75\\xf8\\xe6\\x93\\xf7\\xe3\\x91\\\n\\xf6\\xe0\\x8d\\xf5\\xdb\\x8a\\xf4\\xd7\\x88\\xf2\\xd3\\x84\\xf1\\xcf\\x7f\\xf0\\\n\\xcc\\x7c\\xef\\xc9\\x7a\\xe3\\xb4\\x48\\xe2\\xb6\\x2f\\xf3\\xd7\\x86\\xeb\\xb6\\\n\\x2f\\xec\\xbc\\x4a\\xf1\\xce\\x80\\xd6\\x8b\\x39\\xc3\\x58\\x12\\xbc\\x42\\x04\\\n\\xb9\\x45\\x03\\xe0\\xb2\\x2d\\xee\\xcc\\x70\\xf2\\xd2\\x83\\xf1\\xce\\x7e\\xd5\\\n\\x8a\\x35\\xd1\\x74\\x38\\xf7\\xb5\\x8d\\xfe\\xd6\\xb8\\xf5\\xa8\\x72\\xcb\\x6b\\\n\\x2d\\xdf\\xaf\\x2b\\xe7\\xbd\\x55\\xde\\xaa\\x2e\\xbc\\x4c\\x06\\xf6\\xb5\\x8d\\\n\\xff\\x92\\x4d\\xff\\x77\\x11\\xff\\x86\\x21\\xeb\\x8a\\x40\\xb9\\x44\\x03\\xe7\\\n\\xbc\\x4f\\xe6\\xba\\x4c\\xdc\\xa7\\x26\\xfe\\xcd\\xae\\xff\\xff\\xff\\xef\\x7f\\\n\\x18\\xdf\\xae\\x2d\\xde\\xab\\x2b\\xf4\\x9d\\x63\\xff\\x7f\\x18\\xf8\\x76\\x00\\\n\\xee\\x76\\x00\\xe1\\x68\\x03\\xc3\\x57\\x1a\\xc9\\x64\\x25\\xe6\\x77\\x21\\xea\\\n\\x79\\x05\\xdd\\x64\\x01\\xbd\\x4d\\x04\\x34\\x07\\x68\\xef\\x00\\x00\\x00\\x01\\\n\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\\n\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xbb\\x49\\x44\\x41\\x54\\x18\\xd3\\\n\\x63\\x60\\xc0\\x02\\x18\\x99\\x98\\x59\\x58\\xd9\\xd8\\x39\\x38\\xb9\\xb8\\x21\\\n\\x02\\x4c\\x3c\\xbc\\x7c\\xfc\\x02\\x82\\x42\\xc2\\x30\\xbe\\x88\\xa8\\x98\\xb8\\\n\\x84\\xa4\\x94\\x34\\x94\\xcf\\x20\\x23\\x2b\\x27\\xaf\\xa0\\xa8\\xa4\\xac\\x02\\\n\\x33\\x42\\x55\\x4d\\x5d\\x43\\x53\\x4b\\x5b\\x07\\xc6\\x67\\xd5\\xd5\\xd3\\x37\\\n\\x30\\x94\\x32\\x82\\xdb\\x61\\x6c\\x62\\x6a\\x66\\x6e\\x61\\x69\\x65\\x6d\\x63\\\n\\x6b\\x67\\xef\\xc0\\xc0\\xc0\\xe6\\xe8\\xe4\\xec\\xa2\\xe4\\xea\\xe6\\xee\\xe1\\\n\\xe9\\xe5\\x0d\\xe4\\x33\\x80\\xad\\xf7\\xf1\\xf5\\xf3\\x0f\\x08\\x0c\\x0a\\x0e\\\n\\x81\\x69\\x0b\\x0d\\x0b\\x8f\\x88\\x8c\\x8a\\x8e\\x89\\x8d\\x83\\x0a\\xc4\\xbb\\\n\\x27\\x24\\x26\\x25\\xa7\\xa4\\xa6\\xa5\\x67\\x40\\xf8\\x99\\x59\\xd9\\x0c\\xc1\\\n\\x39\\xb9\\xb9\\xb9\\x79\\xc1\\x60\\x81\\xfc\\x02\\x7b\\x06\\x86\\x90\\xc2\\xa2\\\n\\xe2\\x92\\x52\\xb0\\x29\\xb6\\x76\\x20\\xb2\\xac\\xbc\\xa2\\xb2\\xaa\\x1a\\xc5\\\n\\xd7\\x21\\x20\\x5b\\x00\\x0d\\xe1\\x23\\x1c\\xc8\\xb2\\x27\\x9a\\x00\\x00\\x00\\\n\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\\n\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\\n\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\\n\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\\n\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\\n\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\\n\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\\n\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\\n\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\\n\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x0a\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x90\\\n\\x50\\x4c\\x54\\x45\\x00\\x00\\x00\\x7b\\xa7\\xdc\\x66\\x8b\\xc0\\x7a\\xa4\\xdb\\\n\\xff\\xff\\xff\\x63\\x87\\xbd\\x79\\xa3\\xd9\\xf9\\xfb\\xfc\\xf8\\xfb\\xfc\\x33\\\n\\x34\\x36\\x60\\x85\\xba\\x79\\xa2\\xd8\\xfa\\xfd\\xfd\\xfa\\xfc\\xfc\\x5e\\x81\\\n\\xb7\\x76\\xa0\\xd5\\xfc\\xfd\\xfd\\x5c\\x7e\\xb5\\x75\\x9e\\xd4\\xfc\\xfe\\xfe\\\n\\xfb\\xfd\\xfd\\x5a\\x7c\\xb2\\x73\\x9c\\xd1\\x58\\x7a\\xb0\\x6f\\x97\\xcc\\xfc\\\n\\xff\\xff\\xfd\\xff\\xff\\x54\\x75\\xac\\x6e\\x94\\xca\\xfe\\xff\\xff\\xfa\\xfe\\\n\\xfe\\xf9\\xfc\\xfc\\x53\\x73\\xaa\\x6c\\x92\\xc8\\xfc\\xfc\\xfc\\x51\\x72\\xa9\\\n\\x51\\x71\\xa9\\x68\\x8e\\xc3\\x64\\x88\\xbe\\x61\\x85\\xbb\\x5f\\x83\\xb9\\x5c\\\n\\x7e\\xb4\\x58\\x7b\\xb1\\x57\\x79\\xae\\x56\\x76\\xad\\x54\\x75\\xab\\x53\\x73\\\n\\xa9\\x00\\x00\\x00\\x67\\x14\\x96\\xea\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\x7d\\x49\\x44\\x41\\x54\\x18\\xd3\\x6d\\x8f\\xd7\\x0e\\\n\\xc2\\x30\\x14\\x43\\x0f\\xc5\\x8c\\xb0\\x21\\x94\\x4d\\xcb\\x08\\x7b\\xfc\\xff\\\n\\xe7\\x51\\xa5\\x55\\xc3\\xf2\\xc3\\x95\\x7c\\x64\\x59\\xd7\\xf0\\xad\\xca\\x87\\\n\\x22\\xa8\\xea\\x5d\\x35\\xa8\\xab\\xd1\\x94\\x8c\\x31\\x1e\\xb4\\xa0\\xad\\x4e\\\n\\x57\\x85\\x95\\x7a\\xd0\\xd7\\x20\\x78\\x0d\\xf3\\x44\\x00\\x65\\xc2\\x14\\x25\\\n\\x59\\x62\\x24\\x3b\\xf6\\xc6\\x9f\\x18\\x26\\xb2\\x36\\x80\\xe9\\x1f\\x30\\xd3\\\n\\x7c\\x11\\xc0\\x12\\x56\\xd2\\x3a\\x6f\\x4d\\x92\\x54\\x1b\\xd8\\x66\\x7c\\x57\\\n\\xbe\\xbe\\x07\\x77\\x88\\x8e\\xa7\\xf3\\x25\\xbe\\xde\\xee\\x8f\\xa7\\x73\\x3f\\\n\\xe3\\x79\\x01\\x2d\\xa3\\x08\\x62\\xc0\\xa2\\x50\\x55\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\\n\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x35\\x35\\x3a\\\n\\x30\\x39\\x2b\\x30\\x31\\x3a\\x30\\x30\\x61\\x1a\\xb8\\x6a\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\\n\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x35\\x35\\\n\\x3a\\x30\\x39\\x2b\\x30\\x31\\x3a\\x30\\x30\\x10\\x47\\x00\\xd6\\x00\\x00\\x00\\\n\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x0d\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x44\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x50\\x7a\\x51\\x54\\x8d\\x49\\x4c\\x98\\x4c\\\n\\x47\\x88\\x56\\x88\\x65\\x34\\x87\\x58\\x1d\\x52\\xa0\\x35\\x79\\xb7\\x5e\\xc2\\\n\\xe9\\xbf\\xb6\\xe4\\xae\\x80\\xd1\\x6d\\x53\\x94\\x47\\xfb\\xf7\\xef\\xbb\\x84\\\n\\x36\\x47\\x87\\x87\\x4c\\xa5\\x34\\x4c\\xa6\\x31\\x4d\\xa6\\x31\\x4d\\xa6\\x30\\\n\\x96\\xc2\\x82\\xc6\\xeb\\xc3\\xcb\\xed\\xc9\\xbf\\xe9\\xb9\\xbc\\xe7\\xb7\\xc0\\\n\\xb4\\xa0\\xe2\\xbc\\x86\\xa4\\x72\\x2e\\x4b\\x8c\\x59\\xc0\\xe9\\xbd\\xbc\\xe7\\\n\\xb8\\xc3\\xeb\\xc1\\xc8\\xec\\xc6\\xb0\\xe3\\xa8\\xbe\\xe8\\xba\\xa4\\xdf\\x99\\\n\\x9e\\xdc\\xa7\\x97\\x6e\\x35\\xe4\\xc1\\x8f\\x8f\\x5f\\x21\\xa9\\xe0\\xa1\\x78\\\n\\xcf\\x64\\x92\\xd8\\x84\\xa3\\xde\\x97\\xb7\\xe6\\xb0\\xb7\\xe6\\xb2\\xa3\\xdf\\\n\\x98\\x96\\xcf\\x8e\\xac\\x79\\x35\\xdb\\xaf\\x6e\\x5b\\x99\\x46\\xab\\xe1\\xa2\\\n\\x7a\\xcf\\x66\\x7c\\xcf\\x68\\xa5\\xdf\\x9b\\xba\\xe7\\xb6\\xa1\\xde\\x95\\xa2\\\n\\xc9\\x9d\\xc0\\x8c\\x42\\xdf\\xb7\\x7d\\x3c\\x7b\\xa0\\xa9\\xd3\\xa0\\x9b\\xdb\\\n\\x90\\x7d\\xd0\\x6a\\x7e\\xd1\\x6c\\x94\\xd9\\x86\\xa7\\xe0\\x9e\\xc7\\xec\\xc5\\\n\\xb9\\xe6\\xb4\\x90\\xab\\x8d\\xd6\\xa2\\x56\\xc7\\x92\\x46\\x30\\x84\\xa1\\xb0\\\n\\xe3\\xaa\\x77\\xce\\x63\\x74\\xcd\\x5f\\x8e\\xd6\\x80\\xaf\\xe3\\xa7\\xb9\\xe7\\\n\\xb4\\xab\\xe0\\xa3\\x75\\xc5\\x68\\x70\\xc7\\x77\\xac\\xb3\\xac\\xb0\\x7e\\x3a\\\n\\x3b\\x94\\x77\\xa5\\xde\\x9b\\xaa\\xe0\\xa3\\xb1\\xe3\\xab\\x7b\\xcd\\x6a\\x4c\\\n\\xb3\\x35\\x63\\xa7\\x6a\\x98\\xd7\\xb6\\x78\\xbc\\xb3\\x32\\x1d\\x16\\xd4\\x9e\\\n\\x53\\x9a\\x6a\\x2b\\x42\\x85\\x59\\x45\\xa3\\x3c\\x47\\xb2\\x33\\x47\\xb1\\x33\\\n\\x47\\xa5\\x38\\x44\\x86\\x4d\\x9c\\x6b\\x2c\\xb1\\x80\\x3c\\xca\\x97\\x4d\\xbe\\\n\\x8c\\x45\\xac\\x7b\\x38\\xff\\xff\\xff\\x8c\\xa6\\xf8\\x24\\x00\\x00\\x00\\x01\\\n\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\\n\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xa3\\x49\\x44\\x41\\x54\\x18\\xd3\\\n\\x63\\x60\\xc0\\x01\\x18\\x99\\x98\\x59\\x58\\xd9\\xd8\\xe0\\x7c\\x76\\x0e\\x4e\\\n\\x2e\\x6e\\x1e\\x5e\\x3e\\x90\\x08\\xbf\\x80\\xa0\\x90\\xb0\\x88\\xa8\\x98\\xb8\\\n\\x84\\xa4\\x94\\x34\\x48\\x52\\x46\\x56\\x4e\\x42\\x5e\\x41\\x51\\x49\\x59\\x45\\\n\\x55\\x4d\\x1d\\x24\\xc0\\xa3\\xa1\\xa9\\xa9\\xa5\\xad\\xa3\\xab\\xa7\\x6f\\x60\\\n\\x08\\x36\\xc3\\xc8\\xd8\\xc4\\x54\\xcb\\xcc\\x5c\\xd1\\xc2\\xd2\\xca\\x1a\\x24\\\n\\x60\\x63\\x6b\\x67\\xef\\xe0\\xe8\\xe4\\xec\\xa2\\xe3\\xea\\xe6\\x0e\\x12\\xf0\\\n\\xf0\\xf4\\xf2\\xf6\\xf1\\xf5\\xf3\\x0f\\x08\\x0c\\x72\\x0b\\x06\\x09\\x84\\x84\\\n\\x86\\x85\\x85\\x47\\x44\\x46\\x45\\xc7\\xc4\\xc6\\xc5\\x83\\x8c\\x48\\x48\\x4c\\\n\\x4a\\x4e\\x49\\x05\\xb1\\xd2\\xdc\\xd8\\x50\\xdc\\xca\\x96\\x8e\\x2e\\x90\\x81\\\n\\x2e\\xe0\\x96\\x89\\x2e\\x90\\x85\\xea\\x5f\\x36\\x88\\x5f\\x01\\xff\\x2a\\x19\\\n\\x4c\\xdd\\x96\\x4c\\x64\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\\n\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\\n\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\\n\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\\n\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\\n\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\x2d\\x30\\x34\\x54\\x31\\x35\\\n\\x3a\\x35\\x36\\x3a\\x33\\x31\\x2b\\x30\\x32\\x3a\\x30\\x30\\xb1\\x57\\xa5\\x72\\\n\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x20\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x59\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xe9\\xc9\\x3c\\xe9\\xc7\\x3b\\xed\\xce\\x48\\\n\\xed\\xcd\\x48\\xe7\\xc2\\x38\\xe8\\xc6\\x3a\\xf2\\xd6\\x56\\xf3\\xd6\\x59\\xe5\\\n\\xbf\\x36\\xe8\\xc5\\x3a\\xed\\xce\\x49\\xf4\\xd9\\x5d\\xea\\xc5\\x43\\xe3\\xb9\\\n\\x32\\xf4\\xd9\\x5b\\xf2\\xd3\\x47\\xf0\\xcb\\x3a\\xf1\\xcf\\x55\\xe8\\xbf\\x3e\\\n\\xe1\\xb4\\x2e\\xe0\\xb1\\x2d\\xdf\\xae\\x2b\\xea\\xca\\x3d\\xef\\xd5\\x4d\\xf2\\\n\\xdc\\x58\\xf5\\xde\\x5e\\xf5\\xde\\x60\\xf6\\xdc\\x5f\\xf3\\xd4\\x48\\xef\\xc9\\\n\\x2d\\xee\\xc4\\x29\\xed\\xc4\\x35\\xef\\xc9\\x50\\xee\\xc4\\x4c\\xeb\\xbe\\x45\\\n\\xe7\\xb7\\x3d\\xe2\\xb0\\x33\\xdb\\xa6\\x25\\xee\\xd2\\x4c\\xf6\\xe1\\x63\\xf4\\\n\\xd6\\x41\\xf2\\xcf\\x32\\xf0\\xcb\\x2e\\xef\\xc6\\x2a\\xed\\xc1\\x26\\xeb\\xbc\\\n\\x22\\xea\\xb7\\x1f\\xe9\\xb4\\x20\\xec\\xbe\\x47\\xe4\\xb2\\x36\\xdb\\xa5\\x24\\\n\\xe6\\xc1\\x37\\xed\\xce\\x4a\\xf5\\xdb\\x5e\\xf1\\xcd\\x30\\xef\\xc8\\x2c\\xee\\\n\\xc3\\x27\\xec\\xbe\\x24\\xea\\xb8\\x20\\xe9\\xb4\\x1c\\xec\\xc0\\x49\\xe4\\xb2\\\n\\x37\\xdb\\xa4\\x24\\xe4\\xbc\\x34\\xf2\\xd5\\x59\\xf2\\xd0\\x46\\xed\\xc0\\x25\\\n\\xeb\\xbb\\x22\\xe9\\xb6\\x1d\\xe9\\xb4\\x21\\xeb\\xbd\\x46\\xda\\xa4\\x23\\xea\\\n\\xc6\\x44\\xf2\\xd2\\x57\\xed\\xc2\\x27\\xec\\xbd\\x23\\xe9\\xb3\\x1b\\xea\\xb9\\\n\\x36\\xe6\\xb3\\x3a\\xd8\\x9f\\x20\\xe2\\xb5\\x2f\\xec\\xc8\\x49\\xf1\\xcc\\x49\\\n\\xed\\xc3\\x31\\xee\\xc4\\x42\\xed\\xc3\\x46\\xea\\xb6\\x2c\\xe8\\xb1\\x26\\xe7\\\n\\xb4\\x3c\\xd5\\x97\\x1b\\xe0\\xb2\\x2d\\xee\\xca\\x4d\\xf1\\xce\\x54\\xef\\xc8\\\n\\x50\\xe8\\xba\\x40\\xe5\\xb5\\x39\\xeb\\xba\\x44\\xe8\\xb3\\x3e\\xd2\\x8f\\x16\\\n\\xdf\\xaf\\x2b\\xef\\xcb\\x50\\xe5\\xb7\\x39\\xdc\\xa7\\x25\\xda\\xa4\\x24\\xd9\\\n\\xa1\\x21\\xd7\\x9a\\x1d\\xdd\\xa3\\x2a\\xe5\\xae\\x39\\xcf\\x88\\x11\\xde\\xac\\\n\\x29\\xdc\\xa9\\x27\\xcf\\x87\\x10\\xcc\\x81\\x0c\\xff\\xff\\xff\\xd7\\x02\\xbc\\\n\\x5d\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\\n\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xa1\\x49\\\n\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x01\\x18\\x99\\xd0\\x04\\x98\\x59\\x58\\\n\\x51\\xf8\\x6c\\xec\\x1c\\x9c\\xc8\\x7c\\x2e\\x6e\\x1e\\x0e\\x5e\\x3e\\x84\\x76\\\n\\x2e\\x6e\\x7e\\x01\\x41\\x21\\x61\\x11\\x51\\x31\\x20\\x57\\x5c\\x42\\x52\\x4a\\\n\\x5a\\x46\\x56\\x4e\\x5e\\x41\\x51\\x49\\x59\\x45\\x55\\x0d\\xa8\\x5d\\x5d\\x43\\\n\\x53\\x4b\\x5b\\x47\\x57\\x4f\\xdf\\xc0\\xd0\\xc8\\x18\\xa4\\xc5\\xc4\\xd4\\xcc\\\n\\xdc\\xc2\\xd2\\xca\\xda\\xc6\\xd6\\xce\\x1e\\x62\\x88\\x83\\xa3\\x93\\xbc\\xb3\\\n\\x8b\\xab\\x9b\\xbb\\x07\\xcc\\x58\\x4f\\x2f\\x6f\\x1f\\x7d\\x5f\\x3f\\xff\\x00\\\n\\x28\\x3f\\x30\\x28\\x38\\x24\\x34\\x2c\\x3c\\x22\\x32\\x0a\\x2a\\x10\\x1d\\x13\\\n\\x1b\\x17\\x9f\\xe0\\x9e\\x98\\x94\\x0c\\x15\\x48\\x49\\x4d\\x4b\\xcf\\xc8\\xcc\\\n\\xca\\xce\\xc9\\x85\\x0a\\xe4\\xe5\\xab\\x81\\xe9\\x82\\x42\\x6c\\xde\\x06\\x00\\\n\\x60\\x9d\\x1a\\x0b\\x4e\\x7c\\xc3\\x21\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\\n\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\\n\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\\n\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\\n\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\\n\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\\n\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\\n\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\x2d\\x30\\x34\\\n\\x54\\x31\\x36\\x3a\\x30\\x32\\x3a\\x35\\x35\\x2b\\x30\\x32\\x3a\\x30\\x30\\x46\\\n\\x01\\xe8\\x10\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x71\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xba\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x54\\x94\\xe1\\x79\\xac\\xe7\\x7b\\xab\\xe7\\\n\\x4c\\x86\\xdd\\x74\\xa9\\xe6\\x4b\\x86\\xdc\\x79\\xaa\\xe6\\x50\\x8a\\xdd\\x6c\\\n\\xa2\\xe5\\x51\\x8a\\xde\\x55\\x91\\xe0\\x85\\x85\\x85\\x9e\\x9e\\x9e\\x7c\\x7c\\\n\\x7c\\x62\\x67\\x6f\\x4c\\x4c\\x4c\\x91\\x91\\x91\\xe8\\xe8\\xe8\\xdd\\xdd\\xdd\\\n\\xc1\\xc1\\xc1\\x81\\x81\\x81\\x7b\\x7b\\x7b\\xd9\\xd9\\xd9\\xc4\\xc4\\xc4\\x73\\\n\\x73\\x73\\xd5\\xd5\\xd5\\x58\\x58\\x58\\x4b\\x4b\\x4b\\x65\\x65\\x65\\x6f\\x6f\\\n\\x6f\\xa8\\xa8\\xa8\\x32\\x32\\x32\\x82\\x82\\x82\\x67\\x67\\x67\\x52\\x52\\x52\\\n\\x41\\x41\\x41\\x46\\x46\\x46\\x51\\x51\\x51\\x4d\\x4d\\x4d\\x8d\\x8d\\x8d\\xaa\\\n\\xaa\\xaa\\xae\\xae\\xae\\x97\\x97\\x97\\x71\\x71\\x71\\x78\\x78\\x78\\x4a\\x4a\\\n\\x4a\\x64\\x64\\x64\\x6b\\x6b\\x6b\\x60\\x63\\x6d\\x49\\x7b\\xd8\\x40\\x6e\\xd4\\\n\\x50\\x83\\xda\\x42\\x70\\xd5\\x61\\x92\\xde\\x32\\x59\\xcf\\x50\\x80\\xd9\\x3a\\\n\\x67\\xd1\\x5f\\x91\\xde\\x55\\x86\\xda\\x32\\x59\\xcd\\xff\\xff\\xff\\x0b\\xaa\\\n\\x5f\\x73\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x91\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x8d\\x8f\\xc7\\x12\\x82\\x00\\x0c\\x44\\x9f\\xbd\\\n\\x01\\x8a\\xd8\\x10\\x50\\x10\\x90\\xa6\\x80\\xbd\\xfe\\xff\\x77\\x89\\x65\\x84\\\n\\x83\\x07\\xf7\\x92\\xbc\\x9d\\xcd\\x24\\x81\\xbf\\x54\\x82\\x32\\x54\\xaa\\xb9\\\n\\x53\\xa3\\x4e\\xa3\\x59\\xcc\\xb4\\x68\\x77\\x72\\x12\\x44\\xa9\\x0b\\x92\\x28\\\n\\xbc\\xb1\\x27\\xf7\\x95\\xc1\\x90\\xd1\\x58\\x99\\xc8\\xbd\\xa7\\xa1\\x4e\\x35\\\n\\xdd\\x80\\x99\\xa1\\x6b\\x73\\x35\\x63\\xd3\\xc2\\xf8\\x8c\\x1a\\x58\\x66\\x56\\\n\\x16\\xd8\\x8e\\xbb\\x04\\xd7\\xb1\\xb3\\x3e\\x93\\xe7\\x07\\x61\\xb4\\x62\\x1d\\\n\\x85\\x81\\xef\\xbd\\x92\\x71\\x92\\xa6\\xb0\\x49\\xd3\\x24\\xfe\\x2e\\xde\\xee\\\n\\xd8\\x17\\xcf\\x3a\\x1c\\x39\\x71\\xce\\xf9\\x72\\x85\\x1b\\xdc\\x7f\\x3f\\xfa\\\n\\x00\\x3a\\x3f\\x0a\\xb2\\x6c\\x5c\\x8e\\x18\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\\n\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\\n\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x02\\xe0\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xf3\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xc7\\xc7\\xc7\\xc4\\xc4\\xc4\\xe5\\xe5\\xe5\\\n\\xe4\\xe4\\xe4\\xac\\xac\\xac\\xd1\\xd1\\xd1\\xce\\xce\\xce\\xca\\xca\\xca\\xc2\\\n\\xc2\\xc2\\xde\\xde\\xde\\xdd\\xdd\\xdd\\xb2\\xb2\\xb2\\xa7\\xa7\\xa7\\xa3\\xa3\\\n\\xa3\\xdc\\xdc\\xdc\\xed\\xed\\xed\\xdb\\xdb\\xdb\\xbe\\xbe\\xbe\\xd6\\xd6\\xd6\\\n\\xd4\\xd4\\xd4\\xb0\\xb0\\xb0\\xcb\\xcb\\xcb\\xe7\\xe7\\xe7\\xb7\\xb7\\xb7\\xd9\\\n\\xd9\\xd9\\xd2\\xd2\\xd2\\xc8\\xc8\\xc8\\x79\\x79\\x79\\xc5\\xc5\\xc5\\xcc\\xcc\\\n\\xcc\\xc9\\xc9\\xc9\\xba\\xba\\xba\\x9c\\x9c\\x9c\\xa1\\xa1\\xa1\\xc6\\xc6\\xc6\\\n\\xc1\\xc1\\xc1\\x89\\x89\\x89\\xc0\\xc0\\xc0\\xd8\\xd8\\xd8\\xcd\\xcd\\xcd\\xbc\\\n\\xbc\\xbc\\x82\\x82\\x82\\x8f\\x8f\\x8f\\xc3\\xc3\\xc3\\x8c\\x8c\\x8c\\x87\\x87\\\n\\x87\\x83\\x83\\x83\\xe9\\xe9\\xe9\\xa5\\xa5\\xa5\\x6b\\x6b\\x6b\\xbf\\xbf\\xbf\\\n\\xe2\\xe2\\xe2\\xb1\\xb1\\xb1\\xa8\\xa8\\xa8\\x61\\x61\\x61\\xa0\\xa0\\xa0\\xcf\\\n\\xcf\\xcf\\x9e\\x9e\\x9e\\xb9\\xb9\\xb9\\x64\\x64\\x64\\x58\\x58\\x58\\x53\\x53\\\n\\x53\\xaa\\xaa\\xaa\\xb5\\xb5\\xb5\\x69\\x69\\x69\\xa6\\xa6\\xa6\\xd5\\xd5\\xd5\\\n\\xbd\\xbd\\xbd\\x6e\\x6e\\x6e\\x85\\x85\\x85\\x6d\\x6d\\x6d\\x80\\x80\\x80\\x81\\\n\\x81\\x81\\x6f\\x6f\\x6f\\x62\\x62\\x62\\x4e\\x4e\\x4e\\x49\\x49\\x49\\x5b\\x5b\\\n\\x5b\\x51\\x51\\x51\\x00\\x00\\x00\\xbb\\xc2\\x93\\x20\\x00\\x00\\x00\\x01\\x74\\\n\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\\n\\x50\\xe3\\x6e\\x4c\\xbc\\x00\\x00\\x00\\xc7\\x49\\x44\\x41\\x54\\x18\\xd3\\x55\\\n\\x8f\\xe9\\x12\\xc1\\x40\\x10\\x84\\x67\\x97\\x60\\xdd\\x24\\x56\\x84\\x4d\\x90\\\n\\x20\\x71\\xc5\\x7d\\xc7\\x11\\xf7\\xfd\\xfe\\x6f\\x43\\x96\\x52\\xa5\\x7f\\x75\\\n\\x7f\\xd5\\x53\\x53\\x0d\\xf0\\x11\\xc2\\xf0\\x27\\xe4\\xf3\\x0b\\xbf\\x10\\x08\\\n\\x86\\x80\\x84\\x23\\x51\\x10\\x62\\x71\\x0e\\x12\\xc9\\x14\\x49\\x8b\\x52\\x46\\\n\\xa0\\x59\\x99\\x03\\x9c\\x90\\x72\\x29\\x51\\xca\\x29\\x34\\x5f\\xe0\\x80\\x49\\\n\\xaa\\x56\\x2c\\x95\\x89\\x6e\\xc8\\x95\\x77\\xcc\\xe3\\x6a\\xcd\\xb4\\xea\\x00\\\n\\x8d\\x26\\x31\\x5b\\x6d\\x1b\\x70\\x47\\xd4\\x82\\x5d\\xaf\\x29\\xe0\\xa2\\x1e\\\n\\xe9\\x41\\x7f\\xa0\\xe8\\xe6\\xd0\\x03\\x23\\x22\\x57\\x95\\x31\\xc4\\x1b\\x93\\\n\\xa9\\xae\\xce\\xde\\x27\\x86\\x35\\x5f\\x38\\x4b\\xaf\\xca\\x0c\\x86\\x56\\x31\\\n\\x23\\xbd\\x5e\\x6d\\xf8\\x17\\x77\\xcb\\x68\\x40\\x43\\x2a\\xdb\\xd1\\x3d\\x07\\\n\\x56\\xd8\\xb5\\x0f\\x98\\x1c\\xf7\\xae\\x72\\xe2\\xe0\\x7c\\x59\\x80\\x4d\\xd1\\\n\\x15\\x9c\\xdb\\xfd\\xb7\\xe7\\xbc\\x8b\\x3e\\xfe\\xe7\\x3a\\xcf\\xaf\\x79\\x01\\\n\\xb5\\x1e\\x14\\x39\\xfb\\x97\\xc5\\x70\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\\n\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\\n\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\\n\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\\n\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\\n\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\\n\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\\n\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\\n\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x82\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xe7\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xd5\\xd5\\xd5\\xd4\\xd4\\xd4\\xd2\\xd2\\xd2\\\n\\xd1\\xd1\\xd1\\xd0\\xd0\\xd0\\xce\\xce\\xce\\xcd\\xcd\\xcd\\xd3\\xd3\\xd3\\xfd\\\n\\xfd\\xfd\\xe4\\xe4\\xe4\\xe2\\xe2\\xe2\\xe0\\xe0\\xe0\\xcb\\xcb\\xcb\\xca\\xca\\\n\\xca\\xf3\\xf3\\xf3\\xfb\\xfb\\xfb\\xc7\\xc7\\xc7\\xc8\\xc8\\xc8\\xf7\\xf7\\xf7\\\n\\xe8\\xf3\\xfb\\xbd\\xe3\\xfd\\xde\\xde\\xde\\xc3\\xc3\\xc3\\xfc\\xfc\\xfc\\xea\\\n\\xf5\\xfd\\x8a\\xcf\\xfe\\x83\\xcc\\xff\\xbc\\xe2\\xfd\\xdc\\xdc\\xdc\\xc0\\xc0\\\n\\xc0\\xeb\\xeb\\xeb\\xfa\\xfa\\xfa\\xe7\\xf3\\xfb\\x89\\xce\\xfe\\x96\\xd4\\xff\\\n\\x9a\\xd5\\xff\\x8b\\xcf\\xff\\xda\\xda\\xda\\xbd\\xbd\\xbd\\xe9\\xe9\\xe9\\xd3\\\n\\xeb\\xfb\\x98\\xd4\\xff\\x9e\\xd7\\xff\\x9b\\xd6\\xff\\xd9\\xd9\\xd9\\xb9\\xb9\\\n\\xb9\\xe8\\xe8\\xe8\\xd6\\xec\\xfb\\x88\\xcd\\xfd\\x98\\xd5\\xff\\x89\\xce\\xff\\\n\\xba\\xe1\\xfd\\xd7\\xd7\\xd7\\xb5\\xb5\\xb5\\xe7\\xe7\\xe7\\x9c\\xd6\\xff\\x8e\\\n\\xd0\\xff\\x8d\\xcc\\xf7\\xfb\\xfc\\xfd\\xb7\\xb7\\xb7\\xbc\\xbc\\xbc\\xe5\\xe5\\\n\\xe5\\x86\\xcd\\xfd\\x8c\\xcf\\xff\\x97\\xd1\\xfa\\xf3\\xf7\\xf9\\xb8\\xb8\\xb8\\\n\\xd5\\xec\\xfb\\x97\\xd2\\xfd\\xf7\\xfb\\xfd\\xb4\\xb4\\xb4\\xb6\\xb6\\xb6\\xb1\\\n\\xb1\\xb1\\xd8\\xd8\\xd8\\xad\\xad\\xad\\xff\\xff\\xff\\xe7\\x34\\xef\\x8d\\x00\\\n\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\\n\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x9e\\x49\\x44\\x41\\\n\\x54\\x18\\xd3\\x5d\\xcc\\xd5\\x02\\x82\\x50\\x14\\x44\\xd1\\x63\\x81\\x23\\xa1\\\n\\xd8\\x0a\\x62\\x27\\x60\\x77\\x77\\xfe\\xff\\xff\\x28\\xd7\\x40\\xdd\\x6f\\xb3\\\n\\x1e\\x86\\x5c\\x6e\\x8f\\xd7\\xc7\\xf1\\xf4\\xc9\\x0f\\xbb\\x80\\x23\\x1e\\x08\\\n\\x9c\\x08\\x08\\xd2\\x1b\\x7c\\xe0\\x49\\x0e\\x86\\x20\\x2a\\x2f\\xe0\\x20\\xca\\\n\\xe1\\x48\\x34\\x86\\x78\\xe2\\x09\\x3c\\x90\\x8c\\xa4\\xd2\\xaa\\x86\\x8c\\xce\\\n\\x40\\xca\\x22\\x97\\x2f\\x14\\x4b\\x65\\x0d\\x95\\x2a\\x13\\xa5\\x86\\xba\\xda\\\n\\x30\\xcc\\x87\\x58\\x4d\\x26\\x89\\x16\\xda\\x9d\\xae\\x61\\xf6\\xfa\\x18\\x0c\\\n\\x99\\xe8\\x23\\x5b\\xc6\\x93\\xe9\\xcc\\x9a\\x3f\\x8f\\x17\\x4b\\xb4\\x57\\xeb\\\n\\xcd\\xf6\\xbd\\x89\\x76\\x01\\xec\\x0f\\x47\\x67\\x13\\x9d\\x04\\xc0\\x3a\\xd3\\\n\\x57\\x17\\xf1\\xfa\\xb3\\x89\\x6e\\x7f\\xfb\\xd3\\x1d\\xad\\x39\\x10\\x33\\x8f\\\n\\xdb\\xf9\\x68\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x34\\x2d\\x30\\\n\\x32\\x54\\x31\\x31\\x3a\\x33\\x36\\x3a\\x31\\x37\\x2b\\x30\\x32\\x3a\\x30\\x30\\\n\\x4d\\x80\\x66\\xe0\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x34\\x2d\\\n\\x30\\x32\\x54\\x31\\x31\\x3a\\x33\\x36\\x3a\\x31\\x37\\x2b\\x30\\x32\\x3a\\x30\\\n\\x30\\x3c\\xdd\\xde\\x5c\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\\n\\x82\\\n\\x00\\x00\\x03\\x6a\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x86\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x85\\x85\\x85\\x9e\\x9e\\x9e\\x7c\\x7c\\x7c\\\n\\x4c\\x4c\\x4c\\x91\\x91\\x91\\xe8\\xe8\\xe8\\xdd\\xdd\\xdd\\xc1\\xc1\\xc1\\x81\\\n\\x81\\x81\\x7b\\x7b\\x7b\\xd9\\xd9\\xd9\\xc4\\xc4\\xc4\\x73\\x73\\x73\\xd5\\xd5\\\n\\xd5\\x58\\x58\\x58\\x4b\\x4b\\x4b\\x65\\x65\\x65\\x92\\x92\\x92\\x79\\x79\\x79\\\n\\xa8\\xa8\\xa8\\x32\\x32\\x32\\x82\\x82\\x82\\x3f\\x3f\\x3f\\xbd\\xbd\\xbd\\xce\\\n\\xce\\xce\\xc2\\xc2\\xc2\\xad\\xad\\xad\\x67\\x67\\x67\\x52\\x52\\x52\\x41\\x41\\\n\\x41\\x6e\\x97\\xd4\\x7b\\x9e\\xd4\\x71\\x98\\xd0\\x82\\xa4\\xd6\\x68\\x8e\\xcd\\\n\\x69\\x90\\xcd\\x75\\x9a\\xd0\\x73\\x99\\xd1\\x62\\x8b\\xc8\\x4d\\x4d\\x4d\\x8d\\\n\\x8d\\x8d\\xaa\\xaa\\xaa\\xae\\xae\\xae\\x65\\x8d\\xcc\\xb0\\xcd\\xf3\\xff\\xff\\\n\\xff\\xb3\\xc7\\xe3\\xa1\\xbf\\xea\\x60\\x89\\xc9\\x4a\\x4a\\x4a\\x64\\x64\\x64\\\n\\x6b\\x6b\\x6b\\x5b\\x86\\xc7\\x9e\\xc0\\xef\\x6e\\x93\\xcc\\xf7\\xfb\\xff\\xf1\\\n\\xf8\\xff\\x8c\\xaf\\xe4\\x61\\x8a\\xc7\\x5d\\x88\\xc8\\xa1\\xbf\\xef\\xfa\\xfc\\\n\\xfd\\xfb\\xfc\\xfe\\xfd\\xfd\\xfe\\xfc\\xfd\\xfe\\xfa\\xfb\\xfd\\xfb\\xfc\\xfd\\\n\\x85\\xa8\\xdd\\x53\\x7f\\xc1\\x65\\x8d\\xca\\x99\\xb8\\xea\\x7e\\xa5\\xdd\\x80\\\n\\xa6\\xdd\\x7c\\xa3\\xdb\\x7a\\xa0\\xd9\\x79\\xa0\\xd9\\x78\\x9f\\xd8\\x78\\x9e\\\n\\xd8\\x5d\\x84\\xbf\\x61\\x8b\\xc9\\x92\\xb5\\xe6\\x81\\xa7\\xe2\\x81\\xa7\\xe1\\\n\\x7d\\xa3\\xde\\x7b\\xa1\\xdc\\x79\\x9f\\xdb\\x77\\x9e\\xd9\\x73\\x9a\\xd4\\x57\\\n\\x7e\\xbb\\x54\\x81\\xc4\\x97\\xb6\\xea\\xea\\xf3\\xf3\\xe6\\xf1\\xed\\xe6\\xf1\\\n\\xef\\xe6\\xf0\\xef\\xe5\\xf1\\xed\\xed\\xf5\\xf3\\x79\\x9c\\xd5\\x44\\x70\\xb0\\\n\\x51\\x7f\\xc3\\x9a\\xb6\\xef\\xe8\\xf3\\xea\\x84\\xbf\\x51\\x98\\xc9\\x6f\\x99\\\n\\xc9\\x71\\x84\\xbf\\x54\\xe9\\xf4\\xe4\\x7b\\x9c\\xdd\\x3a\\x69\\xaa\\x55\\x83\\\n\\xc6\\xba\\xce\\xef\\xff\\xff\\xdd\\xc7\\xee\\x87\\xd7\\xf4\\xa2\\xd7\\xf6\\xa2\\\n\\xc7\\xee\\x8c\\xff\\xff\\xe0\\x85\\xa2\\xdd\\x3e\\x6a\\xab\\x33\\x68\\xba\\x58\\\n\\x84\\xc3\\x68\\x8b\\xd3\\x70\\x8f\\xe1\\x6c\\x8d\\xdc\\x6d\\x8b\\xda\\x6e\\x8a\\\n\\xd7\\x6c\\x8b\\xcd\\x44\\x6d\\xab\\x2e\\x5f\\xa6\\x5f\\x7a\\xa1\\x13\\x00\\x00\\\n\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\\n\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xbe\\x49\\x44\\x41\\x54\\\n\\x18\\xd3\\x63\\x60\\x20\\x0a\\x30\\x32\\x31\\x33\\x30\\x30\\x33\\x31\\x42\\xb9\\\n\\x2c\\xac\\x6c\\xec\\x1c\\x9c\\x5c\\xdc\\xec\\x3c\\xac\\x2c\\x60\\x01\\x5e\\x3e\\\n\\x7e\\x01\\x41\\x21\\x61\\x41\\x01\\x7e\\x11\\x5e\\x10\\x5f\\x54\\x8c\\x81\\x41\\\n\\x5c\\x42\\x52\\x4a\\x5a\\x9c\\x81\\x41\\x4c\\x14\\x24\\x22\\xc3\\x20\\x2b\\x27\\\n\\xaf\\xa0\\xa8\\xa4\\xac\\xa2\\xaa\\xa6\\x0e\\x12\\xd0\\xd0\\xd4\\xd2\\xd6\\xd1\\\n\\xd5\\xd3\\xd7\\x03\\x02\\x03\\x43\\x90\\x88\\x91\\xb1\\x89\\xa9\\x99\\x9e\\xb9\\\n\\x9e\\x9e\\x85\\xa5\\x95\\x35\\xd4\\x26\\x1b\\x5b\\x3b\\x7b\\x07\\x47\\x27\\x67\\\n\\x17\\x57\\xa8\\x80\\x9b\\xbb\\x87\\xa7\\x97\\xb7\\x8f\\xaf\\x9f\\x3f\\x54\\x20\\\n\\x20\\x30\\x28\\x38\\x24\\x34\\x2c\\x3c\\x22\\x12\\x2a\\x10\\x15\\x1d\\x13\\x1b\\\n\\x17\\x9f\\x90\\x98\\x94\\x0c\\x15\\x48\\x49\\x4d\\x4b\\xcf\\xc8\\xcc\\xca\\xce\\\n\\xc9\\x85\\x0a\\xe4\\xe5\\x17\\x14\\x16\\x15\\x97\\x94\\x96\\x95\\x43\\x05\\x2a\\\n\\x2a\\xab\\xaa\\x6b\\x6a\\xeb\\xea\\x1b\\x1a\\x01\\x2e\\xf3\\x22\\x99\\x7c\\xc0\\\n\\xb2\\x25\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\\n\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\\n\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\\n\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x39\\x54\\x31\\x31\\x3a\\x30\\x35\\x3a\\\n\\x31\\x33\\x2b\\x30\\x31\\x3a\\x30\\x30\\x0c\\xa5\\x3d\\x99\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\\n\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x39\\x54\\x31\\x31\\x3a\\x30\\x35\\\n\\x3a\\x31\\x33\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7d\\xf8\\x85\\x25\\x00\\x00\\x00\\\n\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x38\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x4a\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xae\\xc6\\xe3\\xc8\\xd0\\xdb\\xd3\\xd5\\xd7\\\n\\xd2\\xd4\\xd6\\xc4\\xcd\\xd8\\xaa\\xc1\\xdf\\xa8\\xc3\\xe6\\xd2\\xd7\\xdd\\xe8\\\n\\xec\\xf1\\xf3\\xf6\\xfa\\xfb\\xfd\\xfe\\xf2\\xf5\\xf9\\xe5\\xe9\\xee\\xc7\\xcd\\\n\\xd4\\x9f\\xba\\xdd\\xd4\\xd8\\xde\\xf7\\xf8\\xfb\\xff\\xff\\xff\\xf6\\xf9\\xfc\\\n\\xee\\xf3\\xfa\\xed\\xf3\\xfa\\xf4\\xf8\\xfc\\xf3\\xf6\\xf9\\xc4\\xca\\xd1\\x9c\\\n\\xb7\\xda\\xeb\\xf1\\xf9\\xe3\\xec\\xf7\\xe8\\xef\\xf9\\xe6\\xef\\xf8\\xdf\\xe9\\\n\\xf6\\xba\\xbf\\xc7\\xae\\xc5\\xe2\\x59\\x8c\\xcd\\x58\\x8b\\xcb\\xd8\\xdf\\xe7\\\n\\x94\\xab\\xc8\\xc7\\xcf\\xda\\xe1\\xeb\\xf7\\x53\\x84\\xc3\\xe5\\xee\\xf8\\xdd\\\n\\xe8\\xf6\\x4e\\x7b\\xb4\\xf1\\xf5\\xfb\\xea\\xef\\xf6\\xa0\\xa9\\xb4\\xd1\\xd3\\\n\\xd5\\xe9\\xf0\\xf9\\x52\\x83\\xc0\\x52\\x83\\xc1\\x4d\\x7a\\xb3\\x4d\\x7a\\xb4\\\n\\x57\\x8a\\xca\\xf9\\xfb\\xfd\\xa5\\xa7\\xa9\\xd0\\xd2\\xd4\\xec\\xf2\\xfa\\x5a\\\n\\x8e\\xd1\\x51\\x80\\xbd\\x55\\x86\\xc5\\x50\\x7e\\xb9\\x56\\x88\\xc8\\xf1\\xf5\\\n\\xfa\\xa0\\xa2\\xa4\\xc2\\xcb\\xd6\\xef\\xf3\\xf8\\xf2\\xf6\\xfb\\xe4\\xed\\xf7\\\n\\x59\\x8d\\xd0\\x59\\x8c\\xcf\\xe0\\xea\\xf6\\x58\\x8b\\xcd\\xdc\\xe7\\xf5\\xdb\\\n\\xe4\\xef\\x94\\x9c\\xa7\\xa7\\xbe\\xdc\\xe1\\xe5\\xec\\xfe\\xfe\\xff\\x5c\\x90\\\n\\xd2\\x5b\\x8f\\xd1\\xda\\xe5\\xf5\\xfa\\xfc\\xfe\\xbf\\xc9\\xd6\\x81\\x98\\xb6\\\n\\xbe\\xc3\\xca\\xed\\xf1\\xf7\\xdb\\xe6\\xf5\\xdc\\xe4\\xef\\x92\\x9a\\xa3\\x94\\\n\\xb0\\xd2\\xb3\\xbb\\xc3\\xe8\\xee\\xf4\\xef\\xf4\\xfb\\xdb\\xe4\\xee\\x91\\x9c\\\n\\xa8\\x79\\x94\\xb7\\x8c\\xa7\\xca\\xa3\\xab\\xb3\\xc8\\xd1\\xdc\\xe1\\xe8\\xf1\\\n\\xd6\\xe0\\xed\\xb8\\xc3\\xd2\\x8c\\x94\\x9f\\x77\\x92\\xb5\\x83\\x9b\\xb8\\x8e\\\n\\x97\\xa2\\x94\\x96\\x98\\x90\\x92\\x95\\x88\\x91\\x9c\\x79\\x91\\xae\\x9d\\x63\\\n\\xc3\\x79\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xc8\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x0a\\x18\\x99\\x98\\x59\\x58\\xd9\\\n\\xe0\\x5c\\x76\\x0e\\x4e\\x2e\\x6e\\x6e\\x1e\\x5e\\x3e\\x7e\\x28\\x5f\\x40\\x50\\\n\\x48\\x58\\x44\\x54\\x4c\\x48\\x5c\\x42\\x12\\x2c\\xc0\\x21\\x28\\x24\\x25\\x2d\\\n\\x23\\x23\\x2b\\x27\\x24\\x2e\\x0f\\xe2\\x2b\\x70\\x02\\xf9\\x8a\\x40\\xbe\\x92\\\n\\xb4\\x90\\xb2\\x0a\\x50\\x40\\x95\\x4b\\x4c\\x4d\\x5d\\x51\\x43\\x53\\x4b\\x49\\\n\\x4d\\x5b\\x47\\x17\\x28\\xa0\\xc7\\xad\\x6f\\x60\\xa8\\x24\\x67\\x64\\x6c\\x22\\\n\\x27\\x6d\\x6a\\x06\\x14\\x30\\xe7\\xb6\\xb0\\xb4\\x52\\xd2\\xb7\\xb6\\xb1\\xd5\\\n\\x54\\xb3\\xb3\\x07\\x0a\\x38\\x38\\x3a\\x39\\xbb\\xb8\\xba\\xa9\\x29\\xb9\\x7b\\\n\\x88\\x78\\x7a\\x01\\x05\\xbc\\x7d\\x7c\\xd5\\xa4\\xfd\\x34\\x35\\xe5\\xfc\\x03\\\n\\x02\\x83\\x82\\x41\\xd6\\x84\\x84\\x0a\\x69\\xba\\x79\\x84\\x05\\x84\\xf9\\x86\\\n\\x47\\x80\\xdd\\x11\\x19\\x15\\xed\\x1b\\xa3\\xe6\\x26\\x1a\\x18\\x1b\\x17\\x0f\\\n\\x71\\x6a\\x42\\x62\\x52\\xb2\\x93\\x48\\x4a\\x6a\\x5a\\x3a\\xdc\\x37\\x19\\x99\\\n\\x59\\xd9\\x39\\xb9\\xd8\\x3d\\x0e\\x00\\x5b\\x1e\\x1e\\xca\\x83\\x2b\\xb9\\x5b\\\n\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\\n\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\\n\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\\n\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\xcb\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x06\\x00\\x00\\x00\\x1f\\xf3\\xff\\x61\\\n\\x00\\x00\\x00\\x01\\x73\\x52\\x47\\x42\\x00\\xae\\xce\\x1c\\xe9\\x00\\x00\\x00\\\n\\x06\\x62\\x4b\\x47\\x44\\x00\\xff\\x00\\xff\\x00\\xff\\xa0\\xbd\\xa7\\x93\\x00\\\n\\x00\\x00\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0b\\x13\\x00\\x00\\x0b\\x13\\x01\\\n\\x00\\x9a\\x9c\\x18\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\xde\\x01\\x08\\\n\\x0f\\x12\\x1d\\x0c\\x9a\\x8d\\x97\\x00\\x00\\x03\\x4b\\x49\\x44\\x41\\x54\\x38\\\n\\xcb\\x75\\xd3\\xdf\\x6b\\x5b\\x65\\x18\\x07\\xf0\\xef\\xfb\\x9e\\x93\\x93\\xa6\\\n\\x27\\xe7\\x9c\\xa4\\x4b\\x9a\\x26\\x69\\x92\\xad\\xab\\x26\\xab\\x8b\\x96\\x8a\\\n\\xe0\\x45\\xb5\\x55\\xb7\\x31\\x26\\x74\\x4c\\x6f\\xc2\\x44\\xb1\\x10\\x41\\x84\\\n\\x39\\x10\\x04\\xd1\\x9b\\x0d\\xac\\x58\\xf5\\x62\\x37\\xdb\\x2a\\xea\\x04\\xff\\\n\\x80\\xf4\\xc2\\x5a\\xa6\\xe2\\x48\\x29\\xdd\\x74\\xae\\x4c\\x10\\xc7\\xda\\x15\\\n\\x6b\\x9a\\x1f\\xa7\\x27\\xe7\\xb4\\xcd\\x8f\\xf3\\xa6\\xcd\\x31\\x3d\\xf1\\x42\\\n\\x18\\x5b\\xc5\\x2f\\x3c\\x77\\xcf\\xf7\\xc3\\x73\\xf3\\x90\\x76\\xbb\\x8d\\xbd\\\n\\xf9\\xf6\\xed\\xc3\\x02\\xe1\\xe8\\x2a\\xe5\\x48\\x17\\xe5\\x29\\x38\\x8e\\x6e\\\n\\x82\\xa7\\x07\\x8e\\x9e\\xff\\xd5\\xda\\xbb\\x4b\\xf6\\x02\\x33\\x67\\x93\\x02\\\n\\x75\\xd0\\xb2\\xd4\\x13\\x52\\xe4\\x70\\x1f\\x08\\xc7\\x83\\x95\\xf3\\x60\\x5b\\\n\\xa5\\x2a\\x28\\xe9\\x3e\\xf2\\xc1\\x0d\\xeb\\x7f\\x81\\xd9\\x77\\x9e\\x10\\xa8\\\n\\x83\\x96\\xdd\\x81\\xb0\\xa2\\x44\\x1e\\x01\\x40\\x00\\xca\\x81\\x70\\x02\\xaa\\\n\\xeb\\x2b\\xa8\\xeb\\xf9\\xaa\\xbd\\x8b\\xee\\x13\\xe7\\xae\\x5b\\xff\\x01\\x66\\\n\\xdf\\x1d\\x14\\x38\\x07\\xd5\\xdd\\x81\\x5e\\x59\\x09\\x3f\\x8a\\xba\\xb6\\x0a\\\n\\x73\\x4b\\x43\\x9b\\x12\\xb8\\x3c\\x21\\x48\\x81\\x38\\x36\\x8a\\x77\\x51\\x59\\\n\\xcf\\xd7\\xfe\\xb6\\x6c\\x7f\\xea\\xb3\\x5f\\x2c\\x00\\xa0\\x00\\xf0\\xfd\\x7b\\\n\\x43\\x82\\x43\\xe0\\x75\\xb9\\x27\\x26\\x2b\\x91\\x43\\xa8\\x97\\x73\\x68\\xb0\\\n\\x2d\\x84\\x4f\\x5d\\x46\\xef\\xc9\\x4b\\xa8\\x6d\\xea\\x30\\x72\\x77\\x21\\xfa\\\n\\xfa\\x20\\x88\\x3d\\xf2\\x36\\xdb\\xd5\\x2f\\x8f\\x0f\\x09\\x00\\x40\\x7e\\x78\\\n\\x7f\\x48\\x00\\x4f\\x75\\xb7\\x3f\\x2a\\x4b\\xe1\\x38\\xaa\\xda\\x0a\\x1a\\x95\\\n\\x0d\\x74\\x1d\\xf9\\x18\\x07\\xfa\\x0e\\x82\\x52\\x8a\\x0d\\xa3\\x8c\\x9b\\x5f\\\n\\xa4\\xd1\\xd1\\xe9\\x81\\x12\\x8a\\xa2\\x78\\x6f\\x05\\xda\\x6a\\xa9\\xd6\\xdc\\\n\\xd9\\xf5\\x53\\xe2\\xe0\\xe7\\xdc\\x81\\x98\\x2c\\xf5\\x26\\x50\\xd5\\xfe\\x44\\\n\\xa3\\xb2\\x89\\xee\\xe3\\x9f\\xa2\\xef\\x60\\x3f\\x28\\xa5\\x00\\x80\\x7d\\xbe\\\n\\x6e\\x3c\\x95\\xfe\\x12\\x5a\\x41\\xc7\\xda\\x9d\\x25\\x28\\x01\\x3f\\x5c\\x1e\\\n\\x45\\x6e\\xb0\\xd6\\x1c\\xf9\\xf1\\xc3\\xa7\\x8f\\xb7\\x41\\xbe\\xeb\\xe8\\x8a\\\n\\xd2\\x6a\\x59\\x6d\\x27\\x5f\\xbb\\x42\\x24\\xc5\\x7b\\xbf\\xfc\\x60\\xcc\\x5a\\\n\\x05\\x57\\xde\\x1a\\x83\\xe2\\x93\\xa0\\xad\\xea\\x36\\x80\\x17\\xb9\\x6f\\x7e\\\n\\xca\\xaf\\x2c\\x5d\\xfb\\xea\\x26\\x33\\x2b\\xfb\\xff\\xf2\\xbc\\x14\\x7d\\x76\\\n\\xf4\\x79\\x62\\xdb\\x36\\x26\\x26\\x26\\xb0\\xb0\\xb0\\x70\\x7f\\x86\\x87\\x87\\\n\\x21\\xba\\x25\\xfc\\x6e\\x58\\xd0\\x6e\\xfd\\xfc\\x07\\x69\\xdb\\xaf\\x7f\\x34\\\n\\xb7\\x7c\\x95\\x02\\xc0\\x89\\x73\\xd7\\xaf\\x9e\\x3c\\x7f\\xe3\\x19\\xab\\x65\\\n\\xb3\\x7a\\xbd\\x8e\\xf9\\xf9\\x79\\x78\\x3c\\x1e\\x24\\x12\\x09\\xb8\\x5c\\x2e\\\n\\x10\\x42\\x60\\x9a\\x26\\xa6\\xa6\\xa6\\xe0\\xdd\\xe7\\x83\\xf4\\xc2\\xe9\\x48\\\n\\xf5\\xf0\\xd1\\xe4\\xc8\\xc8\\x88\\xc8\\x3f\\x78\\xe2\\xce\\xce\\x0e\\x32\\x99\\\n\\x0c\\x2c\\xcb\\x42\\x3a\\x9d\\x06\\x63\\x0c\\x85\\x42\\x01\\xd9\\x6c\\x16\\x33\\\n\\x33\\x33\\x18\\x1b\\x1b\\x03\\xc7\\x71\\x50\\x55\\x55\\x5e\\x5c\\x5c\\xfc\\x64\\\n\\x6d\\x6d\\xcd\\x4f\\xce\\x5c\\x1b\\x7f\\x9c\\xd5\\xb7\\x93\\x66\\x85\\x8d\\xb3\\\n\\xdb\\xcd\\xe7\\x1e\\xeb\\x18\\xa4\\xa9\\x57\\x5e\\xc5\\xc5\\x0b\\x17\\xa0\\x69\\\n\\x1a\\x82\\xc1\\x20\\x92\\xc9\\x24\\x54\\x55\\x85\\x61\\x18\\x28\\xa9\\x25\\xb8\\\n\\xa3\\x9d\\xe6\\x99\\xd3\\x67\\xdd\\x99\\xe9\\x4c\\x83\\x67\\xf5\\xed\\x59\\x99\\\n\\x93\\xc3\\xe1\\x68\\x08\\xbf\\x2d\\xde\\x81\\xd8\\x29\\x02\\x00\\x22\\x91\\x08\\\n\\x72\\xb9\\x1c\\x52\\xa9\\x14\\xbc\\x5e\\x2f\\x4c\\xd3\\x84\\xae\\xeb\\xb8\\xf4\\\n\\xf9\\x45\\x3c\\xf9\\x72\\xc2\\x0d\\x00\\x92\\x2c\\x75\\xf2\\x66\\x85\\xdd\\x53\\\n\\x2b\\x9a\\x5d\\xdb\\x32\\x8b\\xad\\x12\\x06\\x0b\\xcd\\x82\\x13\\x00\\xc9\\xe5\\\n\\x72\\xb0\\x6d\\x1b\\x93\\x93\\x93\\x10\\xc5\\x7f\\x51\\xc6\\x18\\xec\\x56\\x1b\\\n\\xb7\\xbf\\x5e\\xaa\\x1e\\x7b\\x13\\x4a\\xb1\\x54\\x6c\\x3d\\xf4\\x0b\\x03\\x03\\\n\\x03\\x87\\xfa\\xfb\\xfb\\x33\\xa3\\xa3\\xa3\\x3d\\x91\\x48\\xc4\\xe6\\x79\\xbe\\\n\\x4b\\xd3\\x34\\x2c\\x2f\\x2f\\xc3\\xe9\\x74\\x22\\x16\\x8b\\x21\\x10\\x08\\xa0\\\n\\xd5\\x6a\\x6d\\xe6\\xf3\\x79\\x9a\\xcd\\x66\\xd7\\x1f\\x02\\xe2\\xf1\\x38\\x17\\\n\\x0c\\x06\\x93\\xa2\\x28\\x4e\\x87\\x42\\x21\\xbf\\xd3\\xe9\\xe4\\x00\\x50\\xc3\\\n\\x30\\xde\\x00\\x50\\xf4\\xf9\\x7c\\xd3\\x00\\x1c\\xcd\\x66\\x73\\xb7\\x54\\x2a\\\n\\xe9\\x8c\\xb1\\x53\\xff\\x00\\x7e\\xd2\\x6c\\x06\\xaf\\xec\\x8e\\x25\\x00\\x00\\\n\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x3b\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x5c\\\n\\x50\\x4c\\x54\\x45\\xff\\x71\\x34\\xff\\x81\\x00\\xff\\x85\\x00\\xff\\x87\\x00\\\n\\xff\\x89\\x00\\xff\\x8b\\x00\\xff\\x6d\\x00\\xff\\xa6\\x41\\xff\\xbd\\x74\\xff\\\n\\xc0\\x79\\xff\\xc2\\x7d\\xff\\xc3\\x7e\\xff\\xc5\\x7f\\xff\\xc6\\x81\\xff\\xc8\\\n\\x82\\xff\\xca\\x83\\xff\\xca\\x86\\xff\\xcb\\x86\\xff\\xcc\\x86\\xff\\xcb\\x83\\\n\\xff\\xb1\\x4e\\xff\\x67\\x00\\xff\\xb6\\x77\\xff\\xaf\\x58\\xff\\xa7\\x52\\xff\\\n\\xa9\\x54\\xff\\xac\\x56\\xff\\xac\\x58\\xff\\xb0\\x5a\\xff\\xaf\\x59\\xff\\xbb\\\n\\x6d\\xff\\xc7\\x80\\xff\\x7d\\x00\\xf4\\xf7\\xfb\\xff\\xb1\\x64\\xff\\xae\\x58\\\n\\xff\\xaf\\x5a\\xff\\xaa\\x55\\xff\\xc3\\x80\\xff\\x7b\\x00\\xff\\x83\\x00\\xff\\\n\\xc1\\x7d\\xff\\xa2\\x50\\xff\\xbf\\x7a\\xff\\x75\\x00\\xff\\xa4\\x4f\\xff\\x9c\\\n\\x49\\xff\\xba\\x77\\xff\\xc5\\x7e\\xff\\xbc\\x84\\xff\\xc0\\x84\\xff\\x9b\\x49\\\n\\xff\\x94\\x45\\xff\\xb5\\x73\\xff\\xc5\\x81\\xff\\xbd\\x84\\xff\\x8c\\x40\\xff\\\n\\xb0\\x70\\xff\\x5f\\x00\\xff\\xab\\x55\\xff\\xc6\\x9c\\xff\\x84\\x3c\\xff\\xab\\\n\\x6e\\xff\\x59\\x00\\xff\\xc8\\x83\\xff\\xaa\\x57\\xff\\x7b\\x38\\xff\\xa5\\x6b\\\n\\xff\\x53\\x00\\xff\\xc8\\x84\\xff\\xad\\x56\\xff\\x8c\\x55\\xff\\xa1\\x68\\xff\\\n\\x4d\\x00\\xff\\xc2\\x82\\xff\\x9d\\x67\\xff\\x47\\x00\\xff\\xca\\x84\\xff\\xb9\\\n\\x6d\\xff\\x9a\\x64\\xff\\x43\\x00\\xff\\xc9\\x80\\xff\\xb9\\x6a\\xff\\xb2\\x67\\\n\\xff\\xb7\\x76\\xff\\x99\\x47\\xff\\x92\\x43\\xff\\x8a\\x3f\\xff\\xa0\\x66\\xff\\\n\\x9b\\x62\\xff\\x7d\\x46\\xff\\x8a\\x58\\xff\\x86\\x55\\xff\\x93\\x60\\xff\\x45\\\n\\x00\\xff\\x65\\x00\\xff\\xaf\\x49\\xff\\xc1\\x7e\\xff\\xbe\\x79\\xff\\xb9\\x76\\\n\\xff\\xb4\\x73\\xff\\xaf\\x70\\xff\\xa9\\x6d\\xff\\xa4\\x6a\\xff\\xa0\\x67\\xff\\\n\\x71\\x33\\xff\\x4b\\x00\\xff\\x77\\x00\\xff\\x71\\x00\\xff\\x69\\x00\\xff\\x63\\\n\\x00\\xff\\x5d\\x00\\xff\\x55\\x00\\xff\\x51\\x00\\xff\\x41\\x00\\xff\\x71\\x34\\\n\\xc5\\x4c\\x42\\x47\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\\n\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\\n\\x00\\xe2\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x60\\x64\\x62\\x62\\x62\\x66\\\n\\x61\\x61\\x61\\x05\\x02\\x66\\x36\\x06\\x06\\x46\\x76\\x0e\\x4e\\x2e\\x6e\\x1e\\\n\\x5e\\x3e\\x7e\\x01\\x41\\x21\\x61\\x11\\x51\\x06\\x26\\x0e\\x31\\x71\\x71\\x71\\\n\\x09\\x49\\x29\\x69\\x71\\x19\\x59\\x39\\x79\\x05\\x06\\x26\\x4e\\x45\\x45\\xa0\\\n\\x88\\xb8\\x92\\xb2\\xa2\\xa2\\x8a\\xaa\\x9a\\x3a\\x83\\x86\\x26\\x44\\x40\\x5c\\\n\\x5c\\x51\\x51\\x55\\x4b\\x5b\\x87\\x81\\x89\\x5b\\x17\\x22\\xa2\\xa8\\x28\\xa9\\\n\\xa5\\xa7\\xcf\\xc6\\xc0\\x6c\\x60\\x08\\x13\\x30\\x32\\x36\\x31\\x05\\x1a\\x6a\\\n\\x66\\x2e\\x0e\\x12\\x01\\x8b\\x5a\\x58\\x5a\\x31\\x30\\xf3\\x5a\\xc3\\x05\\x6c\\\n\\x6c\\xed\\xec\\x19\\x58\\x1c\\x1c\\x41\\x3c\\xb0\\x02\\x23\\x27\\x67\\x17\\x06\\\n\\x66\\x57\\x37\\xb8\\x80\\xb8\\xbb\\x87\\x27\\x03\\x33\\xbf\\x97\\x38\\xd4\\x04\\\n\\x23\\x71\\x27\\x6f\\x1f\\x06\\x66\\x5f\\x3f\\x98\\x80\\xb8\\xb8\\x93\\x7f\\x00\\\n\\x03\\x63\\x60\\x50\\x70\\x48\\x68\\x58\\x78\\x44\\xa4\\x78\\x54\\x74\\x4c\\x6c\\\n\\x1c\\x43\\x7c\\x82\\x41\\x62\\x52\\x72\\x4a\\x6a\\x5a\\x7a\\x86\\xb7\\x7f\\x6c\\\n\\x66\\x16\\x03\\x83\\x55\\xb6\\x4e\\x4e\\x6e\\x5e\\x7e\\x41\\x61\\x96\\x4f\\x51\\\n\\x5c\\x16\\x03\\x00\\xe9\\x16\\x28\\x55\\x79\\x6b\\x39\\xf8\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\\n\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\\n\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\\n\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\\n\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\\n\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x08\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x90\\\n\\x50\\x4c\\x54\\x45\\x00\\x00\\x00\\x7b\\xa7\\xdc\\x66\\x8b\\xc0\\x7a\\xa4\\xdb\\\n\\xff\\xff\\xff\\x63\\x87\\xbd\\x79\\xa3\\xd9\\xf9\\xfb\\xfc\\xf8\\xfb\\xfc\\x33\\\n\\x34\\x36\\x60\\x85\\xba\\x79\\xa2\\xd8\\xfa\\xfd\\xfd\\xfa\\xfc\\xfc\\x5e\\x81\\\n\\xb7\\x76\\xa0\\xd5\\xfc\\xfd\\xfd\\x5c\\x7e\\xb5\\x75\\x9e\\xd4\\xfc\\xfe\\xfe\\\n\\xfb\\xfd\\xfd\\x5a\\x7c\\xb2\\x73\\x9c\\xd1\\x58\\x7a\\xb0\\x6f\\x97\\xcc\\xfc\\\n\\xff\\xff\\xfd\\xff\\xff\\x54\\x75\\xac\\x6e\\x94\\xca\\xfe\\xff\\xff\\xfa\\xfe\\\n\\xfe\\xf9\\xfc\\xfc\\x53\\x73\\xaa\\x6c\\x92\\xc8\\xfc\\xfc\\xfc\\x51\\x72\\xa9\\\n\\x51\\x71\\xa9\\x68\\x8e\\xc3\\x64\\x88\\xbe\\x61\\x85\\xbb\\x5f\\x83\\xb9\\x5c\\\n\\x7e\\xb4\\x58\\x7b\\xb1\\x57\\x79\\xae\\x56\\x76\\xad\\x54\\x75\\xab\\x53\\x73\\\n\\xa9\\x00\\x00\\x00\\x67\\x14\\x96\\xea\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\x7b\\x49\\x44\\x41\\x54\\x18\\xd3\\x75\\x8f\\xd9\\x12\\\n\\xc1\\x40\\x10\\x45\\x8f\\xb8\\xc4\\x2e\\x8c\\xd8\\x25\\xc8\\xd8\\x97\\xff\\xff\\\n\\x3c\\x32\\x18\\xfb\\x79\\xe8\\xaa\\x3e\\x75\\xeb\\x56\\x37\\x7c\\x52\\x78\\x23\\\n\\x80\\xa2\\x5e\\x29\\x41\\x59\\x61\\x45\\xd5\\x9c\\x5c\\xd4\\xa0\\xae\\x46\\xd3\\\n\\x2d\\x6e\\xb4\\xa0\\xad\\x48\\x4f\\xd1\\xf9\\x93\\xb8\\x75\\xdc\\x13\\x5d\\x99\\\n\\x5e\\xa4\\x47\\x22\\x86\\xbe\\x8c\\x91\\x17\\x83\\x1f\\x62\\xa8\\xd1\\xd8\\xef\\\n\\x9a\\xc0\\x54\\x9a\\xb9\\x52\\x25\\x49\\xaa\\x39\\x2c\\xae\\x7e\\xe9\\x4f\\xcf\\\n\\xc0\\xae\\x82\\xf5\\x66\\xbb\\x8b\\xf7\\x87\\xe3\\xe9\\x6c\\xed\\xd7\\xf3\\x5c\\\n\\x00\\x3f\\x34\\x08\\x69\\x85\\x05\\x61\\x56\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x35\\x35\\x3a\\x30\\x34\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x00\\xcd\\xd9\\xaa\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x32\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x35\\x35\\x3a\\x30\\\n\\x34\\x2b\\x30\\x31\\x3a\\x30\\x30\\x71\\x90\\x61\\x16\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x49\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x5c\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xa2\\xc1\\xef\\x9f\\xc0\\xed\\x9d\\xbe\\xeb\\\n\\x9a\\xbc\\xeb\\x96\\xba\\xe9\\x93\\xb7\\xe7\\x90\\xb5\\xe6\\x8c\\xb2\\xe4\\x88\\\n\\xaf\\xe2\\x84\\xac\\xe0\\x80\\xa9\\xdd\\x7d\\xa5\\xdc\\x7a\\xa3\\xda\\xa1\\xc1\\\n\\xee\\xf4\\xf7\\xfb\\x74\\xa0\\xd7\\x9e\\xbf\\xec\\xa5\\xd5\\x9c\\xa1\\xd3\\x98\\\n\\x9d\\xd0\\x94\\x98\\xce\\x90\\x93\\xcb\\x8b\\x8e\\xc9\\x87\\x89\\xc6\\x82\\x84\\\n\\xc3\\x7e\\x80\\xc1\\x7a\\x7c\\xbe\\x76\\x6f\\x9b\\xd4\\x9b\\xbd\\xeb\\xff\\xff\\\n\\xff\\x6a\\x97\\xd1\\x98\\xba\\xe9\\xa6\\xc3\\xe9\\x64\\x93\\xce\\x94\\xb7\\xe7\\\n\\xa9\\xc4\\xe8\\xac\\xc7\\xe8\\xeb\\xf1\\xf7\\x5f\\x8f\\xcb\\x8f\\xb4\\xe5\\xf2\\\n\\xf6\\xfa\\xaa\\xc6\\xe9\\xac\\xc6\\xe9\\xac\\xc7\\xea\\xad\\xc7\\xe9\\xae\\xc9\\\n\\xe9\\xb0\\xc9\\xe9\\xb0\\xc8\\xe8\\xb5\\xcc\\xe8\\xde\\xe7\\xf2\\x59\\x8a\\xc8\\\n\\x8c\\xb1\\xe3\\xf1\\xf6\\xfa\\xae\\xc9\\xea\\xb0\\xc9\\xea\\xdb\\xe5\\xf1\\x55\\\n\\x86\\xc6\\x87\\xae\\xe1\\xf0\\xf4\\xfa\\xb2\\xcb\\xea\\xb3\\xcc\\xea\\xb7\\xce\\\n\\xea\\x8e\\xae\\xa2\\x71\\x97\\x5f\\x66\\x8e\\x4f\\x5f\\x89\\x49\\x4f\\x7f\\x7b\\\n\\x82\\xaa\\xdf\\xef\\xf3\\xf9\\xbb\\xd0\\xeb\\x91\\xaf\\x9d\\x81\\xab\\x61\\xb4\\\n\\xd4\\x95\\xd0\\xe6\\xba\\x8f\\xbb\\x6a\\x57\\x8f\\x2d\\x37\\x6b\\x19\\x7e\\xa8\\\n\\xdd\\xba\\xd0\\xeb\\xbd\\xd1\\xeb\\x60\\x89\\x49\\xb1\\xd3\\x90\\xb1\\xd6\\x92\\\n\\x8c\\xbc\\x65\\x8f\\xbc\\x67\\x7a\\xa4\\xd9\\xee\\xf3\\xf9\\xbe\\xd2\\xeb\\xbf\\\n\\xd3\\xeb\\x4c\\x7b\\x31\\xb6\\xd4\\x9c\\xb2\\xd2\\x95\\x75\\xa1\\xd7\\xed\\xf2\\\n\\xf8\\xea\\xf0\\xf7\\xe6\\xed\\xf6\\xe2\\xea\\xf4\\xde\\xe7\\xf3\\xdb\\xe4\\xf1\\\n\\xd8\\xe2\\xf0\\x3e\\x70\\x22\\x8b\\xba\\x62\\x87\\xba\\x60\\x87\\xb9\\x60\\x72\\\n\\x9e\\xd6\\x6e\\x99\\xd3\\x68\\x96\\xd1\\x63\\x92\\xce\\x5e\\x8e\\xcb\\x5b\\x8a\\\n\\xc9\\x56\\x87\\xc7\\x52\\x84\\xc3\\x44\\x77\\x6b\\x53\\x8c\\x28\\x8d\\xba\\x64\\\n\\x43\\xaa\\x7a\\x07\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\\n\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\\n\\x00\\xc7\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x04\\x8c\\x4c\\xcc\\x2c\\\n\\xac\\x6c\\xec\\x1c\\x9c\\x5c\\xdc\\x3c\\xbc\\x40\\x3e\\x1f\\x3f\\x12\\x10\\x00\\\n\\x0a\\x08\\xf2\\x0b\\x09\\x8b\\x88\\x8a\\x89\\x4b\\x48\\x4a\\x49\\xf3\\xcb\\x00\\\n\\x05\\x64\\xf9\\xe5\\xe0\\x80\\x5f\\x1e\\x28\\xa0\\xc0\\xaf\\x08\\x07\\xfc\\x4a\\\n\\x40\\x01\\x65\\x7e\\x45\\x39\\x15\\xa0\\xac\\x2a\\x10\\xab\\xa9\\x03\\x05\\x34\\\n\\x34\\xb5\\xb4\\x75\\x74\\xf5\\xf4\\x55\\xf5\\x0d\\x0c\\x8d\\x8c\\x81\\x02\\x26\\\n\\xa6\\x66\\x72\\xe6\\x50\\x15\\x16\\x96\\x40\\x01\\x2b\\x6b\\x1b\\x5b\\x20\\xb0\\\n\\x53\\xb5\\x77\\x70\\x74\\x72\\x06\\x0a\\xb8\\xb8\\xda\\xc9\\xb9\\x01\\x65\\xdd\\\n\\x3d\\x3c\\xbd\\xbc\\x7d\\x7c\\x19\\x18\\xfc\\x5c\\xfd\\xdd\\x80\\x20\\x20\\x30\\\n\\x28\\x58\\x2e\\x24\\x14\\x28\\x10\\x16\\x1e\\x21\\x17\\x09\\x54\\x11\\x15\\x0d\\\n\\x24\\x62\\x80\\x02\\xb1\\x71\\xf1\\x09\\x89\\x49\\xc9\\x29\\xa9\\x69\\xe9\\x72\\\n\\x19\\x20\\x15\\x99\\x59\\xd9\\x39\\xb9\\x79\\xf9\\x05\\x85\\x45\\xc5\\x31\\xc5\\\n\\x45\\xbe\\x48\\xbe\\xf6\\x05\\x01\\x06\\x00\\x4e\\x6c\\x27\\xda\\x78\\x70\\x82\\\n\\x14\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\\n\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\\n\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\\n\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\\n\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x74\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x92\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xeb\\xa3\\x9e\\xec\\xa5\\xa0\\xeb\\xa2\\x9d\\\n\\xeb\\xa0\\x9b\\xea\\x9e\\x98\\xe9\\x97\\x92\\xf0\\xb1\\xa9\\xfc\\xd3\\xc2\\xff\\\n\\xd6\\xc1\\xff\\xd1\\xbd\\xff\\xcf\\xbb\\xff\\xce\\xb9\\xfc\\xc8\\xb7\\xed\\x9f\\\n\\x98\\xee\\xad\\xa6\\xfc\\xd4\\xc4\\xff\\xc2\\xa3\\xff\\xaf\\x8b\\xff\\xab\\x89\\\n\\xff\\xa7\\x84\\xff\\xa0\\x7e\\xff\\xae\\x91\\xfb\\xc3\\xb4\\xea\\x93\\x8c\\xef\\\n\\xac\\xa5\\xfc\\xd1\\xc1\\xff\\xbf\\xa0\\xff\\xaa\\x86\\xff\\xa7\\x85\\xff\\xa2\\\n\\x81\\xff\\x9d\\x7c\\xff\\x98\\x78\\xff\\x90\\x6f\\xff\\xa1\\x85\\xfb\\xba\\xac\\\n\\xe8\\x8b\\x83\\xea\\x9a\\x95\\xfc\\xcd\\xbc\\xff\\xbb\\x9c\\xff\\xa5\\x81\\xff\\\n\\x9e\\x7c\\xff\\x99\\x78\\xff\\x93\\x74\\xff\\x8e\\x6f\\xff\\x89\\x69\\xff\\x80\\\n\\x60\\xff\\x93\\x78\\xfb\\xad\\x9e\\xe0\\x6c\\x65\\xe9\\x98\\x92\\xff\\xcd\\xb8\\\n\\xff\\xa0\\x7d\\xff\\x93\\x73\\xff\\x8e\\x6e\\xff\\x83\\x65\\xff\\x7e\\x60\\xff\\\n\\x78\\x59\\xff\\x70\\x4f\\xff\\xaa\\x98\\xe0\\x6a\\x63\\xe7\\x91\\x8b\\xff\\xc4\\\n\\xb1\\xff\\x98\\x76\\xff\\x7e\\x5f\\xff\\x79\\x5a\\xff\\x73\\x55\\xff\\x6e\\x4f\\\n\\xff\\x67\\x48\\xff\\xa1\\x90\\xde\\x62\\x5a\\xe6\\x8a\\x85\\xff\\xbe\\xab\\xff\\\n\\x8d\\x6d\\xff\\x74\\x55\\xff\\x6f\\x50\\xff\\x69\\x4b\\xff\\x63\\x46\\xff\\x5c\\\n\\x3f\\xff\\x9b\\x8a\\xdc\\x5b\\x53\\xe5\\x84\\x7d\\xff\\xbb\\xa6\\xff\\x7f\\x5f\\\n\\xff\\x6e\\x50\\xff\\x64\\x46\\xff\\x5e\\x41\\xff\\x59\\x3b\\xff\\x4f\\x31\\xff\\\n\\x99\\x87\\xdb\\x55\\x4d\\xe3\\x78\\x71\\xfc\\xb2\\xa2\\xff\\x8f\\x73\\xff\\x5a\\\n\\x3c\\xff\\x55\\x37\\xff\\x4b\\x2c\\xff\\x67\\x4e\\xfa\\x93\\x84\\xd8\\x48\\x40\\\n\\xe7\\x81\\x79\\xfb\\xad\\x9f\\xff\\x81\\x67\\xff\\x5e\\x40\\xff\\x59\\x3c\\xff\\\n\\x50\\x33\\xfd\\x46\\x28\\xfd\\x65\\x4a\\xf6\\x96\\x89\\xde\\x5e\\x54\\xe4\\x75\\\n\\x6c\\xfa\\xa5\\x96\\xff\\x74\\x5a\\xff\\x50\\x32\\xff\\x4f\\x30\\xfe\\x49\\x2c\\\n\\xfa\\x42\\x25\\xf9\\x60\\x48\\xf4\\x94\\x86\\xdd\\x59\\x51\\xe4\\x6c\\x63\\xfa\\\n\\x97\\x89\\xff\\x95\\x84\\xfc\\x90\\x7f\\xfa\\x8e\\x7d\\xf7\\x8d\\x7d\\xf2\\x8b\\\n\\x7d\\xd9\\x4b\\x44\\xda\\x4f\\x47\\xd9\\x4b\\x43\\xd7\\x48\\x40\\xd8\\x47\\x3e\\\n\\xd5\\x3e\\x35\\xff\\xff\\xff\\x05\\x64\\x1b\\xe3\\x00\\x00\\x00\\x01\\x74\\x52\\\n\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\\n\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xbc\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\\n\\xc0\\x0a\\x18\\x99\\x98\\x59\\x58\\xd9\\x10\\x7c\\x76\\x0e\\x4e\\x2e\\x6e\\x1e\\\n\\x5e\\x3e\\x18\\x9f\\x5f\\x40\\x50\\x48\\x58\\x44\\x54\\x4c\\x5c\\x02\\xc2\\x97\\\n\\x94\\x92\\x96\\x91\\x95\\x93\\x57\\x50\\x54\\x52\\x56\\x01\\xf1\\x55\\xd5\\xd4\\\n\\x35\\xe4\\x34\\xb5\\xb4\\x75\\x74\\xf5\\xf4\\x0d\\x0c\\x81\\x02\\x46\\xc6\\x26\\\n\\xf2\\x5a\\xa6\\x66\\xba\\xe6\\x16\\x96\\x56\\xd6\\x36\\x40\\x01\\x5b\\x3b\\x7b\\\n\\x10\\xd7\\xc1\\xd1\\xc9\\xd9\\xc5\\xd5\\x0d\\x28\\xe0\\xee\\xe1\\x09\\xe2\\x7a\\\n\\x79\\xfb\\xf8\\xfa\\xf9\\x07\\x00\\x05\\x02\\x83\\x82\\x81\\xb2\\x21\\x3e\\xa1\\\n\\x61\\xe1\\x11\\x91\\x51\\x40\\x81\\xe8\\x98\\x58\\x2b\\x67\\x20\\x37\\x2e\\x3e\\\n\\x21\\x31\\x29\\x19\\x64\\x4d\\x4a\\x6a\\x5a\\x7a\\x7a\\x46\\x7c\\x66\\x56\\x76\\\n\\x4e\\x2e\\xc4\\x21\\x79\\xf9\\x05\\x85\\x45\\xc5\\x25\\xa5\\x65\\xe5\\x30\\xa7\\\n\\x56\\x54\\x56\\x55\\xd7\\xd4\\xd6\\x95\\x23\\x3c\\x53\\xdf\\xd0\\xd8\\xd4\\xdc\\\n\\x82\\xdd\\xe3\\x00\\x59\\xc8\\x28\\x53\\x74\\x8b\\x84\\xb8\\x00\\x00\\x00\\x1d\\\n\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\\n\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\\n\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\\n\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\\n\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\\n\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\\n\\x35\\x2d\\x30\\x34\\x54\\x31\\x36\\x3a\\x30\\x33\\x3a\\x33\\x32\\x2b\\x30\\x32\\\n\\x3a\\x30\\x30\\xaa\\x0b\\xb4\\x27\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\\n\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xe6\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x1a\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x95\\xc0\\xf4\\x8b\\xba\\xf0\\x7f\\xb2\\xea\\\n\\x70\\xa8\\xe2\\x70\\xc1\\x63\\x6d\\xbf\\x60\\x6a\\xbd\\x5e\\x68\\xbb\\x5b\\x8b\\\n\\xb9\\xf0\\xc9\\xd4\\xf0\\xc2\\xcd\\xee\\x60\\x9c\\xd8\\x6c\\xbe\\x5f\\xb1\\xda\\\n\\xac\\xaf\\xd9\\xa9\\x63\\xb8\\x57\\x7d\\xb0\\xe9\\xc0\\xcb\\xed\\xb8\\xc3\\xea\\\n\\x51\\x8d\\xce\\x00\\x00\\x00\\x68\\xbb\\x5c\\xae\\xd8\\xa8\\xac\\xd7\\xa5\\x5f\\\n\\xb5\\x54\\x6d\\xa4\\xe1\\x5f\\x99\\xd7\\x50\\x8c\\xcd\\x42\\x7e\\xc4\\x64\\xb8\\\n\\x58\\x61\\xb6\\x55\\x5e\\xb4\\x53\\x5b\\xb2\\x50\\x58\\xb1\\x4d\\x50\\xaa\\x47\\\n\\x48\\xa3\\x3f\\x30\\x8f\\x2c\\x2a\\x88\\x27\\x26\\x83\\x23\\x26\\x81\\x22\\x57\\\n\\xb0\\x4c\\x96\\xcc\\x8e\\x8c\\xc8\\x83\\x3f\\x9c\\x38\\x2a\\x87\\x26\\x5a\\xaf\\\n\\x53\\x58\\xae\\x51\\x24\\x7f\\x21\\x4e\\xa8\\x45\\x88\\xc6\\x7f\\x7c\\xc0\\x72\\\n\\x36\\x94\\x30\\x26\\x82\\x22\\x57\\xad\\x50\\x55\\xac\\x4f\\x23\\x7d\\x20\\x45\\\n\\xa1\\x3d\\x3d\\x9a\\x36\\x36\\x93\\x30\\x2f\\x8c\\x2a\\xc0\\x4d\\x0e\\xbc\\x42\\\n\\x04\\xb9\\x45\\x03\\xd1\\x73\\x38\\xf7\\xb5\\x8d\\xfe\\xd6\\xb8\\xf5\\xa8\\x72\\\n\\xc9\\x6b\\x2d\\x65\\x66\\x15\\xa9\\x50\\x0a\\xf6\\xb5\\x8d\\xff\\x92\\x4d\\xff\\\n\\x77\\x11\\xff\\x86\\x21\\xeb\\x8a\\x40\\xa6\\x4c\\x07\\xbb\\x42\\x04\\xfe\\xcd\\\n\\xae\\xff\\xff\\xff\\xef\\x7f\\x18\\xaa\\x4d\\x07\\xf4\\x9d\\x63\\xff\\x7f\\x18\\\n\\xf8\\x76\\x00\\xee\\x76\\x00\\xe1\\x68\\x03\\xa9\\x4b\\x06\\xc3\\x57\\x1a\\xc9\\\n\\x64\\x25\\xe6\\x77\\x21\\xea\\x79\\x05\\xdd\\x64\\x01\\xbd\\x4d\\x04\\xc1\\x0f\\\n\\xc8\\xca\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xa6\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x64\\x62\\x66\\x61\\x60\\x60\\x60\\x65\\\n\\x63\\xe7\\x60\\x00\\x03\\x4e\\x2e\\x6e\\x1e\\x20\\xc5\\xcb\\xc7\\x2f\\x00\\x11\\\n\\x10\\x14\\x12\\x16\\x11\\x15\\x15\\x15\\x13\\x97\\x90\\x84\\x08\\x48\\x49\\xcb\\\n\\xc8\\x32\\x88\\x32\\xc8\\xc9\\x2b\\x28\\x32\\x20\\x80\\x28\\x03\\x1a\\x10\\x65\\\n\\x90\\x54\\x52\\x56\\x61\\x50\\x55\\x53\\xd7\\x80\\x0a\\x88\\x6a\\x6a\\x69\\xeb\\\n\\x88\\xea\\xea\\xe9\\x1b\\xc0\\x54\\x18\\x1a\\x19\\x9b\\x30\\x98\\x9a\\x99\\x5b\\\n\\xc0\\x04\\x2c\\xad\\xac\\x6d\\x40\\x2c\\x0b\\x64\\x43\\x6d\\xed\\xec\\x91\\x0d\\\n\\x65\\x70\\x70\\x74\\x72\\x76\\x71\\x85\\x1b\\xca\\xe0\\xe6\\xee\\xe1\\xe9\\xe5\\\n\\xed\\x03\\x53\\x63\\xc8\\xe0\\xeb\\xe7\\xef\\xef\\x1f\\xe0\\x0b\\x13\\xb0\\x64\\\n\\x08\\x0c\\x0a\\x0e\\x09\\x0d\\x0b\\x47\\x38\\x2e\\x22\\x32\\x2a\\x3a\\x26\\x16\\\n\\xc5\\xbd\\xf6\\x20\\x5b\\x00\\x59\\x3e\\x15\\x00\\x37\\x83\\xc2\\xb9\\x00\\x00\\\n\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\\n\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\\n\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\\n\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\\n\\x30\\x39\\x2d\\x31\\x31\\x54\\x31\\x36\\x3a\\x31\\x31\\x3a\\x32\\x37\\x2b\\x30\\\n\\x32\\x3a\\x30\\x30\\x9d\\x89\\x2a\\x6d\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\\n\\x2d\\x30\\x39\\x2d\\x31\\x31\\x54\\x31\\x36\\x3a\\x31\\x31\\x3a\\x32\\x37\\x2b\\\n\\x30\\x32\\x3a\\x30\\x30\\xec\\xd4\\x92\\xd1\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\\n\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x04\\x18\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xec\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x36\\x6b\\xbc\\x36\\x6b\\xbb\\x36\\x6a\\xbb\\\n\\x39\\x6c\\xbc\\x3b\\x6e\\xbd\\x3a\\x6d\\xbb\\x38\\x6b\\xbb\\x3e\\x70\\xbb\\xd1\\\n\\xe0\\xf6\\xd1\\xe0\\xf7\\xf8\\xfb\\xfe\\xf7\\xfb\\xfe\\xf6\\xf9\\xfd\\xf0\\xf5\\\n\\xfc\\xea\\xf0\\xfa\\xed\\xf2\\xfb\\xf7\\xfa\\xfd\\xeb\\xf1\\xfb\\xdf\\xe9\\xf8\\\n\\xbd\\xd0\\xec\\x5e\\x89\\xc9\\xd1\\xdf\\xf6\\x80\\xaa\\xe9\\xf6\\xfa\\xfe\\xf6\\\n\\xfa\\xfd\\x64\\x8c\\xc8\\xee\\xf3\\xfb\\xea\\xf1\\xfb\\xf2\\xf6\\xfc\\xf1\\xf6\\\n\\xfc\\xe2\\xec\\xf9\\xdb\\xe7\\xf8\\xba\\xd0\\xee\\xd0\\xdf\\xf6\\x7e\\xa8\\xe8\\\n\\xe9\\xf1\\xfa\\xee\\xf4\\xfb\\xe8\\xf0\\xfa\\xdd\\xe8\\xf8\\xdb\\xe6\\xf7\\x7a\\\n\\xa3\\xe1\\xc3\\xd5\\xef\\x35\\x69\\xb7\\xcc\\xdd\\xf5\\x7e\\xa8\\xe7\\x66\\x8d\\\n\\xc9\\xe9\\xf0\\xfa\\xf3\\xf8\\xfd\\xf8\\xfa\\xfe\\xef\\xf4\\xfc\\xdf\\xe9\\xf9\\\n\\xdb\\xe7\\xf7\\xd9\\xe5\\xf7\\x78\\xa2\\xe0\\xa9\\xc2\\xe7\\x35\\x68\\xb6\\xc9\\\n\\xdc\\xf4\\x7d\\xa7\\xe7\\xe1\\xec\\xf9\\xe3\\xed\\xf9\\xee\\xf4\\xfc\\xf3\\xf7\\\n\\xfd\\xe5\\xed\\xfa\\xd8\\xe5\\xf6\\x77\\xa0\\xde\\xa4\\xbe\\xe4\\x34\\x67\\xb4\\\n\\xc7\\xd9\\xf4\\x7d\\xa6\\xe6\\x65\\x8d\\xc9\\x67\\x8e\\xc9\\x6c\\x92\\xcb\\x6d\\\n\\x92\\xcb\\x69\\x90\\xca\\x65\\x8c\\xc8\\x74\\x9c\\xda\\x9f\\xba\\xe1\\x34\\x66\\\n\\xb3\\xc5\\xd8\\xf2\\x7b\\xa4\\xe3\\x7a\\xa3\\xe3\\x7a\\xa4\\xe3\\x7b\\xa4\\xe2\\\n\\x7b\\xa3\\xe2\\x7b\\xa3\\xe1\\x79\\xa2\\xe1\\x77\\xa0\\xdf\\x76\\x9f\\xde\\x74\\\n\\x9e\\xdd\\x72\\x9c\\xdb\\x74\\x9d\\xdc\\x9a\\xb5\\xdd\\x34\\x65\\xb1\\xc2\\xd5\\\n\\xf2\\x78\\xa1\\xe0\\x75\\x9e\\xde\\x73\\x9b\\xda\\x73\\x9b\\xd9\\x95\\xb0\\xda\\\n\\x33\\x64\\xaf\\xbe\\xd2\\xf0\\x7a\\xa3\\xe2\\x77\\x9f\\xde\\x76\\x9f\\xdd\\xc0\\\n\\x4d\\x0e\\xbc\\x42\\x04\\xb9\\x45\\x03\\x8e\\xab\\xd5\\x33\\x63\\xad\\x36\\x6a\\\n\\xba\\xbb\\xd0\\xef\\x7a\\xa2\\xe2\\xd1\\x73\\x38\\xf7\\xb5\\x8d\\xfe\\xd6\\xb8\\\n\\xf5\\xa8\\x72\\xcb\\x6b\\x2d\\x32\\x62\\xab\\xb8\\xce\\xef\\xf7\\xfa\\xfe\\x88\\\n\\xc0\\x62\\xb9\\x44\\x03\\xf6\\xb5\\x8d\\xff\\x92\\x4d\\xff\\x77\\x11\\xff\\x86\\\n\\x21\\xeb\\x8a\\x40\\x38\\x6c\\xbb\\xb6\\xcc\\xee\\x7a\\xa2\\xe1\\xc2\\xdc\\xbf\\\n\\xfe\\xcd\\xae\\xff\\xff\\xff\\xef\\x7f\\x18\\x37\\x6b\\xba\\xb3\\xca\\xed\\x7a\\\n\\xa2\\xe0\\xf4\\x9d\\x63\\xff\\x7f\\x18\\xf8\\x76\\x00\\xee\\x76\\x00\\xe1\\x68\\\n\\x03\\x35\\x6a\\xba\\xad\\xc6\\xeb\\xad\\xc5\\xea\\xc3\\x57\\x1a\\xc9\\x64\\x25\\\n\\xe6\\x77\\x21\\xea\\x79\\x05\\xdd\\x64\\x01\\xbd\\x4d\\x04\\x31\\x60\\xa7\\x35\\\n\\x69\\xb9\\x35\\x69\\xb8\\x35\\x68\\xb7\\x35\\x68\\xb5\\x34\\x66\\xb2\\x33\\x65\\\n\\xb0\\x33\\x64\\xae\\x32\\x63\\xac\\x32\\x62\\xaa\\x31\\x60\\xa6\\x31\\x61\\xa8\\\n\\x87\\x56\\x75\\xdb\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\\n\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\\n\\x01\\x06\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x60\\x04\\x02\\x26\\x26\\x66\\\n\\x66\\x16\\x56\\x36\\x76\\x0e\\x06\\x06\\x06\\x46\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\\n\\x7e\\x01\\x5e\\x41\\x21\\x61\\x11\\x51\\xa0\\x80\\x98\\xb8\\x84\\xa4\\x94\\xb4\\\n\\x8c\\x2c\\xb7\\x9c\\xbc\\x82\\xa2\\x08\\x07\\x03\\xa3\\x92\\xb2\\x9c\\x9c\\x94\\\n\\x8a\\xaa\\x20\\xaf\\x9a\\xba\\x86\\xa6\\x96\\x36\\x03\\xa3\\x8e\\xae\\x9a\\x9a\\\n\\x9e\\xbe\\x81\\xa1\\x91\\xb1\\x89\\xa9\\x99\\xb9\\x05\\x03\\x93\\xa5\\x95\\xb5\\\n\\xb5\\x8d\\xad\\xa0\\x9d\\xbd\\x89\\xa9\\x83\\xa3\\x93\\x33\\x03\\x93\\x8b\\xab\\\n\\x94\\x9b\\xbb\\x87\\xa7\\x97\\xb7\\x94\\x94\\x94\\x8f\\xaf\\x1f\\x03\\xb3\\x7f\\\n\\x40\\x60\\x50\\x70\\x48\\x68\\x58\\x78\\x44\\x64\\x54\\x74\\x4c\\x2c\\x03\\x73\\\n\\x5c\\x60\\x60\\x48\\x48\\x70\\x58\\xbc\\x63\\x42\\x74\\x62\\x52\\x72\\x0a\\x03\\\n\\x73\\x6a\\x5a\\x9a\\x66\\x48\\x68\\x7c\\x7a\\x46\\x74\\x66\\x56\\x76\\x4e\\x2e\\\n\\x43\\x5e\\x7e\\x01\\x37\\x04\\x14\\x16\\x15\\x97\\x94\\x96\\x31\\xb0\\x97\\x87\\\n\\x55\\x54\\x82\\x40\\x55\\x75\\x4d\\x6d\\x5d\\x7d\\x15\\x43\\x43\\x63\\x53\\x45\\\n\\x33\\x08\\x64\\xb5\\xb4\\xb6\\xb6\\xb6\\x65\\x31\\xb4\\x77\\x74\\x42\\x54\\x64\\\n\\x77\\x75\\xf7\\xf4\\xf6\\x65\\x33\\xf4\\x4f\\x98\\x08\\x31\\x62\\xd2\\xe4\\x29\\\n\\x53\\xa7\\x4d\\x9f\\xc1\\x90\\x37\\x73\\xd6\\xec\\x39\\xce\\x73\\xe7\\xcd\\x5f\\\n\\xb0\\x30\\x3b\\x2b\\x7b\\xd1\\x62\\x00\\x27\\x3a\\x48\\x2a\\x9f\\x38\\xa8\\x10\\\n\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\\n\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\\n\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x30\\x39\\x2d\\x31\\x31\\x54\\x31\\x36\\x3a\\x31\\x36\\x3a\\x31\\x34\\\n\\x2b\\x30\\x32\\x3a\\x30\\x30\\xc0\\x32\\x2c\\x6a\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x32\\x2d\\x30\\x39\\x2d\\x31\\x31\\x54\\x31\\x36\\x3a\\x31\\x36\\x3a\\x31\\\n\\x34\\x2b\\x30\\x32\\x3a\\x30\\x30\\xb1\\x6f\\x94\\xd6\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x13\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x4a\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xa8\\x6b\\x2f\\xc4\\x74\\x27\\xc3\\x76\\x25\\\n\\xab\\x6d\\x2b\\x88\\x65\\x34\\x87\\x58\\x1d\\xe9\\x7a\\x0b\\xfa\\xa2\\x51\\xfe\\\n\\xe4\\xcb\\xfe\\xd4\\xac\\xfc\\x93\\x31\\xd7\\x7f\\x2e\\xfb\\xf7\\xef\\xbb\\x84\\\n\\x36\\xf5\\x8a\\x07\\xf5\\x89\\x05\\xf5\\x88\\x04\\xf5\\x85\\x04\\xf5\\x83\\x03\\\n\\xfc\\xc6\\x93\\xff\\xea\\xd7\\xff\\xf2\\xe7\\xff\\xe4\\xcd\\xff\\xe1\\xc7\\xc0\\\n\\xb4\\xa0\\xe2\\xbc\\x86\\xa4\\x72\\x2e\\xf7\\x87\\x09\\xff\\xcb\\x9b\\xff\\xcd\\\n\\x9f\\xff\\xca\\x9b\\xff\\xda\\xb8\\xff\\xe2\\xc8\\xff\\xd9\\xb6\\xff\\xe7\\xd1\\\n\\xff\\xc8\\x95\\x97\\x6e\\x35\\xe4\\xc1\\x8f\\x8f\\x5f\\x21\\xf9\\x81\\x0c\\xff\\\n\\xa4\\x51\\xff\\xa3\\x50\\xff\\xbd\\x81\\xff\\xcc\\x9f\\xff\\xe0\\xc4\\xff\\xe1\\\n\\xc5\\xff\\xcc\\x9d\\xf0\\xaa\\x70\\xac\\x79\\x35\\xdb\\xaf\\x6e\\xfb\\x85\\x17\\\n\\xff\\xcb\\x9d\\xff\\xa5\\x54\\xff\\xa6\\x57\\xff\\xbe\\x82\\xff\\xcf\\xa5\\xff\\\n\\xe5\\xcd\\xff\\xd9\\xb7\\xff\\xca\\x9a\\xd7\\xb0\\x93\\xc0\\x8c\\x42\\xdf\\xb7\\\n\\x7d\\xcd\\x7a\\x18\\xfe\\xc4\\x8f\\xff\\xba\\x7d\\xff\\xaa\\x5c\\xff\\xab\\x5e\\\n\\xff\\xbf\\x85\\xff\\xd3\\xaa\\xff\\xee\\xdf\\xff\\xdc\\xbd\\xff\\xd8\\xb5\\xcc\\\n\\xb2\\x9d\\xd6\\xa2\\x56\\xc7\\x92\\x46\\xeb\\x86\\x0c\\xff\\x9e\\x49\\xff\\xb9\\\n\\x7c\\xff\\xd2\\xa9\\xff\\xde\\xc0\\xfc\\xcc\\x9f\\xf2\\x9f\\x54\\xf9\\x9f\\x4d\\\n\\xd0\\xa5\\x79\\xb0\\x7e\\x3a\\xf7\\x8a\\x0b\\xfe\\xc7\\x94\\xff\\xce\\xa3\\xff\\\n\\xce\\xa2\\xfe\\xd5\\xb2\\xf9\\x94\\x35\\xec\\x7d\\x0c\\xce\\x8b\\x4b\\xe5\\xa1\\\n\\x60\\x32\\x1d\\x16\\xd4\\x9e\\x53\\x9a\\x6a\\x2b\\xab\\x6e\\x29\\xd5\\x7d\\x16\\\n\\xec\\x82\\x0a\\xea\\x81\\x0a\\xd8\\x77\\x12\\xaa\\x6a\\x28\\x9c\\x6b\\x2c\\xb1\\\n\\x80\\x3c\\xca\\x97\\x4d\\xbe\\x8c\\x45\\xac\\x7b\\x38\\xff\\xff\\xff\\x43\\xd3\\\n\\x74\\x7c\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xa3\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x01\\x18\\x99\\x98\\x59\\x58\\xd9\\\n\\xd8\\xe0\\x7c\\x76\\x0e\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\x90\\x08\\xbf\\x80\\xa0\\\n\\x90\\xb0\\x88\\xa8\\x98\\xb8\\x84\\xa4\\x94\\x34\\x48\\x52\\x46\\x56\\x4e\\x5e\\\n\\x41\\x51\\x49\\x59\\x4e\\x45\\x55\\x4d\\x1d\\x24\\xa0\\x21\\xab\\xa9\\xa5\\xad\\\n\\xa3\\xab\\xa7\\x6f\\x60\\x68\\x04\\x36\\xc3\\xd8\\xc4\\xd4\\xcc\\xdc\\xc2\\xd2\\\n\\xca\\xda\\xc6\\xd6\\x0e\\x24\\x60\\xef\\xe0\\xe8\\xe4\\xec\\xe2\\xea\\xe6\\xee\\\n\\xe1\\xe9\\xe5\\x0d\\x12\\xf0\\xb1\\xd6\\xf2\\xf5\\xf3\\x0f\\x08\\x0c\\x0a\\x0e\\\n\\xf1\\x0a\\x05\\x09\\x84\\x85\\x47\\x44\\x46\\x45\\xc7\\xc4\\x32\\xc4\\xc5\\x27\\\n\\x24\\x82\\x8c\\x48\\x4a\\x4e\\x49\\x4d\\x4b\\x07\\xb1\\x32\\xbc\\xd8\\x50\\xdc\\\n\\xca\\x96\\x89\\x2e\\x90\\x85\\x2e\\xe0\\x95\\x8d\\x2e\\x90\\x83\\xea\\x5f\\x36\\\n\\x88\\x5f\\x01\\x46\\xf4\\x19\\xc1\\x78\\xa2\\x86\\x34\\x00\\x00\\x00\\x1d\\x74\\\n\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\\n\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\\n\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\\n\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\\n\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\\n\\x2d\\x30\\x34\\x54\\x31\\x35\\x3a\\x35\\x37\\x3a\\x31\\x31\\x2b\\x30\\x32\\x3a\\\n\\x30\\x30\\x1c\\xb0\\xc9\\x31\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\\n\\x60\\x82\\\n\\x00\\x00\\x01\\xc1\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x63\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xff\\x92\\x1c\\xff\\x8f\\x18\\xff\\x8d\\x13\\\n\\xff\\x87\\x0c\\xff\\xc6\\x8c\\xff\\xe1\\xbd\\xff\\xde\\xb6\\xff\\xc0\\x7e\\xf7\\\n\\x7b\\x00\\xff\\x90\\x17\\xff\\xe1\\xbc\\xff\\xcb\\x86\\xff\\xc0\\x75\\xff\\xcc\\\n\\x94\\xec\\x72\\x00\\xff\\x89\\x0f\\xff\\xd8\\xac\\xff\\xc1\\x77\\xff\\xbc\\x6e\\\n\\xff\\xc5\\x88\\xdf\\x68\\x00\\xff\\x84\\x05\\xff\\xbd\\x7b\\xff\\xcc\\x93\\xff\\\n\\xc6\\x87\\xff\\xb5\\x6f\\xc7\\x56\\x00\\xef\\x74\\x00\\xe6\\x6e\\x00\\xda\\x65\\\n\\x00\\xc3\\x55\\x00\\xff\\xff\\xff\\xd8\\x00\\xe8\\xe2\\x00\\x00\\x00\\x01\\x74\\\n\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\\n\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x38\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\\n\\x60\\xa0\\x1d\\x60\\x64\\x62\\x66\\x41\\xe1\\xb3\\xb2\\xb1\\x73\\x70\\x22\\x09\\\n\\x70\\x71\\xf3\\xf0\\xf2\\xf1\\x23\\x09\\x08\\x08\\x0a\\x09\\x8b\\x88\\x22\\x09\\\n\\x88\\x89\\x4b\\x48\\x4a\\x49\\x23\\x1b\\x22\\x23\\x2b\\x27\\x4f\\x43\\x37\\x03\\\n\\x00\\xea\\x92\\x01\\xf2\\x2b\\x4c\\xca\\x22\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\\n\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\\n\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x02\\x07\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x8d\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x7b\\xa7\\xdc\\x66\\x8b\\xc0\\x7a\\xa4\\xdb\\\n\\xff\\xff\\xff\\x63\\x87\\xbd\\x79\\xa3\\xd9\\xf9\\xfb\\xfc\\xf8\\xfb\\xfc\\x33\\\n\\x34\\x36\\x60\\x85\\xba\\x79\\xa2\\xd8\\xfa\\xfd\\xfd\\xfa\\xfc\\xfc\\x5e\\x81\\\n\\xb7\\x76\\xa0\\xd5\\xfc\\xfd\\xfd\\x5c\\x7e\\xb5\\x75\\x9e\\xd4\\xfc\\xfe\\xfe\\\n\\xfb\\xfd\\xfd\\x5a\\x7c\\xb2\\x73\\x9c\\xd1\\x58\\x7a\\xb0\\x6f\\x97\\xcc\\xfc\\\n\\xff\\xff\\xfd\\xff\\xff\\x54\\x75\\xac\\x6e\\x94\\xca\\xfe\\xff\\xff\\xfa\\xfe\\\n\\xfe\\xf9\\xfc\\xfc\\x53\\x73\\xaa\\x6c\\x92\\xc8\\xfc\\xfc\\xfc\\x51\\x72\\xa9\\\n\\x51\\x71\\xa9\\x68\\x8e\\xc3\\x64\\x88\\xbe\\x61\\x85\\xbb\\x5f\\x83\\xb9\\x5c\\\n\\x7e\\xb4\\x58\\x7b\\xb1\\x57\\x79\\xae\\x56\\x76\\xad\\x54\\x75\\xab\\x53\\x73\\\n\\xa9\\x86\\xf7\\xcc\\x35\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\\n\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\\n\\x00\\x00\\x7d\\x49\\x44\\x41\\x54\\x18\\xd3\\x6d\\x8f\\xd7\\x0e\\xc2\\x30\\x10\\\n\\x04\\x87\\xb0\\xf4\\x16\\x30\\xa1\\x13\\x9a\\xe9\\xe5\\xff\\x3f\\x8f\\xc4\\x16\\\n\\x0e\\x6d\\x1f\\x2c\\xdd\\x68\\x7c\\x5e\\xc3\\x77\\x4a\\x1f\\x89\\xa0\\xac\\xf7\\\n\\x54\\xa0\\xaa\\x5a\\x5d\\x8d\\x3c\\x39\\x68\\x42\\x4b\\xed\\x8e\\x1b\\xdc\\xd1\\\n\\x85\\x9e\\x62\\x6f\\x3b\\xd0\\xf7\\x46\\x01\\x82\\xf1\\xda\\x91\\x19\\x03\\x99\\\n\\x61\\x1c\\x8c\\x04\\x46\\x32\\xa6\\xb8\\x32\\xfe\\x03\\x26\\x9a\\xce\\x8a\\x67\\\n\\xe7\\xb0\\x90\\x96\\xbe\\x58\\x9a\\xae\\xb4\\x86\\x4d\\xc6\\xb7\\xa1\\xfa\\x0e\\\n\\xec\\x3e\\x3a\\x1c\\x4f\\xe7\\xe4\\x72\\xbd\\xdd\\x1f\\xd6\\xfe\\x7c\\x9e\\x27\\\n\\x30\\x3e\\x08\\x5a\\x0c\\x3e\\x3d\\x7b\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\\n\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x34\\x39\\x3a\\x32\\x38\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\x5e\\xfa\\x8b\\xed\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x34\\x39\\x3a\\x32\\x38\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x2f\\xa7\\x33\\x51\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x01\\xf2\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x69\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xc9\\xc9\\xc9\\xfc\\xfc\\xfc\\xe8\\xe8\\xe8\\\n\\x33\\x33\\x33\\xcc\\xcc\\xcc\\xb7\\xc9\\xad\\x75\\x99\\x60\\x66\\x8e\\x4f\\x61\\\n\\x8a\\x4a\\xa5\\xbc\\x98\\xb2\\xc5\\xa6\\x81\\xab\\x61\\xb4\\xd4\\x95\\xd0\\xe6\\\n\\xba\\x8f\\xbb\\x6a\\x57\\x8f\\x2d\\x87\\xa3\\x76\\x61\\x8a\\x49\\xb1\\xd3\\x90\\\n\\xb1\\xd6\\x92\\xff\\xff\\xff\\x8c\\xbc\\x65\\x8f\\xbc\\x67\\x3d\\x6f\\x1f\\x4c\\\n\\x7b\\x31\\xb6\\xd4\\x9c\\xb2\\xd2\\x95\\x37\\x6b\\x19\\x39\\x6c\\x1b\\x8b\\xba\\\n\\x62\\x87\\xba\\x60\\x87\\xb9\\x60\\x53\\x8c\\x28\\x8d\\xba\\x64\\x90\\xa3\\x05\\\n\\x41\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\\n\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x63\\x49\\\n\\x44\\x41\\x54\\x18\\xd3\\xad\\x8e\\x57\\x0e\\x80\\x40\\x08\\x05\\xd1\\xc5\\xde\\\n\\x0b\\xd6\\xb5\\xac\\xf7\\x3f\\xa4\\x98\\xa8\\xa8\\xdf\\x4e\\x42\\xc2\\x9b\\x00\\\n\\x01\\xe0\\x07\\xac\\x0f\\x60\\xd9\\x2f\\x14\\x0b\\xb4\\x11\\x1d\\x2e\\x3c\\x05\\\n\\x37\\x1c\\xb9\\x47\\x99\\x90\\x7c\\xaf\\x1c\\xd2\\xf5\\xfc\\x20\\x54\\x72\\x34\\\n\\x8a\\x93\\x34\\xcb\\x0b\\x50\\x17\\x65\\x55\\x53\\xd3\\x76\\xf2\\x50\\x3f\\x10\\\n\\xd1\\xa8\\x45\\x4c\\xf3\\x42\\x6b\\xfb\\x10\\xda\\x6c\\xe3\\x66\\x1e\\x02\\xf4\\\n\\x01\\xec\\x3a\\x3b\\x04\\xea\\xc4\\xbf\\xfd\\xf0\\x00\\x00\\x00\\x1d\\x74\\x45\\\n\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\\n\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\\n\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\\n\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x36\\x2d\\\n\\x30\\x31\\x54\\x31\\x31\\x3a\\x33\\x36\\x3a\\x32\\x33\\x2b\\x30\\x32\\x3a\\x30\\\n\\x30\\x1b\\x61\\x4f\\xaf\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\\n\\x82\\\n\\x00\\x00\\x0a\\x14\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\xc6\\x00\\x00\\x00\\x14\\x08\\x02\\x00\\x00\\x00\\x59\\x0f\\xd5\\x2e\\\n\\x00\\x00\\x00\\x01\\x73\\x52\\x47\\x42\\x00\\xae\\xce\\x1c\\xe9\\x00\\x00\\x00\\\n\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0e\\x9c\\x00\\x00\\x0e\\x75\\x01\\x88\\x28\\\n\\x1b\\x78\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\xe0\\x02\\x10\\x09\\x33\\\n\\x06\\xe2\\x90\\x4e\\x57\\x00\\x00\\x00\\x19\\x74\\x45\\x58\\x74\\x43\\x6f\\x6d\\\n\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\\n\\x68\\x20\\x47\\x49\\x4d\\x50\\x57\\x81\\x0e\\x17\\x00\\x00\\x09\\x81\\x49\\x44\\\n\\x41\\x54\\x68\\xde\\xed\\x5a\\x69\\x54\\x14\\x57\\x16\\xbe\\xbd\\xb1\\x75\\xd3\\\n\\x8d\\x80\\xd0\\x0d\\x28\\x8b\\x2b\\x60\\x37\\xa2\\xb2\\xb9\\xb1\\x88\\x02\\xca\\\n\\xd6\\x88\\xe8\\x98\\x68\\x14\\x02\\x1c\\xb7\\xc4\\x2d\\x8a\\x41\\x10\\x01\\x31\\\n\\x2e\\x13\\x95\\x20\\x48\\xd4\\x71\\x12\\x65\\x49\\x88\\x20\\x5b\\x34\\x2a\\x0c\\\n\\x89\\x3b\\x4b\\x24\\x19\\x41\\x89\\x47\\x59\\x65\\x35\\x20\\x4d\\x43\\xaf\\x55\\\n\\x3d\\x3f\\x4a\\xcb\\x0e\\x74\\xb7\\x84\\x25\\x33\\xe7\\x4c\\x7f\\x3f\\xea\\x54\\\n\\xdd\\x77\\xeb\\xdd\\x7b\\xbf\\x77\\xeb\\xbd\\xfb\\xaa\\x8a\\xf0\\x7b\\x47\\x33\\\n\\xa8\\xa1\\xc6\\xd8\\x81\\xa8\\xa6\\x40\\x0d\\x75\\x4a\\xa9\\xa1\\x4e\\x29\\x35\\\n\\xfe\\x9f\\x40\\xc6\\xcf\\xca\\xcb\\x2b\\xdf\\xa9\\xed\\xed\\x1b\\xd8\\xdd\\xd9\\\n\\xa2\\x42\\x41\\x24\\x12\\x11\\x88\\x44\\x0d\\x0a\\xe5\\xbf\\x12\\xcc\\xcf\\x0f\\\n\\xab\\x6d\\x6d\\xac\\x35\\x35\\x35\\x47\\xd3\\xc9\\x98\\xf0\\x30\\x1c\\x74\\x75\\\n\\xbd\\xfc\\x74\\xff\\x81\\xe8\\x4f\\xf7\\x5a\\x98\\x4f\\xfe\\x5f\\x23\\x67\\x34\\\n\\x4c\\x92\\xe5\\x2f\\x7c\\xfc\\xb8\\x2a\\x54\\x07\\xf8\\xbd\\x2a\\x5a\\x2b\\x2a\\\n\\xab\\x62\\x0e\\x24\\xd4\\xd7\\x37\\x0c\\x08\\x04\\x8e\\x0e\\x73\\x0f\\x1f\\x8a\\\n\\x9f\\x3e\\x6d\\xea\\x5f\\x99\\x4f\\xad\\xad\\x6d\\x4b\\xbd\\xfd\\xce\\xa4\\x26\\\n\\xaf\\x5a\\xc9\\xad\\xaf\\x6f\\x68\\xef\\xe8\\x74\\x71\\x76\\x1c\\x59\\x57\\x23\\\n\\xe6\\x61\\xf3\\xb6\\x1d\\x25\\xa5\\x65\\x28\\x82\\xd0\\x68\\x54\\x3b\\x3b\\x4e\\\n\\x64\\x78\\x98\\x0a\\x1f\\x48\\x64\\x52\\xee\\x95\\x82\\x3d\\xbb\\x77\\x28\\x53\\\n\\x18\\x65\\x14\\xca\\xc8\\x19\\x5b\\xe5\\x77\\x2f\\x7c\\x32\\xe5\\x50\\xd1\\xcb\\\n\\xed\\x3b\\x77\\xdf\\x5b\\x17\\xfa\\xc9\\xae\\xed\\x75\\xb5\\xd5\\x4f\\x1f\\xff\\\n\\x32\\xdb\\x8e\\xe3\\xbd\\x22\\xe0\\xf9\\xf3\\xfa\\xbf\\x32\\xa5\\x4c\\x4c\\x58\\\n\\x05\\x79\\x39\\x01\\xfe\\xbe\\x00\\x50\\x58\\x7c\\xf5\\x4a\\x41\\xe1\\x68\\x7a\\\n\\x1b\\x19\\x0f\\x62\\x91\\x68\\xef\\x27\\x3b\\x9f\\xd4\\x3c\\xcc\\xfd\\x2e\\xdb\\\n\\xca\\xd2\\x82\\x1b\\xbc\\xfa\\x72\\x5e\\xbe\\x32\\x65\\x5d\\x9a\\x2e\\x00\\x68\\\n\\x69\\x6b\\x29\\x53\\x18\\x7d\\x14\\x0a\\xc9\\x19\\x5b\\x65\\x00\\xe0\\xf3\\xf9\\\n\\xe7\\x2f\\x7c\\xdd\\xdc\\xd2\\xa2\\x60\\x96\\x52\\x06\\x02\\x81\\xa0\\x82\\x4a\\\n\\x99\\x4c\\xb6\\x7d\\xd7\\xde\\xb8\\xd8\\xe8\\x25\\x1e\\x6e\\x00\\xa0\\xa5\\xa5\\\n\\x15\\x13\\x1d\\x55\\xdf\\xd0\\x98\\x90\\x74\\xe4\\xc2\\xb9\\x33\\x45\\xc5\\x57\\\n\\xa5\\x52\\x69\\x60\\x80\\x1f\\xa6\\x9c\\x96\\x7e\\xd6\\x75\\xf1\\x22\\x1b\\xeb\\\n\\x99\\x12\\x89\\x34\\x25\\x35\\xad\\xa4\\xb4\\x8c\\x4a\\xa5\\x46\\x86\\x87\\x79\\\n\\xb8\\xbb\\xd6\\x37\\x34\\x7e\\x7d\\x31\\x23\\x88\\x1b\\x70\\x2a\\xf9\\x34\\x83\\\n\\xc1\\x70\\x73\\x5d\\x44\\xa5\\x52\\x3d\\xdc\\x5d\\xb1\\xe7\\xe6\\x62\\x46\\xd6\\\n\\x8e\\xed\\xdb\\xb0\\x25\\xf5\\x62\\x46\\x96\\xfd\\x6c\\x3b\\x2a\\x95\\x2a\\xaf\\\n\\x1f\\xb5\\x67\\xd7\\xcd\\x92\\x52\\x5b\\x1b\\xeb\\x07\\x8f\\x1e\\x55\\xfd\\xfc\\\n\\x50\\x2c\\x16\\x67\\x66\\x7d\\x6b\\x6b\\x63\\x6d\\x67\\xc7\\x1e\\x6a\\x6b\\x9c\\\n\\xd2\\x5a\\x43\\x53\\x53\\x86\\xa2\\x24\\x12\\xc9\\xd2\\xc2\\x3c\\x76\\xff\\x3e\\\n\\x1a\\x8d\\x16\\xb5\\x2f\\xc6\\x77\\xb9\\xb7\\xa6\\xa6\\xe6\\x50\\x1f\\x28\\x14\\\n\\x32\\x91\\x48\\xa4\\x90\\x29\\x00\\x30\\xb4\\xf5\\xd6\\xed\\x3b\\xc3\\x8f\\xa2\\\n\\xbe\\xa1\\xf1\\x9f\\x5f\\x5d\\x5c\\x15\\x1c\\x94\\x96\\x7e\\x8e\\xcf\\xe7\\x7b\\\n\\x2d\\xf5\\xf4\\x70\\x77\\x4d\\x4e\\x49\\x6b\\x6c\\x6a\\x72\\x74\\x98\\xb7\\x75\\\n\\x73\\x64\\x77\\x77\\x0f\\x46\\x8e\\x86\\x1e\\xe3\\xde\\xfd\\xf2\\x8c\\xac\\xec\\\n\\xfe\\xfe\\x01\\x53\\x13\\x93\\xc4\\xf8\\x58\\x00\\x18\\x24\\xe9\\xea\\x7a\\x89\\\n\\x29\\xf7\\x88\\x44\\x27\\xbf\\x38\\x1d\\xf1\\x61\\x68\\xfa\\xd9\\xf3\\xcd\\x4d\\\n\\x2d\\x6c\\xb6\\xed\\xf6\\x8f\\xb6\\x68\\x69\\x69\\x01\\x40\\x47\\x47\\x67\\x5a\\\n\\xfa\\xd9\\xe7\\xf5\\x0d\\x4c\\xa6\\x31\\x9f\\xdf\\x2f\\x14\\x0a\\xdd\\x16\\x2f\\\n\\x1c\\x6e\\x79\\x4e\\x20\\x10\\x54\\x2b\\xd4\\xd4\\x3e\\x6e\\x6e\\x6e\\x09\\xe2\\\n\\xfa\\xcb\\x0b\\xd7\\x84\\x04\\x97\\xfd\\xf8\\x13\\x96\\xc2\\xfb\\xf6\\x1f\\x40\\\n\\x51\\x14\\xab\\x1e\\x12\\x93\\x8e\\x1a\\x4d\\x34\\x04\\x80\\xdd\\x7b\\xf6\\xb5\\\n\\xb4\\xb4\\x9e\\x49\\x4d\\x0e\\x0f\\xdb\\xb8\\x21\\x2c\\xb2\\xee\\xb7\\xa7\\x62\\\n\\xb1\\x38\\x39\\x25\\x2d\\x3a\\x26\\xce\\xc5\\xd9\\xc9\\xce\\x8e\\xdd\\xd9\\xf5\\\n\\xf2\\xf8\\xe7\\xa7\\xb0\\xde\\xae\\x14\\x14\\xa5\\xa4\\xa6\\xdf\\xbd\\x7b\\x1f\\\n\\x63\\x3f\\x36\\x2e\\x81\\x46\\xa3\\x0d\\xd2\\x17\\x4b\\xc4\\xc9\\x29\\x69\\x08\\\n\\x8a\\xd4\\x37\\x34\\x36\\x36\\x36\\xf5\\xf5\\xf5\\x3d\\xaa\\xa9\\xed\\xee\\xe9\\\n\\x51\\x68\\x6b\\xbc\\x2a\\x53\\x32\\x09\\x41\\x10\\xfc\\x32\\x32\\x3c\\xb4\\x8f\\\n\\xdf\\xf7\\xb0\\xfa\\x57\\x65\\x3e\\x90\\x49\\x24\\x22\\x91\\xa8\\xb0\\xf5\\x4f\\\n\\x45\\x21\\x14\\x0a\\x53\\x52\\xd3\\xd3\\xd2\\xcf\\x05\\xfa\\xfb\\xce\\x77\\x71\\\n\\xda\\xb1\\x7b\\x6f\\x58\\xc4\\x26\\x17\\x67\\xc7\\xe0\\x95\\xdc\\xf4\\xb3\\xe7\\\n\\x2f\\x65\\x66\\xe3\\xe4\\xbc\\x68\\x6d\\x8d\\xd8\\xb4\\x35\\xd0\\xdf\\x2f\\x32\\\n\\x3c\\xcc\\xc9\\x71\\x1e\\x00\\x0c\\x95\\xe0\\xca\\x04\\x02\\xe1\\xcb\\xb3\\xff\\\n\\x88\\x8d\\x4b\\x58\\xbc\\x70\\x01\\x97\\xeb\\x9f\\x95\\x9d\\x73\\x32\\xf9\\x34\\\n\\x00\\x48\\xa5\\x52\\xff\\xa0\\x10\\x0e\\x87\\x7d\\x3a\\xf9\\xc4\\x5c\\xfb\\xd9\\\n\\x45\\xc5\\x57\\x8f\\x1d\\x39\\x34\\x65\\x8a\\x95\\xd2\\x59\\x4a\\x7e\\x4e\\x7a\\\n\\x67\\x3e\\x01\\x40\\x4b\\xcb\\x8b\\x09\\x13\\xf4\\xb0\\xe4\\xc5\\xc1\\x62\\x31\\\n\\x79\\xbc\\x3e\\x04\\x41\\x02\\x03\\xfc\\xa2\\x63\\x0f\\x96\\xfd\\x78\\xcb\\xc3\\\n\\xdd\\x35\\xbf\\xa0\\x28\\x38\\x28\\xd0\\xd0\\xd0\\xf0\\x45\\x6b\\x6b\\x41\\x51\\\n\\xf1\\x93\\x9a\\x6a\\x4d\\x0d\\x0d\\x33\\x53\\xd3\\x05\\xf3\\x9d\\xaf\\xfd\\x70\\\n\\x23\\x74\\xc3\\x7a\\x00\\x38\\x71\\xfc\\x08\\xe6\\xdc\\xef\\xdd\\xdd\\x31\\xb1\\\n\\x07\\xdb\\xda\\xda\\x59\\x2c\\xe6\\xf5\\x1b\\x25\\x5b\\x36\\x45\\x5c\\xce\\xbb\\\n\\xe2\\xe6\\xba\\xe8\\xf6\\x9d\\xbb\\xec\\x59\\xb6\\x16\\xe6\\x93\\xfb\\xfa\\xf8\\\n\\xf2\\xfa\\x42\\xa1\\x10\\x00\\x34\\x28\\x1a\\xeb\\xdf\\x5f\\xfb\\xa8\\xa6\\xd6\\\n\\x84\\xc5\\xda\\xfe\\xd1\\x16\\x8c\\xb2\\xa1\\xb6\\x66\\x4c\\x9f\\x36\\x1e\\x29\\\n\\x45\\x00\\x02\\x2a\\x43\\xf1\\x4b\\x2a\\x95\\x6a\\x60\\x60\\xd0\\xdf\\xdf\\xaf\\\n\\xda\\x07\\x85\\xad\\x1f\\x6f\\xdb\\x3c\\xfc\\x28\\x98\\x4c\\x63\\x00\\x88\\x8f\\\n\\xdb\\x6f\\xa0\\xaf\\x0f\\x00\\x97\\x73\\xf3\\x23\\x3e\\x0c\\xf5\\xf3\\x5d\\x0e\\\n\\x00\\x15\\x15\\x55\\x75\\x75\\x4f\\x57\\xaf\\x5a\\x89\\x91\\xd3\\xdc\\xd4\\x22\\\n\\x14\\x08\\x59\\x2c\\xa6\\xad\\x8d\\xf5\\xeb\\x5d\\x42\\xe7\\xcb\\x41\\x12\\xac\\\n\\x13\\x0d\\x8a\\x86\\xae\\x3e\\x8d\\x48\\x24\\xc6\\x46\\x47\\x4d\\x9b\\x36\\x15\\\n\\x00\\x5e\\xbc\\x68\\x7d\\x58\\xfd\\x0b\\x00\\x3c\\xa9\\xfb\\x8d\\xc7\\xe3\\x05\\\n\\x05\\xfa\\x03\\xc0\\xea\\x90\\xe0\\x84\\xa4\\x23\\x0d\\x0d\\x8d\\xd8\\x5d\\x4a\\\n\\x17\\x3e\\x2c\\xab\\xf0\\x7c\\x52\\x5d\\x40\\x68\\x6b\\x6b\\xf5\\xf5\\xf1\\x11\\\n\\x04\\x21\\x91\\x48\\xb8\\xb0\\xbb\\xbb\\xdb\\x40\\x5f\\x9f\\x44\\x22\\x91\\x48\\\n\\xa4\\xb5\\x6b\\x42\\x32\\xb2\\xbe\\xf1\\x70\\x77\\xfd\\x26\\xe7\\x72\\x5a\\xca\\\n\\x49\\x00\\x78\\x54\\x53\\x2b\\x91\\x48\\xfd\\x02\\x82\\x51\\x14\\x95\\x81\\x4c\\\n\\x26\\x93\\x4d\\x98\\xa0\\xa7\\xa3\\xa3\\x0d\\x00\\x86\\x86\\x86\\x78\\x60\\x4b\\\n\\x97\\x2e\\xc9\\xcb\\x2f\\x74\\x73\\x5d\\x34\\x69\\x92\\xe9\\x9a\\xd5\\xab\\xdc\\\n\\x3d\\xbd\\x8f\\x7d\\x76\\xe8\\x4a\\x7e\\xe1\\x86\\x0f\\xd6\\x01\\xc0\\x20\\x7d\\\n\\x6c\\x7b\\x42\\x24\\x0e\\x7e\\x06\\x14\\xda\\x1a\\xa7\\x59\\x0a\\x41\\x11\\x14\\\n\\x7d\\xcb\\x95\\x58\\x22\\xe9\\xe9\\xee\\xb1\\xb4\\x30\\x57\\xe6\\x03\\x2a\\x93\\\n\\xa1\\x28\\x3a\\x1c\\x0f\\x55\\xeb\\x50\\xa9\\xd4\\x3f\\x8e\\x88\\x36\\x3e\\x76\\\n\\xda\\x3a\\xda\\x62\\x91\\x08\\x27\\x67\\xf6\\x6c\\xce\\xfa\\x75\\x6b\\x3d\\x97\\\n\\xad\\x70\\x71\\x71\\x8e\\x8b\\xd9\\xc7\\xe1\\xb0\\x87\\x4a\\xe4\\x99\\xd4\\xd1\\\n\\xd1\\xc1\\xbb\\xa5\\xd1\\x68\\xd8\\x89\\x99\\xa9\\xa9\\x40\\x20\\x28\\x28\\x2c\\\n\\xf6\\xf1\\xf6\\x2a\\x2d\\x2b\\x23\\x93\\xc8\\xb3\\x6c\\x6d\\x14\\xef\\xf8\\x14\\\n\\xae\\x77\\xaa\\xf3\\x09\\x00\\xec\\x38\\x1c\\x14\\x41\\x7e\\xba\\x75\\xc7\\xdd\\\n\\x6d\\x31\\x2e\\x2c\\xbe\\xfa\\x03\\x56\\x5a\\x01\\x40\\xe8\\xc6\\x0f\\x16\\xba\\\n\\x7a\\x3e\\x28\\xaf\\x30\\x33\\x33\\x9d\\x3a\\x75\\x0a\\x00\\xd0\\xa8\\x34\\xaa\\\n\\x8e\\xce\\xf7\\x85\\xb9\\x64\\xf2\\x5b\\x07\\xe4\\x97\\x0c\\x0c\\x6b\\xff\\x16\\\n\\x72\\xfc\\xef\\xa7\\xba\\xbb\\x7b\\x56\\xad\\xe4\\x5a\\x98\\x4f\\x66\\xcf\\xb2\\\n\\x2d\\xfa\\xfe\\x5a\\x45\\x65\\xd5\\xf1\\xa3\\x87\\x87\\xba\\x81\\xad\\xad\\xd8\\\n\\x88\\x92\\x48\\x24\\x89\\x44\\xf2\\x9a\\x08\\x45\\xb6\\xc6\\x2b\\xa5\\x10\\x14\\\n\\xb7\\x0b\\x00\\x79\\x79\\xf9\\x36\\x36\\xd6\\x56\\x56\\x96\\x6d\\xed\\x1d\\x0a\\\n\\x7d\\x90\\x4a\\xa5\\x12\\xa9\\x44\\x99\\x87\\xc3\\x8f\\x42\\x86\\xa2\\xf8\\x11\\\n\\x00\\xa4\\xd2\\xb7\\x3e\\x48\\x25\\x12\\x02\\x81\\x20\\x4f\\x4e\\x4c\\x74\\x54\\\n\\x78\\xd8\\xc6\\xd4\\x33\\x5f\\xae\\x08\\x08\\xae\\xbc\\x7f\\xcb\\xd8\\xd8\\x68\\\n\\x90\\xc4\\xd0\\xd0\\x00\\x57\\x46\\x51\\x14\\x7d\\x93\\x00\\x78\\xb7\\x7a\\x7a\\\n\\x8c\\x1d\\x1f\\x6f\\xbb\\x94\\x99\\x7d\\x29\\x33\\xdb\\x7c\\xf2\\xa4\\xbc\\xcb\\\n\\xd9\\xf2\\xaf\\x1b\\x88\\x0a\\xcb\\x6d\\x85\\xe7\\xca\\xa0\\xa7\\xc7\\x88\\x8c\\\n\\x08\\xdb\\xb9\\x7b\\xef\\xb3\\x67\\xcf\\x31\\xc9\\xd5\\x6b\\xd7\\x73\\x73\\xf3\\\n\\xf1\\xed\\xb1\\xa5\\x85\\xb9\\x93\\xa3\\xc3\\xce\\xdd\\x51\\x5b\\x37\\x47\\x62\\\n\\x12\\x07\\x87\\xb9\\x54\\xaa\\xce\\xfe\\x03\\xf1\\x12\\x89\\x14\\x37\\x24\\x12\\\n\\x89\\xb0\\x07\\x1d\\xef\\x79\\x89\\xbb\\x5b\\x53\\x73\\x4b\\x79\\x45\\xc5\\xc2\\\n\\x05\\xf3\\x01\\x60\\xdd\\xfb\\x6b\\x8f\\x1e\\x3f\\xe1\\xb5\\xcc\\x93\\x42\\x21\\\n\\x63\\xef\\xc0\\xe4\\xf5\\xa5\\x08\\x02\\x00\\x12\\xa9\\x04\\x00\\x8c\\x26\\x1a\\\n\\x56\\x57\\xff\\xaa\\xc2\\xd6\\x38\\xa5\\x94\\x48\\x24\\xc2\\xbc\\x92\\xc9\\x64\\\n\\xd7\\xae\\xdf\\x88\\x3f\\xf4\\xd9\\xe7\\xc7\\x0e\\x2b\\x8d\\x57\\x2c\\x06\\x00\\\n\\x91\\x50\\xa4\\xcc\\xc3\\xe1\\x47\\x21\\x10\\x08\\x01\\x00\\x17\\x08\\x45\\x22\\\n\\xe4\\x4d\\x7a\\x09\\x84\\x42\\x04\\x41\\x71\\x72\\xb0\\xe7\\x96\\xc9\\x34\\x3e\\\n\\x78\\x60\\xbf\\xb1\\xb1\\x51\\x7b\\x7b\\xc7\\x50\\x89\\x3c\\x93\\x42\\xa1\\x10\\\n\\x7d\\xd3\\x95\\x48\\x24\\xc6\\x8d\\x66\\x66\\x7f\\x1b\\x19\\x1e\\x76\\x2e\\x3d\\\n\\x35\\x31\\x21\\xce\\xd2\\xc2\\xfc\\xdd\\x6f\\xcf\\xb1\\x3b\\x87\\x4f\\x7d\\x4c\\\n\\x74\\x14\\x37\\xd0\\xdf\\xcd\\xd3\\xc7\\x9f\\x1b\\xb2\\xcc\\xc7\\x3f\\x31\\xe9\\\n\\x48\\x6e\\x4e\\xa6\\xa5\\xa5\\x05\\xae\\xb0\\x92\\x1b\\xa0\\xa1\\xa1\\x31\\x77\\\n\\x8e\\xfd\\xeb\\x9d\\x11\\x85\\x92\\x95\\xf1\\xd5\\xbd\\x7b\\x0f\\xac\\x67\\xd9\\\n\\xbb\\x7a\\x78\\x71\\xec\\x9d\\x6e\\x96\\xfc\\x6b\\x60\\x60\\x00\\x00\\xa4\\x6f\\\n\\x28\\x03\\x00\\x32\\x99\\xec\\xe3\\xb5\\xd4\\xda\\x7a\\x26\\x56\\xc3\\xfa\\xfb\\\n\\x2e\\x6f\\x6f\\xef\\xe0\\x06\\xbe\\xde\\x07\\x0c\\xd2\\xc7\\x2e\\xb1\\xa3\\xbf\\\n\\xef\\x8a\\x8a\\xca\\xaa\\x39\\x0e\\xf3\\x13\\x93\\x8e\\x2a\\xb4\\x35\\x4e\\x29\\\n\\x25\\x14\\x08\\x53\\x52\\xd3\\x9d\\x17\\xba\\xcf\\xb4\\xb5\\x3f\\x93\\x7e\\x3e\\\n\\xeb\\xe2\\x05\\x0e\\x87\\xad\\x3a\\xde\\x81\\x81\\x01\\x65\\x1e\\x0e\\x3f\\x0a\\\n\\x7e\\x3f\\x5f\\x7e\\x9a\\xc7\\xea\\x10\\xec\\x9c\\xd7\\xcb\\x43\\x50\\x04\\xb7\\\n\\x75\\xa3\\xa4\\xd4\\x9a\\x3d\\xc7\\x7b\\x45\\xa0\\x83\\xcb\\x62\\x3b\\x0e\\x9b\\\n\\xcd\\xb6\\x1d\\x2a\\xc1\\x95\\x05\\x02\\x01\\x8a\\xa2\\x78\\x4a\\xf1\\x78\\x7d\\\n\\xf8\\x39\\x67\\x96\\x6d\\x68\\xf8\\xa6\\x19\\x36\\x76\\x26\\x93\\xa6\\x58\\x4d\\\n\\xb7\\x4d\\x4c\\x3a\\xfa\\x76\\x7d\\xc3\\xff\\x44\\x28\\x2f\\xaf\\xf4\\xf1\\xe3\\\n\\xaa\\x48\\x23\\x41\\x3f\\x4f\\x9b\\x4a\\x57\\xf1\\xd6\\xb8\\xb7\\x97\\xf7\\xf8\\\n\\x49\\x1d\\x83\\x41\\xb7\\x9e\\x39\\x63\\x98\\x63\\xd0\\xd6\\xd6\\xde\\xf3\\xea\\\n\\x95\\x81\\xbe\\xbe\\xb1\\xb1\\xd1\\xd8\\x8e\\xae\\x44\\x22\\x6d\\xef\\x68\\x67\\\n\\x31\\x99\\xf8\\x4a\\x31\\x4c\\x5b\\xa3\\xe1\\x01\\x41\\x90\\xfe\\xfe\\x01\\xb1\\\n\\x58\\x44\\x67\\x30\\x14\\x7e\\x42\\x50\\xed\\xc3\\xd0\\xd6\\x11\\x47\\xa1\\x02\\\n\\x3c\\x5e\\xdf\\xab\\xde\\x5e\\xba\\xae\\xae\\x9e\\x1e\\x43\\x99\\x44\\x35\\x6e\\\n\\xdc\\x2c\\xcd\\xf9\\x2e\\x37\\x3d\\xed\\x0b\\x02\\x81\\x20\\x95\\x4a\\x1f\\x94\\\n\\x57\\x72\\x83\\xd7\\xd4\\xfe\\xbb\\xca\\xd0\\xc0\\x60\\x70\\x2d\\x35\\xc0\\xef\\\n\\x15\\xf4\\xf3\\x46\\x3c\\x8a\\x0c\\x06\\xdd\\xd9\\xc9\\xe1\\x4f\\xdd\\xc2\\x62\\\n\\x31\\x59\\x2c\\xe6\\x78\\x4c\\x18\\x14\\x0a\\x79\\x92\\x99\\xd9\\xc8\\x6c\\x8d\\\n\\x98\\x07\\x12\\x89\\x44\\xa7\\xeb\\x02\\xe8\\x8e\\x2c\\xde\\xa1\\xad\\xa3\\x89\\\n\\x42\\x19\\xe8\\x74\\x5d\\x3a\\x5d\\x57\\xb5\\xe4\\x1d\\xdf\\xac\\x2a\\x2a\\xad\\\n\\xac\\x2c\\xb1\\x6a\\x9b\\x4c\\x26\\xcf\\x9b\\x6b\\x6f\\x64\\x34\\x91\\x4e\\xa7\\\n\\x0f\\x2e\\xcf\\xbd\\x7d\\x03\\xd5\\x9f\\x3c\\xd5\\x3c\\x0c\\x07\\x5e\\xcb\\x3c\\\n\\xdf\\x5b\\x1f\\x66\\xa0\\xaf\\x3f\\x7d\\xfa\\xd4\\x8e\\xce\\xae\\xac\\xec\\x9c\\\n\\xf8\\xb8\\x18\\x7c\\x56\\x26\\xa8\\x7f\\xc1\\x53\\x63\\x04\\x78\\xf6\\xec\\xf9\\\n\\xb5\\xeb\\x37\\x7b\\x7a\\x5e\\x19\\x1b\\x4d\\xf4\\xf1\\x59\\x66\\x66\\x6a\\xaa\\\n\\xa0\\x96\\x52\\x43\\x8d\\x31\\x81\\xfa\\x7f\\x29\\x35\\xc6\\x18\\xff\\x01\\xb8\\\n\\x0d\\x12\\xd5\\xda\\x2c\\x50\\x6f\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\\n\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x11\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x53\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xd5\\xd5\\xd5\\xd4\\xd4\\xd4\\xd2\\xd2\\xd2\\\n\\xd1\\xd1\\xd1\\xd0\\xd0\\xd0\\xce\\xce\\xce\\xcd\\xcd\\xcd\\xd3\\xd3\\xd3\\xfd\\\n\\xfd\\xfd\\xe4\\xe4\\xe4\\xe2\\xe2\\xe2\\xe0\\xe0\\xe0\\xcb\\xcb\\xcb\\xca\\xca\\\n\\xca\\xf3\\xf3\\xf3\\xfb\\xfb\\xfb\\xc7\\xc7\\xc7\\xc8\\xc8\\xc8\\xf7\\xf7\\xf7\\\n\\xe8\\xf3\\xfb\\xbd\\xe3\\xfd\\xde\\xde\\xde\\xc3\\xc3\\xc3\\xfc\\xfc\\xfc\\xea\\\n\\xf5\\xfd\\x8a\\xcf\\xfe\\x83\\xcc\\xff\\xbc\\xe2\\xfd\\xdc\\xdc\\xdc\\xc0\\xc0\\\n\\xc0\\xeb\\xeb\\xeb\\xfa\\xfa\\xfa\\xe7\\xf3\\xfb\\x89\\xce\\xfe\\x96\\xd4\\xff\\\n\\x9a\\xd5\\xff\\x8b\\xcf\\xff\\xda\\xda\\xda\\xbd\\xbd\\xbd\\xe9\\xe9\\xe9\\xd3\\\n\\xeb\\xfb\\x98\\xd4\\xff\\x9e\\xd7\\xff\\x9b\\xd6\\xff\\x76\\xa9\\x42\\x65\\x9f\\\n\\x31\\xd9\\xd9\\xd9\\xb9\\xb9\\xb9\\xe8\\xe8\\xe8\\xd6\\xec\\xfb\\x88\\xcd\\xfd\\\n\\x98\\xd5\\xff\\x6e\\xa4\\x34\\x81\\xb3\\x5a\\x57\\x98\\x28\\xd7\\xd7\\xd7\\xb5\\\n\\xb5\\xb5\\xe7\\xe7\\xe7\\x6f\\xa5\\x3d\\x6f\\xa4\\x38\\x69\\xa2\\x34\\x63\\x9e\\\n\\x30\\x7c\\xaf\\x55\\xaa\\xcb\\x91\\x74\\xab\\x4f\\x47\\x8f\\x17\\xb7\\xb7\\xb7\\\n\\xbc\\xbc\\xbc\\xe5\\xe5\\xe5\\x6b\\xa3\\x37\\xb0\\xce\\x96\\xad\\xcd\\x94\\xa8\\\n\\xcb\\x90\\x90\\xbc\\x74\\xa1\\xc7\\x8a\\x68\\xa5\\x46\\x37\\x87\\x07\\xb8\\xb8\\\n\\xb8\\x63\\x9f\\x31\\x8e\\xba\\x6f\\x89\\xb8\\x6b\\x85\\xb6\\x66\\x80\\xb3\\x61\\\n\\x82\\xb5\\x67\\x98\\xc2\\x83\\x5c\\xa0\\x3c\\x26\\x7f\\x00\\x5b\\x9b\\x29\\xa9\\\n\\xca\\x90\\xa5\\xc8\\x8d\\xa1\\xc6\\x8a\\x9e\\xc5\\x88\\x85\\xb6\\x6a\\x97\\xc2\\\n\\x82\\x66\\xa5\\x48\\x41\\x8a\\x1b\\x52\\x97\\x21\\x4a\\x91\\x1b\\x44\\x8f\\x15\\\n\\x3c\\x8b\\x0f\\x5e\\x9f\\x3a\\x96\\xc1\\x80\\x62\\xa3\\x46\\x3d\\x7a\\x01\\xad\\\n\\xad\\xad\\xb6\\xb6\\xb6\\x2b\\x83\\x01\\x5f\\xa1\\x43\\x1f\\x7b\\x00\\x21\\x7d\\\n\\x00\\x1e\\x7b\\x03\\xff\\xff\\xff\\x8e\\xd6\\x41\\x67\\x00\\x00\\x00\\x01\\x74\\\n\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\\n\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xc1\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\\n\\x60\\x64\\x62\\x66\\x61\\x65\\x63\\x67\\x80\\x03\\x0e\\x4e\\x10\\xe0\\x42\\x88\\\n\\x30\\x73\\x72\\xb3\\xf1\\x70\\x72\\x72\\xf3\\xc2\\x04\\x58\\x39\\xd9\\x19\\xf8\\\n\\xf8\\x05\\x38\\x79\\x04\\xa1\\x02\\x6c\\x9c\\x3c\\x7c\\x42\\xc2\\x22\\xa2\\x9c\\\n\\x62\\xe2\\x10\\x01\\x76\\x4e\\x4e\\x09\\x61\\x49\\x29\\x69\\x19\\x4e\\x59\\x39\\\n\\xb0\\x00\\xaf\\x3c\\xa7\\x82\\xa2\\x92\\xb2\\x8a\\xaa\\x0c\\xa7\\x9a\\x3a\\x58\\\n\\x44\\x50\\x83\\x53\\x53\\x5a\\x4b\\x5b\\x47\\x55\\x57\\x4f\\xdf\\x00\\x2c\\x22\\\n\\x6e\\xc8\\x69\\x64\\x6c\\xa2\\xad\\x63\\x6a\\x66\\x6e\\x61\\x09\\x16\\x91\\xb3\\\n\\xe2\\xb4\\xb6\\xb1\\xb5\\xb3\\x77\\x70\\x74\\x72\\x86\\x18\\xec\\xe2\\xea\\xe6\\\n\\xee\\xe1\\xe0\\xe9\\xe5\\xed\\xe3\\x0b\\xb5\\xdb\\xcf\\xdf\\x23\\x20\\x30\\x28\\\n\\x38\\x24\\x34\\x2c\\x1c\\x2a\\x12\\x11\\x19\\x15\\x1d\\x13\\x1b\\x17\\x9f\\x00\\\n\\x73\\x6f\\x62\\x52\\x72\\x4a\\x6a\\x5a\\x7a\\x06\\xc2\\x8f\\x0c\\x99\\x59\\xd9\\\n\\x39\\xb9\\x0c\\x28\\x20\\x2f\\x1f\\x44\\x02\\x00\\xfe\\x06\\x1a\\xef\\xa9\\x93\\\n\\x1f\\x91\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x34\\x2d\\x30\\x32\\\n\\x54\\x31\\x31\\x3a\\x33\\x39\\x3a\\x35\\x37\\x2b\\x30\\x32\\x3a\\x30\\x30\\x38\\\n\\xc1\\x33\\x97\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x34\\x2d\\x30\\\n\\x32\\x54\\x31\\x31\\x3a\\x33\\x39\\x3a\\x35\\x37\\x2b\\x30\\x32\\x3a\\x30\\x30\\\n\\x49\\x9c\\x8b\\x2b\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x01\\xb7\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x57\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xf6\\xd0\\x4d\\xf6\\xcc\\x3f\\xf8\\xd2\\x52\\\n\\xf8\\xd7\\x66\\xf8\\xd2\\x59\\xf5\\xc4\\x26\\xf8\\xd9\\x62\\xf9\\xd8\\x6a\\xf8\\\n\\xda\\x73\\xfa\\xe0\\x8b\\xf9\\xdd\\x82\\xf7\\xce\\x51\\xf4\\xc3\\x32\\xf3\\xb7\\\n\\x1c\\xf8\\xda\\x74\\xfa\\xe0\\x8c\\xf9\\xdd\\x83\\xf6\\xd0\\x54\\xf3\\xbb\\x1c\\\n\\xf7\\xd0\\x4c\\xf9\\xde\\x83\\xf9\\xd9\\x7a\\xf4\\xc1\\x2c\\xf7\\xcf\\x4d\\xf3\\\n\\xc0\\x1f\\xf4\\xc3\\x33\\xf5\\xc7\\x2f\\xff\\xff\\xff\\x58\\x20\\x98\\x78\\x00\\\n\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\\n\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x3a\\x49\\x44\\x41\\\n\\x54\\x18\\xd3\\x63\\x60\\xa0\\x21\\x60\\x64\\x42\\xe5\\x33\\xb3\\xb0\\xb2\\x21\\\n\\x71\\xd9\\x39\\x38\\xb9\\xb8\\x79\\x78\\xf9\\x90\\x14\\xf0\\x0b\\x08\\x0a\\x09\\\n\\x23\\x6b\\x11\\x11\\x15\\x13\\x47\\x31\\x43\\x82\\x4d\\x52\\x0a\\x45\\x40\\x9a\\\n\\x81\\x81\\x8f\\x81\\x6a\\x00\\x00\\xb8\\x5b\\x01\\x92\\x5a\\x58\\xe3\\xe3\\x00\\\n\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\\n\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\\n\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\\n\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x5c\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x59\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xff\\x81\\x00\\xff\\x85\\x00\\xff\\x87\\x00\\\n\\xff\\x89\\x00\\xff\\x8b\\x00\\xff\\x6d\\x00\\xff\\xa6\\x41\\xff\\xbd\\x74\\xff\\\n\\xc0\\x79\\xff\\xc2\\x7d\\xff\\xc3\\x7e\\xff\\xc5\\x7f\\xff\\xc6\\x81\\xff\\xc8\\\n\\x82\\xff\\xca\\x83\\xff\\xca\\x86\\xff\\xcb\\x86\\xff\\xcc\\x86\\xff\\xcb\\x83\\\n\\xff\\xb1\\x4e\\xff\\x67\\x00\\xff\\xb6\\x77\\xff\\xaf\\x58\\xff\\xa7\\x52\\xff\\\n\\xa9\\x54\\xff\\xac\\x56\\xff\\xac\\x58\\xff\\xb0\\x5a\\xff\\xaf\\x59\\xff\\xbb\\\n\\x6d\\xff\\xc7\\x80\\xff\\x7d\\x00\\xff\\x41\\x00\\xff\\xb1\\x64\\xff\\xae\\x58\\\n\\xff\\xaf\\x5a\\xff\\xaa\\x55\\xff\\xc3\\x80\\xff\\x7b\\x00\\xff\\x83\\x00\\xff\\\n\\xc1\\x7d\\xff\\xa2\\x50\\xff\\xbf\\x7a\\xff\\x75\\x00\\xff\\xa4\\x4f\\xff\\x9c\\\n\\x49\\xff\\xba\\x77\\xff\\xc5\\x7e\\xff\\xbc\\x84\\xff\\xc0\\x84\\xff\\x9b\\x49\\\n\\xff\\x94\\x45\\xff\\xb5\\x73\\xff\\xc5\\x81\\xff\\xbd\\x84\\xff\\x8c\\x40\\xff\\\n\\xb0\\x70\\xff\\x5f\\x00\\xff\\xab\\x55\\xff\\xc6\\x9c\\xff\\x84\\x3c\\xff\\xab\\\n\\x6e\\xff\\x59\\x00\\xff\\xc8\\x83\\xff\\xaa\\x57\\xff\\x7b\\x38\\xff\\xa5\\x6b\\\n\\xff\\x53\\x00\\xff\\xc8\\x84\\xff\\xad\\x56\\xff\\x8c\\x55\\xff\\xa1\\x68\\xff\\\n\\x4d\\x00\\xff\\xc2\\x82\\xff\\x9d\\x67\\xff\\x47\\x00\\xff\\xca\\x84\\xff\\xb9\\\n\\x6d\\xff\\x9a\\x64\\xff\\x43\\x00\\xff\\xc9\\x80\\xff\\xb9\\x6a\\xff\\xb2\\x67\\\n\\xff\\xb7\\x76\\xff\\x99\\x47\\xff\\x92\\x43\\xff\\x8a\\x3f\\xff\\xa0\\x66\\xff\\\n\\x9b\\x62\\xff\\x7d\\x46\\xff\\x8a\\x58\\xff\\x86\\x55\\xff\\x93\\x60\\xff\\x45\\\n\\x00\\xff\\x65\\x00\\xff\\xaf\\x49\\xff\\xc1\\x7e\\xff\\xbe\\x79\\xff\\xb9\\x76\\\n\\xff\\xb4\\x73\\xff\\xaf\\x70\\xff\\xa9\\x6d\\xff\\xa4\\x6a\\xff\\xa0\\x67\\xff\\\n\\x71\\x33\\xff\\x4b\\x00\\xff\\x77\\x00\\xff\\x71\\x00\\xff\\x69\\x00\\xff\\x63\\\n\\x00\\xff\\x5d\\x00\\xff\\x55\\x00\\xff\\x51\\x00\\xff\\xff\\xff\\xf7\\x12\\x2b\\\n\\x39\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\\n\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xe1\\x49\\\n\\x44\\x41\\x54\\x18\\xd3\\x3d\\xcc\\x69\\x3b\\x02\\x61\\x18\\x05\\xe0\\x33\\xef\\\n\\x3b\\xd2\\x2a\\x44\\x8f\\xb2\\x3e\\x88\\x54\\xc8\\x58\\x22\\x2a\\xa6\\xc5\\x52\\\n\\x64\\x27\\x94\\xb5\\x30\\xb6\\xfc\\xff\\x2f\\xa6\\x52\\xe7\\xdb\\xb9\\xaf\\x73\\\n\\x1d\\x40\\x11\\x42\\x48\\x55\\x55\\xbb\\xcc\\x48\\x0b\\xa0\\x74\\x5b\\x6d\\x76\\\n\\x87\\xd3\\xd5\\xe3\\xee\\xed\\xeb\\xf7\\x0c\\x0c\\x42\\x58\\xbd\\x44\\x34\\xe4\\\n\\xf3\\x0f\\xd3\\xc8\\xe8\\xd8\\xf8\\x04\\x84\\x8d\\xd9\\x14\\x9a\\x9c\\x62\\x9e\\\n\\x0e\\xcc\\xcc\\x22\\x38\\xd7\\x02\\x22\\xe6\\x40\\x28\\x1c\\x81\\x70\\xcc\\xb7\\\n\\x84\\xd9\\x17\\x5a\\x58\\xb4\\x40\\x46\\x97\\xda\\xa0\\x2d\\xaf\\xac\\x9a\\xa7\\\n\\x6b\\x31\\x6a\\x48\\x53\\xd7\\x37\\xe2\\x90\\xae\\xcd\\x0e\\x6c\\x25\\x92\\x29\\\n\\xa8\\xdb\\x3b\\x8d\\xd6\\x1c\\x68\\x7a\\x3a\\x03\\x99\\xcd\\x75\\x80\\x76\\xf7\\\n\\xf6\\x21\\xdd\\x07\\xf4\\xff\\xa0\\x91\\x9e\\x2f\\x40\\x1e\\x1e\\xb5\\x81\\x48\\\n\\x2f\\x1e\\x43\\x39\\x39\\x3d\\x3b\\xbf\\xb8\\xbc\\xba\\x2e\\xd1\\xcd\\xed\\x5d\\\n\\xb9\\x82\\xfb\\x87\\xe8\\xe3\\xd3\\xf3\\x4b\\xb5\\xf6\\xfa\\x96\\x2f\\x96\\xdf\\\n\\x0d\\x20\\xfe\\x11\\xf9\\xfc\\xfa\\xfe\\xa9\\xff\\x1a\\x05\\xae\\x18\\xf8\\x03\\\n\\xe7\\xd2\\x28\\x04\\xbf\\x09\\xce\\x50\\x00\\x00\\x00\\x19\\x74\\x45\\x58\\x74\\\n\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\\n\\x77\\x69\\x74\\x68\\x20\\x47\\x49\\x4d\\x50\\xe7\\xaf\\x40\\xcb\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\\n\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\\n\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\\n\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\\n\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\\n\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x5b\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xc9\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x57\\xa2\\x4e\\x56\\xa1\\x4d\\x6d\\xb3\\x63\\\n\\x69\\xaf\\x5f\\x55\\xa0\\x4c\\x6c\\xb2\\x62\\x8f\\xd1\\x82\\x85\\xc8\\x7a\\x60\\\n\\xa6\\x57\\x54\\x9f\\x4b\\x6a\\xb0\\x60\\x8d\\xcf\\x81\\x8b\\xcf\\x7f\\x61\\xa7\\\n\\x58\\x40\\x85\\x39\\x53\\x9e\\x4b\\x8a\\xce\\x7f\\x89\\xce\\x7e\\x3d\\x82\\x37\\\n\\x66\\xb6\\x5c\\x79\\xc0\\x6d\\x52\\x9d\\x4a\\x68\\xae\\x5e\\x89\\xcd\\x7d\\x87\\\n\\xcd\\x7c\\x5f\\xa5\\x56\\x3c\\x81\\x36\\x66\\xb5\\x5b\\x86\\xc9\\x79\\x8d\\xce\\\n\\x80\\x5a\\xa6\\x51\\x51\\x9c\\x49\\x67\\xad\\x5c\\x86\\xcc\\x7c\\x85\\xcb\\x79\\\n\\x5d\\xa4\\x54\\x3b\\x80\\x35\\x63\\xb0\\x59\\x76\\xbd\\x6b\\x90\\xd2\\x84\\x85\\\n\\xc9\\x7a\\x6a\\xb2\\x60\\x6d\\xb4\\x63\\x83\\xc9\\x78\\x82\\xcb\\x78\\x5c\\xa3\\\n\\x53\\x3a\\x7f\\x34\\x6d\\xb5\\x63\\x87\\xcc\\x7b\\x81\\xca\\x76\\x81\\xc9\\x76\\\n\\x5a\\xa2\\x52\\x3a\\x7e\\x34\\x51\\x9a\\x49\\x64\\xac\\x5b\\x82\\xca\\x77\\x7e\\\n\\xc8\\x74\\x59\\xa0\\x51\\x39\\x7d\\x33\\x47\\x8e\\x40\\x5c\\xa3\\x54\\x57\\x9f\\\n\\x4f\\x38\\x7c\\x32\\x3d\\x83\\x37\\x37\\x7b\\x31\\xff\\xff\\xff\\x17\\x87\\x61\\\n\\x92\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\\n\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x6c\\x49\\\n\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x20\\x09\\x30\\xa2\\xf1\\x99\\x98\\x59\\x50\\\n\\xf8\\xac\\x6c\\xec\\x1c\\x9c\\x48\\x7c\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\x04\\x5f\\\n\\x80\\x45\\x50\\x88\\x53\\x18\\xcc\\x14\\x11\\x05\\x12\\x62\\xe2\\x12\\x92\\x52\\\n\\xd2\\x60\\xbe\\x8c\\xac\\x9c\\x3c\\x83\\x82\\xa2\\x92\\xb2\\x8a\\x2a\\x44\\xad\\\n\\x9a\\xba\\x86\\xa6\\x96\\xb6\\x8e\\xae\\x9e\\x3e\\x4c\\xb7\\xbc\\x81\\x90\\xa1\\\n\\x91\\xb1\\x89\\x29\\xc2\\x3c\\x33\\x73\\x0b\\x4b\\x2b\\x6b\\x64\\x17\\xd8\\xd8\\\n\\xda\\xd9\\xa3\\xba\\xd1\\xc1\\x91\\x04\\x0f\\x02\\x00\\x8d\\x75\\x08\\xa0\\x44\\\n\\x6f\\x4b\\x25\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\\n\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\\n\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\\n\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\\n\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\\n\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\\n\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\\n\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x26\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x65\\\n\\x50\\x4c\\x54\\x45\\x00\\x00\\x00\\x8d\\xb1\\xdd\\x7b\\xa7\\xdc\\x7a\\xa6\\xdc\\\n\\x7a\\xa4\\xda\\x79\\xa2\\xd8\\x76\\xa0\\xd5\\x75\\x9e\\xd4\\x73\\x9d\\xd2\\x72\\\n\\x9a\\xcf\\x70\\x99\\xce\\x6f\\x96\\xcb\\x6c\\x94\\xc9\\x7a\\x9a\\xc4\\x85\\xac\\\n\\xdd\\x92\\xb9\\xe8\\x6f\\x90\\xc1\\x66\\x8b\\xc0\\x7a\\xa4\\xdb\\xf6\\xf6\\xf6\\\n\\x63\\x87\\xbd\\x79\\xa3\\xd9\\xf5\\xf5\\xf5\\xf4\\xf5\\xf5\\xf4\\xf5\\xf4\\xf4\\\n\\xf4\\xf4\\xc3\\xc3\\xc3\\xf5\\xf4\\xf4\\x60\\x85\\xba\\xf2\\xf2\\xf2\\x58\\x83\\\n\\xd2\\xf3\\xf2\\xf2\\xff\\xff\\xff\\xf3\\xf3\\xf3\\x5e\\x81\\xb7\\xf0\\xf1\\xf1\\\n\\xf1\\xf0\\xf1\\xf1\\xf1\\xf0\\xf1\\xf1\\xf1\\x76\\xa9\\x42\\x65\\x9f\\x31\\x5c\\\n\\x7e\\xb5\\xee\\xee\\xef\\xef\\xef\\xef\\xee\\xef\\xee\\xee\\xee\\xee\\xef\\xef\\\n\\xee\\x6e\\xa4\\x34\\x81\\xb3\\x5a\\x57\\x98\\x28\\xef\\xee\\xee\\x5a\\x7c\\xb2\\\n\\x73\\x9c\\xd1\\xec\\xec\\xec\\xeb\\xec\\xec\\xec\\xeb\\xec\\x6f\\xa5\\x3d\\x6f\\\n\\xa4\\x38\\x69\\xa2\\x34\\x63\\x9e\\x30\\x7c\\xaf\\x55\\xaa\\xcb\\x91\\x74\\xab\\\n\\x4f\\x47\\x8f\\x17\\x58\\x7a\\xb0\\x6f\\x97\\xcc\\xe9\\xe9\\xe9\\x6b\\xa3\\x37\\\n\\xb0\\xce\\x96\\xad\\xcd\\x94\\xa8\\xcb\\x90\\x90\\xbc\\x74\\xa1\\xc7\\x8a\\x68\\\n\\xa5\\x46\\x37\\x87\\x07\\x6e\\x94\\xca\\xe7\\xe7\\xe7\\xe7\\xe7\\xe8\\x63\\x9f\\\n\\x31\\x8e\\xba\\x6f\\x89\\xb8\\x6b\\x85\\xb6\\x66\\x80\\xb3\\x61\\x82\\xb5\\x67\\\n\\x98\\xc2\\x83\\x5c\\xa0\\x3c\\x26\\x7f\\x00\\x6c\\x92\\xc8\\xe5\\xe5\\xe6\\xe5\\\n\\xe5\\xe5\\xe6\\xe5\\xe5\\x5b\\x9b\\x29\\xa9\\xca\\x90\\xa5\\xc8\\x8d\\xa1\\xc6\\\n\\x8a\\x9e\\xc5\\x88\\x85\\xb6\\x6a\\x97\\xc2\\x82\\x66\\xa5\\x48\\x41\\x8a\\x1b\\\n\\x51\\x71\\xa9\\x68\\x8e\\xc3\\x64\\x88\\xbe\\x61\\x85\\xbb\\x5f\\x83\\xb9\\x52\\\n\\x97\\x21\\x4a\\x91\\x1b\\x44\\x8f\\x15\\x3c\\x8b\\x0f\\x5e\\x9f\\x3a\\x96\\xc1\\\n\\x80\\x62\\xa3\\x46\\x3d\\x7a\\x01\\x2b\\x83\\x01\\x5f\\xa1\\x43\\x1f\\x7b\\x00\\\n\\x21\\x7d\\x00\\x1e\\x7b\\x03\\x00\\x00\\x00\\x4e\\x17\\x65\\x0f\\x00\\x00\\x00\\\n\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\\n\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xc4\\x49\\x44\\x41\\x54\\x18\\\n\\xd3\\x63\\x60\\xc0\\x00\\x8c\\x4c\\xcc\\x2c\\xac\\x6c\\xec\\x1c\\x9c\\x5c\\xdc\\\n\\x3c\\xbc\\x40\\x3e\\x1f\\x3f\\x32\\x10\\x60\\x60\\x60\\x42\\x01\\x82\\x0c\\x0c\\\n\\x42\\xc2\\xc8\\x40\\x84\\x81\\x41\\x54\\x4c\\x5c\\x42\\x52\\x5c\\x0a\\x02\\xa4\\\n\\x65\\x18\\x18\\x58\\x65\\xe5\\xe4\\xe4\\xe4\\xa5\\x14\\xc0\\x40\\x51\\x89\\x81\\\n\\x81\\x4d\\x59\\x45\\x55\\x45\\x0d\\x24\\xa0\\xae\\xa1\\xa0\\xa6\\xc9\\xc0\\xc0\\\n\\xae\\xa5\\xad\\xa5\\xa5\\xa3\\xab\\xa7\\xab\\xab\\x6f\\x60\\x68\\x64\\xcc\\xc0\\\n\\x60\\x62\\x6a\\x66\\x66\\x6a\\x6e\\x61\\x69\\x65\\x6d\\x63\\x6b\\x67\\xef\\xc0\\\n\\xc0\\xe0\\xe8\\x04\\x34\\xc3\\xc9\\xd9\\xc5\\xd5\\xd6\\xcd\\xdd\\xc3\\xd3\\x8b\\\n\\x81\\xc1\\xdb\\xc7\\xd7\\xc7\\xc7\\xc7\\xcf\\xd5\\x3f\\x20\\x30\\x28\\x38\\x24\\\n\\x34\\x8c\\x21\\x3c\\x22\\x32\\x2a\\x32\\x32\\x3a\\x26\\x36\\x2e\\x3e\\x21\\x31\\\n\\x29\\x99\\x81\\x21\\x25\\x55\\x30\\x2d\\x3d\\x23\\x33\\x2b\\x3b\\x27\\x37\\x2f\\\n\\xbf\\x20\\x05\\xd9\\x97\\x85\\x45\\xc5\\xa8\\xde\\x2e\\x29\\x05\\x91\\x00\\x31\\\n\\x9c\\x23\\x8d\\x09\\x13\\xee\\x0b\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\\n\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\\n\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\x30\\\n\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\\n\\x2d\\x30\\x33\\x2d\\x33\\x30\\x54\\x31\\x31\\x3a\\x30\\x39\\x3a\\x30\\x37\\x2b\\\n\\x30\\x32\\x3a\\x30\\x30\\x06\\x9a\\x16\\xe2\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\\n\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x8a\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xa7\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xed\\x8b\\x8b\\xea\\x84\\x84\\xfc\\xb3\\xb3\\\n\\xfc\\xbb\\xb9\\xfc\\xbd\\xbc\\xfa\\xb1\\xaf\\xf5\\xa1\\xa1\\xef\\x90\\x90\\xf4\\\n\\xa2\\xa0\\xfb\\xc6\\xc3\\xf8\\xb9\\xb6\\xed\\x89\\x87\\xe3\\x6f\\x6f\\xfc\\xb2\\\n\\xb0\\xfe\\xd9\\xd6\\xff\\xdb\\xd9\\xff\\xd6\\xd4\\xff\\xdc\\xda\\xfa\\xbf\\xbd\\\n\\xf1\\x95\\x95\\xee\\x8f\\x8f\\xf7\\xb2\\xb0\\xff\\xd4\\xd2\\xff\\xc4\\xc0\\xff\\\n\\xc6\\xc3\\xee\\x8f\\x8d\\xdd\\x60\\x60\\xfb\\xb2\\xb2\\xfe\\xcd\\xca\\xff\\xcf\\\n\\xcc\\xff\\xb5\\xb4\\xff\\xb2\\xb2\\xff\\xae\\xae\\xff\\xcf\\xcb\\xfd\\xcb\\xc6\\\n\\xfc\\xc3\\xc0\\xff\\xcb\\xc9\\xff\\x9f\\x9f\\xff\\x9d\\x9d\\xff\\x98\\x98\\xff\\\n\\xa5\\xa2\\xfc\\xca\\xc7\\xda\\x58\\x58\\xf9\\xad\\xad\\xfe\\xdb\\xd8\\xff\\xb9\\\n\\xb7\\xff\\xb0\\xb0\\xff\\xaf\\xae\\xff\\xab\\xab\\xff\\xa6\\xa6\\xff\\xb8\\xb5\\\n\\xff\\x9c\\x9c\\xff\\x9c\\x9a\\xff\\x96\\x96\\xff\\x96\\x94\\xff\\x91\\x90\\xfd\\\n\\xc8\\xc5\\xd7\\x50\\x50\\xf7\\xa8\\xa8\\xfe\\xd8\\xd5\\xff\\xb1\\xb0\\xff\\xa9\\\n\\xa9\\xff\\xa8\\xa7\\xff\\xa2\\xa2\\xff\\x9a\\x9a\\xff\\x94\\x94\\xff\\x92\\x92\\\n\\xff\\x91\\x8f\\xff\\x8a\\x8a\\xff\\x88\\x87\\xfd\\xc3\\xbf\\xd5\\x49\\x49\\xf5\\\n\\xa2\\xa2\\xfd\\xd4\\xd1\\xff\\xad\\xab\\xff\\xa1\\xa0\\xff\\x93\\x93\\xff\\x90\\\n\\x90\\xff\\x8c\\x8c\\xff\\x89\\x89\\xff\\x85\\x85\\xff\\x82\\x81\\xff\\x86\\x83\\\n\\xfd\\xc5\\xc1\\xd2\\x42\\x42\\xf3\\x9b\\x9b\\xf9\\xad\\xaa\\xff\\xc9\\xc5\\xff\\\n\\x8b\\x8b\\xff\\x8a\\x88\\xff\\x84\\x84\\xff\\x80\\x80\\xff\\x7d\\x7c\\xff\\x75\\\n\\x74\\xff\\xab\\xa5\\xe9\\x85\\x83\\xd0\\x3b\\x3b\\xee\\x8e\\x8e\\xf7\\xad\\xaa\\\n\\xff\\xc5\\xc1\\xff\\x9a\\x97\\xff\\x83\\x82\\xff\\x80\\x7f\\xff\\x76\\x75\\xff\\\n\\x82\\x7e\\xff\\xb1\\xab\\xef\\x95\\x93\\xcf\\x3a\\x3a\\xe9\\x80\\x80\\xf2\\x91\\\n\\x8d\\xfd\\xc4\\xc0\\xff\\xae\\xa6\\xff\\x7a\\x79\\xff\\x7b\\x7a\\xff\\x78\\x77\\\n\\xff\\x6e\\x6d\\xff\\x9d\\x95\\xfe\\xbe\\xb9\\xe8\\x76\\x72\\xcf\\x39\\x39\\xe3\\\n\\x71\\x71\\xe1\\x6a\\x6a\\xf2\\x9c\\x99\\xff\\xb7\\xb2\\xff\\x7d\\x79\\xff\\x6f\\\n\\x6d\\xf1\\x98\\x95\\xd1\\x3e\\x3e\\xcf\\x38\\x38\\xdb\\x5b\\x5b\\xeb\\x7c\\x79\\\n\\xff\\xbf\\xba\\xff\\xbc\\xb6\\xeb\\x80\\x7c\\xd0\\x3d\\x3d\\xd6\\x4d\\x4d\\xd4\\\n\\x47\\x47\\xe5\\x64\\x60\\xd0\\x3c\\x3c\\xff\\xff\\xff\\xc2\\x14\\x54\\xfa\\x00\\\n\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\\n\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xbd\\x49\\x44\\x41\\\n\\x54\\x18\\xd3\\x63\\x60\\xc0\\x03\\x18\\x99\\x20\\x34\\x33\\x0b\\x2b\\x1b\\x3b\\\n\\x03\\x03\\x07\\x27\\x17\\x37\\x0f\\x2f\\x90\\xcf\\xc7\\x2f\\x20\\x28\\x24\\x2c\\\n\\x22\\x2a\\x26\\x2e\\x21\\x29\\x28\\x25\\xcd\\x20\\x23\\x2b\\x27\\xaf\\xa0\\xa8\\\n\\xa4\\xac\\xa2\\xaa\\xa6\\xae\\xa1\\xa9\\xa5\\xcd\\xa0\\xa3\\xab\\xa7\\x6f\\x60\\\n\\x68\\x24\\x6f\\x6c\\x62\\x6a\\x66\\x6e\\x61\\x69\\xc5\\x60\\x6d\\x63\\x6b\\x67\\\n\\xef\\xa0\\xe6\\x68\\xe6\\xe4\\xec\\xe2\\xea\\xe6\\xee\\xc1\\xe0\\xe9\\xe5\\xed\\\n\\xa3\\xee\\x68\\xe6\\xeb\\xe7\\x1f\\x10\\x18\\x14\\x1c\\x12\\xca\\x10\\x16\\x1e\\\n\\x61\\x0e\\x94\\x8c\\x8c\\x8a\\x8e\\x89\\x8d\\x8b\\x4f\\x48\\x64\\x60\\x48\\x4a\\\n\\x4e\\x49\\x0d\\x0c\\x4c\\x4b\\x8f\\xcd\\xc8\\xcc\\xca\\xce\\x01\\xb9\\x23\\x37\\\n\\x2f\\xbf\\xa0\\xb0\\xa8\\xb8\\xa4\\xb4\\xac\\xbc\\x02\\xe2\\xb2\\xca\\xaa\\xea\\\n\\x9a\\xda\\xba\\xf8\\xfa\\x86\\x46\\xb8\\xa3\\x9b\\x9a\\x5b\\x5a\\xdb\\xda\\x91\\\n\\xbd\\xd1\\xd1\\xd9\\xd5\\xcd\\x40\\x24\\x00\\x00\\xaa\\xe7\\x29\\x8b\\xb8\\xe5\\\n\\x36\\xf4\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\\n\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\\n\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\\n\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\\n\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\\n\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\x2d\\x30\\x34\\x54\\x31\\x35\\x3a\\x35\\x38\\\n\\x3a\\x33\\x30\\x2b\\x30\\x32\\x3a\\x30\\x30\\x09\\xe9\\x9e\\x75\\x00\\x00\\x00\\\n\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xb8\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xf0\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x8d\\xb1\\xdd\\x7b\\xa7\\xdc\\x7a\\xa6\\xdc\\\n\\x7a\\xa4\\xda\\x79\\xa2\\xd8\\x76\\xa0\\xd5\\x75\\x9e\\xd4\\x73\\x9d\\xd2\\x72\\\n\\x9a\\xcf\\x70\\x99\\xce\\x6f\\x96\\xcb\\x6c\\x94\\xc9\\x7a\\x9a\\xc4\\x85\\xac\\\n\\xdd\\x92\\xb9\\xe8\\x6f\\x90\\xc1\\x66\\x8b\\xc0\\x7a\\xa4\\xdb\\xf6\\xf6\\xf6\\\n\\x63\\x87\\xbd\\x79\\xa3\\xd9\\xf5\\xf5\\xf5\\xf4\\xf5\\xf5\\xf4\\xf5\\xf4\\xf4\\\n\\xf4\\xf4\\xc3\\xc3\\xc3\\xf5\\xf4\\xf4\\x60\\x85\\xba\\xf2\\xf2\\xf2\\x58\\x83\\\n\\xd2\\xf3\\xf2\\xf2\\xff\\xff\\xff\\xf3\\xf3\\xf3\\x5e\\x81\\xb7\\xf0\\xf1\\xf1\\\n\\xf1\\xf0\\xf1\\xf1\\xf1\\xf0\\xf1\\xf1\\xf1\\x5c\\x7e\\xb5\\xee\\xee\\xef\\xef\\\n\\xef\\xef\\xee\\xef\\xee\\xee\\xee\\xee\\xef\\xef\\xee\\xef\\xee\\xee\\x5a\\x7c\\\n\\xb2\\x73\\x9c\\xd1\\xec\\xec\\xec\\xeb\\xec\\xec\\xec\\xeb\\xec\\x58\\x7a\\xb0\\\n\\x6f\\x97\\xcc\\xe9\\xe9\\xe9\\xea\\xea\\xe9\\x54\\x75\\xac\\x6e\\x94\\xca\\xe7\\\n\\xe7\\xe7\\xe7\\xe7\\xe8\\x53\\x73\\xaa\\x6c\\x92\\xc8\\xe5\\xe5\\xe6\\xe5\\xe5\\\n\\xe5\\xe6\\xe5\\xe5\\xe5\\xe6\\xe5\\xe6\\xe6\\xe6\\xe6\\xe6\\xe5\\xe6\\xe5\\xe6\\\n\\x51\\x72\\xa9\\x51\\x71\\xa9\\x68\\x8e\\xc3\\x64\\x88\\xbe\\x61\\x85\\xbb\\x5f\\\n\\x83\\xb9\\x5c\\x7e\\xb4\\x58\\x7b\\xb1\\x57\\x79\\xae\\x56\\x76\\xad\\x54\\x75\\\n\\xab\\x53\\x73\\xa9\\x51\\xf1\\xb9\\xea\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\xa2\\x49\\x44\\x41\\x54\\x18\\xd3\\x85\\xcc\\x57\\x13\\\n\\xc1\\x40\\x00\\x04\\xe0\\x15\\x22\\x7a\\x27\\x6a\\x74\\x8e\\x23\\x44\\x3f\\x5c\\\n\\xd4\\xe8\\xe5\\xff\\xff\\x1b\\x19\\xf2\\x10\\xe3\\xc1\\xf7\\xb6\\x3b\\xb3\\x0b\\\n\\xfc\\x70\\x08\\x4e\\x97\\xe8\\x96\\x3c\\x5e\\x9f\\x3f\\x10\\x34\\x73\\x28\\x6c\\\n\\x17\\x01\\x84\\x2f\\x51\\x20\\x16\\xb7\\x4b\\x00\\xc9\\x94\\x9c\\xce\\xc8\\xd9\\\n\\x8f\\x5c\\x1e\\x10\\x0b\\x8a\\xa2\\x14\\xb3\\xa5\\xb7\\x72\\x05\\x70\\x57\\x6b\\\n\\xf5\\x5a\\xc3\\x2a\\x1a\\x4d\\x40\\x22\\x2d\\x42\\xda\\xb4\\x43\\x29\\x25\\xb4\\\n\\xab\\x02\\xbd\\xbe\\xa6\\xf5\\x07\\xd6\\x87\\x36\\x04\\x46\\x63\\xf3\\x63\\x6c\\\n\\x4d\\x26\\x53\\x60\\xc6\\xe6\\x8c\\x31\\xab\\x60\\x0b\\x60\\xc9\\xf5\\x95\\xae\\\n\\x73\\x9d\\xaf\\x37\\x7c\\xbb\\xdb\\x03\\xc6\\x21\\x7a\\x3c\\x9d\\x2f\\xea\\xf5\\\n\\x76\\x7f\\x3c\\x0d\\x03\\xff\\xbd\\x00\\x98\\x29\\x18\\xb9\\xee\\x13\\xfe\\xd2\\\n\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\\n\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\\n\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x32\\x2d\\x30\\x33\\x2d\\x33\\x30\\x54\\x31\\x31\\x3a\\x34\\x34\\x3a\\x30\\\n\\x37\\x2b\\x30\\x32\\x3a\\x30\\x30\\x43\\xbd\\xee\\xd0\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x8d\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x8f\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xc7\\xc7\\xc7\\xc4\\xc4\\xc4\\xe5\\xe5\\xe5\\\n\\xe4\\xe4\\xe4\\xac\\xac\\xac\\xd1\\xd1\\xd1\\xce\\xce\\xce\\xca\\xca\\xca\\xc2\\\n\\xc2\\xc2\\xde\\xde\\xde\\xdd\\xdd\\xdd\\xb2\\xb2\\xb2\\xa7\\xa7\\xa7\\xa3\\xa3\\\n\\xa3\\xdc\\xdc\\xdc\\xed\\xed\\xed\\xdb\\xdb\\xdb\\xbe\\xbe\\xbe\\xd6\\xd6\\xd6\\\n\\xd4\\xd4\\xd4\\xb0\\xb0\\xb0\\xcb\\xcb\\xcb\\xe7\\xe7\\xe7\\xb7\\xb7\\xb7\\xd9\\\n\\xd9\\xd9\\xd2\\xd2\\xd2\\xc8\\xc8\\xc8\\x79\\x79\\x79\\xc5\\xc5\\xc5\\xcc\\xcc\\\n\\xcc\\xc9\\xc9\\xc9\\xba\\xba\\xba\\x9c\\x9c\\x9c\\xa1\\xa1\\xa1\\xc6\\xc6\\xc6\\\n\\xca\\xbb\\x92\\xd8\\xa5\\x58\\xdb\\xb1\\x85\\xd0\\x9d\\x46\\xc0\\xc0\\xc0\\xd8\\\n\\xd8\\xd8\\xcd\\xcd\\xcd\\xbc\\xbc\\xbc\\x82\\x82\\x82\\x8f\\x8f\\x8f\\xce\\xbf\\\n\\x8a\\xe7\\xbe\\x77\\xf0\\xd2\\xb4\\xff\\xf3\\xe5\\xef\\xd2\\xac\\xc2\\x8b\\x4c\\\n\\xe9\\xe9\\xe9\\xa5\\xa5\\xa5\\xc9\\xac\\x4b\\xec\\xd4\\x7f\\xf9\\xe3\\xb2\\xe7\\\n\\xc0\\x8b\\xf6\\xd3\\xae\\xfc\\xe0\\xc4\\xd0\\x9d\\x66\\xbf\\xbf\\xbf\\xe2\\xe2\\\n\\xe2\\xb1\\xb1\\xb1\\xee\\xd4\\x7c\\xfd\\xf6\\xc4\\xf6\\xdd\\x6c\\xed\\xca\\x6d\\\n\\xd7\\xa3\\x63\\xd2\\x9f\\x66\\x71\\x68\\x5f\\xa0\\xa0\\xa0\\xcf\\xcf\\xcf\\x9e\\\n\\x9e\\x9e\\xee\\xd3\\x79\\xfd\\xf7\\xc7\\xf5\\xdc\\x5f\\xf7\\xe2\\x5b\\xf2\\xd6\\\n\\x7a\\xd5\\x95\\x43\\x70\\x63\\x54\\x53\\x53\\x53\\xc1\\xc1\\xc1\\xc2\\xb0\\x8c\\\n\\xe7\\xcb\\x77\\xf5\\xdc\\x5e\\xf7\\xe1\\x5a\\xf1\\xd4\\x7b\\xd9\\x96\\x47\\x8e\\\n\\x75\\x58\\xa6\\xa6\\xa6\\xd5\\xd5\\xd5\\xc4\\xb4\\x91\\xd6\\xb9\\x75\\xfd\\xf6\\\n\\xc2\\xf7\\xdf\\x63\\xf8\\xe2\\x5d\\xf0\\xd3\\x79\\xda\\x96\\x47\\xcd\\xc3\\xb9\\\n\\x6e\\x6e\\x6e\\xa2\\x8e\\x71\\xd5\\xb6\\x7a\\xd1\\xb7\\x90\\xe4\\xc9\\x55\\xf5\\\n\\xdf\\x5b\\xed\\xd0\\x78\\xd1\\x91\\x45\\xad\\xa3\\x97\\x80\\x80\\x80\\x81\\x81\\\n\\x81\\x6f\\x6f\\x6f\\xaa\\x89\\x43\\xff\\xf2\\xe0\\xd8\\x9a\\x54\\xbe\\x7a\\x1a\\\n\\xc5\\x98\\x49\\xb8\\x7f\\x38\\x58\\x58\\x58\\x4e\\x4e\\x4e\\x49\\x49\\x49\\x83\\\n\\x65\\x2b\\xf9\\xc7\\x94\\xf9\\xc9\\x91\\xc9\\x85\\x41\\xaa\\x68\\x23\\x6d\\x61\\\n\\x52\\x55\\x3d\\x11\\x87\\x5f\\x28\\xbc\\x88\\x49\\xa9\\x83\\x46\\x62\\x57\\x4b\\\n\\xff\\xff\\xff\\x15\\x5a\\xcc\\xb3\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\\n\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\\n\\x48\\x00\\x00\\x00\\xd8\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x80\\x00\\x46\\\n\\x26\\x06\\x14\\xc0\\xc8\\xcc\\xc2\\x0a\\xe7\\xb0\\xb1\\x73\\x30\\x70\\x72\\x71\\\n\\xf3\\x30\\xb0\\xf2\\xf2\\x81\\x05\\xf8\\x05\\x04\\x39\\x85\\x84\\x45\\x44\\x59\\\n\\xc5\\xc4\\x25\\xc0\\x02\\x4c\\xfc\\x22\\x92\\x82\\xc2\\x22\\x92\\x52\\x62\\xd2\\\n\\x32\\x60\\x01\\x59\\x11\\x39\\x79\\x05\\x45\\x25\\x4e\\x65\\x15\\x55\\x35\\x75\\\n\\x06\\x06\\x69\\x26\\x0d\\x4d\\x2d\\x6d\\x1d\\x06\\x06\\x5d\\x3d\\x7d\\x03\\x43\\\n\\x23\\x63\\x06\\x26\\x13\\x61\\x79\\x76\\x53\\xa0\\x42\\x33\\x73\\x0b\\x4b\\x2b\\\n\\x6b\\x1b\\x06\\x5b\\x3b\\x29\\x65\\x2d\\x7b\\xa0\\x80\\x83\\xa3\\x93\\xb3\\x8b\\\n\\xab\\x1b\\x03\\x9f\\xae\\xbb\\x87\\xb2\\x9c\\x27\\x83\\x97\\xb7\\x8f\\xaf\\x9f\\\n\\x7f\\x40\\x20\\x50\\x8a\\x55\\x36\\x48\\x36\\x38\\xc4\\x3b\\x34\\x2c\\x3c\\x22\\\n\\x12\\x6c\\x4b\\x54\\xb4\\x6c\\x4c\\x6c\\x5c\\x7c\\x42\\x62\\x52\\x72\\x0a\\x58\\\n\\x40\\x9b\\x2b\\x35\\x2d\\x3d\\x23\\x33\\x2b\\x3b\\x47\\x2a\\x17\\x2c\\x90\\x97\\\n\\x5f\\x50\\x58\\x54\\x5c\\x52\\xca\\x50\\x56\\x5e\\x01\\xf5\\x4d\\x65\\x55\\x75\\\n\\x4d\\x6d\\x1d\\x92\\x5f\\xeb\\x1b\\x1a\\x9b\\x9a\\xa1\\x6c\\x00\\x25\\xdc\\x24\\\n\\xb5\\x31\\xb5\\x19\\x81\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\\n\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\\n\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\\n\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\\n\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\\n\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\\n\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\\n\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x9a\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xdb\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x85\\x85\\x85\\x9e\\x9e\\x9e\\x7c\\x7c\\x7c\\\n\\x4c\\x4c\\x4c\\x91\\x91\\x91\\xe8\\xe8\\xe8\\xdd\\xdd\\xdd\\xc1\\xc1\\xc1\\x81\\\n\\x81\\x81\\x7b\\x7b\\x7b\\xd9\\xd9\\xd9\\xc4\\xc4\\xc4\\x73\\x73\\x73\\xd5\\xd5\\\n\\xd5\\x58\\x58\\x58\\x4b\\x4b\\x4b\\x65\\x65\\x65\\x92\\x92\\x92\\x79\\x79\\x79\\\n\\xa8\\xa8\\xa8\\x32\\x32\\x32\\x82\\x82\\x82\\x3f\\x3f\\x3f\\xbd\\xbd\\xbd\\xce\\\n\\xce\\xce\\xc2\\xc2\\xc2\\xad\\xad\\xad\\x67\\x67\\x67\\x52\\x52\\x52\\x41\\x41\\\n\\x41\\x46\\x46\\x46\\x51\\x51\\x51\\x4d\\x4d\\x4d\\x8d\\x8d\\x8d\\xaa\\xaa\\xaa\\\n\\xae\\xae\\xae\\x97\\x97\\x97\\x71\\x71\\x71\\x78\\x78\\x78\\x4a\\x4a\\x4a\\x64\\\n\\x64\\x64\\x6b\\x6b\\x6b\\x00\\x00\\x00\\x5f\\xb5\\x54\\x58\\xb1\\x4d\\x50\\xaa\\\n\\x47\\x48\\xa3\\x3f\\x30\\x8f\\x2c\\x2a\\x88\\x27\\x26\\x83\\x23\\x26\\x81\\x22\\\n\\x57\\xb0\\x4c\\x96\\xcc\\x8e\\x8c\\xc8\\x83\\x3f\\x9c\\x38\\x2a\\x87\\x26\\x5a\\\n\\xaf\\x53\\x58\\xae\\x51\\x24\\x7f\\x21\\x4e\\xa8\\x45\\x88\\xc6\\x7f\\x7c\\xc0\\\n\\x72\\x36\\x94\\x30\\x26\\x82\\x22\\x57\\xad\\x50\\x55\\xac\\x4f\\x23\\x7d\\x20\\\n\\x45\\xa1\\x3d\\x3d\\x9a\\x36\\x36\\x93\\x30\\x2f\\x8c\\x2a\\xff\\xff\\xff\\x08\\\n\\x30\\x12\\x56\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\\n\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\\n\\x99\\x49\\x44\\x41\\x54\\x18\\xd3\\x85\\x8c\\xd5\\x16\\x82\\x00\\x10\\x05\\x2f\\\n\\x25\\x16\\x02\\x2a\\x60\\x51\\x02\\x4a\\xd8\\xdd\\x1d\\xff\\xff\\x47\\x8a\\x88\\\n\\x7a\\x78\\x71\\x9e\\x76\\xe7\\xec\\x0e\\x00\\x10\\x24\\x05\\x50\\x24\\x81\\x08\\\n\\x9a\\x49\\xb1\\xe9\\x4c\\x36\\xc7\\xe6\\x19\\xfa\\x25\\xb8\\x02\\x2f\\x88\\xc5\\\n\\x92\\x28\\xf0\\x65\\x2e\\xdc\\x25\\x19\\x50\\x2a\\xd5\\x5a\\x5d\\x01\\x64\\x29\\\n\\x34\\x0d\\xa8\\x9a\\x6e\\x18\\xba\\xa6\\x3e\\xc7\\x10\\xb3\\x69\\xd9\\x4e\\xab\\\n\\xed\\xd8\\x56\\xd3\\x8c\\xaa\\xae\\xe7\\x07\\x80\\xef\\x7b\\x2e\\x3e\\x04\\xe8\\\n\\x74\\x7b\\x7d\\x0c\\x86\\xa3\\xf1\\x5b\\x04\\x93\\xe9\\x6c\\x1e\\x2c\\x96\\xab\\\n\\x75\\x7c\\xb1\\xd9\\xee\\xf6\\x38\\x1c\\x4f\\xe7\\x58\\x5c\\xae\\xb7\\xfb\\xef\\\n\\x0b\\x12\\xfc\\x8f\\x22\\x19\\xc5\\x37\\xfa\\x00\\x50\\xed\\x16\\x2b\\xc1\\x42\\\n\\x1f\\x17\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\\n\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\\n\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\\n\\x30\\x31\\x32\\x2d\\x30\\x39\\x2d\\x31\\x38\\x54\\x31\\x31\\x3a\\x34\\x31\\x3a\\\n\\x34\\x32\\x2b\\x30\\x32\\x3a\\x30\\x30\\xd8\\x81\\xa8\\x89\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\\n\\x32\\x30\\x31\\x32\\x2d\\x30\\x39\\x2d\\x31\\x38\\x54\\x31\\x31\\x3a\\x34\\x31\\\n\\x3a\\x34\\x32\\x2b\\x30\\x32\\x3a\\x30\\x30\\xa9\\xdc\\x10\\x35\\x00\\x00\\x00\\\n\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x45\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x44\\\n\\x50\\x4c\\x54\\x45\\xff\\x71\\x34\\xff\\x81\\x00\\xff\\x85\\x00\\xff\\x87\\x00\\\n\\xff\\x89\\x00\\xff\\x8b\\x00\\xff\\x6d\\x00\\xff\\xa6\\x41\\xff\\xbd\\x74\\xff\\\n\\xc0\\x79\\xff\\xc2\\x7d\\xff\\xc3\\x7e\\xff\\xc5\\x7f\\xff\\xc6\\x81\\xff\\xc8\\\n\\x82\\xff\\xca\\x83\\xff\\xca\\x86\\xff\\xcb\\x86\\xff\\xcc\\x86\\xff\\xcb\\x83\\\n\\xff\\xb1\\x4e\\xff\\x67\\x00\\xff\\xaf\\x58\\xff\\xa7\\x52\\xff\\xa9\\x54\\xff\\\n\\xac\\x56\\xff\\xac\\x58\\xff\\xb0\\x5a\\xff\\xaf\\x59\\xff\\xbb\\x6d\\xff\\xc7\\\n\\x80\\xff\\x7d\\x00\\xff\\xae\\x68\\xf4\\xf7\\xfb\\xff\\xaf\\x5a\\xff\\xaa\\x55\\\n\\xff\\xc3\\x80\\xff\\x7b\\x00\\xff\\x83\\x00\\xff\\xc1\\x7d\\xff\\xa4\\x4f\\xff\\\n\\xa2\\x50\\xff\\xbf\\x7a\\xff\\x75\\x00\\xff\\xbc\\x84\\xff\\xc0\\x84\\xff\\x9c\\\n\\x49\\xff\\xba\\x77\\xff\\xc5\\x7e\\xff\\xbd\\x84\\xff\\x94\\x45\\xff\\xb5\\x73\\\n\\xff\\xc5\\x81\\xff\\xab\\x55\\xff\\x8c\\x40\\xff\\xb0\\x70\\xff\\x5f\\x00\\xff\\\n\\xaa\\x57\\xff\\x84\\x3c\\xff\\xab\\x6e\\xff\\x59\\x00\\xff\\xc8\\x83\\xff\\xad\\\n\\x56\\xff\\x7b\\x38\\xff\\xa5\\x6b\\xff\\x53\\x00\\xff\\xc8\\x84\\xff\\xc2\\x82\\\n\\xff\\x8c\\x55\\xff\\xa1\\x68\\xff\\x4d\\x00\\xff\\x9d\\x67\\xff\\x47\\x00\\xff\\\n\\xca\\x84\\xff\\xb7\\x76\\xff\\x99\\x47\\xff\\x92\\x43\\xff\\x8a\\x3f\\xff\\xa0\\\n\\x66\\xff\\x9b\\x62\\xff\\x9a\\x64\\xff\\x43\\x00\\xff\\xc9\\x80\\xff\\xc1\\x7e\\\n\\xff\\xbe\\x79\\xff\\xb9\\x76\\xff\\xb4\\x73\\xff\\xaf\\x70\\xff\\xa9\\x6d\\xff\\\n\\xa4\\x6a\\xff\\xa0\\x67\\xff\\x8a\\x58\\xff\\x86\\x55\\xff\\x93\\x60\\xff\\x45\\\n\\x00\\xff\\x65\\x00\\xff\\xaf\\x49\\xff\\x71\\x33\\xff\\x4b\\x00\\xff\\x77\\x00\\\n\\xff\\x71\\x00\\xff\\x69\\x00\\xff\\x63\\x00\\xff\\x5d\\x00\\xff\\x55\\x00\\xff\\\n\\x51\\x00\\xff\\x41\\x00\\xff\\x71\\x34\\xf7\\xb7\\x40\\x4d\\x00\\x00\\x00\\x01\\\n\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\\n\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xdb\\x49\\x44\\x41\\x54\\x18\\xd3\\\n\\x63\\x60\\x60\\x64\\x62\\x62\\x62\\x66\\x61\\x61\\x61\\x05\\x02\\x66\\x36\\x06\\\n\\x06\\x46\\x76\\x0e\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\x01\\x41\\x21\\x61\\x11\\\n\\x51\\x06\\x26\\x0e\\x0e\\x31\\x31\\x31\\x71\\x09\\x49\\x29\\x31\\x69\\x19\\x59\\\n\\x39\\x79\\x06\\x26\\x4e\\x4e\\x05\\xa0\\x88\\xa2\\x22\\x90\\x50\\x52\\x56\\x51\\\n\\x65\\x50\\x53\\x57\\xd7\\x80\\x09\\x48\\x68\\x6a\\x69\\x33\\x30\\x71\\x73\\xeb\\\n\\x80\\xf8\\x20\\x11\\x5d\\x3d\\x7d\\x36\\x06\\x66\\x03\\x03\\x43\\x98\\x80\\x98\\\n\\x91\\x31\\xd0\\x50\\x13\\x13\\x53\\xb0\\x06\\x10\\x36\\x33\\xb7\\x60\\x60\\xe6\\\n\\xe5\\xb5\\x84\\x0b\\x58\\x59\\xdb\\x30\\xb0\\xd8\\xda\\xda\\x81\\x95\\x83\\x44\\\n\\xec\\x1d\\x1c\\x19\\x98\\x9d\\x9c\\x9c\\xe1\\x02\\x2e\\xae\\x6e\\x0c\\xcc\\xfc\\\n\\xfc\\x10\\x3e\\x48\\xc4\\xde\\xdd\\x83\\x81\\xd9\\xd3\\x53\\x51\\xd1\\xcb\\xdb\\\n\\xc7\\xd7\\xcf\\x1f\\x28\\x10\\x10\\xc8\\xc0\\x18\\x14\\x14\\x1c\\x12\\x1a\\x16\\\n\\x1e\\x11\\x19\\xe5\\x1e\\x1d\\x13\\x1b\\xc7\\x10\\x9f\\x60\\x00\\x17\\x08\\x88\\\n\\x4d\\x4c\\x62\\x60\\xb0\\x48\\xd6\\x4e\\x49\\x4d\\x4b\\xcf\\xc8\\x4c\\xf2\\xc8\\\n\\x8a\\x4b\\x62\\x00\\x00\\x8b\\x7c\\x27\\xe4\\x4e\\x05\\xb2\\x06\\x00\\x00\\x00\\\n\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\\n\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\\n\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\\n\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\\n\\x34\\x2d\\x31\\x30\\x54\\x31\\x32\\x3a\\x31\\x32\\x3a\\x30\\x32\\x2b\\x30\\x32\\\n\\x3a\\x30\\x30\\x28\\x71\\xb6\\x4c\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\\n\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x33\\x2d\\\n\\x30\\x34\\x2d\\x31\\x30\\x54\\x31\\x32\\x3a\\x31\\x32\\x3a\\x30\\x32\\x2b\\x30\\\n\\x32\\x3a\\x30\\x30\\x59\\x2c\\x0e\\xf0\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\\n\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x55\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x5f\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xff\\x81\\x00\\xff\\x85\\x00\\xff\\x87\\x00\\\n\\xff\\x89\\x00\\xff\\x8b\\x00\\xff\\x6d\\x00\\xff\\xa6\\x41\\xff\\xbd\\x74\\xff\\\n\\xc0\\x79\\xff\\xc2\\x7d\\xff\\xc3\\x7e\\xff\\xc5\\x7f\\xff\\xc6\\x81\\xff\\xc8\\\n\\x82\\xff\\xca\\x83\\xff\\xca\\x86\\xff\\xcb\\x86\\xff\\xcc\\x86\\xff\\xcb\\x83\\\n\\xff\\xb1\\x4e\\xff\\x67\\x00\\xff\\xb6\\x77\\xff\\xaf\\x58\\xff\\xa7\\x52\\xff\\\n\\xa9\\x54\\xff\\xac\\x56\\xff\\xac\\x58\\xff\\xb0\\x5a\\xff\\xaf\\x59\\xff\\xbb\\\n\\x6d\\xff\\xc7\\x80\\xff\\x7d\\x00\\xff\\xb8\\x81\\xff\\x41\\x00\\xff\\xaf\\x5a\\\n\\xff\\xaa\\x55\\xff\\xc3\\x80\\xff\\x7b\\x00\\xff\\x83\\x00\\xff\\xc1\\x7d\\xff\\\n\\xae\\x68\\xff\\xd5\\xbc\\xff\\xa2\\x50\\xff\\xbf\\x7a\\xff\\x75\\x00\\xff\\xa4\\\n\\x4f\\xff\\x9c\\x49\\xff\\xba\\x77\\xff\\xc5\\x7e\\xff\\xbc\\x84\\xff\\x9b\\x49\\\n\\xff\\x94\\x45\\xff\\xb5\\x73\\xff\\xc5\\x81\\xff\\xbd\\x84\\xff\\x9a\\x50\\xff\\\n\\x8c\\x40\\xff\\xb0\\x70\\xff\\x5f\\x00\\xff\\xab\\x55\\xff\\xc6\\x9c\\xff\\x84\\\n\\x3c\\xff\\xab\\x6e\\xff\\x59\\x00\\xff\\xc8\\x83\\xff\\xaa\\x57\\xff\\x7b\\x38\\\n\\xff\\xa5\\x6b\\xff\\x53\\x00\\xff\\xc8\\x84\\xff\\xad\\x56\\xff\\x8c\\x55\\xff\\\n\\xa1\\x68\\xff\\x4d\\x00\\xff\\xc2\\x82\\xff\\x9d\\x67\\xff\\x47\\x00\\xff\\xca\\\n\\x84\\xff\\xb9\\x6d\\xff\\x9a\\x64\\xff\\x43\\x00\\xff\\xc9\\x80\\xff\\xb9\\x6a\\\n\\xff\\xb2\\x67\\xff\\xb7\\x76\\xff\\x99\\x47\\xff\\x92\\x43\\xff\\x8a\\x3f\\xff\\\n\\xa0\\x66\\xff\\x9b\\x62\\xff\\x71\\x34\\xff\\x7d\\x46\\xff\\x8a\\x58\\xff\\x86\\\n\\x55\\xff\\x93\\x60\\xff\\x45\\x00\\xff\\x65\\x00\\xff\\xaf\\x49\\xff\\xc1\\x7e\\\n\\xff\\xbe\\x79\\xff\\xb9\\x76\\xff\\xb4\\x73\\xff\\xaf\\x70\\xff\\xa9\\x6d\\xff\\\n\\xa4\\x6a\\xff\\xa0\\x67\\xff\\x71\\x33\\xff\\x4b\\x00\\xff\\x77\\x00\\xff\\x71\\\n\\x00\\xff\\x69\\x00\\xff\\x63\\x00\\xff\\x5d\\x00\\xff\\x55\\x00\\xff\\x51\\x00\\\n\\xff\\xff\\xff\\x70\\x4e\\x25\\x94\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\\n\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\\n\\x48\\x00\\x00\\x00\\xd4\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x60\\x64\\x62\\\n\\x62\\x62\\x66\\x61\\x61\\x61\\x05\\x02\\x66\\x36\\x06\\x06\\x46\\x76\\x0e\\x4e\\\n\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\x01\\x41\\x21\\x61\\x11\\x51\\x06\\x26\\x0e\\x31\\\n\\x71\\x71\\x71\\x09\\x49\\x29\\x69\\x71\\x19\\x59\\x39\\x79\\x05\\x06\\x26\\x4e\\\n\\x45\\x71\\x25\\x08\\x90\\x55\\x56\\x51\\x55\\x63\\x50\\xd7\\xd0\\x84\\x09\\x68\\\n\\xa9\\x68\\xeb\\xe8\\x32\\x30\\x71\\xeb\\x89\\x8b\\x6b\\x01\\x01\\x50\\x40\\x5b\\\n\\xdf\\x80\\x8d\\x81\\xd9\\xd0\\x48\\x1c\\x0c\\x80\\x02\\xc6\\x26\\xa6\\x40\\x43\\\n\\xcd\\xcc\\xe1\\x02\\x16\\x96\\x56\\xd6\\x0c\\xcc\\xbc\\x36\\x70\\x01\\x5b\\x3b\\\n\\x7b\\x07\\x06\\x16\\x47\\x27\\xb8\\x80\\xb3\\xb3\\x8b\\x2b\\x03\\xb3\\x9b\\x3b\\\n\\x42\\xc0\\xc3\\xd3\\x8b\\x81\\x99\\xdf\\x1b\\x49\\x85\\x8f\\x2f\\x03\\xb3\\x9f\\\n\\x3f\\x92\\x40\\x40\\x20\\x03\\x63\\x50\\x70\\x48\\x68\\x58\\x78\\x44\\x64\\x54\\\n\\x74\\x4c\\x6c\\x5c\\x7c\\x02\\x43\\x62\\x92\\x61\\x72\\x4a\\x6a\\x5a\\x7a\\x46\\\n\\x66\\x96\\x4f\\x40\\x7c\\x76\\x0e\\x03\\x83\\x75\\xae\\x6e\\x5e\\x7e\\x41\\x61\\\n\\x51\\x71\\x8e\\xaf\\x52\\x42\\x0e\\x03\\x00\\xb9\\x7c\\x2a\\x0f\\x3d\\xc2\\xd3\\\n\\x16\\x00\\x00\\x00\\x19\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\\n\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x47\\x49\\\n\\x4d\\x50\\xe7\\xaf\\x40\\xcb\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\\n\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\\n\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\\n\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\\n\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\\n\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\\n\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\\n\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xb9\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xff\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xce\\xa7\\x5e\\xce\\xa7\\x61\\xcf\\xa8\\x64\\\n\\xce\\xa6\\x62\\xcc\\xa1\\x5d\\xc8\\x9c\\x57\\xcf\\xa8\\x61\\xce\\xa6\\x5e\\xc7\\\n\\x9a\\x57\\xc7\\x97\\x57\\xcd\\xa4\\x5b\\xc3\\x91\\x50\\xc3\\x91\\x53\\xcd\\xa6\\\n\\x5e\\xcd\\xa5\\x5e\\xc1\\x8e\\x4f\\xbd\\x89\\x4c\\xce\\xa6\\x60\\xbe\\x89\\x4d\\\n\\xcf\\xa7\\x62\\x67\\xb6\\x5c\\x61\\xb0\\x57\\x5c\\xa8\\x52\\xbe\\x8a\\x4f\\xcd\\\n\\xa5\\x61\\x5f\\xad\\x56\\xa6\\xd5\\x9d\\x53\\x9e\\x4b\\xbd\\x86\\x4c\\xc9\\x9f\\\n\\x5b\\x63\\xb2\\x59\\x5e\\xab\\x54\\x76\\xb7\\x6d\\x9e\\xd1\\x95\\x6b\\xac\\x63\\\n\\x44\\x8b\\x3d\\x3e\\x83\\x37\\xc6\\x99\\x56\\xc6\\x96\\x55\\x9f\\xd2\\x97\\x9a\\\n\\xcf\\x92\\x86\\xc5\\x7d\\x90\\xca\\x88\\x8b\\xc6\\x83\\x35\\x79\\x30\\xc4\\x95\\\n\\x55\\xc1\\x8f\\x4f\\x4d\\x96\\x45\\x65\\xa7\\x5e\\x8b\\xc7\\x85\\x5a\\x9b\\x53\\\n\\x33\\x76\\x2e\\x2e\\x6f\\x29\\xc2\\x8f\\x50\\xbe\\x8a\\x4d\\x82\\xc2\\x7d\\x32\\\n\\x74\\x2c\\xe3\\xcc\\x99\\xde\\xc4\\x8d\\xbc\\x83\\x4f\\xbc\\x85\\x4a\\xbc\\x86\\\n\\x4c\\xbc\\x84\\x4b\\x30\\x71\\x2b\\x2a\\x6b\\x26\\xe8\\xd5\\xa3\\xe9\\xd7\\xa5\\\n\\xda\\xbb\\x80\\xab\\x64\\x3d\\xc1\\x8e\\x58\\xdf\\xc5\\x8f\\xe7\\xd3\\xa0\\xe0\\\n\\xc7\\x93\\xc9\\x9b\\x61\\x87\\x48\\x28\\xbc\\x84\\x51\\xd7\\xb5\\x7d\\xd6\\xb5\\\n\\x7f\\xc3\\x91\\x56\\xab\\x67\\x37\\xa5\\x5c\\x33\\xb9\\x80\\x48\\xab\\x64\\x37\\\n\\xff\\xff\\xff\\x08\\xcc\\x8a\\xbe\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\\n\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\\n\\x48\\x00\\x00\\x00\\x94\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x02\\x18\\\n\\x99\\x98\\x59\\x58\\xd9\\x10\\x7c\\x76\\x0e\\x10\\xc9\\xc9\\x05\\xe7\\x73\\x43\\\n\\x68\\x1e\\x5e\\x08\\xcd\\xc7\\x0f\\x93\\x11\\x10\\x04\\x53\\x42\\x08\\xbd\\xc2\\\n\\x60\\x52\\x04\\xc2\\x11\\x15\\x13\\x67\\x90\\x00\\xb3\\x24\\x21\\x02\\x52\\xd2\\\n\\x32\\x0c\\xb2\\x60\\x96\\x1c\\x88\\x90\\x57\\x50\\x54\\x52\\x56\\x51\\x05\\x0b\\\n\\xa8\\xa9\\x03\\x09\\x71\\x0d\\x4d\\x2d\\x6d\\x1d\\x5d\\x88\\x62\\x3d\\x7d\\x06\\\n\\x06\\x19\\x03\\x43\\x23\\x63\\x13\\x53\\xa8\\xe1\\x66\\xe6\\x40\\x42\\xd5\\xc2\\\n\\xd2\\xca\\xda\\x06\\x2a\\x62\\x6b\\x27\\x6b\\xaf\\xeb\\xe0\\xe8\\xe4\\xec\\xe2\\\n\\x8a\\xec\\x23\\x37\\x77\\x0f\\x4f\\x2f\\x6f\\x64\\x11\\x1f\\x5f\\x3f\\xff\\x00\\\n\\x14\\x5f\\x07\\x06\\x05\\x33\\x30\\x00\\x00\\x6e\\x19\\x0e\\x48\\x25\\x83\\xd8\\\n\\x9c\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\\n\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\\n\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\\n\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\\n\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x5b\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xa8\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x45\\x45\\x45\\x8a\\x8a\\x8a\\x98\\x98\\x98\\\n\\x9d\\x9d\\x9d\\x9f\\x9f\\x9f\\x6a\\x6a\\x6a\\x97\\x97\\x97\\xa2\\xa2\\xa2\\xad\\\n\\xad\\xad\\xc5\\xc5\\xc5\\x90\\x90\\x90\\x8b\\x8b\\x8b\\xa4\\xa4\\xa4\\xa0\\xa0\\\n\\xa0\\xa9\\xa9\\xa9\\xaa\\xaa\\xaa\\xc8\\xc8\\xc8\\x93\\x93\\x93\\x9a\\x9a\\x9a\\\n\\xb3\\xb3\\xb3\\xc0\\xc0\\xc0\\xca\\xca\\xca\\xe1\\xe1\\xe1\\xc6\\xc6\\xc6\\x9e\\\n\\x9e\\x9e\\xb1\\xb1\\xb1\\xa3\\xa3\\xa3\\xb4\\xb4\\xb4\\xd1\\xd1\\xd1\\xd4\\xd4\\\n\\xd4\\xe3\\xe3\\xe3\\xa6\\xa6\\xa6\\xbd\\xbd\\xbd\\xcf\\xcf\\xcf\\xcb\\xcb\\xcb\\\n\\xb2\\xb2\\xb2\\x9b\\x9b\\x9b\\xb5\\xb5\\xb5\\x65\\x65\\x65\\xc1\\xc1\\xc1\\xd3\\\n\\xd3\\xd3\\x85\\x85\\x85\\x83\\x83\\x83\\xaf\\xaf\\xaf\\x61\\x61\\x61\\xce\\xce\\\n\\xce\\x86\\x86\\x86\\x88\\x88\\x88\\x8c\\x8c\\x8c\\xb6\\xb6\\xb6\\x6f\\x6f\\x6f\\\n\\x84\\x84\\x84\\xb7\\xb7\\xb7\\x82\\x82\\x82\\x00\\x00\\x00\\xc9\\xeb\\xa6\\x8a\\\n\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\\n\\x01\\x62\\x4b\\x47\\x44\\x37\\x30\\xb8\\xb8\\x47\\x00\\x00\\x00\\xb6\\x49\\x44\\\n\\x41\\x54\\x18\\xd3\\x4d\\x8f\\xd7\\x16\\x82\\x40\\x0c\\x05\\xa9\\x52\\x85\\x80\\\n\\x34\\x29\\x8b\\x74\\x69\\x52\\x56\\xf8\\xff\\x4f\\x93\\xaa\\xe6\\x6d\\x26\\xc9\\\n\\xc9\\x0d\\x41\\xfc\\x8a\\x5c\\xeb\\x9f\\x28\\x9a\\x61\\xbf\\x82\\xbc\\x70\\xbc\\\n\\x40\\xb3\\xa2\\x74\\xb6\\xe5\\x2b\\xa7\\xa8\\x00\\x9a\\x7e\\x30\\x23\\xdc\\x54\\\n\\x30\\x4c\\xcb\\x76\\x76\\xbe\\xbb\\x1e\\xf8\\x62\\x80\\x50\\xa8\\x6d\\x82\\x71\\\n\\x1f\\x10\\xc5\\x28\\x49\\xb3\\xbc\\x58\\x59\\x16\\x3c\\x78\\x96\\xc8\\x95\\xaa\\\n\\xba\\x69\\xd7\\x05\\x2f\\x83\\xa8\\x7c\\xf1\\x5d\\xdd\\x0f\\x23\\x5e\\x04\\x67\\\n\\xa8\\x7e\\x8c\\xf8\\x77\\x37\\x8c\\x53\\xbe\\x0a\\x5e\\x01\\x11\\xb9\\x5d\\x97\\\n\\x4d\\xca\\x8c\\x31\\x41\\x52\\x82\\x6a\\x04\\x89\\x54\\x0f\\xd3\\x80\\xb7\\x13\\\n\\x34\\x0d\\x26\\x4a\\xab\\x7e\\x54\\xf0\\x1e\\x8a\\x61\\xc1\\x42\\xd9\\x32\\x30\\\n\\x1f\\xa9\\x59\\x51\\xb3\\xc3\\xbc\\x19\\x73\\x7c\\xbe\\x21\\xe9\\x8e\\x56\\xb4\\\n\\x18\\xef\\xe2\\x03\\x20\\xe9\\x11\\x6d\\xa5\\x81\\x01\\xf6\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\\n\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\\n\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\\n\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x31\\x2d\\x31\\x30\\x54\\x30\\x38\\x3a\\x32\\\n\\x33\\x3a\\x34\\x33\\x2b\\x30\\x31\\x3a\\x30\\x30\\x91\\x76\\xc7\\x45\\x00\\x00\\\n\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x9c\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xe4\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x85\\x85\\x85\\x9e\\x9e\\x9e\\x7c\\x7c\\x7c\\\n\\x4c\\x4c\\x4c\\x91\\x91\\x91\\xe8\\xe8\\xe8\\xdd\\xdd\\xdd\\xc1\\xc1\\xc1\\x81\\\n\\x81\\x81\\x7b\\x7b\\x7b\\xd9\\xd9\\xd9\\xc4\\xc4\\xc4\\x73\\x73\\x73\\xd5\\xd5\\\n\\xd5\\x58\\x58\\x58\\x4b\\x4b\\x4b\\x65\\x65\\x65\\x92\\x92\\x92\\x79\\x79\\x79\\\n\\xa8\\xa8\\xa8\\x32\\x32\\x32\\x82\\x82\\x82\\x3f\\x3f\\x3f\\xbd\\xbd\\xbd\\xce\\\n\\xce\\xce\\xc2\\xc2\\xc2\\xad\\xad\\xad\\x67\\x67\\x67\\x52\\x52\\x52\\x41\\x41\\\n\\x41\\x46\\x46\\x46\\x51\\x51\\x51\\x4d\\x4d\\x4d\\x8d\\x8d\\x8d\\xaa\\xaa\\xaa\\\n\\xae\\xae\\xae\\x97\\x97\\x97\\x71\\x71\\x71\\x78\\x78\\x78\\xb8\\x86\\x6a\\xbe\\\n\\x57\\x1f\\xbc\\x42\\x05\\xaf\\x46\\x0a\\xa2\\x41\\x09\\x4a\\x4a\\x4a\\x64\\x64\\\n\\x64\\x6b\\x6b\\x6b\\x96\\x61\\x46\\xcf\\x73\\x39\\xf7\\xb5\\x8d\\xfe\\xd6\\xb8\\\n\\xf5\\xa8\\x72\\xcb\\x6b\\x2d\\xb9\\x44\\x03\\xf6\\xb5\\x8d\\xff\\x92\\x4d\\xff\\\n\\x77\\x11\\xff\\x86\\x21\\xeb\\x8a\\x40\\xbc\\x42\\x04\\xfe\\xcd\\xae\\xff\\xff\\\n\\xff\\xef\\x7f\\x18\\xb9\\x45\\x03\\xf4\\x9d\\x63\\xff\\x7f\\x18\\xf8\\x76\\x00\\\n\\xee\\x76\\x00\\xe1\\x68\\x03\\xc3\\x57\\x1a\\xc9\\x64\\x25\\xe6\\x77\\x21\\xea\\\n\\x79\\x05\\xdd\\x64\\x01\\xbd\\x4d\\x04\\x02\\xe0\\x8b\\xfc\\x00\\x00\\x00\\x01\\\n\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\\n\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x92\\x49\\x44\\x41\\x54\\x18\\xd3\\\n\\x63\\x60\\xa0\\x12\\x60\\x64\\x62\\x66\\x60\\x60\\x66\\x62\\x84\\x72\\x59\\x58\\\n\\xd9\\xd8\\x39\\x38\\xb9\\xb8\\xd9\\x79\\x58\\x59\\xc0\\x02\\xbc\\x7c\\xfc\\x02\\\n\\x82\\x42\\xc2\\x82\\x02\\xfc\\x22\\xbc\\x20\\xbe\\xa8\\x18\\x03\\x83\\xb8\\x84\\\n\\xa4\\x94\\xb4\\x38\\x03\\x83\\x98\\x28\\x48\\x44\\x86\\x41\\x56\\x4e\\x5e\\x41\\\n\\x41\\x5e\\x4e\\x16\\xc8\\x04\\x01\\x45\\x25\\x65\\x15\\x55\\x35\\x75\\x55\\x0d\\\n\\x4d\\x2d\\x6d\\x1d\\xb0\\x88\\xae\\x9e\\xbe\\x3e\\x03\\x83\\x81\\xa1\\x91\\xb1\\\n\\x89\\x29\\x92\\xdd\\x66\\xe6\\x16\\x96\\x56\\xd6\\x66\\x08\\x01\\x1b\\x5b\\x3b\\\n\\x3b\\x3b\\x7b\\x1b\\x84\\x80\\x83\\xa3\\x93\\xb3\\x8b\\xab\\x03\\x42\\xc0\\xcd\\\n\\xdd\\xc3\\xd3\\xcb\\x1b\\xc5\\x07\\x0e\\x36\\x40\\x79\\x00\\x97\\x2c\\x0e\\x8c\\\n\\x69\\x5d\\x50\\xcc\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\\n\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\\n\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\\n\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\\n\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\\n\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\\n\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\\n\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x57\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x6b\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xd5\\xd5\\xd5\\xd4\\xd4\\xd4\\xd2\\xd2\\xd2\\\n\\xd1\\xd1\\xd1\\xd0\\xd0\\xd0\\xce\\xce\\xce\\xcd\\xcd\\xcd\\xfd\\xfd\\xfd\\xe4\\\n\\xe4\\xe4\\xe2\\xe2\\xe2\\xe0\\xe0\\xe0\\xcb\\xcb\\xcb\\x7b\\xb9\\x73\\xca\\xca\\\n\\xca\\xf3\\xf3\\xf3\\xfb\\xfb\\xfb\\xc7\\xc7\\xc7\\x72\\xb5\\x69\\x64\\xb3\\x5a\\\n\\xc8\\xc8\\xc8\\xf7\\xf7\\xf7\\xe8\\xf3\\xfb\\x92\\xce\\x8f\\x6f\\xc0\\x63\\x6b\\\n\\xbc\\x60\\x67\\xb7\\x5d\\x82\\xc2\\x79\\x7e\\xbe\\x75\\x59\\xa6\\x50\\xfc\\xfc\\\n\\xfc\\xea\\xf5\\xfd\\x83\\xc4\\x79\\x9c\\xd2\\x94\\xb2\\xda\\xab\\xaf\\xd9\\xa8\\\n\\xad\\xd8\\xa5\\xaa\\xd6\\xa2\\xa7\\xd5\\x9f\\x74\\xb4\\x6c\\x4e\\x97\\x46\\xeb\\\n\\xeb\\xeb\\xfa\\xfa\\xfa\\xe7\\xf3\\xfb\\x9f\\xd0\\x99\\x97\\xcf\\x8e\\xb1\\xd9\\\n\\xaa\\x83\\xc3\\x7a\\x61\\xaf\\x57\\x5c\\xa9\\x52\\x78\\xb7\\x6f\\x74\\xb3\\x6b\\\n\\x4f\\x95\\x48\\xe9\\xe9\\xe9\\xd3\\xeb\\xfb\\x7a\\xc2\\x71\\x68\\xb8\\x5d\\x75\\\n\\xb1\\x6f\\x8b\\xcf\\xff\\xbc\\xe2\\xfd\\x5f\\x9c\\x58\\x6c\\xa4\\x66\\xb8\\xb8\\\n\\xb8\\xc3\\xc3\\xc3\\xe8\\xe8\\xe8\\xd6\\xec\\xfb\\x88\\xcd\\xfd\\x98\\xd5\\xff\\\n\\x9e\\xd7\\xff\\x9b\\xd6\\xff\\x89\\xce\\xff\\x65\\x97\\x61\\xfa\\xfb\\xfa\\xd7\\\n\\xd7\\xd7\\xb5\\xb5\\xb5\\xc0\\xc0\\xc0\\xe7\\xe7\\xe7\\x70\\xa1\\x6b\\x8e\\xd0\\\n\\xff\\x8d\\xcc\\xf7\\xfb\\xfc\\xfd\\xd9\\xd9\\xd9\\xb7\\xb7\\xb7\\xbc\\xbc\\xbc\\\n\\xe5\\xe5\\xe5\\x64\\x9b\\x5f\\x5a\\x95\\x54\\x97\\xd1\\xfa\\xf3\\xf7\\xf9\\x5e\\\n\\x91\\x59\\x33\\x75\\x2d\\x2e\\x6f\\x29\\x2a\\x6a\\x25\\x6a\\xa0\\x64\\x6a\\xa9\\\n\\x62\\x65\\xa4\\x5d\\x3b\\x80\\x35\\x36\\x7a\\x31\\x58\\x97\\x51\\x8d\\xc8\\x82\\\n\\x63\\xa1\\x5b\\x25\\x64\\x21\\x59\\x9a\\x51\\x68\\xa7\\x60\\x97\\xcd\\x8d\\x94\\\n\\xcb\\x8a\\x91\\xca\\x87\\x8e\\xc9\\x84\\x8c\\xc8\\x81\\x24\\x63\\x20\\x56\\x88\\\n\\x52\\x5e\\x9d\\x56\\x5a\\x99\\x53\\x2f\\x71\\x2a\\x2b\\x6b\\x26\\x27\\x66\\x23\\\n\\x23\\x62\\x20\\x50\\x82\\x4b\\x46\\x7b\\x41\\x30\\x6c\\x2c\\xff\\xff\\xff\\x93\\\n\\xdc\\x23\\xe2\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\\n\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\\n\\xc6\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x64\\x62\\x66\\x61\\x65\\x63\\x67\\\n\\x80\\x03\\x56\\x0e\\x10\\xe0\\x44\\x88\\x30\\x73\\x70\\xb1\\x71\\x73\\x70\\x70\\\n\\xf1\\x30\\x30\\xf0\\x42\\x55\\xb0\\x33\\xf0\\xf1\\x0b\\x70\\x70\\x0b\\x32\\x08\\\n\\x09\\x83\\x04\\xd8\\x38\\xb8\\xf9\\x44\\x44\\xc5\\xc4\\x25\\x24\\xa5\\xa4\\x65\\\n\\x64\\x81\\x02\\xec\\x1c\\x1c\\x72\\xa2\\xf2\\x0a\\x8a\\x4a\\xca\\x2a\\xaa\\x6a\\\n\\xea\\x1a\\x0c\\x0c\\x3c\\x9a\\x1c\\x5a\\xda\\x3a\\xba\\x7a\\xfa\\x06\\x86\\x46\\\n\\xc6\\x26\\x20\\x3d\\x82\\xa6\\x1c\\x66\\xe6\\x16\\xc2\\x96\\x56\\xd6\\x36\\xb6\\\n\\x76\\x60\\x63\\xed\\x1d\\x38\\x1c\\x9d\\x9c\\x5d\\x5c\\xdd\\xdc\\x3d\\x3c\\xbd\\\n\\xc0\\x22\\xde\\x3e\\x20\\x11\\x5f\\x3f\\xff\\x80\\xc0\\x20\\x88\\x5b\\x82\\x43\\\n\\x38\\x1c\\x43\\xc3\\xc2\\x23\\x22\\xa3\\xa2\\x63\\x20\\x22\\x76\\x9c\\xb1\\x71\\\n\\xf1\\x09\\x89\\x49\\xc9\\x29\\xa9\\x50\\xf7\\xa6\\xa5\\x67\\x64\\x66\\x65\\xe7\\\n\\xa4\\xe7\\xc2\\x7d\\x90\\x97\\x5f\\x50\\x58\\x54\\x5c\\x82\\xf0\\x23\\x43\\x69\\\n\\x19\\x03\\x1a\\x28\\x87\\x50\\x00\\xae\\x37\\x1e\\xc3\\x66\\xab\\xed\\xf7\\x00\\\n\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\\n\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\\n\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\\n\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x71\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xba\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x54\\x94\\xe1\\x79\\xac\\xe7\\x7b\\xab\\xe7\\\n\\x4c\\x86\\xdd\\x74\\xa9\\xe6\\x4b\\x86\\xdc\\x79\\xaa\\xe6\\x50\\x8a\\xdd\\x6c\\\n\\xa2\\xe5\\x51\\x8a\\xde\\x55\\x91\\xe0\\x85\\x85\\x85\\x9e\\x9e\\x9e\\x7c\\x7c\\\n\\x7c\\x62\\x67\\x6f\\x4c\\x4c\\x4c\\x91\\x91\\x91\\xe8\\xe8\\xe8\\xdd\\xdd\\xdd\\\n\\xc1\\xc1\\xc1\\x81\\x81\\x81\\x7b\\x7b\\x7b\\xd9\\xd9\\xd9\\xc4\\xc4\\xc4\\x73\\\n\\x73\\x73\\xd5\\xd5\\xd5\\x58\\x58\\x58\\x4b\\x4b\\x4b\\x65\\x65\\x65\\x6f\\x6f\\\n\\x6f\\xa8\\xa8\\xa8\\x32\\x32\\x32\\x82\\x82\\x82\\x67\\x67\\x67\\x52\\x52\\x52\\\n\\x41\\x41\\x41\\x46\\x46\\x46\\x51\\x51\\x51\\x4d\\x4d\\x4d\\x8d\\x8d\\x8d\\xaa\\\n\\xaa\\xaa\\xae\\xae\\xae\\x97\\x97\\x97\\x71\\x71\\x71\\x78\\x78\\x78\\x4a\\x4a\\\n\\x4a\\x64\\x64\\x64\\x6b\\x6b\\x6b\\x60\\x63\\x6d\\x49\\x7b\\xd8\\x40\\x6e\\xd4\\\n\\x50\\x83\\xda\\x42\\x70\\xd5\\x61\\x92\\xde\\x32\\x59\\xcf\\x50\\x80\\xd9\\x3a\\\n\\x67\\xd1\\x5f\\x91\\xde\\x55\\x86\\xda\\x32\\x59\\xcd\\xff\\xff\\xff\\x0b\\xaa\\\n\\x5f\\x73\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x91\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x8d\\x8f\\xc7\\x12\\x82\\x00\\x0c\\x44\\x9f\\xbd\\\n\\x01\\x8a\\xd8\\x10\\x50\\x10\\x90\\xa6\\x80\\xbd\\xfe\\xff\\x77\\x89\\x65\\x84\\\n\\x83\\x07\\xf7\\x92\\xbc\\x9d\\xcd\\x24\\x81\\xbf\\x54\\x82\\x32\\x54\\xaa\\xb9\\\n\\x53\\xa3\\x4e\\xa3\\x59\\xcc\\xb4\\x68\\x77\\x72\\x12\\x44\\xa9\\x0b\\x92\\x28\\\n\\xbc\\xb1\\x27\\xf7\\x95\\xc1\\x90\\xd1\\x58\\x99\\xc8\\xbd\\xa7\\xa1\\x4e\\x35\\\n\\xdd\\x80\\x99\\xa1\\x6b\\x73\\x35\\x63\\xd3\\xc2\\xf8\\x8c\\x1a\\x58\\x66\\x56\\\n\\x16\\xd8\\x8e\\xbb\\x04\\xd7\\xb1\\xb3\\x3e\\x93\\xe7\\x07\\x61\\xb4\\x62\\x1d\\\n\\x85\\x81\\xef\\xbd\\x92\\x71\\x92\\xa6\\xb0\\x49\\xd3\\x24\\xfe\\x2e\\xde\\xee\\\n\\xd8\\x17\\xcf\\x3a\\x1c\\x39\\x71\\xce\\xf9\\x72\\x85\\x1b\\xdc\\x7f\\x3f\\xfa\\\n\\x00\\x3a\\x3f\\x0a\\xb2\\x6c\\x5c\\x8e\\x18\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\\n\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\\n\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x02\\x1b\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x0a\\x00\\x00\\x00\\x09\\x08\\x03\\x00\\x00\\x00\\x3c\\x78\\x4d\\x21\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xa2\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x65\\x9f\\x31\\x76\\xa9\\x42\\x57\\x98\\x28\\\n\\x81\\xb3\\x5a\\x6e\\xa4\\x34\\x47\\x8f\\x17\\x74\\xab\\x4f\\xaa\\xcb\\x91\\x7c\\\n\\xaf\\x55\\x63\\x9e\\x30\\x69\\xa2\\x34\\x6f\\xa4\\x38\\x6f\\xa5\\x3d\\x37\\x87\\\n\\x07\\x68\\xa5\\x46\\xa1\\xc7\\x8a\\x90\\xbc\\x74\\xa8\\xcb\\x90\\xad\\xcd\\x94\\\n\\xb0\\xce\\x96\\x6b\\xa3\\x37\\x26\\x7f\\x00\\x5c\\xa0\\x3c\\x98\\xc2\\x83\\x82\\\n\\xb5\\x67\\x80\\xb3\\x61\\x85\\xb6\\x66\\x89\\xb8\\x6b\\x8e\\xba\\x6f\\x63\\x9f\\\n\\x31\\x41\\x8a\\x1b\\x66\\xa5\\x48\\x97\\xc2\\x82\\x85\\xb6\\x6a\\x9e\\xc5\\x88\\\n\\xa1\\xc6\\x8a\\xa5\\xc8\\x8d\\xa9\\xca\\x90\\x5b\\x9b\\x29\\x3d\\x7a\\x01\\x62\\\n\\xa3\\x46\\x96\\xc1\\x80\\x5e\\x9f\\x3a\\x3c\\x8b\\x0f\\x44\\x8f\\x15\\x4a\\x91\\\n\\x1b\\x52\\x97\\x21\\x1f\\x7b\\x00\\x5f\\xa1\\x43\\x2b\\x83\\x01\\x1e\\x7b\\x03\\\n\\x21\\x7d\\x00\\xff\\xff\\xff\\xbe\\x54\\x4e\\x09\\x00\\x00\\x00\\x01\\x74\\x52\\\n\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\\n\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x53\\x49\\x44\\x41\\x54\\x08\\xd7\\x63\\x60\\\n\\x00\\x02\\x46\\x26\\x06\\x28\\x60\\x66\\x61\\x85\\xb2\\xd8\\xd8\\x39\\x38\\xb9\\\n\\xb8\\x79\\x78\\x19\\x18\\xf8\\xf8\\x05\\x04\\x85\\x38\\x84\\x45\\x44\\x19\\xc4\\\n\\xc4\\x25\\x24\\xa5\\xa4\\x65\\x64\\x85\\xe5\\x18\\x18\\xe4\\x15\\x14\\x95\\x94\\\n\\x55\\x54\\xd5\\xd4\\x81\\x6a\\x35\\x34\\xb5\\xb4\\x75\\x74\\xf5\\xf4\\x41\\xfa\\\n\\x0c\\x0c\\x8d\\x60\\x86\\x31\\x18\\x9b\\x80\\x48\\x00\\xcb\\xc6\\x05\\x7e\\x41\\\n\\xc9\\xba\\x1f\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\\n\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\\n\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\\n\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\\n\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\\n\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\\n\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\\n\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x57\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x80\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xeb\\xbc\\x3c\\xea\\xba\\x3a\\xf1\\xd4\\x85\\\n\\xf0\\xd1\\x82\\xe9\\xba\\x3a\\xfd\\xfa\\xf1\\xfa\\xef\\xd5\\xe6\\xb2\\x35\\xe9\\\n\\xb9\\x3a\\xf2\\xd8\\x94\\xfe\\xfc\\xf3\\xfe\\xfa\\xe7\\xf0\\xd3\\x8f\\xe3\\xac\\\n\\x31\\xe8\\xb7\\x38\\xff\\xfd\\xf9\\xf9\\xe9\\x94\\xfa\\xeb\\x9e\\xfe\\xfa\\xec\\\n\\xe1\\xa9\\x2f\\xf4\\xdf\\xa9\\xfd\\xf9\\xed\\xd6\\xa3\\x3e\\xfc\\xf5\\xd4\\xf1\\\n\\xd7\\xa2\\xde\\xa3\\x2b\\xed\\xc8\\x71\\xff\\xfe\\xf9\\xf4\\xdc\\x5e\\xd5\\xa2\\\n\\x3e\\xf4\\xd9\\x5c\\xfe\\xfb\\xed\\xe5\\xbb\\x68\\xe6\\xb4\\x36\\xf7\\xea\\xc8\\\n\\xfd\\xfa\\xe6\\xf4\\xda\\x5d\\xd5\\xa1\\x3d\\xf2\\xd7\\x57\\x76\\xa9\\x42\\x65\\\n\\x9f\\x31\\xd9\\x99\\x24\\xe6\\xb3\\x36\\xf0\\xd2\\x8c\\xfe\\xfb\\xea\\xf8\\xe6\\\n\\x94\\xf4\\xda\\x5c\\xdd\\xb1\\x47\\xf2\\xd7\\x56\\x6e\\xa4\\x34\\x81\\xb3\\x5a\\\n\\x57\\x98\\x28\\xd4\\x8e\\x1d\\xe5\\xb1\\x34\\xfe\\xfb\\xf3\\xfb\\xf2\\xc3\\xf6\\\n\\xdc\\x5c\\x6f\\xa5\\x3d\\x6f\\xa4\\x38\\x69\\xa2\\x34\\x63\\x9e\\x30\\x7c\\xaf\\\n\\x55\\xaa\\xcb\\x91\\x74\\xab\\x4f\\x47\\x8f\\x17\\xe5\\xb0\\x34\\xf1\\xd7\\x9d\\\n\\xfd\\xf9\\xe7\\xf8\\xe5\\x8b\\xf6\\xdb\\x5a\\x6b\\xa3\\x37\\xb0\\xce\\x96\\xad\\\n\\xcd\\x94\\xa8\\xcb\\x90\\x90\\xbc\\x74\\xa1\\xc7\\x8a\\x68\\xa5\\x46\\x37\\x87\\\n\\x07\\xe8\\xbf\\x62\\xfe\\xfc\\xf4\\xfa\\xef\\xb5\\xf5\\xda\\x58\\x63\\x9f\\x31\\\n\\x8e\\xba\\x6f\\x89\\xb8\\x6b\\x85\\xb6\\x66\\x80\\xb3\\x61\\x82\\xb5\\x67\\x98\\\n\\xc2\\x83\\x5c\\xa0\\x3c\\x26\\x7f\\x00\\xe3\\xad\\x31\\xf5\\xe3\\xbe\\xfe\\xfb\\\n\\xef\\xfe\\xfb\\xee\\x5b\\x9b\\x29\\xa9\\xca\\x90\\xa5\\xc8\\x8d\\xa1\\xc6\\x8a\\\n\\x9e\\xc5\\x88\\x85\\xb6\\x6a\\x97\\xc2\\x82\\x66\\xa5\\x48\\x41\\x8a\\x1b\\xba\\\n\\x69\\x03\\xe2\\xaa\\x2f\\xe0\\xa7\\x2d\\xdf\\xa4\\x2b\\xdd\\xa1\\x29\\xdc\\x9e\\\n\\x27\\xda\\x9b\\x25\\x52\\x97\\x21\\x4a\\x91\\x1b\\x44\\x8f\\x15\\x3c\\x8b\\x0f\\\n\\x5e\\x9f\\x3a\\x96\\xc1\\x80\\x62\\xa3\\x46\\x3d\\x7a\\x01\\xbc\\x68\\x03\\xbf\\\n\\x64\\x00\\x2b\\x83\\x01\\x5f\\xa1\\x43\\x1f\\x7b\\x00\\x21\\x7d\\x00\\x1e\\x7b\\\n\\x03\\xff\\xff\\xff\\xa5\\x1a\\x14\\xc6\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\xb1\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x80\\x00\\\n\\x46\\x26\\x06\\x14\\xc0\\xc8\\xcc\\x82\\x2a\\xc0\\xca\\xc6\\xce\\x81\\xcc\\xe7\\\n\\xe4\\xe2\\xe6\\xe1\\xe5\\x43\\x12\\xe0\\x17\\x10\\x14\\x12\\x16\\x41\\xe2\\x8b\\\n\\x8a\\x89\\x8b\\x4b\\x48\\x4a\\xc1\\x05\\xa4\\x65\\x64\\xe5\\xe4\\xe4\\x15\\x14\\\n\\x61\\x7c\\x25\\x65\\x15\\x55\\x35\\x35\\x75\\x0d\\x4d\\x2d\\x08\\x5f\\x5b\\x47\\\n\\x57\\x4f\\xdf\\x40\\xcd\\xd0\\xc8\\xd8\\xc4\\x14\\x2c\\x60\\x66\\x6e\\x61\\x69\\\n\\x65\\x6d\\x63\\x6b\\x67\\xef\\xe0\\x08\\xe2\\x3b\\x39\\xbb\\xb8\\xba\\xb9\\x7b\\\n\\x78\\xda\\x7b\\x79\\xfb\\xf8\\xfa\\x01\\x05\\xfc\\x03\\x02\\x83\\x82\\x82\\x3d\\\n\\x43\\x42\\xc3\\xc2\\x23\\x22\\xa3\\xa2\\x19\\x62\\x62\\x03\\xe2\\xe2\\xe3\\x13\\\n\\x12\\x93\\x92\\x53\\x52\\xd3\\xd2\\x33\\x32\\x19\\xb2\\xb2\\x73\\x72\\xf3\\xf2\\\n\\x0b\\x0a\\x8b\\x8a\\x4b\\x4a\\xcb\\xca\\x2b\\x2a\\x91\\x9c\\x5b\\x55\\x5d\\x83\\\n\\xea\\xc1\\xda\\x3a\\x10\\x09\\x00\\x7e\\x75\\x21\\x5c\\x77\\xec\\xdc\\x2f\\x00\\\n\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\\n\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\\n\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\\n\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x6b\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x06\\x00\\x00\\x00\\x1f\\xf3\\xff\\x61\\\n\\x00\\x00\\x00\\x01\\x73\\x52\\x47\\x42\\x00\\xae\\xce\\x1c\\xe9\\x00\\x00\\x00\\\n\\x06\\x62\\x4b\\x47\\x44\\x00\\xff\\x00\\xff\\x00\\xff\\xa0\\xbd\\xa7\\x93\\x00\\\n\\x00\\x00\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0b\\x13\\x00\\x00\\x0b\\x13\\x01\\\n\\x00\\x9a\\x9c\\x18\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\xde\\x09\\x1d\\\n\\x0e\\x05\\x37\\x84\\xd7\\x46\\x8c\\x00\\x00\\x01\\xeb\\x49\\x44\\x41\\x54\\x38\\\n\\xcb\\xad\\x93\\xdb\\x6b\\x13\\x41\\x14\\xc6\\x7f\\x9b\\xdd\\x4d\\x16\\x69\\xbc\\\n\\x60\\x16\\x2c\\xd4\\x42\\x21\\x2d\\x88\\x8a\\xe0\\xa3\\x82\\x16\\x41\\xf4\\x51\\\n\\x17\\xa1\\x88\\xf4\\xcf\\xf1\\xd5\\xff\\x43\\x90\\x0d\\xf6\\xc1\\x47\\x41\\x52\\\n\\x30\\xa0\\x28\\x0a\\x6a\\x52\\x2f\\x2d\\x22\\x5e\\x9a\\x98\\x46\\xc8\\x5e\\xd8\\\n\\xd9\\x99\\xe3\\x43\\x4c\\x9a\\x25\\xf5\\x49\\x0f\\x1c\\xbe\\x33\\x30\\xe7\\x3b\\\n\\x97\\x6f\\x06\\xfe\\xd1\\xac\\xe9\\x43\\xef\\xc5\\xaa\\x88\\x11\\x44\\x04\\x31\\\n\\x06\\x8c\\x20\\x7a\\x14\\x8b\\x31\\xfb\\xb1\\x36\\x9c\\xbc\\xfe\\xd2\\x02\\x70\\\n\\xa6\\x09\\xc4\\x08\\x47\\x96\\xee\\x20\\x46\\x40\\x1b\\x44\\xeb\\x7d\\xcf\\x35\\\n\\x71\\xef\\x19\\xe9\\xaf\\xf7\\x93\\xe4\\x02\\x41\\xf7\\xf9\\x65\\x29\\x57\\x97\\\n\\xc1\\x80\\xfa\\xd9\\x40\\x54\\x8e\\x51\\x0a\\xc9\\x14\\x6e\\x2d\\x20\\x1d\\xbc\\\n\\x9b\\x49\\x06\\x28\\xed\\x57\\x37\\x78\\x47\\xcf\\xa1\\xe3\\x36\\x92\\x6b\\x44\\\n\\x8d\\xdc\\xad\\xdd\\x20\\x1b\\x7e\\x21\\x19\\xcc\\x26\\x17\\x08\\xdc\\x43\\x8b\\\n\\x60\\x95\\xd1\\xd1\\x1b\\x24\\xd7\\x18\\x9d\\x63\\xcf\\x9d\\xc7\\xa8\\x88\\x74\\\n\\xb0\\xc5\\xc2\\xd5\\xa6\\x75\\xd0\\x12\\x4b\\x00\\x3f\\x9e\\x5e\\x94\\x72\\x75\\\n\\x19\\xc9\\x23\\x24\\xcf\\xff\\xcc\\x9c\\x53\\xaa\\x2c\\x92\\xec\\x75\\x98\\x5f\\\n\\x7d\\x64\\xfd\\x4d\\x05\\x07\\xc0\\x2e\\xd7\\x70\\xbc\\x13\\x64\\xbd\\x0d\\x8c\\\n\\x2e\\x21\\xda\\x42\\x94\\x20\\x5a\\x93\\xf4\\xdf\\xb2\\xf3\\xf0\\x8c\\x8c\\x15\\\n\\x30\\x7a\\xa4\\x82\\x68\\xc3\\xca\\xfa\\x47\\xcb\\xf9\\xbe\\x79\\x41\\xca\\xd5\\\n\\x15\\x44\\x2b\\x9c\\xc3\\xd7\\x10\\x9d\\x23\\xb9\\x06\\x01\\xc9\\x0d\\xfd\\xe3\\\n\\x77\\x19\\xa4\\x73\\x28\\xa5\\xc8\\xb2\\x6c\\x82\\x99\\xce\\x1e\\xc3\\x3a\\x8e\\\n\\x18\\xc3\\xf0\\xeb\\x93\\x82\\xc6\\x62\\x0c\\xc7\\x96\\xd6\\x48\\xb7\\xef\\xd3\\\n\\xaf\\xdc\\xc3\\x75\\x6d\\x6c\\xdb\\xc6\\xf3\\xbc\\x49\\xeb\\xed\\x76\\xfb\\x0a\\\n\\x80\\x33\\x7f\\xa9\\x35\\x33\\xdf\\xce\\xc6\\x59\\x51\\xd1\\x2e\\x95\\x85\\x5b\\\n\\x24\\x9f\\x13\\x5c\\xd7\\xa5\\xdb\\xed\\x12\\x04\\x01\\x61\\x18\\xe2\\xfb\\x3e\\\n\\x71\\x1c\\x17\\x55\\x28\\x3c\\x28\\x6d\\x70\\x2a\\x35\\xa2\\xee\\x6b\\xd2\\x34\\\n\\x05\\x20\\x08\\x82\\x02\\x26\\x49\\x72\\x30\\xc1\\x76\\xe3\\xb4\\x78\\xd5\\x3a\\\n\\xc3\\x6f\\x2d\\xa2\\xdd\\x57\\x93\\x8b\\x61\\x18\\x16\\x70\\x4c\\x3c\\xdb\\x81\\\n\\x94\\x48\\xf6\\x3e\\x10\\xf5\\x3a\\xd4\\x6f\\x6f\\x59\\x63\\x02\\xdf\\xf7\\x69\\\n\\x36\\x9b\\xf8\\xbe\\x5f\\xe8\\xa0\\xf0\\x17\\x3e\\x3d\\x38\\x25\\x5a\\x65\\xd4\\\n\\xd7\\x3a\\x93\\xbd\\xc4\\x71\\xdc\\x68\\xb5\\x5a\\x37\\xa7\\x15\\x50\\x4a\\xa1\\\n\\x94\\x6a\\xf0\\x3f\\xec\\x37\\x5d\\x26\\x4a\\xc6\\x68\\x47\\xb6\\x00\\x00\\x00\\\n\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x57\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x80\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xeb\\xbc\\x3c\\xea\\xba\\x3a\\xf1\\xd4\\x85\\\n\\xf0\\xd1\\x82\\xe9\\xba\\x3a\\xfd\\xfa\\xf1\\xfa\\xef\\xd5\\xe6\\xb2\\x35\\xe9\\\n\\xb9\\x3a\\xf2\\xd8\\x94\\xfe\\xfc\\xf3\\xfe\\xfa\\xe7\\xf0\\xd3\\x8f\\xe3\\xac\\\n\\x31\\xe8\\xb7\\x38\\xff\\xfd\\xf9\\xf9\\xe9\\x94\\xfa\\xeb\\x9e\\xfe\\xfa\\xec\\\n\\xe1\\xa9\\x2f\\xf4\\xdf\\xa9\\xfd\\xf9\\xed\\xd6\\xa3\\x3e\\xfc\\xf5\\xd4\\xf1\\\n\\xd7\\xa2\\xde\\xa3\\x2b\\xed\\xc8\\x71\\xff\\xfe\\xf9\\xf4\\xdc\\x5e\\xd5\\xa2\\\n\\x3e\\xf4\\xd9\\x5c\\xfe\\xfb\\xed\\xe5\\xbb\\x68\\xe6\\xb4\\x36\\xf7\\xea\\xc8\\\n\\xfd\\xfa\\xe6\\xf4\\xda\\x5d\\xd5\\xa1\\x3d\\xf2\\xd7\\x57\\x76\\xa9\\x42\\x65\\\n\\x9f\\x31\\xd9\\x99\\x24\\xe6\\xb3\\x36\\xf0\\xd2\\x8c\\xfe\\xfb\\xea\\xf8\\xe6\\\n\\x94\\xf4\\xda\\x5c\\xdd\\xb1\\x47\\xf2\\xd7\\x56\\x6e\\xa4\\x34\\x81\\xb3\\x5a\\\n\\x57\\x98\\x28\\xd4\\x8e\\x1d\\xe5\\xb1\\x34\\xfe\\xfb\\xf3\\xfb\\xf2\\xc3\\xf6\\\n\\xdc\\x5c\\x6f\\xa5\\x3d\\x6f\\xa4\\x38\\x69\\xa2\\x34\\x63\\x9e\\x30\\x7c\\xaf\\\n\\x55\\xaa\\xcb\\x91\\x74\\xab\\x4f\\x47\\x8f\\x17\\xe5\\xb0\\x34\\xf1\\xd7\\x9d\\\n\\xfd\\xf9\\xe7\\xf8\\xe5\\x8b\\xf6\\xdb\\x5a\\x6b\\xa3\\x37\\xb0\\xce\\x96\\xad\\\n\\xcd\\x94\\xa8\\xcb\\x90\\x90\\xbc\\x74\\xa1\\xc7\\x8a\\x68\\xa5\\x46\\x37\\x87\\\n\\x07\\xe8\\xbf\\x62\\xfe\\xfc\\xf4\\xfa\\xef\\xb5\\xf5\\xda\\x58\\x63\\x9f\\x31\\\n\\x8e\\xba\\x6f\\x89\\xb8\\x6b\\x85\\xb6\\x66\\x80\\xb3\\x61\\x82\\xb5\\x67\\x98\\\n\\xc2\\x83\\x5c\\xa0\\x3c\\x26\\x7f\\x00\\xe3\\xad\\x31\\xf5\\xe3\\xbe\\xfe\\xfb\\\n\\xef\\xfe\\xfb\\xee\\x5b\\x9b\\x29\\xa9\\xca\\x90\\xa5\\xc8\\x8d\\xa1\\xc6\\x8a\\\n\\x9e\\xc5\\x88\\x85\\xb6\\x6a\\x97\\xc2\\x82\\x66\\xa5\\x48\\x41\\x8a\\x1b\\xba\\\n\\x69\\x03\\xe2\\xaa\\x2f\\xe0\\xa7\\x2d\\xdf\\xa4\\x2b\\xdd\\xa1\\x29\\xdc\\x9e\\\n\\x27\\xda\\x9b\\x25\\x52\\x97\\x21\\x4a\\x91\\x1b\\x44\\x8f\\x15\\x3c\\x8b\\x0f\\\n\\x5e\\x9f\\x3a\\x96\\xc1\\x80\\x62\\xa3\\x46\\x3d\\x7a\\x01\\xbc\\x68\\x03\\xbf\\\n\\x64\\x00\\x2b\\x83\\x01\\x5f\\xa1\\x43\\x1f\\x7b\\x00\\x21\\x7d\\x00\\x1e\\x7b\\\n\\x03\\xff\\xff\\xff\\xa5\\x1a\\x14\\xc6\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\xb1\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x80\\x00\\\n\\x46\\x26\\x06\\x14\\xc0\\xc8\\xcc\\x82\\x2a\\xc0\\xca\\xc6\\xce\\x81\\xcc\\xe7\\\n\\xe4\\xe2\\xe6\\xe1\\xe5\\x43\\x12\\xe0\\x17\\x10\\x14\\x12\\x16\\x41\\xe2\\x8b\\\n\\x8a\\x89\\x8b\\x4b\\x48\\x4a\\xc1\\x05\\xa4\\x65\\x64\\xe5\\xe4\\xe4\\x15\\x14\\\n\\x61\\x7c\\x25\\x65\\x15\\x55\\x35\\x35\\x75\\x0d\\x4d\\x2d\\x08\\x5f\\x5b\\x47\\\n\\x57\\x4f\\xdf\\x40\\xcd\\xd0\\xc8\\xd8\\xc4\\x14\\x2c\\x60\\x66\\x6e\\x61\\x69\\\n\\x65\\x6d\\x63\\x6b\\x67\\xef\\xe0\\x08\\xe2\\x3b\\x39\\xbb\\xb8\\xba\\xb9\\x7b\\\n\\x78\\xda\\x7b\\x79\\xfb\\xf8\\xfa\\x01\\x05\\xfc\\x03\\x02\\x83\\x82\\x82\\x3d\\\n\\x43\\x42\\xc3\\xc2\\x23\\x22\\xa3\\xa2\\x19\\x62\\x62\\x03\\xe2\\xe2\\xe3\\x13\\\n\\x12\\x93\\x92\\x53\\x52\\xd3\\xd2\\x33\\x32\\x19\\xb2\\xb2\\x73\\x72\\xf3\\xf2\\\n\\x0b\\x0a\\x8b\\x8a\\x4b\\x4a\\xcb\\xca\\x2b\\x2a\\x91\\x9c\\x5b\\x55\\x5d\\x83\\\n\\xea\\xc1\\xda\\x3a\\x10\\x09\\x00\\x7e\\x75\\x21\\x5c\\x77\\xec\\xdc\\x2f\\x00\\\n\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\\n\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\\n\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\\n\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xb3\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xd8\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xd2\\xd2\\xd2\\xd3\\xd3\\xd3\\xd5\\xd5\\xd5\\\n\\xd6\\xd6\\xd6\\xd7\\xd7\\xd7\\xd8\\xd8\\xd8\\xce\\xce\\xce\\xe8\\xe8\\xe8\\xf4\\\n\\xf4\\xf4\\xfc\\xfc\\xfc\\xf5\\xf5\\xf5\\xeb\\xeb\\xeb\\xc9\\xc9\\xc9\\xff\\xff\\\n\\xff\\xf7\\xf7\\xf7\\xf1\\xf1\\xf1\\xf2\\xf2\\xf2\\xf8\\xf8\\xf8\\xc0\\xc0\\xc0\\\n\\xc1\\xc1\\xc1\\xec\\xec\\xec\\xed\\xed\\xed\\xb3\\xb3\\xb3\\xdd\\xdd\\xdd\\xe9\\\n\\xe9\\xe9\\x87\\x87\\x88\\x89\\x89\\x8a\\x75\\x75\\x76\\xab\\xab\\xab\\xee\\xee\\\n\\xee\\x6f\\x74\\x7c\\xc0\\xc0\\xc1\\x75\\x75\\x75\\xf0\\xf0\\xf0\\xa7\\xa7\\xa7\\\n\\xfa\\xfa\\xfa\\xe6\\xe6\\xe6\\x74\\x74\\x75\\xad\\xad\\xad\\x88\\x88\\x89\\xef\\\n\\xef\\xef\\xd4\\xd4\\xd4\\xa2\\xa2\\xa2\\xe5\\xe5\\xe5\\xae\\xae\\xaf\\x73\\x73\\\n\\x74\\x9d\\x9d\\x9d\\xe1\\xe1\\xe1\\xe4\\xe4\\xe4\\xe7\\xe7\\xe7\\x73\\x73\\x73\\\n\\xd1\\xd1\\xd1\\x99\\x99\\x99\\xc6\\xc6\\xc6\\xfb\\xfb\\xfb\\xe2\\xe2\\xe2\\x86\\\n\\x86\\x87\\x87\\x87\\x87\\xfe\\xfe\\xfe\\xe3\\xe3\\xe3\\xc4\\xc4\\xc4\\xf3\\xf3\\\n\\xf3\\xb9\\xb9\\xb9\\x93\\x93\\x93\\xaa\\xaa\\xaa\\x8e\\x8e\\x8e\\x90\\x90\\x90\\\n\\x92\\x92\\x92\\x96\\x96\\x96\\x97\\x97\\x97\\x9c\\x9c\\x9c\\x4c\\x1c\\x18\\x75\\\n\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\\n\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xb5\\x49\\x44\\\n\\x41\\x54\\x18\\xd3\\x6d\\xcf\\xc9\\x1a\\xc1\\x30\\x14\\x05\\xe0\\x1a\\x9b\\x26\\\n\\x91\\x36\\xa5\\x41\\x50\\x04\\xa5\\xd4\\xd0\\x52\\x2d\\x35\\x8f\\xef\\xff\\x46\\\n\\xe2\\x33\\x6d\\xdc\\xdd\\xfd\\x37\\xe7\\x1c\\x45\\xf9\\x7b\\xa9\\x74\\x26\\x9b\\\n\\xcb\\xff\\x7e\\x15\\x68\\x10\\x22\\xfc\\x95\\x02\\x22\\xba\\x41\\x4d\\x62\\xbe\\\n\\xa5\\x88\\x48\\xc9\\x62\\xcc\\xc2\\x6f\\x29\\x57\\x48\\x95\\x4b\\xa9\\xd5\\x0d\\\n\\x82\\x73\\x12\\x1a\\xb6\\x06\\x78\\xb3\\x85\\x6b\\x6d\\xa1\\xa3\\xac\\x84\\x4e\\\n\\xb7\\xda\\xe3\\x8e\\xd3\\x1f\\x38\\xae\\x80\\x43\\x09\\x23\\x0d\\x78\\x12\\xc6\\\n\\x7c\\xe2\\xba\\x30\\x2d\\x61\\x3a\\xa3\\x3e\\x77\\x44\\xc0\\xe7\\x36\\xa2\\x0b\\\n\\x09\\xe1\\x32\\x8a\\xb9\\xeb\\x79\\xab\\x35\\x4b\\x7c\\xf5\\x19\\x13\\xc6\\x09\\\n\\x8b\\x37\\x1b\\xc6\\x22\\xb1\\x7d\\x15\\x09\\x67\\x91\\x11\\x80\\x5d\\x62\\xed\\\n\\x3f\\x55\\x0f\\xc5\\x0a\\x45\\x3d\\xf5\\xf8\\x1b\\x73\\x3a\\x5f\\xae\\xb7\\xfb\\\n\\xff\\xe1\\x0f\\xdf\\x54\\x12\\x4a\\x61\\xd0\\x00\\x81\\x00\\x00\\x00\\x1d\\x74\\\n\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\\n\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\\n\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\x31\\x2d\\\n\\x31\\x38\\x54\\x31\\x34\\x3a\\x33\\x36\\x3a\\x34\\x34\\x2b\\x30\\x31\\x3a\\x30\\\n\\x30\\x61\\xa5\\xf6\\xf1\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\x31\\\n\\x2d\\x31\\x38\\x54\\x31\\x34\\x3a\\x33\\x36\\x3a\\x34\\x34\\x2b\\x30\\x31\\x3a\\\n\\x30\\x30\\x10\\xf8\\x4e\\x4d\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\\n\\x60\\x82\\\n\\x00\\x00\\x02\\xc7\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x0b\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x4f\\x99\\x47\\x49\\x91\\x41\\x65\\xb4\\x5b\\\n\\x5f\\xad\\x56\\x5a\\xa6\\x50\\x53\\x9e\\x4b\\x4d\\x96\\x45\\x68\\xa8\\x60\\x62\\\n\\xa2\\x5b\\x3a\\x7e\\x34\\x68\\xb9\\x5e\\x83\\xc3\\x79\\x92\\xca\\x89\\x9c\\xd0\\\n\\x94\\x9e\\xd1\\x95\\x99\\xcf\\x90\\x94\\xcb\\x8c\\x8f\\xc9\\x87\\x87\\xc4\\x80\\\n\\x54\\x95\\x4e\\x2c\\x6d\\x27\\x67\\xb6\\x5c\\x8e\\xc9\\x85\\xa4\\xd4\\x9b\\x98\\\n\\xce\\x8f\\x9a\\xcf\\x92\\x95\\xcc\\x8d\\x90\\xca\\x88\\x8b\\xc6\\x83\\x85\\xc4\\\n\\x7e\\x7f\\xc1\\x79\\x4c\\x8d\\x47\\x25\\x65\\x22\\x7e\\xbf\\x75\\xa1\\xd2\\x98\\\n\\x9c\\xcf\\x94\\x8d\\xc7\\x86\\x65\\xa7\\x5e\\x40\\x86\\x39\\x33\\x76\\x2e\\x4f\\\n\\x90\\x49\\x4a\\x8b\\x45\\x24\\x63\\x20\\x5e\\xab\\x54\\x89\\xc3\\x80\\x8a\\xc4\\\n\\x83\\x44\\x8b\\x3d\\x3e\\x83\\x37\\x27\\x66\\x23\\x23\\x61\\x1f\\x55\\xa1\\x4d\\\n\\x42\\x88\\x3b\\x3c\\x80\\x35\\x6e\\xc0\\x63\\x6a\\xbb\\x5f\\x8e\\xc6\\x86\\x8f\\\n\\xc9\\x88\\x76\\xb3\\x6f\\x6d\\xbe\\x62\\x85\\xc7\\x7b\\x81\\xc2\\x77\\x57\\xa3\\\n\\x4e\\x51\\x9b\\x49\\x6b\\xac\\x63\\x8b\\xc3\\x83\\x89\\xc6\\x82\\x56\\x97\\x50\\\n\\x6c\\xbc\\x60\\x83\\xc4\\x79\\xa7\\xd7\\x9e\\x9f\\xd2\\x97\\x82\\xc2\\x7a\\x63\\\n\\xa4\\x5d\\x2a\\x6b\\x26\\x7c\\xbd\\x73\\x9f\\xd1\\x96\\x96\\xcd\\x8f\\x91\\xca\\\n\\x8a\\x8b\\xc7\\x85\\x81\\xbe\\x7a\\x6c\\xad\\x65\\x51\\x92\\x4b\\x29\\x68\\x24\\\n\\x6e\\xb0\\x66\\x68\\xaa\\x61\\x37\\x7b\\x32\\x32\\x74\\x2c\\xff\\xff\\xff\\x76\\\n\\x6b\\x3d\\x82\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\\n\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\\n\\x96\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x09\\x18\\x99\\x10\\x6c\\x66\\\n\\x16\\x56\\x36\\x76\\x0e\\x4e\\x2e\\x28\\x97\\x9b\\x87\\x97\\x8f\\x5f\\x40\\x50\\\n\\x48\\x58\\x44\\x14\\xcc\\x17\\x13\\x97\\x90\\x94\\x92\\x96\\x91\\x95\\x93\\x57\\\n\\x50\\x04\\x0b\\x28\\x29\\xab\\xa8\\xaa\\xa9\\x73\\x69\\x68\\x6a\\x69\\x83\\xf9\\\n\\x3a\\xba\\xd2\\x7a\\xfa\\x06\\x40\\x86\\xa1\\x11\\xc4\\x04\\x63\\x46\\x26\\x13\\\n\\x53\\x1c\\x16\\x23\\xc9\\x99\\x99\\x03\\x09\\x36\\x76\\x0b\\x4b\\x2b\\x0d\\x30\\\n\\xdf\\xda\\xc6\\x56\\xc7\\xce\\xde\\xc1\\x51\\xc8\\xc9\\x19\\xcc\\x77\\x71\\x75\\\n\\x93\\x70\\x07\\xda\\xec\\x21\\xe7\\xe9\\x05\\x71\\xa8\\xb7\\x8f\\x8a\\xaf\\x9f\\\n\\x7f\\x40\\x60\\x50\\x30\\xd4\\x34\\xbb\\x90\\x50\\x7d\\x83\\xb0\\x70\\x51\\x84\\\n\\xf9\\x4c\\x26\\xb8\\x3d\\x0d\\x00\\x93\\xd1\\x11\\xc5\\x40\\xc2\\x2e\\xb3\\x00\\\n\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\\n\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\\n\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\\n\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x30\\x33\\x2d\\x30\\x37\\x54\\x30\\x39\\x3a\\x33\\x38\\x3a\\x33\\x37\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x85\\xef\\x22\\x3a\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xfc\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x17\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xd5\\xd5\\xd5\\xd4\\xd4\\xd4\\xd2\\xd2\\xd2\\\n\\xd1\\xd1\\xd1\\xd0\\xd0\\xd0\\xce\\xce\\xce\\xcd\\xcd\\xcd\\xd3\\xd3\\xd3\\xfd\\\n\\xfd\\xfd\\xe4\\xe4\\xe4\\xe2\\xe2\\xe2\\xe0\\xe0\\xe0\\xcb\\xcb\\xcb\\xca\\xca\\\n\\xca\\xf3\\xf3\\xf3\\xfb\\xfb\\xfb\\xc7\\xc7\\xc7\\xc8\\xc8\\xc8\\xf7\\xf7\\xf7\\\n\\xe8\\xf3\\xfb\\xbd\\xe3\\xfd\\xde\\xde\\xde\\xc3\\xc3\\xc3\\xfc\\xfc\\xfc\\xea\\\n\\xf5\\xfd\\x8a\\xcf\\xfe\\x83\\xcc\\xff\\xbc\\xe2\\xfd\\xdc\\xdc\\xdc\\xc0\\xc0\\\n\\xc0\\xeb\\xeb\\xeb\\xfa\\xfa\\xfa\\xe7\\xf3\\xfb\\x89\\xce\\xfe\\x96\\xd4\\xff\\\n\\x9a\\xd5\\xff\\x8b\\xcf\\xff\\xda\\xda\\xda\\xbd\\xbd\\xbd\\xe9\\xe9\\xe9\\xd3\\\n\\xeb\\xfb\\x98\\xd4\\xff\\x9e\\xd7\\xff\\x9b\\xd6\\xff\\xd9\\xd9\\xd9\\xb9\\xb9\\\n\\xb9\\xe8\\xe8\\xe8\\xd6\\xec\\xfb\\x88\\xcd\\xfd\\x98\\xd5\\xff\\x89\\xce\\xff\\\n\\xba\\xe1\\xfd\\xd7\\xd7\\xd7\\xb5\\xb5\\xb5\\xe7\\xe7\\xe7\\x9c\\xd6\\xff\\x7f\\\n\\xb3\\xae\\x70\\x97\\x60\\x66\\x8e\\x4f\\x60\\x88\\x48\\x82\\x98\\x74\\xbc\\xbc\\\n\\xbc\\xe5\\xe5\\xe5\\x86\\xcd\\xfd\\x7a\\xaf\\xa8\\x81\\xab\\x61\\xb4\\xd4\\x95\\\n\\xd0\\xe6\\xba\\x8f\\xbb\\x6a\\x57\\x8f\\x2d\\x37\\x6b\\x19\\xb8\\xb8\\xb8\\xd5\\\n\\xec\\xfb\\x5f\\x89\\x4a\\xb1\\xd3\\x90\\xb1\\xd6\\x92\\xff\\xff\\xff\\x8c\\xbc\\\n\\x65\\x8f\\xbc\\x67\\xb4\\xb4\\xb4\\x4c\\x7b\\x31\\xb6\\xd4\\x9c\\xb2\\xd2\\x95\\\n\\xb1\\xb1\\xb1\\x3e\\x6f\\x21\\x8b\\xba\\x62\\x87\\xba\\x60\\x87\\xb9\\x60\\xad\\\n\\xad\\xad\\x74\\x8f\\x65\\x53\\x8c\\x28\\x8d\\xba\\x64\\xa2\\x23\\x4c\\x33\\x00\\\n\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\\n\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xbf\\x49\\x44\\x41\\\n\\x54\\x18\\xd3\\x45\\xcc\\x69\\x5b\\x01\\x61\\x1c\\x85\\xf1\\xbf\\x34\\x33\\x8e\\\n\\x59\\x64\\x6b\\x2a\\x13\\x15\\x92\\x7d\\x2c\\x2d\\x96\\x42\\xb2\\x14\\x4f\\x88\\\n\\xb2\\xcd\\xf7\\xff\\x1c\\x99\\x05\\xf7\\xcb\\xdf\\x75\\xae\\x43\\xae\\x13\\xf7\\\n\\x29\\xc7\\x0b\\x74\\xc8\\x03\\x33\\xef\\x51\\xdc\\x10\\x79\\x09\\x10\\xe5\\x3d\\\n\\x70\\x10\\x48\\xf1\\x9d\\x41\\xf2\\x3b\\xc0\\x43\\x52\\x02\\xc1\\x50\\x18\\xe7\\\n\\xaa\\x0d\\x02\\x70\\x11\\xbc\\xbc\\x8a\\x68\\xb8\\x8e\\x5a\\x20\\xc7\\x70\\x73\\\n\\x7b\\x17\\x4f\\x24\\x35\\xdc\\xa7\\x2c\\xf1\\x3f\\x20\\x1d\\xc9\\x64\\x73\\x3b\\\n\\xc9\\x17\\x2c\\x51\\x8b\\xd0\\x4b\\xe5\\x6c\\xae\\x52\\xc5\\xe3\\x93\\x25\\xd1\\\n\\x67\\x53\\x5e\\x6a\\xf5\\x46\\xf3\\xd5\\x3e\\x7e\\x6b\\x41\\x6f\\x77\\xde\\xbb\\\n\\x1f\\xbd\\xfe\\xc0\\x96\\xa1\\x17\\x9f\\x5f\\xa3\\x31\\xfb\\x9e\\x38\\x40\\x53\\\n\\x11\\xb3\\x1f\\xc6\\xd8\\x7c\\x0f\\xb4\\x90\\x7e\\xff\\x96\\x6c\\x75\\x58\\x10\\\n\\xad\\x37\\x5b\\x63\\x6e\\x6c\\x8f\\x40\\x34\\x30\\xa3\\x7f\\x11\\x5d\\x19\\x0e\\\n\\x45\\x32\\x0b\\x73\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\\n\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\\n\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\\n\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\\n\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\\n\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\\n\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\\n\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x01\\x31\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x01\\x03\\x00\\x00\\x00\\x25\\x3d\\x6d\\x22\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x06\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x00\\x00\\x00\\x55\\xc2\\xd3\\x7e\\x00\\x00\\\n\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x12\\x49\\\n\\x44\\x41\\x54\\x08\\xd7\\x63\\x10\\x60\\x60\\xc0\\x8a\\xe4\\xff\\x31\\x60\\x03\\\n\\x00\\x2b\\x0d\\x01\\x9e\\x5b\\x9a\\x83\\xdb\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\\n\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\\n\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\\n\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x02\\x66\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xb7\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x8d\\xb1\\xdd\\x7b\\xa7\\xdc\\x7a\\xa6\\xdc\\\n\\x7a\\xa4\\xda\\x76\\xa0\\xd5\\x75\\x9e\\xd4\\x73\\x9d\\xd2\\x72\\x9a\\xcf\\x70\\\n\\x99\\xce\\x79\\x9a\\xc4\\x85\\xac\\xdd\\x92\\xb9\\xe8\\x6f\\x90\\xc1\\x66\\x8b\\\n\\xc0\\x7a\\xa4\\xdb\\xff\\xff\\xff\\x63\\x87\\xbd\\x79\\xa3\\xd9\\xb4\\xc2\\xda\\\n\\x9c\\xbb\\xe1\\x88\\xb0\\xdf\\x87\\xaf\\xdf\\x87\\xad\\xde\\x86\\xab\\xdc\\x83\\\n\\xa9\\xd9\\x81\\xa7\\xd6\\x80\\xa4\\xd4\\x6e\\x97\\xcc\\x79\\xa2\\xd8\\x91\\xb4\\\n\\xe0\\x9d\\xc0\\xea\\x8d\\xb4\\xe3\\x6c\\x92\\xc8\\x77\\xa2\\xd7\\x51\\x71\\xa9\\\n\\x68\\x8e\\xc3\\x78\\xa2\\xd8\\xf0\\xf3\\xf9\\xf0\\xf3\\xf8\\xef\\xf2\\xf8\\xef\\\n\\xf2\\xf7\\xee\\xf2\\xf7\\xee\\xf1\\xf7\\xf3\\xf6\\xf9\\xb1\\xbf\\xd8\\x91\\xb4\\\n\\xde\\x86\\xad\\xdd\\xfe\\xff\\xff\\xfe\\xfe\\xff\\xfe\\xfe\\xfe\\x60\\x85\\xba\\\n\\x5e\\x81\\xb7\\x51\\x72\\xa9\\x64\\x88\\xbe\\x61\\x85\\xbb\\x5f\\x83\\xb9\\x5c\\\n\\x7e\\xb4\\x58\\x7b\\xb1\\x57\\x79\\xae\\x56\\x76\\xad\\xf8\\x88\\xeb\\xfd\\x00\\\n\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\\n\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x89\\x49\\x44\\x41\\\n\\x54\\x18\\xd3\\x6d\\x8e\\xd7\\x0e\\xc2\\x30\\x10\\x04\\x4d\\x20\\x74\\xc2\\x51\\\n\\x42\\x37\\xc1\\x9c\\x29\\xa6\\xf7\\xfe\\xff\\xdf\\x05\\x5a\\xb0\\x23\\x10\\xf3\\\n\\x38\\xd2\\x8e\\x56\\x88\\x84\\x97\\x4c\\xf9\\xe9\\x4c\\x36\\x97\\x17\\xa0\\x50\\\n\\x74\\x94\\x20\\xbc\\x98\\x00\\xa2\\x4c\\x8e\\x0a\\x44\\x95\\x6a\\xf5\\xb0\\xd1\\\n\\x6c\\xb5\\x3b\\xdd\\x1e\\x2a\\x92\\xfa\\xd1\\x87\\x01\\x2a\\x8a\\x42\\xcb\\x10\\\n\\x15\\xd6\\xa3\\xf1\\x64\\x6a\\x8c\\x99\\xcd\\x17\\xae\\xb2\\x5c\\xbd\\xbe\\x48\\\n\\xdf\\x7e\\x91\\xb4\\xfe\\xfe\\xa2\\xe8\\xe7\\x0b\\xeb\\x3f\\x5f\\xc0\\x66\\xbb\\\n\\xa3\\xbd\\x78\\x57\\xac\\xa1\\x03\\x84\\x8a\\x27\\x47\\x08\\xd6\\xc1\\xe9\\x7c\\\n\\xb9\\xde\\xee\\x0f\\xe6\\x27\\x11\\xac\\x0f\\xfe\\x5b\\xb8\\x7a\\xf9\\x00\\x00\\\n\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\\n\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\\n\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\\n\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x33\\x2d\\\n\\x30\\x31\\x2d\\x30\\x38\\x54\\x31\\x36\\x3a\\x32\\x31\\x3a\\x32\\x33\\x2b\\x30\\\n\\x31\\x3a\\x30\\x30\\xa6\\xc5\\x7b\\x49\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x33\\\n\\x2d\\x30\\x31\\x2d\\x30\\x38\\x54\\x31\\x36\\x3a\\x32\\x31\\x3a\\x32\\x33\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\xd7\\x98\\xc3\\xf5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\\n\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x30\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x5f\\\n\\x50\\x4c\\x54\\x45\\xff\\x7b\\x38\\xff\\x81\\x00\\xff\\x85\\x00\\xff\\x87\\x00\\\n\\xff\\x89\\x00\\xff\\x8b\\x00\\xff\\x6d\\x00\\xff\\xa6\\x41\\xff\\xbd\\x74\\xff\\\n\\xc0\\x79\\xff\\xc2\\x7d\\xff\\xc3\\x7e\\xff\\xc5\\x7f\\xff\\xc6\\x81\\xff\\xc8\\\n\\x82\\xff\\xca\\x83\\xff\\xca\\x86\\xff\\xcb\\x86\\xff\\xcc\\x86\\xff\\xcb\\x83\\\n\\xff\\xb1\\x4e\\xff\\x67\\x00\\xff\\xb6\\x77\\xff\\xaf\\x58\\xff\\xa7\\x52\\xff\\\n\\xa9\\x54\\xff\\xac\\x56\\xff\\xac\\x58\\xff\\xb0\\x5a\\xff\\xaf\\x59\\xff\\xbb\\\n\\x6d\\xff\\xc7\\x80\\xff\\x7d\\x00\\xff\\xb8\\x81\\xff\\xff\\xff\\xff\\xaf\\x5a\\\n\\xff\\xaa\\x55\\xff\\xc3\\x80\\xff\\x7b\\x00\\xff\\x83\\x00\\xff\\xc1\\x7d\\xff\\\n\\xae\\x68\\xff\\xd5\\xbc\\xff\\xa2\\x50\\xff\\xbf\\x7a\\xff\\x75\\x00\\xff\\xa4\\\n\\x4f\\xff\\x9c\\x49\\xff\\xba\\x77\\xff\\xc5\\x7e\\xff\\xbc\\x84\\xff\\x9b\\x49\\\n\\xff\\x94\\x45\\xff\\xb5\\x73\\xff\\xc5\\x81\\xff\\xbd\\x84\\xff\\x9a\\x50\\xff\\\n\\x8c\\x40\\xff\\xb0\\x70\\xff\\x5f\\x00\\xff\\xab\\x55\\xff\\xc6\\x9c\\xff\\x84\\\n\\x3c\\xff\\xab\\x6e\\xff\\x59\\x00\\xff\\xc8\\x83\\xff\\xaa\\x57\\xff\\x7b\\x38\\\n\\xff\\xa5\\x6b\\xff\\x53\\x00\\xff\\xc8\\x84\\xff\\xad\\x56\\xff\\x8c\\x55\\xff\\\n\\xa1\\x68\\xff\\x4d\\x00\\xff\\xc2\\x82\\xff\\x9d\\x67\\xff\\x47\\x00\\xff\\xca\\\n\\x84\\xff\\xb9\\x6d\\xff\\x9a\\x64\\xff\\x43\\x00\\xff\\xc9\\x80\\xff\\xb9\\x6a\\\n\\xff\\xb2\\x67\\xff\\xb7\\x76\\xff\\x99\\x47\\xff\\x92\\x43\\xff\\x8a\\x3f\\xff\\\n\\xa0\\x66\\xff\\x9b\\x62\\xff\\x71\\x34\\xff\\x7d\\x46\\xff\\x8a\\x58\\xff\\x86\\\n\\x55\\xff\\x93\\x60\\xff\\x45\\x00\\xff\\x65\\x00\\xff\\xaf\\x49\\xff\\xc1\\x7e\\\n\\xff\\xbe\\x79\\xff\\xb9\\x76\\xff\\xb4\\x73\\xff\\xaf\\x70\\xff\\xa9\\x6d\\xff\\\n\\xa4\\x6a\\xff\\xa0\\x67\\xff\\x71\\x33\\xff\\x4b\\x00\\xff\\x77\\x00\\xff\\x71\\\n\\x00\\xff\\x69\\x00\\xff\\x63\\x00\\xff\\x5d\\x00\\xff\\x55\\x00\\xff\\x51\\x00\\\n\\xff\\x41\\x00\\x1f\\x57\\x30\\x26\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\\n\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\\n\\x48\\x00\\x00\\x00\\xd4\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x60\\x64\\x62\\\n\\x62\\x62\\x66\\x61\\x61\\x61\\x05\\x02\\x66\\x36\\x06\\x06\\x46\\x76\\x0e\\x4e\\\n\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\x01\\x41\\x21\\x61\\x11\\x51\\x06\\x26\\x0e\\x31\\\n\\x71\\x71\\x71\\x09\\x49\\x29\\x69\\x71\\x19\\x59\\x39\\x79\\x05\\x06\\x26\\x4e\\\n\\x45\\x71\\x25\\x08\\x90\\x55\\x56\\x51\\x55\\x63\\x50\\xd7\\xd0\\x84\\x09\\x68\\\n\\xa9\\x68\\xeb\\xe8\\x32\\x30\\x71\\xeb\\x89\\x8b\\x6b\\x01\\x01\\x50\\x40\\x5b\\\n\\xdf\\x80\\x8d\\x81\\xd9\\xd0\\x48\\x1c\\x0c\\x80\\x02\\xc6\\x26\\xa6\\x40\\x43\\\n\\xcd\\xcc\\xe1\\x02\\x16\\x96\\x56\\xd6\\x0c\\xcc\\xbc\\x36\\x70\\x01\\x5b\\x3b\\\n\\x7b\\x07\\x06\\x16\\x47\\x27\\xb8\\x80\\xb3\\xb3\\x8b\\x2b\\x03\\xb3\\x9b\\x3b\\\n\\x42\\xc0\\xc3\\xd3\\x8b\\x81\\x99\\xdf\\x1b\\x49\\x85\\x8f\\x2f\\x03\\xb3\\x9f\\\n\\x3f\\x92\\x40\\x40\\x20\\x03\\x63\\x50\\x70\\x48\\x68\\x58\\x78\\x44\\x64\\x54\\\n\\x74\\x4c\\x6c\\x5c\\x7c\\x02\\x43\\x62\\x92\\x61\\x72\\x4a\\x6a\\x5a\\x7a\\x46\\\n\\x66\\x96\\x4f\\x40\\x7c\\x76\\x0e\\x03\\x83\\x75\\xae\\x6e\\x5e\\x7e\\x41\\x61\\\n\\x51\\x71\\x8e\\x6f\\x49\\x42\\x0e\\x03\\x00\\xba\\xc4\\x2a\\x61\\x18\\x1a\\x4d\\\n\\x02\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\\n\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\\n\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\\n\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\\n\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\\n\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x7d\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xc0\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xf8\\xf8\\xf8\\xfb\\xfb\\xfb\\xfc\\xfc\\xfc\\\n\\x94\\x94\\x94\\xf4\\xf4\\xf4\\xf5\\xf5\\xf5\\xf1\\xf1\\xf1\\xef\\xef\\xef\\xe9\\\n\\xe9\\xe9\\xe7\\xe7\\xe7\\x95\\x95\\x95\\xf7\\xf7\\xf7\\xf9\\xf9\\xf9\\xf3\\xf3\\\n\\xf3\\xf0\\xf0\\xf0\\xea\\xea\\xea\\xf6\\xf6\\xf6\\x99\\x99\\x99\\xf2\\xf2\\xf2\\\n\\xeb\\xeb\\xeb\\xec\\xec\\xec\\xe6\\xe6\\xe6\\xed\\xed\\xed\\xfa\\xfa\\xfa\\xe0\\\n\\xad\\x92\\xc7\\x61\\x2a\\xbc\\x43\\x05\\xc1\\x5a\\x1f\\x95\\x37\\x02\\xe1\\xae\\\n\\x93\\xd2\\x76\\x3d\\xf7\\xb5\\x8d\\xfe\\xd6\\xb8\\xf5\\xa8\\x72\\xca\\x6b\\x2d\\\n\\xc2\\x5c\\x24\\xf6\\xb5\\x8d\\xff\\x92\\x4d\\xff\\x77\\x11\\xff\\x86\\x21\\xeb\\\n\\x8a\\x40\\xb9\\x44\\x03\\xfe\\xcd\\xae\\xff\\xff\\xff\\xef\\x7f\\x18\\xbc\\x42\\\n\\x04\\xc0\\x59\\x1e\\xf4\\x9d\\x63\\xff\\x7f\\x18\\xf8\\x76\\x00\\xee\\x76\\x00\\\n\\xe1\\x68\\x03\\xb9\\x45\\x03\\xdf\\xa9\\x8b\\xca\\x66\\x28\\xe6\\x77\\x21\\xea\\\n\\x79\\x05\\xdd\\x64\\x01\\xbc\\x4d\\x04\\x9e\\x46\\x17\\xb3\\x43\\x03\\xb4\\x43\\\n\\x03\\xa4\\x3d\\x03\\x5a\\x86\\x51\\xfd\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\x97\\x49\\x44\\x41\\x54\\x18\\xd3\\x65\\xcf\\xe7\\x12\\\n\\x82\\x30\\x10\\x04\\xe0\\xe4\\x22\\x01\\x35\\x41\\x22\\x16\\x14\\x7b\\x2f\\x11\\\n\\x7b\\x6f\\xef\\xff\\x56\\x06\\x83\\x12\\xc7\\xfd\\xf9\\xcd\\xdc\\xee\\x1c\\x42\\\n\\xff\\xc1\\x40\\xde\\xc1\\x99\\x04\\xc0\\xa2\\x94\\xda\\x4e\\x96\\xe4\\xf2\\x1a\\\n\\x08\\xe3\\x8c\\xb9\\x05\\x8f\\x08\\xab\\xa8\\x81\\x73\\xce\\x84\\x5f\\x8a\\xcf\\\n\\x34\\xa8\\x0e\\xc0\\xd4\\x2e\\x7b\\x95\\x04\\xe2\\x28\\xf1\\x9d\\xaa\\x01\\x4a\\\n\\x84\\xeb\\x9b\\x40\\x02\\x2e\\xc4\\x0f\\x40\\xad\\x1e\\x36\\x9a\\x1f\\x00\\x80\\\n\\x56\\xbb\\xd3\\xed\\xf5\\x53\\x08\\x06\\xc3\\xd1\\x78\\x32\\x9d\\x7d\\x57\\x20\\\n\\x9c\\x4b\\x29\\x17\\x51\\xda\\xb1\\x5c\\xad\\x37\\xdb\\xdd\\x5e\\x01\\xd7\\x70\\\n\\x38\\x9e\\xce\\x97\\xab\\xf9\\xf5\\xed\\x1e\\x3d\\x9e\\xe8\\x05\\x77\\x57\\x0a\\\n\\xa6\\xc6\\x3c\\x94\\x6e\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\\n\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\\n\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\\n\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\\n\\x33\\x37\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\\n\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\\n\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\\n\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x86\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xa4\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xc0\\xd8\\xf7\\xbe\\xd7\\xf6\\xbc\\xd5\\xf4\\\n\\xb9\\xd3\\xf3\\xbd\\xd6\\xf5\\xdc\\xe9\\xf9\\xdd\\xe8\\xf6\\xda\\xe5\\xf3\\xdc\\\n\\xe7\\xf5\\xd6\\xe4\\xf5\\xac\\xc8\\xeb\\xb8\\xd2\\xf2\\xdf\\xea\\xf7\\xd0\\xde\\\n\\xee\\xa7\\xc1\\xe3\\x89\\xae\\xd8\\x86\\xac\\xd7\\x9c\\xbb\\xdd\\xc7\\xd6\\xeb\\\n\\xd9\\xe6\\xf3\\x9f\\xbe\\xe3\\xb3\\xce\\xef\\xdd\\xe9\\xf6\\xc6\\xd8\\xec\\x81\\\n\\xac\\xd7\\x9a\\xbb\\xdc\\xe3\\xec\\xf6\\xe2\\xec\\xf5\\xae\\xc8\\xe4\\x7b\\xa7\\\n\\xd2\\xba\\xce\\xe6\\xd5\\xe2\\xf1\\x91\\xb3\\xdb\\xd4\\xe3\\xf4\\xcd\\xdc\\xef\\\n\\x7e\\xa8\\xd5\\x77\\xa0\\xd0\\xf5\\xf8\\xfb\\xf5\\xf8\\xfc\\x81\\xa8\\xd1\\x7b\\\n\\xa4\\xcf\\xc3\\xd5\\xea\\xc2\\xd4\\xea\\xa3\\xc1\\xe6\\xd9\\xe5\\xf3\\x9e\\xbb\\\n\\xdf\\x75\\xa0\\xcf\\x72\\x9e\\xcd\\xe3\\xeb\\xf5\\xb4\\xcb\\xe4\\xbf\\xd3\\xe7\\\n\\xf6\\xf8\\xfb\\xbf\\xd3\\xe5\\x6b\\x98\\xc4\\x91\\xb4\\xd6\\xd2\\xe0\\xee\\x78\\\n\\x9e\\xcc\\x99\\xb9\\xe0\\xda\\xe5\\xf2\\x7e\\xa6\\xd1\\x71\\x9d\\xcc\\x6c\\x9a\\\n\\xc7\\x6b\\x98\\xc5\\xb6\\xcc\\xe2\\xee\\xf3\\xf8\\xe8\\xee\\xf6\\xa1\\xbd\\xd9\\\n\\x68\\x94\\xc2\\x71\\x9b\\xc5\\xd6\\xe2\\xf0\\x6c\\x95\\xc5\\x8f\\xb0\\xd9\\xd9\\\n\\xe4\\xf2\\x7a\\xa5\\xd1\\x6b\\x99\\xc5\\x6a\\x97\\xc4\\x69\\x96\\xc4\\xf2\\xf6\\\n\\xfa\\xe1\\xea\\xf3\\x6d\\x95\\xc2\\x65\\x8f\\xbe\\x64\\x8f\\xbe\\x6d\\x95\\xc0\\\n\\xd5\\xe3\\xef\\x61\\x8c\\xbf\\x84\\xa7\\xd3\\xd3\\xe1\\xef\\x95\\xb5\\xd9\\x6c\\\n\\x98\\xc7\\x69\\x95\\xc3\\x67\\x93\\xc1\\x66\\x90\\xbf\\x63\\x8b\\xbb\\x63\\x8a\\\n\\xb9\\x62\\x8a\\xb8\\x86\\xa7\\xcb\\xcc\\xdc\\xea\\x57\\x83\\xb8\\xb9\\xcc\\xe4\\\n\\xc5\\xd6\\xea\\x71\\x99\\xc7\\xec\\xf1\\xf7\\xea\\xf0\\xf6\\x5f\\x89\\xb7\\x63\\\n\\x89\\xb5\\xbb\\xce\\xe2\\xa6\\xbd\\xd9\\x6a\\x92\\xc3\\xc9\\xd8\\xea\\xba\\xcd\\\n\\xe3\\x6b\\x94\\xc0\\x62\\x8c\\xba\\x94\\xb0\\xcf\\x61\\x87\\xb2\\xaa\\xc0\\xda\\\n\\xc0\\xd1\\xe4\\x46\\x75\\xae\\x5b\\x87\\xbb\\xc4\\xd5\\xe7\\xbf\\xd2\\xe5\\x85\\\n\\xa6\\xc9\\x67\\x8e\\xb8\\x65\\x8a\\xb6\\x80\\xa1\\xc5\\xba\\xcc\\xe0\\xbe\\xd0\\\n\\xe3\\x40\\x70\\xab\\x4e\\x7c\\xb3\\xa3\\xbb\\xd7\\xca\\xda\\xe9\\xd1\\xe0\\xec\\\n\\xc8\\xd8\\xe8\\x9c\\xb5\\xd3\\x3a\\x6c\\xa7\\x3f\\x70\\xaa\\x3c\\x6d\\xa8\\x3a\\\n\\x6b\\xa7\\x37\\x69\\xa5\\xff\\xff\\xff\\x41\\xdd\\xd3\\x26\\x00\\x00\\x00\\x01\\\n\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\\n\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xbc\\x49\\x44\\x41\\x54\\x18\\xd3\\\n\\x63\\x60\\xc0\\x0e\\x18\\x99\\x98\\x59\\x90\\xb8\\xac\\x6c\\xec\\x1c\\x1c\\x9c\\\n\\x5c\\xdc\\x30\\x3e\\x0f\\x2f\\x1f\\xbf\\x80\\xa0\\x90\\xb0\\x88\\x28\\x84\\x2f\\\n\\x26\\x2e\\x21\\x29\\x25\\x2d\\x23\\x2b\\x27\\xaf\\xa0\\x08\\x16\\x50\\x52\\x56\\\n\\x51\\x55\\x53\\x57\\x57\\xd3\\xd0\\xd4\\xd2\\x06\\xf1\\x75\\x74\\xf5\\xf4\\x0d\\\n\\x0c\\x8d\\x8c\\x4d\\x4c\\xcd\\xcc\\x2d\\x2c\\x81\\x02\\x56\\xd6\\x36\\xb6\\x76\\\n\\xf6\\x0e\\x8e\\x4e\\xce\\x2e\\xae\\x6e\\xee\\x40\\x01\\x0f\\x4f\\x2f\\x6f\\x1f\\\n\\x5f\\x3f\\xff\\x80\\xc0\\xa0\\xe0\\x90\\x50\\xa0\\x40\\x58\\x78\\x44\\x64\\x54\\\n\\x74\\x4c\\x4c\\x6c\\x5c\\x7c\\x42\\x62\\x12\\xc8\\x90\\xe4\\x94\\xd4\\x98\\x98\\\n\\xb4\\xf4\\x8c\\x8c\\xcc\\xac\\x6c\\xb0\\x2d\\x39\\xb9\\x79\\xf9\\x05\\x85\\x85\\\n\\x19\\x45\\xc5\\x25\\xa5\\x10\\x87\\x94\\x95\\x57\\x54\\x56\\x55\\xd7\\xd4\\xd6\\\n\\xd5\\xc3\\x9c\\xda\\xd0\\xd8\\xd4\\xdc\\xdc\\xd2\\xda\\x86\\xe4\\x9b\\xf6\\x8e\\\n\\xce\\x2e\\x1c\\xfe\\x06\\x00\\x5e\\xbf\\x28\\xa5\\xbb\\xf5\\xd0\\x9a\\x00\\x00\\\n\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\\n\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\\n\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\\n\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\\n\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\\n\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\\n\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\\n\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x05\\x4c\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x37\\x00\\x00\\x00\\x20\\x08\\x03\\x00\\x00\\x00\\x81\\xd6\\x10\\x57\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x8c\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xff\\xe1\\x76\\xfa\\xd5\\x4d\\xf9\\xce\\x40\\\n\\xfe\\xd2\\x44\\xfe\\xda\\x5a\\xff\\xe3\\x6f\\xff\\xf0\\x94\\xff\\xfe\\xb3\\xe9\\\n\\xcc\\x6f\\xeb\\xc9\\x51\\xf1\\xc7\\x42\\xf4\\xc8\\x30\\xfa\\xc8\\x32\\xf3\\xc8\\\n\\x3a\\xf0\\xc7\\x4a\\xe9\\xc8\\x58\\xf3\\xda\\x8f\\xe8\\xd9\\x99\\xf1\\xc9\\x53\\\n\\xf5\\xc9\\x31\\xfd\\xca\\x29\\xed\\xcd\\x63\\xff\\xe4\\x8d\\xeb\\xd0\\x80\\xfe\\\n\\xcb\\x2a\\xfc\\xc9\\x27\\xe8\\xc9\\x5f\\xe8\\xcd\\x7d\\xf5\\xdf\\xa0\\xe8\\xd7\\\n\\x91\\xeb\\xce\\x71\\xf1\\xd6\\x86\\xf2\\xd7\\x87\\xf2\\xd5\\x7f\\xf4\\xd5\\x71\\\n\\xee\\xd0\\x73\\xe5\\xca\\x74\\xe4\\xc8\\x6b\\xff\\xe5\\x93\\xf3\\xde\\xa6\\xf3\\\n\\xca\\x4c\\xeb\\xd5\\x97\\xe2\\xcb\\x88\\xe4\\xcb\\x82\\xe6\\xce\\x84\\xf4\\xd6\\\n\\x79\\xf5\\xd5\\x6a\\xf3\\xd2\\x60\\xe6\\xc8\\x64\\xee\\xe3\\xae\\xfe\\xef\\xad\\\n\\xf9\\xdc\\x85\\xfd\\xe8\\x95\\xf2\\xc9\\x4b\\xea\\xd8\\xa6\\xe2\\xc8\\x78\\xf0\\\n\\xc9\\x5a\\xf3\\xd7\\x80\\xec\\xd3\\x89\\xec\\xd0\\x7a\\xff\\xf2\\xb1\\xfd\\xe4\\\n\\x98\\xf3\\xc9\\x43\\xea\\xda\\xae\\xe2\\xca\\x80\\xff\\xec\\x98\\xfd\\xf2\\xa9\\\n\\xf8\\xdd\\x8c\\xe8\\xca\\x67\\xf0\\xd2\\x6e\\xe2\\xc7\\x71\\xf7\\xca\\x27\\xff\\\n\\xec\\x9f\\xe3\\xd9\\xa5\\xe6\\xd4\\xa2\\xeb\\xcb\\x5a\\xed\\xcc\\x5b\\xfc\\xc9\\\n\\x18\\xf6\\xe2\\x8f\\xe6\\xd6\\xaa\\xf1\\xd8\\x8d\\xee\\xc7\\x58\\xed\\xcf\\x72\\\n\\xe2\\xcd\\x8f\\xf0\\xd4\\x7d\\xe8\\xd6\\xa4\\xf2\\xd4\\x70\\xf6\\xd9\\x82\\xe7\\\n\\xd0\\x8c\\xe3\\xd6\\x9c\\xfc\\xe7\\x94\\xf0\\xda\\x9c\\xf8\\xc7\\x3a\\xe6\\xcc\\\n\\x7c\\xf7\\xcd\\x4f\\xed\\xd5\\x91\\xfd\\xec\\xa5\\xe7\\xd3\\x9b\\xed\\xd3\\x82\\\n\\xde\\xc6\\x7c\\xeb\\xda\\x94\\xee\\xd2\\x7b\\xee\\xd7\\x93\\xf7\\xe3\\xaa\\xfe\\\n\\xe7\\xa8\\xf0\\xd3\\x76\\xe7\\xcf\\x85\\xef\\xd6\\x8c\\xdc\\xce\\xa8\\xfc\\xe1\\\n\\x8f\\xea\\xd9\\x93\\xec\\xd2\\x81\\xff\\xe7\\xa2\\xfe\\xe1\\x89\\xf0\\xc8\\x51\\\n\\xdf\\xcf\\xa3\\xfb\\xe7\\xae\\xdc\\xc7\\x8a\\xf4\\xdc\\x97\\xf5\\xe1\\xa8\\xe7\\\n\\xcc\\x75\\xeb\\xd7\\x9f\\xea\\xcb\\x61\\xed\\xd8\\x99\\xed\\xcc\\x53\\xea\\xd3\\\n\\x8f\\xf9\\xce\\x48\\xf8\\xd7\\x65\\xe6\\xcf\\x8b\\xf6\\xcb\\x32\\xff\\xff\\xff\\\n\\xba\\xd2\\x26\\x5c\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\\n\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\\n\\x02\\xc3\\x49\\x44\\x41\\x54\\x38\\xcb\\xad\\x94\\xeb\\x5b\\x12\\x41\\x14\\xc6\\\n\\xa7\\xb6\\x32\\x76\\x76\\x66\\x36\\x96\\x59\\xd9\\x59\\xcd\\x44\\x59\\x6f\\x08\\\n\\xa1\\x46\\x5c\\xb6\\x90\\x72\\x81\\x50\\x08\\xc1\\xbc\\x42\\xa1\\xe4\\x25\\x23\\\n\\x2b\\xb5\\xbb\\x97\\xea\\x2f\\x6f\\x71\\x4d\\xbc\\xb5\\xe0\\xf3\\xf4\\xee\\x87\\\n\\x9d\\xf7\\x99\\xf3\\xdb\\x33\\x7b\\xce\\xcc\\x00\\x70\\x51\\xd7\\xae\\x73\\xdc\\\n\\x8d\\x9b\\xb7\\xda\\x6e\\x83\\x2b\\xc9\\xc1\\x43\\x01\\x61\\x48\\x44\\xc7\\x9d\\\n\\xab\\x60\\x4e\\xc9\\x85\\x10\\xa5\\x02\\x42\\x18\\x13\\xb9\\xbd\\x65\\xce\\x8d\\\n\\x15\\x45\\xa1\\x0c\\xc1\\xba\\x88\\xda\\xd1\\xd9\\x22\\x77\\x97\\x50\\x4a\\x19\\\n\\xc7\\x77\\xdd\\xeb\\xf6\\xf4\\xf4\\x3a\\xbc\\x9a\\xa3\\xaf\\x25\\xae\\x7f\\x00\\\n\\x31\\x4a\\xb1\\xc7\\x39\\x38\\xe4\\x1b\\x76\\xfb\\x03\\xf7\\xc5\\xa0\\x6f\\xe4\\\n\\x1f\\xb1\\xa3\\xed\\x63\\x0f\\x4e\\x8c\\x8c\\x11\\x65\\xa1\\x87\\xc0\\xe7\\xf5\\\n\\x85\\x35\\x35\\x12\\x88\\xc6\\x3a\\xc2\\xfa\\xa3\\xcb\\xb0\\xc7\\x6a\\x28\\x4e\\\n\\x64\\xcf\\xb1\\x8b\\x45\\x38\\x86\\xf8\\x71\\x90\\x78\\x02\\xc0\\xd3\\x09\\x43\\\n\\xf3\\xea\\xfe\\xa4\\x91\\x72\\x5e\\xc2\\xc9\\xd8\\x95\\x36\\x2b\\x1f\\x79\\x66\\\n\\x59\\x1f\\x61\\x69\\x1e\\x80\\xcc\\xe4\\x91\\xeb\\xd4\\xa6\\xb2\\x81\\x68\\x87\\\n\\xa6\\x5f\\xc0\\x32\\x84\\x99\\x05\\xcc\\x31\\x41\\x7a\\x7e\\xe4\\xf3\\x06\\x41\\\n\\xb0\\x31\\x3d\\x6d\\x14\\x22\\xc5\\x68\\xc0\\x08\\x9f\\xff\\xcb\\x19\\x68\\x62\\\n\\x66\\xed\\xd3\\x88\\x8c\\x59\\x1f\\xf2\\x42\\xf8\\xa2\\x31\\x3f\\xeb\\x2d\\x10\\\n\\x69\\x6e\\x5e\\x4f\\x9c\\x6b\\xc9\\x02\\xa1\\x88\\xb9\\x04\\x01\\x63\\x28\\x5a\\\n\\x5b\\x64\\x51\\x26\\xea\\x52\\x23\\xa0\\x64\\xe0\\x72\\xa1\\xd8\\x53\\x0c\\x97\\\n\\xce\\x70\\x2f\\x21\\x45\\x2e\\xf8\\x4a\\xe2\\x55\\x39\\x98\\xaa\\x1c\\x67\\x94\\\n\\x0a\\xcb\\x8d\\x88\\x95\\xa9\\x32\\x26\\x59\\x7f\\xf5\\xf5\\xea\\x69\\x6e\\x48\\\n\\x24\\x59\\x39\\xb9\\xe6\\xae\\x54\\xd6\\x97\\x97\\x37\\x8e\\xd7\\x66\\x14\\xb4\\\n\\x37\\x8d\\x90\\x4d\\x73\\x49\\xf1\\xa9\\xe8\\xdb\\x54\\xed\\x14\\xf7\\x2e\\xb3\\\n\\x92\\xbf\\x50\\xac\\xfc\\x90\\xaa\\x6e\\x9d\\xb8\\xf7\\xaa\\x90\\x46\\xf1\\xae\\\n\\xee\\xe2\\x19\\xf0\\x52\\xe5\\x3f\\x04\\x53\\xb1\\xbf\\xe6\\x63\\x84\\xa3\\x0c\\\n\\xab\\x51\\x4f\\xd1\\x98\\x6f\\x06\\x82\\xc9\\x84\\x66\\x6c\\x5b\\xc3\\x36\\x22\\\n\\x50\\x45\\x88\\xf7\\x94\\x86\\xf9\\x9d\\x09\\x1b\\x64\\xd7\\xaa\\xce\\xb4\\x16\\\n\\x0c\\x57\\x3e\\x01\\xb0\\x25\\x96\\xcd\\xa3\\x95\\x8e\\x27\\xc1\\x0a\\x29\\x17\\\n\\x1e\\xdb\\x80\\x9f\\xbf\\x58\\xef\\xfe\\x84\\x26\\x4b\\x21\\x2c\\x28\\xac\\x9e\\\n\\xcf\\x0f\\x36\\x42\\x02\\xe6\\x6d\\xb8\\xd1\\xb0\\xef\\xab\\x35\\xea\\x93\\x77\\\n\\x42\\x10\\x62\\xb3\\xb9\\xa1\\xe0\\x34\\x18\\x8d\\xe7\\x14\\xa8\\xdb\\x80\\x23\\\n\\x09\\x55\\xb6\\x76\\x0f\\x18\\x77\\x76\\x7c\\xd3\\x0c\\x43\\x4b\\x64\\xf2\\x60\\\n\\x93\\xa3\\x39\\x81\\x6c\\xdb\\x80\\x1b\\xbd\\xbc\\xaa\\x59\\x55\\xdf\\xcd\\x7c\\\n\\x5f\\xaf\\xd5\\x2a\\xce\\x49\\x67\\x74\\x00\\x51\\x85\\x09\\x3f\\x6c\\xeb\\xb9\\\n\\x10\\x94\\x48\\x48\\x9a\\x5b\\xab\\xad\\xaf\\x96\\xf6\\xf6\\x56\\x6b\\x9e\\xe4\\\n\\x7e\\x5c\\x60\\x8a\\xf9\\xc0\\x25\\x5b\\xf0\\xc0\\x20\\xf0\\x10\\xf3\\xa2\\x79\\\n\\x06\\xbd\\xde\\xa2\\x21\\x42\\x9c\\x36\\xaf\\x02\\x53\\xf8\\xa7\\x7d\\x07\\xc7\\\n\\x7f\\x69\\x3c\\x46\\x42\\x99\\xe3\\x38\\x5c\\xc6\\x2e\\x05\\x51\\x4b\\xe8\\x10\\\n\\x34\\xd1\\xa2\\x9e\\x0d\\x71\\xbf\\x11\\x62\\x4c\\xc9\\x29\\x54\\xb1\\xb0\\xb4\\\n\\x6b\\xbf\\x19\\x67\\xe6\\x9c\\xd1\\x45\\x88\\x58\\xfd\\x72\\xb4\\x30\\x73\\x58\\\n\\x4e\\x36\\xe7\\xcc\\x9d\\x5a\\xeb\\x52\\x25\\x72\\xd4\\x43\\x64\\x9e\\x52\\x01\\\n\\x0f\\xc8\\x83\\xad\\x70\\x75\\x65\\x16\\xdc\\x0e\\x35\\x22\\x4a\\x12\\x91\\xa4\\\n\\xa0\\x2f\\xd3\\x2a\\x56\\xcf\\x3a\\xbb\\x77\\x50\\xad\\xea\\x9e\\x6a\\x6c\\xf1\\\n\\x0a\\xd4\\xff\\xd2\\x1f\\xd0\\xbf\\x72\\xcd\\xb7\\xde\\x21\\x57\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\\n\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\\n\\x37\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\\n\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x32\\x2d\\x31\\x34\\x54\\x31\\x32\\x3a\\\n\\x32\\x37\\x3a\\x32\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\xed\\x15\\x16\\xfc\\x00\\\n\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xd6\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x06\\x00\\x00\\x00\\x1f\\xf3\\xff\\x61\\\n\\x00\\x00\\x00\\x06\\x62\\x4b\\x47\\x44\\x00\\xff\\x00\\xff\\x00\\xff\\xa0\\xbd\\\n\\xa7\\x93\\x00\\x00\\x00\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0b\\x13\\x00\\x00\\\n\\x0b\\x13\\x01\\x00\\x9a\\x9c\\x18\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\\n\\xdd\\x06\\x07\\x09\\x07\\x27\\x95\\x79\\x70\\x6b\\x00\\x00\\x00\\x1d\\x74\\x45\\\n\\x58\\x74\\x43\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\\n\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\xef\\\n\\x64\\x25\\x6e\\x00\\x00\\x02\\x3a\\x49\\x44\\x41\\x54\\x38\\xcb\\xa5\\x93\\x5f\\\n\\x48\\x53\\x71\\x14\\xc7\\x3f\\xd7\\xee\\x36\\x69\\x8d\\x9b\\x20\\x98\\x23\\x13\\\n\\xd3\\x1a\\x44\\x12\\xe8\\x4b\\xd1\\xc0\\x05\\x0e\\x1d\\x82\\xac\\x1e\\xda\\xc2\\\n\\xf0\\x59\\xf0\\x21\\xa1\\x87\\xc0\\x7a\\x8a\\xde\\xf2\\x21\\x7a\\x1a\\x42\\xf4\\\n\\x1e\\x8c\\x4a\\x11\\x02\\x5f\\x56\\x11\\x45\\xb5\\x7a\\x8a\\x6c\\x85\\x05\\x1b\\\n\\xbb\\x2c\\x94\\x2d\\xbc\\x77\\xea\\xee\\xee\\xef\\xf4\\x30\\xf2\\x0f\\xbe\\x18\\\n\\x1e\\xf8\\xc2\\x39\\x0f\\xdf\\xef\\x39\\x9c\\x73\\xbe\\x9a\\x88\\x70\\x90\\xd0\\\n\\x77\\x16\\xab\\x9f\\x2f\\x89\\x28\\x41\\x44\\x10\\xa5\\x40\\x09\\xe2\\x36\\x72\\\n\\x51\\x6a\\x3b\\x77\\x15\\xc7\\x87\\x3e\\x69\\x7b\\x04\\x44\\x09\\x46\\xd7\\x18\\\n\\xa2\\x04\\x5c\\x85\\xb8\\xee\\x36\\xea\\x2e\\xd5\\x95\\x0f\\x6c\\xfc\\xf9\\xbe\\\n\\x45\\xde\\x25\\xb0\\x92\\x8d\\x88\\x37\\x70\\x0a\\x14\\x38\\xab\\x4f\\x11\\xa7\\\n\\x8e\\x72\\x1c\\xa4\\xe6\\xe0\\x69\\xbd\\xc2\\x46\\xe5\\xeb\\x1e\\x32\\x40\\xd3\\\n\\x76\\x77\\x45\\xf3\\xd1\\x73\\xb8\\xd5\\x25\\xa4\\xee\\x22\\x4e\\x03\\x9e\\xd6\\\n\\x38\\x35\\xab\\xc0\\x7a\\x65\\x2f\\x79\\xd7\\x04\\x9e\\xc3\\x27\\x40\\xf3\\xe2\\\n\\xda\\x5f\\x78\\xf8\\x3c\\x42\\x7b\\x7b\\x3b\\xcb\\xcb\\xcb\\xdc\\x1a\\xb3\\xd9\\\n\\xa8\\xe4\\x48\\xbd\\x1c\\xe0\\x64\\xfe\\xb1\\x98\\xa6\\xc9\\xf4\\xf4\\xf4\\x96\\\n\\x90\\x26\\x22\\xfc\\x7e\\x17\\x96\\x23\\xc1\\x28\\x89\\xc9\\x8f\\x44\\xa3\\x51\\\n\\x12\\x89\\x04\\xb6\\x6d\\x53\\x28\\x14\\xc8\\x64\\x32\\xd4\\x6a\\x35\\xc6\\xc7\\\n\\xc7\\xd1\\x75\\x1d\\xd3\\x34\\xc9\\x66\\xb3\\x2c\\x2e\\x2e\\x32\\x3f\\x3f\\xaf\\\n\\xe9\\x00\\x87\\xbc\\xad\\xe8\\xcd\\xc7\\x08\\x85\\x42\\x0c\\x0e\\x0e\\x32\\x35\\\n\\x35\\xc5\\xda\\xda\\x1a\\xc1\\x60\\x90\\xde\\xde\\x5e\\x4c\\xd3\\x64\\x66\\x66\\\n\\x86\\x62\\xb1\\x48\\x20\\x10\\x20\\x1e\\x8f\\x13\\x0a\\x85\\x1a\\x3b\\x28\\xbd\\\n\\xb9\\x28\\xde\\xc0\\x69\\x2e\\xc4\\x66\\x31\\x0c\\x83\\x2e\\xff\\x0b\\x1e\\xdd\\\n\\xeb\\xc3\\xb2\\x2c\\x92\\xc9\\x24\\xe1\\x70\\x98\\x58\\x2c\\xc6\\xf0\\xf0\\x30\\\n\\x96\\x65\\x71\\xff\\x7a\\x85\\x3e\\xe7\\x36\\x86\\x61\\xd0\\xdf\\xdf\\x2f\\x9a\\\n\\xf9\\xea\\xbc\\xfc\\xbb\\xf1\\xdd\\x27\\x7d\\xdc\\xb9\\xfc\\x9e\\x1b\\xb3\\x5d\\\n\\x94\\xcb\\x65\\x3c\\x1e\\x0f\\x7e\\xbf\\x1f\\x00\\xdb\\xb6\\x71\\x1c\\x87\\x96\\\n\\x96\\x16\\xd2\\xe9\\xb4\\x36\\x31\\x31\\x21\\xa9\\x54\\x4a\\xd3\\x76\\x7e\\xe2\\\n\\xe8\\xe8\\xa8\\x44\\x22\\x11\\x3a\\x3a\\x3a\\xd0\\x75\\x9d\\x52\\xa9\\x44\\x2e\\\n\\x97\\xc3\\xe7\\xf3\\xd1\\xd9\\xd9\\x49\\x5b\\x5b\\x1b\\xf5\\x7a\\x9d\\x7c\\x3e\\\n\\x4f\\x26\\x93\\x61\\x6e\\x6e\\x6e\\xb7\\x00\\xc0\\xc8\\xc8\\x88\\x04\\x83\\x41\\\n\\x7c\\x3e\\x1f\\x00\\x37\\x07\\x5e\\xe3\\xd6\\xaa\\x3c\\x78\\x3b\\x04\\xc0\\xe6\\\n\\xe6\\x26\\xc5\\x62\\x91\\x85\\x85\\x05\\x6d\\xeb\\x0a\\x3b\\xe3\\xd7\\xb3\\xb3\\\n\\xd2\\x1c\\xe8\\x41\\x94\\x4b\\x75\\x35\\x47\\x77\\xf2\\x9b\\xb6\\x6f\\x2f\\x34\\\n\\x3e\\xaa\\x89\\xf5\\xf2\\x0f\\x5c\\xa7\\x46\\xcf\\xb5\\x9c\\xf6\\x5f\\x66\\xfa\\\n\\x99\\x3e\\x23\\xca\\x55\\x74\\x5f\\x5d\\xd2\\xf6\\xeb\\x46\\xed\\xa0\\x76\\xfe\\\n\\x0b\\x50\\xd7\\x27\\x86\\x18\\x97\\x4b\\x2a\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\\n\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xd6\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xea\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xdb\\x05\\x00\\xe9\\x63\\x56\\xeb\\x77\\x68\\\n\\xec\\x7e\\x6e\\xed\\x80\\x70\\xe2\\x38\\x2e\\xeb\\x76\\x67\\xee\\x84\\x70\\xf2\\\n\\x95\\x76\\xf2\\x7c\\x3d\\xf5\\x87\\x38\\xfb\\xb7\\x7d\\xf7\\x77\\x00\\xe9\\x65\\\n\\x58\\xee\\x87\\x73\\xf0\\x79\\x46\\xf6\\x88\\x35\\xf9\\x95\\x37\\xfa\\x97\\x37\\\n\\xfc\\xbc\\x7e\\xf9\\x7b\\x00\\xec\\x7d\\x6d\\xf2\\x94\\x76\\xf4\\x80\\x32\\xfa\\\n\\x95\\x37\\xf9\\xa5\\x40\\xf8\\xb9\\x4d\\xf7\\xc8\\x57\\xf9\\xe2\\x96\\xf3\\xcb\\\n\\x33\\xed\\x7f\\x6f\\xf3\\x9b\\x77\\xf8\\x8d\\x35\\xf9\\xa7\\x41\\xf7\\xc1\\x53\\\n\\xf6\\xd4\\x5e\\xf6\\xd8\\x61\\xf9\\xe6\\x99\\xf3\\xcd\\x35\\xf9\\x91\\x36\\xf8\\\n\\xb4\\x4a\\xf6\\xd0\\x5c\\xe3\\xd4\\x5c\\xad\\xc7\\x4e\\x7c\\xbc\\x41\\x96\\xcf\\\n\\x7f\\x1b\\x9d\\x00\\xf8\\xba\\x4e\\xf6\\xd6\\x60\\xf5\\xd8\\x61\\xab\\xc6\\x4d\\\n\\x64\\xb7\\x3b\\x4a\\xb2\\x34\\x47\\xb1\\x33\\x88\\xcc\\x7c\\x13\\x9b\\x00\\xee\\\n\\x86\\x72\\xf4\\x81\\x34\\xea\\xd5\\x5e\\x8b\\xbf\\x44\\x4c\\xb2\\x34\\x5b\\xa3\\\n\\x76\\x6a\\x99\\xa7\\xa3\\xba\\xd2\\x4b\\x75\\xaf\\xf4\\x9d\\x78\\x48\\xb1\\x33\\\n\\x51\\xaa\\x54\\x6a\\x98\\xa7\\xa4\\xba\\xd6\\xa5\\xba\\xd7\\xa2\\xb8\\xd6\\x80\\\n\\xa3\\xbc\\x88\\xa4\\xca\\x63\\x87\\xba\\x70\\x91\\xbf\\xff\\xff\\xff\\xaf\\x06\\\n\\x09\\xc1\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xc6\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x4d\\x8f\\x69\\x17\\x81\\x60\\x10\\x85\\x2b\\x5b\\\n\\x64\\xcb\\xd8\\x53\\x84\\xb7\\xec\\x14\\x25\\x5b\\x79\\xd1\\xa2\\xfc\\xff\\xdf\\\n\\x43\\xca\\x72\\xbf\\x3d\\xcf\\x9c\\x39\\x73\\x87\\x20\\x7e\\x21\\xc3\\xfc\\x13\\\n\\x95\\x48\\xa6\\xbe\\x82\\x4c\\x67\\xe8\\x6c\\x8e\\xc9\\x17\\x3e\\xe3\\x62\\xa9\\\n\\xcc\\x56\\x00\\xaa\\xb5\\x98\\xeb\\x8d\\x66\\x0b\\xda\\x5c\\x87\\x17\\x22\\xee\\\n\\xf6\\x44\\xe8\\x0f\\x86\\x08\\x49\\xf2\\x5b\\xd4\\x7b\\x23\\x18\\x4f\\xd0\\x74\\\n\\x36\\x5f\\x2c\\x43\\x2e\\x36\\x44\\x58\\x29\\xea\\x7a\\xa3\\xe9\\x5b\\x23\\x5c\\\n\\xd8\\xed\\x61\\xac\\x1c\\x8e\\x27\\xdd\\xb4\\xce\\xf8\\x25\\x32\\x97\\x56\\x7f\\\n\\xa2\\x1e\\xaf\\x37\\xdb\\x71\\xbd\\x50\\xd0\\x2c\\x0c\\xd0\\xfa\\x74\\xbb\\xbb\\\n\\x7e\\x80\\x31\\x41\\x52\\xd9\\x4a\\x7b\\x38\\xdd\\xe8\\xb6\\xfb\\xc0\\xef\\x13\\\n\\x89\\x1c\\x70\\x68\\xa6\\x99\\x8e\\x8f\\xa3\\x52\\x49\\x06\\x3a\\x68\\xae\\x5b\\\n\\x6e\\x10\\xb7\\x4e\\xe5\\xab\\xbc\\xb4\\xd8\\x9e\\x3d\\xfc\\x79\\xa3\\x50\\x13\\\n\\xe4\\xa5\\x81\\x71\\x24\\x9e\\x14\\xc6\\x18\\xa9\\xf2\\xcc\\x34\\xdf\\x00\\x00\\\n\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\\n\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\\n\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\\n\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\\n\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\x30\\\n\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\\n\\x2d\\x30\\x31\\x2d\\x31\\x30\\x54\\x30\\x38\\x3a\\x32\\x32\\x3a\\x31\\x33\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\x36\\x54\\xa2\\x1f\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\\n\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x01\\x38\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x06\\x00\\x00\\x00\\x1f\\xf3\\xff\\x61\\\n\\x00\\x00\\x00\\x01\\x73\\x52\\x47\\x42\\x00\\xae\\xce\\x1c\\xe9\\x00\\x00\\x00\\\n\\x06\\x62\\x4b\\x47\\x44\\x00\\xff\\x00\\xff\\x00\\xff\\xa0\\xbd\\xa7\\x93\\x00\\\n\\x00\\x00\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0b\\x13\\x00\\x00\\x0b\\x13\\x01\\\n\\x00\\x9a\\x9c\\x18\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\xe0\\x02\\x0f\\\n\\x0e\\x2c\\x01\\xbc\\x9b\\x84\\x26\\x00\\x00\\x00\\xb8\\x49\\x44\\x41\\x54\\x38\\\n\\xcb\\xed\\x92\\xbb\\x09\\xc2\\x50\\x00\\x45\\x8f\\x62\\x40\\x10\\xd4\\xc2\\x4a\\\n\\x44\\x5c\\xc0\\x5e\\x07\\xc9\\x0a\\xe2\\x16\\x09\\xe8\\x14\\x19\\xc0\\x26\\x33\\\n\\xd8\\x29\\x36\\x76\\xae\\x60\\x04\\x11\\x0b\\xf3\\xf2\\xa2\\xc9\\xfb\\xb9\\x80\\\n\\x45\\x24\\x9d\\x78\\xcb\\x5b\\x1c\\xb8\\x87\\xdb\\x70\\xce\\x51\\x27\\x4d\\x6a\\\n\\xe6\\x07\\x00\\xad\\x4f\\x65\\x63\\xc3\\x10\\x58\\x60\\xb5\\x8f\\x29\\x41\\xbf\\\n\\x62\\x54\\x1e\\xb9\\xe5\\xe8\\x52\\x09\\x00\\x2c\\xc2\\xa9\\x0d\\xe6\\x7d\\x78\\\n\\x69\\x8f\\xe3\\x4d\\x05\\xab\\x43\\x06\\x10\\x56\\x9b\\x60\\x4a\\x7f\\xd6\\xb3\\\n\\xec\\x13\\xc3\\xf6\\xac\\x18\\xb4\\x3d\\x28\\x85\\x5f\\xdd\\x81\\x7e\\xf2\\x28\\\n\\x0d\\xa9\\x32\\x14\\xd6\\x21\\xb5\\x85\\x22\\xfd\\x42\\x62\\x21\\xe3\\xd3\\x3d\\\n\\x67\\xd2\\x85\\x71\\xc7\\x91\\x66\\x0f\\x10\\x49\\x5c\\x59\\x22\\x2a\\x8b\\xd6\\\n\\xbb\\x2b\\x28\\xe9\\x53\\x08\\x10\\x97\\x18\\x79\\x8d\\x3e\\x0a\\xff\\x5f\\xb9\\\n\\x3e\\xe0\\x0d\\x94\\x2b\\x52\\x92\\x7c\\x6f\\x2f\\x1c\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x97\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xd8\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xd5\\xd5\\xd5\\xd4\\xd4\\xd4\\xd2\\xd2\\xd2\\\n\\xd1\\xd1\\xd1\\xd0\\xd0\\xd0\\xce\\xce\\xce\\xcd\\xcd\\xcd\\xd3\\xd3\\xd3\\xfd\\\n\\xfd\\xfd\\xe4\\xe4\\xe4\\xe2\\xe2\\xe2\\xe0\\xe0\\xe0\\xcb\\xcb\\xcb\\xca\\xca\\\n\\xca\\xf3\\xf3\\xf3\\xfb\\xfb\\xfb\\xc7\\xc7\\xc7\\xc8\\xc8\\xc8\\xf7\\xf7\\xf7\\\n\\xe9\\xef\\xe3\\xc1\\xd3\\xaf\\xde\\xde\\xde\\xc3\\xc3\\xc3\\xfc\\xfc\\xfc\\xeb\\\n\\xf1\\xe6\\x90\\xb3\\x70\\x89\\xae\\x67\\xc0\\xd3\\xae\\xdc\\xdc\\xdc\\xc0\\xc0\\\n\\xc0\\xeb\\xeb\\xeb\\xfa\\xfa\\xfa\\xe8\\xee\\xe3\\x8f\\xb3\\x6f\\x94\\xd6\\x25\\\n\\x91\\xb3\\x70\\xda\\xda\\xda\\xbd\\xbd\\xbd\\xe9\\xe9\\xe9\\xd6\\xe2\\xca\\x8a\\\n\\xaf\\x67\\xd9\\xd9\\xd9\\xb9\\xb9\\xb9\\xe8\\xe8\\xe8\\xd8\\xe3\\xce\\x8e\\xb1\\\n\\x6e\\x8f\\xb2\\x6e\\xbd\\xd1\\xaa\\xd7\\xd7\\xd7\\xb5\\xb5\\xb5\\xe7\\xe7\\xe7\\\n\\x94\\xb6\\x74\\x93\\xb2\\x75\\xfb\\xfc\\xfa\\xb7\\xb7\\xb7\\xbc\\xbc\\xbc\\xe5\\\n\\xe5\\xe5\\x8d\\xb0\\x6c\\x92\\xb4\\x72\\x9c\\xba\\x81\\xf4\\xf5\\xf2\\xb8\\xb8\\\n\\xb8\\xd7\\xe2\\xcd\\x9c\\xba\\x7f\\xf7\\xf9\\xf6\\xb4\\xb4\\xb4\\xb6\\xb6\\xb6\\\n\\xb1\\xb1\\xb1\\xd8\\xd8\\xd8\\xad\\xad\\xad\\xff\\xff\\xff\\x48\\xcb\\x3a\\x09\\\n\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\\n\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x99\\x49\\x44\\\n\\x41\\x54\\x18\\xd3\\x5d\\xcc\\x67\\x03\\x81\\x60\\x18\\x85\\xe1\\x87\\x54\\x4e\\\n\\x8b\\x84\\x8c\\x64\\x64\\x46\\xf6\\xde\\xfb\\xff\\xff\\x24\\xbc\\x51\\xb8\\xbf\\\n\\x9d\\xeb\\xc3\\xa1\\x48\\x94\\x8b\\xf1\\x82\\x48\\x41\\x71\\xbc\\x92\\x42\\xe1\\\n\\x20\\x0b\\x0a\\x20\\xab\\x1f\\xe0\\x21\\x92\\x96\\x48\\x42\\xd1\\xdf\\x20\\x40\\\n\\xd1\\x52\\x46\\x3a\\x83\\xac\\xe9\\x83\\x08\\xe4\\x8c\\x7c\\xa1\\x68\\xa1\\x64\\\n\\x33\\x50\\xcb\\xa8\\x54\\x6b\\x8e\\x53\\xb7\\xd0\\x68\\x32\\xd1\\x5b\\x68\\x77\\\n\\x1c\\x26\\x6e\\x97\\x89\\xd9\\x83\\xd7\\x7f\\xca\\x60\\x88\\xd1\\x98\\x89\\x3d\\\n\\x61\\x32\\x9d\\xcd\\xdd\\x85\\x7f\\xbc\\x5c\\xc1\\x5b\\x6f\\xb6\\xbb\\xcf\\x26\\\n\\xda\\x4b\\x38\\x1c\\x4f\\xe1\\x26\\x3a\\xcb\\x80\\x7b\\xa1\\xaf\\xae\\xca\\xed\\\n\\x67\\x13\\xdd\\xff\\x76\\xd0\\x03\\x49\\x66\\x0f\\x33\\x11\\x3a\\x57\\x9e\\x00\\\n\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\\n\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\\n\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\\n\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x30\\x34\\x2d\\x30\\x32\\x54\\x31\\x31\\x3a\\x34\\x34\\x3a\\x31\\x31\\\n\\x2b\\x30\\x32\\x3a\\x30\\x30\\x72\\xc3\\x2e\\xd8\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\xe8\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xce\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x36\\x6b\\xbc\\x36\\x6b\\xbb\\x36\\x6a\\xbb\\\n\\x39\\x6c\\xbc\\x3b\\x6e\\xbd\\x3a\\x6d\\xbb\\x38\\x6b\\xbb\\x3e\\x70\\xbb\\xd1\\\n\\xe0\\xf6\\xd1\\xe0\\xf7\\xf8\\xfb\\xfe\\xf7\\xfb\\xfe\\xf6\\xf9\\xfd\\xf0\\xf5\\\n\\xfc\\xea\\xf0\\xfa\\xed\\xf2\\xfb\\xf7\\xfa\\xfd\\xeb\\xf1\\xfb\\xdf\\xe9\\xf8\\\n\\xbd\\xd0\\xec\\x5e\\x89\\xc9\\xd1\\xdf\\xf6\\x80\\xaa\\xe9\\xf6\\xfa\\xfe\\xf6\\\n\\xfa\\xfd\\x64\\x8c\\xc8\\xee\\xf3\\xfb\\xea\\xf1\\xfb\\xf2\\xf6\\xfc\\xf1\\xf6\\\n\\xfc\\xe2\\xec\\xf9\\xdb\\xe7\\xf8\\xba\\xd0\\xee\\xd0\\xdf\\xf6\\x7e\\xa8\\xe8\\\n\\xe9\\xf1\\xfa\\xee\\xf4\\xfb\\xe8\\xf0\\xfa\\xdd\\xe8\\xf8\\xdb\\xe6\\xf7\\x7a\\\n\\xa3\\xe1\\xc3\\xd5\\xef\\x35\\x69\\xb7\\xcc\\xdd\\xf5\\x7e\\xa8\\xe7\\x66\\x8d\\\n\\xc9\\xe9\\xf0\\xfa\\xf3\\xf8\\xfd\\xf8\\xfa\\xfe\\xef\\xf4\\xfc\\xdf\\xe9\\xf9\\\n\\xdb\\xe7\\xf7\\xd9\\xe5\\xf7\\x78\\xa2\\xe0\\xa9\\xc2\\xe7\\x35\\x68\\xb6\\xc9\\\n\\xdc\\xf4\\x7d\\xa7\\xe7\\xe1\\xec\\xf9\\xe3\\xed\\xf9\\xee\\xf4\\xfc\\xf3\\xf7\\\n\\xfd\\xe5\\xed\\xfa\\xd8\\xe5\\xf6\\x77\\xa0\\xde\\xa4\\xbe\\xe4\\x34\\x67\\xb4\\\n\\xc7\\xd9\\xf4\\x7d\\xa6\\xe6\\x65\\x8d\\xc9\\x67\\x8e\\xc9\\x6c\\x92\\xcb\\x6d\\\n\\x92\\xcb\\x69\\x90\\xca\\x65\\x8c\\xc8\\x74\\x9c\\xda\\x9f\\xba\\xe1\\x34\\x66\\\n\\xb3\\xc5\\xd8\\xf2\\x7b\\xa4\\xe3\\x7a\\xa3\\xe3\\x7a\\xa4\\xe3\\x7b\\xa4\\xe2\\\n\\x7b\\xa3\\xe2\\x7b\\xa3\\xe1\\x79\\xa2\\xe1\\x77\\xa0\\xdf\\x76\\x9f\\xde\\x74\\\n\\x9e\\xdd\\x72\\x9c\\xdb\\x74\\x9d\\xdc\\x9a\\xb5\\xdd\\x34\\x65\\xb1\\xc2\\xd5\\\n\\xf2\\x78\\xa1\\xe0\\x75\\x9e\\xde\\x73\\x9b\\xda\\x73\\x9b\\xd9\\x95\\xb0\\xda\\\n\\x33\\x64\\xaf\\xbe\\xd2\\xf0\\x7a\\xa3\\xe2\\x77\\x9f\\xde\\x76\\x9f\\xdd\\x72\\\n\\x9b\\xd9\\x71\\x99\\xd8\\x70\\x99\\xd6\\x8e\\xab\\xd5\\x33\\x63\\xad\\x36\\x6a\\\n\\xba\\xbb\\xd0\\xef\\x7a\\xa2\\xe2\\x6d\\x96\\xd3\\x8a\\xa7\\xd2\\x32\\x62\\xab\\\n\\xb8\\xce\\xef\\xf7\\xfa\\xfe\\x88\\xc0\\x62\\x6a\\x93\\xcf\\x84\\xa3\\xce\\x32\\\n\\x61\\xaa\\x38\\x6c\\xbb\\xb6\\xcc\\xee\\x7a\\xa2\\xe1\\xc2\\xdc\\xbf\\x68\\x90\\\n\\xcd\\x81\\x9e\\xcc\\x32\\x61\\xa8\\x37\\x6b\\xba\\xb3\\xca\\xed\\x7a\\xa2\\xe0\\\n\\x65\\x8d\\xca\\x7c\\x9b\\xc9\\x31\\x60\\xa7\\x35\\x6a\\xba\\xad\\xc6\\xeb\\xad\\\n\\xc5\\xea\\x7c\\x9a\\xc8\\x79\\x98\\xc7\\x35\\x69\\xb9\\x35\\x69\\xb8\\x35\\x68\\\n\\xb7\\x35\\x68\\xb5\\x34\\x66\\xb2\\x33\\x65\\xb0\\x33\\x64\\xae\\x32\\x63\\xac\\\n\\x32\\x62\\xaa\\x32\\x61\\xa9\\x31\\x60\\xa8\\x31\\x60\\xa6\\x31\\x61\\xa8\\xff\\\n\\xff\\xff\\x28\\xbe\\x5d\\x8e\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\\n\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\\n\\x00\\x00\\x00\\xf4\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x60\\x04\\x02\\x26\\\n\\x26\\x66\\x66\\x16\\x56\\x36\\x76\\x0e\\x06\\x06\\x06\\x46\\x4e\\x2e\\x6e\\x1e\\\n\\x5e\\x3e\\x7e\\x01\\x5e\\x41\\x21\\x61\\x11\\x51\\xa0\\x80\\x98\\xb8\\x84\\xa4\\\n\\x94\\xb4\\x8c\\x2c\\xb7\\x9c\\xbc\\x82\\xa2\\x08\\x07\\x03\\xa3\\x92\\xb2\\x9c\\\n\\x9c\\x94\\x8a\\xaa\\x20\\xaf\\x9a\\xba\\x86\\xa6\\x96\\x36\\x03\\xa3\\x8e\\xae\\\n\\x9a\\x9a\\x9e\\xbe\\x81\\xa1\\x91\\xb1\\x89\\xa9\\x99\\xb9\\x05\\x03\\x93\\xa5\\\n\\x95\\xb5\\xb5\\x8d\\xad\\xa0\\x9d\\xbd\\x89\\xa9\\x83\\xa3\\x93\\x33\\x03\\x93\\\n\\x8b\\xab\\x94\\x9b\\xbb\\x87\\xa7\\x97\\xb7\\x94\\x94\\x94\\x8f\\xaf\\x1f\\x03\\\n\\xb3\\x7f\\x40\\x60\\x50\\x70\\x48\\x68\\x58\\x78\\x44\\x64\\x54\\x74\\x4c\\x2c\\\n\\x03\\x73\\x5c\\x60\\x60\\x48\\x48\\x70\\x58\\xbc\\x63\\x42\\x74\\x62\\x52\\x72\\\n\\x0a\\x03\\x73\\x6a\\x5a\\x9a\\x66\\x48\\x68\\x7c\\x7a\\x46\\x74\\x66\\x56\\x76\\\n\\x4e\\x2e\\x43\\x5e\\x7e\\x01\\x37\\x1c\\x14\\x16\\x15\\x33\\xb0\\x97\\x84\\x95\\\n\\x96\\x41\\x01\\x6f\\x79\\x45\\x25\\x43\\x55\\x75\\x4d\\x69\\x2d\\x14\\xf0\\xd6\\\n\\xd5\\x37\\x30\\x34\\x36\\x35\\x23\\x54\\xb4\\xb4\\xb6\\x31\\xb4\\x77\\x74\\x22\\\n\\xcc\\xe8\\xea\\x6e\\x63\\xc8\\xeb\\xe9\\xed\\xeb\\x77\\x9e\\x30\\x71\\xd2\\xe4\\\n\\x29\\x53\\xa7\\xb5\\x4d\\x9f\\x01\\x00\\x0f\\x41\\x42\\x74\\x3a\\x8e\\x23\\xd0\\\n\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\\n\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\\n\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\\n\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xe2\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x3e\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x95\\xc0\\xf4\\x8b\\xba\\xf0\\x7f\\xb2\\xea\\\n\\x70\\xa8\\xe2\\x70\\xc1\\x63\\x6d\\xbf\\x60\\x6a\\xbd\\x5e\\x68\\xbb\\x5b\\x8b\\\n\\xb9\\xf0\\xc9\\xd4\\xf0\\xc2\\xcd\\xee\\x60\\x9c\\xd8\\x6c\\xbe\\x5f\\xb1\\xda\\\n\\xac\\xaf\\xd9\\xa9\\x63\\xb8\\x57\\x7d\\xb0\\xe9\\xc0\\xcb\\xed\\xb8\\xc3\\xea\\\n\\x51\\x8d\\xce\\x00\\x00\\x00\\x68\\xbb\\x5c\\xae\\xd8\\xa8\\xac\\xd7\\xa5\\x5f\\\n\\xb5\\x54\\x6d\\xa4\\xe1\\x5f\\x99\\xd7\\x50\\x8c\\xcd\\x42\\x7e\\xc4\\x64\\xb8\\\n\\x58\\x61\\xb6\\x55\\x5e\\xb4\\x53\\x5b\\xb2\\x50\\x58\\xb1\\x4d\\x50\\xaa\\x47\\\n\\x48\\xa3\\x3f\\xe2\\xd7\\xb4\\xd8\\xa5\\x58\\xdb\\xb1\\x85\\xd0\\x9d\\x46\\x57\\\n\\xb0\\x4c\\x96\\xcc\\x8e\\x8c\\xc8\\x83\\x3f\\x9c\\x38\\xe8\\xdd\\xab\\xe7\\xbe\\\n\\x77\\xf0\\xd2\\xb4\\xff\\xf3\\xe5\\xef\\xd2\\xac\\x4e\\xa8\\x45\\x88\\xc6\\x7f\\\n\\xee\\xd6\\x81\\xf9\\xe3\\xb2\\xe7\\xc0\\x8b\\xf6\\xd3\\xae\\xfc\\xe0\\xc4\\x45\\\n\\xa1\\x3d\\x3d\\x9a\\x36\\xee\\xd4\\x7d\\xfd\\xf6\\xc4\\xf6\\xdd\\x6c\\xed\\xca\\\n\\x6d\\xd7\\xa3\\x63\\xc9\\x99\\x63\\xee\\xd3\\x79\\xfd\\xf7\\xc7\\xf5\\xdc\\x5f\\\n\\xf7\\xe2\\x5b\\xf2\\xd6\\x7a\\xe2\\xa2\\x51\\xe4\\xd5\\xb0\\xe7\\xcb\\x77\\xf5\\\n\\xdc\\x5e\\xf7\\xe1\\x5a\\xf1\\xd4\\x7b\\xdd\\x9a\\x4b\\xe6\\xd6\\xb3\\xd7\\xba\\\n\\x76\\xfd\\xf6\\xc2\\xf7\\xdf\\x63\\xf8\\xe2\\x5d\\xf0\\xd3\\x79\\xdc\\x99\\x4a\\\n\\xd5\\xb6\\x7a\\xd1\\xb7\\x90\\xe4\\xc9\\x55\\xf5\\xdf\\x5b\\xed\\xd0\\x78\\xdd\\\n\\x9d\\x51\\xaa\\x89\\x43\\xff\\xf2\\xe0\\xd8\\x9a\\x54\\xbe\\x7a\\x1a\\xc5\\x98\\\n\\x49\\xb6\\x81\\x40\\x83\\x65\\x2b\\xf9\\xc7\\x94\\xf9\\xc9\\x91\\xc9\\x85\\x41\\\n\\xaa\\x64\\x1c\\x55\\x3d\\x11\\x87\\x5f\\x28\\xbd\\x88\\x49\\xbc\\x8d\\x42\\xff\\\n\\xff\\xff\\x1f\\x07\\xce\\x63\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\\n\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\\n\\x00\\x00\\x00\\xa7\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x64\\x62\\x66\\x61\\\n\\x60\\x60\\x60\\x65\\x63\\xe7\\x60\\x00\\x03\\x4e\\x2e\\x6e\\x1e\\x20\\xc5\\xcb\\\n\\xc7\\x2f\\x00\\x11\\x10\\x14\\x12\\x16\\x11\\x15\\x15\\x15\\x13\\x97\\x90\\x84\\\n\\x08\\x48\\x49\\xcb\\xc8\\x32\\x88\\x32\\xc8\\xc9\\x2b\\x28\\x32\\x20\\x80\\x28\\\n\\x03\\x1a\\x10\\x65\\x90\\x54\\x52\\x56\\x61\\x50\\x55\\x53\\xd7\\x80\\x0a\\x88\\\n\\x6a\\x6a\\x69\\xeb\\xe8\\xea\\xe9\\x1b\\x18\\xc2\\x54\\x18\\x19\\x33\\x30\\x98\\\n\\x98\\x9a\\x99\\x5b\\xc0\\x04\\x2c\\xad\\x18\\xac\\x6d\\x6c\\xed\\xec\\x1d\\x10\\\n\\x86\\x3a\\x3a\\x39\\xbb\\xb8\\xba\\xc1\\x0d\\x75\\xf7\\x70\\xf2\\xf4\\xf2\\xf6\\\n\\x81\\xdb\\xe2\\xeb\\xe7\\x1f\\x10\\x18\\x14\\x8c\\xb0\\x36\\x24\\x34\\x2c\\x3c\\\n\\x22\\x12\\xe1\\x8e\\xa8\\xe8\\x98\\xd8\\xb8\\x78\\x24\\x87\\x25\\x24\\x26\\x25\\\n\\xa7\\x20\\xbb\\x34\\x35\\x2d\\x3d\\x03\\xca\\x04\\x00\\x22\\x9b\\x16\\xc1\\xeb\\\n\\x89\\x5b\\x00\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\\n\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\\n\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\\n\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\\n\\x82\\\n\\x00\\x00\\x02\\x2b\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xba\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x95\\xc0\\xf4\\x8b\\xba\\xf0\\x7f\\xb2\\xea\\\n\\x70\\xa8\\xe2\\x70\\xc1\\x63\\x6d\\xbf\\x60\\x6a\\xbd\\x5e\\x68\\xbb\\x5b\\x8b\\\n\\xb9\\xf0\\xc9\\xd4\\xf0\\xc2\\xcd\\xee\\x60\\x9c\\xd8\\x6c\\xbe\\x5f\\xb1\\xda\\\n\\xac\\xaf\\xd9\\xa9\\x63\\xb8\\x57\\x7d\\xb0\\xe9\\xc0\\xcb\\xed\\xb8\\xc3\\xea\\\n\\x51\\x8d\\xce\\x00\\x00\\x00\\x68\\xbb\\x5c\\xae\\xd8\\xa8\\xac\\xd7\\xa5\\x5f\\\n\\xb5\\x54\\x6d\\xa4\\xe1\\x5f\\x99\\xd7\\x50\\x8c\\xcd\\x42\\x7e\\xc4\\x64\\xb8\\\n\\x58\\x61\\xb6\\x55\\x5e\\xb4\\x53\\x5b\\xb2\\x50\\x58\\xb1\\x4d\\x50\\xaa\\x47\\\n\\x48\\xa3\\x3f\\x30\\x8f\\x2c\\x2a\\x88\\x27\\x26\\x83\\x23\\x26\\x81\\x22\\x57\\\n\\xb0\\x4c\\x96\\xcc\\x8e\\x8c\\xc8\\x83\\x3f\\x9c\\x38\\x2a\\x87\\x26\\x5a\\xaf\\\n\\x53\\x58\\xae\\x51\\x24\\x7f\\x21\\x4e\\xa8\\x45\\x88\\xc6\\x7f\\x7c\\xc0\\x72\\\n\\x36\\x94\\x30\\x26\\x82\\x22\\x57\\xad\\x50\\x55\\xac\\x4f\\x23\\x7d\\x20\\x45\\\n\\xa1\\x3d\\x3d\\x9a\\x36\\x36\\x93\\x30\\x2f\\x8c\\x2a\\xff\\xff\\xff\\xcf\\x9f\\\n\\x26\\xc3\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x74\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x64\\x62\\x66\\x61\\x60\\x60\\x60\\x65\\\n\\x63\\xe7\\x60\\x00\\x03\\x4e\\x2e\\x6e\\x1e\\x20\\xc5\\xcb\\xc7\\x2f\\x00\\x11\\\n\\x10\\x14\\x12\\x16\\x11\\x15\\x15\\x15\\x13\\x97\\x90\\x84\\x08\\x48\\x49\\xcb\\\n\\xc8\\x32\\x88\\x32\\xc8\\xc9\\x2b\\x28\\x32\\x20\\x80\\x28\\x03\\x1a\\x10\\x65\\\n\\x90\\x54\\x52\\x56\\x61\\x50\\x55\\x53\\xd7\\x80\\x0a\\x88\\x6a\\x6a\\x69\\xeb\\\n\\x88\\xea\\xea\\xe9\\x1b\\xc0\\x54\\x18\\x1a\\x19\\x9b\\x30\\x98\\x9a\\x99\\x5b\\\n\\xc0\\x04\\x2c\\xad\\xac\\x6d\\x90\\xb5\\x90\\x6e\\x28\\x03\\xba\\xa1\\x0c\\xe8\\\n\\x86\\xe2\\x03\\x00\\x53\\x62\\x0e\\xbd\\xa5\\x54\\xd9\\x6b\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\\n\\x32\\x30\\x31\\x32\\x2d\\x30\\x39\\x2d\\x31\\x38\\x54\\x31\\x31\\x3a\\x33\\x37\\\n\\x3a\\x32\\x34\\x2b\\x30\\x32\\x3a\\x30\\x30\\x59\\x1b\\xf1\\xf0\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\\n\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x39\\x2d\\x31\\x38\\x54\\x31\\x31\\x3a\\x33\\\n\\x37\\x3a\\x32\\x34\\x2b\\x30\\x32\\x3a\\x30\\x30\\x28\\x46\\x49\\x4c\\x00\\x00\\\n\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x04\\x02\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xef\\\n\\x50\\x4c\\x54\\x45\\x55\\x86\\xc6\\xa2\\xc1\\xef\\x9f\\xc0\\xed\\x9d\\xbe\\xeb\\\n\\x9a\\xbc\\xeb\\x96\\xba\\xe9\\x93\\xb7\\xe7\\x90\\xb5\\xe6\\x8c\\xb2\\xe4\\x88\\\n\\xaf\\xe2\\x84\\xac\\xe0\\x80\\xa9\\xdd\\x7d\\xa5\\xdc\\x7a\\xa3\\xda\\xa1\\xc1\\\n\\xee\\xf4\\xf7\\xfb\\x74\\xa0\\xd7\\x9e\\xbf\\xec\\xa5\\xd5\\x9c\\xa1\\xd3\\x98\\\n\\x9d\\xd0\\x94\\x98\\xce\\x90\\x93\\xcb\\x8b\\x8e\\xc9\\x87\\x89\\xc6\\x82\\x84\\\n\\xc3\\x7e\\x80\\xc1\\x7a\\x7c\\xbe\\x76\\x6f\\x9b\\xd4\\x9b\\xbd\\xeb\\xff\\xff\\\n\\xff\\xc2\\xe4\\xbd\\x82\\xc6\\x78\\x69\\xb9\\x5e\\x66\\xb5\\x5b\\x7a\\xbc\\x71\\\n\\xbb\\xdc\\xb7\\x6a\\x97\\xd1\\x98\\xba\\xe9\\xa6\\xc3\\xe9\\xa0\\xc2\\xdb\\x79\\\n\\xbf\\x7d\\x87\\xc8\\x7c\\xa1\\xd3\\x96\\xaa\\xd8\\xa0\\xa7\\xd6\\x9e\\x99\\xce\\\n\\x90\\x78\\xba\\x70\\x77\\xb4\\x72\\x62\\x94\\xc0\\x94\\xb7\\xe7\\x79\\xc0\\x7d\\\n\\x8c\\xca\\x82\\xab\\xd8\\xa1\\xa2\\xd4\\x99\\xa6\\xd5\\x9c\\xa4\\xd4\\x9b\\x9b\\\n\\xd0\\x92\\x9e\\xd1\\x96\\x79\\xb8\\x71\\x53\\x96\\x61\\x8f\\xb4\\xe5\\xf2\\xf6\\\n\\xfa\\xaa\\xc6\\xe9\\x91\\xc2\\xb0\\x85\\xc7\\x7b\\xa9\\xd7\\xa0\\xa0\\xd1\\x97\\\n\\x81\\xc0\\x77\\x7e\\xbc\\x75\\x97\\xcc\\x8e\\x9b\\xcf\\x93\\x69\\xab\\x61\\x8c\\\n\\xb1\\xe3\\xf1\\xf6\\xfa\\xae\\xc9\\xea\\x80\\xc4\\x77\\x9d\\xd1\\x94\\xa6\\xd5\\\n\\x9d\\x5e\\xaa\\x54\\x81\\xb6\\x9a\\xa8\\xcf\\xa4\\x53\\x9c\\x4b\\x90\\xc9\\x89\\\n\\x8c\\xc8\\x85\\x84\\xc0\\x7d\\x43\\x89\\x3c\\x87\\xae\\xe1\\xf0\\xf4\\xfa\\xb2\\\n\\xcb\\xea\\x66\\xb6\\x5c\\x63\\xb2\\x59\\x60\\xae\\x56\\x5c\\xa9\\x53\\x8b\\xba\\\n\\xa2\\xac\\xc7\\xe8\\xbd\\xd1\\xeb\\x7f\\xb0\\x96\\x6f\\xaf\\x67\\x8f\\xc9\\x88\\\n\\x3e\\x84\\x38\\x82\\xaa\\xdf\\xef\\xf3\\xf9\\xb7\\xce\\xea\\xbb\\xd0\\xeb\\x55\\\n\\xa0\\x4c\\xa2\\xc6\\x9e\\x6a\\xab\\x63\\x8a\\xc7\\x83\\x88\\xc5\\x82\\x3a\\x7e\\\n\\x34\\x7e\\xa8\\xdd\\xba\\xd0\\xeb\\x54\\x9f\\x4b\\x50\\x9a\\x48\\x71\\xa7\\x7c\\\n\\x45\\x8c\\x3f\\x84\\xc1\\x7c\\x7e\\xc1\\x77\\x77\\xb7\\x71\\x36\\x79\\x30\\x7a\\\n\\xa4\\xd9\\xee\\xf3\\xf9\\xbe\\xd2\\xeb\\xbf\\xd3\\xeb\\x53\\x9e\\x4b\\x6c\\xae\\\n\\x63\\x68\\xaa\\x60\\x48\\x90\\x40\\x61\\xa3\\x5a\\x87\\xc5\\x81\\x85\\xc4\\x7e\\\n\\x82\\xc2\\x7c\\x54\\x96\\x4e\\x75\\xa1\\xd7\\xed\\xf2\\xf8\\xea\\xf0\\xf7\\xe6\\\n\\xed\\xf6\\x53\\x9d\\x4a\\x6a\\xad\\x63\\x8f\\xc9\\x87\\x8b\\xc7\\x85\\x87\\xc4\\\n\\x7f\\x7c\\xbf\\x75\\x82\\xc2\\x7b\\x5b\\x9d\\x55\\x38\\x76\\x4b\\x72\\x9e\\xd6\\\n\\x6e\\x99\\xd3\\x68\\x96\\xd1\\x63\\x92\\xce\\x4e\\x98\\x46\\x66\\xa9\\x5f\\x8b\\\n\\xc6\\x83\\x85\\xc3\\x7e\\x74\\xb5\\x6d\\x52\\x95\\x4d\\x50\\x83\\xb5\\x46\\x8d\\\n\\x3f\\x5e\\xa1\\x57\\x5a\\x9e\\x55\\x3b\\x7f\\x35\\x37\\x7b\\x31\\x33\\x76\\x2e\\\n\\x55\\x86\\xc6\\x29\\xe7\\x00\\xc9\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\\n\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\\n\\x48\\x00\\x00\\x00\\xed\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x04\\x8c\\\n\\x4c\\xcc\\x2c\\xac\\x6c\\xec\\x1c\\x9c\\x5c\\xdc\\x3c\\xbc\\x40\\x3e\\x1f\\x3f\\\n\\x12\\x10\\x00\\x0a\\x08\\xf2\\x0b\\x09\\x8b\\x88\\x8a\\x89\\x4b\\x48\\x4a\\x49\\\n\\xf3\\xcb\\x00\\x05\\x64\\xf9\\xe5\\x80\\x40\\x5e\\x41\\x51\\x49\\x59\\x85\\x5f\\\n\\x15\\x28\\xa0\\xc6\\xaf\\xae\\xae\\xa1\\xa9\\xa5\\xad\\xa3\\xab\\xa7\\x6f\\x60\\\n\\x08\\x14\\x30\\xe2\\x57\\x97\\x33\\x36\\x31\\x35\\x33\\xb7\\xb0\\xb4\\xb2\\xb6\\\n\\x01\\x0a\\xd8\\xda\\xd9\\x3b\\x38\\x3a\\xe9\\x3a\\xbb\\xb8\\xba\\xb9\\x8b\\x7a\\\n\\x00\\x05\\x3c\\xbd\\xbc\\x7d\\x7c\\xfd\\xdc\\xfd\\x03\\x02\\x83\\x82\\x43\\x42\\\n\\xc3\\x18\\x18\\xc2\\x23\\x22\\xa3\\xa2\\x63\\x62\\xe3\\xe2\\x13\\x12\\x93\\x92\\\n\\x43\\x52\\x18\\x18\\x52\\xd3\\xd2\\xe5\\x32\\xe4\\xe4\\x32\\x13\\xe4\\xb2\\xb2\\\n\\x73\\x72\\xf3\\x18\\x18\\xf2\\xd3\\x0a\\x32\\x32\\x32\\x0a\\x8b\\x12\\x8a\\x4b\\\n\\x4a\\xcb\\xca\\x2b\\x18\\x18\\x2a\\xab\\xaa\\xe5\\x6a\\x6a\\xeb\\xea\\x1b\\x1a\\\n\\x9b\\x9a\\x5b\\x5a\\x81\\x86\\xb6\\xb5\\x77\\x74\\x76\\x75\\xf7\\xf4\\x4a\\xf4\\\n\\xf5\\x4f\\x98\\x38\\x09\\x28\\x30\\x79\\xca\\xd4\\x69\\xd3\\x67\\xcc\\x6c\\x9a\\\n\\xd5\\x32\\x7b\\xce\\xa4\\xb9\\x30\\x1f\\xcf\\x9b\\xbf\\x60\\xe1\\xa2\\xc5\\x20\\\n\\x16\\x00\\x6f\\x86\\x3b\\x7d\\x48\\x85\\xb2\\x2e\\x00\\x00\\x00\\x1d\\x74\\x45\\\n\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\\n\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\\n\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\\n\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\\n\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\\n\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\\n\\x82\\\n\\x00\\x00\\x02\\x10\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x84\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x85\\x85\\x85\\x9e\\x9e\\x9e\\x7c\\x7c\\x7c\\\n\\x4c\\x4c\\x4c\\x91\\x91\\x91\\xe8\\xe8\\xe8\\xdd\\xdd\\xdd\\xc1\\xc1\\xc1\\x81\\\n\\x81\\x81\\x7b\\x7b\\x7b\\xd9\\xd9\\xd9\\xc4\\xc4\\xc4\\x73\\x73\\x73\\xd5\\xd5\\\n\\xd5\\x58\\x58\\x58\\x4b\\x4b\\x4b\\x65\\x65\\x65\\x92\\x92\\x92\\x79\\x79\\x79\\\n\\xa8\\xa8\\xa8\\x32\\x32\\x32\\x82\\x82\\x82\\x3f\\x3f\\x3f\\xbd\\xbd\\xbd\\xce\\\n\\xce\\xce\\xc2\\xc2\\xc2\\xad\\xad\\xad\\x67\\x67\\x67\\x52\\x52\\x52\\x41\\x41\\\n\\x41\\x46\\x46\\x46\\x51\\x51\\x51\\x4d\\x4d\\x4d\\x8d\\x8d\\x8d\\xaa\\xaa\\xaa\\\n\\xae\\xae\\xae\\x97\\x97\\x97\\x71\\x71\\x71\\x78\\x78\\x78\\x4a\\x4a\\x4a\\x64\\\n\\x64\\x64\\x6b\\x6b\\x6b\\xff\\xff\\xff\\xf1\\x13\\x89\\xe5\\x00\\x00\\x00\\x01\\\n\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\\n\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x66\\x49\\x44\\x41\\x54\\x18\\xd3\\\n\\xad\\x8e\\x35\\x16\\x80\\x30\\x00\\x43\\x83\\x14\\x77\\x29\\x2e\\x2d\\xde\\xfb\\\n\\x1f\\x10\\x0a\\x4c\\xcc\\xfc\\x29\\xf9\\x43\\x5e\\x80\\x9f\\x50\\x54\\x0d\\xd0\\\n\\x54\\xe5\\xad\\x3a\\x31\\x4c\\xcb\\x76\\x5c\\xd3\\x23\\xfa\\x2d\\xfc\\x20\\x8c\\\n\\xe2\\x24\\x8d\\xa3\\x30\\xf3\\x65\\xcf\\x29\\x50\\x94\\x55\\xdd\\x14\\x00\\xcd\\\n\\xa5\\x69\\xd1\\xf5\\xc3\\x38\\x0e\\x7d\\x77\\x45\\x09\\xe3\\xd3\\xbc\\xac\\xdb\\\n\\x32\\x4f\\x9c\\x3d\\xab\\xfb\\x21\\x04\\x20\\xc4\\xb1\\xff\\x75\\xfb\\xcb\\x09\\\n\\x0b\\x9f\\x06\\x31\\x74\\x10\\xab\\xb0\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\\n\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\\n\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\\n\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\\n\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\\n\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\\n\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\\n\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\\n\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xcd\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x17\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x45\\x8c\\x3e\\x41\\x87\\x3a\\x3d\\x82\\x37\\\n\\x39\\x7e\\x33\\x29\\x69\\x25\\x26\\x65\\x22\\x23\\x62\\x20\\x21\\x5f\\x1e\\x51\\\n\\x97\\x4a\\x87\\xc5\\x81\\x85\\xc3\\x7e\\x3e\\x83\\x37\\x2c\\x6d\\x28\\x74\\xbb\\\n\\x6f\\x73\\xb9\\x6d\\x2d\\x6c\\x29\\x56\\x9d\\x4e\\x8b\\xc7\\x85\\x89\\xc6\\x82\\\n\\x44\\x8a\\x3d\\x32\\x74\\x2d\\x78\\xbd\\x72\\x75\\xbb\\x70\\x30\\x70\\x2c\\x5a\\\n\\xa2\\x52\\x90\\xca\\x89\\x8d\\xc8\\x86\\x65\\xa6\\x5d\\x43\\x89\\x3c\\x38\\x7b\\\n\\x32\\x54\\x96\\x4e\\x7b\\xbe\\x75\\x79\\xbd\\x73\\x33\\x75\\x2f\\x56\\xa2\\x4d\\\n\\x83\\xbf\\x7c\\x91\\xcb\\x8a\\x8d\\xc7\\x85\\x63\\xa6\\x5c\\x43\\x8a\\x3c\\x40\\\n\\x85\\x39\\x5a\\x9c\\x54\\x7f\\xc0\\x78\\x7e\\xc0\\x79\\x69\\xab\\x63\\x2e\\x6f\\\n\\x29\\x57\\xa3\\x4e\\x78\\xb7\\x70\\x92\\xca\\x8a\\x7b\\xb9\\x74\\x78\\xb6\\x70\\\n\\x88\\xc5\\x82\\x84\\xc3\\x7d\\x61\\xa3\\x5b\\x35\\x78\\x30\\x58\\xa3\\x4f\\x54\\\n\\x9f\\x4b\\x7c\\xba\\x75\\x92\\xcb\\x8b\\x8f\\xc9\\x87\\x73\\xb2\\x6c\\x65\\xab\\\n\\x5c\\x96\\xcd\\x8f\\x93\\xcb\\x8b\\x5a\\x9e\\x53\\x59\\xa5\\x50\\x98\\xce\\x91\\\n\\x96\\xcd\\x8e\\x4e\\x97\\x46\\x5d\\xaa\\x53\\x9e\\xd1\\x96\\x9c\\xd0\\x94\\x62\\\n\\xa7\\x5a\\x67\\xb7\\x5d\\x64\\xb3\\x5a\\x7d\\xbe\\x73\\xa2\\xd4\\x99\\xa0\\xd2\\\n\\x97\\x83\\xbf\\x7a\\x53\\x9d\\x4a\\x4f\\x98\\x47\\x68\\xb8\\x5d\\x81\\xc2\\x76\\\n\\xa6\\xd5\\x9d\\xa4\\xd4\\x9b\\x78\\xb9\\x6f\\x81\\xc3\\x77\\x7e\\xc0\\x75\\x5f\\\n\\xac\\x55\\x69\\xb9\\x5e\\x66\\xb5\\x5b\\xff\\xff\\xff\\x41\\x11\\xf0\\x52\\x00\\\n\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\\n\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x90\\x49\\x44\\x41\\\n\\x54\\x18\\xd3\\x63\\x60\\xc0\\x04\\x8c\\x4c\\xcc\\x2c\\x20\\x9a\\x95\\x8d\\x9d\\\n\\x03\\x2c\\xc0\\xc9\\xc5\\xcd\\x03\\xa2\\x79\\xf9\\xf8\\x05\\xc0\\x02\\x82\\x42\\\n\\xc2\\x22\\x20\\x5a\\x54\\x4c\\x5c\\x02\\x2c\\x20\\x29\\x25\\x2d\\x23\\xcb\\xc0\\\n\\x20\\x27\\xaf\\xa0\\xa8\\x04\\x16\\x50\\x56\\x51\\x55\\x53\\xd7\\xd0\\xd4\\xd2\\\n\\xd6\\xd1\\xd5\\x83\\x98\\xaa\\x6f\\x60\\x28\\x65\\x64\\x6c\\x62\\x6a\\x66\\x0e\\\n\\xb3\\xc7\\xc2\\xd2\\xca\\xda\\xc6\\x96\\x89\\x19\\xc9\\x6a\\x3b\\x7b\\x07\\x47\\\n\\x14\\xb7\\x38\\x39\\xbb\\xb8\\xa2\\x08\\xb8\\xb9\\x7b\\x78\\x22\\x71\\xbd\\xbc\\\n\\x7d\\x7c\\xfd\\xfc\\x03\\x02\\x11\\x22\\x41\\xc1\\x21\\xa1\\x61\\xfa\\xc8\\x5a\\\n\\x82\\xc2\\x23\\x22\\x51\\x7d\\x18\\x15\\xcd\\x80\\x03\\x00\\x00\\x00\\xde\\x10\\\n\\xfb\\x86\\xb4\\x20\\x21\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\\n\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\\n\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\\n\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\\n\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\\n\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x31\\x2d\\x32\\x34\\x54\\x31\\x34\\\n\\x3a\\x32\\x32\\x3a\\x30\\x32\\x2b\\x30\\x31\\x3a\\x30\\x30\\xdc\\x97\\xe6\\xbb\\\n\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x9b\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xc8\\\n\\x50\\x4c\\x54\\x45\\x00\\x00\\x00\\xe3\\x63\\x61\\xe2\\x57\\x51\\xe3\\x62\\x5f\\\n\\xce\\x78\\x73\\xec\\x6f\\x6e\\xeb\\x68\\x66\\xe9\\x62\\x5f\\xf0\\x78\\x78\\xf0\\\n\\x74\\x74\\xeb\\x6b\\x69\\xec\\x71\\x6f\\xcc\\x77\\x72\\xdb\\x5a\\x54\\xf2\\x7c\\\n\\x7c\\xf7\\x93\\x97\\xe9\\x68\\x64\\xe3\\x58\\x52\\xd9\\x56\\x4d\\x77\\xa8\\x6e\\\n\\xe0\\x52\\x4c\\xf4\\xa2\\xa2\\xec\\x6c\\x6a\\xea\\x63\\x61\\xea\\x66\\x65\\xe7\\\n\\x61\\x5c\\xe2\\x57\\x4f\\x7a\\x9e\\x75\\x85\\xb4\\x7c\\x7e\\xaf\\x76\\x78\\xab\\\n\\x6f\\xe1\\x54\\x4e\\xf9\\xb1\\xb4\\xf5\\x96\\x95\\xeb\\x6a\\x66\\xec\\x72\\x6e\\\n\\xe5\\x5c\\x5a\\xe2\\x58\\x51\\x6b\\xa0\\x64\\x8f\\xba\\x86\\xa2\\xc6\\x99\\x7c\\\n\\xad\\x74\\xf4\\x96\\x97\\xf4\\x93\\x93\\xf0\\x8d\\x8c\\xe8\\x60\\x5c\\xe8\\x61\\\n\\x5d\\x65\\x9f\\x5d\\xbe\\xd6\\xb9\\x8f\\xba\\x87\\x78\\xac\\x71\\xdc\\x59\\x53\\\n\\xf4\\x96\\x98\\xf3\\x91\\x91\\xf0\\x8a\\x89\\xe7\\x5f\\x5b\\x76\\xa9\\x42\\x65\\\n\\x9f\\x31\\xe4\\x58\\x51\\xd8\\x54\\x49\\x68\\xa0\\x60\\xc9\\xde\\xc5\\xb9\\xd4\\\n\\xb4\\xaa\\xc9\\xa4\\x9a\\xab\\x81\\xc3\\x6d\\x61\\xe0\\x58\\x50\\x6e\\xa4\\x34\\\n\\x81\\xb3\\x5a\\x57\\x98\\x28\\x7f\\x89\\xa6\\x71\\x9a\\xc1\\x6b\\x85\\xa5\\x69\\\n\\xa1\\x62\\xc5\\xda\\xc0\\xb3\\xd0\\xad\\xb1\\xce\\xab\\xa6\\xc8\\x9e\\x76\\xaa\\\n\\x6d\\x6f\\xa5\\x3d\\x6f\\xa4\\x38\\x69\\xa2\\x34\\x63\\x9e\\x30\\x7c\\xaf\\x55\\\n\\xaa\\xcb\\x91\\x74\\xab\\x4f\\x47\\x8f\\x17\\x7b\\xa2\\xc6\\x4f\\x78\\xa9\\x6b\\\n\\x9f\\x63\\xaf\\xcd\\xa9\\xac\\xcc\\xa6\\xa9\\xc9\\xa2\\x9f\\xc5\\x99\\x74\\xa9\\\n\\x6b\\x6b\\xa3\\x37\\xb0\\xce\\x96\\xad\\xcd\\x94\\xa8\\xcb\\x90\\x90\\xbc\\x74\\\n\\xa1\\xc7\\x8a\\x68\\xa5\\x46\\x37\\x87\\x07\\x52\\x7e\\xb1\\x6c\\x96\\x68\\x6c\\\n\\xa3\\x66\\x99\\xc0\\x93\\xa4\\xc7\\x9e\\x63\\x9f\\x31\\x8e\\xba\\x6f\\x89\\xb8\\\n\\x6b\\x85\\xb6\\x66\\x80\\xb3\\x61\\x82\\xb5\\x67\\x98\\xc2\\x83\\x5c\\xa0\\x3c\\\n\\x26\\x7f\\x00\\x65\\x95\\x61\\x6a\\xa2\\x63\\x69\\xa1\\x61\\x5b\\x9b\\x29\\xa9\\\n\\xca\\x90\\xa5\\xc8\\x8d\\xa1\\xc6\\x8a\\x9e\\xc5\\x88\\x85\\xb6\\x6a\\x97\\xc2\\\n\\x82\\x66\\xa5\\x48\\x41\\x8a\\x1b\\x52\\x97\\x21\\x4a\\x91\\x1b\\x44\\x8f\\x15\\\n\\x3c\\x8b\\x0f\\x5e\\x9f\\x3a\\x96\\xc1\\x80\\x62\\xa3\\x46\\x3d\\x7a\\x01\\x56\\\n\\x81\\xb2\\x4d\\x75\\xa8\\x5b\\x7b\\xa0\\x58\\x81\\xb2\\x89\\xab\\xcb\\x2b\\x83\\\n\\x01\\x5f\\xa1\\x43\\x1f\\x7b\\x00\\x4d\\x77\\xab\\x56\\x75\\x9b\\x57\\x78\\xa1\\\n\\x21\\x7d\\x00\\x1e\\x7b\\x03\\x53\\x75\\xa1\\x00\\x00\\x00\\x36\\xa5\\x44\\x48\\\n\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\\n\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xd6\\x49\\x44\\\n\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x01\\x18\\x99\\x98\\x98\\x11\\x3c\\x16\\x56\\\n\\x36\\x76\\x0e\\x4e\\x76\\x2e\\x6e\\x1e\\xa8\\x00\\x2f\\x1f\\xbf\\x80\\xa0\\xa0\\\n\\x00\\x3f\\x9f\\x10\\x84\\x2f\\x2c\\x22\\x2a\\x26\\xce\\xcf\\x2f\\x20\\x21\\x29\\\n\\x05\\xe4\\x49\\xcb\\xc8\\xca\\xc9\\x2b\\x28\\x2a\\x71\\x2b\\xab\\x48\\xb2\\xab\\\n\\x02\\x05\\xd4\\xd4\\x35\\x34\\xa5\\x14\\xb4\\xb4\\x75\\x74\\x25\\xf5\\xd8\\x41\\\n\\x2a\\xf4\\x0d\\x0c\\x8d\\x8c\\x95\\x4c\\x4c\\xcd\\xcc\\x2d\\x2c\\xad\\xac\\x81\\\n\\x02\\x36\\xb6\\x76\\xf6\\x0e\\x8e\\x4e\\x6c\\xda\\xe2\\xce\\x2e\\xae\\x6e\\xee\\\n\\x1e\\x0c\\x9e\\x5e\\xde\\x3e\\xbe\\x7e\\xfe\\x01\\x81\\x41\\xc1\\x21\\xa1\\x61\\\n\\xe1\\x11\\x0c\\x91\\x51\\xd1\\x31\\xb1\\x71\\xf1\\x09\\x89\\x21\\x49\\xc9\\x29\\\n\\xa9\\x69\\xe9\\x0c\\x0c\\x19\\x99\\x59\\xd9\\x46\\x39\\x89\\xb9\\x79\\xf9\\x05\\\n\\x85\\x45\\xc5\\x25\\x20\\x77\\x94\\x96\\x95\\x57\\x54\\x56\\x55\\xd7\\xd4\\xd6\\\n\\xd5\\x37\\xa4\\x43\\xdd\\xda\\xd8\\xd4\\xdc\\xd2\\xda\\xd6\\xde\\xd1\\xd9\\x05\\\n\\xf3\\x4e\\x77\\x4f\\x6f\\x5f\\xff\\x84\\x89\\x93\\x90\\xfc\\x3b\\x79\\xca\\xd4\\\n\\x69\\x40\\x0a\\x00\\xff\\x45\\x2f\\x0a\\x8f\\x9f\\x3e\\x4d\\x00\\x00\\x00\\x25\\\n\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\\n\\x32\\x30\\x31\\x32\\x2d\\x30\\x33\\x2d\\x33\\x30\\x54\\x31\\x31\\x3a\\x30\\x39\\\n\\x3a\\x30\\x33\\x2b\\x30\\x32\\x3a\\x30\\x30\\x83\\x88\\x8a\\x4d\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\\n\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x33\\x2d\\x33\\x30\\x54\\x31\\x31\\x3a\\x30\\\n\\x39\\x3a\\x30\\x33\\x2b\\x30\\x32\\x3a\\x30\\x30\\xf2\\xd5\\x32\\xf1\\x00\\x00\\\n\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\xc4\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xbc\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x71\\x71\\x71\\x6f\\x6f\\x6f\\x6d\\x6d\\x6d\\\n\\x52\\x52\\x52\\x4d\\x4d\\x4d\\x49\\x49\\x49\\x6c\\x6c\\x6c\\x69\\x69\\x69\\x57\\\n\\x57\\x57\\x48\\x48\\x48\\x43\\x43\\x43\\x65\\x65\\x65\\x6c\\xba\\xe5\\x74\\xbc\\\n\\xec\\x6e\\xb8\\xeb\\x68\\xb6\\xeb\\xcd\\xcb\\x80\\xea\\xd7\\x80\\x47\\x47\\x47\\\n\\x42\\x42\\x42\\x3d\\x3d\\x3d\\x68\\x68\\x68\\x61\\x61\\x61\\x36\\xbf\\x7f\\x69\\\n\\xc5\\xdd\\x70\\xc2\\xff\\x67\\xbf\\xff\\xac\\xcb\\xae\\xf9\\xe0\\x68\\x41\\x41\\\n\\x41\\x37\\x37\\x37\\x64\\x64\\x64\\x60\\x60\\x60\\x5c\\x5c\\x5c\\x45\\xc4\\x4f\\\n\\x2c\\xba\\x4b\\x60\\xbd\\xd8\\x62\\xba\\xff\\x65\\xb9\\xff\\x7d\\xbb\\xdb\\x3b\\\n\\x3b\\x3b\\x36\\x36\\x36\\x31\\x31\\x31\\x5c\\xcb\\x4f\\x7a\\xd7\\x57\\x6a\\xd1\\\n\\x42\\x5e\\xc7\\x70\\x50\\xb8\\xb6\\x3f\\xae\\xcb\\x6c\\x5c\\x2e\\xd8\\xa5\\x58\\\n\\xdb\\xb1\\x85\\xd0\\x9d\\x46\\x5b\\x5b\\x5b\\x9e\\xe2\\x72\\xa4\\xe3\\x7c\\xa0\\\n\\xe3\\x78\\x95\\xe0\\x63\\x95\\xe1\\x5a\\x93\\xe2\\x55\\x30\\x30\\x30\\x8b\\x74\\\n\\x26\\xe7\\xbe\\x77\\xf0\\xd2\\xb4\\xff\\xf3\\xe5\\xef\\xd2\\xac\\xc7\\x8c\\x48\\\n\\x56\\x56\\x56\\x51\\x51\\x51\\x69\\x59\\x27\\xea\\xd2\\x7c\\xf9\\xe3\\xb2\\xe7\\\n\\xc0\\x8b\\xf6\\xd3\\xae\\xfc\\xe0\\xc4\\xd3\\x9f\\x66\\x4c\\x4c\\x4c\\x6e\\xc6\\\n\\xf8\\x77\\xc8\\xff\\x72\\xc5\\xff\\x6c\\xc4\\xff\\xcf\\xd8\\x98\\xe9\\xd7\\x78\\\n\\xec\\xd3\\x7b\\xfd\\xf6\\xc4\\xf6\\xdd\\x6c\\xed\\xca\\x6d\\xd7\\xa3\\x63\\xd2\\\n\\x9b\\x5d\\x4b\\x4b\\x4b\\x46\\x46\\x46\\xba\\xc3\\x86\\xee\\xd3\\x79\\xfd\\xf7\\\n\\xc7\\xf5\\xdc\\x5f\\xf7\\xe2\\x5b\\xf2\\xd6\\x7a\\xdf\\x99\\x40\\x45\\x45\\x45\\\n\\x40\\x40\\x40\\x7f\\xa8\\xb1\\xe7\\xcb\\x77\\xf5\\xdc\\x5e\\xf7\\xe1\\x5a\\xf1\\\n\\xd4\\x7b\\xdc\\x95\\x42\\x83\\xb8\\x35\\xd3\\xb8\\x73\\xfd\\xf6\\xc2\\xf7\\xdf\\\n\\x63\\xf8\\xe2\\x5d\\xf0\\xd3\\x79\\xd5\\x91\\x42\\x3a\\x3a\\x3a\\x35\\x35\\x35\\\n\\x9d\\xdf\\x6e\\xa0\\xb2\\x54\\xd5\\xb6\\x7a\\xd1\\xb7\\x90\\xe4\\xc9\\x55\\xf5\\\n\\xdf\\x5b\\xed\\xd0\\x78\\xcf\\x8d\\x3e\\x25\\x1b\\x0f\\x34\\x34\\x34\\xaa\\x89\\\n\\x43\\xff\\xf2\\xe0\\xd8\\x9a\\x54\\xbe\\x7a\\x1a\\xc5\\x98\\x49\\xb0\\x77\\x31\\\n\\x05\\x05\\x05\\x2e\\x2e\\x2e\\x29\\x29\\x29\\x24\\x24\\x24\\x83\\x65\\x2b\\xf9\\\n\\xc7\\x94\\xf9\\xc9\\x91\\xc9\\x85\\x41\\xaa\\x64\\x1c\\x2d\\x20\\x10\\x02\\x02\\\n\\x02\\x55\\x3d\\x11\\x87\\x5f\\x28\\xbd\\x88\\x49\\xbc\\x8d\\x42\\xff\\xff\\xff\\\n\\x7c\\x16\\x88\\x6d\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\\n\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\\n\\x00\\xe2\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x64\\x62\\x66\\x00\\x03\\x16\\\n\\x56\\x36\\x30\\xcd\\xc4\\xce\\xc1\\x09\\x06\\xac\\x5c\\xdc\\x60\\x01\\x76\\x0e\\\n\\x1e\\x5e\\x3e\\x7e\\x01\\x41\\x21\\x61\\x11\\x51\\xb0\\x80\\x18\\x8f\\xb8\\x84\\\n\\xa4\\x94\\xb4\\x8c\\xac\\x1c\\x83\\x3c\\x58\\x40\\x41\\x51\\x49\\x59\\x45\\x55\\\n\\x4d\\x5d\\x43\\x53\\x4b\\x1b\\x2c\\xa0\\xa8\\xc4\\xa9\\xa3\\xab\\xa7\\x6f\\x60\\\n\\xa8\\xa5\\x6d\\x64\\x6c\\x62\\xca\\xc0\\x60\\xc6\\xc9\\x62\\x6e\\x61\\x69\\x65\\\n\\x6d\\x63\\x6b\\x67\\xef\\xe0\\xe8\\xe4\\xcc\\xe0\\xe2\\x2a\\x06\\xb1\\xc5\\xcd\\\n\\xdd\\xc3\\xd3\\xcb\\xdb\\x87\\xc1\\xd5\\x57\\xd8\\xcf\\x3f\\x20\\x30\\x28\\x38\\\n\\x24\\x34\\x2c\\x3c\\x22\\x92\\x81\\x21\\x2a\\x5a\\x0e\\x64\\x4b\\x4c\\x6c\\x5c\\\n\\x7c\\x42\\x62\\x12\\xd0\\xd0\\xe4\\x14\\x4d\\xa0\\x2d\\xa9\\x69\\x71\\xe9\\x19\\\n\\x99\\x59\\x20\\x5b\\x52\\x18\\xb4\\x74\\x74\\xb3\\x73\\x72\\xf3\\xf2\\x0b\\x0a\\\n\\xc1\\xd6\\x16\\x15\\xdb\\x96\\x94\\x96\\x95\\x57\\x54\\x56\\x55\\xd7\\x80\\x05\\\n\\x6a\\x19\\x8a\\x39\\xeb\\xea\\x1b\\x1a\\x9b\\x9a\\x19\\x5a\\xc0\\x02\\xad\\x6d\\\n\\xed\\x0c\\x1d\\x9d\\x5d\\xdd\\x3d\\xbd\\x2d\\x7d\\x0c\\x30\\xd0\\x3f\\x61\\xe2\\\n\\x24\\x18\\x1b\\x00\\x33\\xde\\x2f\\x28\\x32\\xc7\\xbb\\x9d\\x00\\x00\\x00\\x1d\\\n\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\\n\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\\n\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\x31\\\n\\x2d\\x31\\x38\\x54\\x31\\x34\\x3a\\x32\\x35\\x3a\\x30\\x31\\x2b\\x30\\x31\\x3a\\\n\\x30\\x30\\x9d\\x6e\\xb3\\x6f\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\\n\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\\n\\x31\\x2d\\x31\\x38\\x54\\x31\\x34\\x3a\\x32\\x35\\x3a\\x30\\x31\\x2b\\x30\\x31\\\n\\x3a\\x30\\x30\\xec\\x33\\x0b\\xd3\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\\n\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\xec\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xda\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xba\\xba\\xba\\xb8\\xb8\\xb8\\xb7\\xb7\\xb7\\\n\\xb6\\xb6\\xb6\\xb4\\xb4\\xb4\\xb3\\xb3\\xb3\\xbb\\xbb\\xbb\\xd0\\xd0\\xd0\\xe8\\\n\\xe8\\xe8\\xf3\\xf3\\xf3\\xfd\\xfd\\xfd\\xfc\\xfc\\xfc\\xed\\xed\\xed\\xe0\\xe0\\\n\\xe0\\xc2\\xc2\\xc2\\xad\\xad\\xad\\xe1\\xe1\\xe1\\xfe\\xfe\\xfe\\xff\\xff\\xff\\\n\\xfb\\xfb\\xfb\\xcf\\xcf\\xcf\\xa9\\xa9\\xa9\\xb9\\xb9\\xb9\\xf8\\xf8\\xf8\\xea\\\n\\xea\\xea\\xa7\\xa7\\xa7\\xf7\\xf7\\xf7\\xe7\\xe7\\xe7\\xef\\xef\\xef\\xf6\\xf6\\\n\\xf6\\xfa\\xfa\\xfa\\xf0\\xf0\\xf0\\xde\\xde\\xde\\xc3\\xc3\\xc3\\xe6\\xe6\\xe6\\\n\\xa5\\xa5\\xa5\\xb5\\xb5\\xb5\\xeb\\xeb\\xeb\\xd6\\xd6\\xd6\\xd5\\xd5\\xd5\\xd1\\\n\\xd1\\xd1\\xbc\\xbc\\xbc\\xc0\\xc0\\xc0\\xe5\\xe5\\xe5\\xa3\\xa3\\xa3\\xf5\\xf5\\\n\\xf5\\xee\\xee\\xee\\xe2\\xe2\\xe2\\x6e\\x97\\xd4\\x7b\\x9e\\xd4\\x71\\x98\\xd0\\\n\\x82\\xa4\\xd6\\x68\\x8e\\xcd\\x69\\x90\\xcd\\x75\\x9a\\xd0\\x73\\x99\\xd1\\x62\\\n\\x8b\\xc8\\xb2\\xb2\\xb2\\xf4\\xf4\\xf4\\xdd\\xdd\\xdd\\xe3\\xe3\\xe3\\x65\\x8d\\\n\\xcc\\xb0\\xcd\\xf3\\xb3\\xc7\\xe3\\xa1\\xbf\\xea\\x60\\x89\\xc9\\xb0\\xb0\\xb0\\\n\\xd9\\xd9\\xd9\\x5b\\x86\\xc7\\x9e\\xc0\\xef\\x6e\\x93\\xcc\\xf7\\xfb\\xff\\xf1\\\n\\xf8\\xff\\x8c\\xaf\\xe4\\x61\\x8a\\xc7\\xae\\xae\\xae\\xf2\\xf2\\xf2\\xd8\\xd8\\\n\\xd8\\xdc\\xdc\\xdc\\x5d\\x88\\xc8\\xa1\\xbf\\xef\\xfa\\xfc\\xfd\\xfb\\xfc\\xfe\\\n\\xfd\\xfd\\xfe\\xfc\\xfd\\xfe\\xfa\\xfb\\xfd\\xfb\\xfc\\xfd\\x85\\xa8\\xdd\\x53\\\n\\x7f\\xc1\\xac\\xac\\xac\\xd4\\xd4\\xd4\\xd2\\xd2\\xd2\\xdb\\xdb\\xdb\\x65\\x8d\\\n\\xca\\x99\\xb8\\xea\\x7e\\xa5\\xdd\\x80\\xa6\\xdd\\x7c\\xa3\\xdb\\x7a\\xa0\\xd9\\\n\\x79\\xa0\\xd9\\x78\\x9f\\xd8\\x78\\x9e\\xd8\\x5d\\x84\\xbf\\x61\\x8b\\xc9\\x92\\\n\\xb5\\xe6\\x81\\xa7\\xe2\\x81\\xa7\\xe1\\x7d\\xa3\\xde\\x7b\\xa1\\xdc\\x79\\x9f\\\n\\xdb\\x77\\x9e\\xd9\\x73\\x9a\\xd4\\x57\\x7e\\xbb\\xce\\xce\\xce\\x54\\x81\\xc4\\\n\\x97\\xb6\\xea\\xea\\xf3\\xf3\\xe6\\xf1\\xed\\xe6\\xf1\\xef\\xe6\\xf0\\xef\\xe5\\\n\\xf1\\xed\\xed\\xf5\\xf3\\x79\\x9c\\xd5\\x44\\x70\\xb0\\xa1\\xa1\\xa1\\x9f\\x9f\\\n\\x9f\\xab\\xab\\xab\\x51\\x7f\\xc3\\x9a\\xb6\\xef\\xe8\\xf3\\xea\\x84\\xbf\\x51\\\n\\x98\\xc9\\x6f\\x99\\xc9\\x71\\x84\\xbf\\x54\\xe9\\xf4\\xe4\\x7b\\x9c\\xdd\\x3a\\\n\\x69\\xaa\\x55\\x83\\xc6\\xba\\xce\\xef\\xff\\xff\\xdd\\xc7\\xee\\x87\\xd7\\xf4\\\n\\xa2\\xd7\\xf6\\xa2\\xc7\\xee\\x8c\\xff\\xff\\xe0\\x85\\xa2\\xdd\\x3e\\x6a\\xab\\\n\\x33\\x68\\xba\\x58\\x84\\xc3\\x68\\x8b\\xd3\\x70\\x8f\\xe1\\x6c\\x8d\\xdc\\x6d\\\n\\x8b\\xda\\x6e\\x8a\\xd7\\x6c\\x8b\\xcd\\x44\\x6d\\xab\\x2e\\x5f\\xa6\\x63\\xc3\\\n\\x63\\x0b\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xec\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x60\\x60\\x60\\x64\\x62\\x66\\x61\\x65\\\n\\x63\\x80\\x01\\x76\\x0e\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\x01\\x08\\x9f\\x51\\\n\\x50\\x48\\x18\\x0c\\x44\\x44\\xc5\\xc0\\x02\\xe2\\x12\\x30\\x01\\x49\\x29\\xb0\\\n\\x00\\xb3\\xb4\\x8c\\xac\\x9c\\x88\\xbc\\x82\\xa2\\x92\\xb2\\x0a\\x58\\x40\\x55\\\n\\x4e\\x4d\\x51\\x5d\\x43\\x53\\x49\\x4b\\x5b\\x47\\x17\\x2c\\xc0\\xaa\\xa7\\xaf\\\n\\x6c\\xa0\\x6c\\x68\\x64\\x6c\\x62\\x6a\\x66\\x6e\\x61\\xc9\\xc0\\x60\\x65\\x2d\\\n\\x29\\x68\\x63\\x6b\\x67\\x2f\\xec\\x00\\x32\\xc8\\xd1\\x89\\xc1\\x99\\x4b\\xc6\\\n\\xc6\\x85\\xcf\\xd5\\x4d\\xd8\\x5d\\x58\\xd8\\xc3\\xd3\\xcb\\x9b\\xc1\\xc7\\xd7\\\n\\xc0\\x4f\\xc3\\x3f\\x20\\x30\\x28\\x38\\x24\\x34\\x2c\\x3c\\x22\\x92\\x21\\x4a\\\n\\x41\\x31\\x3a\\x26\\x36\\x2e\\x3e\\x21\\x31\\x29\\x39\\x25\\x35\\x2d\\x9d\\x41\\\n\\x4c\\x91\\x2b\\x36\\x26\\x36\\x23\\x33\\x2b\\x3b\\x27\\x37\\x2f\\xbf\\xa0\\x90\\\n\\x81\\x41\\xa5\\x88\\xd7\\x5a\\xaf\\xb8\\xa4\\xb4\\xac\\xbc\\xa2\\xb2\\xaa\\xba\\\n\\x06\\x68\\x71\\x6d\\x5d\\x6d\\x7d\\x43\\x63\\x53\\x73\\x4b\\x6b\\x5b\\x7b\\x47\\\n\\x27\\xd4\\x87\\x5d\\xdd\\x3d\\xbd\\x7d\\xfd\\x13\\x26\\x4e\\x9a\\x0c\\x15\\x98\\\n\\x32\\x75\\xda\\xf4\\x19\\x33\\x67\\xcd\\x9e\\x33\\x17\\x00\\xfb\\xad\\x36\\x68\\\n\\x25\\x57\\xc2\\x28\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\\n\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\\n\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\\n\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\\n\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\\n\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\\n\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\\n\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x13\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x2c\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xd5\\xd5\\xd5\\xd4\\xd4\\xd4\\xd2\\xd2\\xd2\\\n\\xd1\\xd1\\xd1\\xd0\\xd0\\xd0\\xce\\xce\\xce\\xcd\\xcd\\xcd\\xd3\\xd3\\xd3\\xfd\\\n\\xfd\\xfd\\xe4\\xe4\\xe4\\xe2\\xe2\\xe2\\xe0\\xe0\\xe0\\xcb\\xcb\\xcb\\xca\\xca\\\n\\xca\\xf3\\xf3\\xf3\\xfb\\xfb\\xfb\\xc7\\xc7\\xc7\\xc8\\xc8\\xc8\\xf7\\xf7\\xf7\\\n\\xe8\\xf3\\xfb\\xbd\\xe3\\xfd\\xde\\xde\\xde\\xc3\\xc3\\xc3\\xfc\\xfc\\xfc\\xea\\\n\\xf5\\xfd\\x8a\\xcf\\xfe\\x83\\xcc\\xff\\xbc\\xe2\\xfd\\xdc\\xdc\\xdc\\xc0\\xc0\\\n\\xc0\\xeb\\xeb\\xeb\\xfa\\xfa\\xfa\\xe7\\xf3\\xfb\\x89\\xce\\xfe\\x96\\xd4\\xff\\\n\\x9a\\xd5\\xff\\x8b\\xcf\\xff\\xda\\xda\\xda\\xbd\\xbd\\xbd\\xe9\\xe9\\xe9\\xd3\\\n\\xeb\\xfb\\x98\\xd4\\xff\\x9e\\xd7\\xff\\x9b\\xd6\\xff\\xd9\\xd9\\xd9\\xb9\\xb9\\\n\\xb9\\xe8\\xe8\\xe8\\xd6\\xec\\xfb\\x88\\xcd\\xfd\\x98\\xd5\\xff\\x89\\xce\\xff\\\n\\xba\\xe1\\xfd\\xd7\\xd7\\xd7\\xb5\\xb5\\xb5\\xe7\\xe7\\xe7\\x9c\\xd6\\xff\\xa7\\\n\\x98\\x95\\xba\\x5c\\x29\\xbc\\x43\\x05\\xbd\\x56\\x1b\\xb8\\x81\\x62\\xbc\\xbc\\\n\\xbc\\xe5\\xe5\\xe5\\x86\\xcd\\xfd\\xa6\\x97\\x96\\xd0\\x75\\x3d\\xf7\\xb5\\x8d\\\n\\xfe\\xd6\\xb8\\xf5\\xa8\\x72\\xcb\\x6b\\x2d\\xb8\\xb8\\xb8\\xd5\\xec\\xfb\\xb4\\\n\\x57\\x24\\xf6\\xb5\\x8d\\xff\\x92\\x4d\\xff\\x77\\x11\\xff\\x86\\x21\\xeb\\x8a\\\n\\x40\\xb9\\x44\\x03\\xb4\\xb4\\xb4\\xfe\\xcd\\xae\\xff\\xff\\xff\\xef\\x7f\\x18\\\n\\xbc\\x42\\x04\\xb1\\xb1\\xb1\\xbc\\x55\\x1a\\xf4\\x9d\\x63\\xff\\x7f\\x18\\xf8\\\n\\x76\\x00\\xee\\x76\\x00\\xe1\\x68\\x03\\xb9\\x45\\x03\\xad\\xad\\xad\\xbd\\x86\\\n\\x68\\xc9\\x64\\x26\\xe6\\x77\\x21\\xea\\x79\\x05\\xdd\\x64\\x01\\xbd\\x4d\\x04\\\n\\xd0\\x5d\\x30\\xd5\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\\n\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\\n\\x00\\xc1\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x64\\x62\\x66\\x61\\x65\\x63\\\n\\x67\\x80\\x03\\x0e\\x4e\\x10\\xe0\\x42\\x88\\x30\\x73\\x72\\xb3\\xf1\\x70\\x72\\\n\\x72\\xf3\\xc2\\x04\\x58\\x39\\xd9\\x19\\xf8\\xf8\\x05\\x38\\x79\\x04\\xa1\\x02\\\n\\x6c\\x9c\\x3c\\x7c\\x42\\xc2\\x22\\xa2\\x9c\\x62\\xe2\\x10\\x01\\x76\\x4e\\x4e\\\n\\x09\\x61\\x49\\x29\\x69\\x19\\x4e\\x59\\x39\\xb0\\x00\\xaf\\x3c\\xa7\\x82\\xa2\\\n\\x92\\xb2\\x8a\\xaa\\x0c\\xa7\\x9a\\x3a\\x58\\x44\\x50\\x83\\x53\\x53\\x5a\\x4b\\\n\\x5b\\x07\\x28\\xa2\\xab\\x07\\x16\\x11\\xd7\\xe7\\x34\\x30\\x34\\xd2\\xd6\\x31\\\n\\x36\\xe1\\x34\\x35\\x03\\x8b\\xc8\\x99\\x83\\x44\\x2c\\x2c\\xad\\xac\\x6d\\x6c\\\n\\x21\\x06\\xdb\\xd9\\x73\\x1a\\x38\\x38\\x3a\\x39\\xbb\\xb8\\xba\\x41\\xed\\x76\\\n\\xe7\\xe2\\xf4\\xf0\\xf4\\xf2\\xf6\\xf1\\xf5\\xf3\\x87\\x8a\\x04\\x70\\x73\\x5a\\\n\\x07\\x06\\x05\\x05\\x05\\x87\\xc0\\x1c\\x1c\\xca\\x13\\x16\\x1e\\x11\\x19\\x15\\\n\\x1d\\x03\\xf7\\x53\\x6c\\x5c\\x7c\\x42\\x62\\x52\\x32\\x03\\x32\\x88\\x09\\x01\\\n\\xca\\x03\\x00\\xfe\\x8e\\x18\\x8d\\xc5\\xad\\xb5\\xe1\\x00\\x00\\x00\\x1d\\x74\\\n\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\\n\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\\n\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\\n\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\\n\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\\n\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\\n\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\\n\\x60\\x82\\\n\\x00\\x00\\x04\\x67\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x02\\x2b\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x36\\x6b\\xbc\\x36\\x6b\\xbb\\x36\\x6a\\xbb\\\n\\x39\\x6c\\xbc\\x3b\\x6e\\xbd\\x3a\\x6d\\xbb\\x38\\x6b\\xbb\\x3e\\x70\\xbb\\xd1\\\n\\xe0\\xf6\\xd1\\xe0\\xf7\\xf8\\xfb\\xfe\\xf7\\xfb\\xfe\\xf6\\xf9\\xfd\\xf0\\xf5\\\n\\xfc\\xea\\xf0\\xfa\\xed\\xf2\\xfb\\xf7\\xfa\\xfd\\xeb\\xf1\\xfb\\xdf\\xe9\\xf8\\\n\\xbd\\xd0\\xec\\x5e\\x89\\xc9\\xd1\\xdf\\xf6\\x80\\xaa\\xe9\\xf6\\xfa\\xfe\\xf6\\\n\\xfa\\xfd\\x64\\x8c\\xc8\\xee\\xf3\\xfb\\xea\\xf1\\xfb\\xf2\\xf6\\xfc\\xf1\\xf6\\\n\\xfc\\xe2\\xec\\xf9\\xdb\\xe7\\xf8\\xba\\xd0\\xee\\xd0\\xdf\\xf6\\x7e\\xa8\\xe8\\\n\\xe9\\xf1\\xfa\\xee\\xf4\\xfb\\xe8\\xf0\\xfa\\xdd\\xe8\\xf8\\xdb\\xe6\\xf7\\x7a\\\n\\xa3\\xe1\\xc3\\xd5\\xef\\x35\\x69\\xb7\\xcc\\xdd\\xf5\\x7e\\xa8\\xe7\\x66\\x8d\\\n\\xc9\\xe9\\xf0\\xfa\\xf3\\xf8\\xfd\\xf8\\xfa\\xfe\\xef\\xf4\\xfc\\xdf\\xe9\\xf9\\\n\\xdb\\xe7\\xf7\\xd9\\xe5\\xf7\\x78\\xa2\\xe0\\xa9\\xc2\\xe7\\x35\\x68\\xb6\\xc9\\\n\\xdc\\xf4\\x7d\\xa7\\xe7\\xe1\\xec\\xf9\\xe3\\xed\\xf9\\xee\\xf4\\xfc\\xf3\\xf7\\\n\\xfd\\xe5\\xed\\xfa\\xd8\\xe5\\xf6\\x77\\xa0\\xde\\xa4\\xbe\\xe4\\x34\\x67\\xb4\\\n\\xc7\\xd9\\xf4\\x7d\\xa6\\xe6\\x65\\x8d\\xc9\\x67\\x8e\\xc9\\x6c\\x92\\xcb\\x6d\\\n\\x92\\xcb\\x69\\x90\\xca\\x65\\x8c\\xc8\\x74\\x9c\\xda\\x9f\\xba\\xe1\\x34\\x66\\\n\\xb3\\xc5\\xd8\\xf2\\x7b\\xa4\\xe3\\x7a\\xa3\\xe3\\x7a\\xa4\\xe3\\x7b\\xa4\\xe2\\\n\\x7b\\xa3\\xe2\\x7b\\xa3\\xe1\\x79\\xa2\\xe1\\xe1\\xbf\\x5b\\xed\\xdb\\xab\\xe9\\\n\\xd0\\x85\\x72\\x9c\\xdb\\x74\\x9d\\xdc\\x9a\\xb5\\xdd\\x34\\x65\\xb1\\xc2\\xd5\\\n\\xf2\\xe8\\xc8\\x5c\\xeb\\xd7\\xa4\\xfb\\xf4\\xdc\\xd9\\xb3\\x58\\x73\\x9b\\xda\\\n\\x73\\x9b\\xd9\\x95\\xb0\\xda\\x33\\x64\\xaf\\xbe\\xd2\\xf0\\x7a\\xa3\\xe2\\x78\\\n\\xa1\\xe0\\xd9\\xb2\\x52\\xf8\\xeb\\xb4\\xf8\\xe6\\x8e\\xee\\xdd\\xb5\\xd8\\x9c\\\n\\x38\\x70\\x99\\xd6\\x8e\\xab\\xd5\\x33\\x63\\xad\\x36\\x6a\\xba\\xbb\\xd0\\xef\\\n\\x7a\\xa2\\xe2\\xec\\xd9\\xac\\xf8\\xe3\\x82\\xc2\\x88\\x33\\xfa\\xed\\xac\\xcf\\\n\\x9e\\x43\\x6d\\x96\\xd3\\x8a\\xa7\\xd2\\x32\\x62\\xab\\xb8\\xce\\xef\\xf7\\xfa\\\n\\xfe\\x88\\xc0\\x62\\xf9\\xea\\xa2\\xf6\\xdc\\x61\\xc2\\x87\\x31\\xf7\\xe1\\x77\\\n\\xf0\\xde\\xb6\\xca\\x94\\x3a\\x84\\xa3\\xce\\x32\\x61\\xaa\\x38\\x6c\\xbb\\xb6\\\n\\xcc\\xee\\x7a\\xa2\\xe1\\xc2\\xdc\\xbf\\xef\\xdb\\xab\\xf7\\xe0\\x74\\xf5\\xda\\\n\\x58\\xf5\\xdb\\x5d\\xf8\\xe6\\x90\\xe1\\xc1\\x92\\x81\\x9e\\xcc\\x32\\x61\\xa8\\\n\\x37\\x6b\\xba\\xb3\\xca\\xed\\x7a\\xa2\\xe0\\xe1\\xc2\\x8e\\xf9\\xe8\\x97\\xf5\\\n\\xdb\\x5b\\xc2\\x88\\x32\\xf6\\xde\\x6a\\xf6\\xe7\\xb1\\xc2\\x83\\x2d\\x31\\x60\\\n\\xa7\\x35\\x6a\\xba\\xad\\xc6\\xeb\\xad\\xc5\\xea\\xc9\\x91\\x38\\xf6\\xec\\xdd\\\n\\xf9\\xee\\xbd\\xf8\\xea\\xac\\xf8\\xea\\xab\\xf8\\xea\\xad\\xfb\\xf3\\xd4\\xe4\\\n\\xc8\\xa4\\xbe\\x7b\\x26\\x35\\x69\\xb9\\x35\\x69\\xb8\\x35\\x68\\xb7\\x35\\x68\\\n\\xb5\\xc5\\x8a\\x32\\xc4\\x87\\x30\\xc3\\x85\\x2f\\xc1\\x81\\x2b\\xc0\\x7f\\x29\\\n\\xbf\\x7d\\x28\\xbd\\x79\\x25\\xbd\\x77\\x23\\xbc\\x76\\x22\\xff\\xff\\xff\\x59\\\n\\xac\\x85\\xa0\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\\n\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x01\\\n\\x16\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x60\\x04\\x02\\x26\\x26\\x66\\x66\\\n\\x16\\x56\\x36\\x76\\x0e\\x06\\x06\\x06\\x46\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\\n\\x01\\x5e\\x41\\x21\\x61\\x11\\x51\\xa0\\x80\\x98\\xb8\\x84\\xa4\\x94\\xb4\\x8c\\\n\\x2c\\xb7\\x9c\\xbc\\x82\\xa2\\x08\\x07\\x03\\xa3\\x92\\xb2\\x9c\\x9c\\x94\\x8a\\\n\\xaa\\x20\\xaf\\x9a\\xba\\x86\\xa6\\x96\\x36\\x03\\xa3\\x8e\\xae\\x9a\\x9a\\x9e\\\n\\xbe\\x81\\xa1\\x91\\xb1\\x89\\xa9\\x99\\xb9\\x05\\x03\\x93\\xa5\\x95\\xb5\\xb5\\\n\\x8d\\xad\\xa0\\x9d\\xbd\\x89\\xa9\\x83\\xa3\\x93\\x33\\x03\\x93\\x8b\\xab\\x94\\\n\\x9b\\xbb\\x87\\xa7\\x97\\xb7\\x94\\x94\\x94\\x8f\\xaf\\x1f\\x03\\xb3\\x7f\\x40\\\n\\x60\\x50\\x70\\x48\\x68\\x58\\x78\\x44\\x64\\x54\\x74\\x4c\\x2c\\x03\\x73\\x5c\\\n\\x60\\x60\\x48\\x48\\x70\\x58\\x7c\\x42\\x62\\x52\\x72\\x4a\\x6a\\x1a\\x03\\x73\\\n\\x7a\\x46\\x86\\x66\\x48\\x68\\x66\\x56\\x76\\x4e\\x6e\\x5e\\x7e\\x41\\x21\\x43\\\n\\x51\\x71\\x09\\x37\\x08\\x94\\x96\\x95\\x57\\x54\\x56\\x55\\xd7\\x30\\xb0\\xd7\\\n\\x86\\xd5\\xd5\\x03\\x41\\x43\\x63\\x53\\x73\\x4b\\x6b\\x5b\\x3b\\x43\\x47\\x67\\\n\\x57\\x5d\\x77\\x77\\x77\\x4f\\x6f\\x5f\\x5f\\xff\\x84\\x89\\x93\\x26\\x33\\x4c\\\n\\x99\\x3a\\x0d\\xa8\\x62\\xfa\\x8c\\xc6\\x99\\xb3\\x66\\xce\\x9e\\x33\\x77\\x1e\\\n\\xc3\\xfc\\x05\\x0b\\xb9\\xb9\\x17\\x2d\\x5e\\xb2\\x74\\xd9\\xb2\\x65\\xcb\\x57\\\n\\xac\\x5c\\xc5\\x50\\xb4\\x7a\\xcd\\xda\\x75\\xeb\\x37\\x6c\\x9c\\xbb\\x69\\xf3\\\n\\x96\\x55\\x5b\\xb7\\x6d\\x07\\x00\\x8e\\x3f\\x51\\x00\\xcd\\x78\\x5b\\xb6\\x00\\\n\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\\n\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\\n\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\\n\\x2d\\x30\\x39\\x2d\\x31\\x31\\x54\\x31\\x36\\x3a\\x31\\x34\\x3a\\x32\\x33\\x2b\\\n\\x30\\x32\\x3a\\x30\\x30\\x8f\\xef\\xc5\\x3a\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x30\\x39\\x2d\\x31\\x31\\x54\\x31\\x36\\x3a\\x31\\x34\\x3a\\x32\\x33\\\n\\x2b\\x30\\x32\\x3a\\x30\\x30\\xfe\\xb2\\x7d\\x86\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\xb6\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xb3\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x71\\x71\\x71\\x6f\\x6f\\x6f\\x6d\\x6d\\x6d\\\n\\x52\\x52\\x52\\x4d\\x4d\\x4d\\x49\\x49\\x49\\x6c\\x6c\\x6c\\x69\\x69\\x69\\x57\\\n\\x57\\x57\\x48\\x48\\x48\\x43\\x43\\x43\\x65\\x65\\x65\\x6c\\xba\\xe5\\x74\\xbc\\\n\\xec\\x6e\\xb8\\xeb\\x68\\xb6\\xeb\\xcd\\xcb\\x80\\xea\\xd7\\x80\\x47\\x47\\x47\\\n\\x42\\x42\\x42\\x3d\\x3d\\x3d\\x68\\x68\\x68\\x61\\x61\\x61\\x36\\xbf\\x7f\\x69\\\n\\xc5\\xdd\\x70\\xc2\\xff\\x67\\xbf\\xff\\xac\\xcb\\xae\\xf9\\xe0\\x68\\x41\\x41\\\n\\x41\\x37\\x37\\x37\\x64\\x64\\x64\\x60\\x60\\x60\\x5c\\x5c\\x5c\\x45\\xc4\\x4f\\\n\\x2c\\xba\\x4b\\x60\\xbd\\xd8\\x62\\xba\\xff\\x65\\xb9\\xff\\x7d\\xbb\\xdb\\x3b\\\n\\x3b\\x3b\\x36\\x36\\x36\\x31\\x31\\x31\\x5c\\xcb\\x4f\\x7a\\xd7\\x57\\x6a\\xd1\\\n\\x42\\x5e\\xc7\\x70\\x50\\xb8\\xb6\\x3f\\xae\\xcb\\x2c\\x2c\\x2c\\x5b\\x5b\\x5b\\\n\\x9e\\xe2\\x72\\xa4\\xe3\\x7c\\xa0\\xe3\\x78\\x95\\xe0\\x63\\x95\\xe1\\x5a\\x93\\\n\\xe2\\x55\\x30\\x30\\x30\\x2b\\x2b\\x2b\\x26\\x26\\x26\\x56\\x56\\x56\\x51\\x51\\\n\\x51\\x2a\\x2a\\x2a\\x69\\x9f\\x36\\x65\\x9f\\x31\\x4c\\x4c\\x4c\\x6f\\xc5\\xf9\\\n\\x78\\xc8\\xff\\x72\\xc5\\xff\\x6d\\xc3\\xff\\xc3\\xd8\\xb7\\xde\\xe4\\xba\\x24\\\n\\x24\\x24\\x62\\x9d\\x31\\x81\\xb3\\x5a\\x57\\x98\\x28\\x4b\\x4b\\x4b\\x46\\x46\\\n\\x46\\x39\\xba\\x92\\x69\\xc3\\xe5\\x6f\\xa5\\x3d\\x6d\\xa3\\x38\\x68\\xa2\\x34\\\n\\x60\\x9c\\x2f\\x7c\\xaf\\x55\\xaa\\xcb\\x91\\x74\\xab\\x4f\\x45\\x8f\\x17\\x45\\\n\\x45\\x45\\x40\\x40\\x40\\x46\\xbe\\x6f\\x30\\xb1\\x70\\x5f\\xbc\\xe3\\x6b\\xa3\\\n\\x37\\xb0\\xce\\x96\\xad\\xcd\\x94\\xa8\\xcb\\x90\\x90\\xbc\\x74\\xa1\\xc7\\x8a\\\n\\x68\\xa5\\x46\\x35\\x87\\x07\\x5a\\xc5\\x75\\x76\\xd0\\x85\\x65\\xc8\\x7d\\x63\\\n\\x9f\\x31\\x8e\\xba\\x6f\\x89\\xb8\\x6b\\x85\\xb6\\x66\\x80\\xb3\\x61\\x82\\xb5\\\n\\x67\\x98\\xc2\\x83\\x5c\\xa0\\x3c\\x25\\x7f\\x00\\x3a\\x3a\\x3a\\x35\\x35\\x35\\\n\\x99\\xdb\\x91\\x9e\\xdb\\x9e\\x99\\xda\\xa1\\x5b\\x9b\\x29\\xa9\\xca\\x90\\xa5\\\n\\xc8\\x8d\\xa1\\xc6\\x8a\\x9e\\xc5\\x88\\x85\\xb6\\x6a\\x97\\xc2\\x82\\x66\\xa5\\\n\\x48\\x21\\x7d\\x00\\x34\\x34\\x34\\x51\\x97\\x21\\x49\\x91\\x1b\\x43\\x8f\\x15\\\n\\x3b\\x8b\\x0f\\x5e\\x9f\\x3a\\x96\\xc1\\x80\\x62\\xa3\\x46\\x1f\\x7d\\x00\\x2e\\\n\\x2e\\x2e\\x29\\x29\\x29\\x08\\x08\\x08\\x2a\\x7e\\x01\\x5f\\xa1\\x43\\x1f\\x7b\\\n\\x00\\x1e\\x7b\\x03\\xff\\xff\\xff\\xa8\\xa2\\xb3\\x05\\x00\\x00\\x00\\x01\\x74\\\n\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\\n\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xdd\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\\n\\x60\\x64\\x62\\x66\\x00\\x03\\x16\\x56\\x36\\x30\\xcd\\xc4\\xce\\xc1\\x09\\x06\\\n\\xac\\x5c\\xdc\\x60\\x01\\x76\\x0e\\x1e\\x5e\\x3e\\x7e\\x01\\x41\\x21\\x61\\x11\\\n\\x51\\xb0\\x80\\x18\\x8f\\xb8\\x84\\xa4\\x94\\xb4\\x8c\\xac\\x1c\\x83\\x3c\\x58\\\n\\x40\\x41\\x51\\x49\\x59\\x45\\x55\\x4d\\x5d\\x43\\x53\\x4b\\x1b\\x2c\\xa0\\xa8\\\n\\xc4\\xa9\\xa3\\xab\\xa7\\x6f\\x60\\xa8\\xa5\\x6d\\x04\\x16\\x30\\xe6\\x64\\x31\\\n\\x31\\x35\\x33\\xb7\\xb0\\xb4\\xb2\\xb6\\x01\\x0b\\xd8\\xda\\x89\\x41\\x6c\\xb1\\\n\\x77\\x70\\x04\\x0b\\xd8\\x39\\x09\\x3b\\xbb\\xb8\\xba\\xb9\\x7b\\x78\\x7a\\x79\\\n\\xfb\\x80\\x04\\x7c\\xfd\\xe4\\xfc\\x03\\xa4\\x02\\x83\\x82\\x43\\x42\\xc3\\xc2\\\n\\x23\\x80\\x02\\x91\\x51\\x9a\\xd1\\x31\\xb1\\x71\\xf1\\x09\\x61\\x89\\x49\\xc9\\\n\\x29\\xa9\\x0c\\x0c\\x51\\x0c\\x5a\\x69\\xe9\\x19\\x99\\x09\\x59\\xd9\\x39\\xb9\\\n\\x79\\xf9\\x05\\x85\\x0c\\x45\\xc5\\x56\\x25\\xa5\\x65\\xe5\\x15\\x95\\x55\\xd5\\\n\\x35\\xb5\\x75\\xf5\\x0c\\x0c\\x0d\\x0c\\xc5\\x40\\x2b\\x1a\\x9b\\x9a\\x5b\\x5a\\\n\\xdb\\xda\\x3b\\x80\\x66\\x74\\x76\\x79\\x42\\x7c\\xdb\\xdd\\xd3\\xdb\\xc7\\x80\\\n\\x02\\xea\\xfb\\x41\\x24\\x00\\xf8\\x79\\x2c\\xfe\\xdf\\xab\\x57\\x1c\\x00\\x00\\\n\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\\n\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\\n\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\\n\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x33\\x2d\\\n\\x30\\x31\\x2d\\x31\\x38\\x54\\x31\\x34\\x3a\\x32\\x36\\x3a\\x30\\x31\\x2b\\x30\\\n\\x31\\x3a\\x30\\x30\\x76\\x59\\x08\\x6c\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x33\\\n\\x2d\\x30\\x31\\x2d\\x31\\x38\\x54\\x31\\x34\\x3a\\x32\\x36\\x3a\\x30\\x31\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\x07\\x04\\xb0\\xd0\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\\n\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x97\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xe4\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x9e\\x9e\\x9e\\xcd\\xcd\\xc7\\xe4\\xe4\\xdb\\\n\\xe5\\xe5\\xdb\\xe5\\xe5\\xdc\\xe6\\xe6\\xdd\\xe7\\xe7\\xde\\xe8\\xe8\\xdf\\xe8\\\n\\xe8\\xe0\\xd3\\xd3\\xcd\\xdf\\xdf\\xd6\\xc6\\xc6\\xc4\\xc1\\xc1\\xc1\\xc3\\xc3\\\n\\xc3\\xc4\\xc4\\xc4\\xc5\\xc5\\xc5\\xc6\\xc6\\xc6\\xc8\\xc8\\xc8\\xc9\\xc9\\xc9\\\n\\xcd\\xcd\\xcd\\xdf\\xdf\\xd7\\xc9\\xc9\\xc7\\xca\\xca\\xca\\xcc\\xcc\\xcc\\xd1\\\n\\xd1\\xd0\\xea\\xea\\xe3\\xe1\\xe1\\xd9\\xcc\\xcc\\xcb\\xc7\\xc7\\xc7\\xcb\\xcb\\\n\\xcb\\xce\\xce\\xce\\xd0\\xd0\\xd0\\xd1\\xd1\\xd1\\xd4\\xd4\\xd3\\xeb\\xeb\\xe5\\\n\\xe2\\xe2\\xdb\\xcf\\xcf\\xcd\\xcf\\xcf\\xcf\\xd2\\xd2\\xd2\\xa2\\xb4\\x98\\x73\\\n\\x97\\x5e\\x66\\x8e\\x4f\\x60\\x89\\x49\\x74\\x8b\\x67\\xbe\\xbe\\xbb\\xec\\xec\\\n\\xe6\\xed\\xed\\xe6\\xed\\xed\\xe7\\xee\\xee\\xe8\\xef\\xef\\xe9\\xef\\xef\\xea\\\n\\xac\\xbf\\x9d\\x81\\xab\\x61\\xb4\\xd4\\x95\\xd0\\xe6\\xba\\x8f\\xbb\\x6a\\x57\\\n\\x8f\\x2d\\x65\\x82\\x55\\x5f\\x88\\x47\\xb1\\xd3\\x90\\xb1\\xd6\\x92\\xff\\xff\\\n\\xff\\x8c\\xbc\\x65\\x8f\\xbc\\x67\\x3a\\x6d\\x1d\\x4c\\x7b\\x31\\xb6\\xd4\\x9c\\\n\\xb2\\xd2\\x95\\x37\\x6b\\x19\\x39\\x6c\\x1b\\x8b\\xba\\x62\\x87\\xba\\x60\\x87\\\n\\xb9\\x60\\x53\\x8c\\x28\\x8d\\xba\\x64\\x08\\xcc\\xc2\\xf2\\x00\\x00\\x00\\x01\\\n\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\\n\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x8d\\x49\\x44\\x41\\x54\\x18\\xd3\\\n\\x63\\x60\\xa0\\x0a\\x60\\x44\\x02\\x60\\x3e\\x13\\x33\\x33\\x0b\\x2b\\x2b\\x1b\\\n\\x1b\\x3b\\x07\\x27\\x17\\x48\\x84\\x91\\x9b\\x87\\x97\\x97\\x8f\\x5f\\x40\\x50\\\n\\x48\\x58\\x84\\x13\\x2c\\x20\\x2a\\xc6\\x07\\xe2\\x89\\x4b\\x88\\x48\\x4a\\x81\\\n\\x05\\xa4\\x65\\x64\\x85\\xc4\\xe5\\x44\\xe4\\x15\\x14\\x95\\x94\\xc1\\x02\\x2a\\\n\\xaa\\x72\\x12\\xf2\\x6a\\x0a\\xea\\x1a\\x9a\\x5a\\xda\\x3a\\x40\\xbe\\xae\\x9e\\\n\\xbe\\x81\\xa1\\x91\\x91\\xb1\\x89\\xa9\\x99\\xb9\\x85\\xa5\\x15\\xc2\\x52\\x6b\\\n\\x1b\\x5b\\x3b\\x7b\\x07\\x47\\x84\\x73\\x9c\\x9c\\xed\\xec\\xec\\x5c\\x5c\\x11\\\n\\x02\\x6e\\xee\\x1e\\x76\\x9e\\x0e\\x48\\x02\\xae\\x5e\\xde\\x2e\\xde\\x5e\\x48\\\n\\x02\\x0c\\xae\\x20\\xc0\\x00\\x00\\x19\\x8e\\x10\\xea\\x97\\xd3\\x54\\x7c\\x00\\\n\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\\n\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\\n\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\\n\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x30\\x33\\x2d\\x33\\x30\\x54\\x31\\x30\\x3a\\x30\\x36\\x3a\\x33\\x33\\\n\\x2b\\x30\\x32\\x3a\\x30\\x30\\x50\\xc7\\xb7\\x1a\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xb7\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x06\\x00\\x00\\x00\\x1f\\xf3\\xff\\x61\\\n\\x00\\x00\\x00\\x01\\x73\\x52\\x47\\x42\\x00\\xae\\xce\\x1c\\xe9\\x00\\x00\\x00\\\n\\x06\\x62\\x4b\\x47\\x44\\x00\\xff\\x00\\xff\\x00\\xff\\xa0\\xbd\\xa7\\x93\\x00\\\n\\x00\\x00\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0b\\x13\\x00\\x00\\x0b\\x13\\x01\\\n\\x00\\x9a\\x9c\\x18\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\xdf\\x01\\x16\\\n\\x10\\x10\\x37\\x89\\xf7\\x31\\x87\\x00\\x00\\x02\\x37\\x49\\x44\\x41\\x54\\x38\\\n\\xcb\\xad\\x93\\xbf\\x4f\\x13\\x61\\x1c\\xc6\\x3f\\xd7\\x5c\\xec\\x40\\x98\\x1c\\\n\\x08\\x35\\xd8\\x84\\xa5\\x89\\x49\\x25\\x69\\x42\\x34\\x56\\x6d\\x34\\x30\\x48\\\n\\x18\\x48\\x17\\x9c\\x98\\x35\\x2c\\x1d\\xdc\\x60\\x6a\\x20\\x81\\x04\\x12\\x1c\\\n\\x1a\\x27\\xf0\\x2f\\x80\\xa9\\x86\\x81\\x34\\x1c\\x2c\\x6a\\x0c\\xa7\\x38\\xf8\\\n\\xa3\\x45\\x50\\xa1\\xbd\\x54\\x06\\x2c\\xed\\x5d\\xef\\xee\\x7d\\xaf\\xaf\\x13\\\n\\x25\\x28\\x26\\x46\\x7d\\xb6\\xf7\\x79\\x93\\xcf\\xfb\\x7c\\xbf\\x4f\\x5e\\xf8\\\n\\x47\\x69\\x3f\\x1b\\xd3\\xd3\\xd3\\xaa\\xbb\\xbb\\x9b\\xdd\\xdd\\x5d\\xa6\\xa6\\\n\\xa6\\x34\\x80\\xc9\\xc9\\x49\\xd5\\xdb\\xdb\\x8b\\x65\\x59\\x4c\\x4c\\x4c\\x68\\\n\\xe7\\x02\\x86\\x87\\x87\\xd5\\xe0\\xe0\\x20\\xa3\\xa3\\xa3\\xd8\\xb6\\xcd\\xc1\\\n\\xc1\\x01\\x86\\x61\\xe0\\xfb\\x3e\\x63\\x63\\x63\\xe8\\xba\\x8e\\x65\\x59\\x6c\\\n\\x6d\\x6d\\xb1\\xb6\\xb6\\x46\\x3e\\x9f\\xd7\\x00\\xf4\\x13\\x40\\x2c\\x16\\x63\\\n\\x60\\x60\\x80\\x4c\\x26\\x43\\xbd\\x5e\\x27\\x12\\x89\\x10\\x8f\\xc7\\xb1\\x2c\\\n\\x8b\\xb9\\xb9\\x39\\x2a\\x95\\x0a\\x9d\\x9d\\x9d\\x8c\\x8c\\x8c\\x10\\x8b\\xc5\\\n\\xc8\\xe7\\xf3\\xa7\\x31\\x12\\x89\\x84\\xca\\x66\\xb3\\xea\\xe4\\x9c\\x4a\\xa5\\\n\\x54\\xa1\\x50\\x50\\xa6\\x69\\xaa\\xcd\\xcd\\x4d\\xb5\\xbc\\xbc\\xac\\x52\\xa9\\\n\\x54\\xfb\\x3e\\x9b\\xcd\\xaa\\x44\\x22\\xa1\\xda\\x09\\x4c\\xd3\\xd4\\xfa\\xfb\\\n\\xfb\\x15\\x40\\x3a\\x9d\\x56\\x47\\x47\\x47\\xcc\\xce\\xce\\xd2\\xd1\\xd1\\x01\\\n\\x80\\x6d\\xdb\\x84\\x42\\x21\\xd2\\xe9\\xb4\\x5a\\x59\\x59\\xd1\\xca\\xe5\\x32\\\n\\xa6\\x69\\x9e\\x1d\\xa1\\x52\\xa9\\x30\\x3f\\x3f\\xaf\\x7a\\x7a\\x7a\\xd0\\x75\\\n\\x9d\\x6a\\xb5\\x4a\\xb1\\x58\\x24\\x1c\\x0e\\x13\\x8d\\x46\\xe9\\xea\\xea\\x42\\\n\\x4a\\x49\\x32\\x99\\x54\\x86\\x61\\x9c\\xdf\\xc2\\xd0\\xd0\\x90\\x8a\\x44\\x22\\\n\\x84\\xc3\\x61\\x00\\x72\\xb9\\x9c\\x06\\x30\\x3e\\x3e\\xae\\x00\\xaa\\xd1\\x7d\\\n\\xec\\x0d\\xc1\\xea\\xb3\\x55\\xed\\xaf\\x3a\\xbf\\xf7\\xf8\\x4e\\xf3\\xee\\x4c\\\n\\xb2\\xf4\\x4b\\x8d\\x39\\xa3\\xa1\\x1c\\x5f\\xd2\\x70\\x7d\\x6a\\x8e\\xcb\\xc2\\\n\\xfd\\xcb\\x1a\\xc0\\xa3\\xe7\\x0f\\x14\\x40\\x20\\x03\\xa4\\x90\\xd8\\x65\\x0f\\\n\\xdf\\x17\\x7c\\x2c\\x15\\xdf\\xbe\\x9a\\xd9\\xee\\x6b\\xef\\xc0\\xf1\\x24\\xb7\\\n\\x2f\\x81\\xe7\\xe9\\x2c\\xbd\\x76\\xce\\xbc\\x7a\\xe3\\xe2\\x2d\\x82\\x56\\x80\\\n\\x6c\\x49\\x3e\\x87\\xf7\\x11\\x81\\xa4\\xd1\\xb0\\xaf\\x36\\x1e\\x3a\\x2f\\xdf\\\n\\x3f\\x29\\x5d\\xd3\\x01\\x8e\\x9b\\x1e\\xcd\\xa6\\x8e\\xeb\\x06\\xd4\\x6a\\xa7\\\n\\x80\\x40\\x06\\x88\\x40\\x20\\x5b\\x12\\xd9\\x92\\x78\\xd2\\x43\\x06\\x12\\x5f\\\n\\x08\\x84\\x2f\\x45\\x3b\\xc1\\xf7\\x86\\xcb\\x53\\xd3\\xa1\\x56\\x77\\x38\\x3e\\\n\\x6e\\xb6\\x01\\x52\\x48\\xd6\\xbf\\x14\\xf0\\x3d\\x81\\xef\\x0a\\x42\\xee\\x05\\\n\\x0e\\xbf\\x1d\\x52\\xfa\\xf0\\xe9\\xcd\\xce\\xe2\\xde\\xcd\\x73\\xff\\xc2\\xef\\\n\\xd4\\x97\\xb9\\x72\\xdd\\xf7\\xc4\\xba\\xf0\\xe5\\xd7\\x9d\\xc5\\xbd\\xd8\\x89\\\n\\x1f\\xfa\\x53\\xc0\\xf6\\xc2\\xbb\\x17\\xc2\\x97\\x1b\\x52\\xc8\\x38\\xff\\x53\\\n\\x3f\\x00\\x22\\x25\\x1f\\x19\\x73\\x6c\\x41\\x8f\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x20\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x53\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xdd\\x6a\\x68\\xdc\\x64\\x63\\xda\\x64\\x61\\\n\\xd9\\x63\\x5d\\xdf\\x6a\\x6a\\xed\\x93\\x8e\\xf8\\xc3\\xbe\\xf9\\xd3\\xcc\\xf9\\\n\\xcb\\xc4\\xf4\\xb4\\xaa\\xe2\\x70\\x66\\xd1\\x5e\\x53\\xe0\\x69\\x6a\\xf2\\xad\\\n\\xaa\\xfd\\xdc\\xd8\\xfa\\xba\\xae\\xfa\\xa3\\x91\\xfa\\x9d\\x8b\\xfb\\xa9\\x9c\\\n\\xfc\\xc7\\xba\\xe9\\x7b\\x70\\xcc\\x5b\\x4c\\xf3\\xa7\\xa3\\xfd\\xdb\\xd4\\xfa\\\n\\x9a\\x87\\xf0\\x91\\x7f\\xf1\\x8e\\x7a\\xf8\\x94\\x7f\\xf9\\x92\\x7e\\xf8\\x8c\\\n\\x76\\xf8\\xb6\\xa8\\xe3\\x6e\\x63\\xc7\\x57\\x45\\xea\\x83\\x7d\\xfc\\xd4\\xcd\\\n\\xf7\\x93\\x7e\\xee\\x8a\\x75\\xf6\\x84\\x6c\\xf3\\x79\\x63\\xf8\\xaf\\xa4\\xd0\\\n\\x4f\\x3e\\xde\\x6a\\x67\\xf5\\xaf\\xa5\\xfa\\xab\\x9d\\xf0\\x8c\\x77\\xec\\x5f\\\n\\x54\\xf2\\x77\\x63\\xf4\\x8e\\x81\\xe9\\x7f\\x78\\xc0\\x53\\x3a\\xdb\\x69\\x64\\\n\\xf9\\xb9\\xaf\\xfa\\x93\\x7f\\xf0\\x85\\x70\\xff\\xff\\xff\\xe9\\x59\\x4d\\xee\\\n\\x6a\\x5e\\xf1\\x9d\\x96\\xbe\\x4f\\x36\\xda\\x63\\x5f\\xf7\\xab\\xa1\\xf8\\x86\\\n\\x70\\xf6\\x82\\x68\\xea\\x66\\x5c\\xf1\\x9c\\x96\\xbc\\x50\\x32\\xd7\\x62\\x5c\\\n\\xee\\x8c\\x81\\xf7\\x91\\x7e\\xf3\\x73\\x5d\\xe9\\x5b\\x4f\\xf0\\x83\\x7b\\xe2\\\n\\x7b\\x75\\xba\\x4b\\x2e\\xdb\\x56\\x4b\\xf6\\xab\\xa2\\xf0\\x64\\x56\\xee\\x66\\\n\\x52\\xe6\\x58\\x4c\\xe6\\x5a\\x52\\xf5\\xa3\\x9f\\xc4\\x50\\x34\\xcf\\x61\\x53\\\n\\xe3\\x6b\\x61\\xf5\\xac\\xa1\\xea\\x5c\\x50\\xe6\\x59\\x4e\\xe6\\x56\\x4c\\xe6\\\n\\x56\\x50\\xf4\\xa2\\x9e\\xd6\\x60\\x54\\xb8\\x4a\\x2a\\xcb\\x59\\x49\\xe0\\x65\\\n\\x5c\\xf5\\xa6\\xa1\\xef\\x86\\x7e\\xe9\\x63\\x5b\\xe7\\x5d\\x59\\xee\\x84\\x7d\\\n\\xf4\\xa0\\x9e\\xd7\\x5d\\x51\\xb7\\x4a\\x2b\\xc6\\x55\\x42\\xcc\\x52\\x3c\\xe8\\\n\\x7a\\x75\\xee\\x92\\x8f\\xe4\\x78\\x71\\xc1\\x4d\\x33\\xbe\\x53\\x38\\xbd\\x51\\\n\\x35\\xbc\\x4b\\x30\\xb8\\x4e\\x2e\\xb2\\xe5\\x95\\xfc\\x00\\x00\\x00\\x01\\x74\\\n\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\\n\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xa7\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\\n\\x60\\xc0\\x0e\\x18\\x99\\x98\\x59\\x90\\xb8\\xac\\x6c\\xec\\x1c\\x9c\\x5c\\xdc\\\n\\x3c\\x30\\x3e\\x2f\\x1f\\xbf\\x80\\xa0\\x90\\xb0\\x88\\xa8\\x18\\x94\\x2f\\x2e\\\n\\x21\\x29\\x25\\x2d\\x23\\x2b\\x27\\xaf\\xa0\\x08\\x16\\x50\\x52\\x16\\x52\\x51\\\n\\x55\\x03\\x02\\x75\\x0d\\x4d\\x10\\x5f\\x4b\\x5b\\x47\\x57\\x0f\\x0c\\xf4\\x0d\\\n\\x0c\\x8d\\x80\\x02\\xc6\\x26\\xa6\\x66\\xe6\\x60\\x60\\x61\\x69\\x65\\x0d\\x14\\\n\\xb0\\xb1\\xb5\\xb3\\x87\\x0a\\x38\\x38\\x3a\\x01\\x05\\x9c\\x5d\\x5c\\xdd\\x2c\\\n\\xc0\\xc0\\xdd\\xc3\\xd3\\x0b\\x64\\x88\\xb7\\x8f\\xaf\\x1f\\x88\\xef\\x1f\\x10\\\n\\x18\\x04\\xb6\\x25\\x38\\x24\\x54\\x2f\\xcc\\x22\\x3c\\x22\\x32\\x2a\\x3a\\x06\\\n\\xe2\\x90\\xd8\\xb8\\xf8\\x84\\xc4\\xa4\\xe4\\x94\\xd4\\x34\\x98\\x53\\xd3\\x33\\\n\\x32\\xb3\\xb2\\xb2\\x73\\xd2\\x90\\x7c\\x93\\x9b\\x97\\x5f\\x80\\xc3\\xdf\\x00\\\n\\x55\\xf3\\x20\\x2b\\x6d\\xfa\\x10\\xb8\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\\n\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\\n\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\\n\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\\n\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\\n\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\\n\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\\n\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\x2d\\x30\\x34\\\n\\x54\\x31\\x35\\x3a\\x35\\x32\\x3a\\x31\\x31\\x2b\\x30\\x32\\x3a\\x30\\x30\\xfa\\\n\\x99\\x02\\x75\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x07\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x90\\\n\\x50\\x4c\\x54\\x45\\x00\\x00\\x00\\x7b\\xa7\\xdc\\x66\\x8b\\xc0\\x7a\\xa4\\xdb\\\n\\xff\\xff\\xff\\x63\\x87\\xbd\\x79\\xa3\\xd9\\xf9\\xfb\\xfc\\xf8\\xfb\\xfc\\x33\\\n\\x34\\x36\\x60\\x85\\xba\\x79\\xa2\\xd8\\xfa\\xfd\\xfd\\xfa\\xfc\\xfc\\x5e\\x81\\\n\\xb7\\x76\\xa0\\xd5\\xfc\\xfd\\xfd\\x5c\\x7e\\xb5\\x75\\x9e\\xd4\\xfc\\xfe\\xfe\\\n\\xfb\\xfd\\xfd\\x5a\\x7c\\xb2\\x73\\x9c\\xd1\\x58\\x7a\\xb0\\x6f\\x97\\xcc\\xfc\\\n\\xff\\xff\\xfd\\xff\\xff\\x54\\x75\\xac\\x6e\\x94\\xca\\xfe\\xff\\xff\\xfa\\xfe\\\n\\xfe\\xf9\\xfc\\xfc\\x53\\x73\\xaa\\x6c\\x92\\xc8\\xfc\\xfc\\xfc\\x51\\x72\\xa9\\\n\\x51\\x71\\xa9\\x68\\x8e\\xc3\\x64\\x88\\xbe\\x61\\x85\\xbb\\x5f\\x83\\xb9\\x5c\\\n\\x7e\\xb4\\x58\\x7b\\xb1\\x57\\x79\\xae\\x56\\x76\\xad\\x54\\x75\\xab\\x53\\x73\\\n\\xa9\\x00\\x00\\x00\\x67\\x14\\x96\\xea\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\x7a\\x49\\x44\\x41\\x54\\x18\\xd3\\x6d\\x8f\\xd7\\x0e\\\n\\xc2\\x30\\x14\\x43\\x0f\\xc5\\x50\\xc2\\x2c\\x84\\xb2\\x69\\x19\\x61\\x8f\\xff\\\n\\xff\\x3c\\xaa\\x46\\x22\\x8c\\xfa\\xe1\\x4a\\x3e\\xb2\\x74\\x6d\\xf8\\x55\\xed\\\n\\x4b\\x11\\xd4\\xf5\\xa9\\x06\\x34\\x15\\xb7\\x24\\x63\\x4c\\x09\\xda\\xd0\\x51\\\n\\xb7\\x57\\x78\\x79\\xd2\\x87\\x81\\x12\\x6f\\xca\\x33\\xf4\\x89\\x00\\xaa\\x12\\\n\\x23\\xd9\\x71\\x00\\x29\\x4c\\x64\\x6d\\x00\\xd3\\x0a\\x30\\xd3\\x7c\\x11\\xde\\\n\\x2e\\x61\\x25\\xad\\x7d\\xb1\\x2c\\xcb\\xb5\\x81\\x6d\\xc1\\x77\\xef\\xea\\x7b\\\n\\x70\\x87\\xe8\\x78\\x3a\\x5f\\xd2\\xeb\\xed\\xfe\\x78\\x3a\\xf7\\x37\\x9e\\x17\\\n\\x3a\\x4b\\x08\\x6c\\x2d\\x5d\\xab\\xcf\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\\n\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x35\\x34\\x3a\\x35\\x30\\x2b\\\n\\x30\\x31\\x3a\\x30\\x30\\x53\\xa0\\x98\\xe3\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\\n\\x32\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x35\\x34\\x3a\\x35\\x30\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x22\\xfd\\x20\\x5f\\x00\\x00\\x00\\x00\\x49\\x45\\\n\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x2c\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x3b\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x94\\xab\\xc8\\xa0\\xa9\\xb4\\xa5\\xa7\\xa9\\\n\\xa0\\xa2\\xa4\\x94\\x9c\\xa7\\x81\\x98\\xb6\\x9c\\xb7\\xda\\xba\\xbf\\xc7\\xd8\\\n\\xdf\\xe7\\xea\\xef\\xf6\\xf9\\xfb\\xfd\\xf1\\xf5\\xfa\\xdb\\xe4\\xef\\xbf\\xc9\\\n\\xd6\\x92\\x9a\\xa3\\x79\\x94\\xb7\\x9f\\xba\\xdd\\xc4\\xca\\xd1\\xf3\\xf6\\xf9\\\n\\xff\\xff\\xff\\xf1\\xf5\\xfb\\xe3\\xec\\xf7\\xe1\\xeb\\xf7\\xee\\xf3\\xfa\\xfa\\\n\\xfc\\xfe\\xdc\\xe4\\xef\\x91\\x9c\\xa8\\x77\\x92\\xb5\\xc7\\xcd\\xd4\\xe5\\xee\\\n\\xf8\\xdd\\xe8\\xf6\\xdc\\xe7\\xf5\\xda\\xe5\\xf5\\xfe\\xfe\\xff\\xdb\\xe4\\xee\\\n\\x8c\\x94\\x9f\\xaa\\xc1\\xdf\\xe5\\xe9\\xee\\xe8\\xef\\xf9\\x52\\x81\\xbe\\x57\\\n\\x8a\\xca\\x5a\\x8e\\xd0\\xd8\\xe5\\xf4\\xb8\\xc3\\xd2\\x79\\x91\\xae\\xc4\\xcd\\\n\\xd8\\xf2\\xf5\\xf9\\xf4\\xf8\\xfc\\xe6\\xef\\xf8\\xe9\\xf0\\xf9\\x52\\x83\\xc0\\\n\\x55\\x86\\xc6\\xdf\\xe9\\xf6\\x51\\x80\\xbd\\x59\\x8d\\xcf\\xed\\xf3\\xfa\\xd6\\\n\\xe0\\xed\\x88\\x91\\x9c\\xd2\\xd4\\xd6\\xfb\\xfd\\xfe\\xec\\xf2\\xfa\\x53\\x84\\\n\\xc1\\x55\\x87\\xc8\\x5b\\x8f\\xd1\\xdb\\xe6\\xf5\\xe0\\xea\\xf6\\x90\\x92\\x95\\\n\\xd3\\xd5\\xd7\\x58\\x8b\\xcb\\x52\\x83\\xc1\\xf2\\xf6\\xfb\\x94\\x96\\x98\\xc8\\\n\\xd0\\xdb\\xf3\\xf6\\xfa\\xf6\\xf9\\xfc\\xef\\xf4\\xfb\\xe1\\xe8\\xf1\\x8e\\x97\\\n\\xa2\\xae\\xc6\\xe3\\xe8\\xec\\xf1\\xeb\\xf1\\xf9\\x54\\x85\\xc5\\xe4\\xed\\xf7\\\n\\xc8\\xd1\\xdc\\x83\\x9b\\xb8\\xd2\\xd7\\xdd\\xf7\\xf8\\xfb\\xe8\\xee\\xf4\\xa3\\\n\\xab\\xb3\\xa8\\xc3\\xe6\\xd4\\xd8\\xde\\xed\\xf1\\xf7\\xb3\\xbb\\xc3\\x8c\\xa7\\\n\\xca\\xef\\xf3\\xf8\\xe1\\xe5\\xec\\xbe\\xc3\\xca\\x94\\xb0\\xd2\\xae\\xc5\\xe2\\\n\\xc7\\xcf\\xda\\xd1\\xd3\\xd5\\xd0\\xd2\\xd4\\xc2\\xcb\\xd6\\xa7\\xbe\\xdc\\x0c\\\n\\x06\\x11\\x9c\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\\n\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\\n\\xcb\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x0a\\x18\\x99\\x98\\x59\\x58\\\n\\xd9\\xe0\\x5c\\x76\\x0e\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\x01\\x08\\x5f\\x50\\\n\\x48\\x58\\x44\\x54\\x4c\\x5c\\x42\\x52\\x4a\\x5a\\x06\\x2c\\x20\\x2b\\x2c\\x22\\\n\\x26\\x2e\\x27\\xaf\\xa0\\xa8\\xa4\\xac\\x02\\xe2\\xab\\xaa\\x89\\xc8\\x89\\xa9\\\n\\x6b\\xc8\\x6b\\x6a\\x69\\x4b\\xea\\xe8\\x02\\x05\\xf4\\xf4\\x0d\\x0c\\x8d\\x8c\\\n\\x4d\\x4c\\xcd\\xcc\\x15\\x2d\\x2c\\xad\\x80\\x02\\xd6\\x36\\x16\\xb6\\x76\\xf6\\\n\\xc6\\xe2\\x66\\x0e\\x8e\\x4e\\x12\\xce\\x40\\x01\\x17\\x1b\\x09\\x31\\x57\\x37\\\n\\x63\\x31\\x0d\\x73\\x05\\x71\\x77\\x0f\\xa0\\x80\\xa7\\x97\\xb7\\x91\\xa2\\x9d\\\n\\x9b\\x98\\x86\\x83\\xbc\\x8f\\xaf\\x1f\\x50\\xc0\\x3f\\x40\\x24\\xd0\\xc8\\x34\\\n\\x28\\xd8\\x58\\x4b\\x5e\\x29\\x24\\x14\\x64\\x4d\\x58\\xb8\\x48\\xa0\\xba\\xba\\\n\\x9c\\x98\\xb8\\x48\\x44\\x24\\xd8\\x1d\\x51\\xd1\\xe1\\x22\\x06\\xb6\\x81\\xee\\\n\\x4a\\x31\\xb1\\x71\\x10\\xa7\\x46\\x85\\x05\\x78\\xd9\\xd8\\xc4\\x27\\x24\\x26\\\n\\xc1\\x7d\\x93\\x9c\\x92\\x9a\\x96\\x9e\\x81\\xdd\\xe3\\x00\\x69\\x16\\x1f\\x56\\\n\\x9e\\xb2\\xd9\\xc2\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\\n\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\\n\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\\n\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x30\\x2d\\x32\\x33\\x54\\x31\\x36\\x3a\\x33\\\n\\x38\\x3a\\x33\\x38\\x2b\\x30\\x32\\x3a\\x30\\x30\\x6c\\x0c\\x10\\x6d\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\\n\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x30\\x2d\\x32\\x33\\x54\\x31\\x36\\x3a\\\n\\x33\\x38\\x3a\\x33\\x38\\x2b\\x30\\x32\\x3a\\x30\\x30\\x1d\\x51\\xa8\\xd1\\x00\\\n\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xa9\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xcf\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xd2\\xd2\\xd2\\xd3\\xd3\\xd3\\xd5\\xd5\\xd5\\\n\\xd6\\xd6\\xd6\\xd7\\xd7\\xd7\\xd8\\xd8\\xd8\\xce\\xce\\xce\\xe8\\xe8\\xe8\\xf4\\\n\\xf4\\xf4\\xfc\\xfc\\xfc\\xf5\\xf5\\xf5\\xeb\\xeb\\xeb\\xc9\\xc9\\xc9\\xff\\xff\\\n\\xff\\xf7\\xf7\\xf7\\xf1\\xf1\\xf1\\xf2\\xf2\\xf2\\xf8\\xf8\\xf8\\xc0\\xc0\\xc0\\\n\\xec\\xec\\xec\\xed\\xed\\xed\\xc3\\xc3\\xc3\\xee\\xee\\xee\\xef\\xef\\xef\\xb3\\\n\\xb3\\xb3\\xdd\\xdd\\xdd\\xe9\\xe9\\xe9\\xc2\\xc2\\xc2\\x76\\x76\\x77\\xab\\xab\\\n\\xab\\x75\\x75\\x76\\xa7\\xa7\\xa7\\xfa\\xfa\\xfa\\xe6\\xe6\\xe6\\xcd\\xcd\\xcd\\\n\\x79\\x79\\x7a\\x75\\x75\\x75\\xea\\xea\\xea\\xf0\\xf0\\xf0\\xd4\\xd4\\xd4\\xa2\\\n\\xa2\\xa2\\xe5\\xe5\\xe5\\x73\\x73\\x74\\x78\\x78\\x79\\x9d\\x9d\\x9d\\xe1\\xe1\\\n\\xe1\\xe4\\xe4\\xe4\\x78\\x78\\x78\\xd1\\xd1\\xd1\\x99\\x99\\x99\\xc6\\xc6\\xc6\\\n\\xfb\\xfb\\xfb\\xe2\\xe2\\xe2\\xe3\\xe3\\xe3\\x73\\x73\\x73\\xe7\\xe7\\xe7\\xfe\\\n\\xfe\\xfe\\xc4\\xc4\\xc4\\xf3\\xf3\\xf3\\xb9\\xb9\\xb9\\x93\\x93\\x93\\xaa\\xaa\\\n\\xaa\\x8e\\x8e\\x8e\\x90\\x90\\x90\\x92\\x92\\x92\\x96\\x96\\x96\\x97\\x97\\x97\\\n\\x9c\\x9c\\x9c\\x9f\\x2e\\xac\\xad\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\\n\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\\n\\x48\\x00\\x00\\x00\\xb4\\x49\\x44\\x41\\x54\\x18\\xd3\\x6d\\xcf\\x59\\x1b\\x81\\\n\\x40\\x18\\x05\\xe0\\x24\\x9a\\x66\\xc6\\xa4\\x65\\x18\\x8d\\x35\\xb2\\x84\\x22\\\n\\xa2\\xec\\xdb\\xff\\xff\\x4d\\xc6\\x23\\xba\\xe9\\xbb\\xfb\\xde\\x9b\\x73\\x8e\\\n\\x24\\x15\\x5e\\x49\\x2e\\x2b\\x95\\x6a\\xfe\\xab\\x40\\x83\\x10\\xe1\\xbf\\xd4\\\n\\x10\\xd1\\xeb\\x86\\x49\\xcc\\x4c\\x2c\\x44\\xb0\\x4d\\x1b\\x4d\\x96\\x49\\xcb\\\n\\x21\\x9c\\xe3\\x76\\x87\\x0a\\xc1\\x15\\x01\\xdd\\xa6\\x06\\xb8\\xd5\\xeb\\xd9\\\n\\x94\\xea\\x48\\x11\\xd0\\x1f\\x70\\x77\\x38\\xf2\\xbc\\x31\\xa6\\x13\\x38\\x15\\\n\\x30\\xd3\\x80\\xcf\\xe6\\x0b\\x8f\\x8f\\x31\\x83\\xb2\\x80\\x65\\x60\\x84\\x42\\\n\\x56\\x80\\x73\\x64\\xac\\x05\\x44\\x9b\\x6d\\xbc\\x0b\\xd9\\xde\\x4d\\x40\\x1a\\\n\\xaa\\x9f\\x98\\x28\\x4e\\x83\\x78\\xc7\\x7c\\x9f\\x4c\\x0e\\xdf\\x22\\x51\\xb0\\\n\\xad\\x27\\xe0\\x98\\xda\\xa7\\x5f\\xd5\\xb3\\xe5\\x18\\xc8\\x55\\x2f\\xf9\\x98\\\n\\xeb\\xed\\xfe\\x78\\xbe\\x8a\\x87\\xbf\\x01\\x74\\xee\\x11\\x46\\xd8\\x9c\\x42\\\n\\x06\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\\n\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\\n\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x33\\x2d\\x30\\x31\\x2d\\x31\\x38\\x54\\x31\\x34\\x3a\\x33\\x38\\x3a\\x30\\\n\\x32\\x2b\\x30\\x31\\x3a\\x30\\x30\\x98\\xf6\\xfd\\x82\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x33\\x2d\\x30\\x31\\x2d\\x31\\x38\\x54\\x31\\x34\\x3a\\x33\\x38\\x3a\\\n\\x30\\x32\\x2b\\x30\\x31\\x3a\\x30\\x30\\xe9\\xab\\x45\\x3e\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x01\\x44\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x04\\x00\\x00\\x00\\xb5\\xfa\\x37\\xea\\\n\\x00\\x00\\x00\\x02\\x62\\x4b\\x47\\x44\\x00\\xff\\x87\\x8f\\xcc\\xbf\\x00\\x00\\\n\\x00\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0b\\x13\\x00\\x00\\x0b\\x13\\x01\\x00\\\n\\x9a\\x9c\\x18\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\xdd\\x06\\x07\\x09\\\n\\x1f\\x03\\x2b\\x61\\x0c\\xe3\\x00\\x00\\x00\\xd5\\x49\\x44\\x41\\x54\\x28\\xcf\\\n\\x85\\x90\\xb1\\x4e\\xc3\\x50\\x0c\\x45\\x8f\\x93\\x47\\x59\\x99\\x60\\x61\\xe8\\\n\\xde\\x11\\x29\\xfc\\x4e\\xbf\\x86\\xbd\\x12\\x12\\xdf\\xc4\\x07\\xf4\\x07\\x18\\\n\\x90\\xe8\\x42\\x5a\\x25\\x4d\\xa2\\xe7\\x97\\xcb\\x90\\x44\\x6d\\x21\\x2a\\xf6\\\n\\x60\\x4b\\xd7\\xbe\\xf2\\xb1\\x89\\xeb\\x91\\xfd\\xa3\\x13\\x86\\x62\\xf6\\x5b\\\n\\xd0\\x68\\x6d\\x3c\\xf2\\x40\\x3e\\xb3\\xba\\xe3\\x43\\x3d\\xc0\\x53\\x5b\\xc6\\\n\\xe4\\xba\\xcc\\x56\\xaf\\x1b\\x96\\x64\\x02\\x8a\\x98\\x6a\\x1d\\xb4\\xd7\\x51\\\n\\xb5\\x6a\\xed\\xf5\\xad\\x2f\\xb9\\x3e\\xc7\\x11\\x28\\x5c\\xad\\x1a\\x35\\xea\\\n\\xd4\\xa8\\x51\\xa5\\x52\\x3b\\xb9\\x8e\\xaa\\xf4\\xb6\\x61\\x69\\x14\\xfe\\x9e\\\n\\xc8\\x89\\x64\\x80\\xe8\\x49\\x74\\xdc\\x4d\\x0c\\xcf\\x61\\x62\\xbd\\x19\\x6e\\\n\\x07\\xc4\\x82\\x92\\x1e\\xe7\\x7e\\xc2\\x3c\\x31\\xda\\x08\\xb4\\x20\\x8d\\x5d\\\n\\x60\\x75\\x49\\x67\\x04\\x72\\x84\\x10\\xc0\\x6a\\xf6\\x93\\xe2\\xe4\\x1b\\xd8\\\n\\xfe\\x15\\xcf\\xde\\xba\\xb5\\xf5\\x4b\\x75\\xeb\\x9c\\x67\\xc4\\x89\\x44\\x1c\\\n\\x47\\x9d\\x81\\xcf\\xd8\\x0f\\x35\\x23\\x60\\x6b\\x2a\\xae\\x38\\xf0\\x03\\x45\\\n\\x24\\x8b\\x0f\\xce\\x77\\x6f\\x52\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\\n\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x64\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x71\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x71\\x71\\x71\\x6f\\x6f\\x6f\\x6d\\x6d\\x6d\\\n\\x52\\x52\\x52\\x4d\\x4d\\x4d\\x49\\x49\\x49\\x6c\\x6c\\x6c\\x69\\x69\\x69\\x57\\\n\\x57\\x57\\x48\\x48\\x48\\x43\\x43\\x43\\x65\\x65\\x65\\x6c\\xba\\xe5\\x74\\xbc\\\n\\xec\\x6e\\xb8\\xeb\\x68\\xb6\\xeb\\xcd\\xcb\\x80\\xea\\xd7\\x80\\x47\\x47\\x47\\\n\\x42\\x42\\x42\\x3d\\x3d\\x3d\\x68\\x68\\x68\\x61\\x61\\x61\\x36\\xbf\\x7f\\x69\\\n\\xc5\\xdd\\x70\\xc2\\xff\\x67\\xbf\\xff\\xac\\xcb\\xae\\xf9\\xe0\\x68\\x41\\x41\\\n\\x41\\x37\\x37\\x37\\x64\\x64\\x64\\x60\\x60\\x60\\x5c\\x5c\\x5c\\x45\\xc4\\x4f\\\n\\x2c\\xba\\x4b\\x60\\xbd\\xd8\\x62\\xba\\xff\\x65\\xb9\\xff\\x7d\\xbb\\xdb\\x3b\\\n\\x3b\\x3b\\x36\\x36\\x36\\x31\\x31\\x31\\x5c\\xcb\\x4f\\x7a\\xd7\\x57\\x6a\\xd1\\\n\\x42\\x5e\\xc7\\x70\\x50\\xb8\\xb6\\x3f\\xae\\xcb\\x2c\\x2c\\x2c\\x5b\\x5b\\x5b\\\n\\x9e\\xe2\\x72\\xa4\\xe3\\x7c\\xa0\\xe3\\x78\\x95\\xe0\\x63\\x95\\xe1\\x5a\\x93\\\n\\xe2\\x55\\x30\\x30\\x30\\x2b\\x2b\\x2b\\x26\\x26\\x26\\x56\\x56\\x56\\x51\\x51\\\n\\x51\\x2a\\x2a\\x2a\\x25\\x25\\x25\\x20\\x20\\x20\\x4c\\x4c\\x4c\\x6e\\xc6\\xf8\\\n\\x77\\xc8\\xff\\x72\\xc5\\xff\\x6c\\xc4\\xff\\xcf\\xd8\\x98\\xd9\\xa2\\x5f\\xb1\\\n\\x49\\x10\\xbb\\x42\\x04\\xaa\\x41\\x05\\x4b\\x4b\\x4b\\x46\\x46\\x46\\xb7\\x95\\\n\\x6b\\xd2\\x76\\x39\\xf7\\xb5\\x8d\\xfe\\xd6\\xb8\\xf5\\xa8\\x72\\xcb\\x6b\\x2d\\\n\\x45\\x45\\x45\\x40\\x40\\x40\\xae\\x54\\x25\\xf6\\xb5\\x8d\\xff\\x92\\x4d\\xff\\\n\\x77\\x11\\xff\\x86\\x21\\xeb\\x8a\\x40\\xb9\\x44\\x03\\xbc\\x42\\x05\\xfe\\xcd\\\n\\xae\\xff\\xff\\xff\\xef\\x7f\\x18\\xbc\\x42\\x04\\x3a\\x3a\\x3a\\x35\\x35\\x35\\\n\\x9d\\xdf\\x6e\\xa3\\xe0\\x77\\x9e\\xe0\\x73\\x93\\xdd\\x5e\\xb5\\x56\\x0c\\xf4\\\n\\x9d\\x63\\xff\\x7f\\x18\\xf8\\x76\\x00\\xee\\x76\\x00\\xe1\\x68\\x03\\xb9\\x45\\\n\\x03\\x34\\x34\\x34\\x8d\\x57\\x38\\xc7\\x64\\x26\\xe6\\x77\\x21\\xea\\x79\\x05\\\n\\xdd\\x64\\x01\\xbd\\x4d\\x04\\x2e\\x2e\\x2e\\x29\\x29\\x29\\x24\\x24\\x24\\xa6\\\n\\x3e\\x04\\xa8\\x3f\\x03\\xa2\\x10\\x6c\\xc0\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\\n\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\\n\\x05\\x1d\\x48\\x00\\x00\\x00\\xcd\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\\n\\x04\\x8c\\x4c\\xcc\\x10\\x06\\x0b\\x2b\\x1b\\x98\\x66\\x62\\xe7\\xe0\\x04\\x03\\\n\\x56\\x2e\\x6e\\xb0\\x00\\x3b\\x07\\x0f\\x2f\\x1f\\xbf\\x80\\xa0\\x90\\xb0\\x88\\\n\\x28\\x58\\x40\\x8c\\x47\\x5c\\x42\\x52\\x4a\\x5a\\x46\\x56\\x8e\\x41\\x1e\\x2c\\\n\\xa0\\xa0\\xa8\\xa4\\xac\\xa2\\xaa\\xa6\\xae\\xa1\\xa9\\xa5\\x0d\\x16\\x50\\x54\\\n\\xe2\\xd4\\xd1\\xd5\\xd3\\x37\\x30\\xd4\\xd2\\x36\\x02\\x0b\\x18\\x73\\xb2\\x98\\\n\\x98\\x9a\\x99\\x5b\\x58\\x5a\\x59\\xdb\\x80\\x05\\x6c\\xed\\xc4\\x20\\xb6\\xd8\\\n\\x3b\\x38\\x82\\x05\\xec\\x9c\\x84\\x9d\\x5d\\x5c\\xdd\\xdc\\x3d\\x3c\\xbd\\xbc\\\n\\xc1\\x02\\x3e\\xbe\\x72\\x20\\x5b\\xfc\\xfc\\x03\\x02\\x83\\x82\\x41\\x02\\x21\\\n\\xa1\\x9a\\x20\\x5b\\xc2\\xc2\\x23\\x22\\xa3\\xa2\\x63\\x80\\x02\\xa1\\x0c\\x5a\\\n\\x20\\x5b\\x62\\xe3\\xe2\\xe3\\xe3\\x13\\x12\\x81\\x02\\x49\\xc9\\x56\\x29\\xa9\\\n\\x69\\xe9\\x19\\x99\\x59\\xd9\\x39\\xb9\\x79\\x40\\x81\\x7c\\x86\\x64\\x90\\x1d\\\n\\x05\\x85\\x45\\xc5\\x25\\xa5\\x20\\x33\\xca\\xca\\x2b\\x20\\xbe\\xad\\xf4\\xaa\\\n\\x62\\x60\\x00\\x00\\xf1\\x21\\x23\\x27\\xc8\\x88\\xea\\xa6\\x00\\x00\\x00\\x1d\\\n\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\\n\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\\n\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\x31\\\n\\x2d\\x31\\x38\\x54\\x31\\x34\\x3a\\x32\\x37\\x3a\\x32\\x33\\x2b\\x30\\x31\\x3a\\\n\\x30\\x30\\x4c\\x21\\x75\\x06\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\\n\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\\n\\x31\\x2d\\x31\\x38\\x54\\x31\\x34\\x3a\\x32\\x37\\x3a\\x32\\x33\\x2b\\x30\\x31\\\n\\x3a\\x30\\x30\\x3d\\x7c\\xcd\\xba\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\\n\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xa4\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xc0\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xdb\\x05\\x00\\xe9\\x63\\x56\\xeb\\x77\\x68\\\n\\xec\\x7e\\x6e\\xed\\x80\\x70\\xe2\\x38\\x2e\\xeb\\x76\\x67\\xee\\x84\\x70\\xad\\\n\\xad\\xad\\x98\\x98\\x98\\x9f\\x9f\\x9f\\xc5\\xc5\\xc5\\x90\\x90\\x90\\xe9\\x65\\\n\\x58\\xee\\x87\\x73\\xf0\\x79\\x46\\xa0\\xa0\\xa0\\xa9\\xa9\\xa9\\xaa\\xaa\\xaa\\\n\\xc8\\xc8\\xc8\\x93\\x93\\x93\\xec\\x7d\\x6d\\xf2\\x94\\x76\\x9a\\x9a\\x9a\\xb3\\\n\\xb3\\xb3\\xc0\\xc0\\xc0\\xca\\xca\\xca\\xe1\\xe1\\xe1\\xc6\\xc6\\xc6\\xed\\x7f\\\n\\x6f\\xb1\\xb1\\xb1\\xa3\\xa3\\xa3\\xb4\\xb4\\xb4\\xd1\\xd1\\xd1\\xd4\\xd4\\xd4\\\n\\xe3\\xe3\\xe3\\xf3\\x9b\\x77\\xa6\\xa6\\xa6\\xbd\\xbd\\xbd\\xcf\\xcf\\xcf\\xcb\\\n\\xcb\\xcb\\xb2\\xb2\\xb2\\x9b\\x9b\\x9b\\xb5\\xb5\\xb5\\x65\\x65\\x65\\xc1\\xc1\\\n\\xc1\\xd3\\xd3\\xd3\\x85\\x85\\x85\\x83\\x83\\x83\\xaf\\xaf\\xaf\\x61\\x61\\x61\\\n\\xee\\x86\\x72\\xce\\xce\\xce\\xa2\\xa2\\xa2\\x86\\x86\\x86\\x88\\x88\\x88\\x8c\\\n\\x8c\\x8c\\xb6\\xb6\\xb6\\x6f\\x6f\\x6f\\x84\\x84\\x84\\xb7\\xb7\\xb7\\x82\\x82\\\n\\x82\\xff\\xff\\xff\\x98\\x53\\x79\\xad\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\xbe\\x49\\x44\\x41\\x54\\x18\\xd3\\x4d\\x8f\\x6b\\x1b\\\n\\x42\\x40\\x10\\x46\\x91\\x52\\x42\\xad\\x11\\xa9\\x84\\xb6\\xa2\\x90\\x4b\\x17\\\n\\xb1\\xf1\\xff\\x7f\\x56\\x16\\x5d\\xe6\\xdb\\x39\\x33\\xf3\\xcc\\x3b\\x0c\\xf3\\\n\\x2b\\x96\\xd6\\x3f\\x71\\x03\\x7e\\xf8\\x15\\xec\\x48\\x18\\x4f\\xc4\\xa9\\x24\\\n\\x7f\\xda\\xca\\x6c\\x8e\\x54\\x00\\x6d\\xd1\\xb3\\x6e\\x2c\\x55\\x30\\x57\\xeb\\\n\\x8d\\xd5\\xf1\\xd6\\x76\\xc0\\x95\\x76\\x18\\xef\\xb5\\x56\\xe8\\x87\\x23\\x78\\\n\\x3e\\x3e\\x9d\\x83\\x30\\xa2\\xac\\x18\\x0e\\x5c\\x62\\x6c\\xcb\\x49\\x9a\\x5d\\\n\\xe9\\xc2\\x2d\\x00\\x2f\\xbe\\x3f\\xf2\\xf4\\x59\\x94\\xa4\\x11\\x82\\xa9\\xba\\\n\\x3e\\x7e\\xbc\\xf2\\xa2\\xac\\x42\\x2a\\xc6\\x08\\x24\\x6c\\xe7\\x79\\x50\\xa1\\\n\\x9a\\x10\\x86\\xe5\\x26\\xaa\\xb9\\x3b\\xc9\\x69\\x51\\x15\\xa4\\x3d\\x31\\x10\\\n\\x61\\x85\\xcf\\xc9\\xb3\\x44\\xa4\\x0b\\xc5\\x4f\\x61\\x8d\\x83\\x66\\xa0\\xee\\\n\\x53\\x0f\\x25\\x6d\\xb3\\x0f\\xb3\\x32\\x24\\x9f\\x37\\xe4\\x85\\xa5\\x45\\x57\\\n\\x42\\x3a\\xf1\\x06\\xc1\\x9d\\x15\\x15\\x4d\\xa6\\x64\\x8b\\x00\\x00\\x00\\x1d\\\n\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\\n\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\\n\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\\n\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\\n\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\\n\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\\n\\x35\\x2d\\x30\\x33\\x54\\x30\\x38\\x3a\\x32\\x34\\x3a\\x35\\x33\\x2b\\x30\\x32\\\n\\x3a\\x30\\x30\\xea\\xb3\\x01\\x1f\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\\n\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x94\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xaa\\\n\\x50\\x4c\\x54\\x45\\x00\\x00\\x00\\x9c\\x9c\\x9c\\x9b\\x9b\\x9b\\x99\\x99\\x99\\\n\\xe4\\xe4\\xe4\\xee\\xee\\xee\\x96\\x96\\x96\\xe2\\xe2\\xe2\\xe7\\xe7\\xe7\\xb9\\\n\\xb9\\xb9\\x93\\x93\\x93\\x98\\x98\\x98\\xcf\\xcf\\xcf\\x92\\x92\\x92\\x8e\\x8e\\\n\\x8e\\x8c\\x8c\\x8c\\x8a\\x8a\\x8a\\xdd\\xdd\\xdd\\xc5\\xc5\\xc5\\x8f\\x8f\\x8f\\\n\\x8d\\x8d\\x8d\\xac\\xac\\xac\\xd7\\xd7\\xd7\\x87\\x87\\x87\\xd4\\xd4\\xd4\\xc8\\\n\\xc8\\xc8\\xbc\\xbc\\xbc\\xba\\xba\\xba\\xc2\\xc2\\xc2\\xc4\\xc4\\xc4\\x85\\x85\\\n\\x85\\x8b\\xad\\xe3\\x88\\xa7\\xda\\xc7\\xc7\\xc7\\xcc\\xcc\\xcc\\xc6\\xc6\\xc6\\\n\\xc3\\xc3\\xc3\\xc0\\xc0\\xc0\\x84\\x84\\x84\\x89\\xa9\\xe1\\x9c\\xb9\\xe7\\x98\\\n\\xb6\\xe6\\x8c\\xa9\\xd8\\xd2\\xd2\\xd2\\xb5\\xb5\\xb5\\x76\\xa9\\x42\\x65\\x9f\\\n\\x31\\x83\\x83\\x83\\x87\\xa9\\xe1\\x9c\\xb7\\xe6\\xbc\\xcf\\xef\\xba\\xce\\xee\\\n\\x8c\\xae\\xe2\\x7b\\x9b\\xd2\\x88\\x88\\x88\\x6e\\xa4\\x34\\x81\\xb3\\x5a\\x57\\\n\\x98\\x28\\x85\\xa7\\xe1\\x99\\xb7\\xe6\\xbb\\xce\\xee\\xa7\\xc0\\xe9\\x6f\\xa5\\\n\\x3d\\x6f\\xa4\\x38\\x69\\xa2\\x34\\x63\\x9e\\x30\\x7c\\xaf\\x55\\xaa\\xcb\\x91\\\n\\x74\\xab\\x4f\\x47\\x8f\\x17\\x83\\xa5\\xdf\\x98\\xb4\\xe6\\xba\\xcd\\xee\\xa5\\\n\\xbf\\xe9\\x96\\xb4\\xe5\\x6b\\xa3\\x37\\xb0\\xce\\x96\\xad\\xcd\\x94\\xa8\\xcb\\\n\\x90\\x90\\xbc\\x74\\xa1\\xc7\\x8a\\x68\\xa5\\x46\\x37\\x87\\x07\\x7f\\xa5\\xdf\\\n\\x94\\xb3\\xe6\\xb8\\xcc\\xee\\xa5\\xbe\\xe9\\x94\\xb3\\xe5\\x9b\\xb7\\xe6\\x63\\\n\\x9f\\x31\\x8e\\xba\\x6f\\x89\\xb8\\x6b\\x85\\xb6\\x66\\x80\\xb3\\x61\\x82\\xb5\\\n\\x67\\x98\\xc2\\x83\\x5c\\xa0\\x3c\\x26\\x7f\\x00\\x79\\x9f\\xdd\\xb7\\xcc\\xed\\\n\\xa3\\xbd\\xe8\\x92\\xb1\\xe4\\x9a\\xb6\\xe6\\xac\\xc3\\xea\\x5b\\x9b\\x29\\xa9\\\n\\xca\\x90\\xa5\\xc8\\x8d\\xa1\\xc6\\x8a\\x9e\\xc5\\x88\\x85\\xb6\\x6a\\x97\\xc2\\\n\\x82\\x66\\xa5\\x48\\x41\\x8a\\x1b\\x6f\\x97\\xdb\\xb3\\xc8\\xed\\x9b\\xb8\\xe7\\\n\\xab\\xc3\\xea\\x73\\x9c\\xde\\x52\\x97\\x21\\x4a\\x91\\x1b\\x44\\x8f\\x15\\x3c\\\n\\x8b\\x0f\\x5e\\x9f\\x3a\\x96\\xc1\\x80\\x62\\xa3\\x46\\x3d\\x7a\\x01\\x65\\x91\\\n\\xd9\\x81\\xa4\\xdf\\xab\\xc2\\xea\\xa8\\xc0\\xea\\x71\\x99\\xdc\\x47\\x7b\\xd1\\\n\\x2b\\x83\\x01\\x5f\\xa1\\x43\\x1f\\x7b\\x00\\x57\\x87\\xd5\\x51\\x83\\xd5\\x4b\\\n\\x7d\\xd1\\x45\\x79\\xd1\\x21\\x7d\\x00\\x1e\\x7b\\x03\\x00\\x00\\x00\\x16\\x62\\\n\\x73\\x31\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xc4\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x80\\x03\\x46\\x26\\x66\\x06\\x64\\xc0\\\n\\xc4\\xc2\\xca\\x86\\xc2\\x67\\xe7\\xe0\\xe4\\x42\\x16\\xe0\\x66\\xe1\\xe1\\x65\\\n\\xe0\\xe3\\x17\\x80\\x0b\\xb0\\x09\\x0a\\x09\\x8b\\x88\\x8a\\x89\\xc3\\x05\\xb8\\\n\\x24\\x24\\xa5\\xa4\\x65\\x64\\xe5\\x20\\x3c\\x79\\x05\\x5e\\x45\\x25\\x45\\x65\\\n\\x15\\x55\\x35\\x08\\x5f\\x5d\\x43\\x53\\x4b\\x5b\\x47\\x57\\x4f\\x4e\\x1f\\xc2\\\n\\x37\\x30\\x34\\x32\\x36\\x31\\x35\\x33\\xb7\\xb0\\x84\\xf0\\xad\\xac\\x6d\\x6c\\\n\\xed\\xec\\x1d\\x1c\\x9d\\x9c\\x5d\\x5c\\x41\\x7c\\x37\\x77\\x0f\\x4f\\x2f\\x6f\\\n\\x1f\\x5f\\x67\\x3f\\xff\\x80\\xc0\\x20\\x06\\x86\\xe0\\x90\\xd0\\xb0\\xf0\\x88\\\n\\x48\\xdf\\xa8\\xe8\\x98\\xd8\\xb8\\xf8\\x84\\x44\\x86\\xa4\\xe4\\x94\\xd4\\xb4\\\n\\xf4\\x8c\\xcc\\xac\\xec\\x9c\\xdc\\xbc\\xfc\\x02\\x06\\x86\\xc2\\xa2\\x62\\xf7\\\n\\x92\\xd2\\xb2\\xf2\\x8a\\xca\\xaa\\xea\\x9a\\x5a\\xa0\\x11\\x75\\xf5\\x0d\\x8d\\\n\\x4d\\xcd\\x20\\xc3\\x5a\\x5a\\xdb\\xc0\\x96\\xb4\\x77\\x74\\x76\\x81\\x19\\xdd\\\n\\x3d\\x20\\x12\\x00\\xbc\\xa0\\x27\\xca\\x04\\x77\\x61\\xcb\\x00\\x00\\x00\\x1d\\\n\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\\n\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\\n\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\\n\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\\n\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\\n\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\\n\\x33\\x2d\\x33\\x30\\x54\\x31\\x31\\x3a\\x31\\x32\\x3a\\x33\\x39\\x2b\\x30\\x32\\\n\\x3a\\x30\\x30\\xe1\\x44\\x4e\\x6b\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\\n\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x11\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x99\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x6b\\xa3\\x37\\x65\\x9f\\x31\\x63\\x9f\\x31\\\n\\x81\\xb3\\x5a\\x57\\x98\\x28\\x6f\\xa5\\x3d\\x6d\\xa3\\x37\\x67\\xa1\\x33\\x61\\\n\\x9d\\x2f\\x7c\\xaf\\x55\\xaa\\xcb\\x91\\x74\\xab\\x4f\\x45\\x8f\\x17\\xb0\\xce\\\n\\x96\\xad\\xcd\\x94\\xa8\\xcb\\x90\\x90\\xbc\\x74\\xa1\\xc7\\x8a\\x68\\xa5\\x46\\\n\\x35\\x87\\x07\\x8e\\xba\\x6f\\x89\\xb8\\x6b\\x85\\xb6\\x66\\x80\\xb3\\x61\\x82\\\n\\xb5\\x67\\x98\\xc2\\x83\\x5c\\xa0\\x3c\\x25\\x7f\\x00\\x5b\\x9b\\x29\\xa9\\xca\\\n\\x90\\xa5\\xc8\\x8d\\xa1\\xc6\\x8a\\x9e\\xc5\\x88\\x85\\xb6\\x6a\\x97\\xc2\\x82\\\n\\x66\\xa5\\x48\\x21\\x7d\\x00\\x51\\x97\\x21\\x49\\x91\\x1b\\x43\\x8f\\x15\\x3b\\\n\\x8b\\x0f\\x5e\\x9f\\x3a\\x96\\xc1\\x80\\x62\\xa3\\x46\\x1f\\x7d\\x00\\x2b\\x83\\\n\\x01\\x5f\\xa1\\x43\\x1f\\x7b\\x00\\x1e\\x7b\\x03\\xff\\xff\\xff\\x7f\\x93\\x5d\\\n\\xf0\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\\n\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x52\\x49\\\n\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xa0\\x1e\\x60\\x64\\x42\\x13\\x60\\x66\\x61\\\n\\x45\\x70\\xd8\\xd8\\x39\\x38\\xb9\\xb8\\x79\\x78\\x11\\xca\\xf9\\xf8\\xb9\\x05\\\n\\x04\\x85\\x84\\x45\\xe0\\xca\\xf9\\x45\\xc5\\xc4\\x25\\x24\\xa5\\xa4\\x65\\xa0\\\n\\x02\\xb2\\x72\\xf2\\x0a\\x8a\\x4a\\xca\\x2a\\xaa\\x30\\x15\\x6a\\xea\\x1a\\x9a\\\n\\x5a\\xda\\x3a\\xba\\x28\\xb6\\xe8\\xe9\\x1b\\xa0\\x5a\\xab\\x6a\\x48\\xbe\\x1f\\\n\\x00\\x28\\x57\\x05\\x0d\\x66\\x76\\x30\\x5f\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\\n\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\\n\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\\n\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x02\\x7e\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x06\\x00\\x00\\x00\\x1f\\xf3\\xff\\x61\\\n\\x00\\x00\\x00\\x01\\x73\\x52\\x47\\x42\\x00\\xae\\xce\\x1c\\xe9\\x00\\x00\\x00\\\n\\x06\\x62\\x4b\\x47\\x44\\x00\\xff\\x00\\xff\\x00\\xff\\xa0\\xbd\\xa7\\x93\\x00\\\n\\x00\\x00\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0b\\x13\\x00\\x00\\x0b\\x13\\x01\\\n\\x00\\x9a\\x9c\\x18\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\xdd\\x0c\\x14\\\n\\x0a\\x0d\\x0f\\x50\\x79\\x6e\\x92\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x43\\\n\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\\n\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\xef\\x64\\x25\\x6e\\\n\\x00\\x00\\x01\\xd5\\x49\\x44\\x41\\x54\\x38\\xcb\\xed\\xd1\\xb1\\x8b\\x92\\x71\\\n\\x1c\\xc7\\xf1\\xf7\\x73\\xf7\\x78\\x46\\x22\\xe2\\x2d\\xa2\\x20\\x82\\x8b\\x90\\\n\\xb8\\x3c\\xb4\\x18\\x84\\x8b\\x2e\\x26\\x87\\xb8\\x28\\x11\\x2e\\x0d\\x2e\\x42\\\n\\x42\\xa3\\x6e\\x69\\x10\\x28\\x84\\x43\\xe4\\x72\\x50\\x10\\x71\\x63\\xa1\\x4b\\\n\\x0e\\x39\\x34\\x45\\x36\\xd4\\x70\\x60\\xf0\\xb4\\xd8\\xef\\xc1\\xa4\\x8c\\xf4\\\n\\x09\\x7c\\x9e\\x47\\x9f\\x96\\xbb\\xa4\\x4b\\xff\\x83\\x3e\\xe3\\xf7\\x03\\x2f\\\n\\xf8\\xf0\\x85\\xff\\x91\\x2e\\x1e\\x1a\\x8d\\x86\\xed\\xf7\\xfb\\x51\\x55\\x95\\\n\\x7a\\xbd\\x2e\\x01\\xd4\\x6a\\x35\\x3b\\x1c\\x0e\\xa3\\x69\\x1a\\xd5\\x6a\\x55\\\n\\xda\\x0a\\x64\\x32\\x19\\x3b\\x95\\x4a\\x91\\xcf\\xe7\\xd1\\x75\\x9d\\xf1\\x78\\\n\\xcc\\x60\\x30\\xc0\\x30\\x0c\\x8a\\xc5\\x22\\xb2\\x2c\\xa3\\x69\\x1a\\xc3\\xe1\\\n\\x90\\x7e\\xbf\\x4f\\xb7\\xdb\\x95\\x00\\xe4\\x73\\x20\\x12\\x89\\x90\\x4c\\x26\\\n\\xa9\\x54\\x2a\\xcc\\xe7\\x73\\x02\\x81\\x00\\xb1\\x58\\x0c\\x4d\\xd3\\x68\\x36\\\n\\x9b\\x08\\x21\\x70\\xbb\\xdd\\x64\\xb3\\x59\\x22\\x91\\x08\\xdd\\x6e\\x97\\x3f\\\n\\x80\\xa2\\x28\\xb6\\xc7\\xe3\\x21\\x1a\\x8d\\x4a\\x00\\x89\\x44\\xc2\\x2e\\x14\\\n\\x0a\\x78\\xbd\\x5e\\x16\\x8b\\x05\\xd3\\xe9\\x94\\x76\\xbb\\xcd\\x8d\\x3b\\xc7\\\n\\x4c\\x57\\x6b\\x3c\\x9e\\x11\\x8a\\xa2\\xd8\\xf1\\x78\\x7c\\x33\\xa1\\x54\\x2a\\\n\\xd9\\x9d\\x4e\\x47\\xca\\xe5\\x72\\xf6\\x6c\\x36\\xc3\\xe1\\x70\\xe0\\x72\\xb9\\\n\\x00\\xd0\\x75\\x1d\\xd3\\x34\\xf1\\x7a\\xbd\\x3c\\x7d\\x76\\xc2\\xdd\\x4a\\x99\\\n\\x6b\\x85\\x7b\\xbc\\x7e\\xfb\\x79\\x33\\x41\\x08\\x41\\xab\\xd5\\xb2\\x83\\xc1\\\n\\x20\\xb2\\x2c\\x33\\x99\\x4c\\x18\\x8d\\x46\\x38\\x9d\\x4e\\x42\\xa1\\x10\\x3e\\\n\\x9f\\x0f\\xcb\\xb2\\xe8\\x3c\\x6a\\x23\\x84\\x60\\xfa\\xc3\\x40\\x92\\xd6\\x7f\\\n\\x7f\\x21\\x9d\\x4e\\xdb\\x81\\x40\\x00\\xa7\\xd3\\x09\\xc0\\x83\\xe6\\x43\\x5c\\\n\\x97\\x64\\xca\\xe5\\x32\\x00\\xcb\\xe5\\x12\\x21\\x04\\xbd\\x5e\\x8f\\xfb\\x27\\\n\\x2a\\xef\\x4f\\xc7\\xff\\xbe\\xf1\\x3c\\x8f\\x5f\\x4d\\xec\\x5b\\xd7\\x0f\\x79\\\n\\xf9\\xee\\xfb\\xd6\\xfe\\xc3\\xa7\\x19\\x5f\\x84\\xb6\\x99\\x70\\x31\\xfb\\xfb\\\n\\x7b\\x00\\x1c\\x5d\\x3d\\xdc\\xda\\x0f\\x4f\\xa7\\x18\\x86\\xb5\\x1b\\x58\\xad\\\n\\xd6\\x00\\xbc\\x50\\x9f\\x60\\xad\\x2d\\xac\\x95\\x85\\xb9\\xb6\\x30\\x57\\x26\\\n\\xe6\\xda\\xe2\\x60\\xef\\x88\\x6f\\x3f\\xf5\\xdd\\x80\\x75\\x06\\xdc\\xbc\\x72\\\n\\x7b\\x6b\\x5f\\xfb\\xa8\\xf2\\x6b\\x69\\xec\\x06\\xcc\\x33\\xe0\\xf9\\x9b\\xaf\\\n\\x5b\\xfb\\xcb\\x07\\x20\\x4b\\x12\\xbf\\x01\\xfa\\x11\\xc1\\x7b\\xe3\\x21\\x5a\\\n\\x8b\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x86\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xa4\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xc0\\xd8\\xf7\\xbe\\xd7\\xf6\\xbc\\xd5\\xf4\\\n\\xb9\\xd3\\xf3\\xbd\\xd6\\xf5\\xdc\\xe9\\xf9\\xdd\\xe8\\xf6\\xda\\xe5\\xf3\\xdc\\\n\\xe7\\xf5\\xd6\\xe4\\xf5\\xac\\xc8\\xeb\\xb8\\xd2\\xf2\\xdf\\xea\\xf7\\xd0\\xde\\\n\\xee\\xa7\\xc1\\xe3\\x89\\xae\\xd8\\x86\\xac\\xd7\\x9c\\xbb\\xdd\\xc7\\xd6\\xeb\\\n\\xd9\\xe6\\xf3\\x9f\\xbe\\xe3\\xb3\\xce\\xef\\xdd\\xe9\\xf6\\xc6\\xd8\\xec\\x81\\\n\\xac\\xd7\\x9a\\xbb\\xdc\\xe3\\xec\\xf6\\xe2\\xec\\xf5\\xae\\xc8\\xe4\\x7b\\xa7\\\n\\xd2\\xba\\xce\\xe6\\xd5\\xe2\\xf1\\x91\\xb3\\xdb\\xd4\\xe3\\xf4\\xcd\\xdc\\xef\\\n\\x7e\\xa8\\xd5\\x77\\xa0\\xd0\\xf5\\xf8\\xfb\\xf5\\xf8\\xfc\\x81\\xa8\\xd1\\x7b\\\n\\xa4\\xcf\\xc3\\xd5\\xea\\xc2\\xd4\\xea\\xa3\\xc1\\xe6\\xd9\\xe5\\xf3\\x9e\\xbb\\\n\\xdf\\x75\\xa0\\xcf\\x72\\x9e\\xcd\\xe3\\xeb\\xf5\\xb4\\xcb\\xe4\\xbf\\xd3\\xe7\\\n\\xf6\\xf8\\xfb\\xbf\\xd3\\xe5\\x6b\\x98\\xc4\\x91\\xb4\\xd6\\xd2\\xe0\\xee\\x78\\\n\\x9e\\xcc\\x99\\xb9\\xe0\\xda\\xe5\\xf2\\x7e\\xa6\\xd1\\x71\\x9d\\xcc\\x6c\\x9a\\\n\\xc7\\x6b\\x98\\xc5\\xb6\\xcc\\xe2\\xee\\xf3\\xf8\\xe8\\xee\\xf6\\xa1\\xbd\\xd9\\\n\\x68\\x94\\xc2\\x71\\x9b\\xc5\\xd6\\xe2\\xf0\\x6c\\x95\\xc5\\x8f\\xb0\\xd9\\xd9\\\n\\xe4\\xf2\\x7a\\xa5\\xd1\\x6b\\x99\\xc5\\x6a\\x97\\xc4\\x69\\x96\\xc4\\xf2\\xf6\\\n\\xfa\\xe1\\xea\\xf3\\x6d\\x95\\xc2\\x65\\x8f\\xbe\\x64\\x8f\\xbe\\x6d\\x95\\xc0\\\n\\xd5\\xe3\\xef\\x61\\x8c\\xbf\\x84\\xa7\\xd3\\xd3\\xe1\\xef\\x95\\xb5\\xd9\\x6c\\\n\\x98\\xc7\\x69\\x95\\xc3\\x67\\x93\\xc1\\x66\\x90\\xbf\\x63\\x8b\\xbb\\x63\\x8a\\\n\\xb9\\x62\\x8a\\xb8\\x86\\xa7\\xcb\\xcc\\xdc\\xea\\x57\\x83\\xb8\\xb9\\xcc\\xe4\\\n\\xc5\\xd6\\xea\\x71\\x99\\xc7\\xec\\xf1\\xf7\\xea\\xf0\\xf6\\x5f\\x89\\xb7\\x63\\\n\\x89\\xb5\\xbb\\xce\\xe2\\xa6\\xbd\\xd9\\x6a\\x92\\xc3\\xc9\\xd8\\xea\\xba\\xcd\\\n\\xe3\\x6b\\x94\\xc0\\x62\\x8c\\xba\\x94\\xb0\\xcf\\x61\\x87\\xb2\\xaa\\xc0\\xda\\\n\\xc0\\xd1\\xe4\\x46\\x75\\xae\\x5b\\x87\\xbb\\xc4\\xd5\\xe7\\xbf\\xd2\\xe5\\x85\\\n\\xa6\\xc9\\x67\\x8e\\xb8\\x65\\x8a\\xb6\\x80\\xa1\\xc5\\xba\\xcc\\xe0\\xbe\\xd0\\\n\\xe3\\x40\\x70\\xab\\x4e\\x7c\\xb3\\xa3\\xbb\\xd7\\xca\\xda\\xe9\\xd1\\xe0\\xec\\\n\\xc8\\xd8\\xe8\\x9c\\xb5\\xd3\\x3a\\x6c\\xa7\\x3f\\x70\\xaa\\x3c\\x6d\\xa8\\x3a\\\n\\x6b\\xa7\\x37\\x69\\xa5\\xff\\xff\\xff\\x41\\xdd\\xd3\\x26\\x00\\x00\\x00\\x01\\\n\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\\n\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xbc\\x49\\x44\\x41\\x54\\x18\\xd3\\\n\\x63\\x60\\xc0\\x0e\\x18\\x99\\x98\\x59\\x90\\xb8\\xac\\x6c\\xec\\x1c\\x1c\\x9c\\\n\\x5c\\xdc\\x30\\x3e\\x0f\\x2f\\x1f\\xbf\\x80\\xa0\\x90\\xb0\\x88\\x28\\x84\\x2f\\\n\\x26\\x2e\\x21\\x29\\x25\\x2d\\x23\\x2b\\x27\\xaf\\xa0\\x08\\x16\\x50\\x52\\x56\\\n\\x51\\x55\\x53\\x57\\x57\\xd3\\xd0\\xd4\\xd2\\x06\\xf1\\x75\\x74\\xf5\\xf4\\x0d\\\n\\x0c\\x8d\\x8c\\x4d\\x4c\\xcd\\xcc\\x2d\\x2c\\x81\\x02\\x56\\xd6\\x36\\xb6\\x76\\\n\\xf6\\x0e\\x8e\\x4e\\xce\\x2e\\xae\\x6e\\xee\\x40\\x01\\x0f\\x4f\\x2f\\x6f\\x1f\\\n\\x5f\\x3f\\xff\\x80\\xc0\\xa0\\xe0\\x90\\x50\\xa0\\x40\\x58\\x78\\x44\\x64\\x54\\\n\\x74\\x4c\\x4c\\x6c\\x5c\\x7c\\x42\\x62\\x12\\xc8\\x90\\xe4\\x94\\xd4\\x98\\x98\\\n\\xb4\\xf4\\x8c\\x8c\\xcc\\xac\\x6c\\xb0\\x2d\\x39\\xb9\\x79\\xf9\\x05\\x85\\x85\\\n\\x19\\x45\\xc5\\x25\\xa5\\x10\\x87\\x94\\x95\\x57\\x54\\x56\\x55\\xd7\\xd4\\xd6\\\n\\xd5\\xc3\\x9c\\xda\\xd0\\xd8\\xd4\\xdc\\xdc\\xd2\\xda\\x86\\xe4\\x9b\\xf6\\x8e\\\n\\xce\\x2e\\x1c\\xfe\\x06\\x00\\x5e\\xbf\\x28\\xa5\\xbb\\xf5\\xd0\\x9a\\x00\\x00\\\n\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\\n\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\\n\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\\n\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\\n\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\\n\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\\n\\x2d\\x30\\x35\\x2d\\x30\\x34\\x54\\x31\\x35\\x3a\\x35\\x39\\x3a\\x30\\x32\\x2b\\\n\\x30\\x32\\x3a\\x30\\x30\\xff\\x3b\\xe3\\x81\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\\n\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xa9\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xf6\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x9e\\x9e\\x9e\\xcd\\xcd\\xc7\\xe4\\xe4\\xdb\\\n\\xe5\\xe5\\xdb\\xe5\\xe5\\xdc\\xe6\\xe6\\xdd\\xe7\\xe7\\xde\\xe8\\xe8\\xdf\\xe8\\\n\\xe8\\xe0\\xd3\\xd3\\xcd\\xdf\\xdf\\xd6\\xc6\\xc6\\xc4\\xc1\\xc1\\xc1\\xc3\\xc3\\\n\\xc3\\xc4\\xc4\\xc4\\xc5\\xc5\\xc5\\xc6\\xc6\\xc6\\xc8\\xc8\\xc8\\xc9\\xc9\\xc9\\\n\\xcd\\xcd\\xcd\\xdf\\xdf\\xd7\\xc9\\xc9\\xc7\\xca\\xca\\xca\\xcc\\xcc\\xcc\\xd1\\\n\\xd1\\xd0\\xea\\xea\\xe3\\xe1\\xe1\\xd9\\xcc\\xcc\\xcb\\xc7\\xc7\\xc7\\xcb\\xcb\\\n\\xcb\\xce\\xce\\xce\\xd0\\xd0\\xd0\\xd1\\xd1\\xd1\\xd4\\xd4\\xd3\\xeb\\xeb\\xe5\\\n\\xe2\\xe2\\xdb\\xcf\\xcf\\xcd\\xcf\\xcf\\xcf\\xd2\\xd2\\xd2\\xcc\\x99\\x7e\\xc2\\\n\\x5d\\x25\\xbc\\x43\\x05\\xbf\\x58\\x1d\\xab\\x73\\x54\\xbe\\xbe\\xbb\\xec\\xec\\\n\\xe6\\xed\\xed\\xe6\\xed\\xed\\xe7\\xee\\xee\\xe8\\xef\\xef\\xe9\\xef\\xef\\xea\\\n\\xdb\\xa9\\x8b\\xd2\\x76\\x3c\\xf7\\xb5\\x8d\\xfe\\xd6\\xb8\\xf5\\xa8\\x72\\xcb\\\n\\x6c\\x2f\\xaa\\x77\\x5c\\xb5\\x50\\x18\\xf6\\xb5\\x8d\\xff\\x92\\x4d\\xff\\x77\\\n\\x11\\xff\\x86\\x21\\xeb\\x8a\\x40\\xb6\\x50\\x17\\xbc\\x42\\x04\\xfe\\xcd\\xae\\\n\\xff\\xff\\xff\\xef\\x7f\\x18\\xb9\\x45\\x03\\xf4\\x9d\\x63\\xff\\x7f\\x18\\xf8\\\n\\x76\\x00\\xee\\x76\\x00\\xe1\\x68\\x03\\xc3\\x57\\x1a\\xc9\\x64\\x25\\xe6\\x77\\\n\\x21\\xea\\x79\\x05\\xdd\\x64\\x01\\xbd\\x4d\\x04\\xba\\x3e\\x31\\x86\\x00\\x00\\\n\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\\n\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x8d\\x49\\x44\\x41\\x54\\\n\\x18\\xd3\\x63\\x60\\xa0\\x0a\\x60\\x44\\x02\\x60\\x3e\\x13\\x33\\x33\\x0b\\x2b\\\n\\x2b\\x1b\\x1b\\x3b\\x07\\x27\\x17\\x48\\x84\\x91\\x9b\\x87\\x97\\x97\\x8f\\x5f\\\n\\x40\\x50\\x48\\x58\\x84\\x13\\x2c\\x20\\x2a\\xc6\\x07\\xe2\\x89\\x4b\\x88\\x48\\\n\\x4a\\x81\\x05\\xa4\\x65\\x64\\x85\\xc4\\xe5\\x44\\xe4\\x15\\x14\\x95\\x94\\xc1\\\n\\x02\\x2a\\xaa\\x72\\x12\\xf2\\x6a\\x0a\\xea\\x1a\\x9a\\x5a\\xda\\x3a\\x40\\xbe\\\n\\xae\\x9e\\xbe\\x81\\xa1\\x91\\x91\\xb1\\x89\\xa9\\x99\\xb9\\x85\\xa5\\x15\\xc2\\\n\\x52\\x6b\\x1b\\x5b\\x3b\\x7b\\x07\\x47\\x84\\x73\\x9c\\x9c\\x5d\\x5c\\x5c\\x5c\\\n\\x9d\\x10\\x02\\x6e\\xee\\x1e\\x9e\\x5e\\xde\\x6e\\x08\\x01\\x1f\\x5f\\x3f\\xff\\\n\\x80\\x40\\x14\\x3f\\xb8\\x39\\x01\\xe5\\x01\\x1c\\x74\\x10\\x66\\xac\\x3a\\x40\\\n\\xe9\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\\n\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\\n\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\\n\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x32\\x2d\\x30\\x33\\x2d\\x33\\x30\\x54\\x31\\x30\\x3a\\x30\\x36\\x3a\\\n\\x31\\x33\\x2b\\x30\\x32\\x3a\\x30\\x30\\x12\\xe2\\xb0\\x67\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\xa8\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xda\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xec\\xce\\x40\\xeb\\xcc\\x3f\\xea\\xcb\\x3e\\\n\\xe9\\xc9\\x3c\\xe9\\xc7\\x3b\\xe8\\xc4\\x3a\\xe7\\xc2\\x38\\xe6\\xc0\\x36\\xe5\\\n\\xbd\\x35\\xe4\\xbb\\x33\\xe3\\xb8\\x31\\xfa\\xed\\x9a\\xf9\\xeb\\x99\\xf9\\xe8\\\n\\x97\\xf8\\xe5\\x94\\xf7\\xe2\\x91\\xf6\\xdf\\x8e\\xf5\\xdb\\x8b\\xeb\\xc7\\x56\\\n\\xf1\\xd9\\x64\\xfa\\xeb\\x9a\\xf4\\xd8\\x48\\xf3\\xd3\\x44\\xf1\\xce\\x3f\\xf0\\\n\\xc8\\x3a\\xf5\\xdc\\x8c\\xed\\xcb\\x62\\xea\\xca\\x3d\\xf9\\xe9\\x93\\xf7\\xe1\\\n\\x72\\xf3\\xd4\\x45\\xf2\\xce\\x41\\xf0\\xc9\\x3c\\xf5\\xdc\\x8a\\xef\\xd0\\x70\\\n\\xe4\\xbb\\x3d\\xef\\xd4\\x5b\\xf9\\xea\\x99\\xf4\\xd6\\x47\\xf2\\xd0\\x42\\xf0\\\n\\xcb\\x3d\\xf3\\xd5\\x6e\\xf3\\xd7\\x7f\\xe7\\xc0\\x4a\\xf5\\xe1\\x80\\xf8\\xe6\\\n\\x8e\\xf3\\xd2\\x43\\xf1\\xcd\\x3f\\x6e\\x97\\xd4\\x7b\\x9e\\xd4\\x71\\x98\\xd0\\\n\\x82\\xa4\\xd6\\x68\\x8e\\xcd\\x69\\x90\\xcd\\x75\\x9a\\xd0\\x73\\x99\\xd1\\x62\\\n\\x8b\\xc8\\xec\\xcd\\x4f\\xf9\\xe9\\x98\\xf3\\xd5\\x4a\\xf1\\xcf\\x45\\xf0\\xca\\\n\\x40\\x65\\x8d\\xcc\\xb0\\xcd\\xf3\\xff\\xff\\xff\\xb3\\xc7\\xe3\\xa1\\xbf\\xea\\\n\\x60\\x89\\xc9\\xf2\\xda\\x75\\xf8\\xe6\\x93\\xf7\\xe3\\x91\\xf6\\xe0\\x8d\\x5b\\\n\\x86\\xc7\\x9e\\xc0\\xef\\x6e\\x93\\xcc\\xf7\\xfb\\xff\\xf1\\xf8\\xff\\x8c\\xaf\\\n\\xe4\\x61\\x8a\\xc7\\xe2\\xb6\\x2f\\x5d\\x88\\xc8\\xa1\\xbf\\xef\\xfa\\xfc\\xfd\\\n\\xfb\\xfc\\xfe\\xfd\\xfd\\xfe\\xfc\\xfd\\xfe\\xfa\\xfb\\xfd\\xfb\\xfc\\xfd\\x85\\\n\\xa8\\xdd\\x53\\x7f\\xc1\\xe0\\xb2\\x2d\\x65\\x8d\\xca\\x99\\xb8\\xea\\x7e\\xa5\\\n\\xdd\\x80\\xa6\\xdd\\x7c\\xa3\\xdb\\x7a\\xa0\\xd9\\x79\\xa0\\xd9\\x78\\x9f\\xd8\\\n\\x78\\x9e\\xd8\\x5d\\x84\\xbf\\xdf\\xaf\\x2b\\x61\\x8b\\xc9\\x92\\xb5\\xe6\\x81\\\n\\xa7\\xe2\\x81\\xa7\\xe1\\x7d\\xa3\\xde\\x7b\\xa1\\xdc\\x79\\x9f\\xdb\\x77\\x9e\\\n\\xd9\\x73\\x9a\\xd4\\x57\\x7e\\xbb\\xe7\\xbc\\x4f\\x54\\x81\\xc4\\x97\\xb6\\xea\\\n\\xea\\xf3\\xf3\\xe6\\xf1\\xed\\xe6\\xf1\\xef\\xe6\\xf0\\xef\\xe5\\xf1\\xed\\xed\\\n\\xf5\\xf3\\x79\\x9c\\xd5\\x44\\x70\\xb0\\xdf\\xae\\x2d\\xde\\xab\\x2b\\x51\\x7f\\\n\\xc3\\x9a\\xb6\\xef\\xe8\\xf3\\xea\\x84\\xbf\\x51\\x98\\xc9\\x6f\\x99\\xc9\\x71\\\n\\x84\\xbf\\x54\\xe9\\xf4\\xe4\\x7b\\x9c\\xdd\\x3a\\x69\\xaa\\xde\\xac\\x29\\xdc\\\n\\xa9\\x27\\x55\\x83\\xc6\\xba\\xce\\xef\\xff\\xff\\xdd\\xc7\\xee\\x87\\xd7\\xf4\\\n\\xa2\\xd7\\xf6\\xa2\\xc7\\xee\\x8c\\xff\\xff\\xe0\\x85\\xa2\\xdd\\x3e\\x6a\\xab\\\n\\x33\\x65\\xb1\\x58\\x84\\xc3\\x68\\x8b\\xd3\\x70\\x8f\\xe1\\x6c\\x8d\\xdc\\x6d\\\n\\x8b\\xda\\x6e\\x8a\\xd7\\x6c\\x8b\\xcd\\x44\\x6d\\xab\\x2e\\x5f\\xa6\\x56\\xc2\\\n\\xe5\\xbb\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xd1\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x02\\x18\\x99\\x98\\x59\\x58\\xd9\\\n\\xd8\\x39\\x38\\xb9\\xb8\\x21\\x02\\x4c\\x3c\\xbc\\x7c\\xfc\\x02\\x82\\x42\\xc2\\\n\\x30\\xbe\\x88\\xa8\\x98\\xb8\\x84\\xa4\\x94\\x34\\x94\\xcf\\x20\\x23\\x2b\\x27\\\n\\xaf\\xa0\\xa8\\xa4\\xac\\x02\\x33\\x42\\x55\\x4d\\x5d\\x43\\x53\\x4b\\x5b\\x07\\\n\\xc6\\x67\\xd5\\xd5\\xd3\\x37\\x30\\x34\\x32\\x36\\x31\\x35\\x33\\xb7\\xb0\\x04\\\n\\x0a\\x58\\x59\\xdb\\xd8\\xda\\xd9\\x3b\\x38\\x3a\\x39\\x02\\x81\\xb3\\x0b\\x03\\\n\\x9b\\xab\\x9b\\xbb\\x87\\x92\\xa7\\x97\\xa3\\xb7\\xa3\\xa3\\x8f\\xaf\\x9f\\x3f\\\n\\x03\\xd8\\xfa\\x80\\xc0\\xa0\\xe0\\x90\\xd0\\xb0\\xf0\\x88\\xc8\\x28\\x88\\x39\\\n\\xd1\\x31\\xb1\\x71\\xf1\\x09\\x89\\x49\\xc9\\x29\\xa9\\x10\\x81\\xb4\\xf4\\x8c\\\n\\xcc\\xac\\xec\\x9c\\xdc\\xbc\\xfc\\x02\\x08\\xbf\\xb0\\xa8\\xb8\\xa4\\xb4\\xac\\\n\\xbc\\xa2\\xb2\\xaa\\x1a\\x2c\\x50\\x53\\x5b\\x57\\xdf\\xd0\\xd8\\xd4\\xdc\\xd2\\\n\\xda\\xd6\\x0e\\xe2\\x77\\x74\\x32\\x74\\x75\\xf7\\xf4\\xf6\\xf5\\x4f\\x98\\x38\\\n\\x69\\x32\\xd4\\x75\\x53\\xa6\\x4e\\x9b\\x3e\\x63\\xe6\\xac\\xd9\\x73\\xe6\\x02\\\n\\x00\\x3b\\xf0\\x33\\x15\\x44\\x92\\x8b\\x9b\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\\n\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\\n\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\\n\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\\n\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\\n\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\\n\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x49\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x59\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x71\\x71\\x71\\x6f\\x6f\\x6f\\x6d\\x6d\\x6d\\\n\\x52\\x52\\x52\\x4d\\x4d\\x4d\\x49\\x49\\x49\\x6c\\x6c\\x6c\\x69\\x69\\x69\\x57\\\n\\x57\\x57\\x48\\x48\\x48\\x43\\x43\\x43\\x65\\x65\\x65\\x6c\\xba\\xe5\\x74\\xbc\\\n\\xec\\x6e\\xb8\\xeb\\x68\\xb6\\xeb\\xcd\\xcb\\x80\\xea\\xd7\\x80\\x47\\x47\\x47\\\n\\x42\\x42\\x42\\x3d\\x3d\\x3d\\x68\\x68\\x68\\x61\\x61\\x61\\x36\\xbf\\x7f\\x69\\\n\\xc5\\xdd\\x70\\xc2\\xff\\x67\\xbf\\xff\\xac\\xcb\\xae\\xf9\\xe0\\x68\\x41\\x41\\\n\\x41\\x37\\x37\\x37\\x64\\x64\\x64\\x60\\x60\\x60\\x5c\\x5c\\x5c\\x45\\xc4\\x4f\\\n\\x2c\\xba\\x4b\\x60\\xbd\\xd8\\x62\\xba\\xff\\x65\\xb9\\xff\\x7d\\xbb\\xdb\\x3b\\\n\\x3b\\x3b\\x36\\x36\\x36\\x31\\x31\\x31\\x5c\\xcb\\x4f\\x7a\\xd7\\x57\\x6a\\xd1\\\n\\x42\\x5e\\xc7\\x70\\x50\\xb8\\xb6\\x3f\\xae\\xcb\\x2c\\x2c\\x2c\\x5b\\x5b\\x5b\\\n\\x9e\\xe2\\x72\\xa4\\xe3\\x7c\\xa0\\xe3\\x78\\x95\\xe0\\x63\\x95\\xe1\\x5a\\x93\\\n\\xe2\\x55\\x30\\x30\\x30\\x2b\\x2b\\x2b\\x26\\x26\\x26\\x56\\x56\\x56\\x51\\x51\\\n\\x51\\x2a\\x2a\\x2a\\x25\\x25\\x25\\x20\\x20\\x20\\x4c\\x4c\\x4c\\x6e\\xc6\\xf8\\\n\\x77\\xc8\\xff\\x72\\xc5\\xff\\x6c\\xc4\\xff\\xcf\\xd8\\x98\\xaf\\xbd\\x7a\\x6b\\\n\\x8f\\x56\\x66\\x8e\\x4f\\x56\\x7f\\x3e\\x4b\\x4b\\x4b\\x46\\x46\\x46\\x8a\\xad\\\n\\x7f\\x81\\xab\\x61\\xb4\\xd4\\x95\\xd0\\xe6\\xba\\x8f\\xbb\\x6a\\x57\\x8f\\x2d\\\n\\x37\\x6b\\x19\\x45\\x45\\x45\\x40\\x40\\x40\\x5d\\x89\\x4a\\xb1\\xd3\\x90\\xb1\\\n\\xd6\\x92\\xff\\xff\\xff\\x8c\\xbc\\x65\\x8f\\xbc\\x67\\x4c\\x7b\\x31\\xb6\\xd4\\\n\\x9c\\xb2\\xd2\\x95\\x3a\\x3a\\x3a\\x35\\x35\\x35\\x9d\\xdf\\x6e\\xa3\\xe0\\x77\\\n\\x9e\\xe0\\x73\\x93\\xdd\\x5e\\x3c\\x70\\x1d\\x8b\\xba\\x62\\x87\\xba\\x60\\x87\\\n\\xb9\\x60\\x34\\x34\\x34\\x46\\x61\\x37\\x53\\x8c\\x28\\x8d\\xba\\x64\\x2e\\x2e\\\n\\x2e\\x29\\x29\\x29\\x24\\x24\\x24\\x35\\x67\\x18\\x35\\x66\\x18\\xf4\\xd7\\xfe\\\n\\x67\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\\n\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xca\\x49\\\n\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x04\\x8c\\x4c\\xcc\\x10\\x06\\x0b\\x2b\\\n\\x1b\\x98\\x66\\x62\\xe7\\xe0\\x04\\x03\\x56\\x2e\\x6e\\xb0\\x00\\x3b\\x07\\x0f\\\n\\x2f\\x1f\\xbf\\x80\\xa0\\x90\\xb0\\x88\\x28\\x58\\x40\\x8c\\x47\\x5c\\x42\\x52\\\n\\x4a\\x5a\\x46\\x56\\x8e\\x41\\x1e\\x2c\\xa0\\xa0\\xa8\\xa4\\xac\\xa2\\xaa\\xa6\\\n\\xae\\xa1\\xa9\\xa5\\x0d\\x16\\x50\\x54\\xe2\\xd4\\xd1\\xd5\\xd3\\x37\\x30\\xd4\\\n\\xd2\\x36\\x02\\x0b\\x18\\x73\\xb2\\x98\\x98\\x9a\\x99\\x5b\\x58\\x5a\\x59\\xdb\\\n\\x80\\x05\\x6c\\xed\\xc4\\x20\\xb6\\xd8\\x3b\\x38\\x82\\x05\\xec\\x9c\\x84\\x9d\\\n\\x5d\\x5c\\xdd\\xdc\\x3d\\x3c\\xbd\\xbc\\xc1\\x02\\x3e\\xbe\\x72\\x20\\x5b\\xfc\\\n\\xfc\\x03\\x02\\x83\\x82\\x43\\x80\\x02\\xa1\\x61\\x9a\\x20\\x5b\\xc2\\x23\\x22\\\n\\xa3\\xa2\\x63\\x40\\x02\\x61\\x0c\\x5a\\x20\\x5b\\x62\\xe3\\xa2\\xa2\\xa2\\xe2\\\n\\x41\\x02\\x09\\x89\\x56\\x49\\xc9\\x29\\xa9\\x69\\xe9\\x19\\x51\\x99\\x60\\x15\\\n\\x59\\x0c\\x89\\x20\\x3b\\xb2\\x73\\x72\\xe3\\x73\\x73\\x40\\x02\\x79\\xf9\\x05\\\n\\x60\\xc3\\x43\\x0a\\x43\\x8a\\x42\\x18\\x00\\xfd\\xf4\\x23\\xb2\\xc9\\x38\\x64\\\n\\x77\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\\n\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\\n\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x33\\x2d\\x30\\x31\\x2d\\x31\\x38\\x54\\x31\\x34\\x3a\\x32\\x37\\x3a\\x30\\\n\\x34\\x2b\\x30\\x31\\x3a\\x30\\x30\\xcb\\xa3\\x4c\\xf5\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x33\\x2d\\x30\\x31\\x2d\\x31\\x38\\x54\\x31\\x34\\x3a\\x32\\x37\\x3a\\\n\\x30\\x34\\x2b\\x30\\x31\\x3a\\x30\\x30\\xba\\xfe\\xf4\\x49\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x01\\x0c\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x01\\x03\\x00\\x00\\x00\\x25\\x3d\\x6d\\x22\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x06\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x00\\x00\\x00\\x55\\xc2\\xd3\\x7e\\x00\\x00\\\n\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x16\\x49\\\n\\x44\\x41\\x54\\x08\\xd7\\x63\\x10\\x60\\x60\\xc0\\x8a\\xe4\\xff\\x81\\x48\\xc1\\\n\\x0f\\x08\\x12\\x8c\\x00\\x48\\x59\\x03\\xf0\\x2e\\x1d\\x5b\\x5d\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\\n\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\\n\\x37\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\x66\\x2c\\xf7\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\\n\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\\n\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\\n\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xd9\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x11\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xf8\\xf8\\xf8\\xfb\\xfb\\xfb\\xfc\\xfc\\xfc\\\n\\x94\\x94\\x94\\xf4\\xf4\\xf4\\xf5\\xf5\\xf5\\xf1\\xf1\\xf1\\xef\\xef\\xef\\xe9\\\n\\xe9\\xe9\\xe4\\xd5\\xac\\xd8\\xa5\\x58\\xdb\\xb1\\x85\\xd0\\x9d\\x46\\xf7\\xf7\\\n\\xf7\\xf9\\xf9\\xf9\\xf3\\xf3\\xf3\\xf0\\xf0\\xf0\\xea\\xea\\xea\\xf3\\xe4\\xaf\\\n\\xe7\\xbe\\x77\\xf0\\xd2\\xb4\\xff\\xf3\\xe5\\xef\\xd2\\xac\\xc7\\x8c\\x48\\xf6\\\n\\xf6\\xf6\\xf2\\xf2\\xf2\\xe8\\xd9\\xa8\\xee\\xd6\\x81\\xf9\\xe3\\xb2\\xe7\\xc0\\\n\\x8b\\xf6\\xd3\\xae\\xfc\\xe0\\xc4\\xd3\\x9f\\x66\\xf0\\xe3\\xba\\xee\\xd4\\x7d\\\n\\xfd\\xf6\\xc4\\xf6\\xdd\\x6c\\xed\\xca\\x6d\\xd7\\xa3\\x63\\xcf\\x99\\x5c\\xf2\\\n\\xe5\\xbd\\xee\\xd3\\x79\\xfd\\xf7\\xc7\\xf5\\xdc\\x5f\\xf7\\xe2\\x5b\\xf2\\xd6\\\n\\x7a\\xe2\\xa2\\x51\\xe5\\xd4\\xaf\\xe7\\xcb\\x77\\xf5\\xdc\\x5e\\xf7\\xe1\\x5a\\\n\\xf1\\xd4\\x7b\\xdd\\x9a\\x4b\\xf5\\xe5\\xd4\\xe5\\xd5\\xb2\\xd7\\xba\\x76\\xfd\\\n\\xf6\\xc2\\xf7\\xdf\\x63\\xf8\\xe2\\x5d\\xf0\\xd3\\x79\\xdc\\x98\\x49\\xf2\\xe9\\\n\\xde\\xd7\\xc3\\xa5\\xd5\\xb6\\x7a\\xd1\\xb7\\x90\\xe4\\xc9\\x55\\xf5\\xdf\\x5b\\\n\\xed\\xd0\\x78\\xdd\\x9d\\x51\\xf5\\xeb\\xdf\\xaa\\x89\\x43\\xff\\xf2\\xe0\\xd8\\\n\\x9a\\x54\\xbe\\x7a\\x1a\\xc5\\x98\\x49\\xc7\\x8e\\x48\\xf3\\xe6\\xd8\\x85\\x67\\\n\\x2e\\xf9\\xc7\\x94\\xf9\\xc9\\x91\\xc9\\x85\\x41\\xae\\x6b\\x26\\xee\\xe2\\xd4\\\n\\xfa\\xfa\\xfa\\x5a\\x43\\x18\\x89\\x61\\x2b\\xbe\\x8a\\x4c\\xcb\\xa8\\x6f\\xf1\\\n\\xe9\\xe0\\xff\\xff\\xff\\x69\\x25\\x69\\xff\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\\n\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\\n\\x05\\x1d\\x48\\x00\\x00\\x00\\xa2\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\\n\\x04\\x8c\\x4c\\xcc\\x60\\xc0\\xc8\\x02\\x15\\x60\\x62\\x65\\x63\\x63\\x63\\xe7\\\n\\xe0\\x64\\xe6\\xe2\\xe6\\xe1\\x05\\x09\\x30\\xf3\\xf1\\xf3\\xf1\\x09\\x08\\x0a\\\n\\x09\\x8b\\x88\\x8a\\x89\\x4b\\x80\\x04\\xf8\\xf9\\xf9\\xf9\\x24\\xa5\\xa4\\x65\\\n\\x64\\xe5\\xe4\\x15\\x14\\x41\\x02\\x40\\x33\\x98\\x18\\x95\\x94\\x55\\x54\\xd5\\\n\\xd4\\x35\\xc0\\x5a\\x40\\x40\\x53\\x4b\\x5b\\x47\\x57\\x4f\\x9f\\x01\\x26\\x60\\\n\\x60\\xa8\\x6d\\x64\\x6c\\x62\\x6a\\x06\\x13\\x30\\xb7\\xb0\\xb4\\xb2\\xb6\\xb1\\\n\\xb5\\x63\\x86\\x0a\\xd8\\x3b\\x38\\x3a\\x39\\xbb\\xb8\\xba\\x31\\xc2\\x04\\xdc\\\n\\x3d\\x3c\\xbd\\xbc\\x7d\\x7c\\x19\\xe1\\x02\\x7e\\xfe\\x01\\x81\\x41\\xc1\\x21\\\n\\x21\\x21\\x30\\x81\\xd0\\xb0\\xf0\\x88\\x48\\x26\\x20\\x60\\x86\\xdb\\x02\\x03\\\n\\x60\\x01\\x7e\\x04\\x9f\\x1f\\x8b\\xdf\\x01\\x81\\x34\\x11\\xbb\\x9f\\x1e\\x32\\\n\\x57\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\\n\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\\n\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\\n\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x32\\x2d\\x30\\x35\\x2d\\x30\\x33\\x54\\x30\\x38\\x3a\\x35\\x30\\x3a\\\n\\x32\\x36\\x2b\\x30\\x32\\x3a\\x30\\x30\\x92\\x9e\\x92\\x58\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x72\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x80\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x71\\x71\\x71\\x6f\\x6f\\x6f\\x6d\\x6d\\x6d\\\n\\x52\\x52\\x52\\x4d\\x4d\\x4d\\x49\\x49\\x49\\x6c\\x6c\\x6c\\x69\\x69\\x69\\x57\\\n\\x57\\x57\\x48\\x48\\x48\\x43\\x43\\x43\\x65\\x65\\x65\\x6c\\xba\\xe5\\x74\\xbc\\\n\\xec\\x6e\\xb8\\xeb\\x68\\xb6\\xeb\\xcd\\xcb\\x80\\xea\\xd7\\x80\\x47\\x47\\x47\\\n\\x42\\x42\\x42\\x3d\\x3d\\x3d\\x68\\x68\\x68\\x61\\x61\\x61\\x36\\xbf\\x7f\\x69\\\n\\xc5\\xdd\\x70\\xc2\\xff\\x67\\xbf\\xff\\xac\\xcb\\xae\\xf9\\xe0\\x68\\x41\\x41\\\n\\x41\\x37\\x37\\x37\\x64\\x64\\x64\\x60\\x60\\x60\\x5c\\x5c\\x5c\\x45\\xc4\\x4f\\\n\\x2c\\xba\\x4b\\x60\\xbd\\xd8\\x62\\xba\\xff\\x65\\xb9\\xff\\x7d\\xbb\\xdb\\x3b\\\n\\x3b\\x3b\\x36\\x36\\x36\\x31\\x31\\x31\\x5c\\xcb\\x4f\\x7a\\xd7\\x57\\x6a\\xd1\\\n\\x42\\x5e\\xc7\\x70\\x50\\xb8\\xb6\\x3f\\xae\\xcb\\x2c\\x2c\\x2c\\x5b\\x5b\\x5b\\\n\\x9e\\xe2\\x72\\xa4\\xe3\\x7c\\xa0\\xe3\\x78\\x95\\xe0\\x63\\x95\\xe1\\x5a\\xad\\\n\\xdd\\x54\\x6b\\x5f\\x36\\x2b\\x2b\\x2b\\x26\\x26\\x26\\x56\\x56\\x56\\x51\\x51\\\n\\x51\\xd4\\xb6\\x4f\\xcc\\xaa\\x3a\\x25\\x25\\x25\\x20\\x20\\x20\\x4c\\x4c\\x4c\\\n\\x6e\\xc6\\xf8\\x77\\xc8\\xff\\x76\\xc5\\xf9\\x8e\\xc8\\xd6\\xe4\\xd4\\x73\\xf8\\\n\\xd7\\x66\\xf8\\xd2\\x59\\xb2\\x90\\x24\\x58\\x49\\x1c\\x4b\\x4b\\x4b\\x46\\x46\\\n\\x46\\xc1\\xcf\\xa0\\xf9\\xd8\\x6a\\xf8\\xda\\x73\\xfa\\xe0\\x8b\\xf9\\xdd\\x82\\\n\\xf7\\xce\\x51\\xf4\\xc3\\x32\\xf3\\xb7\\x1c\\x45\\x45\\x45\\x40\\x40\\x40\\x61\\\n\\xbd\\xd6\\xca\\xca\\x86\\xf8\\xda\\x74\\xfa\\xe0\\x8c\\xf9\\xdd\\x83\\xf6\\xd0\\\n\\x54\\xb4\\x8b\\x18\\x78\\xc8\\x69\\xf7\\xd0\\x4c\\xf9\\xde\\x83\\xf9\\xd9\\x7a\\\n\\xf4\\xc1\\x2c\\x3c\\x30\\x10\\x3a\\x3a\\x3a\\x35\\x35\\x35\\x30\\x30\\x30\\x9d\\\n\\xdf\\x6e\\xa3\\xe0\\x77\\x9e\\xe0\\x73\\xaf\\xd8\\x57\\xf7\\xcf\\x4d\\xf0\\xc5\\\n\\x27\\xe9\\xb8\\x1e\\xf4\\xc3\\x33\\x4a\\x39\\x0e\\x34\\x34\\x34\\x90\\x81\\x4e\\\n\\xaa\\x92\\x41\\x62\\x5e\\x53\\x29\\x25\\x1a\\xc0\\x91\\x17\\x5e\\x47\\x0c\\x2e\\\n\\x2e\\x2e\\x29\\x29\\x29\\x24\\x24\\x24\\x08\\x08\\x08\\x05\\x05\\x05\\x02\\x02\\\n\\x02\\xff\\xff\\xff\\xb0\\x2f\\x83\\xd4\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\xcc\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x04\\\n\\x8c\\x4c\\xcc\\x10\\x06\\x0b\\x2b\\x1b\\x98\\x66\\x62\\xe7\\xe0\\x04\\x03\\x56\\\n\\x2e\\x6e\\xb0\\x00\\x3b\\x07\\x0f\\x2f\\x1f\\xbf\\x80\\xa0\\x90\\xb0\\x88\\x28\\\n\\x58\\x40\\x8c\\x47\\x5c\\x42\\x52\\x4a\\x5a\\x46\\x56\\x8e\\x41\\x1e\\x2c\\xa0\\\n\\xa0\\xa8\\xa4\\xac\\xa2\\xaa\\xa6\\xae\\xa1\\xa9\\xa5\\x0d\\x16\\x50\\x54\\xe2\\\n\\xd4\\xd1\\xd5\\xd3\\x37\\x30\\xd4\\xd2\\x36\\x02\\x0b\\x18\\x73\\xb2\\x98\\x98\\\n\\x9a\\x99\\x5b\\x58\\x5a\\x59\\xdb\\x80\\x05\\x6c\\xed\\xc4\\xc0\\x96\\xd8\\x3b\\\n\\x38\\x3a\\x81\\x05\\xec\\x9c\\x85\\x5d\\x5c\\xdd\\xdc\\x3d\\x3c\\xbd\\xbc\\x7d\\\n\\xc0\\x02\\xbe\\x7e\\x72\\x12\\x92\\xfe\\x01\\x81\\x41\\xc1\\x21\\xa1\\x61\\x20\\\n\\x81\\xf0\\x08\\x4d\\x65\\x95\\xc8\\xa8\\xe8\\x98\\xd8\\xb8\\x78\\xb0\\x8a\\x08\\\n\\x06\\x2d\\xa0\\x2d\\x09\\x89\\x49\\xc9\\x29\\xa9\\x60\\x81\\xb4\\xf4\\x8c\\xcc\\\n\\xac\\xec\\x9c\\xdc\\xbc\\xfc\\x82\\x42\\xb0\\x40\\x11\\x43\\x3a\\xd0\\x8e\\xe2\\\n\\x92\\xd2\\xb2\\xf2\\x0a\\xb0\\x40\\x65\\x55\\x35\\xc4\\xb7\\x35\\xb5\\x75\\x0c\\\n\\x0c\\x00\\x17\\x22\\x23\\x1d\\x76\\x56\\x2d\\x52\\x00\\x00\\x00\\x1d\\x74\\x45\\\n\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\\n\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\\n\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\x31\\x2d\\x31\\\n\\x38\\x54\\x31\\x34\\x3a\\x35\\x32\\x3a\\x30\\x39\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x65\\x66\\xf3\\xf2\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x33\\x2d\\x30\\x31\\x2d\\\n\\x31\\x38\\x54\\x31\\x34\\x3a\\x35\\x32\\x3a\\x30\\x39\\x2b\\x30\\x31\\x3a\\x30\\\n\\x30\\x14\\x3b\\x4b\\x4e\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\\n\\x82\\\n\\x00\\x00\\x02\\xf4\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x32\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x9c\\x9c\\x9c\\x9b\\x9b\\x9b\\x99\\x99\\x99\\\n\\xe4\\xe4\\xe4\\xee\\xee\\xee\\x96\\x96\\x96\\xe2\\xe2\\xe2\\xe7\\xe7\\xe7\\xb9\\\n\\xb9\\xb9\\x93\\x93\\x93\\x98\\x98\\x98\\xcf\\xcf\\xcf\\x92\\x92\\x92\\x8e\\x8e\\\n\\x8e\\x8c\\x8c\\x8c\\x8a\\x8a\\x8a\\xdd\\xdd\\xdd\\xc5\\xc5\\xc5\\x8f\\x8f\\x8f\\\n\\x8d\\x8d\\x8d\\xac\\xac\\xac\\xd7\\xd7\\xd7\\x87\\x87\\x87\\xd4\\xd4\\xd4\\xc8\\\n\\xc8\\xc8\\xbc\\xbc\\xbc\\xba\\xba\\xba\\xc2\\xc2\\xc2\\xc4\\xc4\\xc4\\x85\\x85\\\n\\x85\\x8b\\xad\\xe3\\x88\\xa7\\xda\\xc7\\xc7\\xc7\\xcc\\xcc\\xcc\\xc6\\xc6\\xc6\\\n\\xc3\\xc3\\xc3\\xc0\\xc0\\xc0\\x84\\x84\\x84\\x89\\xa9\\xe1\\x9c\\xb9\\xe7\\x98\\\n\\xb6\\xe6\\x8c\\xa9\\xd8\\xd2\\xd2\\xd2\\xb5\\xb5\\xb5\\x89\\x89\\x89\\x83\\x83\\\n\\x83\\x87\\xa9\\xe1\\x9c\\xb7\\xe6\\xbc\\xcf\\xef\\xba\\xce\\xee\\x8c\\xae\\xe2\\\n\\x7b\\x9b\\xd2\\x88\\x88\\x88\\x85\\xa7\\xe1\\x99\\xb7\\xe6\\xbb\\xce\\xee\\xa7\\\n\\xc0\\xe9\\xa3\\xbd\\xe8\\xb3\\xc8\\xec\\x81\\xa4\\xdf\\x5d\\x89\\xd2\\x83\\xa5\\\n\\xdf\\x98\\xb4\\xe6\\xba\\xcd\\xee\\xa5\\xbf\\xe9\\x96\\xb4\\xe5\\x9d\\xb9\\xe7\\\n\\xae\\xc6\\xeb\\x79\\x9f\\xde\\x51\\x83\\xd5\\x7f\\xa5\\xdf\\x94\\xb3\\xe6\\xb8\\\n\\xcc\\xee\\xa5\\xbe\\xe9\\x94\\xb3\\xe5\\x9b\\xb7\\xe6\\xad\\xc4\\xea\\x78\\x9e\\\n\\xde\\x4f\\x81\\xd3\\x79\\x9f\\xdd\\xb7\\xcc\\xed\\x92\\xb1\\xe4\\x9a\\xb6\\xe6\\\n\\xac\\xc3\\xea\\x74\\x9c\\xde\\x4d\\x7f\\xd3\\x6f\\x97\\xdb\\xb3\\xc8\\xed\\x9b\\\n\\xb8\\xe7\\xab\\xc3\\xea\\x73\\x9c\\xde\\x49\\x7d\\xd1\\x65\\x91\\xd9\\xab\\xc2\\\n\\xea\\xa8\\xc0\\xea\\x71\\x99\\xdc\\x47\\x7b\\xd1\\x57\\x87\\xd5\\x4b\\x7d\\xd1\\\n\\x45\\x79\\xd1\\xff\\xff\\xff\\x2d\\x3c\\x43\\x4a\\x00\\x00\\x00\\x01\\x74\\x52\\\n\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\\n\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x9c\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\\n\\x80\\x03\\x46\\x26\\x66\\x06\\x64\\xc0\\xc4\\xc2\\xca\\x86\\xc2\\x67\\xe7\\xe0\\\n\\xe4\\x42\\x16\\xe0\\x66\\xe1\\xe1\\x65\\xe0\\xe3\\x17\\x80\\x0b\\xb0\\x09\\x0a\\\n\\x09\\x8b\\x88\\x8a\\x89\\xc3\\x05\\xb8\\x24\\x24\\xa5\\xa4\\x65\\x64\\xe5\\x20\\\n\\x3c\\x79\\x05\\x5e\\x45\\x25\\x45\\x65\\x15\\x55\\x35\\x08\\x5f\\x5d\\x43\\x53\\\n\\x4b\\x5b\\x47\\x57\\x5c\\x4e\\x0f\\xc2\\xd7\\x37\\x30\\x34\\x32\\x36\\x31\\x85\\\n\\xeb\\x36\\x33\\xb7\\xb0\\xb4\\xb2\\xb6\\xb1\\x85\\xf1\\xed\\xec\\x1d\\x1c\\x9d\\\n\\x9c\\x5d\\x5c\\xdd\\xa0\\x7c\\x77\\x0f\\x4f\\x2f\\x6f\\x1f\\x5f\\x3f\\x7f\\x98\\\n\\x82\\x80\\x40\\xab\\xa0\\xe0\\x90\\xd0\\x30\\xb8\\x09\\xe1\\x11\\x91\\xf6\\x51\\\n\\xd1\\x31\\x08\\x27\\xc7\\xda\\xc4\\xc5\\x27\\x24\\x22\\x7b\\x22\\xc9\\x2d\\x39\\\n\\x05\\x89\\x0b\\x00\\xa0\\x08\\x15\\x31\\xa0\\x4d\\x88\\x2f\\x00\\x00\\x00\\x1d\\\n\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\\n\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\\n\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\\n\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\\n\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\\n\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\\n\\x34\\x2d\\x30\\x34\\x54\\x30\\x38\\x3a\\x35\\x30\\x3a\\x31\\x33\\x2b\\x30\\x32\\\n\\x3a\\x30\\x30\\x64\\x32\\xc2\\x31\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\\n\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xcf\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x14\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x85\\x85\\x85\\x9e\\x9e\\x9e\\x7c\\x7c\\x7c\\\n\\x4c\\x4c\\x4c\\x91\\x91\\x91\\xe8\\xe8\\xe8\\xdd\\xdd\\xdd\\xc1\\xc1\\xc1\\x81\\\n\\x81\\x81\\x7b\\x7b\\x7b\\xd9\\xd9\\xd9\\xc4\\xc4\\xc4\\x73\\x73\\x73\\xd5\\xd5\\\n\\xd5\\x58\\x58\\x58\\x4b\\x4b\\x4b\\x65\\x65\\x65\\x92\\x92\\x92\\x79\\x79\\x79\\\n\\xa8\\xa8\\xa8\\x32\\x32\\x32\\x82\\x82\\x82\\x3f\\x3f\\x3f\\xbd\\xbd\\xbd\\xce\\\n\\xce\\xce\\xc2\\xc2\\xc2\\xad\\xad\\xad\\x68\\x9c\\x38\\x65\\x9f\\x31\\x67\\x67\\\n\\x67\\x52\\x52\\x52\\x41\\x41\\x41\\x46\\x46\\x46\\x51\\x51\\x51\\x60\\x98\\x32\\\n\\x81\\xb3\\x5a\\x57\\x98\\x28\\x4d\\x4d\\x4d\\x8d\\x8d\\x8d\\xaa\\xaa\\xaa\\xae\\\n\\xae\\xae\\x6f\\xa5\\x3d\\x6d\\xa2\\x38\\x67\\xa0\\x34\\x62\\x9d\\x31\\x7c\\xaf\\\n\\x55\\xaa\\xcb\\x91\\x74\\xab\\x4f\\x45\\x8e\\x18\\x4a\\x4a\\x4a\\x64\\x64\\x64\\\n\\x6b\\x6b\\x6b\\x6b\\xa3\\x37\\xb0\\xce\\x96\\xad\\xcd\\x94\\xa8\\xcb\\x90\\x90\\\n\\xbc\\x74\\xa1\\xc7\\x8a\\x68\\xa5\\x46\\x35\\x87\\x07\\x63\\x9f\\x31\\x8e\\xba\\\n\\x6f\\x89\\xb8\\x6b\\x85\\xb6\\x66\\x80\\xb3\\x61\\x82\\xb5\\x67\\x98\\xc2\\x83\\\n\\x5c\\xa0\\x3c\\x25\\x7f\\x00\\x5b\\x9b\\x29\\xa9\\xca\\x90\\xa5\\xc8\\x8d\\xa1\\\n\\xc6\\x8a\\x9e\\xc5\\x88\\x85\\xb6\\x6a\\x97\\xc2\\x82\\x66\\xa5\\x48\\x21\\x7d\\\n\\x00\\x51\\x97\\x21\\x49\\x91\\x1b\\x43\\x8f\\x15\\x3b\\x8b\\x0f\\x5e\\x9f\\x3a\\\n\\x96\\xc1\\x80\\x62\\xa3\\x46\\x1f\\x7d\\x00\\x2b\\x83\\x01\\x5f\\xa1\\x43\\x1f\\\n\\x7b\\x00\\x1e\\x7b\\x03\\xff\\xff\\xff\\xb1\\xec\\x1d\\x5d\\x00\\x00\\x00\\x01\\\n\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\\n\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x95\\x49\\x44\\x41\\x54\\x18\\xd3\\\n\\x63\\x60\\xa0\\x12\\x60\\x64\\x62\\x66\\x60\\x60\\x66\\x62\\x84\\x72\\x59\\x58\\\n\\xd9\\xd8\\x39\\x38\\xb9\\xb8\\xd9\\x79\\x58\\x59\\xc0\\x02\\xbc\\x7c\\xfc\\x02\\\n\\x82\\x42\\xc2\\x82\\x02\\xfc\\x22\\xbc\\x20\\xbe\\xa8\\x18\\x03\\x83\\xb8\\x84\\\n\\xa4\\x94\\xb4\\x8c\\x2c\\x83\\x98\\x28\\x48\\x44\\x8e\\x41\\x5e\\x41\\x51\\x49\\\n\\x49\\x51\\x59\\x45\\x55\\x0e\\xac\\x45\\x4d\\x5d\\x43\\x53\\x4b\\x5b\\x47\\x57\\\n\\x4f\\xdf\\xc0\\x10\\x62\\xaa\\x91\\xb1\\x89\\xa9\\x99\\xb9\\xbe\\x85\\xa5\\x95\\\n\\xb5\\x0d\\xcc\\x62\\x5b\\x73\\x3b\\x7b\\x07\\x47\\x27\\x67\\x17\\x57\\xa8\\x80\\\n\\x9b\\xbb\\x87\\xa7\\x97\\xb7\\x8f\\xaf\\x1f\\x4c\\x85\\x7f\\x40\\x60\\x50\\x70\\\n\\x48\\x68\\x18\\x8a\\x7b\\xc3\\x23\\x22\\x51\\x3d\\xe0\\x17\\x05\\x22\\x01\\xa7\\\n\\x14\\x11\\x93\\x81\\x31\\x78\\xe0\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\\n\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\\n\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\\n\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\\n\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\\n\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\\n\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\\n\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\\n\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\\n\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x16\\xca\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x02\\x30\\x00\\x00\\x00\\x16\\x08\\x02\\x00\\x00\\x00\\x51\\xf9\\x31\\x3a\\\n\\x00\\x00\\x00\\x01\\x73\\x52\\x47\\x42\\x00\\xae\\xce\\x1c\\xe9\\x00\\x00\\x00\\\n\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0e\\x9c\\x00\\x00\\x0e\\x75\\x01\\x88\\x28\\\n\\x1b\\x78\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\xe0\\x02\\x10\\x07\\x36\\\n\\x1c\\x68\\x1b\\x6e\\x62\\x00\\x00\\x00\\x19\\x74\\x45\\x58\\x74\\x43\\x6f\\x6d\\\n\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\\n\\x68\\x20\\x47\\x49\\x4d\\x50\\x57\\x81\\x0e\\x17\\x00\\x00\\x16\\x37\\x49\\x44\\\n\\x41\\x54\\x78\\xda\\xed\\x5d\\x67\\x5c\\x14\\x57\\xd7\\xbf\\x33\\xb3\\xbb\\x2c\\\n\\x6c\\xa5\\x2e\\x45\\x9a\\x48\\x2f\\xa2\\x80\\x35\\x2a\\x76\\x8d\\x2d\\xd8\\x62\\\n\\x89\\x0d\\x5b\\x6c\\x51\\x63\\xaf\\x31\\x9a\\xd8\\x53\\xf4\\x31\\x96\\x68\\x62\\\n\\x1e\\x2b\\x46\\x63\\xc3\\x82\\x62\\x8d\\x31\\x8f\\xa2\\x28\\x62\\x09\\x56\\x14\\\n\\x90\\x0e\\xbb\\x2c\\x5b\\xa6\\xcf\\xfb\\x61\\x74\\x5c\\xd9\\x5d\\x3a\\xc6\\xe4\\\n\\x9d\\xff\\x07\\x7f\\xec\\xec\\x39\\xf7\\xd4\\x7b\\xcf\\x6d\\xb3\\x42\\x25\\x05\\\n\\xd9\\x80\\x07\\x0f\\x1e\\x3c\\x78\\xf0\\xf8\\xbb\\x01\\xf3\\x2e\\xe0\\xc1\\x83\\\n\\x07\\x0f\\x1e\\x7c\\x41\\xe2\\xc1\\x83\\x07\\x0f\\x1e\\x3c\\xf8\\x82\\xc4\\x83\\\n\\x07\\x0f\\x1e\\x3c\\xf8\\x82\\xc4\\x83\\x07\\x0f\\x1e\\x3c\\x78\\x54\\x80\\xc0\\\n\\xfc\\x51\\x4a\\xca\\xcd\\x2a\\xd9\\x7a\\xf4\\xfe\\xa8\\xb4\\x30\\xe7\\x3d\\xb4\\\n\\xa7\\xa8\\xa8\\x78\\xe1\\xe2\\x2f\\x16\\x2d\\x9c\\xe7\\xe3\\xed\\x55\\xeb\\x46\\\n\\x4e\\x27\\x9d\\x7d\\xf0\\x57\\xc6\\xac\\x99\\x9f\\xd5\\x6f\\xb3\\x75\\xd4\\xa1\\\n\\x1e\\xf1\\x6e\\x42\\xcc\\x39\\x4d\\x62\\x67\\x57\\x5f\\xde\\x33\\x0d\\xc4\\xad\\\n\\xdb\\x69\\xa1\\x21\\xc1\\x36\\x36\\x36\\xd6\\x28\\x17\\x2c\\x5a\\xba\\x7a\\xe5\\\n\\x72\\x27\\x27\\xa7\\xbf\\xd1\\x4b\\x18\\x86\\x41\\x30\\x2c\\x12\\x0a\\xff\\x65\\\n\\x03\\x47\\xbd\\xe4\\x67\\xad\\xbb\\x55\\xdd\\x43\\x43\\xd3\\x34\\x04\\x41\\x10\\\n\\x04\\xb1\\x1f\\xf3\\xf2\\xf3\\x5d\\x9c\\x9d\\x30\\x14\\x3f\\x77\\xe1\\x62\\xfb\\\n\\x76\\x1f\\x28\\x95\\x8a\\x5a\\x1b\\x65\\xd0\\x1b\\xea\\xde\\xc8\\xbb\\x01\\x6b\\\n\\x35\\x82\\x08\\xde\\xeb\\x82\\x04\\x00\\xe8\\xd9\\x27\\xae\\x32\\x8f\\xeb\\xca\\\n\\xac\\x7d\\x35\\x79\\xda\\xcc\\xf3\\x17\\x2e\\xd1\\x14\\x25\\x95\\x4a\\x9a\\x36\\\n\\x8d\\x98\\x38\\x7e\\x6c\\xeb\\x56\\x2d\\x1a\\x48\\xf5\\xcc\\xcc\\xe7\\xf9\\x05\\\n\\x85\\x15\\xda\\x47\\x04\\xc8\\xe1\\xa3\\xc7\\xe7\\xce\\x9e\\x59\\x97\\x96\\x1f\\\n\\x3e\\x7a\\x7c\\xed\\x7a\\x4a\\xbd\\x37\\x5b\\x47\\x1d\\xaa\\x63\\x7e\\xf5\\x51\\\n\\xeb\\x10\\x4f\\x9a\\x3a\\xe3\\xe2\\xa5\\xcb\\xdc\\xc7\\x4f\\xc7\\x8f\\x9d\\x31\\\n\\x7d\\xaa\\x45\\x4a\\xce\\x69\\x88\\x5c\\x56\\x5f\\xde\\xe3\\xda\\xcc\\xcd\\xcd\\\n\\xeb\\xda\\xa3\\xcf\\xd6\\xcd\\x1b\\x07\\x0d\\xb0\\x6c\\x08\\x8c\\xc0\\x47\\x8e\\\n\\x25\\xae\\xf8\\x72\\x69\\x5d\\xc4\\xd5\\xda\\x4b\\x00\\x80\\x1b\\x37\\x53\\x97\\\n\\x7c\\xb1\\x22\\x33\\xf3\\xb9\\xc1\\x68\\x6c\\x11\\x13\\xb5\\xea\\xeb\\xe5\\x01\\\n\\xfe\\x4d\\xfe\\x35\\x05\\xa9\\xca\\xfc\\xac\\x51\\x34\\xdf\\x65\\x68\\x9e\\x3d\\\n\\xcb\\xbc\\x70\\xf1\\xb2\\x46\\xa3\\xa1\\x68\\xda\\xd9\\xd9\\x29\\x7e\\xf4\\xc8\\\n\\xf2\\xf2\\xf2\\x5d\\xbb\\xf7\\xf5\\xeb\\xdb\\xc7\\xc7\\xc7\\xf3\\xaf\\x8c\\x87\\\n\\x5d\\xbb\\xf5\\x84\\x11\\x01\\x4d\\x91\\xd5\\x57\\x46\\xa3\\xd6\\x94\\xeb\\xf5\\\n\\x9e\\x8d\\x3c\\x00\\x00\\x10\\x02\\xd5\\xae\\x91\\x77\\x0c\\xce\\xea\\xe0\\xa0\\\n\\x00\\x75\\xa9\\x9a\\xd3\\xff\\x7d\\x2c\\x48\\x00\\x00\\x86\\x61\\xac\\x7d\\x65\\\n\\xd4\\x6b\\xad\\x7d\\x85\\x63\\xd8\\xbc\\x39\\x9f\\x8f\\x1a\\x31\\x2c\\x2b\\x3b\\\n\\x67\\xf7\\x9e\\x7d\\x71\\x03\\x3f\\xfe\\xe1\\x3f\\xdf\\x0f\\x88\\xeb\\xd7\\x10\\\n\\xaa\\x27\\x9e\\x3c\\xfd\\x32\\x37\\xb7\\xc2\\x88\\x2c\\x93\\xca\\x00\\x00\\x62\\\n\\x5b\\x71\\x5d\\x5a\\x16\\x8b\\x6d\\xc4\\x62\\x71\\x7d\\x35\\xab\\xd3\\xe9\\x0e\\\n\\x1c\\x3c\\xdc\\xad\\x6b\\x27\\xcf\\x46\\x8d\\xea\\xa2\\x43\\x75\\xcc\\xaf\\x11\\\n\\x6a\\x17\\x62\\x0c\\xc3\\xe6\\x7c\\x3e\\x63\\xe8\\x90\\x41\\x14\\x45\\xa3\\x28\\\n\\x6a\\x6d\\x81\\x62\\xea\\xb4\\x7a\\x09\\x4a\\x85\\x36\\xdd\\xdd\\xdd\\x8e\\x1f\\\n\\x39\\x18\\x13\\x13\\x65\\x8d\\x52\\x2e\\x93\\x03\\x00\\x04\\x82\\xba\\xce\\xfe\\\n\\x6a\\xe7\\xa5\\x3f\\xae\\xfe\\x19\\x3f\\x6e\\xd2\\x96\\x1f\\x36\\x74\\xee\\x14\\\n\\x8b\\xa2\\xe8\\xba\\x6f\\xbe\\xef\\xd1\\xab\\xdf\\xb9\\xa4\\x13\\x8d\\x1b\\xfb\\\n\\xfe\\x3b\\x0a\\x52\\x95\\xf9\\x59\\xa3\\x68\\xd6\\x8e\\xbd\\x16\\xaf\\xac\\xa0\\\n\\x28\\x76\\xf2\\x54\\xd2\\xf0\\xe1\\xc3\\x7d\\xfd\\xfc\\x19\\x06\\x94\\xaa\\xd5\\\n\\x0a\\x07\\x7b\\x00\\xc0\\xf0\\x61\\x43\\x42\\x23\\xa2\\x74\\xda\\x52\\x00\\x80\\\n\\x9d\\x54\\x06\\xd1\\x58\\xcd\\xca\\xf3\\xe3\\xc7\\x3a\\x9d\\xde\\xd7\\xb7\\x31\\\n\\x49\\x60\\x22\\xa1\\x4d\\xed\\x1a\\x79\\xc7\\x90\\xc9\\x64\\xac\\xd5\\x46\\x7d\\\n\\xd9\\xc3\\xc7\\x29\\x9c\\xfe\\xef\\x69\\x41\\xaa\\x1d\\x44\\x36\\x36\\x0c\\x4d\\\n\\x23\\x08\\xe2\\xeb\\xe3\\xbd\\x74\\xf1\\x02\\xa9\\x54\\x3a\\x7f\\xc1\\x92\\xde\\\n\\x1f\\xf6\\x60\\x87\\xad\\xbd\\xfb\\x0e\\x1c\\x3e\\x7a\\x8c\\x24\\xa9\\xbe\\x7d\\\n\\x7a\\xc5\\x8f\\x1e\\xc1\\xad\\x97\\x01\\x00\\x05\\x05\\x85\\xdf\\xff\\xe7\\x87\\\n\\x09\\xe3\\xe2\\xb7\\x6d\\xff\\x29\\x3b\\x2b\\x27\\x3c\\x3c\\x74\\xc6\\x67\\x53\\\n\\xb8\\x8c\\x37\\x67\\xbc\\xf2\\xc7\\xd5\\xd4\\x5b\\xb7\\x71\\x1c\\xdf\\xb7\\xff\\\n\\xd7\\xd0\\x90\\xe0\\xa6\\x4d\\xc3\\x59\\x4a\\xa1\\x50\\x00\\xc3\\xb0\\x50\\x20\\\n\\xb4\\xc6\\xc8\\x30\\xcc\\xca\\xd5\\xeb\\x9e\\x3e\\xcb\\x34\\x1a\\x8d\\x7e\\x8d\\\n\\x1b\\x7f\\x36\\x75\\x92\\x8b\\x8b\\x33\\x3b\\xee\\xec\\xd9\\x97\\x70\\x36\\xf9\\\n\\x3c\\xbb\\x90\\x17\\xbe\\xbd\\xc7\\xc2\\x35\\x6b\\x91\\x3d\\xf3\\xf9\\x8b\\x5d\\\n\\xbb\\xf7\\xf6\\x8f\\xeb\\xb7\\x61\\xe3\\x0f\\x0a\\x85\\xe2\\x9b\\x75\\xab\\x0a\\\n\\x0a\\x0a\\xb7\\x6c\\xdb\\xfe\\x2c\\xf3\\xb9\\xab\\xab\\x4a\\xa7\\xd3\\xa3\\x28\\\n\\x1a\\xdb\\xfe\\x03\\x00\\x00\\x41\\x90\\x9b\\x36\\x6f\\x39\\x7f\\xe1\\x92\\x44\\\n\\x22\\x99\\x38\\x7e\\x6c\\xa7\\x8e\\x1d\\x2a\\x8c\\x7d\\xe6\\x3a\\x58\\x94\\x58\\\n\\xc1\\xfc\\x88\\x88\\x30\\x8b\\x46\\x35\\x04\\x44\\x42\\x21\\x45\\x51\\x76\\x76\\\n\\x76\\x00\\x00\\x99\\x4c\\xca\\x3d\\x37\\x77\\x35\\xe7\\xb4\\x2a\\x83\\x92\\x78\\\n\\xe2\\x94\\x44\\x22\\x61\\xbd\\x91\\x9b\\x9b\\xb7\\x7b\\xef\\xfe\\x99\\x33\\xa6\\\n\\xb1\\xdb\\x5c\\xbb\\xf7\\xee\\x6f\\x16\\xd9\\x34\\x2c\\x34\\xa4\\x42\\x20\\x8a\\\n\\x8a\\x8a\\xcf\\x9d\\xbf\\x10\\x1a\\x12\\xac\\xc6\\x30\\x8b\\x99\\xc3\\x52\\x42\\\n\\x30\\x04\\x00\\xb8\\x73\\xe7\\x6e\\xf2\\xf9\\x0b\\x93\\x26\\x8e\\x93\\x48\\x24\\\n\\xff\\xbb\\x96\\xb2\\x77\\x7f\\x82\\x5e\\x6f\\xf0\\x70\\x77\\xff\\x6a\\xf9\\xd2\\\n\\x86\\x70\\x11\\xc3\\x30\\x33\\x66\\xcd\\x5b\\xb6\\x74\\x51\\xe7\\x4e\\xb1\\x00\\\n\\x00\\xb1\\x58\\xbc\\x64\\xd1\\xfc\\xcc\\xe7\\x2f\\x56\\xac\\x5c\\xb3\\x73\\xc7\\\n\\x56\\x36\\xd5\\x7b\\x76\\xef\\xba\\x77\\xdf\\x01\\x6d\\x79\\x79\\xc7\\x0e\\xed\\\n\\xc7\\x8f\\x1b\\xc3\\xf6\\x05\\xf3\\xf4\\xa8\\xbc\\x5f\\x58\\x4b\\x0f\\x00\\x80\\\n\\x35\\x33\\xcd\\x73\\xd5\\x5c\\x68\\xed\\xfa\\x48\\x25\\x99\\x60\\xcd\\x0a\\x2e\\\n\\x9a\\x49\\x67\\x93\\x8b\\x8b\\x4b\\x3e\\x19\\x36\\x04\\x00\\x80\\xe1\\xf8\\xf7\\\n\\x1b\\x36\\x8d\\x1f\\x37\\xc6\\xc1\\xde\\xbe\\xfe\\x97\\x05\\xba\\x72\\x08\\x82\\\n\\xbc\\x7d\\x9b\\xe8\\xb4\\xa5\\x14\\x49\\x08\\x20\\x48\\x57\\x56\\x62\\xd0\\x1b\\\n\\x9e\\x3c\\x79\\xea\\xea\\xea\\x26\\x10\\xc0\\x10\\x04\\x21\\x08\\x42\\xd3\\x0c\\\n\\x45\\xd1\\x29\\x37\\x6e\\x64\\x66\\x3e\\x17\\x8a\\x44\\xd1\\xcd\\x9b\\xf9\\xfa\\\n\\xfa\\xe8\\x75\\xfa\\xff\\xa5\\xa4\\x44\\x35\\x6f\\x9e\\x9a\\x7a\\xab\\xac\\x4c\\\n\\xab\\x52\\x39\\xb7\\x6a\\xd9\\x42\\x20\\x10\\x64\\x65\\x65\\xe5\\xe6\\xe5\\x33\\\n\\x0c\\x74\\xff\\x41\\x86\\x52\\x26\\x51\\xb9\\xba\\xb0\\x8d\\x3c\\x7a\\xf4\\x44\\\n\\xa7\\xd3\\x45\\x84\\x87\\x01\\x00\\x48\\x8a\\xba\\x76\\x2d\\x25\\x2a\\x2a\\xd2\\\n\\x56\\x6c\\x6b\\xaa\\x4f\\xfa\\xdd\\x7b\\x7f\\x65\\x64\\xd0\\x14\\x13\\x18\\x18\\\n\\xd0\\x2c\\x32\\x02\\x82\\xa0\\x47\\x8f\\x1e\\xd3\\x34\\x1d\\x14\\x14\\xc8\\xad\\\n\\xb3\\x7d\\xbc\\xbd\\x9d\\x9d\\x9d\\xcc\\xf5\\x51\\x6b\\xca\\xee\\xdc\\x49\\x0f\\\n\\x0e\\x0e\\xbc\\x7e\\x2d\\xc5\\x46\\x2c\\xf6\\xf1\\xf1\\x16\\x09\\x85\\xbe\\xbe\\\n\\x3e\\xec\\xea\\xe7\\x4e\\xfa\\xbd\\xd6\\xad\\x5b\\x22\\x30\\x0c\\x00\\xb8\\x93\\\n\\x7e\\xd7\\xcd\\xd5\\x55\\x28\\x12\\x99\\xd2\\xb7\\x6b\\xdb\\x86\\xb5\\x3a\\xf7\\\n\\x65\\x4e\\x05\\xfd\\xcd\\x65\\xfd\\x53\\x0b\\x92\\x40\\x80\\x50\\x14\\xc5\\x7d\\\n\\x9c\\x38\\x3e\\x7e\\xed\\xfa\\x6f\\x6f\\xa7\\xa5\\xb7\\x6a\\x19\\xb3\\x74\\xd9\\\n\\x8a\\x27\\x4f\\x9e\\x7d\\xbb\\x7e\\x4d\\x99\\x46\\x33\\x76\\xe2\\x94\\x9c\\x9c\\\n\\x9c\\x2f\\x96\\x2c\\xe4\\x28\\x21\\x08\\xfa\\x71\\xfb\\xcf\\x39\\x39\\x2f\\x87\\\n\\x7e\\x3c\\xc8\\x60\\x34\\xae\\xf8\\x6a\\x35\\x00\\x60\\xfe\\xdc\\x59\\x00\\x00\\\n\\x8b\\x8c\\x99\\xcf\\x5f\\xbc\\x78\\x91\\x25\\x95\\x4a\\xee\\xdd\\x7f\\xe0\\xe6\\\n\\xe6\\xfa\\x96\\x0e\\x08\\x02\\xc3\\xb0\\x35\\x46\\x0c\\xc3\\x1a\\x35\\xf2\\x68\\\n\\xd9\\x22\\x86\\xa2\\xa9\\x9d\\xbf\\xec\\x9e\\xf2\\xd9\\xcc\\x83\\x09\\x7b\\x00\\\n\\x00\\x5f\\xae\\x58\\xf9\\xe7\\xff\\xae\\xaf\\x59\\xb5\\x42\\xa9\\x50\\xac\\x59\\\n\\xf7\\x2d\\x49\\x56\\x5c\\x6b\\xb3\\xcd\\x5a\\x64\\xc7\\x71\\x7c\\xe3\\xa6\\x2d\\\n\\xa9\\xb7\\x6e\\xf7\\xeb\\xd3\\x5b\\x28\\x12\\x92\\x24\\xd9\\xb7\\xff\\xe0\\x79\\\n\\x73\\x3e\\x9f\\x35\\x73\\xfa\\xa9\\xd3\\x49\\x73\\xe6\\x2f\\xbe\\x7d\\xf3\\x4f\\\n\\x47\\x07\\x07\\x00\\xc0\\xec\\xb9\\x0b\\x04\\x02\\xc1\\xd6\\xcd\\x1b\\x33\\x32\\\n\\x1e\\x8d\\x1e\\x3b\\x31\\x39\\x29\\x31\\x30\\xc0\\x9f\\x13\\x61\\x51\\x07\\x8b\\\n\\x12\\x2b\\x98\\x6f\\xcd\\xa8\\x86\\x00\\x8c\\x20\\xa4\\x49\\x88\\x59\\x58\\x0b\\\n\\x2e\\x17\\x8b\\xca\\x83\\x52\\x58\\x54\\xfc\\xdb\\xb6\\x1d\\x6c\\x41\\x3a\\x7a\\\n\\xfc\\xc4\\xa6\\xcd\\xdb\\x5a\\xb6\\x88\\x89\\xed\\xd0\\x8e\\x20\\xc8\\xa5\\xcb\\\n\\x56\\x5c\\x3c\\x97\\x64\\x1e\\x08\\x9c\\xc0\\x37\\x6e\\xda\\x32\\x75\\xca\\xa7\\\n\\x95\\x64\\x8e\\x00\\x41\\x20\\x08\\x7a\\xfc\\xf8\\xc9\\xa8\\xf8\\x09\\x4b\\x16\\\n\\xcf\\x97\\x48\\x24\\x2f\\x73\\x73\\x27\\x4c\\x9a\\xfa\\xdd\\xfa\\x35\\x52\\xa9\\\n\\xb4\\xa8\\xa8\\xa8\\x81\\x5c\\x74\\xff\\xc1\\x5f\\xd9\\xd9\\x39\\xfd\\xe3\\xfa\\\n\\x9a\\x3e\\x1c\\x32\\x78\\xe0\\xc4\\xc9\\xd3\\xd8\\x61\\xfd\\xc7\\xed\\x3f\\xa3\\\n\\x46\\x74\\xd4\\xc8\\x4f\\x0a\\x0b\\x0b\\xe7\\x2f\\x5a\\x5a\\x5c\\x52\\xb2\\x70\\\n\\xfe\\x1c\\x8b\\xe9\\x61\\xaf\\x54\\x5a\\xb3\\x8e\\x5b\\xb0\\x9a\\x87\\xbe\\x12\\\n\\x33\\x2b\\xe4\\xaa\\x45\\xa1\\xde\\x5e\\x9e\\xb5\\xeb\\x23\\xd6\\xe2\\x5b\\x79\\\n\\x8c\\x60\\x18\\x16\\x20\\x82\\xb9\\xf3\\x16\\xf5\\xed\\xdd\\x4b\\x2e\\x97\\xa5\\\n\\xa7\\xdf\\xdd\\xb5\\x67\\xdf\\x9c\\x59\\x33\\x1a\\x22\\x34\\x8e\\x0e\\x0e\\x76\\\n\\x76\\xb6\\x3f\\xfc\\xb0\\xb1\\x65\\x8b\\xe8\\x80\\x26\\x7e\\x10\\x00\\x14\\x45\\\n\\x92\\x34\\x75\\x3d\\xe5\\x46\\x6c\\xc7\\x4e\\x10\\x43\\xc1\\xec\\xc1\\x12\\x03\\\n\\xce\\x26\\x9f\\x83\\x61\\x78\\xe0\\xa0\\x41\\xa5\\xa5\\x9a\\xfd\\x09\\xfb\\xc7\\\n\\x8c\\x1e\\x25\\x44\\xe0\\xd4\\xd4\\xdb\\x7a\\x03\\x1a\\x1a\\x1c\\x04\\xc1\\x48\\\n\\x72\\xf2\\x39\\xa1\\xc8\\xa6\\x55\\x8b\\x68\\xb5\\xa6\\x4c\\x5b\\xa6\\x15\\x8b\\\n\\x6d\\x0b\\x0b\\x0a\\x25\\x12\\x1f\\x81\\x40\\xc4\\x36\\x02\\x43\\x50\\xf2\\xb9\\\n\\xf3\\x11\\x4d\\x23\\x01\\x4d\\x16\\x14\\x14\\xdc\\x49\\x4f\\xef\\xd2\\xb5\\x1b\\\n\\x86\\xea\\x19\\x9a\\x66\\x95\\xb9\\x78\\xe9\\x72\\x69\\x89\\xba\\x4f\\x9f\\x7e\\\n\\x14\\xcd\\x1c\\x48\\x48\\xd0\\x1b\\xd0\\x76\\x6d\\x5b\\xe2\\x38\\x7e\\xf9\\xca\\\n\\x1f\\xe1\\x11\\x4d\\x09\\x1c\\x35\\xe8\\x0d\\xbf\\x5f\\xb9\\xda\\x3c\\x2a\\x1a\\\n\\x11\\x08\\x4e\\x27\\x9d\\xac\\xa0\\x0f\\x45\\x51\\xd7\\x53\\x6e\\x14\\x14\\x16\\\n\\x05\\x04\\xfa\\xdb\\x8a\\x25\\x24\\x45\\xa5\\xde\\xba\\x11\\x10\\x18\\x44\\xe0\\\n\\x68\\xc6\\xc3\\x47\\x29\\x37\\x6e\\x36\\xf6\\xf3\\x77\\x77\\x73\\xa6\\x48\\xea\\\n\\xe2\\xa5\\xcb\\x13\\x26\\x4c\\x40\\x51\\xd4\\x94\\x5e\\x64\\x2b\\x65\\xad\\xd6\\\n\\x98\\xe9\\x7f\\x3a\\xe9\\x44\\x05\\x59\\x4a\\xb9\\xf4\\x1f\\x59\\x90\\x20\\x00\\\n\\xd1\\x0c\\xcd\\x7d\\x94\\x48\\x24\\x8e\\x8e\\x8e\\x7a\\xbd\\x3e\\x3f\\xbf\\x60\\\n\\xfb\\x8e\\x9d\\x77\\xd3\\x52\\x9c\\x9c\\x9c\\x80\\x97\\xe7\\xca\\x15\\xcb\\x46\\\n\\xc5\\x4f\\x98\\x3f\\x6f\\xb6\\x8d\\x48\\xc4\\x52\\xba\\xb8\\x38\\xc3\\x30\\xbc\\\n\\x74\\xd1\\x7c\\x7f\\xff\\x26\\x00\\x80\\x97\\x2f\\x73\\x6f\\xa7\\xdd\\x01\\x00\\\n\\x58\\x63\\x1c\\xf9\\xc9\\xb0\\x7b\\xf7\\x1f\\xb8\\xbb\\xb9\\xcd\\xf8\\x6c\\x8a\\\n\\x45\\x4d\\xac\\x31\\x8a\\xc5\\xe2\\x51\\x23\\x86\\xb3\\x34\\xce\\x4e\\x4e\\x23\\\n\\xc7\\x8c\\x07\\x00\\x14\\x17\\x17\\x6f\\xd9\\xb6\\xe3\\xda\\xd5\\x4b\\xbe\\x3e\\\n\\xde\\x00\\x80\\x76\\x1f\\xb4\\x35\\x3d\\x26\\x79\\x7b\\xa7\\xc2\\x02\\xbb\\xbb\\\n\\x9b\\x1b\\x00\\xe0\\xbb\\xf5\\x6b\\xfc\\xfc\\x1a\\x03\\x00\\xee\\xdd\\x7f\\xa0\\\n\\xd5\\x6a\\xfb\\x7f\\xd4\\x17\\x00\\xf0\\xf1\\xe0\\x81\\x2b\\x56\\xae\\x79\\xfe\\\n\\xfc\\x85\\xa3\\x83\\xc3\\xcb\\xdc\\xdc\\xe3\\x27\\x4e\\x66\\xdc\\x4f\\xb3\\x11\\\n\\x89\\x1a\\x79\\x78\\xb4\\x6d\\xd3\\x2a\\xe9\\x4c\\x32\\x57\\x90\\xac\\xe9\\x60\\\n\\x51\\xa2\\xb9\\xf9\\xe6\\x34\\x0d\\x04\\x08\\x82\\x36\\x6e\\xda\\xbc\\x7b\\xcf\\\n\\x3e\\x82\\x24\\x07\\xc4\\xf5\\x5b\\x30\\x6f\\x76\\x95\\xc1\\xad\\x32\\x28\\x1f\\\n\\xf5\\xeb\\xbd\\x64\\xe9\\x97\\x79\\x79\\xf9\\x6e\\x6e\\xae\\x67\\x93\\xcf\\x4f\\\n\\x99\\x34\\xe1\\xb7\\x23\\x47\\x63\\x3b\\xb4\\xfb\\xe3\\xea\\x9f\\xe1\\x61\\xa1\\\n\\x16\\x4f\\xbc\\xd9\\x02\\x2f\\x12\\x8a\\x64\\x0e\\x52\\x8b\\x99\\x03\\x00\\x60\\\n\\x00\\x73\\xeb\\x56\\xda\\xfa\\x6f\\x37\\xec\\xfc\\x69\\x6b\\xb3\\xc8\\xa6\\x00\\\n\\x80\\xa2\\xc2\\x62\\xd4\\x88\\xba\\xb9\\xb9\\x86\\x86\\x04\\x37\\x9c\\x8b\\x72\\\n\\x72\\x5e\\xda\\xdb\\x2b\\x2b\\xec\\x68\\xb9\\xb9\\xb9\\x6a\\xb5\\xe5\\x14\\x45\\\n\\x39\\x39\\x39\\x42\\x10\\x34\\x7b\\xd6\\x74\\x0f\\x77\\x77\\x76\\xee\\x3c\\x6b\\\n\\xce\\x82\\xb9\\xb3\\x67\\x16\\x14\\x16\\x9a\\xa7\\xc7\\xf4\\x69\\x93\\xad\\x59\\\n\\x57\\x49\\x42\\x56\\x62\\x66\\x85\\x5c\\xb5\\x98\\x93\\xd3\\xa7\\x4d\\xae\\x5d\\\n\\x1f\\xb1\\x16\\x5f\\x6b\\xbd\\x9b\\x43\\xe7\\x4e\\xb1\\x8d\\x3c\\x1b\\x1d\\x4b\\\n\\x3c\\x31\\x62\\xf8\\xd0\\xb3\\xc9\\xe7\\x3f\\x19\\x36\\x84\\x9d\\xbe\\xd4\\xff\\\n\\x74\\x0a\\x86\\x87\\x0c\\x19\\x7c\\xed\\x5a\\x6a\\x62\\xe2\\x49\\x85\\x52\\xd1\\\n\\xa3\\x6b\\x67\\x4f\\x4f\\x4f\\x3b\\x5b\\x5b\\x00\\x80\\x9d\\x54\\x61\\xd4\\x95\\\n\\xb2\\xab\\x4e\\xad\\xb6\\xfc\\xe1\\xa3\\x47\\xf3\\xe6\\x2d\\x10\\x08\\x04\\x62\\\n\\x1b\\xa1\\x97\\xa7\\xe7\\x8b\\xac\\x97\\xcd\\x23\\xc3\\x20\\x08\\xea\\xd5\\xbb\\\n\\x9f\\x52\\x21\\xc3\\x51\\x83\\x5a\\x5d\\x5a\\x50\\x50\\x24\\xb6\\x93\\x35\\x8d\\\n\\x08\\x2f\\x2e\\xd5\\x38\\x38\\x3a\\x76\\x68\\xdf\\x81\\x24\\x08\\x02\\x47\\xd9\\\n\\x46\\x7c\\x7d\\x7d\\xe5\\x0a\\xc5\\x93\\x27\\x99\\xfe\\x7e\\xde\\x4f\\x9f\\x3e\\\n\\x8b\\x8c\\x8c\\x14\\xdb\\x49\\x51\\x43\\xf9\\xeb\\x9d\\x7c\\x7d\\x6a\\xea\\xed\\\n\\x59\\xb3\\x67\\xcb\\xe5\\x4a\\xbd\\x4e\\xd3\\xa5\\x73\\xc7\\xdf\\x0e\\x1f\\xe9\\\n\\xdc\\xb9\\x53\\x50\\x50\\xe0\\xf9\\x8b\\x97\\x73\\xf3\\x0b\\x9d\\x1d\\xe4\\x19\\\n\\x0f\\x1f\\x85\\x86\\x04\\x3b\\xb9\\xb8\\x67\\x67\\x3e\\x32\\xd7\\x27\\x34\\xd8\\\n\\x1f\\x00\\x30\\x68\\xf0\\x50\\xa5\\x52\\x8e\\xa3\\x46\\xbd\\x41\\x9f\\x94\\x74\\\n\\x1a\\xa7\\x00\\x04\\xc0\\x93\\xa7\\x99\\x6d\\xda\\xb4\\xf9\\x2b\\x23\\xc3\\xdb\\\n\\xab\\x51\\x66\\xe6\\x43\\x95\\x8b\\x8b\\x87\\xa7\\x4f\\x61\\x5e\\xb6\\x29\\x3d\\\n\\x4e\\x10\\xac\\xd5\\x4d\\x23\\x23\\x8a\\x4a\\xd5\\x9c\\xfe\\xc5\\xc5\\x85\\xe6\\\n\\xb2\\x1c\\x23\\xc3\\x28\\x92\\xf8\\xe7\\x15\\x24\\x8a\\xa6\\x68\\xfa\\xcd\\x9e\\\n\\x3b\\x4e\\x10\\xea\\x52\\xb5\\xaf\\x8f\\xf7\\xdd\\x7b\\xf7\\x55\\x2a\\x15\\x77\\\n\\xdf\\xa9\\x65\\x8b\\x18\\x0c\\xc3\\x8a\\x8a\\x8a\\x1a\\x79\\xbc\\x39\\x46\\x63\\\n\\x77\\x81\\x58\\x48\\xa5\\xaf\\x0a\\x72\\x75\\x18\\x2b\\x80\\x66\\x18\\x9a\\xa6\\\n\\x2b\\x61\\xbc\\x74\\xf9\\xca\\xb6\\xed\\x3f\\x69\\x34\\x65\\x7a\\xbd\\x1e\\x81\\\n\\x11\\x00\\xc0\\xed\\xb4\\x74\\xa5\\x42\\xc1\\xf6\\x34\\x00\\x80\\xad\\x9d\\x2d\\\n\\x6d\\x76\\x72\\xc0\\x36\\x0b\\x00\\x30\\x67\\xb7\\xb3\\xb3\\x05\\x00\\x70\\xb2\\\n\\x1a\\x79\\x78\\x18\\x8d\\xc6\\xe3\\x89\\x27\\x7b\\xf6\\xe8\\x7e\\xe1\\xd2\\x25\\\n\\x01\\x22\\x60\\x77\\x9c\\xee\\xdd\\x7f\\x40\\x10\\x64\\x9f\\x7e\\x03\\x69\\x9a\\\n\\x66\\x00\\xc3\\x30\\x8c\\xbd\\xbd\\x92\\x6b\\xbf\\x12\\x1d\\xcc\\x25\\x9a\\xa3\\\n\\x3a\\x34\\xf5\\x02\\x9a\\xa2\\x26\\x8c\\x8b\\x1f\\x17\\x3f\\x9a\\xa4\\x48\\x01\\\n\\x22\\xa8\\x3c\\x46\\x9c\\xd3\\xaa\\x0c\\x4a\\xd7\\xae\\x9d\\x8f\\x1c\\x4b\\x8c\\\n\\xed\\xd0\\xce\\xd3\\xd3\\x63\\xc8\\xc7\\x83\\x3a\\x76\\xe9\\xb1\\x6e\\xf5\\xd7\\\n\\x47\\x8f\\x25\\x8e\\x1e\\x35\\xc2\\x62\\x20\\xd8\\x4d\\x60\\x18\\x86\\xac\\x65\\\n\\x0e\\x00\\x80\\xa6\\x99\\x95\\xab\\xd7\\x29\\x95\\x4a\\xee\\x36\\x41\\x64\\x64\\\n\\xc4\\xc8\\x11\\xc3\\xba\\x74\\xeb\\xd5\\xba\\x75\\xab\\x65\\x4b\\x16\\x44\\x44\\\n\\x84\\x37\\x84\\x8b\\x6c\\x6d\\xc5\\xe5\\xe5\\x3a\\x8a\\xa2\\x10\\xe4\\x4d\\x20\\\n\\x4a\\x4b\\x4b\\x1d\\x1d\\x1c\\xd8\\x27\\xb6\\xb6\\xb6\\x46\\x83\\x91\\x7d\\x1e\\\n\\x13\\x1d\\xa5\\xd3\\xe9\\x34\\x1a\\x8d\\xb5\\xf4\\xb0\\x66\\x5d\\x25\\xa1\\xaf\\\n\\xc4\\xcc\\x0a\\xb9\\x6a\\x4d\\x68\\xf5\\xfb\\xc8\\xf4\\x99\\x73\\x7e\\xbf\\xf2\\\n\\x07\\x00\\x60\\xe7\\x8e\\x6d\\x45\\xc5\\xc5\\xd6\\xe2\\x6b\\x35\\x46\\x0c\\xc3\\\n\\x5e\\x78\\x9b\\x38\\x2e\\xfe\\xc0\\xaf\\x87\\x46\\x0c\\x1f\\x7a\\x3a\\xe9\\xec\\\n\\xa1\\x03\\x7b\\x1b\\x2e\\x81\\xed\\x6c\\x6d\\x3b\\x77\\x6e\\xdf\\xbe\\x43\\xfb\\\n\\xcb\\x97\\x2f\\xff\\x7a\\xe8\\xc8\\xb8\\x71\\xf1\\x72\\xa9\\x04\\x00\\x00\\x43\\\n\\x10\\x60\\x00\\x03\\x00\\xc3\\x30\\x85\\x45\\x85\\x14\\xc5\\xfc\\xf2\\xcb\\x2f\\\n\\x38\\x81\\x02\\x06\\x30\\x80\\x11\\xdb\\x88\\x84\\x22\\x31\\xbb\\x4b\\x69\\xd4\\\n\\x95\\x51\\x14\\x09\\x43\\x10\\x4d\\x91\\x88\\x40\\x08\\x00\\xa0\\x48\\x82\\xa6\\\n\\x28\\x1c\\x43\\xd9\\x7a\\xc3\\x36\\x02\\x41\\x50\\x54\\xb3\\xc8\\xd4\\xd4\\x9b\\\n\\xa1\\xa1\\x41\\x4f\\x9e\\x3c\\x1d\\x39\\x6a\\x34\\x66\\xd4\\xbf\\x39\\xa4\\x28\\\n\\x2c\\x94\\xca\\xa4\\x8e\\x4e\\x2a\\x4d\\x49\\x1e\\x4d\\xd3\\x6e\\xae\\x2a\\x92\\\n\\x24\\x09\\x8a\\x11\\x08\\x85\\xe1\\xe1\\xa1\\x37\\x6f\\xde\\xe8\\xdb\\xbb\\xd7\\\n\\xbd\\xfb\\x0f\\x06\\x0c\\xe8\\x8f\\xa3\\x86\\xfc\\xc2\\x02\\x73\\x7d\\xec\\x24\\\n\\x32\\x00\\x80\\x44\\x2a\\xd5\\x6b\\xd5\\x14\\x45\\x22\\x10\\xf0\\xf3\\x6b\\xfc\\\n\\xe0\\xde\\x5d\\x57\\x17\\x47\\x85\\x42\\x16\\x1d\\xdd\\x62\\xd3\\xa6\\x8d\\x3d\\\n\\x7b\\xf6\\xc8\\xc8\\x78\\x18\\x15\\x1d\\x4d\\x91\\x04\\x02\\x43\\xa6\\xf4\\xec\\\n\\xe1\\x28\\x6b\\xb5\\xa9\\xfe\\xb9\\xb9\\x39\\x16\\x6d\\xff\\x67\\x16\\x24\\x8a\\\n\\x26\\x88\\x37\\x7a\\x1f\\x39\\x72\\x2c\\x24\\x24\\xb8\\x71\\x63\\xdf\\xe7\\x2f\\\n\\xb2\\xd4\\x1a\\x0d\\xd7\\x45\\xb5\\xe5\\x5a\\x04\\x41\\x2a\\xec\\x11\\xd3\\x34\\\n\\xcd\\x0d\\xc1\\xe4\\x6b\\xe3\\x11\\x04\\xb1\\xc6\\x88\\x20\\x88\\xa9\\x2c\\x0e\\\n\\x24\\x49\\x12\\x24\\x61\\x8d\\x31\\xe3\\xe1\\xa3\\x89\\x93\\xa6\\x1d\\xf9\\x2d\\\n\\x21\\x24\\x38\\x28\\x3d\\xfd\\x6e\\xfc\\xf8\\x49\\xec\\xd1\\xb7\\x4e\\xaf\\x27\\\n\\x08\\x52\\x28\\x14\\xb0\\xdb\\x08\\x38\\x8e\\x5b\\x6c\\xd6\\x22\\x7b\\x05\\x28\\\n\\x95\\x8a\\x99\\xd3\\xa7\\xed\\xd9\\x97\\xb0\\x67\\x5f\\x82\\xb7\\x97\\xe7\\x91\\\n\\xdf\\x12\\xd8\\xd1\\x53\\x2a\\x91\\x4a\\xec\\xec\\x4e\\x25\\x1e\\xb6\\x78\\xd2\\\n\\x6e\\x4d\\x07\\x6b\\x12\\x4d\\xcd\\xaf\\x8e\\x56\\xf5\\x56\\x90\\x68\\x5a\\x28\\\n\\x14\\xca\\xe5\\x32\\xee\\x49\\x25\\x31\\x62\\x9d\\x56\\x65\\x50\\x00\\x00\\xc3\\\n\\x86\\x0e\\x5e\\xff\\xcd\\x86\\xd2\\x52\\xf5\\xa0\\x01\\x71\\x3e\\xde\\x5e\\xe1\\\n\\x61\\xa1\\x27\\x4e\\x25\\xdd\\xb8\\x99\\xba\\x7e\\xed\\x2a\\x8b\\x81\\x78\\x55\\\n\\xe7\\x68\\xc6\\x5a\\xe6\\xb0\\xcf\\xf7\\xee\\xfa\\x79\\xf2\\xb4\\x99\\x43\\x86\\\n\\x8f\\x3a\\x74\\x60\\x2f\\x1b\\x85\\x25\\x8b\\xe6\\x8f\\x1f\\x3b\\x66\\xf3\\xd6\\\n\\x1f\\x7b\\xf5\\x1b\\x78\\xf3\\xda\\x15\\x95\\xca\\xa5\\xde\\x5d\\xd4\\x34\\x22\\\n\\x82\\xa6\\xa8\\xdf\\xaf\\x5c\\xed\\x18\\xdb\\x9e\\x7b\\x78\\xf2\\xf4\\x19\\xf6\\\n\\x48\\x09\\x00\\x20\\xb6\\xb1\\xc1\\x5e\\x27\\x58\\x51\\x51\\x91\\x58\\x2c\\x56\\\n\\x2a\\x95\\xd6\\xd2\\xc3\\x9a\\x75\\x95\\x87\\xbe\\x9a\\x66\\x5a\\x14\\x5a\\xa3\\\n\\x3e\\xb2\\xe1\\xbb\\x75\\x1c\\xe3\\x85\\x8b\\x97\\xad\\xc5\\xd7\\x9a\\x15\\x5c\\\n\\x86\\x0c\\xf9\\x78\\xe0\\x57\\xab\\xd6\\x9c\\xbf\\x70\\x29\\x30\\x30\\xc0\\xd5\\\n\\x55\\xd5\\xa0\\xa3\\x1e\\x43\\xd3\\x02\\x18\\x74\\xed\\x12\\x5b\\x5e\\xae\\xcd\\\n\\xce\\xce\\x0b\\x0f\\x0d\\x64\\x4b\\x23\\x00\\x0c\\x4d\\xd3\\x14\\x4d\\x8b\\x44\\\n\\x22\\x91\\x48\\xf8\\xe9\\xe4\\xa9\\x0c\\x4d\\xb1\\x3b\\x3f\\x00\\x00\\xcc\\xa8\\\n\\x67\\xd8\\x09\\x16\\xc2\\xc6\\x85\\x62\\xde\\x2c\\xbc\\x20\\x8a\\xa4\\x4c\\x43\\\n\\x46\\xd1\\x34\\x04\\x40\\x78\\x68\\xc8\\xef\\x57\\xae\\xbe\\xc8\\xca\\x71\\x74\\\n\\x72\\x72\\x74\\x72\\x29\\xd7\\x14\\xbf\\x59\\xab\\x41\\x90\\xd1\\x88\\x92\\x24\\\n\\xc9\\x66\\x32\\x86\\xa3\\x30\\x0c\\x4b\\x24\\x52\\x43\\x39\\xd6\\x2c\\x32\\x72\\\n\\xe7\\x2f\\xbb\\x5a\\xb4\\x6c\\x29\\x57\\xc8\\xdd\\x3c\\xbc\\xf4\\xda\\x52\\x91\\\n\\xd0\\x82\\x3e\\x46\\x7d\\x39\\x27\\x8e\\xfd\\x23\\x2c\\x2c\\xe4\\xfa\\xf5\\x9b\\\n\\xbe\\x3e\\xbe\\xe1\\x61\\xe1\\x0a\\xa5\\x5c\\xe5\\xe2\\xf2\\xf8\\xf1\\xd3\\xdc\\\n\\xbc\\xbc\\xb8\\xfe\\x03\\x51\\x93\\x5a\\xc8\\xd2\\xb3\\x05\\x89\\xb5\\xda\\x54\\\n\\x7f\\x8b\\xb2\\x4c\\x4b\\x69\\x83\\xa2\\x9e\\xd7\\xc5\\x18\\x86\\x61\\x18\\xc6\\\n\\x5a\\x9b\\x74\\x36\\x79\\xf9\\xd7\\xab\\xbf\\x5d\\xb7\\x0a\\x00\\x10\\xd5\\xbc\\\n\\x19\\xc3\\x30\\x07\\x0f\\x1d\\x66\\xc9\\xfe\\xbb\\x6b\\x6f\\xf7\\x6e\\x5d\\x4c\\\n\\x27\\x4d\\x00\\x00\\x14\\x45\\x39\\xcf\\x62\\x18\\xce\\xfa\\xab\\x12\\x46\\x17\\\n\\x67\\xa7\\xb4\\xb4\\xf4\\x8a\\x0a\\xe0\\x38\\x00\\x00\\x43\\x31\\x6b\\x8c\\xe9\\\n\\x77\\xef\\xb9\\x7b\\xb8\\x87\\x04\\x07\\x01\\x00\\x34\\x65\\x65\\x38\\x4e\\x00\\\n\\x00\\x62\\xa2\\x9b\\x0b\\x85\\x82\\x1f\\x77\\xfc\\xcc\\x12\\x97\\x69\\xb5\\xac\\\n\\x15\\xe6\\xcd\\x5a\\x64\\x67\\x89\\x29\\xfa\\x4d\\x46\\xee\\x4b\\xf8\\x75\\xe2\\\n\\xf8\\xb1\\x3b\\xb6\\x6d\\xfe\\x6a\\xc5\\x32\\x6e\\x52\\x19\\x13\\x13\\x25\\x91\\\n\\xd8\\x2d\\xfe\\x62\\x39\\x41\\x90\\xe6\\x37\\xb8\\xac\\xe9\\x60\\x51\\x62\\x05\\\n\\xf3\\xad\\xd1\\x34\\x04\\x30\\x1c\\xa7\\xde\\x3e\\x3c\\xb0\\xe6\\x6a\\xce\\x69\\\n\\x55\\x06\\x05\\x00\\xd0\\xb9\\x63\\x6c\\x56\\x76\\x4e\\xca\\x8d\\x1b\\x1f\\xb4\\\n\\x6d\\x03\\x00\\x18\\xf1\\xc9\\xb0\\xb5\\xeb\\xbf\\xeb\\xde\\xad\\x0b\\x3b\\xfc\\\n\\x99\\x07\\x82\\x3d\\xc7\\x62\\xc7\\x32\\x8b\\x99\\x43\\x10\\x24\\xc3\\x30\\x08\\\n\\x82\\xec\\xda\\xb9\\xbd\\xb0\\xa8\\x78\\xe2\\xe4\\xcf\\x18\\x86\\x61\\x0f\\x38\\\n\\x5d\\x5d\\x55\\x5f\\x7e\\xb1\\x58\\xa5\\x72\\xc9\\xcf\\x2f\\x68\\x08\\x17\\x29\\\n\\x95\\x8a\\x89\\x13\\xc6\\x7e\\x3e\\x7b\\xde\\xd3\\xa7\\xcf\\xd8\\x27\\xa7\\x93\\\n\\xce\\x1e\\x3e\\x7c\\x8c\\xbb\\xdf\\x0c\\xbf\\x1e\\xcd\\x19\\x86\\xd9\\xbc\\x75\\\n\\xfb\\xa0\\x01\\x71\\x02\\x81\\xc0\\x5a\\x7a\\x58\\xb4\\xce\\xf4\\x54\\xdc\\x3c\\\n\\xf4\\x95\\x98\\x59\\x21\\x57\\x2d\\x0a\\xad\\x5d\\x1f\\xa9\\xbc\\xb7\\x5a\\xb4\\\n\\x82\\x8b\\x26\\xbb\\xbd\\x1f\\xd7\\xaf\\xef\\xb2\\xe5\\x5f\\x8f\\x19\\xf5\\x49\\\n\\x83\\x4e\\xa7\\xa8\\xd7\\x6a\\xe0\\x38\\xae\\xd3\\x95\\x4b\\xa5\\x52\\x44\\x68\\\n\\xc3\\x16\\x18\\x92\\xa2\\xd9\\x7a\\xe9\\xe1\\xe1\\x21\\x12\\x09\\x4f\\x1e\\x3f\\\n\\xa6\\x2e\\xce\\xd7\\xaa\\x0b\\xb5\\xa5\\x85\\x65\\x25\\x05\\x98\\x51\\x4f\\x92\\\n\\x24\\xc3\\xd0\\x00\\x82\\x38\\x27\\xbf\\x3a\\x9b\\xb0\\xb3\\xcb\\xcd\\x7d\\xc9\\\n\\xde\\x4c\\x61\\x33\\x93\\x24\\x09\\x00\\x01\\xa1\\x48\\x14\\x1c\\x1c\\x78\\xe6\\\n\\x4c\\x52\\x74\\x74\\x34\\x45\\x91\\xb4\\xc9\\x10\\xe1\\xe6\\xe6\\xc6\\x00\\x90\\\n\\x96\\x76\\x9b\\xfd\\x98\\x96\\x96\\xde\\xa4\\x89\\x9f\\x48\\x24\\x62\\x68\\xda\\\n\\x5e\\xa9\\xf0\\xf0\\xf0\\x48\\x3c\\x76\\xbc\\x75\\xeb\\x56\\x34\\x4d\\x51\\x14\\\n\\xe9\\xe1\\xe1\\x6e\\xae\\x8f\\x41\\xa7\\x05\\x00\\x30\\x26\\x47\\x24\\x8d\\x7d\\\n\\x7c\\xd4\\xea\\xd2\\x9c\\x97\\x2f\\xfd\\x03\\x82\\x70\\xd4\\x10\\x11\\x11\\x96\\\n\\x9c\\x7c\\xc6\\x3f\\x20\\xd0\\x46\\x6c\\x8b\\xa3\\x46\\x56\\x61\\x8e\\x9e\\x9d\\\n\\x1f\\xd0\\x34\\x05\\x00\\x64\\xaa\\xbf\\x45\\x59\\xef\\xac\\x20\\xd5\\xf3\\x0a\\\n\\x09\\x35\\xa2\\x9b\\x36\\x6f\\x3b\\x7c\\xf4\\xb8\\xba\\x54\\x1d\\x1c\\x1c\\xb4\\\n\\x7f\\xf7\\x4e\\x76\\xbb\\x40\\xa1\\x90\\x6f\\xdb\\xbc\\x71\\xfa\\xcc\\x39\\x67\\\n\\xcf\\x5d\\x30\\x18\\x0c\\x06\\x83\\x61\\xe7\\x4f\\xdb\\x4c\\x19\\x8d\\x46\\x23\\\n\\x4d\\xd3\\x5c\\xca\\x6a\\xb5\\xe5\\xec\\xdf\\x95\\x30\\xf6\\xed\\xdd\\x6b\\xcb\\\n\\xd6\\x1d\\xcd\\x63\\xda\\xf4\\x8f\\xfb\\x68\\xf1\\xc2\\xb9\\xec\\x43\\x83\\xc1\\\n\\xc0\\xfe\\x6b\\x8d\\x31\\xb6\\x7d\\xbb\\x35\\x6b\\xbf\\x89\\x69\\xdd\\x5e\\x26\\\n\\x93\\x7a\\x7b\\x79\\x15\\x97\\x94\\x30\\x0c\\x23\\x95\\x4a\\xb7\\x6c\\xda\\x30\\\n\\x69\\xea\\xf4\\x84\\x03\\x07\\x6d\\x6c\\x6c\\x1c\\x1c\\xec\\x75\\xba\\xb7\\x02\\\n\\xc0\\x35\\x6b\\x91\\x9d\\xfd\\x96\\x24\\xde\\x0c\\xd3\\x11\\x61\\xa1\\xf1\\xe3\\\n\\x27\\xe1\\x18\\x86\\x13\\x84\\x42\\x21\\x8f\\x1f\\x3d\\x6a\\xf1\\xc2\\xb9\\x22\\\n\\xa1\\x70\\xff\\xde\\xff\\x4e\\xf8\\x74\\x6a\\x70\\x58\\x33\\x0f\\x0f\\x77\\xb5\\\n\\x5a\\xf3\\xcd\\xba\\x55\\x5d\\xbb\\x74\\xe2\\xf6\\x31\\x2c\\xea\\x60\\x51\\x22\\\n\\x04\\x41\\xa6\\xe6\\x4f\\x18\\x37\\xc6\\x22\\x4d\\x83\\x14\\x24\\x0c\\x43\\xdf\\\n\\x1e\\x89\\xac\\xb9\\x9a\\x73\\x5a\\x95\\x41\\x61\\x27\\xe0\\x3d\\xbb\\x77\\xb5\\\n\\x11\\xdb\\xb0\\x87\\x07\\x7d\\x7b\\x7f\\x38\\x6b\\xce\\x82\\xb8\\x8f\\xfa\\x56\\\n\\x90\\x6e\\xde\\xa6\\xad\\x58\\x6c\\x31\\x73\\x70\\x1c\\x63\\x87\\x3c\\x95\\xca\\\n\\xe5\\xbf\\x3f\\xff\\xd8\\xb1\\x73\\x8f\\x4d\\x9b\\xb7\\xf9\\xfb\\xfb\\xcd\\x9c\\\n\\x35\\x8f\\x75\\x51\\xd3\\x88\\xf0\\xf0\\xf0\\xd0\\x06\\xea\\x57\\x4b\\x16\\xcd\\\n\\x87\\x61\\x38\\xb6\\x4b\\xcf\\x66\\x91\\x4d\\x51\\x14\\xd5\\xeb\\xf5\\x87\\x0f\\\n\\xee\\x7b\\x73\\x5b\\x89\\x61\\x3e\\x9d\\x32\\xdd\\xbf\\x89\\x5f\\x66\\xe6\\x73\\\n\\x17\\x17\\x97\\xef\\xbf\\x59\\xcb\\x5e\\x5f\\x34\\x4f\\x8f\\x0f\\xda\\xb6\\xb6\\\n\\x68\\x1d\\x07\\x8b\\xe9\\x91\\x7c\\xfe\\x82\\x35\\x33\\x2b\\xe4\\xaa\\x45\\xa1\\\n\\xb5\\xeb\\x23\\x95\\x64\\x82\\xb5\\xde\\xcd\\x05\\x91\\x7d\\xfe\\x61\\xcf\\xee\\\n\\xe7\\xce\\x5f\\x6c\\xdb\\xa6\\x75\\xc3\\x8d\\x77\\xf9\\x05\\x05\\xfb\\x13\\x0e\\\n\\x39\\x3a\\x3a\\x08\\x04\\x88\\x5a\\xad\\x69\\xe2\\xe7\\x17\\x16\\x1e\\x5e\\xa6\\\n\\x29\\x61\\xeb\\x13\\xbb\\xe5\\x80\\xe3\\xb8\\x54\\x2c\\x18\\xd0\\x3f\\xee\\xd4\\\n\\xe9\\x33\\xb7\\x6e\\xa7\\xca\\x64\\x52\\xd4\\x88\\x76\\xeb\\xd6\\xc5\\xdb\\xab\\\n\\x91\\xe9\\x6c\\x00\\x43\\xdf\\x4c\\x0e\\x82\\x02\\x02\\x6e\\xa6\\xde\\xde\\xb0\\\n\\x61\\x43\\x50\\x40\\x40\\x4c\\x8b\\x28\\xb6\\x11\\x91\\x58\\x00\\x00\\xf0\\xf7\\\n\\xf3\\xcb\\xcc\\x7c\\x11\\x1c\\x12\\x6e\\xd4\\x97\\xbd\\x7d\\xf8\\x67\\xd3\\xb7\\\n\\xf7\\x87\\xa7\\x4e\\x26\\x7a\\x7b\\x79\\x61\\x18\\x4a\\x10\\xc4\\x90\\xa1\\xc3\\\n\\x70\\xcc\\xc8\\xb6\\x19\\x1c\\x14\\x90\\x96\\x7e\\x2f\\x20\\x30\\x54\\x5f\\xae\\\n\\x06\\x00\\x20\\x30\\x6c\\xae\\x8f\\x9b\\xab\\x8a\\xdd\\x94\\x02\\x10\\x00\\xcc\\\n\\xab\\x13\\xb2\\x26\\x8d\\xfd\\xec\\x64\\x72\\x91\\x8d\\x8d\\xd6\\xa0\\x0d\\x0a\\\n\\xf4\\x3f\\x93\\x7c\\x3e\\x3a\\xba\\x05\\x81\\xa3\\x00\\x30\\xac\\x75\\x1c\\x3d\\\n\\x67\\x2c\\x80\\xde\\xd2\\xbf\\x7d\\xfb\\xb6\\xe6\\xb2\\xfc\\xde\\xd5\\xeb\\x0a\\\n\\x90\\xf9\\x5d\\xfe\\x94\\x94\\x9b\\x3d\\xfb\\xc4\\x55\\xfe\\xfa\\x85\\xad\\x44\\\n\\x6e\\xf1\\x2d\\x68\\x8a\\xa2\\xf4\\x7a\\x03\\x8e\\x63\\x72\\x85\\xc2\\xfc\\xed\\\n\\x74\\xbd\\x5e\\x7f\\xf7\\xde\\x03\\x7b\\x7b\\xa5\\xe9\\xd5\\xb2\\xea\\xc0\\x1a\\\n\\x23\\x41\\x90\\xf9\\x05\\xf9\\x6e\\xae\\xae\\xd6\\x5e\\x37\\xb1\\xc8\\x48\\x92\\\n\\x64\\x76\\x76\\x8e\\xa3\\xa3\\xa3\\x5c\\x2e\\xc3\\x09\\x82\\xd3\\xd3\\x68\\x34\\\n\\x66\\x65\\xe7\\xb8\\xaa\\x54\\x72\\xb9\\x8c\\x61\\x18\\x6b\\xc7\\xaa\\xd6\\xd8\\\n\\x39\\x24\\x9f\\xbb\\x70\\xf0\\xd0\\xe1\\x6d\\x5b\\xfe\\x03\\x41\\x10\\x49\\x92\\\n\\xd7\\x53\\x6e\\xc6\\x0d\\x1c\\xf2\\xe0\\x6e\\xaa\\x93\\xa3\\x23\\x4b\\x90\\x97\\\n\\x97\\xaf\\xd6\\x68\\x1c\\x1d\\x1c\\xcc\\x37\\x52\\x2c\\xea\\x60\\x4d\\xa2\\xa9\\\n\\xf9\\x55\\x6a\\x55\\x5f\\x21\\xae\\x69\\x8c\\xea\\x42\\xd9\\x10\\xd0\\x6a\\xcb\\\n\\x35\\x65\\x65\\x72\\x99\\xac\\xca\\x17\\xe9\\xeb\\xee\\xa5\\xb2\\x32\\xed\\x5f\\\n\\x19\\x0f\\x15\\x0a\\x79\\xf0\\xeb\\x5b\\xbc\\xaf\\x66\\xb2\\x01\\xa1\\xbf\\xfd\\\n\\xba\\x4f\\x22\\x91\\x48\\x24\\x76\\xec\\xd5\\x06\\x53\\x54\\x92\\x1e\\xd5\\x4f\\\n\\xc8\\xea\\x9b\\x69\\x51\\x68\\x5d\\xfa\\x48\\xad\\xe3\\x7b\\xe5\\x8f\\xab\\x89\\\n\\x27\\x4e\\xad\\x5d\\xfd\\x75\\x95\\x94\\x6c\\x68\\x2a\\x79\\x0f\\xc9\\x56\\x22\\\n\\xb7\\x16\\x1a\\x14\\x27\\x18\\x20\\xa4\\x19\\xca\\x5e\\x69\\x6f\\x27\\x91\\x12\\\n\\xb8\\x51\\xaf\\x55\\x43\\x30\\x6c\\xef\\xe4\\xae\\x29\\xc9\\x63\\x18\\xc6\\xde\\\n\\xc9\\x5d\\x5b\\x5a\\x40\\x92\\x04\\x22\\x10\\x52\\x8c\\x00\\x43\\x51\\x5b\\x5b\\\n\\xb1\\x5c\\xa1\\xd4\\x97\\xab\\x49\\x02\\xb3\\x77\\xf6\\x28\\x2b\\x2d\\x60\\x0f\\\n\\x54\\x6c\\x25\\x0a\\x44\\x20\\xd0\\x95\\x95\\xbc\\xba\\xd1\\x85\\x88\\xe5\\x72\\\n\\x19\\x81\\x63\\xa8\\xb1\\x9c\\x6b\\x24\\x2b\\x2b\\xeb\\xf1\\x93\\xcc\\x01\\x83\\\n\\x86\\x68\\x4a\\xf2\\x2c\\x5d\\x11\\x42\\x34\\x5a\\x83\\x50\\x24\\x50\\xa9\\x54\\\n\\x10\\x04\\x95\\x97\\x95\\x70\\x77\\xf0\\x6c\\xc4\\x12\\xb1\\x9d\\xb4\\xac\\xf4\\\n\\xcd\\xea\\xd6\\x5c\\x1f\\x8a\\xc4\\x95\\x4e\\xee\\x9a\\xe2\\x3c\\xd3\\xb5\\x97\\\n\\x44\\x66\\xcf\\x00\\xc6\\x50\\xae\\x61\\xaf\\x20\\x29\\x9d\\xdc\\xb5\\xea\\x42\\\n\\x56\\x61\\x18\\x86\\x4d\\xe9\\x39\\xab\\x69\\x8a\\x32\\xd5\\xdf\\xa8\\x2f\\x33\\\n\\x97\\xf5\\xea\\xb2\\xc6\\xdf\\x52\\x90\\x3a\\x74\\xec\\x54\\xc5\\xb1\\x6d\\x0d\\\n\\x47\\xab\\xff\\x57\\xf8\\x7a\\xd5\\x5a\\x04\\x41\\xb8\\xbb\\xb9\\x18\\x86\\x45\\\n\\xb5\\xfc\\xe0\\xd6\\x8d\\x3f\\xdf\\x9f\\xdf\\x8f\\xe1\\x43\\xfc\\xf7\\x7a\\xc9\\\n\\xdd\\xab\\xc9\\xe9\\xc4\\x23\\xdc\\xcb\\x73\\x3c\\x00\\x00\\xc5\\x25\\x25\\xa3\\\n\\xc6\\x8c\\x5f\\x38\\x7f\\x4e\\x75\\x56\\x48\\x75\\x0c\\x0d\\x0c\\x23\\x10\\x0c\\\n\\x03\\x00\\x68\\x8a\\x32\\xdd\\xf2\\xaa\\x84\\x98\\xa1\\x69\\xd3\\x41\\xdf\\xda\\\n\\x70\\x0a\\x23\\x30\\x6d\\xb2\\x95\\x67\\x30\\x1a\\x8e\\x1c\\x3d\\xde\\x31\\x36\\\n\\xd6\\x3f\\x20\\x48\\x5f\\xae\\xb1\\xcc\\x03\\x41\\x88\\x40\\xc4\\x30\\x74\\x35\\\n\\x6f\\x0d\\xd4\\x44\\x9f\\x1a\\x97\\x83\\x0a\\xfa\\x37\\xa4\\xac\\x6a\\x6f\\xd9\\\n\\xf5\\xe8\\xfd\\x11\\xdf\\x3d\\xea\\x82\\xee\\xdd\\xba\\x0c\\x1f\\x39\\xd6\\xd1\\\n\\xc1\\x21\\x20\\xa0\\x49\\x41\\x61\\xd1\\xfe\\x84\\x83\\xcb\\x97\\x2d\\x79\\xaf\\\n\\x7e\\xcd\\x8c\\x0f\\xf1\\xdf\\xe8\\x25\\x82\\x20\\x31\\x0c\\x23\\xde\\xc9\\x9d\\\n\\xa5\\x7f\\x0a\\x32\\x33\\x9f\\xc7\\x76\\xe9\\x39\\x78\\x60\\x5c\\x35\\xf7\\xeb\\\n\\xea\\x18\\x1a\\x9a\\xa6\\x40\\xb5\\x47\\xd8\\x9a\\x10\\x33\\xa6\\xa3\\xb9\\x46\\\n\\xad\\xd9\\xb9\\x6b\\x4f\\x68\\x68\\x70\\x50\\x48\\x78\\x25\\x3f\\xea\\xc1\\x30\\\n\\x4c\\x8d\\x7e\\x1f\\xa1\\x46\\xca\\xd7\\x10\\x6f\\xe9\\xdf\\xc0\\xb2\\xaa\\xbd\\\n\\x42\\xe2\\x51\\x77\\x3c\\x7d\\xfa\\x2c\\xe9\\xec\\x39\\xb5\\x5a\\xa3\\x72\\x71\\\n\\xee\\xd9\\xb3\\x5b\\x25\\x97\\xd4\\x79\\xfc\\x7f\\x03\\xc3\\x30\\xd9\\x39\\x2f\\\n\\x55\\x2a\\x17\\xf3\\xf7\\xb4\\x78\\xfc\\xcb\\x80\\x20\\x02\\xb9\\x83\\x0a\\x47\\\n\\xf5\\xd6\\x96\\x47\\x3c\\xf8\\x82\\xc4\\x83\\x07\\x0f\\x1e\\x3c\\xde\\x47\\xf0\\\n\\xff\\x1f\\x12\\x0f\\x1e\\x3c\\x78\\xf0\\xe0\\x0b\\x12\\x0f\\x1e\\x3c\\x78\\xf0\\\n\\xe0\\xf1\\x1a\\xff\\x07\\xb2\\x18\\xe1\\xa3\\x07\\xdd\\x20\\x35\\x00\\x00\\x00\\\n\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x01\\x2d\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x01\\x03\\x00\\x00\\x00\\x25\\x3d\\x6d\\x22\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x06\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x00\\x00\\x00\\x55\\xc2\\xd3\\x7e\\x00\\x00\\\n\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x0e\\x49\\\n\\x44\\x41\\x54\\x08\\xd7\\x63\\x10\\x60\\x60\\x20\\x05\\x01\\x00\\x18\\xb0\\x01\\\n\\x01\\x4a\\xa1\\xe8\\xcd\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\\n\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\\n\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\\n\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\\n\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\\n\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\\n\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\\n\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x04\\x82\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x02\\x6a\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x36\\x6b\\xbc\\x36\\x6b\\xbb\\x36\\x6a\\xbb\\\n\\x39\\x6c\\xbc\\x3b\\x6e\\xbd\\x3a\\x6d\\xbb\\x38\\x6b\\xbb\\x3e\\x70\\xbb\\xd1\\\n\\xe0\\xf6\\xca\\xa0\\x90\\xc6\\x61\\x2a\\xbc\\x42\\x04\\xbf\\x59\\x1f\\xd6\\xa2\\\n\\x86\\xea\\xf0\\xfa\\xed\\xf2\\xfb\\xf6\\xf9\\xfd\\xf7\\xfa\\xfd\\xeb\\xf1\\xfb\\\n\\xdf\\xe9\\xf8\\xbd\\xd0\\xec\\x5e\\x89\\xc9\\xca\\x9f\\x91\\xcf\\x74\\x3c\\xf7\\\n\\xb5\\x8d\\xfe\\xd6\\xb8\\xf5\\xa8\\x72\\xcb\\x6c\\x2f\\xd5\\xa6\\x91\\xf2\\xf6\\\n\\xfc\\xf8\\xfb\\xfe\\xf1\\xf6\\xfc\\xe2\\xec\\xf9\\xdb\\xe7\\xf8\\xba\\xd0\\xee\\\n\\xbc\\x58\\x23\\xf6\\xb5\\x8d\\xff\\x92\\x4d\\xff\\x77\\x11\\xff\\x86\\x21\\xeb\\\n\\x8a\\x40\\xbf\\x5a\\x23\\xe8\\xf0\\xfa\\xdd\\xe8\\xf8\\xdb\\xe6\\xf7\\x7a\\xa3\\\n\\xe1\\xc3\\xd5\\xef\\x35\\x69\\xb7\\xfe\\xcd\\xae\\xff\\xff\\xff\\xef\\x7f\\x18\\\n\\xf8\\xfa\\xfe\\xef\\xf4\\xfc\\xdf\\xe9\\xf9\\xdb\\xe7\\xf7\\xd9\\xe5\\xf7\\x78\\\n\\xa2\\xe0\\xa9\\xc2\\xe7\\x35\\x68\\xb6\\xba\\x55\\x1d\\xf4\\x9d\\x63\\xff\\x7f\\\n\\x18\\xf8\\x76\\x00\\xee\\x76\\x00\\xe1\\x68\\x03\\xbf\\x58\\x1d\\xf3\\xf7\\xfd\\\n\\xe5\\xed\\xfa\\xd8\\xe5\\xf6\\x77\\xa0\\xde\\xa4\\xbe\\xe4\\x34\\x67\\xb4\\xc4\\\n\\x97\\x86\\xc7\\x65\\x28\\xe6\\x77\\x21\\xea\\x79\\x05\\xdd\\x64\\x01\\xbc\\x4d\\\n\\x06\\x90\\x6d\\x6b\\x69\\x90\\xca\\x8d\\x9d\\xa4\\xc3\\xb2\\x73\\x6e\\x90\\xbe\\\n\\x64\\x8c\\xc8\\x74\\x9c\\xda\\x9f\\xba\\xe1\\x34\\x66\\xb3\\xc5\\xd8\\xf2\\x9d\\\n\\x7f\\x85\\xb1\\x50\\x1f\\xbb\\x42\\x04\\xb2\\x4f\\x1b\\x98\\x76\\x77\\x7b\\xa3\\\n\\xe1\\x7e\\xa3\\xd9\\xcc\\xb5\\x6e\\xed\\xdb\\xab\\xac\\xab\\x92\\x72\\x9c\\xdb\\\n\\x74\\x9d\\xdc\\x9a\\xb5\\xdd\\x34\\x65\\xb1\\xc2\\xd5\\xf2\\x7a\\xa3\\xe3\\x7b\\\n\\xa3\\xe2\\x7b\\xa4\\xe2\\x79\\xa2\\xe1\\xa8\\xab\\x9b\\xeb\\xd7\\xa4\\xfb\\xf4\\\n\\xdc\\xd0\\xad\\x59\\x87\\x9e\\xbd\\x73\\x9b\\xd9\\x95\\xb0\\xda\\x33\\x64\\xaf\\\n\\xbe\\xd2\\xf0\\x7a\\xa3\\xe2\\x87\\xa3\\xc8\\xd0\\xad\\x5a\\xf8\\xeb\\xb4\\xf8\\\n\\xe6\\x8e\\xee\\xdd\\xb5\\xb5\\xa2\\x74\\x71\\x99\\xd3\\x8e\\xab\\xd5\\x33\\x63\\\n\\xad\\x36\\x6a\\xba\\xbb\\xd0\\xef\\x7a\\xa2\\xe2\\xf7\\xfa\\xfc\\xe1\\xc7\\x8c\\\n\\xec\\xd9\\xac\\xf8\\xe3\\x82\\xc2\\x88\\x33\\xfa\\xed\\xac\\xcf\\x9e\\x43\\x8c\\\n\\x97\\xa3\\x8a\\xa7\\xd2\\x32\\x62\\xab\\xb8\\xce\\xef\\xf7\\xfa\\xfe\\x88\\xc0\\\n\\x62\\x9d\\xb8\\x5a\\xdf\\xbd\\x7b\\xf9\\xea\\xa2\\xf6\\xdc\\x61\\xc2\\x87\\x31\\\n\\xf7\\xe1\\x77\\xf0\\xde\\xb6\\xba\\x93\\x51\\x87\\xa2\\xc6\\x32\\x61\\xaa\\x38\\\n\\x6c\\xbb\\xb6\\xcc\\xee\\x7a\\xa2\\xe1\\xc2\\xdc\\xbf\\xc2\\xda\\xbc\\xcc\\xaa\\\n\\x5b\\xef\\xdb\\xab\\xf7\\xe0\\x74\\xf5\\xda\\x58\\xf5\\xdb\\x5d\\xf8\\xe6\\x90\\\n\\xe1\\xc1\\x92\\xa2\\x94\\x7f\\x32\\x61\\xa8\\x37\\x6b\\xba\\xb3\\xca\\xed\\x7a\\\n\\xa2\\xe0\\xa4\\xaf\\x53\\xe1\\xc2\\x8e\\xf9\\xe8\\x97\\xf5\\xdb\\x5b\\xc2\\x88\\\n\\x32\\xf6\\xde\\x6a\\xf6\\xe7\\xb1\\xbb\\x85\\x3a\\x48\\x65\\x92\\x35\\x6a\\xba\\\n\\xad\\xc6\\xeb\\xad\\xc5\\xea\\xcd\\x9c\\x4c\\xf6\\xec\\xdd\\xf9\\xee\\xbd\\xf8\\\n\\xea\\xac\\xf8\\xea\\xab\\xf8\\xea\\xad\\xfb\\xf3\\xd4\\xe4\\xc8\\xa4\\x8f\\x72\\\n\\x50\\x35\\x69\\xb9\\x35\\x69\\xb8\\x35\\x68\\xb7\\x35\\x68\\xb5\\xba\\x87\\x3b\\\n\\xbe\\x85\\x34\\xbd\\x83\\x33\\xbc\\x81\\x31\\xbb\\x7f\\x2f\\xba\\x7d\\x2d\\xba\\\n\\x7c\\x2c\\xb9\\x7a\\x2a\\xb8\\x78\\x29\\xb8\\x76\\x27\\x9b\\x71\\x41\\x2e\\x22\\\n\\xae\\x58\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\\n\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x01\\x1b\\\n\\x49\\x44\\x41\\x54\\x18\\xd3\\x01\\x10\\x01\\xef\\xfe\\x00\\x00\\x01\\x01\\x01\\\n\\x01\\x02\\x02\\x03\\x03\\x04\\x05\\x06\\x07\\x08\\x00\\x00\\x00\\x01\\x09\\x0a\\\n\\x0b\\x0c\\x0d\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x00\\x00\\x01\\x17\\\n\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f\\x20\\x21\\x22\\x23\\x15\\x08\\x00\\x01\\\n\\x24\\x25\\x26\\x27\\x28\\x29\\x2a\\x12\\x11\\x2b\\x2c\\x2d\\x2e\\x2f\\x30\\x00\\\n\\x01\\x0c\\x31\\x32\\x32\\x32\\x33\\x0c\\x34\\x35\\x36\\x37\\x38\\x39\\x3a\\x3b\\\n\\x00\\x02\\x3c\\x3d\\x3e\\x3f\\x40\\x41\\x42\\x43\\x44\\x37\\x38\\x45\\x46\\x47\\\n\\x48\\x00\\x02\\x49\\x4a\\x4b\\x4c\\x4d\\x4e\\x4f\\x50\\x51\\x52\\x53\\x54\\x55\\\n\\x56\\x57\\x00\\x03\\x58\\x59\\x5a\\x5b\\x5c\\x5d\\x5e\\x5f\\x60\\x61\\x62\\x63\\\n\\x64\\x65\\x66\\x00\\x03\\x67\\x68\\x68\\x69\\x69\\x6a\\x6b\\x6c\\x6d\\x6e\\x6f\\\n\\x70\\x71\\x72\\x73\\x00\\x03\\x74\\x75\\x75\\x2e\\x69\\x5e\\x76\\x77\\x78\\x79\\\n\\x7a\\x7b\\x7c\\x7d\\x7e\\x00\\x7f\\x80\\x81\\x1f\\x1f\\x1f\\x82\\x83\\x84\\x85\\\n\\x86\\x87\\x88\\x89\\x8a\\x8b\\x00\\x07\\x8c\\x6b\\x8d\\x8e\\x8e\\x8f\\x90\\x91\\\n\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x00\\x99\\x9a\\x9b\\x8d\\x9c\\x9d\\x9e\\x9f\\\n\\xa0\\xa1\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\x00\\xa7\\xa8\\xa9\\x8d\\x8e\\xaa\\xab\\\n\\xac\\x92\\xad\\xae\\xad\\xaf\\xb0\\xb1\\xb2\\x00\\xb3\\xb4\\xb5\\x1f\\x1f\\xb6\\\n\\xb7\\xb8\\xb9\\xba\\xba\\xba\\xbb\\xbc\\xbd\\xbe\\x00\\x7f\\xbf\\xc0\\xc1\\xc2\\\n\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xa3\\x6c\\x5d\\x11\\xd6\\\n\\x6c\\x2a\\xef\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x30\\x2d\\x31\\\n\\x32\\x54\\x31\\x35\\x3a\\x32\\x35\\x3a\\x32\\x34\\x2b\\x30\\x32\\x3a\\x30\\x30\\\n\\x13\\x4e\\x88\\x2c\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x30\\x2d\\\n\\x31\\x32\\x54\\x31\\x35\\x3a\\x32\\x35\\x3a\\x32\\x34\\x2b\\x30\\x32\\x3a\\x30\\\n\\x30\\x62\\x13\\x30\\x90\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\\n\\x82\\\n\\x00\\x00\\x03\\x31\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x41\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xae\\xc6\\xe3\\xc8\\xd0\\xdb\\xd3\\xd5\\xd7\\\n\\xd2\\xd4\\xd6\\xc4\\xcd\\xd8\\xaa\\xc1\\xdf\\xa8\\xc3\\xe6\\xd2\\xd7\\xdd\\xe8\\\n\\xec\\xf1\\xf3\\xf6\\xfa\\xfb\\xfd\\xfe\\xf2\\xf5\\xf9\\xe5\\xe9\\xee\\xc7\\xcd\\\n\\xd4\\x9f\\xba\\xdd\\xd4\\xd8\\xde\\xf7\\xf8\\xfb\\xff\\xff\\xff\\xf6\\xf9\\xfc\\\n\\xee\\xf3\\xfa\\xed\\xf3\\xfa\\xf4\\xf8\\xfc\\xf3\\xf6\\xf9\\xc4\\xca\\xd1\\x9c\\\n\\xb7\\xda\\xdc\\xe7\\xf5\\xe9\\xf0\\xf9\\xe8\\xef\\xf9\\xda\\xe5\\xf5\\xe5\\xee\\\n\\xf8\\xba\\xbf\\xc7\\xae\\xc5\\xe2\\xeb\\xf1\\xf9\\x54\\x85\\xc3\\xe6\\xef\\xf8\\\n\\x52\\x83\\xc1\\xd5\\xe3\\xf3\\xe3\\xec\\xf7\\xd8\\xdf\\xe7\\x94\\xab\\xc8\\xc7\\\n\\xcf\\xda\\x53\\x84\\xc3\\x53\\x84\\xc1\\xd8\\xe5\\xf4\\xe4\\xed\\xf7\\x52\\x83\\\n\\xc0\\xd4\\xe2\\xf3\\xf1\\xf5\\xfb\\xea\\xef\\xf6\\xa0\\xa9\\xb4\\xd1\\xd3\\xd5\\\n\\xec\\xf2\\xfa\\x56\\x88\\xc8\\xdb\\xe6\\xf5\\x52\\x81\\xc0\\x52\\x81\\xbe\\x55\\\n\\x86\\xc6\\xf9\\xfb\\xfd\\xa5\\xa7\\xa9\\xd0\\xd2\\xd4\\x55\\x87\\xc6\\x51\\x80\\\n\\xbe\\x51\\x80\\xbd\\xf1\\xf5\\xfa\\xa0\\xa2\\xa4\\xc2\\xcb\\xd6\\xef\\xf3\\xf8\\\n\\xf2\\xf6\\xfb\\xdf\\xe9\\xf6\\xdb\\xe4\\xef\\x94\\x9c\\xa7\\xa7\\xbe\\xdc\\xe1\\\n\\xe5\\xec\\xfe\\xfe\\xff\\xe1\\xeb\\xf7\\xdd\\xe8\\xf6\\x51\\x7f\\xbd\\xfa\\xfc\\\n\\xfe\\xbf\\xc9\\xd6\\x81\\x98\\xb6\\xbe\\xc3\\xca\\xed\\xf1\\xf7\\xdc\\xe4\\xef\\\n\\x92\\x9a\\xa3\\x94\\xb0\\xd2\\xb3\\xbb\\xc3\\xe8\\xee\\xf4\\xef\\xf4\\xfb\\xe0\\\n\\xea\\xf6\\xdb\\xe4\\xee\\x91\\x9c\\xa8\\x79\\x94\\xb7\\x8c\\xa7\\xca\\xa3\\xab\\\n\\xb3\\xc8\\xd1\\xdc\\xe1\\xe8\\xf1\\xd6\\xe0\\xed\\xb8\\xc3\\xd2\\x8c\\x94\\x9f\\\n\\x77\\x92\\xb5\\x83\\x9b\\xb8\\x8e\\x97\\xa2\\x94\\x96\\x98\\x90\\x92\\x95\\x88\\\n\\x91\\x9c\\x79\\x91\\xae\\x55\\x85\\x1a\\xb8\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\\n\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\\n\\x05\\x1d\\x48\\x00\\x00\\x00\\xca\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\\n\\x0a\\x18\\x99\\x98\\x59\\x58\\xd9\\xe0\\x5c\\x76\\x0e\\x4e\\x2e\\x6e\\x6e\\x1e\\\n\\x5e\\x3e\\x7e\\x28\\x5f\\x40\\x50\\x48\\x58\\x44\\x54\\x4c\\x48\\x5c\\x42\\x12\\\n\\x2c\\xc0\\x21\\x28\\x24\\x25\\x2d\\x23\\x23\\x2b\\x27\\x24\\x2e\\x0f\\xe2\\x2b\\\n\\x70\\x0a\\x29\\x2a\\xc9\\xca\\x28\\xab\\xa8\\xaa\\x09\\xa9\\x6b\\x00\\x05\\x34\\\n\\xb9\\xc4\\x64\\xb4\\xb4\\x75\\x74\\xf5\\xf4\\xf4\\x0d\\x0c\\x8d\\x80\\x02\\xc6\\\n\\xdc\\x26\\x32\\x2a\\x2a\\xa6\\x66\\xe6\\x16\\x96\\x66\\x56\\xd6\\x40\\x01\\x1b\\\n\\x6e\\x45\\x39\\x15\\x5b\\x3d\\x13\\x3b\\x25\\x7b\\x13\\x07\\x47\\xa0\\x80\\x93\\\n\\xb3\\x8b\\x9a\\xad\\xb9\\x89\\xab\\x92\\xbd\\xa2\\x88\\x9b\\x3b\\x50\\xc0\\xc3\\\n\\xd3\\xcb\\xdb\\xc2\\xc4\\xc7\\xc7\\x57\\x5a\\xd6\\xcf\\x3f\\x00\\x64\\x4d\\x60\\\n\\x90\\x90\\xa2\\x8f\\x94\\x99\\xb4\\x8e\\x57\\x70\\x08\\xd8\\x1d\\xa1\\x61\\xe1\\\n\\x5e\\x11\\xde\\x91\\xa2\\x7e\\x51\\xd1\\x31\\x10\\xa7\\xc6\\xc6\\xc5\\x27\\xb8\\\n\\x88\\x24\\x26\\x25\\xa7\\xc0\\x7d\\x93\\x9a\\x96\\x9e\\x91\\x99\\x85\\xdd\\xe3\\\n\\x00\\x67\\x4d\\x1e\\x5b\\xd0\\x6a\\x88\\xcb\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\\n\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\\n\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x04\\x3e\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x02\\x2b\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x36\\x6b\\xbc\\x36\\x6b\\xbb\\x36\\x6a\\xbb\\\n\\x39\\x6c\\xbc\\x3b\\x6e\\xbd\\x3a\\x6d\\xbb\\x38\\x6b\\xbb\\x3e\\x70\\xbb\\xd1\\\n\\xe0\\xf6\\xd1\\xe0\\xf7\\xf8\\xfb\\xfe\\xf7\\xfb\\xfe\\xf6\\xf9\\xfd\\xf0\\xf5\\\n\\xfc\\xea\\xf0\\xfa\\xed\\xf2\\xfb\\xf7\\xfa\\xfd\\xeb\\xf1\\xfb\\xdf\\xe9\\xf8\\\n\\xbd\\xd0\\xec\\x5e\\x89\\xc9\\xd1\\xdf\\xf6\\x80\\xaa\\xe9\\xf6\\xfa\\xfe\\xf6\\\n\\xfa\\xfd\\x64\\x8c\\xc8\\xee\\xf3\\xfb\\xea\\xf1\\xfb\\xf2\\xf6\\xfc\\xf1\\xf6\\\n\\xfc\\xe2\\xec\\xf9\\xdb\\xe7\\xf8\\xba\\xd0\\xee\\xd0\\xdf\\xf6\\x7e\\xa8\\xe8\\\n\\xe9\\xf1\\xfa\\xee\\xf4\\xfb\\xe8\\xf0\\xfa\\xdd\\xe8\\xf8\\xdb\\xe6\\xf7\\x7a\\\n\\xa3\\xe1\\xc3\\xd5\\xef\\x35\\x69\\xb7\\xcc\\xdd\\xf5\\x7e\\xa8\\xe7\\x66\\x8d\\\n\\xc9\\xe9\\xf0\\xfa\\xf3\\xf8\\xfd\\xf8\\xfa\\xfe\\xef\\xf4\\xfc\\xdf\\xe9\\xf9\\\n\\xdb\\xe7\\xf7\\xd9\\xe5\\xf7\\x78\\xa2\\xe0\\xa9\\xc2\\xe7\\x35\\x68\\xb6\\xc9\\\n\\xdc\\xf4\\x7d\\xa7\\xe7\\xe1\\xec\\xf9\\xe3\\xed\\xf9\\xee\\xf4\\xfc\\xf3\\xf7\\\n\\xfd\\xe5\\xed\\xfa\\xd8\\xe5\\xf6\\x77\\xa0\\xde\\xa4\\xbe\\xe4\\x34\\x67\\xb4\\\n\\xc7\\xd9\\xf4\\x7d\\xa6\\xe6\\x65\\x8d\\xc9\\x67\\x8e\\xc9\\x6c\\x92\\xcb\\x6d\\\n\\x92\\xcb\\x69\\x90\\xca\\x65\\x8c\\xc8\\x74\\x9c\\xda\\x9f\\xba\\xe1\\x34\\x66\\\n\\xb3\\xc5\\xd8\\xf2\\x7b\\xa4\\xe3\\x7a\\xa3\\xe3\\x7a\\xa4\\xe3\\x7b\\xa4\\xe2\\\n\\x7b\\xa3\\xe2\\x7b\\xa3\\xe1\\x79\\xa2\\xe1\\xe1\\xbf\\x5b\\xed\\xdb\\xab\\xe9\\\n\\xd0\\x85\\x72\\x9c\\xdb\\x74\\x9d\\xdc\\x9a\\xb5\\xdd\\x34\\x65\\xb1\\xc2\\xd5\\\n\\xf2\\xe8\\xc8\\x5c\\xeb\\xd7\\xa4\\xfb\\xf4\\xdc\\xd9\\xb3\\x58\\x73\\x9b\\xda\\\n\\x73\\x9b\\xd9\\x95\\xb0\\xda\\x33\\x64\\xaf\\xbe\\xd2\\xf0\\x7a\\xa3\\xe2\\x78\\\n\\xa1\\xe0\\xd9\\xb2\\x52\\xf8\\xeb\\xb4\\xf8\\xe6\\x8e\\xee\\xdd\\xb5\\xd8\\x9c\\\n\\x38\\x70\\x99\\xd6\\x8e\\xab\\xd5\\x33\\x63\\xad\\x36\\x6a\\xba\\xbb\\xd0\\xef\\\n\\x7a\\xa2\\xe2\\xec\\xd9\\xac\\xf8\\xe3\\x82\\xc2\\x88\\x33\\xfa\\xed\\xac\\xcf\\\n\\x9e\\x43\\x6d\\x96\\xd3\\x8a\\xa7\\xd2\\x32\\x62\\xab\\xb8\\xce\\xef\\xf7\\xfa\\\n\\xfe\\x88\\xc0\\x62\\xf9\\xea\\xa2\\xf6\\xdc\\x61\\xc2\\x87\\x31\\xf7\\xe1\\x77\\\n\\xf0\\xde\\xb6\\xca\\x94\\x3a\\x84\\xa3\\xce\\x32\\x61\\xaa\\x38\\x6c\\xbb\\xb6\\\n\\xcc\\xee\\x7a\\xa2\\xe1\\xc2\\xdc\\xbf\\xef\\xdb\\xab\\xf7\\xe0\\x74\\xf5\\xda\\\n\\x58\\xf5\\xdb\\x5d\\xf8\\xe6\\x90\\xe1\\xc1\\x92\\x81\\x9e\\xcc\\x32\\x61\\xa8\\\n\\x37\\x6b\\xba\\xb3\\xca\\xed\\x7a\\xa2\\xe0\\xe1\\xc2\\x8e\\xf9\\xe8\\x97\\xf5\\\n\\xdb\\x5b\\xc2\\x88\\x32\\xf6\\xde\\x6a\\xf6\\xe7\\xb1\\xc2\\x83\\x2d\\x31\\x60\\\n\\xa7\\x35\\x6a\\xba\\xad\\xc6\\xeb\\xad\\xc5\\xea\\xc9\\x91\\x38\\xf6\\xec\\xdd\\\n\\xf9\\xee\\xbd\\xf8\\xea\\xac\\xf8\\xea\\xab\\xf8\\xea\\xad\\xfb\\xf3\\xd4\\xe4\\\n\\xc8\\xa4\\xbe\\x7b\\x26\\x35\\x69\\xb9\\x35\\x69\\xb8\\x35\\x68\\xb7\\x35\\x68\\\n\\xb5\\xc5\\x8a\\x32\\xc4\\x87\\x30\\xc3\\x85\\x2f\\xc1\\x81\\x2b\\xc0\\x7f\\x29\\\n\\xbf\\x7d\\x28\\xbd\\x79\\x25\\xbd\\x77\\x23\\xbc\\x76\\x22\\xff\\xff\\xff\\x59\\\n\\xac\\x85\\xa0\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\\n\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x01\\\n\\x16\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x60\\x04\\x02\\x26\\x26\\x66\\x66\\\n\\x16\\x56\\x36\\x76\\x0e\\x06\\x06\\x06\\x46\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\\n\\x01\\x5e\\x41\\x21\\x61\\x11\\x51\\xa0\\x80\\x98\\xb8\\x84\\xa4\\x94\\xb4\\x8c\\\n\\x2c\\xb7\\x9c\\xbc\\x82\\xa2\\x08\\x07\\x03\\xa3\\x92\\xb2\\x9c\\x9c\\x94\\x8a\\\n\\xaa\\x20\\xaf\\x9a\\xba\\x86\\xa6\\x96\\x36\\x03\\xa3\\x8e\\xae\\x9a\\x9a\\x9e\\\n\\xbe\\x81\\xa1\\x91\\xb1\\x89\\xa9\\x99\\xb9\\x05\\x03\\x93\\xa5\\x95\\xb5\\xb5\\\n\\x8d\\xad\\xa0\\x9d\\xbd\\x89\\xa9\\x83\\xa3\\x93\\x33\\x03\\x93\\x8b\\xab\\x94\\\n\\x9b\\xbb\\x87\\xa7\\x97\\xb7\\x94\\x94\\x94\\x8f\\xaf\\x1f\\x03\\xb3\\x7f\\x40\\\n\\x60\\x50\\x70\\x48\\x68\\x58\\x78\\x44\\x64\\x54\\x74\\x4c\\x2c\\x03\\x73\\x5c\\\n\\x60\\x60\\x48\\x48\\x70\\x58\\x7c\\x42\\x62\\x52\\x72\\x4a\\x6a\\x1a\\x03\\x73\\\n\\x7a\\x46\\x86\\x66\\x48\\x68\\x66\\x56\\x76\\x4e\\x6e\\x5e\\x7e\\x41\\x21\\x43\\\n\\x51\\x71\\x09\\x37\\x08\\x94\\x96\\x95\\x57\\x54\\x56\\x55\\xd7\\x30\\xb0\\xd7\\\n\\x86\\xd5\\xd5\\x03\\x41\\x43\\x63\\x53\\x73\\x4b\\x6b\\x5b\\x3b\\x43\\x47\\x67\\\n\\x57\\x5d\\x77\\x77\\x77\\x4f\\x6f\\x5f\\x5f\\xff\\x84\\x89\\x93\\x26\\x33\\x4c\\\n\\x99\\x3a\\x0d\\xa8\\x62\\xfa\\x8c\\xc6\\x99\\xb3\\x66\\xce\\x9e\\x33\\x77\\x1e\\\n\\xc3\\xfc\\x05\\x0b\\xb9\\xb9\\x17\\x2d\\x5e\\xb2\\x74\\xd9\\xb2\\x65\\xcb\\x57\\\n\\xac\\x5c\\xc5\\x50\\xb4\\x7a\\xcd\\xda\\x75\\xeb\\x37\\x6c\\x9c\\xbb\\x69\\xf3\\\n\\x96\\x55\\x5b\\xb7\\x6d\\x07\\x00\\x8e\\x3f\\x51\\x00\\xcd\\x78\\x5b\\xb6\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\\n\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\\n\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\\n\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\\n\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x39\\x2d\\x31\\x31\\x54\\x31\\\n\\x36\\x3a\\x31\\x34\\x3a\\x30\\x37\\x2b\\x30\\x32\\x3a\\x30\\x30\\x48\\xd8\\x5e\\\n\\xe8\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x72\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xcc\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xce\\xa7\\x5e\\xce\\xa7\\x61\\xcf\\xa8\\x64\\\n\\xce\\xa6\\x62\\xcc\\xa1\\x5d\\xc8\\x9c\\x57\\xcf\\xa8\\x61\\xce\\xa6\\x5e\\xc7\\\n\\x9a\\x57\\xc7\\x97\\x57\\xcd\\xa4\\x5b\\xc3\\x91\\x50\\xc3\\x91\\x53\\xcd\\xa6\\\n\\x5e\\xcd\\xa5\\x5e\\xc1\\x8e\\x4f\\xbd\\x89\\x4c\\xce\\xa6\\x60\\xbe\\x89\\x4d\\\n\\xcf\\xa7\\x62\\xbe\\x8a\\x4f\\xcd\\xa5\\x61\\xbd\\x86\\x4c\\xc9\\x9f\\x5b\\xb8\\\n\\x7f\\x47\\xc6\\x99\\x56\\xc6\\x96\\x55\\xb9\\x81\\x49\\xb6\\x79\\x43\\xc4\\x95\\\n\\x55\\xc1\\x8f\\x4f\\xc3\\x92\\x55\\xd2\\xab\\x6f\\xbe\\x73\\x40\\xc2\\x8f\\x50\\\n\\xbe\\x8a\\x4d\\xc1\\x8c\\x52\\xd6\\xb4\\x79\\xe3\\xcc\\x99\\xde\\xc4\\x8d\\xbc\\\n\\x83\\x4f\\xbc\\x85\\x4a\\xbc\\x86\\x4c\\xbc\\x84\\x4b\\xb7\\x7e\\x47\\xbb\\x81\\\n\\x4c\\xdb\\xbf\\x87\\xe8\\xd5\\xa3\\xe9\\xd7\\xa5\\xda\\xbb\\x80\\xab\\x64\\x3d\\\n\\xc1\\x8e\\x58\\xdf\\xc5\\x8f\\xe7\\xd3\\xa0\\xe0\\xc7\\x93\\xc9\\x9b\\x61\\x87\\\n\\x48\\x28\\xbc\\x84\\x51\\xd7\\xb5\\x7d\\xd6\\xb5\\x7f\\xc3\\x91\\x56\\xab\\x67\\\n\\x37\\xa5\\x5c\\x33\\xb9\\x80\\x48\\xab\\x64\\x37\\x9b\\x58\\x30\\xff\\xff\\xff\\\n\\x4e\\x55\\x84\\xaa\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\\n\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\\n\\x00\\x80\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x60\\x60\\x60\\x64\\x62\\x66\\\n\\x61\\x65\\x63\\x80\\x03\\x76\\x0e\\x10\\xc9\\xc9\\x05\\xe7\\x73\\x43\\x68\\x1e\\\n\\x5e\\x08\\xcd\\xc7\\x0f\\x93\\x11\\x10\\x04\\x53\\x42\\x08\\xbd\\xc2\\x60\\x52\\\n\\x04\\x21\\x20\\x0a\\x26\\xc5\\x10\\x02\\xe2\\x60\\x52\\x02\\x21\\x20\\x09\\x26\\\n\\xa5\\xa4\\x61\\x7c\\x19\\x59\\x08\\x2d\\x27\\x0f\\xa1\\x15\\x14\\x95\\xa0\\x32\\\n\\xca\\x2a\\x20\\x52\\x55\\x4d\\x5d\\x43\\x13\\x2a\\xa2\\xa5\\x2d\\xae\\xa3\\xab\\\n\\xa7\\x6f\\x60\\x68\\x64\\xcc\\x80\\x04\\x4c\\x4c\\xcd\\xcc\\x2d\\x2c\\x91\\x45\\\n\\xac\\xac\\x6d\\x6c\\xed\\x90\\x05\\x18\\xec\\x1d\\x1c\\x19\\x50\\x81\\x13\\x10\\\n\\x03\\x00\\xf6\\xa2\\x08\\xc2\\xd7\\xca\\x78\\xb2\\x00\\x00\\x00\\x1d\\x74\\x45\\\n\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\\n\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\\n\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\\n\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x36\\x2d\\\n\\x30\\x31\\x54\\x31\\x31\\x3a\\x32\\x34\\x3a\\x33\\x37\\x2b\\x30\\x32\\x3a\\x30\\\n\\x30\\xe6\\xff\\x64\\xdf\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\\n\\x82\\\n\\x00\\x00\\x02\\xe6\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x23\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x74\\xc7\\x68\\x73\\xc6\\x67\\x72\\xc5\\x66\\\n\\x71\\xc3\\x65\\x66\\xb6\\x5c\\x64\\xb4\\x5b\\x62\\xb2\\x59\\x60\\xaf\\x58\\x5e\\\n\\xad\\x56\\xa9\\xd8\\xa1\\xa7\\xd6\\x9e\\x67\\xb4\\x5f\\x94\\xc8\\x8d\\x95\\xc9\\\n\\x8e\\x5c\\xaa\\x54\\xa5\\xd6\\x9d\\x9b\\xd1\\x92\\x87\\xca\\x7e\\x6e\\xc0\\x63\\\n\\x62\\xb1\\x59\\x7e\\xbd\\x76\\x86\\xc0\\x7e\\x90\\xc5\\x8a\\x5a\\xa8\\x52\\x72\\\n\\xc4\\x66\\x75\\xc5\\x6b\\x8c\\xcc\\x83\\xa4\\xd3\\x9b\\x84\\xc7\\x7b\\x6b\\xbc\\\n\\x60\\x61\\xb1\\x59\\x7d\\xbd\\x75\\x93\\xc7\\x8c\\x73\\xb6\\x6d\\x59\\xa7\\x52\\\n\\x57\\xa5\\x50\\x70\\xc3\\x65\\x6d\\xbf\\x63\\x89\\xc9\\x80\\x82\\xc4\\x79\\x69\\\n\\xb9\\x5f\\x5f\\xae\\x57\\x75\\xb8\\x6e\\x73\\xb5\\x6c\\x55\\xa2\\x4e\\x6a\\xbb\\\n\\x60\\x68\\xb9\\x5e\\x5b\\xa9\\x53\\x5d\\xac\\x55\\x50\\x9c\\x4a\\x4e\\x99\\x48\\\n\\x63\\xb3\\x5a\\x73\\xb6\\x6c\\x71\\xb4\\x6a\\x4f\\x9b\\x4a\\x64\\xa7\\x5f\\x67\\\n\\xa8\\x62\\x4a\\x95\\x45\\x47\\x91\\x43\\x61\\xb0\\x58\\x8a\\xc0\\x84\\x74\\xb5\\\n\\x6e\\x57\\xa4\\x50\\x4d\\x99\\x48\\x61\\xa5\\x5d\\x79\\xb3\\x75\\x63\\xa4\\x5f\\\n\\x4c\\x94\\x47\\x45\\x8f\\x41\\x5f\\xad\\x56\\x8a\\xc0\\x83\\x7a\\xb7\\x73\\x73\\\n\\xb4\\x6c\\x49\\x94\\x45\\x5e\\xa0\\x5a\\x64\\xa6\\x5e\\x70\\xad\\x6c\\x44\\x8d\\\n\\x40\\x5c\\xab\\x54\\x89\\xbf\\x83\\x83\\xbb\\x7d\\x5b\\xa6\\x54\\x46\\x90\\x42\\\n\\x71\\xad\\x6d\\x73\\xae\\x6e\\x42\\x8c\\x3f\\x5a\\xa8\\x53\\x58\\xa6\\x51\\x56\\\n\\xa3\\x4f\\x54\\xa1\\x4e\\x52\\x9f\\x4c\\x45\\x8e\\x41\\x43\\x8d\\x40\\x42\\x8b\\\n\\x3f\\x41\\x8a\\x3e\\xff\\xff\\xff\\x5b\\x9a\\x1e\\x6c\\x00\\x00\\x00\\x01\\x74\\\n\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\\n\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x9d\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\\n\\x60\\x64\\x64\\x62\\x66\\x61\\x00\\x03\\x56\\x36\\x76\\x0e\\x4e\\x06\\x46\\x2e\\\n\\x6e\\x28\\x9f\\x81\\x81\\x87\\x97\\x8f\\x9f\\x81\\x49\\x40\\x50\\x48\\x18\\xc2\\\n\\x17\\x11\\x15\\x13\\x97\\x60\\x90\\x94\\x92\\x96\\x91\\x95\\x03\\xf1\\xe5\\x15\\\n\\x14\\x95\\x94\\x55\\x18\\x54\\x19\\xd4\\xd4\\x35\\x34\\x41\\x02\\x5a\\xda\\x3a\\\n\\xca\\x0c\\xba\\x20\\x96\\x9e\\x3e\\x44\\x8b\\x81\\x32\\x03\\xf5\\x80\\x96\\x21\\\n\\x84\\x36\\x32\\x06\\x91\\x26\\x0c\\x5a\\xa6\\x66\\x60\\xe3\\xcd\\x2d\\x2c\\xad\\\n\\x18\\xac\\x19\\x6c\\xb4\\x4c\\x6d\\xed\\xec\\x41\\x02\\x0e\\x8e\\x4e\\xce\\x2e\\\n\\xae\\x0c\\x6e\\xee\\x1e\\x9e\\xf6\\x10\\x2d\\x5e\\xde\\x3e\\xbe\\x7e\\x0c\\xfe\\\n\\x01\\x81\\x41\\x30\\xc3\\x82\\x43\\x42\\xc3\\x18\\xc2\\x23\\x22\\xa3\\xa2\\xa1\\\n\\xfc\\x98\\xd8\\xb8\\x78\\x00\\x5f\\x6f\\x13\\x87\\x42\\xe6\\x66\\xc6\\x00\\x00\\\n\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\\n\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\\n\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\\n\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\\n\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\\n\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\\n\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\\n\\x2d\\x30\\x36\\x2d\\x30\\x31\\x54\\x31\\x31\\x3a\\x31\\x39\\x3a\\x33\\x37\\x2b\\\n\\x30\\x32\\x3a\\x30\\x30\\x8a\\xe3\\x89\\x6e\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\\n\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\xa9\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xcf\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xd8\\xd8\\xd8\\xd7\\xd7\\xd7\\xd6\\xd6\\xd6\\\n\\xd5\\xd5\\xd5\\xd3\\xd3\\xd3\\xd2\\xd2\\xd2\\xeb\\xeb\\xeb\\xf5\\xf5\\xf5\\xfc\\\n\\xfc\\xfc\\xf4\\xf4\\xf4\\xe8\\xe8\\xe8\\xce\\xce\\xce\\xf8\\xf8\\xf8\\xff\\xff\\\n\\xff\\xf2\\xf2\\xf2\\xf1\\xf1\\xf1\\xf7\\xf7\\xf7\\xc9\\xc9\\xc9\\xef\\xef\\xef\\\n\\xee\\xee\\xee\\xc3\\xc3\\xc3\\xed\\xed\\xed\\xec\\xec\\xec\\xc0\\xc0\\xc0\\x76\\\n\\x76\\x77\\xc2\\xc2\\xc2\\xe9\\xe9\\xe9\\xdd\\xdd\\xdd\\xb3\\xb3\\xb3\\x75\\x75\\\n\\x76\\xab\\xab\\xab\\xd4\\xd4\\xd4\\xf0\\xf0\\xf0\\xea\\xea\\xea\\x75\\x75\\x75\\\n\\x79\\x79\\x7a\\xcd\\xcd\\xcd\\xe6\\xe6\\xe6\\xfa\\xfa\\xfa\\xa7\\xa7\\xa7\\x78\\\n\\x78\\x79\\x73\\x73\\x74\\xe5\\xe5\\xe5\\xa2\\xa2\\xa2\\xd1\\xd1\\xd1\\x78\\x78\\\n\\x78\\xe4\\xe4\\xe4\\xe1\\xe1\\xe1\\x9d\\x9d\\x9d\\xfe\\xfe\\xfe\\xe7\\xe7\\xe7\\\n\\x73\\x73\\x73\\xe3\\xe3\\xe3\\xe2\\xe2\\xe2\\xfb\\xfb\\xfb\\xc6\\xc6\\xc6\\x99\\\n\\x99\\x99\\xc4\\xc4\\xc4\\xb9\\xb9\\xb9\\xf3\\xf3\\xf3\\xaa\\xaa\\xaa\\x93\\x93\\\n\\x93\\x9c\\x9c\\x9c\\x97\\x97\\x97\\x96\\x96\\x96\\x92\\x92\\x92\\x90\\x90\\x90\\\n\\x8e\\x8e\\x8e\\x80\\x0f\\x16\\xf7\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\\n\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\\n\\x48\\x00\\x00\\x00\\xb4\\x49\\x44\\x41\\x54\\x18\\xd3\\x6d\\x8f\\xdb\\x16\\x81\\\n\\x40\\x00\\x45\\x29\\x99\\xa9\\xa9\\x99\\x18\\xa6\\x98\\x5c\\x12\\xb9\\x84\\x12\\\n\\x22\\xf7\\xdb\\xff\\x7f\\x93\\x69\\x59\\xe2\\xa1\\xf3\\xb6\\xf7\\xcb\\x39\\xa7\\\n\\x54\\x2a\\x4c\\x59\\x92\\x2b\\x4a\\xf5\\x8f\\x01\\x54\\x55\\x0d\\xe9\\x39\\x1b\\\n\\xd8\\x20\\x66\\x0d\\xc3\\x7a\\xce\\xb4\\xd1\\x64\\x16\\xc0\\xd0\\xce\\x58\\x02\\\n\\x82\\x59\\xab\\x0d\\x38\\xc7\\x4e\\x47\\x08\\x19\\xd6\\x18\\xb3\\xba\\x5d\\x9b\\\n\\x23\\xad\\xd1\\x13\\xa2\\xaf\\xba\\x0c\\x0c\\x3c\\x6f\\x38\\xf2\\xf9\\x78\\x22\\\n\\x84\\xa2\\x52\\x30\\xe0\\xde\\x74\\x46\\x03\\xa4\\xcd\\x85\\x58\\x10\\xc8\\x39\\\n\\x5a\\x0a\\x0e\\x49\\xb4\\x12\\x42\\x0f\\x63\\xb4\\xf6\\x37\\x34\\xdc\\x26\\xbb\\\n\\x7d\\x9a\\xd5\\x1c\\x5c\\x1c\\x04\\x74\\x9b\\x44\\x71\\x92\\x7e\\x86\\x1c\\xad\\\n\\xf8\\x84\\xd6\\xe6\\x2e\\x4a\\xbf\\x53\\xcf\\xba\\x0f\\x89\\x63\\x5f\\x7e\\x67\\\n\\xae\\xb7\\xfb\\xe3\\xf9\\x2a\\x3e\\xfe\\x06\\x32\\x04\\x11\\x08\\x5f\\xfb\\x0c\\\n\\xeb\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\\n\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\\n\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x33\\x2d\\x30\\x31\\x2d\\x31\\x38\\x54\\x31\\x34\\x3a\\x33\\x37\\x3a\\x34\\\n\\x33\\x2b\\x30\\x31\\x3a\\x30\\x30\\x4b\\xc0\\xa3\\x41\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x33\\x2d\\x30\\x31\\x2d\\x31\\x38\\x54\\x31\\x34\\x3a\\x33\\x37\\x3a\\\n\\x34\\x33\\x2b\\x30\\x31\\x3a\\x30\\x30\\x3a\\x9d\\x1b\\xfd\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x19\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x41\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xff\\x81\\x00\\xff\\x85\\x00\\xff\\x87\\x00\\\n\\xff\\x89\\x00\\xff\\x8b\\x00\\xff\\x6d\\x00\\xff\\xa6\\x41\\xff\\xbd\\x74\\xff\\\n\\xc0\\x79\\xff\\xc2\\x7d\\xff\\xc3\\x7e\\xff\\xc5\\x7f\\xff\\xc6\\x81\\xff\\xc8\\\n\\x82\\xff\\xca\\x83\\xff\\xca\\x86\\xff\\xcb\\x86\\xff\\xcc\\x86\\xff\\xcb\\x83\\\n\\xff\\xb1\\x4e\\xff\\x67\\x00\\xff\\xaf\\x58\\xff\\xa7\\x52\\xff\\xa9\\x54\\xff\\\n\\xac\\x56\\xff\\xac\\x58\\xff\\xb0\\x5a\\xff\\xaf\\x59\\xff\\xbb\\x6d\\xff\\xc7\\\n\\x80\\xff\\x7d\\x00\\xff\\xae\\x68\\xff\\x41\\x00\\xff\\xaf\\x5a\\xff\\xaa\\x55\\\n\\xff\\xc3\\x80\\xff\\x7b\\x00\\xff\\x83\\x00\\xff\\xc1\\x7d\\xff\\xa4\\x4f\\xff\\\n\\xa2\\x50\\xff\\xbf\\x7a\\xff\\x75\\x00\\xff\\xbc\\x84\\xff\\xc0\\x84\\xff\\x9c\\\n\\x49\\xff\\xba\\x77\\xff\\xc5\\x7e\\xff\\xbd\\x84\\xff\\x94\\x45\\xff\\xb5\\x73\\\n\\xff\\xc5\\x81\\xff\\xab\\x55\\xff\\x8c\\x40\\xff\\xb0\\x70\\xff\\x5f\\x00\\xff\\\n\\xaa\\x57\\xff\\x84\\x3c\\xff\\xab\\x6e\\xff\\x59\\x00\\xff\\xc8\\x83\\xff\\xad\\\n\\x56\\xff\\x7b\\x38\\xff\\xa5\\x6b\\xff\\x53\\x00\\xff\\xc8\\x84\\xff\\xc2\\x82\\\n\\xff\\x8c\\x55\\xff\\xa1\\x68\\xff\\x4d\\x00\\xff\\x9d\\x67\\xff\\x47\\x00\\xff\\\n\\xca\\x84\\xff\\xb7\\x76\\xff\\x99\\x47\\xff\\x92\\x43\\xff\\x8a\\x3f\\xff\\xa0\\\n\\x66\\xff\\x9b\\x62\\xff\\x9a\\x64\\xff\\x43\\x00\\xff\\xc9\\x80\\xff\\xc1\\x7e\\\n\\xff\\xbe\\x79\\xff\\xb9\\x76\\xff\\xb4\\x73\\xff\\xaf\\x70\\xff\\xa9\\x6d\\xff\\\n\\xa4\\x6a\\xff\\xa0\\x67\\xff\\x8a\\x58\\xff\\x86\\x55\\xff\\x93\\x60\\xff\\x45\\\n\\x00\\xff\\x65\\x00\\xff\\xaf\\x49\\xff\\x71\\x33\\xff\\x4b\\x00\\xff\\x77\\x00\\\n\\xff\\x71\\x00\\xff\\x69\\x00\\xff\\x63\\x00\\xff\\x5d\\x00\\xff\\x55\\x00\\xff\\\n\\x51\\x00\\xff\\xff\\xff\\x36\\x73\\x72\\x3a\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\\n\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\\n\\x05\\x1d\\x48\\x00\\x00\\x00\\xdb\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\x60\\\n\\x64\\x62\\x62\\x62\\x66\\x61\\x61\\x61\\x05\\x02\\x66\\x36\\x06\\x06\\x46\\x76\\\n\\x0e\\x4e\\x2e\\x6e\\x1e\\x5e\\x3e\\x7e\\x01\\x41\\x21\\x61\\x11\\x51\\x06\\x26\\\n\\x0e\\x0e\\x31\\x31\\x31\\x71\\x09\\x49\\x29\\x31\\x69\\x19\\x59\\x39\\x79\\x06\\\n\\x26\\x4e\\x4e\\x05\\xa0\\x88\\xa2\\x22\\x90\\x50\\x52\\x56\\x51\\x65\\x50\\x53\\\n\\x57\\xd7\\x80\\x09\\x48\\x68\\x6a\\x69\\x33\\x30\\x71\\x73\\xeb\\x80\\xf8\\x20\\\n\\x11\\x5d\\x3d\\x7d\\x36\\x06\\x66\\x03\\x03\\x43\\x98\\x80\\x98\\x91\\x31\\xd0\\\n\\x50\\x13\\x13\\x53\\xb0\\x06\\x10\\x36\\x33\\xb7\\x60\\x60\\xe6\\xe5\\xb5\\x84\\\n\\x0b\\x58\\x59\\xdb\\x30\\xb0\\xd8\\xda\\xda\\x81\\x95\\x83\\x44\\xec\\x1d\\x1c\\\n\\x19\\x98\\x9d\\x9c\\x9c\\xe1\\x02\\x2e\\xae\\x6e\\x0c\\xcc\\xfc\\xfc\\x10\\x3e\\\n\\x48\\xc4\\xde\\xdd\\x83\\x81\\xd9\\xd3\\x53\\x51\\xd1\\xcb\\xdb\\xc7\\xd7\\xcf\\\n\\x1f\\x28\\x10\\x10\\xc8\\xc0\\x18\\x14\\x14\\x1c\\x12\\x1a\\x16\\x1e\\x11\\x19\\\n\\xe5\\x1e\\x1d\\x13\\x1b\\xc7\\x10\\x9f\\x60\\x00\\x17\\x08\\x88\\x4d\\x4c\\x62\\\n\\x60\\xb0\\x48\\xd6\\x4e\\x49\\x4d\\x4b\\xcf\\xc8\\x4c\\xf2\\x50\\x8c\\x4b\\x62\\\n\\x00\\x00\\x8a\\x58\\x27\\x9b\\xa8\\x21\\xe6\\x65\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\\n\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\\n\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x01\\x7d\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x06\\x00\\x00\\x00\\x1f\\xf3\\xff\\x61\\\n\\x00\\x00\\x00\\x01\\x73\\x52\\x47\\x42\\x00\\xae\\xce\\x1c\\xe9\\x00\\x00\\x00\\\n\\x06\\x62\\x4b\\x47\\x44\\x00\\x00\\x00\\xa0\\x00\\xf5\\xed\\xec\\xe0\\x8c\\x00\\\n\\x00\\x00\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0b\\x13\\x00\\x00\\x0b\\x13\\x01\\\n\\x00\\x9a\\x9c\\x18\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\xe0\\x02\\x0f\\\n\\x0f\\x04\\x0b\\x00\\xd1\\xa9\\xa5\\x00\\x00\\x00\\xfd\\x49\\x44\\x41\\x54\\x38\\\n\\xcb\\xed\\x92\\xbd\\x4a\\xc3\\x50\\x18\\x86\\x9f\\x14\\x03\\xa5\\x82\\x3a\\x88\\\n\\x43\\x40\\x71\\x70\\x2a\\xb8\\xeb\\x4d\\xb8\\xe5\\x06\\x3a\\x14\\xbc\\x01\\xc1\\\n\\xc9\\x40\\xbd\\x08\\xa9\\x8b\\x8b\\x38\\x04\\x07\\x2f\\x40\\x70\\x50\\x8b\\xe0\\\n\\xe6\\xe6\\x6c\\x03\\xa5\\x38\\xe4\\xe7\\x34\\x9e\\x73\\x72\\x4e\\x1c\\xa2\\x75\\\n\\x09\\x19\\xba\\xe8\\xe0\\x3b\\x7d\\xf0\\xc0\\xc3\\xf7\\x07\\xff\\x59\\x28\\xc7\\\n\\x57\\x51\\xe7\\xbb\\x76\\x00\\xb8\\x2c\\x3d\\xa0\\x8f\\x2d\\x7c\\x8c\\xc2\\x91\\\n\\xb3\\x9b\\x4e\\x1c\\x5f\\x88\\xa3\\x9d\\xd7\\x5a\\x5e\\xe4\\xd7\\xa5\\xce\\xcf\\\n\\x38\\xdc\\x8c\\x96\\xbe\\x44\\xfd\\x60\\xd7\\x9e\\xec\\xaf\\xc1\\x47\\xe1\\xf2\\\n\\x3c\\x75\\xbb\\x83\\x91\\x56\\x40\\x50\\xcf\\x75\\x77\\x30\\xca\\x2c\\x10\\xb4\\\n\\x00\\x30\\xca\\xdf\\x5b\\xb5\\x3c\\x8c\\x0d\\xb7\\x6f\\x9a\\xf5\\xb6\\x0b\\x2a\\\n\\xf5\\xe7\\x3d\\x37\\xf0\\x4a\\x50\\xe4\\xc4\\xca\\x90\\x68\\x83\\xb4\\x25\\xa2\\\n\\xb0\\x20\\x93\\x9f\\xa1\\x1b\\x78\\x25\\x90\\x22\\x7c\\x79\\x9f\\xb1\\xbd\\x02\\\n\\x5b\\xcb\\x25\\x49\\x16\\x43\\x3a\\x0e\\xe7\\x82\\x06\\x5e\\xed\\x40\\x67\\xc3\\\n\\xd3\\xfb\\x09\\x68\\xe1\\x23\\x53\\x48\\xa3\\xd0\\x11\\xd3\\xf3\\x12\\xf0\\x7a\\\n\\x8f\\x6e\\x54\\xc3\\x11\\x93\\xe1\\xc2\\x67\\xf4\\x7a\\x4f\\xad\\xdf\\x7d\\xa4\\\n\\x8d\\x83\\xbb\\xf6\\xdf\\x79\\xeb\\x4f\\x5e\\xd8\\xa3\\x08\\xb6\\x35\\x11\\x56\\\n\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x04\\x09\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xf5\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xa2\\xc1\\xef\\x9f\\xc0\\xed\\x9d\\xbe\\xeb\\\n\\x9a\\xbc\\xeb\\x96\\xba\\xe9\\x93\\xb7\\xe7\\x90\\xb5\\xe6\\x8c\\xb2\\xe4\\x88\\\n\\xaf\\xe2\\x84\\xac\\xe0\\x80\\xa9\\xdd\\x7d\\xa5\\xdc\\x7a\\xa3\\xda\\xa1\\xc1\\\n\\xee\\xf4\\xf7\\xfb\\x74\\xa0\\xd7\\x9e\\xbf\\xec\\xa5\\xd5\\x9c\\xa1\\xd3\\x98\\\n\\x9d\\xd0\\x94\\x98\\xce\\x90\\x93\\xcb\\x8b\\x8e\\xc9\\x87\\x89\\xc6\\x82\\x84\\\n\\xc3\\x7e\\x80\\xc1\\x7a\\x7c\\xbe\\x76\\x6f\\x9b\\xd4\\x9b\\xbd\\xeb\\xff\\xff\\\n\\xff\\x6a\\x97\\xd1\\x98\\xba\\xe9\\xa6\\xc3\\xe9\\x64\\x93\\xce\\x94\\xb7\\xe7\\\n\\xa9\\xc4\\xe8\\xac\\xc7\\xe8\\xeb\\xf1\\xf7\\x5f\\x8f\\xcb\\x8f\\xb4\\xe5\\xf2\\\n\\xf6\\xfa\\xaa\\xc6\\xe9\\xac\\xc6\\xe9\\xac\\xc7\\xea\\xad\\xc7\\xe9\\x6e\\x97\\\n\\xd4\\x7b\\x9e\\xd4\\x71\\x98\\xd0\\x82\\xa4\\xd6\\x68\\x8e\\xcd\\x69\\x90\\xcd\\\n\\x75\\x9a\\xd0\\x73\\x99\\xd1\\x62\\x8b\\xc8\\x8c\\xb1\\xe3\\xf1\\xf6\\xfa\\xae\\\n\\xc9\\xea\\xb0\\xc9\\xea\\x65\\x8d\\xcc\\xb0\\xcd\\xf3\\xb3\\xc7\\xe3\\xa1\\xbf\\\n\\xea\\x60\\x89\\xc9\\x87\\xae\\xe1\\xf0\\xf4\\xfa\\xb2\\xcb\\xea\\xb3\\xcc\\xea\\\n\\x5b\\x86\\xc7\\x9e\\xc0\\xef\\x6e\\x93\\xcc\\xf7\\xfb\\xff\\xf1\\xf8\\xff\\x8c\\\n\\xaf\\xe4\\x61\\x8a\\xc7\\x82\\xaa\\xdf\\xef\\xf3\\xf9\\xb7\\xce\\xea\\xbb\\xd0\\\n\\xeb\\x5d\\x88\\xc8\\xa1\\xbf\\xef\\xfa\\xfc\\xfd\\xfb\\xfc\\xfe\\xfd\\xfd\\xfe\\\n\\xfc\\xfd\\xfe\\xfa\\xfb\\xfd\\xfb\\xfc\\xfd\\x85\\xa8\\xdd\\x53\\x7f\\xc1\\x7e\\\n\\xa8\\xdd\\xba\\xd0\\xeb\\x65\\x8d\\xca\\x99\\xb8\\xea\\x7e\\xa5\\xdd\\x80\\xa6\\\n\\xdd\\x7c\\xa3\\xdb\\x7a\\xa0\\xd9\\x79\\xa0\\xd9\\x78\\x9f\\xd8\\x78\\x9e\\xd8\\\n\\x5d\\x84\\xbf\\x7a\\xa4\\xd9\\xee\\xf3\\xf9\\xbe\\xd2\\xeb\\xbf\\xd3\\xeb\\x61\\\n\\x8b\\xc9\\x92\\xb5\\xe6\\x81\\xa7\\xe2\\x81\\xa7\\xe1\\x7d\\xa3\\xde\\x7b\\xa1\\\n\\xdc\\x79\\x9f\\xdb\\x77\\x9e\\xd9\\x73\\x9a\\xd4\\x57\\x7e\\xbb\\x75\\xa1\\xd7\\\n\\xed\\xf2\\xf8\\xea\\xf0\\xf7\\xe6\\xed\\xf6\\xe2\\xea\\xf4\\xde\\xe7\\xf3\\x54\\\n\\x81\\xc4\\x97\\xb6\\xea\\xea\\xf3\\xf3\\xe6\\xf1\\xed\\xe6\\xf1\\xef\\xe6\\xf0\\\n\\xef\\xe5\\xf1\\xed\\xed\\xf5\\xf3\\x79\\x9c\\xd5\\x44\\x70\\xb0\\x72\\x9e\\xd6\\\n\\x6e\\x99\\xd3\\x68\\x96\\xd1\\x63\\x92\\xce\\x5e\\x8e\\xcb\\x5b\\x8a\\xc9\\x51\\\n\\x7f\\xc3\\x9a\\xb6\\xef\\xe8\\xf3\\xea\\x84\\xbf\\x51\\x98\\xc9\\x6f\\x99\\xc9\\\n\\x71\\x84\\xbf\\x54\\xe9\\xf4\\xe4\\x7b\\x9c\\xdd\\x3a\\x69\\xaa\\x55\\x83\\xc6\\\n\\xba\\xce\\xef\\xff\\xff\\xdd\\xc7\\xee\\x87\\xd7\\xf4\\xa2\\xd7\\xf6\\xa2\\xc7\\\n\\xee\\x8c\\xff\\xff\\xe0\\x85\\xa2\\xdd\\x3e\\x6a\\xab\\x33\\x68\\xba\\x58\\x84\\\n\\xc3\\x68\\x8b\\xd3\\x70\\x8f\\xe1\\x6c\\x8d\\xdc\\x6d\\x8b\\xda\\x6e\\x8a\\xd7\\\n\\x6c\\x8b\\xcd\\x44\\x6d\\xab\\x2e\\x5f\\xa6\\x28\\x09\\x12\\xd0\\x00\\x00\\x00\\\n\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\\n\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xee\\x49\\x44\\x41\\x54\\x18\\\n\\xd3\\x63\\x60\\x60\\x64\\x62\\x66\\x61\\x65\\x63\\xe7\\xe0\\xe4\\xe2\\xe6\\xe1\\\n\\x65\\x60\\x60\\xe0\\xe3\\x47\\x02\\x02\\x40\\x01\\x41\\x7e\\x21\\x61\\x11\\x51\\\n\\x31\\x71\\x09\\x49\\x29\\x69\\x7e\\x19\\xa0\\x80\\x2c\\xbf\\x1c\\x1c\\xf0\\xcb\\\n\\x03\\x05\\x14\\xf8\\x15\\xe1\\x80\\x5f\\x09\\x28\\xa0\\xcc\\xaf\\x28\\xa7\\x02\\\n\\x94\\x55\\x05\\x62\\x35\\x75\\xa0\\x80\\x86\\xa6\\x96\\xb6\\x8e\\xae\\x9e\\xbe\\\n\\x81\\xa1\\x91\\xb1\\x89\\xa9\\x19\\x03\\x83\\xb9\\x85\\xa5\\x9c\\x95\\x9c\\xb5\\\n\\x8d\\x9c\\x2d\\xc8\\x14\\x3b\\x7b\\x06\\x07\\x47\\x27\\x67\\x67\\x67\\x17\\x57\\\n\\x39\\x37\\x39\\x39\\x77\\x0f\\x4f\\x2f\\x06\\x6f\\x1f\\x5f\\x39\\x3f\\x39\\xff\\\n\\x80\\xc0\\xa0\\xe0\\x90\\xd0\\xb0\\xf0\\x08\\x86\\x48\\x9f\\x28\\x3f\\x3f\\xbf\\\n\\xe8\\x98\\xd8\\xb8\\xf8\\x84\\xc4\\xa4\\xe4\\x14\\x86\\xd4\\xb4\\x74\\xb9\\x0c\\\n\\xb9\\xcc\\xac\\xec\\x9c\\xdc\\xbc\\xfc\\x82\\xc2\\x22\\x86\\xe2\\x92\\xd2\\xb2\\\n\\xf2\\x8a\\xca\\xaa\\xea\\x9a\\xda\\xba\\xfa\\x86\\xc6\\x26\\x86\\xe6\\x96\\xd6\\\n\\xb6\\xf6\\x8e\\xce\\xae\\xee\\x9e\\xde\\xbe\\xfe\\x09\\x13\\x27\\x31\\x40\\xc0\\\n\\xe4\\x29\\x53\\xa7\\x4d\\x9f\\x31\\x73\\xd6\\xec\\x39\\x50\\x81\\xb9\\xf3\\xe6\\\n\\x2f\\x58\\xb8\\x68\\xf1\\x92\\xa5\\xcb\\x00\\x01\\xe9\\x3d\\xbe\\xf4\\x6d\\xb0\\\n\\x76\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\\n\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\\n\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\\n\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\\n\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x0e\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x26\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xae\\xc6\\xe3\\xc8\\xd0\\xdb\\xd3\\xd5\\xd7\\\n\\xd2\\xd4\\xd6\\xc4\\xcd\\xd8\\xaa\\xc1\\xdf\\xa8\\xc3\\xe6\\xd2\\xd7\\xdd\\xe8\\\n\\xec\\xf1\\xf3\\xf6\\xfa\\xfb\\xfd\\xfe\\xf2\\xf5\\xf9\\xe5\\xe9\\xee\\xc7\\xcd\\\n\\xd4\\x9f\\xba\\xdd\\xd4\\xd8\\xde\\xf7\\xf8\\xfb\\xff\\xff\\xff\\xf6\\xf9\\xfc\\\n\\xee\\xf3\\xfa\\xed\\xf3\\xfa\\xf4\\xf8\\xfc\\xf3\\xf6\\xf9\\xc4\\xca\\xd1\\x9c\\\n\\xb7\\xda\\xeb\\xf1\\xf9\\xe9\\xf0\\xf9\\xe8\\xef\\xf9\\xe6\\xef\\xf8\\xe5\\xee\\\n\\xf8\\xba\\xbf\\xc7\\xae\\xc5\\xe2\\xe3\\xec\\xf7\\xd8\\xdf\\xe7\\x94\\xab\\xc8\\\n\\xc7\\xcf\\xda\\x4e\\x7c\\xb6\\x4e\\x7b\\xb4\\x5f\\x92\\xd2\\xe1\\xeb\\xf7\\xf1\\\n\\xf5\\xfb\\xea\\xef\\xf6\\xa0\\xa9\\xb4\\xd1\\xd3\\xd5\\xec\\xf2\\xfa\\xe0\\xea\\\n\\xf6\\xdf\\xe9\\xf6\\xf9\\xfb\\xfd\\xa5\\xa7\\xa9\\xd0\\xd2\\xd4\\xe4\\xed\\xf7\\\n\\x4d\\x7a\\xb3\\x5e\\x91\\xd2\\xdd\\xe8\\xf6\\xf1\\xf5\\xfa\\xa0\\xa2\\xa4\\xc2\\\n\\xcb\\xd6\\xef\\xf3\\xf8\\xf2\\xf6\\xfb\\x5c\\x90\\xd2\\xdc\\xe7\\xf5\\xdb\\xe4\\\n\\xef\\x94\\x9c\\xa7\\xa7\\xbe\\xdc\\xe1\\xe5\\xec\\xfe\\xfe\\xff\\xdb\\xe6\\xf5\\\n\\xda\\xe5\\xf5\\xfa\\xfc\\xfe\\xbf\\xc9\\xd6\\x81\\x98\\xb6\\xbe\\xc3\\xca\\xed\\\n\\xf1\\xf7\\xd8\\xe5\\xf4\\xdc\\xe4\\xef\\x92\\x9a\\xa3\\x94\\xb0\\xd2\\xb3\\xbb\\\n\\xc3\\xe8\\xee\\xf4\\xef\\xf4\\xfb\\xdb\\xe4\\xee\\x91\\x9c\\xa8\\x79\\x94\\xb7\\\n\\x8c\\xa7\\xca\\xa3\\xab\\xb3\\xc8\\xd1\\xdc\\xe1\\xe8\\xf1\\xd6\\xe0\\xed\\xb8\\\n\\xc3\\xd2\\x8c\\x94\\x9f\\x77\\x92\\xb5\\x83\\x9b\\xb8\\x8e\\x97\\xa2\\x94\\x96\\\n\\x98\\x90\\x92\\x95\\x88\\x91\\x9c\\x79\\x91\\xae\\x20\\x91\\xf2\\x49\\x00\\x00\\\n\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\\n\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xc2\\x49\\x44\\x41\\x54\\\n\\x18\\xd3\\x63\\x60\\xc0\\x0a\\x18\\x99\\x98\\x59\\x58\\xd9\\xe0\\x5c\\x76\\x0e\\\n\\x4e\\x2e\\x6e\\x6e\\x1e\\x5e\\x3e\\x7e\\x28\\x5f\\x40\\x50\\x48\\x58\\x44\\x54\\\n\\x4c\\x48\\x5c\\x42\\x12\\x2c\\xc0\\x21\\x28\\x24\\x25\\x2d\\x23\\x23\\x2b\\x27\\\n\\x24\\x2e\\x0f\\xe2\\x2b\\x70\\x42\\xf9\\x8a\\x8a\\x42\\x4a\\xca\\x40\\x01\\x15\\\n\\x2e\\x31\\x19\\x19\\x55\\x55\\x35\\x75\\x45\\x0d\\x4d\\x2d\\x6d\\xa0\\x80\\x0e\\\n\\xb7\\xae\\x8c\\x9c\\x9a\\x9a\\x9a\\xba\\x9e\\xbe\\xa2\\x81\\x21\\x50\\xc0\\x88\\\n\\x5b\\x4a\\xce\\x58\\x4d\\xcd\\xc4\\xd4\\xcc\\x4c\\xc3\\xdc\\x02\\x28\\x60\\x69\\\n\\x65\\xad\\xa8\\xa8\\x6e\\x6a\\x6a\\x63\\x66\\x2b\\x62\\x67\\x0f\\x14\\x70\\x70\\\n\\x74\\xd2\\xd0\\xd3\\x37\\x33\\xb3\\x75\\x76\\x71\\x75\\x73\\x07\\x59\\xe3\\xe1\\\n\\x29\\x04\\xe6\\x7a\\x39\\x79\\xfb\\x80\\xdd\\xe1\\xeb\\xe7\\xef\\x14\\xa0\\xa1\\\n\\x27\\xea\\x1a\\x18\\x14\\x0c\\x71\\x6a\\x48\\x68\\x58\\xb8\\xb5\\x48\\x44\\x64\\\n\\x54\\x34\\xdc\\x37\\x31\\xb1\\x71\\xf1\\x09\\x89\\xd8\\x3d\\x0e\\x00\\x51\\x18\\\n\\x1b\\xb6\\xae\\x91\\x9a\\xac\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\\n\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\\n\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\\n\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\\n\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\\n\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\\n\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\\n\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\\n\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\\n\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\xa3\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\xbc\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xf9\\xbb\\x00\\xf7\\xb9\\x00\\xf6\\xb8\\x00\\\n\\xf5\\xb6\\x00\\xfa\\xbc\\x00\\xfb\\xda\\x75\\xfc\\xea\\xab\\xfb\\xf0\\xbd\\xfb\\\n\\xef\\xba\\xfa\\xe6\\xa6\\xf7\\xd5\\x75\\xf0\\xb0\\x00\\xfa\\xcd\\x3f\\xfc\\xe5\\\n\\x9a\\xfb\\xef\\xa9\\xf8\\xe5\\x81\\xf6\\xde\\x6e\\xf5\\xda\\x66\\xf5\\xdb\\x6e\\\n\\xf7\\xe3\\x92\\xf8\\xde\\x94\\xf1\\xc0\\x3f\\xf9\\xbc\\x00\\xfc\\xe9\\xa7\\xfa\\\n\\xeb\\x99\\xf7\\xe3\\x78\\xf7\\xde\\x6b\\xf5\\xda\\x64\\xf4\\xd7\\x5c\\xf3\\xd3\\\n\\x54\\xf3\\xd1\\x53\\xf4\\xd8\\x71\\xf7\\xdf\\x9e\\xe8\\xa6\\x00\\xfb\\xdb\\x7b\\\n\\xfb\\xef\\xa7\\xf8\\xe4\\x78\\xf7\\xdf\\x6d\\xb5\\x8f\\x57\\xf5\\xd8\\x5e\\xf4\\\n\\xd4\\x56\\xb5\\x8e\\x54\\xf1\\xcc\\x47\\xf0\\xca\\x44\\xf4\\xd8\\x7b\\xf2\\xcf\\\n\\x7b\\xe4\\xa1\\x00\\xfc\\xec\\xb2\\xf9\\xe7\\x86\\xf7\\xe0\\x6f\\xf6\\xdd\\x68\\\n\\xf5\\xd9\\x60\\xf4\\xd6\\x59\\xf3\\xd1\\x51\\xf2\\xcd\\x48\\xf0\\xca\\x40\\xef\\\n\\xc5\\x38\\xf0\\xc8\\x48\\xf6\\xdf\\xa1\\xe2\\x9e\\x00\\xf5\\xb7\\x00\\xfc\\xf3\\\n\\xc0\\xf7\\xe3\\x76\\xf6\\xde\\x6a\\xf5\\xda\\x63\\xf4\\xd7\\x5b\\xf3\\xd2\\x53\\\n\\xf2\\xce\\x4b\\xf1\\xcb\\x43\\xef\\xc6\\x3b\\xee\\xc2\\x32\\xee\\xc1\\x34\\xf6\\\n\\xdf\\x9a\\xdf\\x9b\\x00\\xf4\\xb5\\x00\\xfb\\xef\\xb8\\xf7\\xe0\\x72\\xb2\\x8d\\\n\\x30\\xd5\\xb4\\x47\\xf3\\xd4\\x55\\xf2\\xcf\\x4e\\xf1\\xcb\\x45\\xf0\\xc8\\x3c\\\n\\xd0\\xa3\\x28\\xac\\x7b\\x16\\xed\\xbf\\x2f\\xf6\\xde\\x99\\xdd\\x99\\x00\\xf2\\\n\\xb2\\x00\\xfb\\xea\\xaf\\xf7\\xe0\\x78\\xea\\xcc\\x57\\xb0\\x89\\x2a\\xd6\\xb1\\\n\\x3d\\xf0\\xc9\\x40\\xd2\\xa7\\x2b\\xac\\x7c\\x17\\xe2\\xb2\\x24\\xee\\xc1\\x39\\\n\\xf4\\xdb\\x9d\\xd8\\x92\\x00\\xf6\\xd6\\x7e\\xf8\\xe6\\x96\\xf4\\xd7\\x5f\\xe8\\\n\\xc6\\x4b\\xbb\\x91\\x2b\\xad\\x82\\x20\\xad\\x7f\\x1b\\xb8\\x88\\x1c\\xe2\\xb2\\\n\\x26\\xed\\xbc\\x29\\xf2\\xcf\\x68\\xeb\\xc7\\x7e\\xd3\\x8c\\x00\\xec\\xab\\x00\\\n\\xf8\\xe2\\xa3\\xf6\\xdd\\x7c\\xf0\\xc7\\x3c\\xee\\xc3\\x34\\xed\\xbf\\x2c\\xed\\\n\\xbd\\x2c\\xf0\\xc8\\x50\\xf1\\xd6\\x97\\xd2\\x8a\\x00\\xee\\xbe\\x45\\xf6\\xdc\\\n\\x97\\xf6\\xdf\\x8a\\xf2\\xce\\x55\\xef\\xc5\\x3b\\xee\\xc1\\x33\\xef\\xc5\\x40\\\n\\xf2\\xd2\\x70\\xef\\xd2\\x92\\xde\\xaa\\x48\\xef\\xcb\\x75\\xf5\\xde\\xa0\\xf7\\\n\\xe3\\xa2\\xf7\\xe1\\x9e\\xf3\\xda\\x9b\\xe8\\xc1\\x75\\xd0\\x88\\x00\\xe0\\x9c\\\n\\x00\\xde\\x9a\\x00\\xdb\\x97\\x00\\xd7\\x91\\x00\\xcf\\x87\\x00\\xff\\xff\\xff\\\n\\x11\\xc6\\x80\\x7e\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\\n\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\\n\\x00\\xc1\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x0e\\x18\\x99\\x98\\x59\\\n\\x90\\xb8\\xac\\x6c\\xec\\x1c\\x9c\\x5c\\xdc\\x3c\\x30\\x3e\\x2f\\x1f\\xbf\\x80\\\n\\xa0\\x90\\xb0\\x88\\xa8\\x18\\x84\\x2f\\x2e\\x21\\x29\\x25\\x2d\\x23\\x2b\\x27\\\n\\xaf\\xa0\\xa8\\x04\\xd6\\xae\\xac\\xa2\\xaa\\xa6\\xae\\xa1\\xa9\\xa5\\xad\\xa3\\\n\\xab\\xa7\\x0f\\x14\\x60\\x32\\x30\\x34\\x32\\x36\\x31\\x35\\x33\\xb7\\xb0\\xb4\\\n\\xb2\\xb6\\x01\\x0a\\xd8\\xda\\xd9\\x3b\\x38\\x3a\\x39\\xbb\\xb8\\xba\\xb9\\x7b\\\n\\x78\\x7a\\x01\\x05\\xbc\\x7d\\x7c\\xfd\\xfc\\x03\\x02\\x83\\x82\\x43\\x42\\xc3\\\n\\xc2\\x23\\x80\\x02\\x91\\x51\\xd1\\x31\\xb1\\x71\\xda\\xf1\\x09\\x89\\x49\\xc9\\\n\\x29\\xa9\\x40\\x01\\x9e\\xb4\\xf4\\x8c\\xcc\\xac\\xec\\x9c\\xdc\\xbc\\xfc\\x82\\\n\\xc2\\x22\\x90\\x35\\xc5\\x25\\xa5\\xf2\\xae\\x65\\xe5\\x15\\x95\\x55\\xd5\\x35\\\n\\x10\\x87\\xd4\\xd6\\xd5\\x37\\x34\\x36\\x35\\xb7\\xb4\\xb6\\xc1\\x9c\\xaa\\xdf\\\n\\xde\\xd1\\xd9\\xd5\\xdd\\xd3\\x8b\\xf0\\x4c\\x5f\\xff\\x84\\x89\\x45\\x93\\xb0\\\n\\xfb\\x1b\\x00\\x27\\x81\\x2b\\x2b\\x1e\\x73\\xbe\\x04\\x00\\x00\\x00\\x1d\\x74\\\n\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\\n\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\\n\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\\n\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\\n\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x35\\\n\\x2d\\x30\\x34\\x54\\x31\\x35\\x3a\\x35\\x33\\x3a\\x32\\x37\\x2b\\x30\\x32\\x3a\\\n\\x30\\x30\\xf8\\x04\\x5b\\x92\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\\n\\x60\\x82\\\n\\x00\\x00\\x02\\x60\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xc0\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xd5\\xd5\\xd5\\xd4\\xd4\\xd4\\xd2\\xd2\\xd2\\\n\\xd1\\xd1\\xd1\\xcf\\xcf\\xcf\\xce\\xce\\xce\\xcd\\xcd\\xcd\\xff\\xff\\xff\\xe4\\\n\\xe4\\xe4\\xe2\\xe2\\xe2\\xde\\xde\\xde\\xcb\\xcb\\xcb\\xca\\xca\\xca\\xf4\\xf7\\\n\\xfb\\xc7\\xc7\\xc7\\xc8\\xc8\\xc8\\xa6\\xc3\\xe9\\xc3\\xc3\\xc3\\x9f\\xc0\\xed\\\n\\x96\\xba\\xe9\\xdc\\xdc\\xdc\\xc0\\xc0\\xc0\\xe9\\xe9\\xe9\\xa2\\xc1\\xef\\xd9\\\n\\xd9\\xd9\\xbc\\xbc\\xbc\\x9d\\xbe\\xeb\\x9a\\xbc\\xeb\\x93\\xb7\\xe7\\x90\\xb5\\\n\\xe6\\x62\\x8b\\xc8\\x6b\\x6b\\x6b\\xe7\\xe7\\xe7\\xa1\\xc1\\xee\\xa1\\xbf\\xea\\\n\\x60\\x89\\xc9\\x9e\\xbf\\xec\\xa5\\xd5\\x9c\\xa1\\xd3\\x98\\x9d\\xd0\\x94\\x98\\\n\\xce\\x90\\x93\\xcb\\x8b\\x8e\\xc9\\x87\\x8c\\xaf\\xe4\\x61\\x8a\\xc7\\xe5\\xe5\\\n\\xe5\\x9b\\xbd\\xeb\\x85\\xa8\\xdd\\x53\\x7f\\xc1\\xb7\\xb7\\xb7\\x98\\xba\\xe9\\\n\\x78\\x9e\\xd8\\x5d\\x84\\xbf\\x73\\x9a\\xd4\\x57\\x7e\\xbb\\x79\\x9c\\xd5\\x44\\\n\\x70\\xb0\\x94\\xb7\\xe7\\x7b\\x9c\\xdd\\x3a\\x69\\xaa\\x8f\\xb4\\xe5\\x85\\xa2\\\n\\xdd\\x3e\\x6a\\xab\\x9f\\xdb\\x6a\\x51\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\xa3\\x49\\x44\\x41\\x54\\x18\\xd3\\x4d\\xce\\xe7\\x16\\\n\\x82\\x30\\x0c\\x05\\x60\\x14\\xa1\\x91\\x62\\xb0\\x80\\x14\\x71\\xe2\\xde\\xa8\\\n\\xb8\\xe7\\xfb\\xbf\\x95\\x50\\xa2\\xc7\\xfb\\x2f\\xdf\\x69\\x6f\\xa2\\x95\\xca\\\n\\x7a\\xc5\\x30\\x99\\xf6\\x8b\\x0e\\x79\\xaa\\xec\\x0f\\x2c\\x93\\x03\\x58\\xf6\\\n\\x17\\x0c\\x60\\x5a\\x0d\\x01\\xb8\\x43\\x60\\x02\\xaf\\xd5\\x11\\x05\\x70\\xb7\\\n\\x00\\x96\\x35\\x20\\x7a\\xbe\\x80\\x46\\xa0\\xc0\\x96\\xf9\\x1c\\x86\\x9e\\x80\\\n\\x66\\xa4\\xc4\\x91\\x20\\x7d\\x2d\\xf4\\x5a\\x6d\\xbf\\xd3\\xed\\xf5\\x33\\x71\\\n\\x63\\x90\\x03\\x2c\\x32\\x1c\\xe5\\x6f\\x82\\x18\\xc6\\x38\\x99\\xce\\xe6\\x8b\\\n\\xe5\\x6a\\xad\\x7e\\x45\\x9b\\x04\\xd5\\x7d\\xb0\\xdd\\x15\\xab\\xf6\\x29\\x0a\\\n\\x95\\xc3\\x91\\xae\\x49\\xa8\\xe3\\x74\\x26\\x48\\xa9\\xe3\\x72\\x25\\xb8\\x51\\\n\\xc7\\xfd\\x41\\xf0\\xa4\\x8e\\xd7\\xfb\\x03\\xab\\xb5\\x0e\\x50\\x81\\x79\\x60\\\n\\x04\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\\n\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\\n\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\\n\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\\n\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\\n\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\\n\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x42\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x6e\\\n\\x50\\x4c\\x54\\x45\\x4a\\x54\\x49\\x5d\\x6a\\x5c\\x60\\x6d\\x5f\\x61\\x6d\\x5f\\\n\\x61\\x6d\\x60\\x62\\x6d\\x60\\x63\\x6d\\x60\\x5f\\x6a\\x5e\\x4b\\x54\\x4a\\xfc\\\n\\xfc\\xfc\\xfe\\xfe\\xfe\\x00\\x00\\x00\\xfb\\xfb\\xfb\\xf5\\xf5\\xf5\\xa9\\xb0\\\n\\xa9\\xfe\\xfe\\xf4\\xf5\\xd8\\xae\\xfe\\x15\\x15\\xcd\\xcd\\x52\\xa1\\xc7\\xec\\\n\\xdf\\xe9\\xf5\\xff\\xff\\xff\\xf4\\xf9\\xf4\\x64\\x6e\\x61\\xf4\\xf5\\xf4\\xfc\\\n\\xfc\\xf5\\xf5\\xa4\\x9a\\xdf\\xa0\\x54\\xa5\\xbb\\xbb\\xfb\\xfc\\xfd\\x64\\x6e\\\n\\x62\\xfe\\xfb\\xf8\\xf6\\xa9\\xa1\\xf7\\xf7\\x85\\xf6\\xf7\\xfb\\x64\\x6e\\x63\\\n\\xfd\\xfb\\xfa\\xf5\\xcc\\xb1\\xd7\\xd7\\x5b\\xce\\xd9\\xe9\\xfd\\xfe\\xfe\\xf5\\\n\\xfa\\xf5\\xea\\xdf\\x7b\\xbb\\xc9\\xc6\\xe0\\xe8\\xf7\\xf8\\xfa\\xfc\\xfd\\xfd\\\n\\xfe\\xe9\\xee\\xf8\\xda\\xef\\xda\\x64\\x6f\\x63\\xef\\xf1\\xef\\xfd\\xfa\\xf8\\\n\\xe2\\x7e\\x56\\xb0\\xcb\\xe5\\xa5\\xbd\\xda\\xa8\\xbc\\xde\\xa0\\xb7\\xd9\\x64\\\n\\x6f\\x64\\xcb\\xce\\xca\\xfd\\xfd\\xf2\\xeb\\x5e\\x5e\\xe6\\xdd\\x8a\\xc9\\xdc\\\n\\xdc\\xcf\\xd4\\xad\\xe0\\xef\\xd1\\x65\\x6f\\x64\\xe3\\xf0\\xd9\\xb0\\x83\\x57\\\n\\xd7\\x77\\x61\\xdb\\x98\\x61\\xdc\\xe4\\xcb\\x66\\x6f\\x64\\xcf\\xe9\\xbb\\x99\\\n\\xc6\\x76\\x07\\x07\\x07\\xe9\\x9a\\x69\\xc9\\xaf\\x7e\\xe3\\xec\\xda\\x6d\\x75\\\n\\x6b\\xfd\\xfe\\xfd\\xdf\\xed\\xd6\\xa3\\xd2\\x89\\x8c\\xbf\\x6e\\xda\\x58\\x47\\\n\\xc7\\xa9\\x79\\xe2\\xeb\\xd4\\xfa\\xfc\\xf9\\xfa\\xfc\\xf7\\xa2\\xa7\\xa0\\xf8\\\n\\xf8\\xf8\\xf3\\xf9\\xf0\\xcf\\xe8\\xbf\\x9e\\xcc\\x87\\xd7\\x8c\\x56\\xe0\\x5f\\\n\\x48\\xdb\\xec\\xd2\\xfb\\xfd\\xfa\\xe7\\xe8\\xe7\\xc2\\xc6\\xc2\\xfd\\xfd\\xfd\\\n\\xe5\\xf1\\xdb\\xb3\\xd1\\x9c\\xb1\\xd5\\x98\\xc6\\x87\\x57\\xb5\\xc2\\x82\\xaf\\\n\\xad\\x76\\xe9\\xf1\\xe1\\xf9\\xf9\\xf8\\x60\\x6a\\x5f\\xd3\\xed\\xd3\\xd2\\xee\\\n\\xd2\\xe0\\xee\\xd2\\xe9\\xf2\\xe9\\xfa\\xfd\\xfa\\xd0\\xd3\\xcf\\x4c\\x54\\x4b\\\n\\x61\\x6a\\x5f\\x77\\x7e\\x74\\xb4\\xb8\\xb3\\xdb\\xdd\\xda\\xc9\\xcc\\xc8\\x83\\\n\\x88\\x82\\xaf\\x7d\\x03\\x43\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x0b\\x1f\\\n\\xd7\\xc4\\xc0\\x00\\x00\\x00\\xe4\\x49\\x44\\x41\\x54\\x18\\xd3\\x2d\\x8c\\x65\\\n\\x57\\x02\\x61\\x10\\x46\\x07\\x15\\x71\\xe7\\x01\\x0b\\xc7\\x4e\\x30\\xb0\\xc5\\\n\\x06\\x83\\x5d\\x03\\xc4\\x5a\\x15\\xec\\x0e\\xb0\\xc1\\x44\\xfd\\xf7\\xbe\\xfb\\\n\\xea\\xfd\\x32\\xe7\\xde\\x33\\xe7\\x21\\x72\\x15\\x29\\x8a\\x15\\x25\\x6e\\x77\\\n\\xa9\\xa7\\x8c\\x5c\\x06\\x1b\\x06\\x0c\\x07\\x66\\xaf\\xcf\\x43\\xe5\\x5c\\x51\\\n\\x59\\x05\\x54\\xfb\\x6b\\x58\\x84\\x6b\\xeb\\xa8\\x5e\\xa4\\xa1\\xb1\\x09\\x68\\\n\\x6e\\x11\\x05\\xb7\\x92\\x73\\xda\\xda\\x3b\\x80\\x80\\x0e\\x41\\x1d\\xa4\\xb3\\\n\\xab\\x1b\\x3d\\x21\\xe5\\xbd\\xff\\x41\\xa4\\x0f\\xfd\\x03\\x83\\x43\\xc3\\x23\\\n\\x61\\x1a\\xd5\\x3e\\x36\\x0e\\x4c\\x4c\\x4e\\x4d\\x23\\x42\\x51\\x76\\xc2\\xcc\\\n\\xec\\x1c\\xe6\\x63\\x80\\x69\\x91\\x57\\x7f\\x2c\\x2c\\x2e\\x41\\xb1\\x1c\\x4f\\\n\\xfc\\x6d\\xf0\\x4a\\x52\\xe9\\xea\\xda\\xfa\\xc6\\xa6\\x0e\\xf6\\xd6\\xf6\\x0e\\\n\\x52\\x48\\xef\\xee\\xed\\x1f\\xd0\\xa1\\xd8\\x47\\xc7\\x27\\xc0\\xe9\\x19\\xce\\\n\\x2f\\x44\\x2e\\xe9\\xea\\xfa\\x26\\x93\\x05\\x6e\\xef\\xee\\xf1\\xa0\\xf6\\x1f\\\n\\xe9\\xc9\\xf7\\x9c\\xcb\\x21\\x9f\\x37\\x4d\\xbc\\xbc\\xb2\\xfd\\x46\\xef\\x1f\\\n\\xe1\\x88\\x65\\x25\\x1c\\x3e\\x0b\\x5f\\xdf\\x3f\\xbf\\x12\\x3f\\x28\\x31\\x16\\\n\\xc0\\x8d\\xac\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\\n\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\xda\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\\n\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x31\\x2d\\\n\\x30\\x39\\x54\\x31\\x37\\x3a\\x35\\x36\\x3a\\x32\\x35\\x2b\\x30\\x31\\x3a\\x30\\\n\\x30\\x1b\\x79\\xd4\\xe1\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\\n\\x82\\\n\\x00\\x00\\x04\\x21\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x02\\x10\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x98\\x98\\x98\\x90\\x90\\x90\\x8b\\x8b\\x8b\\\n\\x88\\x88\\x88\\x81\\x81\\x81\\x78\\x78\\x78\\x71\\x71\\x71\\x6f\\x6f\\x6f\\x76\\\n\\x76\\x76\\xc9\\xc9\\xc9\\xc8\\xc8\\xc8\\xc6\\xc6\\xc6\\xc4\\xc4\\xc4\\x9b\\x93\\\n\\x7f\\xf9\\xe0\\xa4\\xf3\\xbe\\x41\\x85\\x7c\\x69\\x93\\x93\\x92\\x5c\\x5c\\x5c\\\n\\x6d\\x6d\\x6d\\xae\\xae\\xae\\xd2\\xd2\\xd2\\xb0\\xb0\\xb0\\xa3\\xa3\\xa3\\x9f\\\n\\x9f\\x9f\\xb7\\xb7\\xb7\\x9e\\x9e\\x9e\\xc0\\xc0\\xc0\\xaa\\xaa\\xaa\\x72\\x72\\\n\\x72\\x69\\x69\\x69\\x6a\\x6a\\x6a\\x67\\x67\\x67\\x53\\x53\\x53\\x6c\\x6c\\x6c\\\n\\xbc\\xbc\\xbc\\xa6\\xa6\\xa6\\xdd\\xdd\\xdd\\xd8\\xd8\\xd8\\xd5\\xd5\\xd5\\xcc\\\n\\xcc\\xcc\\x84\\x84\\x84\\x97\\x97\\x97\\xb4\\xb4\\xb4\\x9d\\x9d\\x9d\\x8d\\x8d\\\n\\x8d\\x40\\x40\\x40\\xba\\xba\\xba\\xb7\\xc7\\xda\\x69\\x9a\\xd4\\x5e\\x96\\xd5\\\n\\x5c\\x96\\xd5\\x63\\x97\\xd1\\xa2\\xb3\\xc5\\x96\\x96\\x96\\xbe\\xaf\\x86\\xd8\\\n\\xa5\\x58\\xdb\\xb1\\x85\\xd0\\x9d\\x46\\x74\\x5e\\x37\\x9b\\x9b\\x9b\\xd7\\xd7\\\n\\xd7\\x6a\\x9a\\xd4\\x62\\x99\\xd6\\x66\\x9b\\xd7\\x64\\x9c\\xd7\\x60\\x99\\xd6\\\n\\x63\\x97\\xd0\\xad\\xad\\xad\\x8d\\x7d\\x48\\xe7\\xbe\\x77\\xf0\\xd2\\xb4\\xff\\\n\\xf3\\xe5\\xef\\xd2\\xac\\xba\\x85\\x47\\x65\\x65\\x65\\x94\\x94\\x94\\xd0\\xd0\\\n\\xd0\\x5e\\x97\\xd6\\x66\\x9d\\xd9\\x6a\\x9f\\xd9\\x69\\x9e\\xd9\\x65\\x9b\\xd8\\\n\\x5f\\x98\\xd6\\xb9\\xaa\\x79\\xea\\xd2\\x7d\\xf9\\xe3\\xb2\\xe7\\xc0\\x8b\\xf6\\\n\\xd3\\xae\\xfc\\xe0\\xc4\\xce\\x9c\\x65\\x62\\x62\\x62\\x8e\\x8e\\x8e\\xc7\\xc7\\\n\\xc7\\x65\\x9c\\xd7\\x6a\\xa0\\xd9\\x67\\x9d\\xd8\\x87\\xa2\\xa4\\xed\\xd4\\x7c\\\n\\xfd\\xf6\\xc4\\xf6\\xdd\\x6c\\xed\\xca\\x6d\\xd7\\xa3\\x63\\xcb\\x98\\x5e\\x4d\\\n\\x45\\x3b\\x60\\x60\\x60\\x87\\x87\\x87\\xb9\\xb9\\xb9\\x64\\x96\\xd0\\x61\\x9a\\\n\\xd8\\x67\\x9c\\xd8\\x88\\xa1\\xa4\\xee\\xd3\\x79\\xfd\\xf7\\xc7\\xf5\\xdc\\x5f\\\n\\xf7\\xe2\\x5b\\xf2\\xd6\\x7a\\xd1\\x92\\x41\\x7c\\x70\\x62\\x35\\x35\\x35\\x5e\\\n\\x5e\\x5e\\x7e\\x7e\\x7e\\x95\\xa5\\xb8\\x64\\x96\\xce\\x60\\x9a\\xd6\\x7f\\x93\\\n\\x97\\xe7\\xcb\\x77\\xf5\\xdc\\x5e\\xf7\\xe1\\x5a\\xf1\\xd4\\x7b\\xd7\\x94\\x45\\\n\\x61\\x51\\x40\\x64\\x64\\x64\\x33\\x33\\x33\\x57\\x57\\x57\\x7a\\x7a\\x7a\\xa2\\\n\\x91\\x6f\\xd4\\xb7\\x74\\xfd\\xf6\\xc2\\xf7\\xdf\\x63\\xf8\\xe2\\x5d\\xf0\\xd3\\\n\\x79\\xd8\\x95\\x46\\x81\\x77\\x6c\\x61\\x61\\x61\\x5a\\x5a\\x5a\\x31\\x31\\x31\\\n\\x37\\x37\\x37\\x46\\x46\\x46\\x66\\x52\\x35\\xd5\\xb6\\x7a\\xd1\\xb7\\x90\\xe4\\\n\\xc9\\x55\\xf5\\xdf\\x5b\\xed\\xd0\\x78\\xcb\\x8b\\x3f\\x42\\x38\\x2d\\x2b\\x2b\\\n\\x2b\\x2a\\x2a\\x2a\\xaa\\x89\\x43\\xff\\xf2\\xe0\\xd8\\x9a\\x54\\xbe\\x7a\\x1a\\\n\\xc5\\x98\\x49\\xc1\\x82\\x34\\x83\\x65\\x2b\\xf9\\xc7\\x94\\xf9\\xc9\\x91\\xc9\\\n\\x85\\x41\\xaa\\x64\\x1c\\x55\\x3d\\x11\\x87\\x5f\\x28\\xbd\\x88\\x49\\xbc\\x8d\\\n\\x42\\xff\\xff\\xff\\x59\\xb3\\x6a\\xe2\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\xeb\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\x00\\\n\\x8c\\x4c\\xcc\\x2c\\xac\\x6c\\xec\\x1c\\x9c\\x2c\\x30\\x01\\x2e\\x6e\\x1e\\x5e\\\n\\x3e\\x7e\\x01\\x41\\x21\\x06\\x61\\x61\\x61\\x06\\x06\\x11\\x51\\x31\\x71\\x09\\\n\\x49\\x29\\x46\\x69\\x19\\x59\\x39\\x79\\x05\\x45\\x25\\x06\\x65\\x15\\x55\\x15\\\n\\x35\\x75\\x0d\\x4d\\x09\\x2d\\x6d\\x1d\\x5d\\x3d\\x16\\x7d\\x06\\x79\\x55\\x03\\\n\\x43\\x23\\x63\\x13\\x53\\x33\\x73\\x76\\x0b\\x4b\\x2b\\x6b\\x1b\\x06\\x45\\x5b\\\n\\x3b\\x7b\\x07\\x47\\x27\\x67\\x17\\x57\\x37\\x77\\x0f\\x4f\\x2f\\x6f\\x06\\x1f\\\n\\x5f\\x3f\\xff\\x80\\xc0\\xa0\\xe0\\x90\\xd0\\xb0\\xf0\\x88\\xc8\\xa8\\x68\\x86\\\n\\x98\\xd8\\x38\\xff\\xf8\\xa0\\x84\\xc4\\xa4\\xe4\\x94\\xd4\\xb4\\xf4\\x8c\\x4c\\\n\\x86\\xac\\xec\\x9c\\xdc\\xbc\\xfc\\xc4\\x82\\xc2\\xa2\\xe2\\x92\\xd2\\xb2\\xf2\\\n\\x0a\\x86\\xca\\x2a\\xe6\\xea\\x9a\\xda\\xba\\xfa\\xa2\\x86\\xc6\\xa6\\xe6\\x96\\\n\\xd6\\x36\\x86\\x76\\x0e\\xc5\\x0e\\xdb\\xce\\xae\\xee\\x9e\\xde\\xbe\\xfe\\x09\\\n\\x13\\x27\\x4d\\x66\\x60\\x98\\x52\\x31\\x75\\xda\\xf4\\x19\\x33\\x67\\xcd\\x9e\\\n\\x33\\x77\\xde\\xbc\\xf9\\xf3\\xc1\\xae\\x5f\\xb0\\x70\\xd1\\xe2\\x25\\x4b\\x91\\\n\\xfc\\xb7\\x6c\\xf9\\x8a\\x95\\xab\\x90\\x3d\\xbc\\x7a\\xcd\\xda\\x75\\x30\\x36\\\n\\x00\\xa6\\x77\\x3f\\xe4\\x46\\x52\\xf0\\x61\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\\n\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\xda\\\n\\x66\\x2c\\xf7\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x32\\x2d\\x31\\\n\\x30\\x54\\x31\\x31\\x3a\\x35\\x37\\x3a\\x30\\x39\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x28\\x50\\x4e\\x3f\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x02\\xdf\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x26\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x6c\\xbc\\x60\\x69\\xb9\\x5e\\x66\\xb5\\x5b\\\n\\x63\\xb1\\x58\\x6e\\xbf\\x62\\x87\\xc8\\x7c\\xa1\\xd3\\x96\\xaa\\xd8\\xa0\\xa7\\\n\\xd6\\x9e\\x99\\xce\\x90\\x78\\xba\\x70\\x58\\xa3\\x4f\\x6d\\xbf\\x62\\x8c\\xca\\\n\\x82\\xab\\xd8\\xa1\\xa2\\xd4\\x99\\xa6\\xd5\\x9c\\xa4\\xd4\\x9b\\x9b\\xd0\\x92\\\n\\x9e\\xd1\\x96\\x79\\xb8\\x71\\x50\\x99\\x47\\x85\\xc7\\x7b\\xa9\\xd7\\xa0\\xa0\\\n\\xd1\\x97\\x81\\xc0\\x77\\x7e\\xbc\\x75\\x97\\xcc\\x8e\\x9b\\xcf\\x93\\x98\\xce\\\n\\x90\\x69\\xab\\x61\\x6a\\xba\\x5f\\x9d\\xd1\\x94\\xa6\\xd5\\x9d\\x5d\\xaa\\x53\\\n\\x59\\xa6\\x50\\x56\\xa1\\x4d\\x52\\x9c\\x4a\\x90\\xc9\\x89\\x8c\\xc8\\x85\\x84\\\n\\xc0\\x7d\\x43\\x89\\x3c\\x66\\xb6\\x5c\\x63\\xb2\\x59\\x60\\xae\\x56\\x5c\\xa9\\\n\\x53\\x4e\\x97\\x46\\x6f\\xaf\\x67\\x8f\\xc9\\x88\\x3e\\x84\\x38\\x55\\xa0\\x4c\\\n\\x49\\x91\\x42\\x6a\\xab\\x63\\x8a\\xc7\\x83\\x88\\xc5\\x82\\x3a\\x7e\\x34\\x54\\\n\\x9f\\x4b\\x50\\x9a\\x48\\x49\\x91\\x41\\x45\\x8c\\x3e\\x84\\xc1\\x7c\\x7e\\xc1\\\n\\x77\\x77\\xb7\\x71\\x36\\x79\\x30\\x53\\x9e\\x4b\\x6c\\xae\\x63\\x68\\xaa\\x60\\\n\\x48\\x90\\x40\\x61\\xa3\\x5a\\x87\\xc5\\x81\\x85\\xc4\\x7e\\x82\\xc2\\x7c\\x54\\\n\\x96\\x4e\\x53\\x9d\\x4a\\x6a\\xad\\x63\\x8f\\xc9\\x87\\x8b\\xc7\\x85\\x89\\xc6\\\n\\x82\\x87\\xc4\\x7f\\x7c\\xbf\\x75\\x82\\xc2\\x7b\\x5b\\x9d\\x55\\x31\\x73\\x2c\\\n\\x4e\\x98\\x46\\x66\\xa9\\x5f\\x8b\\xc6\\x83\\x85\\xc3\\x7e\\x74\\xb5\\x6d\\x52\\\n\\x95\\x4d\\x46\\x8d\\x3f\\x5e\\xa1\\x57\\x5a\\x9e\\x55\\x3b\\x7f\\x35\\x37\\x7b\\\n\\x31\\x33\\x76\\x2e\\x3e\\x83\\x37\\xff\\xff\\xff\\xcd\\x43\\x40\\x92\\x00\\x00\\\n\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\\n\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\x93\\x49\\x44\\x41\\x54\\\n\\x18\\xd3\\x63\\x60\\x20\\x12\\x30\\x32\\x31\\xb3\\x20\\x71\\x59\\xd9\\xd8\\x39\\\n\\x38\\xb9\\xb8\\x79\\x60\\x7c\\x5e\\x3e\\x7e\\x01\\x41\\x21\\x61\\x11\\x51\\x31\\\n\\xa8\\x80\\xb8\\x04\\xa7\\xa4\\x94\\xb4\\x8c\\xac\\x9c\\x3c\\x84\\xaf\\xa0\\xa8\\\n\\x24\\xab\\xac\\xa2\\xaa\\xa6\\xae\\xa1\\xa9\\x05\\x16\\xd0\\xd6\\xd1\\xd5\\x03\\\n\\x52\\xfa\\x06\\x86\\x1a\\x46\\x70\\x63\\x8d\\x19\\x18\\x4c\\x4c\\xcd\\xcc\\x2d\\\n\\x60\\x7c\\x4b\\x2b\\x06\\x6b\\x1b\\x5b\\x3b\\x7b\\x07\\x28\\xdf\\xd1\\xc9\\xd9\\\n\\xc5\\xd5\\xcd\\xdd\\xc3\\x13\\xca\\xf7\\xf2\\xf6\\xf1\\xf5\\xf3\\x0f\\x08\\x0c\\\n\\x0a\\x86\\x0a\\x84\\x84\\x86\\xb9\\x85\\x7b\\x44\\x44\\x06\\xc3\\x8d\\x8c\\x8a\\\n\\x8e\\x89\\x8d\\x8b\\x47\\xf6\\x4a\\x82\\x05\\x03\\x1a\\x70\\x80\\xb3\\x00\\xc6\\\n\\xdd\\x13\\xd8\\x1b\\x74\\xd4\\x23\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\\n\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\\n\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\\n\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\\n\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\\n\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\\n\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\\n\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\\n\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\\n\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x31\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x41\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xae\\xc6\\xe3\\xc8\\xd0\\xdb\\xd3\\xd5\\xd7\\\n\\xd2\\xd4\\xd6\\xc4\\xcd\\xd8\\xaa\\xc1\\xdf\\xa8\\xc3\\xe6\\xd2\\xd7\\xdd\\xe8\\\n\\xec\\xf1\\xf3\\xf6\\xfa\\xfb\\xfd\\xfe\\xf2\\xf5\\xf9\\xe5\\xe9\\xee\\xc7\\xcd\\\n\\xd4\\x9f\\xba\\xdd\\xd4\\xd8\\xde\\xf7\\xf8\\xfb\\xff\\xff\\xff\\xf6\\xf9\\xfc\\\n\\xee\\xf3\\xfa\\xed\\xf3\\xfa\\xf4\\xf8\\xfc\\xf3\\xf6\\xf9\\xc4\\xca\\xd1\\x9c\\\n\\xb7\\xda\\xdc\\xe7\\xf5\\xe9\\xf0\\xf9\\xe8\\xef\\xf9\\xda\\xe5\\xf5\\xe5\\xee\\\n\\xf8\\xba\\xbf\\xc7\\xae\\xc5\\xe2\\xeb\\xf1\\xf9\\x54\\x85\\xc3\\xe6\\xef\\xf8\\\n\\x52\\x83\\xc1\\xd5\\xe3\\xf3\\xe3\\xec\\xf7\\xd8\\xdf\\xe7\\x94\\xab\\xc8\\xc7\\\n\\xcf\\xda\\x53\\x84\\xc3\\x53\\x84\\xc1\\xd8\\xe5\\xf4\\xe4\\xed\\xf7\\x52\\x83\\\n\\xc0\\xd4\\xe2\\xf3\\xf1\\xf5\\xfb\\xea\\xef\\xf6\\xa0\\xa9\\xb4\\xd1\\xd3\\xd5\\\n\\xec\\xf2\\xfa\\x56\\x88\\xc8\\xdb\\xe6\\xf5\\x52\\x81\\xc0\\x52\\x81\\xbe\\x55\\\n\\x86\\xc6\\xf9\\xfb\\xfd\\xa5\\xa7\\xa9\\xd0\\xd2\\xd4\\x55\\x87\\xc6\\x51\\x80\\\n\\xbe\\x51\\x80\\xbd\\xf1\\xf5\\xfa\\xa0\\xa2\\xa4\\xc2\\xcb\\xd6\\xef\\xf3\\xf8\\\n\\xf2\\xf6\\xfb\\xdf\\xe9\\xf6\\xdb\\xe4\\xef\\x94\\x9c\\xa7\\xa7\\xbe\\xdc\\xe1\\\n\\xe5\\xec\\xfe\\xfe\\xff\\xe1\\xeb\\xf7\\xdd\\xe8\\xf6\\x51\\x7f\\xbd\\xfa\\xfc\\\n\\xfe\\xbf\\xc9\\xd6\\x81\\x98\\xb6\\xbe\\xc3\\xca\\xed\\xf1\\xf7\\xdc\\xe4\\xef\\\n\\x92\\x9a\\xa3\\x94\\xb0\\xd2\\xb3\\xbb\\xc3\\xe8\\xee\\xf4\\xef\\xf4\\xfb\\xe0\\\n\\xea\\xf6\\xdb\\xe4\\xee\\x91\\x9c\\xa8\\x79\\x94\\xb7\\x8c\\xa7\\xca\\xa3\\xab\\\n\\xb3\\xc8\\xd1\\xdc\\xe1\\xe8\\xf1\\xd6\\xe0\\xed\\xb8\\xc3\\xd2\\x8c\\x94\\x9f\\\n\\x77\\x92\\xb5\\x83\\x9b\\xb8\\x8e\\x97\\xa2\\x94\\x96\\x98\\x90\\x92\\x95\\x88\\\n\\x91\\x9c\\x79\\x91\\xae\\x55\\x85\\x1a\\xb8\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\\n\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\\n\\x05\\x1d\\x48\\x00\\x00\\x00\\xca\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\x60\\xc0\\\n\\x0a\\x18\\x99\\x98\\x59\\x58\\xd9\\xe0\\x5c\\x76\\x0e\\x4e\\x2e\\x6e\\x6e\\x1e\\\n\\x5e\\x3e\\x7e\\x28\\x5f\\x40\\x50\\x48\\x58\\x44\\x54\\x4c\\x48\\x5c\\x42\\x12\\\n\\x2c\\xc0\\x21\\x28\\x24\\x25\\x2d\\x23\\x23\\x2b\\x27\\x24\\x2e\\x0f\\xe2\\x2b\\\n\\x70\\x0a\\x29\\x2a\\xc9\\xca\\x28\\xab\\xa8\\xaa\\x09\\xa9\\x6b\\x00\\x05\\x34\\\n\\xb9\\xc4\\x64\\xb4\\xb4\\x75\\x74\\xf5\\xf4\\xf4\\x0d\\x0c\\x8d\\x80\\x02\\xc6\\\n\\xdc\\x26\\x32\\x2a\\x2a\\xa6\\x66\\xe6\\x16\\x96\\x66\\x56\\xd6\\x40\\x01\\x1b\\\n\\x6e\\x45\\x39\\x15\\x5b\\x3d\\x13\\x3b\\x25\\x7b\\x13\\x07\\x47\\xa0\\x80\\x93\\\n\\xb3\\x8b\\x9a\\xad\\xb9\\x89\\xab\\x92\\xbd\\xa2\\x88\\x9b\\x3b\\x50\\xc0\\xc3\\\n\\xd3\\xcb\\xdb\\xc2\\xc4\\xc7\\xc7\\x57\\x5a\\xd6\\xcf\\x3f\\x00\\x64\\x4d\\x60\\\n\\x90\\x90\\xa2\\x8f\\x94\\x99\\xb4\\x8e\\x57\\x70\\x08\\xd8\\x1d\\xa1\\x61\\xe1\\\n\\x5e\\x11\\xde\\x91\\xa2\\x7e\\x51\\xd1\\x31\\x10\\xa7\\xc6\\xc6\\xc5\\x27\\xb8\\\n\\x88\\x24\\x26\\x25\\xa7\\xc0\\x7d\\x93\\x9a\\x96\\x9e\\x91\\x99\\x85\\xdd\\xe3\\\n\\x00\\x67\\x4d\\x1e\\x5b\\xd0\\x6a\\x88\\xcb\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\\n\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\\n\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\\n\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\\n\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x32\\x33\\\n\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7c\\\n\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\\n\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\x30\\x32\\x2d\\x32\\\n\\x30\\x54\\x31\\x38\\x3a\\x31\\x38\\x3a\\x35\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\\n\\x60\\xf5\\x7c\\xeb\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\\n\\x00\\x00\\x02\\x95\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\xc3\\\n\\x50\\x4c\\x54\\x45\\xfd\\xfd\\xfd\\xd8\\xd8\\xd8\\xd7\\xd7\\xd7\\xd6\\xd6\\xd6\\\n\\xd5\\xd5\\xd5\\xd3\\xd3\\xd3\\xd2\\xd2\\xd2\\xeb\\xeb\\xeb\\xf5\\xf5\\xf5\\xfc\\\n\\xfc\\xfc\\xf4\\xf4\\xf4\\xe8\\xe8\\xe8\\xce\\xce\\xce\\xf8\\xf8\\xf8\\xff\\xff\\\n\\xff\\xf2\\xf2\\xf2\\xf1\\xf1\\xf1\\xf7\\xf7\\xf7\\xc9\\xc9\\xc9\\xef\\xef\\xef\\\n\\xee\\xee\\xee\\xed\\xed\\xed\\xec\\xec\\xec\\xc0\\xc0\\xc0\\xe9\\xe9\\xe9\\xdd\\\n\\xdd\\xdd\\xb3\\xb3\\xb3\\x6f\\x6f\\x6f\\x6e\\x6e\\x6e\\x83\\x83\\x83\\xab\\xab\\\n\\xab\\xd4\\xd4\\xd4\\xf0\\xf0\\xf0\\xe7\\xe7\\xe7\\xe6\\xe6\\xe6\\xfa\\xfa\\xfa\\\n\\xa7\\xa7\\xa7\\xea\\xea\\xea\\x6d\\x6d\\x6d\\x82\\x82\\x82\\xe5\\xe5\\xe5\\xa2\\\n\\xa2\\xa2\\xd1\\xd1\\xd1\\x81\\x81\\x81\\xe4\\xe4\\xe4\\xe1\\xe1\\xe1\\x9d\\x9d\\\n\\x9d\\xfe\\xfe\\xfe\\xe3\\xe3\\xe3\\xe2\\xe2\\xe2\\xfb\\xfb\\xfb\\xc6\\xc6\\xc6\\\n\\x99\\x99\\x99\\xc4\\xc4\\xc4\\xb9\\xb9\\xb9\\xf3\\xf3\\xf3\\xaa\\xaa\\xaa\\x93\\\n\\x93\\x93\\x9c\\x9c\\x9c\\x97\\x97\\x97\\x96\\x96\\x96\\x92\\x92\\x92\\x90\\x90\\\n\\x90\\x8e\\x8e\\x8e\\x00\\x00\\x00\\xad\\x57\\x4a\\x28\\x00\\x00\\x00\\x01\\x74\\\n\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\\n\\x40\\xfe\\xd9\\x5c\\xd8\\x00\\x00\\x00\\xac\\x49\\x44\\x41\\x54\\x18\\xd3\\x6d\\\n\\x8f\\xc9\\x02\\x82\\x20\\x00\\x44\\xcd\\x16\\x40\\x0c\\xac\\xa4\\x28\\xb1\\xd4\\\n\\x16\\xa9\\x34\\xd3\\x6c\\xdf\\xfe\\xff\\xaf\\xc2\\xf6\\x83\\x73\\x7b\\xef\\x32\\\n\\x33\\x9a\\x56\\x9a\\x8a\\x5e\\xad\\xd5\\x1b\\x7f\\x0c\\x20\\x42\\x06\\x36\\xbf\\\n\\xdc\\x24\\x4d\\x6a\\xb5\\x08\\x6c\\x7f\\xb9\\x63\\x33\\xd6\\x05\\x04\\xf6\\x0a\\\n\\xd6\\xc1\\x9b\\x39\\x27\\xfd\\x81\\x12\\x55\\xd8\\x62\\xcc\\x71\\x84\\xcb\\xb1\\\n\\x61\\x0f\\x95\\x18\\x21\\x8f\\x01\\x21\\x84\\xeb\\x07\\x7c\\x3c\\x51\\xa2\\x8e\\\n\\x3a\\x60\\x2a\\xc4\\x2c\\x94\\x12\\x1b\\x73\\x25\\x16\\x14\\x72\\xee\\x86\\xe1\\\n\\x52\\x46\\x34\\x5e\\x29\\x61\\x46\\x09\\xf6\\x03\\x29\\xa3\\x75\\x9a\\x6d\\xf2\\\n\\xa2\\x66\\xeb\\x91\\x27\\xc6\\x49\\x9a\\xbf\\x86\\xec\\xba\\xc9\\x1e\\xfb\\x56\\\n\\x16\\xe7\\x9f\\xa9\\x07\\x33\\x80\\xb4\\xdf\\x3b\\xfe\\xce\\x9c\\xce\\x97\\xeb\\\n\\xed\\x5e\\x7e\\xfc\\x01\\xe7\\x30\\x10\\x35\\xbb\\x5b\\x96\\x17\\x00\\x00\\x00\\\n\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\\n\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\\n\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\\n\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x32\\x2d\\x31\\\n\\x31\\x2d\\x32\\x33\\x54\\x31\\x31\\x3a\\x33\\x37\\x3a\\x32\\x31\\x2b\\x30\\x31\\\n\\x3a\\x30\\x30\\x7c\\x11\\x27\\x43\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\\n\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x32\\x2d\\\n\\x30\\x32\\x2d\\x32\\x30\\x54\\x31\\x38\\x3a\\x31\\x38\\x3a\\x32\\x36\\x2b\\x30\\\n\\x31\\x3a\\x30\\x30\\x09\\xe0\\x40\\xc8\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\\n\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x03\\x0c\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x23\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\xba\\xba\\xba\\xb8\\xb8\\xb8\\xb7\\xb7\\xb7\\\n\\xb6\\xb6\\xb6\\xb4\\xb4\\xb4\\xb3\\xb3\\xb3\\xbb\\xbb\\xbb\\xd0\\xd0\\xd0\\xe8\\\n\\xe8\\xe8\\xf3\\xf3\\xf3\\xfd\\xfd\\xfd\\xfc\\xfc\\xfc\\xed\\xed\\xed\\xe0\\xe0\\\n\\xe0\\xc2\\xc2\\xc2\\xad\\xad\\xad\\xe1\\xe1\\xe1\\xfe\\xfe\\xfe\\xff\\xff\\xff\\\n\\xfb\\xfb\\xfb\\xcf\\xcf\\xcf\\xa9\\xa9\\xa9\\xb9\\xb9\\xb9\\xf8\\xf8\\xf8\\xea\\\n\\xea\\xea\\xa7\\xa7\\xa7\\xf7\\xf7\\xf7\\xe7\\xe7\\xe7\\xef\\xef\\xef\\xf6\\xf6\\\n\\xf6\\xfa\\xfa\\xfa\\xf0\\xf0\\xf0\\xde\\xde\\xde\\xc3\\xc3\\xc3\\xe6\\xe6\\xe6\\\n\\xa5\\xa5\\xa5\\xb5\\xb5\\xb5\\xeb\\xeb\\xeb\\xd6\\xd6\\xd6\\xd5\\xd5\\xd5\\xd1\\\n\\xd1\\xd1\\xbc\\xbc\\xbc\\xc0\\xc0\\xc0\\xe5\\xe5\\xe5\\xa3\\xa3\\xa3\\xf5\\xf5\\\n\\xf5\\xee\\xee\\xee\\xe2\\xe2\\xe2\\xcd\\xcd\\xcd\\xe3\\xe3\\xe3\\xa0\\xa0\\xa0\\\n\\xb2\\xb2\\xb2\\xf4\\xf4\\xf4\\xdd\\xdd\\xdd\\xc9\\xc9\\xc9\\xbd\\xbd\\xbd\\xbf\\\n\\xbf\\xbf\\x9e\\x9e\\x9e\\xb0\\xb0\\xb0\\xd9\\xd9\\xd9\\xdb\\xdb\\xdb\\xc4\\xc4\\\n\\xc4\\x6e\\x94\\x58\\x66\\x8e\\x4f\\x59\\x84\\x40\\xae\\xae\\xae\\xf2\\xf2\\xf2\\\n\\xd8\\xd8\\xd8\\xdc\\xdc\\xdc\\x81\\xab\\x61\\xb4\\xd4\\x95\\xd0\\xe6\\xba\\x8f\\\n\\xbb\\x6a\\x57\\x8f\\x2d\\x37\\x6b\\x19\\xac\\xac\\xac\\xd4\\xd4\\xd4\\xd2\\xd2\\\n\\xd2\\x5e\\x89\\x45\\xb1\\xd3\\x90\\xb1\\xd6\\x92\\x8c\\xbc\\x65\\x8f\\xbc\\x67\\\n\\x4c\\x7b\\x31\\xb6\\xd4\\x9c\\xb2\\xd2\\x95\\xce\\xce\\xce\\x38\\x6d\\x1b\\x8b\\\n\\xba\\x62\\x87\\xba\\x60\\x87\\xb9\\x60\\xa1\\xa1\\xa1\\x9f\\x9f\\x9f\\xab\\xab\\\n\\xab\\x53\\x8c\\x28\\x8d\\xba\\x64\\x6a\\x12\\xd2\\xcb\\x00\\x00\\x00\\x01\\x74\\\n\\x52\\x4e\\x53\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\\n\\x00\\x88\\x05\\x1d\\x48\\x00\\x00\\x00\\xc3\\x49\\x44\\x41\\x54\\x18\\xd3\\x63\\\n\\x60\\xc0\\x0a\\x18\\x99\\x98\\x59\\x58\\xd9\\xe0\\x5c\\x76\\x0e\\x4e\\x2e\\x6e\\\n\\x1e\\x5e\\x3e\\x7e\\x01\\xa8\\xb4\\xa0\\x90\\x30\\x18\\x88\\x88\\x8a\\x81\\x05\\\n\\xc4\\x25\\x60\\x02\\x92\\x52\\x60\\x01\\x66\\x69\\x19\\x59\\x39\\x11\\x79\\x05\\\n\\x45\\x25\\x65\\x15\\xb0\\x80\\xaa\\x9c\\x9a\\xa2\\xba\\x86\\xa6\\x92\\x96\\xb6\\\n\\x8e\\x2e\\x58\\x80\\x55\\x4f\\x5f\\xd9\\x40\\x59\\xd0\\x90\\x9f\\xdf\\xc8\\x18\\\n\\x2c\\x60\\x62\\x2a\\x29\\x68\\x66\\xa4\\x68\\x6e\\x61\\x69\\x60\\x05\\x16\\xb0\\\n\\xe6\\x92\\x31\\xb3\\xe1\\xb3\\xb5\\x63\\xb2\\x77\\x70\\x04\\x0b\\x38\\x39\\x1b\\\n\\xb8\\x68\\xb8\\xba\\x68\\xbb\\xb9\\x7b\\x78\\x7a\\x79\\x03\\x05\\x7c\\x14\\x14\\\n\\x7d\\xfd\\x6c\\xd5\\xfd\\x03\\x02\\x85\\x83\\x82\\x41\\x02\\x62\\x8a\\x5c\\xb6\\\n\\x40\\x81\\x90\\x50\\xa0\\x53\\xc2\\x40\\x02\\x0c\\x2a\\xe1\\xbc\\xa6\\x7a\\xa6\\\n\\x11\\x91\\x51\\xc2\\xd1\\x60\\x15\\x0c\\x0c\\x31\\xb1\\x31\\x71\\x52\\xde\\xf1\\\n\\x09\\x61\\x09\\xf1\\xde\\x48\\x5e\\xf6\\x06\\x01\\x06\\x00\\xaf\\x3d\\x1d\\xc4\\\n\\x82\\x94\\xa2\\xb1\\x00\\x00\\x00\\x1d\\x74\\x45\\x58\\x74\\x63\\x6f\\x6d\\x6d\\\n\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\x68\\\n\\x20\\x54\\x68\\x65\\x20\\x47\\x49\\x4d\\x50\\x39\\x84\\x39\\x25\\x00\\x00\\x00\\\n\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\\n\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\\n\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\\n\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\\n\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\\n\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\\n\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x02\\x09\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x00\\x90\\\n\\x50\\x4c\\x54\\x45\\x00\\x00\\x00\\x7b\\xa7\\xdc\\x66\\x8b\\xc0\\x7a\\xa4\\xdb\\\n\\xff\\xff\\xff\\x63\\x87\\xbd\\x79\\xa3\\xd9\\xf9\\xfb\\xfc\\xf8\\xfb\\xfc\\x33\\\n\\x34\\x36\\x60\\x85\\xba\\x79\\xa2\\xd8\\xfa\\xfd\\xfd\\xfa\\xfc\\xfc\\x5e\\x81\\\n\\xb7\\x76\\xa0\\xd5\\xfc\\xfd\\xfd\\x5c\\x7e\\xb5\\x75\\x9e\\xd4\\xfc\\xfe\\xfe\\\n\\xfb\\xfd\\xfd\\x5a\\x7c\\xb2\\x73\\x9c\\xd1\\x58\\x7a\\xb0\\x6f\\x97\\xcc\\xfc\\\n\\xff\\xff\\xfd\\xff\\xff\\x54\\x75\\xac\\x6e\\x94\\xca\\xfe\\xff\\xff\\xfa\\xfe\\\n\\xfe\\xf9\\xfc\\xfc\\x53\\x73\\xaa\\x6c\\x92\\xc8\\xfc\\xfc\\xfc\\x51\\x72\\xa9\\\n\\x51\\x71\\xa9\\x68\\x8e\\xc3\\x64\\x88\\xbe\\x61\\x85\\xbb\\x5f\\x83\\xb9\\x5c\\\n\\x7e\\xb4\\x58\\x7b\\xb1\\x57\\x79\\xae\\x56\\x76\\xad\\x54\\x75\\xab\\x53\\x73\\\n\\xa9\\x00\\x00\\x00\\x67\\x14\\x96\\xea\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\\n\\x00\\x40\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\\n\\x1d\\x48\\x00\\x00\\x00\\x7c\\x49\\x44\\x41\\x54\\x18\\xd3\\x6d\\x8f\\xd7\\x12\\\n\\x82\\x40\\x10\\x04\\x5b\\x1c\\xc5\\x2c\\x7a\\x62\\x16\\x15\\xcf\\x1c\\xfe\\xff\\\n\\xf3\\xc4\\xbb\\x12\\x30\\xf4\\xc3\\xd6\\x4e\\xd7\\x3c\\xec\\xc2\\x37\\x95\\x0f\\\n\\x02\\xa8\\xaa\\x4c\\x0d\\xea\\x0a\\x1b\\x4d\\x4f\\x26\\x5a\\xd0\\x56\\xa7\\xeb\\\n\\x76\\x37\\x7a\\xd0\\x57\\xe4\\xdb\\x4e\\x0c\\x7c\\xa3\\x10\\xa5\\x86\\xcb\\xaf\\\n\\xc6\\x50\\x66\\x14\\xbd\\xb3\\x62\\x18\\xcb\\x98\\x3c\\x6b\\xf2\\x47\\x4c\\x35\\\n\\x9b\\x17\\x62\\x01\\x4b\\x69\\xe5\\x45\\x92\\xac\\xb5\\x81\\x6d\\xe6\\xd3\\xfc\\\n\\xf4\\x1d\\xd8\\x7d\\x70\\x38\\x9e\\xce\\xf1\\xe5\\x7a\\xbb\\x3f\\xac\\xfd\\x79\\\n\\x9e\\x27\\x2c\\xb5\\x08\\x41\\xc5\\x0c\\x20\\xe7\\x00\\x00\\x00\\x25\\x74\\x45\\\n\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\\n\\x31\\x32\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x35\\x35\\x3a\\x31\\\n\\x34\\x2b\\x30\\x31\\x3a\\x30\\x30\\xcc\\x67\\xd9\\x34\\x00\\x00\\x00\\x25\\x74\\\n\\x45\\x58\\x74\\x64\\x61\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\\n\\x30\\x31\\x32\\x2d\\x31\\x31\\x2d\\x31\\x32\\x54\\x31\\x36\\x3a\\x35\\x35\\x3a\\\n\\x31\\x34\\x2b\\x30\\x31\\x3a\\x30\\x30\\xbd\\x3a\\x61\\x88\\x00\\x00\\x00\\x00\\\n\\x49\\x45\\x4e\\x44\\xae\\x42\\x60\\x82\\\n\\x00\\x00\\x0a\\x13\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\xc9\\x00\\x00\\x00\\x15\\x08\\x02\\x00\\x00\\x00\\x63\\x58\\x5d\\x06\\\n\\x00\\x00\\x00\\x01\\x73\\x52\\x47\\x42\\x00\\xae\\xce\\x1c\\xe9\\x00\\x00\\x00\\\n\\x09\\x70\\x48\\x59\\x73\\x00\\x00\\x0e\\x9c\\x00\\x00\\x0e\\x75\\x01\\x88\\x28\\\n\\x1b\\x78\\x00\\x00\\x00\\x07\\x74\\x49\\x4d\\x45\\x07\\xe0\\x02\\x10\\x09\\x33\\\n\\x16\\xff\\x27\\x5e\\x33\\x00\\x00\\x00\\x19\\x74\\x45\\x58\\x74\\x43\\x6f\\x6d\\\n\\x6d\\x65\\x6e\\x74\\x00\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x77\\x69\\x74\\\n\\x68\\x20\\x47\\x49\\x4d\\x50\\x57\\x81\\x0e\\x17\\x00\\x00\\x09\\x80\\x49\\x44\\\n\\x41\\x54\\x68\\xde\\xed\\x5a\\x79\\x58\\x53\\x57\\x16\\x3f\\xd9\\xd8\\x12\\x12\\\n\\x04\\x84\\x04\\x50\\x16\\x57\\xc0\\x04\\x51\\xd9\\xac\\xca\\x22\\x0a\\x28\\x5b\\\n\\x10\\xd1\\xb1\\xd5\\x2a\\x14\\xf8\\xdc\\x5a\\xb7\\x2a\\x96\\x45\\x04\\xc4\\xba\\\n\\x4c\\x55\\x8a\\x20\\x55\\xc7\\x69\\x95\\xa5\\xa5\\x82\\x6c\\xd5\\xaa\\x30\\xb4\\\n\\xee\\x2c\\x95\\x76\\x04\\xa5\\x7e\\xca\\x2a\\xab\\x05\\x09\\x81\\xac\\xef\\x65\\\n\\xfe\\x78\\xfa\\xa4\\x40\\x62\\x0c\\xd8\\x99\\xf9\\xbe\\xfc\\xfe\\xc8\\xf7\\xde\\\n\\xb9\\xe7\\xdd\\x73\\xce\\xef\\x9e\\x77\\xef\\xb9\\xf7\\x85\\xf0\\x47\\x67\\x0b\\\n\\xa8\\xa1\\xc6\\x3b\\x00\\x51\\x4d\\x81\\x1a\\xea\\xdc\\x52\\x43\\x9d\\x5b\\x6a\\\n\\xa8\\x01\\x00\\x00\\xe4\\xa1\\x37\\x15\\x15\\x55\\x6f\\x7c\\xc0\\xdb\\x37\\xb0\\\n\\xa7\\xab\\x55\\x81\\x82\\x48\\x24\\x22\\x10\\x89\\x1a\\x14\\xca\\x7f\\x25\\x9e\\\n\\x5f\\xee\\xd7\\xd8\\xda\\x58\\x6b\\x6a\\x6a\\x8e\\xa5\\x93\\x71\\xe1\\x41\\x19\\\n\\x74\\x77\\x3f\\xff\\x2c\\x66\\x5f\\xf4\\x67\\x7b\\x2c\\xcc\\x27\\xff\\xaf\\x91\\\n\\x33\\x76\\x26\\xc9\\xc3\\xee\\x7d\\xfc\\xb8\\x0a\\xb4\\x07\\xf9\\x7d\\x0a\\x5a\\\n\\x2b\\xab\\xaa\\x63\\xf7\\x25\\x36\\x34\\x34\\x0e\\x0a\\x04\\x8e\\x0e\\x73\\x0f\\\n\\x1e\\x48\\x98\\x3e\\x6d\\xea\\x5f\\x99\\x58\\x6d\\x6d\\xed\\x4b\\xbc\\xfd\\x4e\\\n\\xa5\\xa5\\xac\\x5c\\xc1\\x6d\\x68\\x68\\xec\\xe8\\xec\\x72\\x71\\x76\\x54\\xad\\\n\\x2b\\x95\\x79\\xd8\\xb4\\x75\\x7b\\x69\\x59\\x39\\x8a\\x20\\x34\\x1a\\xd5\\xce\\\n\\x8e\\x13\\x19\\x1e\\xa6\\xc0\\x07\\x12\\x99\\x94\\x77\\xa9\\x70\\xf7\\xae\\xed\\\n\\xf2\\x14\\xc6\\x18\\x85\\x3c\\x72\\xc6\\x57\\xf9\\x2d\\xd6\\x44\\x99\\x7c\\x28\\\n\\xe8\\xe8\\xe6\\xad\\xdb\\xef\\xaf\\x0d\\xfd\\x74\\xe7\\xb6\\xfa\\xba\\x9a\\xc7\\\n\\x0f\\x7f\\x9d\\x6d\\xc7\\xf1\\x5e\\x1e\\xf0\\xf4\\x69\\xc3\\x5f\\x99\\x5b\\x26\\\n\\x26\\xac\\xc2\\xfc\\xdc\\x00\\x7f\\x5f\\x00\\x28\\x2a\\xb9\\x7c\\xa9\\xb0\\x68\\\n\\x2c\\xbd\\xa9\\xc6\\x83\\x58\\x24\\xda\\xf3\\xe9\\x8e\\x47\\xb5\\xf7\\xf3\\xbe\\\n\\xcf\\xb1\\xb2\\xb4\\xe0\\x06\\xaf\\xba\\x98\\x5f\\x20\\x4f\\x59\\x97\\xa6\\x0b\\\n\\x00\\x5a\\xda\\x5a\\xf2\\x14\\xc6\\x1e\\xc5\\xa8\\xe4\\x8c\\xaf\\x32\\x00\\xf0\\\n\\xf9\\xfc\\xb3\\xe7\\xbe\\x69\\x69\\x6d\\x55\\x34\\x6f\\xa9\\x3c\\x0c\\xdb\\x76\\\n\\xee\\x89\\x8f\\x8b\\x5e\\xec\\xe1\\x06\\x00\\x5a\\x5a\\x5a\\xb1\\xd1\\x51\\x0d\\\n\\x8d\\x4d\\x89\\xc9\\x87\\xce\\x9d\\x39\\x55\\x5c\\x72\\x59\\x2a\\x95\\x06\\x06\\\n\\xf8\\x61\\xca\\xe9\\x19\\xa7\\x5d\\x17\\x2d\\xb4\\xb1\\x9e\\x29\\x91\\x48\\x53\\\n\\xd3\\xd2\\x4b\\xcb\\xca\\xa9\\x54\\x6a\\x64\\x78\\x98\\x87\\xbb\\x6b\\x43\\x63\\\n\\xd3\\x37\\xe7\\x33\\x83\\xb8\\x01\\x27\\x52\\x4e\\x32\\x18\\x0c\\x37\\xd7\\x85\\\n\\x54\\x2a\\xd5\\xc3\\xdd\\x15\\x7b\\x93\\xce\\x67\\x66\\x6f\\xdf\\xb6\\x15\\x5b\\\n\\x6d\\xcf\\x67\\x66\\xdb\\xcf\\xb6\\xa3\\x52\\xa9\\x43\\xf5\\xa3\\x76\\xef\\xbc\\\n\\x5e\\x5a\\x66\\x6b\\x63\\x7d\\xef\\xc1\\x83\\xea\\x5f\\xee\\x8b\\xc5\\xe2\\xac\\\n\\xec\\xef\\x6c\\x6d\\xac\\xed\\xec\\xd8\\x23\\x6d\\xa9\\x16\\x29\\x81\\x40\\x50\\\n\\x9c\\x5b\\x1a\\x9a\\x9a\\x32\\x14\\x25\\x91\\x48\\x96\\x16\\xe6\\x71\\x31\\x7b\\\n\\x69\\x34\\x5a\\xd4\\xde\\x58\\xdf\\x65\\xde\\x9a\\x9a\\x9a\\x23\\x7d\\xa0\\x50\\\n\\xc8\\x44\\x22\\x91\\x42\\xa6\\x00\\xc0\\xc8\\xd6\\x1b\\x37\\x6f\\x29\\x1f\\x45\\\n\\x43\\x63\\xd3\\x3f\\xbf\\x3e\\xbf\\x32\\x38\\x28\\x3d\\xe3\\x0c\\x9f\\xcf\\xf7\\\n\\x5a\\xe2\\xe9\\xe1\\xee\\x9a\\x92\\x9a\\xde\\xd4\\xdc\\xec\\xe8\\x30\\x6f\\xcb\\\n\\xa6\\xc8\\x9e\\x9e\\x5e\\x8c\\x1c\\x0d\\x3d\\xc6\\x9d\\xbb\\x15\\x99\\xd9\\x39\\\n\\x03\\x03\\x83\\xa6\\x26\\x26\\x49\\x09\\x71\\x00\\x30\\x4c\\xd2\\xdd\\xfd\\x1c\\\n\\x53\\xee\\x15\\x89\\x8e\\x7f\\x79\\x32\\xe2\\xa3\\xd0\\x8c\\xd3\\x67\\x5b\\x9a\\\n\\x5b\\xd9\\x6c\\xdb\\x6d\\x1f\\x6f\\xd6\\xd2\\xd2\\x02\\x80\\xce\\xce\\xae\\xf4\\\n\\x8c\\xd3\\x4f\\x1b\\x1a\\x99\\x4c\\x63\\x3e\\x7f\\x40\\x28\\x14\\xba\\x2d\\x5a\\\n\\x30\\xfe\\xb5\\x7c\\x6d\\xdd\\xc3\\x96\\x96\\xd6\\x20\\xae\\xff\\x50\\xe1\\xea\\\n\\x90\\xe0\\xf2\\x9f\\x7e\\xc6\\x92\\x7a\\x6f\\xcc\\x3e\\x14\\x45\\xb1\\x0a\\x23\\\n\\x29\\xf9\\xb0\\xd1\\x44\\x43\\x00\\xd8\\xb5\\x7b\\x6f\\x6b\\x6b\\xdb\\xa9\\xb4\\\n\\x94\\xf0\\xb0\\x0d\\xeb\\xc3\\x22\\xeb\\x7f\\x7f\\x2c\\x16\\x8b\\x53\\x52\\xd3\\\n\\xa3\\x63\\xe3\\x5d\\x9c\\x9d\\xec\\xec\\xd8\\x5d\\xdd\\xcf\\x8f\\x7e\\x71\\x02\\\n\\xeb\\xed\\x52\\x61\\x71\\x6a\\x5a\\xc6\\xed\\xdb\\x77\\xb1\\x61\\x88\\x8b\\x4f\\\n\\xa4\\xd1\\x68\\xc3\\xf4\\xc5\\x12\\x71\\x4a\\x6a\\x3a\\x82\\x22\\x0d\\x8d\\x4d\\\n\\x4d\\x4d\\xcd\\xfd\\xfd\\xfd\\x0f\\x6a\\xeb\\x7a\\x7a\\x7b\\x47\\xb5\\xa5\\x5a\\\n\\x62\\xbd\\xb9\\xc8\\x20\\x93\\x10\\x04\\xc1\\x6f\\x23\\xc3\\x43\\xfb\\xf9\\xfd\\\n\\xf7\\x6b\\x7e\\x93\\xe7\\x03\\x99\\x44\\x22\\x12\\x89\\xa3\\xb6\\xbe\\x55\\x14\\\n\\x42\\xa1\\x30\\x35\\x2d\\x23\\x3d\\xe3\\x4c\\xa0\\xbf\\xef\\x7c\\x17\\xa7\\xed\\\n\\xbb\\xf6\\x84\\x45\\x6c\\x74\\x71\\x76\\x0c\\x5e\\xc1\\xcd\\x38\\x7d\\xf6\\x42\\\n\\x56\\x0e\\x4e\\xce\\xb3\\xb6\\xb6\\x88\\x8d\\x5b\\x02\\xfd\\xfd\\x22\\xc3\\xc3\\\n\\x9c\\x1c\\xe7\\x01\\xc0\\x48\\x09\\xae\\x4c\\x20\\x10\\xbe\\x3a\\xfd\\x8f\\xb8\\\n\\xf8\\xc4\\x45\\x0b\\xde\\xe3\\x72\\xfd\\xb3\\x73\\x72\\x8f\\xa7\\x9c\\x04\\x00\\\n\\xa9\\x54\\xea\\x1f\\x14\\xc2\\xe1\\xb0\\x4f\\xa6\\x1c\\x9b\\x6b\\x3f\\xbb\\xb8\\\n\\xe4\\xf2\\x91\\x43\\x07\\xa6\\x4c\\xb1\\x1a\\xff\\x79\\xab\\xb5\\xf5\\xd9\\x84\\\n\\x09\\x7a\\x58\\x3a\\xe3\\x60\\xb1\\x98\\x3c\\x5e\\x3f\\x82\\x20\\x81\\x01\\x7e\\\n\\xd1\\x71\\xfb\\xcb\\x7f\\xba\\xe1\\xe1\\xee\\x5a\\x50\\x58\\x1c\\x1c\\x14\\x68\\\n\\x68\\x68\\xf8\\xac\\xad\\xad\\xb0\\xb8\\xe4\\x51\\x6d\\x8d\\xa6\\x86\\x86\\x99\\\n\\xa9\\xe9\\x7b\\xf3\\x9d\\xaf\\xfc\\x78\\x2d\\x74\\xfd\\x3a\\x00\\x38\\x76\\xf4\\\n\\x10\\xe6\\xe5\\x1f\\x3d\\x3d\\xb1\\x71\\xfb\\xdb\\xdb\\x3b\\x58\\x2c\\xe6\\xd5\\\n\\x6b\\xa5\\x9b\\x37\\x46\\x5c\\xcc\\xbf\\xe4\\xe6\\xba\\xf0\\xe6\\xad\\xdb\\xec\\\n\\x59\\xb6\\x16\\xe6\\x93\\xfb\\xfb\\xf9\\x43\\xf5\\x85\\x42\\x21\\x00\\x68\\x50\\\n\\x34\\xd6\\x7d\\xb0\\xe6\\x41\\x6d\\x9d\\x09\\x8b\\xb5\\xed\\xe3\\xcd\\x18\\x77\\\n\\x23\\x6d\\xcd\\x98\\x3e\\xed\\xad\\x66\\x29\\x65\\x12\\x0b\\x00\\x08\\x40\\x40\\\n\\x65\\x28\\x7e\\x4b\\xa5\\x52\\x0d\\x0c\\x0c\\x06\\x06\\x06\\x14\\xfb\\x30\\x6a\\\n\\xeb\\x27\\x5b\\x37\\x29\\x1f\\x05\\x93\\x69\\x0c\\x00\\x09\\xf1\\x31\\x06\\xfa\\\n\\xfa\\x00\\x70\\x31\\xaf\\x20\\xe2\\xa3\\x50\\x3f\\xdf\\x65\\x00\\x50\\x59\\x59\\\n\\x5d\\x5f\\xff\\x78\\xd5\\xca\\x15\\x18\\x39\\x2d\\xcd\\xad\\x42\\x81\\x90\\xc5\\\n\\x62\\xda\\xda\\x58\\xbf\\xdc\\x52\\x74\\x3d\\x1f\\x26\\xc1\\x3a\\xd1\\xa0\\x68\\\n\\xe8\\xea\\xd3\\x88\\x44\\x62\\x5c\\x74\\xd4\\xb4\\x69\\x53\\x01\\xe0\\xd9\\xb3\\\n\\xb6\\xfb\\x35\\xbf\\x02\\xc0\\xa3\\xfa\\xdf\\x79\\x3c\\x5e\\x50\\xa0\\x3f\\x00\\\n\\xac\\x0a\\x09\\x4e\\x4c\\x3e\\xd4\\xd8\\xd8\\x84\\x3d\\x35\\xce\\xb9\\xa5\\xad\\\n\\xad\\xd5\\xdf\\xcf\\x47\\x10\\x84\\x44\\x22\\xe1\\xc2\\x9e\\x9e\\x1e\\x03\\x7d\\\n\\x7d\\x12\\x89\\x44\\x22\\x91\\xd6\\xac\\x0e\\xc9\\xcc\\xfe\\xd6\\xc3\\xdd\\xf5\\\n\\xdb\\xdc\\x8b\\xe9\\xa9\\xc7\\x01\\xe0\\x41\\x6d\\x9d\\x44\\x22\\xf5\\x0b\\x08\\\n\\x46\\x51\\x54\\x06\\x32\\x99\\x4c\\x36\\x61\\x82\\x9e\\x8e\\x8e\\x36\\x00\\x18\\\n\\x1a\\x1a\\xe2\\x11\\x2e\\x59\\xb2\\x38\\xbf\\xa0\\xc8\\xcd\\x75\\xe1\\xa4\\x49\\\n\\xa6\\xab\\x57\\xad\\x74\\xf7\\xf4\\x3e\\xf2\\xf9\\x81\\x4b\\x05\\x45\\xeb\\x3f\\\n\\x5c\\x0b\\x00\\xc3\\xf4\\xb1\\x4d\\x0d\\x91\\x38\\x3c\\x09\\x46\\xb5\\xf5\\x56\\\n\\x8b\\x20\\x9e\\x58\\x8a\\x17\\x44\\x00\\x40\\x50\\x04\\x45\\x5f\\xeb\\x88\\x25\\\n\\x92\\xde\\x9e\\x5e\\x4b\\x0b\\x73\\x79\\x3e\\xa0\\x32\\x19\\x8a\\xa2\\xca\\x78\\\n\\xa8\\x58\\x87\\x4a\\xa5\\xfe\\x79\\x44\\xb4\\x71\\x9f\\xb5\\x75\\xb4\\xc5\\x22\\\n\\x11\\x4e\\xce\\xec\\xd9\\x9c\\x75\\x6b\\xd7\\x78\\x2e\\x5d\\xee\\xe2\\xe2\\x1c\\\n\\x1f\\xbb\\x97\\xc3\\x61\\x8f\\x94\\x0c\\x65\\x52\\x47\\x47\\x07\\xef\\x96\\x46\\\n\\xa3\\x61\\x17\\x66\\xa6\\xa6\\x02\\x81\\xa0\\xb0\\xa8\\xc4\\xc7\\xdb\\xab\\xac\\\n\\xbc\\x9c\\x4c\\x22\\xcf\\xb2\\xb5\\x79\\xc3\\x3e\\x51\\x35\\xd8\\x71\\x38\\x28\\\n\\x82\\xfc\\x7c\\xe3\\x96\\xbb\\xdb\\x22\\x5c\\x58\\x72\\xf9\\x47\\xac\\xfc\\x02\\\n\\x80\\xd0\\x0d\\x1f\\x2e\\x70\\xf5\\xbc\\x57\\x51\\x69\\x66\\x66\\x3a\\x75\\xea\\\n\\x14\\x00\\xa0\\x51\\x69\\x54\\x1d\\x9d\\x1f\\x8a\\xf2\\xc8\\xe4\\xd7\\x3e\\x0c\\\n\\x5d\\x4d\\x30\\xac\\xf9\\x5b\\xc8\\xd1\\xbf\\x9f\\xe8\\xe9\\xe9\\x5d\\xb9\\x82\\\n\\x6b\\x61\\x3e\\x99\\x3d\\xcb\\xb6\\xf8\\x87\\x2b\\x95\\x55\\xd5\\x47\\x0f\\x1f\\\n\\x1c\\xe9\\x06\\xb6\\xec\\x62\\x43\\x4b\\x22\\x91\\x24\\x12\\xc9\\x4b\\x46\\x46\\\n\\xb3\\xa5\\xc2\\x52\\xf8\\xc6\\xc4\\x02\\x00\\x04\\x41\\x71\\xbb\\x00\\x90\\x9f\\\n\\x5f\\x60\\x63\\x63\\x6d\\x65\\x65\\xd9\\xde\\xd1\\x39\\xaa\\x0f\\x52\\xa9\\x54\\\n\\x22\\x95\\xc8\\xf3\\x50\\xf9\\x28\\x64\\x28\\x8a\\xff\\x02\\x80\\x54\\xfa\\xda\\\n\\x07\\xa9\\x44\\x42\\x20\\x10\\x86\\x92\\x13\\x1b\\x1d\\x15\\x1e\\xb6\\x21\\xed\\\n\\xd4\\x57\\xcb\\x03\\x82\\xab\\xee\\xde\\x30\\x36\\x36\\x1a\\x26\\x31\\x34\\x34\\\n\\xc0\\x95\\x51\\x14\\x45\\x5f\\x05\\x8e\\x77\\xab\\xa7\\xc7\\xd8\\xfe\\xc9\\xd6\\\n\\x0b\\x59\\x39\\x17\\xb2\\x72\\xcc\\x27\\x4f\\xca\\xbf\\x98\\x33\\xf2\\xb4\\x62\\\n\\x7c\\xea\\x2d\\x3d\\x3d\\x46\\x64\\x44\\xd8\\x8e\\x5d\\x7b\\x9e\\x3c\\x79\\x8a\\\n\\x49\\x2e\\x5f\\xb9\\x9a\\x97\\x57\\x80\\xef\\xae\\x2d\\x2d\\xcc\\x9d\\x1c\\x1d\\\n\\x76\\xec\\x8a\\xda\\xb2\\x29\\x12\\x93\\x38\\x38\\xcc\\xa5\\x52\\x75\\x62\\xf6\\\n\\x25\\x48\\x24\\x52\\x7c\\xe4\\x44\\x22\\x11\\xf6\\xea\\xe3\\x3d\\x2f\\x76\\x77\\\n\\x6b\\x6e\\x69\\xad\\xa8\\xac\\x5c\\xf0\\xde\\x7c\\x00\\x58\\xfb\\xc1\\x9a\\xc3\\\n\\x47\\x8f\\x79\\x2d\\xf5\\xa4\\x50\\xc8\\xd8\\x59\\xda\\x50\\x7d\\x29\\x82\\x00\\\n\\x80\\x44\\x2a\\x01\\x00\\xa3\\x89\\x86\\x35\\x35\\xbf\\x29\\xb0\\xa5\\xe4\\x1e\\\n\\x65\\xd4\\x6b\\xc5\\xc7\\x7b\\x98\\x57\\x32\\x99\\xec\\xca\\xd5\\x6b\\x09\\x07\\\n\\x3e\\xff\\xe2\\xc8\\x41\\xb9\\xf1\\x8a\\xc5\\x00\\x20\\x12\\x8a\\xe4\\x79\\xa8\\\n\\x7c\\x14\\x02\\x81\\x10\\x00\\x70\\x81\\x50\\x24\\x42\\x5e\\xe5\\x99\\x40\\x28\\\n\\x44\\x10\\x14\\x27\\x07\\x7b\\x81\\x99\\x4c\\xe3\\xfd\\xfb\\x62\\x8c\\x8d\\x8d\\\n\\x3a\\x3a\\x3a\\x47\\x4a\\x86\\x32\\x29\\x14\\x0a\\xd1\\x57\\x5d\\x89\\x44\\x62\\\n\\xdc\\x68\\x56\\xce\\x77\\x91\\xe1\\x61\\x67\\x32\\xd2\\x92\\x12\\xe3\\x2d\\x2d\\\n\\xcc\\xdf\\xe1\\xb9\\x7c\\x6c\\x74\\x14\\x37\\xd0\\xdf\\xcd\\xd3\\xc7\\x9f\\x1b\\\n\\xb2\\xd4\\xc7\\x3f\\x29\\xf9\\x50\\x5e\\x6e\\x96\\xa5\\xa5\\x05\\xae\\xb0\\x82\\\n\\x1b\\xa0\\xa1\\xa1\\x31\\x77\\x8e\\xfd\\xcb\\xfd\\x14\\x85\\x92\\x9d\\xf9\\xf5\\\n\\x9d\\x3b\\xf7\\xac\\x67\\xd9\\xbb\\x7a\\x78\\x71\\xec\\x9d\\xae\\x97\\xfe\\x6b\\\n\\x70\\x70\\x10\\x00\\xa4\\xaf\\xb8\\x03\\x00\\x32\\x99\\xec\\xe3\\xb5\\xc4\\xda\\\n\\x7a\\x26\\x56\\xf0\\xfa\\xfb\\x2e\\xeb\\xe8\\xe8\\xe4\\x06\\xbe\\xdc\\x34\\x0c\\\n\\xd3\\xc7\\x6e\\xb1\\x5f\\x7f\\xdf\\xe5\\x95\\x55\\xd5\\x73\\x1c\\xe6\\x27\\x25\\\n\\x1f\\x1e\\xd5\\x96\\xf2\\x5b\\x60\\xe5\\x13\\x0b\\x00\\x84\\x02\\x61\\x6a\\x5a\\\n\\x86\\xf3\\x02\\xf7\\x99\\xb6\\xf6\\xa7\\x32\\xce\\x66\\x9f\\x3f\\xc7\\xe1\\xb0\\\n\\x15\\xc7\\x3b\\x38\\x38\\x28\\xcf\\x43\\xe5\\xa3\\xe0\\x0f\\xf0\\x87\\x4e\\xfc\\\n\\x58\\x89\\x82\\x5d\\xf3\\xfa\\x78\\x08\\x8a\\xe0\\xb6\\xae\\x95\\x96\\x59\\xb3\\\n\\xe7\\x78\\x2f\\x0f\\x74\\x70\\x59\\x64\\xc7\\x61\\xb3\\xd9\\xb6\\x23\\x25\\xb8\\\n\\xb2\\x40\\x20\\x40\\x51\\x14\\xcf\\x2d\\x1e\\xaf\\x1f\\xbf\\xe6\\xcc\\xb2\\x0d\\\n\\x0d\\xdf\\x38\\xc3\\xc6\\xce\\x64\\xd2\\x14\\xab\\xe9\\xb6\\x49\\xc9\\x87\\x87\\\n\\xcf\\xf7\\x43\\xff\\x07\\x51\\x51\\x51\\xe5\\xe3\\xc7\\x55\\xc0\\xa3\\x60\\x80\\\n\\xa7\\x4d\\xa5\\x2b\\x38\\x8f\\xee\\xeb\\xe3\\x3d\\x7c\\x54\\xcf\\x60\\xd0\\xad\\\n\\x67\\xce\\x50\\x72\\x30\\xda\\xdb\\x3b\\x7a\\x5f\\xbc\\x30\\xd0\\xd7\\x37\\x36\\\n\\x36\\x1a\\xdf\\xe3\\x2e\\x89\\x44\\xda\\xd1\\xd9\\xc1\\x62\\x32\\xf1\\x45\\x44\\\n\\x49\\x5b\\x63\\xe1\\x01\\x41\\x90\\x81\\x81\\x41\\xb1\\x58\\x44\\x67\\x30\\x46\\\n\\xfd\\x38\\xa1\\xd8\\x87\\x91\\xad\\x2a\\x47\\xa1\\x00\\x3c\\x5e\\xff\\x8b\\xbe\\\n\\x3e\\xba\\xae\\xae\\x9e\\x1e\\x43\\x9e\\x44\\x31\\xae\\x5d\\x2f\\xcb\\xfd\\x3e\\\n\\x2f\\x23\\xfd\\x4b\\x02\\x81\\x20\\x95\\x4a\\xef\\x55\\x54\\x71\\x83\\x57\\xd7\\\n\\xfd\\xbb\\xda\\xd0\\xc0\\x40\\x6e\\xbd\\x35\\xc8\\xef\\x13\\x0c\\xf0\\x54\\x1e\\\n\\x4e\\x06\\x83\\xee\\xec\\xe4\\xf0\\x56\\x8f\\xb0\\x58\\x4c\\x16\\x8b\\xf9\\x2e\\\n\\x8e\\x52\\x29\\x14\\xf2\\x24\\x33\\x33\\xd5\\x6c\\xa9\\xcc\\x03\\x89\\x44\\xa2\\\n\\xd3\\x75\\x01\\x74\\x55\\x8b\\x77\\x64\\xeb\\x58\\xa2\\x90\\x07\\x3a\\x5d\\x97\\\n\\x4e\\xd7\\x55\\x2c\\x79\\xc3\\x67\\xb1\\xca\\x2a\\x2b\\x2b\\x4b\\xac\\x12\\x25\\\n\\x93\\xc9\\xf3\\xe6\\xda\\x1b\\x19\\x4d\\xa4\\xd3\\xe9\\x72\\x6b\\x79\\x6f\\xdf\\\n\\x40\\xf5\\x17\\x56\\x35\\x0f\\xca\\xc0\\x6b\\xa9\\xe7\\xfb\\xeb\\xc2\\x0c\\xf4\\\n\\xf5\\xa7\\x4f\\x9f\\xda\\xd9\\xd5\\x9d\\x9d\\x93\\x9b\\x10\\x1f\\x3b\\x6c\\x9e\\\n\\x26\\xa8\\xff\\x1b\\xa8\\x86\\x6a\\x78\\xf2\\xe4\\xe9\\x95\\xab\\xd7\\x7b\\x7b\\\n\\x5f\\x18\\x1b\\x4d\\xf4\\xf1\\x59\\x6a\\x66\\x6a\\xaa\\xa8\\xde\\x52\\x43\\x8d\\\n\\x71\\x84\\xfa\\xff\\x5b\\x6a\\xa8\\x73\\x4b\\x8d\\xff\\x37\\xfc\\x07\\x11\\x0b\\\n\\x12\\xd7\\xae\\x53\\xd3\\x15\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\x42\\\n\\x60\\x82\\\n\\x00\\x00\\x02\\xb4\\\n\\x89\\\n\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a\\x00\\x00\\x00\\x0d\\x49\\x48\\x44\\x52\\x00\\\n\\x00\\x00\\x10\\x00\\x00\\x00\\x10\\x08\\x03\\x00\\x00\\x00\\x28\\x2d\\x0f\\x53\\\n\\x00\\x00\\x00\\x04\\x67\\x41\\x4d\\x41\\x00\\x00\\xb1\\x8f\\x0b\\xfc\\x61\\x05\\\n\\x00\\x00\\x00\\x20\\x63\\x48\\x52\\x4d\\x00\\x00\\x7a\\x26\\x00\\x00\\x80\\x84\\\n\\x00\\x00\\xfa\\x00\\x00\\x00\\x80\\xe8\\x00\\x00\\x75\\x30\\x00\\x00\\xea\\x60\\\n\\x00\\x00\\x3a\\x98\\x00\\x00\\x17\\x70\\x9c\\xba\\x51\\x3c\\x00\\x00\\x01\\x0e\\\n\\x50\\x4c\\x54\\x45\\xff\\xff\\xff\\x9e\\xc0\\xef\\x92\\xb5\\xe6\\x81\\xa7\\xe2\\\n\\x7b\\xa1\\xdc\\x84\\xbf\\x54\\xba\\xce\\xef\\x6e\\x97\\xd4\\xbc\\xbc\\xbc\\xbb\\\n\\xbb\\xbb\\xb3\\xc7\\xe3\\x55\\x83\\xc6\\x00\\x00\\x00\\xba\\xba\\xba\\xb8\\xb8\\\n\\xb8\\x77\\x9e\\xd9\\x51\\x7f\\xc3\\x84\\xbf\\x51\\xa3\\xa3\\xa3\\x65\\x8d\\xcc\\\n\\xb0\\xcd\\xf3\\xff\\xff\\xff\\xa1\\xbf\\xea\\x60\\x89\\xc9\\x5b\\x86\\xc7\\x6e\\\n\\x93\\xcc\\xf7\\xfb\\xff\\xf1\\xf8\\xff\\x8c\\xaf\\xe4\\x61\\x8a\\xc7\\x5d\\x88\\\n\\xc8\\xa1\\xbf\\xef\\xfa\\xfc\\xfd\\xfb\\xfc\\xfe\\xfd\\xfd\\xfe\\xfc\\xfd\\xfe\\\n\\xfa\\xfb\\xfd\\xfb\\xfc\\xfd\\x85\\xa8\\xdd\\x53\\x7f\\xc1\\x65\\x8d\\xca\\x99\\\n\\xb8\\xea\\x7e\\xa5\\xdd\\x80\\xa6\\xdd\\x7c\\xa3\\xdb\\x7a\\xa0\\xd9\\x79\\xa0\\\n\\xd9\\x78\\x9f\\xd8\\x78\\x9e\\xd8\\x5d\\x84\\xbf\\x61\\x8b\\xc9\\x81\\xa7\\xe1\\\n\\x7d\\xa3\\xde\\x79\\x9f\\xdb\\x73\\x9a\\xd4\\x57\\x7e\\xbb\\x54\\x81\\xc4\\x97\\\n\\xb6\\xea\\xea\\xf3\\xf3\\xe6\\xf1\\xed\\xe6\\xf1\\xef\\xe6\\xf0\\xef\\xe5\\xf1\\\n\\xed\\xed\\xf5\\xf3\\x79\\x9c\\xd5\\x44\\x70\\xb0\\x9a\\xb6\\xef\\xe8\\xf3\\xea\\\n\\x98\\xc9\\x6f\\x99\\xc9\\x71\\xe9\\xf4\\xe4\\x7b\\x9c\\xdd\\x3a\\x69\\xaa\\xff\\\n\\xff\\xdd\\xc7\\xee\\x87\\xd7\\xf4\\xa2\\xd7\\xf6\\xa2\\xc7\\xee\\x8c\\xff\\xff\\\n\\xe0\\x85\\xa2\\xdd\\x3e\\x6a\\xab\\x33\\x68\\xba\\x58\\x84\\xc3\\x68\\x8b\\xd3\\\n\\x70\\x8f\\xe1\\x6c\\x8d\\xdc\\x6d\\x8b\\xda\\x6e\\x8a\\xd7\\x6c\\x8b\\xcd\\x44\\\n\\x6d\\xab\\x68\\x06\\xa6\\xcc\\x00\\x00\\x00\\x01\\x74\\x52\\x4e\\x53\\x00\\x40\\\n\\xe6\\xd8\\x66\\x00\\x00\\x00\\x01\\x62\\x4b\\x47\\x44\\x00\\x88\\x05\\x1d\\x48\\\n\\x00\\x00\\x00\\xa9\\x49\\x44\\x41\\x54\\x18\\xd3\\x75\\xcb\\xe5\\x0e\\xc2\\x40\\\n\\x10\\x46\\xd1\\xa1\\xa5\\x45\\xba\\x50\\x16\\x58\\xdc\\xdd\\xdd\\xdd\\xdd\\x9d\\\n\\xf7\\x7f\\x11\\x0a\\x99\\x84\\x84\\x84\\x9b\\xcc\\x9f\\x93\\x6f\\x40\\xc5\\xf1\\\n\\x6a\\x00\\x10\\x94\\xe0\\x13\\x27\\x8a\\x9a\\x37\\x68\\x75\\x08\\xbc\\xa8\\x97\\\n\\x08\\x21\\x82\\xc1\\x88\\x20\\x6b\\x24\\x13\\x90\\xf7\\x0b\\x85\\x6f\\x04\\x7e\\\n\\x52\\x16\\x94\\x52\\xb3\\x72\\xf4\\xcf\\x02\\x2c\\x56\\xa6\\x67\\x4a\\x36\\x3b\\\n\\x82\\x43\\xc5\\x9c\\x8c\\xb9\\xdc\\x1e\\x2f\\x82\\xcf\\x1f\\x08\\x86\\xc2\\x91\\\n\\x68\\x2c\\x8e\\x90\\x48\\xa6\\xd2\\x99\\x6c\\x2e\\x5f\\x28\\x22\\x94\\x38\\xbe\\\n\\x5c\\x51\\x57\\xe5\\x5a\\x1d\\xa1\\xd1\\x6c\\xb5\\x3b\\xdd\\x5e\\x7f\\x30\\x44\\\n\\x30\\x8d\\xc6\\x74\\x32\\x15\\x66\\xf3\\x05\\x82\\x24\\x2e\\x57\\xeb\\xcd\\x76\\\n\\xb7\\x3f\\x20\\x1c\\x4f\\xe7\\xcb\\xf5\\x76\\x7f\\x3c\\xe1\\x05\\xf7\\xbf\\x11\\\n\\xac\\x60\\x9e\\x33\\x4e\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\x74\\\n\\x65\\x3a\\x63\\x72\\x65\\x61\\x74\\x65\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\x32\\\n\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x36\\x3a\\x31\\x35\\x2b\\x30\\x31\\x3a\\\n\\x30\\x30\\x7e\\xdd\\xfa\\x59\\x00\\x00\\x00\\x25\\x74\\x45\\x58\\x74\\x64\\x61\\\n\\x74\\x65\\x3a\\x6d\\x6f\\x64\\x69\\x66\\x79\\x00\\x32\\x30\\x31\\x31\\x2d\\x31\\\n\\x32\\x2d\\x32\\x30\\x54\\x31\\x32\\x3a\\x30\\x33\\x3a\\x32\\x30\\x2b\\x30\\x31\\\n\\x3a\\x30\\x30\\x35\\x1e\\xa1\\xe5\\x00\\x00\\x00\\x00\\x49\\x45\\x4e\\x44\\xae\\\n\\x42\\x60\\x82\\\n""\n\nqt_resource_name = b""\\\n\\x00\\x06\\\n\\x07\\x03\\x7d\\xc3\\\n\\x00\\x69\\\n\\x00\\x6d\\x00\\x61\\x00\\x67\\x00\\x65\\x00\\x73\\\n\\x00\\x05\\\n\\x00\\x6f\\xa6\\x53\\\n\\x00\\x69\\\n\\x00\\x63\\x00\\x6f\\x00\\x6e\\x00\\x73\\\n\\x00\\x0a\\\n\\x08\\x94\\x19\\x07\\\n\\x00\\x73\\\n\\x00\\x70\\x00\\x6c\\x00\\x61\\x00\\x73\\x00\\x68\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x07\\\n\\x08\\xc6\\x58\\x23\\\n\\x00\\x52\\\n\\x00\\x65\\x00\\x73\\x00\\x2e\\x00\\x71\\x00\\x72\\x00\\x63\\\n\\x00\\x12\\\n\\x0a\\xfb\\x54\\x27\\\n\\x00\\x70\\\n\\x00\\x61\\x00\\x74\\x00\\x74\\x00\\x65\\x00\\x72\\x00\\x6e\\x00\\x2d\\x00\\x72\\x00\\x65\\x00\\x6c\\x00\\x6f\\x00\\x61\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\\n\\x00\\x67\\\n\\x00\\x0c\\\n\\x0d\\x31\\xc7\\x07\\\n\\x00\\x73\\\n\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2d\\x00\\x53\\x00\\x2d\\x00\\x4d\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x0c\\xfc\\x40\\xe7\\\n\\x00\\x72\\\n\\x00\\x65\\x00\\x67\\x00\\x65\\x00\\x78\\x00\\x70\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x13\\\n\\x0a\\x2b\\x40\\x87\\\n\\x00\\x73\\\n\\x00\\x75\\x00\\x62\\x00\\x74\\x00\\x72\\x00\\x65\\x00\\x65\\x00\\x2d\\x00\\x73\\x00\\x69\\x00\\x64\\x00\\x73\\x00\\x2d\\x00\\x6f\\x00\\x6b\\x00\\x2e\\x00\\x70\\\n\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x29\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x57\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x16\\\n\\x07\\xfc\\xdf\\x47\\\n\\x00\\x6f\\\n\\x00\\x70\\x00\\x74\\x00\\x69\\x00\\x6f\\x00\\x6e\\x00\\x61\\x00\\x6c\\x00\\x2d\\x00\\x73\\x00\\x69\\x00\\x64\\x00\\x73\\x00\\x2d\\x00\\x6e\\x00\\x6f\\x00\\x64\\\n\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x10\\\n\\x0e\\xc3\\xc5\\xe7\\\n\\x00\\x6f\\\n\\x00\\x70\\x00\\x65\\x00\\x72\\x00\\x61\\x00\\x74\\x00\\x65\\x00\\x2d\\x00\\x76\\x00\\x69\\x00\\x65\\x00\\x77\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x2b\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x55\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x13\\\n\\x00\\x24\\xda\\x67\\\n\\x00\\x64\\\n\\x00\\x61\\x00\\x74\\x00\\x61\\x00\\x2d\\x00\\x61\\x00\\x72\\x00\\x72\\x00\\x61\\x00\\x79\\x00\\x2d\\x00\\x6c\\x00\\x61\\x00\\x7a\\x00\\x79\\x00\\x2e\\x00\\x70\\\n\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x2d\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x53\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x04\\x73\\xa3\\x27\\\n\\x00\\x66\\\n\\x00\\x6c\\x00\\x61\\x00\\x67\\x00\\x2d\\x00\\x62\\x00\\x77\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x03\\x5e\\x28\\x87\\\n\\x00\\x6c\\\n\\x00\\x65\\x00\\x76\\x00\\x65\\x00\\x6c\\x00\\x2d\\x00\\x6f\\x00\\x75\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x08\\\n\\x08\\xc8\\x58\\x67\\\n\\x00\\x73\\\n\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x0b\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x35\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x0d\\xc4\\xa3\\x27\\\n\\x00\\x70\\\n\\x00\\x72\\x00\\x69\\x00\\x6e\\x00\\x74\\x00\\x2d\\x00\\x76\\x00\\x69\\x00\\x65\\x00\\x77\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x05\\xce\\x27\\x27\\\n\\x00\\x74\\\n\\x00\\x72\\x00\\x65\\x00\\x65\\x00\\x2d\\x00\\x64\\x00\\x65\\x00\\x6c\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x05\\xb6\\x28\\xe7\\\n\\x00\\x6c\\\n\\x00\\x65\\x00\\x76\\x00\\x65\\x00\\x6c\\x00\\x2d\\x00\\x61\\x00\\x6c\\x00\\x6c\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x0b\\x8e\\xcd\\x87\\\n\\x00\\x6c\\\n\\x00\\x6f\\x00\\x63\\x00\\x6b\\x00\\x2d\\x00\\x6c\\x00\\x65\\x00\\x67\\x00\\x65\\x00\\x6e\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x01\\x89\\x52\\xe7\\\n\\x00\\x73\\\n\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2d\\x00\\x53\\x00\\x2d\\x00\\x55\\x00\\x4d\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x17\\\n\\x05\\x64\\x31\\x67\\\n\\x00\\x73\\\n\\x00\\x75\\x00\\x62\\x00\\x74\\x00\\x72\\x00\\x65\\x00\\x65\\x00\\x2d\\x00\\x73\\x00\\x69\\x00\\x64\\x00\\x73\\x00\\x2d\\x00\\x66\\x00\\x61\\x00\\x69\\x00\\x6c\\\n\\x00\\x65\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x0a\\xc8\\xfb\\x07\\\n\\x00\\x66\\\n\\x00\\x6f\\x00\\x6c\\x00\\x64\\x00\\x65\\x00\\x72\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x10\\\n\\x00\\xec\\x5f\\x67\\\n\\x00\\x73\\\n\\x00\\x65\\x00\\x6c\\x00\\x65\\x00\\x63\\x00\\x74\\x00\\x2d\\x00\\x65\\x00\\x6d\\x00\\x70\\x00\\x74\\x00\\x79\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x16\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x46\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x10\\\n\\x0f\\x21\\x00\\x07\\\n\\x00\\x6f\\\n\\x00\\x70\\x00\\x74\\x00\\x69\\x00\\x6f\\x00\\x6e\\x00\\x73\\x00\\x2d\\x00\\x76\\x00\\x69\\x00\\x65\\x00\\x77\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x28\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x54\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0b\\\n\\x0f\\x35\\x32\\xc7\\\n\\x00\\x76\\\n\\x00\\x74\\x00\\x6b\\x00\\x76\\x00\\x69\\x00\\x65\\x00\\x77\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x03\\x10\\x1c\\x67\\\n\\x00\\x73\\\n\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2d\\x00\\x55\\x00\\x53\\x00\\x2d\\x00\\x55\\x00\\x4d\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x1a\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x42\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x18\\\n\\x05\\x9f\\xe7\\x27\\\n\\x00\\x73\\\n\\x00\\x75\\x00\\x62\\x00\\x74\\x00\\x72\\x00\\x65\\x00\\x65\\x00\\x2d\\x00\\x73\\x00\\x69\\x00\\x64\\x00\\x73\\x00\\x2d\\x00\\x77\\x00\\x61\\x00\\x72\\x00\\x6e\\\n\\x00\\x69\\x00\\x6e\\x00\\x67\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x11\\\n\\x03\\x0b\\x17\\x27\\\n\\x00\\x61\\\n\\x00\\x6e\\x00\\x69\\x00\\x6d\\x00\\x2d\\x00\\x69\\x00\\x74\\x00\\x65\\x00\\x6d\\x00\\x2d\\x00\\x64\\x00\\x65\\x00\\x6c\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\\n\\x00\\x0f\\\n\\x0e\\xb7\\xce\\x87\\\n\\x00\\x6f\\\n\\x00\\x70\\x00\\x65\\x00\\x72\\x00\\x61\\x00\\x74\\x00\\x65\\x00\\x2d\\x00\\x61\\x00\\x64\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x06\\x16\\x91\\xe7\\\n\\x00\\x62\\\n\\x00\\x72\\x00\\x61\\x00\\x6e\\x00\\x63\\x00\\x68\\x00\\x2d\\x00\\x6d\\x00\\x6f\\x00\\x72\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x0f\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x31\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x0a\\x00\\x6a\\x87\\\n\\x00\\x63\\\n\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x2d\\x00\\x62\\x00\\x77\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x11\\\n\\x06\\xaa\\x90\\x27\\\n\\x00\\x73\\\n\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2d\\x00\\x69\\x00\\x6e\\x00\\x61\\x00\\x63\\x00\\x74\\x00\\x69\\x00\\x76\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\\n\\x00\\x10\\\n\\x0a\\x49\\xdc\\x27\\\n\\x00\\x70\\\n\\x00\\x61\\x00\\x74\\x00\\x74\\x00\\x65\\x00\\x72\\x00\\x6e\\x00\\x2d\\x00\\x76\\x00\\x69\\x00\\x65\\x00\\x77\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x2a\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x52\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x10\\\n\\x0e\\x6f\\x4d\\xc7\\\n\\x00\\x62\\\n\\x00\\x72\\x00\\x61\\x00\\x6e\\x00\\x63\\x00\\x68\\x00\\x2d\\x00\\x65\\x00\\x6e\\x00\\x64\\x00\\x2d\\x00\\x70\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x09\\x61\\x51\\xc7\\\n\\x00\\x73\\\n\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2d\\x00\\x64\\x00\\x6f\\x00\\x6e\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x2e\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x4e\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x0a\\xcc\\x88\\x07\\\n\\x00\\x68\\\n\\x00\\x69\\x00\\x64\\x00\\x64\\x00\\x65\\x00\\x6e\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x11\\\n\\x04\\xeb\\x48\\xe7\\\n\\x00\\x63\\\n\\x00\\x61\\x00\\x6d\\x00\\x65\\x00\\x72\\x00\\x61\\x00\\x2d\\x00\\x72\\x00\\x65\\x00\\x6d\\x00\\x6f\\x00\\x76\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\\n\\x00\\x0b\\\n\\x0c\\x7c\\x40\\x07\\\n\\x00\\x70\\\n\\x00\\x61\\x00\\x74\\x00\\x74\\x00\\x65\\x00\\x72\\x00\\x6e\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0b\\\n\\x09\\x8b\\x9c\\x27\\\n\\x00\\x63\\\n\\x00\\x6f\\x00\\x6e\\x00\\x74\\x00\\x72\\x00\\x6f\\x00\\x6c\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x14\\\n\\x0b\\x60\\x85\\x67\\\n\\x00\\x64\\\n\\x00\\x61\\x00\\x74\\x00\\x61\\x00\\x2d\\x00\\x61\\x00\\x72\\x00\\x72\\x00\\x61\\x00\\x79\\x00\\x2d\\x00\\x6c\\x00\\x61\\x00\\x72\\x00\\x67\\x00\\x65\\x00\\x2e\\\n\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x00\\x2e\\x58\\x67\\\n\\x00\\x73\\\n\\x00\\x6e\\x00\\x61\\x00\\x70\\x00\\x73\\x00\\x68\\x00\\x6f\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x13\\\n\\x0d\\xe7\\x3e\\x27\\\n\\x00\\x61\\\n\\x00\\x6e\\x00\\x69\\x00\\x6d\\x00\\x2d\\x00\\x69\\x00\\x74\\x00\\x65\\x00\\x6d\\x00\\x2d\\x00\\x66\\x00\\x69\\x00\\x72\\x00\\x73\\x00\\x74\\x00\\x2e\\x00\\x70\\\n\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x07\\xde\\x75\\x47\\\n\\x00\\x63\\\n\\x00\\x61\\x00\\x6d\\x00\\x65\\x00\\x72\\x00\\x61\\x00\\x2d\\x00\\x61\\x00\\x64\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x10\\\n\\x0f\\xde\\x20\\xe7\\\n\\x00\\x64\\\n\\x00\\x69\\x00\\x66\\x00\\x66\\x00\\x2d\\x00\\x63\\x00\\x68\\x00\\x61\\x00\\x6e\\x00\\x67\\x00\\x65\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x02\\x46\\xce\\x87\\\n\\x00\\x6f\\\n\\x00\\x70\\x00\\x65\\x00\\x72\\x00\\x61\\x00\\x74\\x00\\x65\\x00\\x2d\\x00\\x64\\x00\\x6f\\x00\\x63\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0b\\\n\\x00\\xf1\\xd1\\x27\\\n\\x00\\x68\\\n\\x00\\x65\\x00\\x6c\\x00\\x70\\x00\\x2d\\x00\\x30\\x00\\x31\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x11\\\n\\x05\\x21\\x6a\\x47\\\n\\x00\\x6f\\\n\\x00\\x70\\x00\\x65\\x00\\x72\\x00\\x61\\x00\\x74\\x00\\x65\\x00\\x2d\\x00\\x70\\x00\\x72\\x00\\x6f\\x00\\x62\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\\n\\x00\\x0c\\\n\\x09\\xc7\\xcb\\x27\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x61\\x00\\x64\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x10\\\n\\x09\\xd1\\xc5\\x47\\\n\\x00\\x6f\\\n\\x00\\x70\\x00\\x65\\x00\\x72\\x00\\x61\\x00\\x74\\x00\\x65\\x00\\x2d\\x00\\x73\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x09\\\n\\x07\\xbc\\x8f\\xc7\\\n\\x00\\x65\\\n\\x00\\x6d\\x00\\x70\\x00\\x74\\x00\\x79\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x0e\\x74\\x26\\x87\\\n\\x00\\x63\\\n\\x00\\x6f\\x00\\x6c\\x00\\x6f\\x00\\x72\\x00\\x73\\x00\\x2d\\x00\\x6c\\x00\\x61\\x00\\x73\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x07\\\n\\x07\\xa7\\x57\\x87\\\n\\x00\\x61\\\n\\x00\\x64\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x0c\\xad\\x0f\\x07\\\n\\x00\\x64\\\n\\x00\\x65\\x00\\x6c\\x00\\x65\\x00\\x74\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x05\\xa3\\xcb\\x27\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x64\\x00\\x75\\x00\\x70\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x02\\x50\\x3f\\x67\\\n\\x00\\x68\\\n\\x00\\x65\\x00\\x6c\\x00\\x70\\x00\\x2d\\x00\\x76\\x00\\x69\\x00\\x65\\x00\\x77\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x08\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x34\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x11\\\n\\x0e\\x13\\x17\\x27\\\n\\x00\\x61\\\n\\x00\\x6e\\x00\\x69\\x00\\x6d\\x00\\x2d\\x00\\x69\\x00\\x74\\x00\\x65\\x00\\x6d\\x00\\x2d\\x00\\x61\\x00\\x64\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\\n\\x00\\x07\\\n\\x0b\\x63\\x57\\xa7\\\n\\x00\\x74\\\n\\x00\\x6f\\x00\\x70\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x14\\\n\\x06\\xd7\\x88\\x27\\\n\\x00\\x68\\\n\\x00\\x5f\\x00\\x66\\x00\\x69\\x00\\x6c\\x00\\x65\\x00\\x5f\\x00\\x63\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x73\\x00\\x5f\\x00\\x31\\x00\\x31\\x00\\x2e\\\n\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x1f\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x41\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x0d\\xb5\\x59\\x67\\\n\\x00\\x73\\\n\\x00\\x65\\x00\\x6c\\x00\\x65\\x00\\x63\\x00\\x74\\x00\\x2d\\x00\\x73\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x26\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x56\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x0d\\xd4\\xb5\\x47\\\n\\x00\\x63\\\n\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x2d\\x00\\x6c\\x00\\x69\\x00\\x73\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x09\\x1d\\x44\\x47\\\n\\x00\\x63\\\n\\x00\\x6c\\x00\\x6f\\x00\\x73\\x00\\x65\\x00\\x2d\\x00\\x76\\x00\\x69\\x00\\x65\\x00\\x77\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x09\\xe7\\xaf\\x07\\\n\\x00\\x6c\\\n\\x00\\x6f\\x00\\x63\\x00\\x6b\\x00\\x2d\\x00\\x73\\x00\\x63\\x00\\x72\\x00\\x6f\\x00\\x6c\\x00\\x6c\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x19\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x47\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x04\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x38\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x08\\x68\\x5f\\xc7\\\n\\x00\\x61\\\n\\x00\\x6e\\x00\\x69\\x00\\x6d\\x00\\x2d\\x00\\x73\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x0a\\x8c\\x8a\\xa7\\\n\\x00\\x63\\\n\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x2d\\x00\\x66\\x00\\x61\\x00\\x69\\x00\\x6c\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x00\\xbb\\x38\\x67\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x63\\x00\\x68\\x00\\x69\\x00\\x6c\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x15\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x4b\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x02\\x6f\\xab\\x07\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x73\\x00\\x65\\x00\\x6c\\x00\\x65\\x00\\x63\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x11\\\n\\x0e\\x70\\x35\\x87\\\n\\x00\\x70\\\n\\x00\\x61\\x00\\x74\\x00\\x74\\x00\\x65\\x00\\x72\\x00\\x6e\\x00\\x2d\\x00\\x63\\x00\\x6c\\x00\\x6f\\x00\\x73\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\\n\\x00\\x12\\\n\\x08\\xdc\\x20\\xe7\\\n\\x00\\x73\\\n\\x00\\x65\\x00\\x6c\\x00\\x65\\x00\\x63\\x00\\x74\\x00\\x2d\\x00\\x6f\\x00\\x70\\x00\\x65\\x00\\x72\\x00\\x61\\x00\\x74\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\\n\\x00\\x67\\\n\\x00\\x0f\\\n\\x00\\x33\\xd3\\x87\\\n\\x00\\x74\\\n\\x00\\x72\\x00\\x65\\x00\\x65\\x00\\x2d\\x00\\x6c\\x00\\x6f\\x00\\x61\\x00\\x64\\x00\\x2d\\x00\\x67\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x08\\xd6\\x27\\x27\\\n\\x00\\x74\\\n\\x00\\x72\\x00\\x65\\x00\\x65\\x00\\x2d\\x00\\x61\\x00\\x64\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x0e\\x1c\\x6e\\x27\\\n\\x00\\x71\\\n\\x00\\x75\\x00\\x65\\x00\\x72\\x00\\x79\\x00\\x2d\\x00\\x78\\x00\\x6f\\x00\\x72\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x07\\xa5\\x18\\x47\\\n\\x00\\x7a\\\n\\x00\\x6f\\x00\\x6f\\x00\\x6d\\x00\\x2d\\x00\\x61\\x00\\x63\\x00\\x74\\x00\\x6f\\x00\\x72\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x0a\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x32\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x05\\xc7\\xcb\\x27\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x64\\x00\\x73\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x09\\xf9\\x32\\xa7\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x65\\x00\\x72\\x00\\x72\\x00\\x6f\\x00\\x72\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x07\\xf8\\x6a\\x87\\\n\\x00\\x63\\\n\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x2d\\x00\\x61\\x00\\x6c\\x00\\x6c\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x12\\\n\\x05\\x3c\\x2d\\x07\\\n\\x00\\x6f\\\n\\x00\\x70\\x00\\x65\\x00\\x72\\x00\\x61\\x00\\x74\\x00\\x65\\x00\\x2d\\x00\\x64\\x00\\x65\\x00\\x6c\\x00\\x65\\x00\\x74\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\\n\\x00\\x67\\\n\\x00\\x08\\\n\\x03\\x67\\x59\\xa7\\\n\\x00\\x70\\\n\\x00\\x6c\\x00\\x6f\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x11\\\n\\x09\\xa8\\x35\\xe7\\\n\\x00\\x73\\\n\\x00\\x65\\x00\\x6c\\x00\\x65\\x00\\x63\\x00\\x74\\x00\\x2d\\x00\\x64\\x00\\x65\\x00\\x6c\\x00\\x65\\x00\\x74\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\\n\\x00\\x0e\\\n\\x05\\xe2\\x84\\x87\\\n\\x00\\x63\\\n\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x2d\\x00\\x77\\x00\\x61\\x00\\x72\\x00\\x6e\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x14\\\n\\x06\\xa4\\x88\\x27\\\n\\x00\\x68\\\n\\x00\\x5f\\x00\\x66\\x00\\x69\\x00\\x6c\\x00\\x65\\x00\\x5f\\x00\\x63\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x73\\x00\\x5f\\x00\\x30\\x00\\x30\\x00\\x2e\\\n\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x1b\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x45\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x02\\xbd\\x84\\xa7\\\n\\x00\\x63\\\n\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x2d\\x00\\x76\\x00\\x69\\x00\\x65\\x00\\x77\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x0c\\xb8\\x8c\\xa7\\\n\\x00\\x63\\\n\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x2d\\x00\\x63\\x00\\x6c\\x00\\x65\\x00\\x61\\x00\\x72\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x06\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x36\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x14\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x48\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x2c\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x50\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x0f\\x42\\x6f\\xe7\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x69\\x00\\x67\\x00\\x6e\\x00\\x6f\\x00\\x72\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x13\\\n\\x05\\x6f\\xa1\\x27\\\n\\x00\\x6f\\\n\\x00\\x70\\x00\\x65\\x00\\x72\\x00\\x61\\x00\\x74\\x00\\x65\\x00\\x2d\\x00\\x65\\x00\\x78\\x00\\x65\\x00\\x63\\x00\\x75\\x00\\x74\\x00\\x65\\x00\\x2e\\x00\\x70\\\n\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x02\\xb9\\x9e\\x27\\\n\\x00\\x6d\\\n\\x00\\x61\\x00\\x72\\x00\\x6b\\x00\\x2d\\x00\\x6e\\x00\\x6f\\x00\\x64\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x0e\\xd1\\x9f\\xa7\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x73\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x14\\\n\\x04\\xde\\x87\\x07\\\n\\x00\\x6e\\\n\\x00\\x6f\\x00\\x64\\x00\\x65\\x00\\x2d\\x00\\x73\\x00\\x69\\x00\\x64\\x00\\x73\\x00\\x2d\\x00\\x6f\\x00\\x70\\x00\\x65\\x00\\x6e\\x00\\x65\\x00\\x64\\x00\\x2e\\\n\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x05\\x0d\\xaa\\x87\\\n\\x00\\x70\\\n\\x00\\x61\\x00\\x6e\\x00\\x65\\x00\\x6c\\x00\\x2d\\x00\\x6c\\x00\\x6f\\x00\\x63\\x00\\x6b\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x0f\\x72\\xc4\\xc7\\\n\\x00\\x71\\\n\\x00\\x75\\x00\\x65\\x00\\x72\\x00\\x79\\x00\\x2d\\x00\\x6f\\x00\\x72\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x07\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x39\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x0f\\xf0\\x07\\x47\\\n\\x00\\x73\\\n\\x00\\x65\\x00\\x6c\\x00\\x65\\x00\\x63\\x00\\x74\\x00\\x2d\\x00\\x61\\x00\\x64\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x2f\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x51\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x0c\\x71\\x3f\\xe7\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x6e\\x00\\x6f\\x00\\x6e\\x00\\x6f\\x00\\x64\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x09\\xf1\\x30\\xc7\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x6e\\x00\\x6f\\x00\\x66\\x00\\x69\\x00\\x6c\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x12\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x4a\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x1a\\\n\\x09\\x69\\x1a\\x47\\\n\\x00\\x6d\\\n\\x00\\x61\\x00\\x6e\\x00\\x64\\x00\\x61\\x00\\x74\\x00\\x6f\\x00\\x72\\x00\\x79\\x00\\x2d\\x00\\x70\\x00\\x72\\x00\\x6f\\x00\\x66\\x00\\x69\\x00\\x6c\\x00\\x65\\\n\\x00\\x2d\\x00\\x6e\\x00\\x6f\\x00\\x64\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x0d\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x33\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x09\\\n\\x03\\xb8\\xae\\x47\\\n\\x00\\x76\\\n\\x00\\x61\\x00\\x6c\\x00\\x75\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x14\\\n\\x06\\xd4\\x88\\x27\\\n\\x00\\x68\\\n\\x00\\x5f\\x00\\x66\\x00\\x69\\x00\\x6c\\x00\\x65\\x00\\x5f\\x00\\x63\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x73\\x00\\x5f\\x00\\x31\\x00\\x30\\x00\\x2e\\\n\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x00\\x73\\xa3\\x27\\\n\\x00\\x66\\\n\\x00\\x6c\\x00\\x61\\x00\\x67\\x00\\x2d\\x00\\x66\\x00\\x77\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x0c\\xdd\\xbd\\x07\\\n\\x00\\x62\\\n\\x00\\x75\\x00\\x6c\\x00\\x6c\\x00\\x65\\x00\\x74\\x00\\x5f\\x00\\x73\\x00\\x74\\x00\\x61\\x00\\x72\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x02\\xd9\\xc9\\xa7\\\n\\x00\\x71\\\n\\x00\\x75\\x00\\x65\\x00\\x72\\x00\\x79\\x00\\x2d\\x00\\x6f\\x00\\x72\\x00\\x2d\\x00\\x73\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x17\\\n\\x07\\x19\\x43\\x87\\\n\\x00\\x6d\\\n\\x00\\x61\\x00\\x6e\\x00\\x64\\x00\\x61\\x00\\x74\\x00\\x6f\\x00\\x72\\x00\\x79\\x00\\x2d\\x00\\x73\\x00\\x69\\x00\\x64\\x00\\x73\\x00\\x2d\\x00\\x6e\\x00\\x6f\\\n\\x00\\x64\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x0c\\x93\\x5e\\x27\\\n\\x00\\x66\\\n\\x00\\x6f\\x00\\x72\\x00\\x6d\\x00\\x2d\\x00\\x6f\\x00\\x70\\x00\\x65\\x00\\x6e\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x10\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x4c\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x08\\\n\\x06\\x90\\x5a\\xe7\\\n\\x00\\x66\\\n\\x00\\x6f\\x00\\x72\\x00\\x6d\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x10\\\n\\x0a\\x0e\\xcb\\x07\\\n\\x00\\x6f\\\n\\x00\\x70\\x00\\x65\\x00\\x72\\x00\\x61\\x00\\x74\\x00\\x65\\x00\\x2d\\x00\\x65\\x00\\x64\\x00\\x69\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x08\\\n\\x00\\x4e\\x59\\x27\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x09\\x3e\\x6e\\xc7\\\n\\x00\\x71\\\n\\x00\\x75\\x00\\x65\\x00\\x72\\x00\\x79\\x00\\x2d\\x00\\x61\\x00\\x6e\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x0e\\x7f\\xbf\\x67\\\n\\x00\\x71\\\n\\x00\\x75\\x00\\x65\\x00\\x72\\x00\\x79\\x00\\x2d\\x00\\x6e\\x00\\x6f\\x00\\x74\\x00\\x2d\\x00\\x73\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x0d\\xd8\\xc0\\xa7\\\n\\x00\\x6c\\\n\\x00\\x65\\x00\\x76\\x00\\x65\\x00\\x6c\\x00\\x2d\\x00\\x69\\x00\\x6e\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x07\\x60\\x84\\x27\\\n\\x00\\x63\\\n\\x00\\x6f\\x00\\x6c\\x00\\x6f\\x00\\x72\\x00\\x73\\x00\\x2d\\x00\\x62\\x00\\x77\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x05\\x62\\xcb\\x07\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x64\\x00\\x65\\x00\\x6c\\x00\\x65\\x00\\x74\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x03\\xdf\\xfa\\x47\\\n\\x00\\x66\\\n\\x00\\x6c\\x00\\x61\\x00\\x67\\x00\\x2d\\x00\\x72\\x00\\x65\\x00\\x76\\x00\\x65\\x00\\x72\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x0b\\xe2\\x38\\x87\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x62\\x00\\x72\\x00\\x65\\x00\\x61\\x00\\x6b\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x09\\\n\\x09\\x6a\\x86\\x67\\\n\\x00\\x61\\\n\\x00\\x72\\x00\\x72\\x00\\x6f\\x00\\x77\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x0e\\x00\\x6a\\x87\\\n\\x00\\x63\\\n\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x2d\\x00\\x66\\x00\\x77\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x12\\\n\\x05\\x40\\x30\\x87\\\n\\x00\\x63\\\n\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x2d\\x00\\x67\\x00\\x72\\x00\\x61\\x00\\x6d\\x00\\x6d\\x00\\x61\\x00\\x72\\x00\\x73\\x00\\x2e\\x00\\x70\\x00\\x6e\\\n\\x00\\x67\\\n\\x00\\x0c\\\n\\x0f\\x1f\\x24\\x87\\\n\\x00\\x63\\\n\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x2d\\x00\\x67\\x00\\x6f\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x12\\\n\\x03\\xe3\\x5e\\x27\\\n\\x00\\x61\\\n\\x00\\x6e\\x00\\x69\\x00\\x6d\\x00\\x2d\\x00\\x69\\x00\\x74\\x00\\x65\\x00\\x6d\\x00\\x2d\\x00\\x6c\\x00\\x61\\x00\\x73\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\\n\\x00\\x67\\\n\\x00\\x0b\\\n\\x09\\x69\\xce\\xc7\\\n\\x00\\x72\\\n\\x00\\x65\\x00\\x76\\x00\\x65\\x00\\x72\\x00\\x73\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x0d\\x8b\\xa3\\x27\\\n\\x00\\x66\\\n\\x00\\x6c\\x00\\x61\\x00\\x67\\x00\\x2d\\x00\\x61\\x00\\x6c\\x00\\x6c\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x0d\\x4e\\x7b\\x47\\\n\\x00\\x62\\\n\\x00\\x72\\x00\\x61\\x00\\x6e\\x00\\x63\\x00\\x68\\x00\\x2d\\x00\\x65\\x00\\x6e\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x08\\\n\\x0f\\xc9\\x5a\\x07\\\n\\x00\\x64\\\n\\x00\\x69\\x00\\x66\\x00\\x66\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x04\\x1e\\x6e\\xa7\\\n\\x00\\x71\\\n\\x00\\x75\\x00\\x65\\x00\\x72\\x00\\x79\\x00\\x2d\\x00\\x6e\\x00\\x6f\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x01\\x62\\x37\\x87\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x6e\\x00\\x6f\\x00\\x70\\x00\\x61\\x00\\x74\\x00\\x68\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x05\\xca\\x11\\x67\\\n\\x00\\x76\\\n\\x00\\x69\\x00\\x65\\x00\\x77\\x00\\x2d\\x00\\x68\\x00\\x65\\x00\\x6c\\x00\\x70\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x09\\\n\\x0a\\x7c\\x84\\xc7\\\n\\x00\\x63\\\n\\x00\\x67\\x00\\x53\\x00\\x70\\x00\\x79\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x0b\\x02\\x38\\x47\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x63\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x06\\x9b\\x1b\\x27\\\n\\x00\\x63\\\n\\x00\\x6f\\x00\\x6c\\x00\\x6f\\x00\\x72\\x00\\x73\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x0d\\xb7\\xa8\\xe7\\\n\\x00\\x6c\\\n\\x00\\x6f\\x00\\x63\\x00\\x61\\x00\\x6c\\x00\\x2d\\x00\\x64\\x00\\x69\\x00\\x72\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x01\\x63\\x24\\xa7\\\n\\x00\\x63\\\n\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x2d\\x00\\x6f\\x00\\x6b\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x0b\\xb1\\x5f\\xc7\\\n\\x00\\x73\\\n\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2d\\x00\\x74\\x00\\x72\\x00\\x65\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x0b\\xbb\\x27\\xc7\\\n\\x00\\x74\\\n\\x00\\x72\\x00\\x65\\x00\\x65\\x00\\x2d\\x00\\x6e\\x00\\x65\\x00\\x77\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x02\\x60\\x5e\\xc7\\\n\\x00\\x74\\\n\\x00\\x72\\x00\\x65\\x00\\x65\\x00\\x2d\\x00\\x6c\\x00\\x6f\\x00\\x61\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x11\\\n\\x0d\\xaa\\xd0\\xe7\\\n\\x00\\x73\\\n\\x00\\x65\\x00\\x6c\\x00\\x65\\x00\\x63\\x00\\x74\\x00\\x2d\\x00\\x75\\x00\\x70\\x00\\x64\\x00\\x61\\x00\\x74\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\\n\\x00\\x0d\\\n\\x03\\xb1\\x9e\\x27\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x6e\\x00\\x6f\\x00\\x64\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x09\\\n\\x08\\xd8\\xb0\\xc7\\\n\\x00\\x6d\\\n\\x00\\x65\\x00\\x72\\x00\\x67\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x07\\\n\\x0d\\xae\\x57\\xa7\\\n\\x00\\x76\\\n\\x00\\x74\\x00\\x6b\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x08\\\n\\x05\\x00\\x5a\\x47\\\n\\x00\\x61\\\n\\x00\\x6e\\x00\\x69\\x00\\x6d\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x10\\\n\\x0d\\x4b\\xdc\\x87\\\n\\x00\\x70\\\n\\x00\\x61\\x00\\x74\\x00\\x74\\x00\\x65\\x00\\x72\\x00\\x6e\\x00\\x2d\\x00\\x73\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x00\\x0b\\x1e\\x67\\\n\\x00\\x66\\\n\\x00\\x6c\\x00\\x61\\x00\\x67\\x00\\x2d\\x00\\x6e\\x00\\x6f\\x00\\x6e\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x13\\\n\\x08\\x25\\x31\\x67\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x6e\\x00\\x6f\\x00\\x72\\x00\\x65\\x00\\x61\\x00\\x64\\x00\\x61\\x00\\x62\\x00\\x6c\\x00\\x65\\x00\\x2e\\x00\\x70\\\n\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x0f\\x6a\\x5f\\x67\\\n\\x00\\x61\\\n\\x00\\x6e\\x00\\x69\\x00\\x6d\\x00\\x2d\\x00\\x76\\x00\\x69\\x00\\x65\\x00\\x77\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x0a\\xf8\\xc5\\x27\\\n\\x00\\x64\\\n\\x00\\x69\\x00\\x66\\x00\\x66\\x00\\x2d\\x00\\x61\\x00\\x64\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x04\\xe6\\xcb\\xc7\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x73\\x00\\x72\\x00\\x63\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x1d\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x43\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x0c\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x30\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x10\\\n\\x02\\xc8\\xad\\x87\\\n\\x00\\x75\\\n\\x00\\x6e\\x00\\x64\\x00\\x6f\\x00\\x2d\\x00\\x61\\x00\\x74\\x00\\x2d\\x00\\x6d\\x00\\x6f\\x00\\x73\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x12\\\n\\x03\\x8d\\x5e\\x87\\\n\\x00\\x61\\\n\\x00\\x6e\\x00\\x69\\x00\\x6d\\x00\\x2d\\x00\\x69\\x00\\x74\\x00\\x65\\x00\\x6d\\x00\\x2d\\x00\\x70\\x00\\x72\\x00\\x65\\x00\\x76\\x00\\x2e\\x00\\x70\\x00\\x6e\\\n\\x00\\x67\\\n\\x00\\x0f\\\n\\x0c\\x93\\xb7\\x47\\\n\\x00\\x63\\\n\\x00\\x6c\\x00\\x65\\x00\\x61\\x00\\x72\\x00\\x2d\\x00\\x65\\x00\\x6e\\x00\\x74\\x00\\x72\\x00\\x79\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x07\\xb5\\x57\\x27\\\n\\x00\\x61\\\n\\x00\\x6e\\x00\\x69\\x00\\x6d\\x00\\x2d\\x00\\x64\\x00\\x65\\x00\\x6c\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x10\\\n\\x04\\x91\\xb5\\x87\\\n\\x00\\x63\\\n\\x00\\x6f\\x00\\x6c\\x00\\x6f\\x00\\x72\\x00\\x73\\x00\\x2d\\x00\\x66\\x00\\x69\\x00\\x72\\x00\\x73\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x09\\\n\\x06\\x36\\xa1\\x87\\\n\\x00\\x74\\\n\\x00\\x6f\\x00\\x6f\\x00\\x6c\\x00\\x73\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0b\\\n\\x0d\\x94\\x65\\x87\\\n\\x00\\x61\\\n\\x00\\x72\\x00\\x72\\x00\\x6f\\x00\\x77\\x00\\x5f\\x00\\x52\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x00\\x3b\\xc7\\xe7\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x73\\x00\\x6c\\x00\\x69\\x00\\x73\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x13\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x4d\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x07\\xe0\\xc5\\x27\\\n\\x00\\x64\\\n\\x00\\x69\\x00\\x66\\x00\\x66\\x00\\x2d\\x00\\x64\\x00\\x65\\x00\\x6c\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x05\\xb7\\x84\\x07\\\n\\x00\\x63\\\n\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x2d\\x00\\x73\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x0a\\xad\\x57\\x27\\\n\\x00\\x61\\\n\\x00\\x6e\\x00\\x69\\x00\\x6d\\x00\\x2d\\x00\\x61\\x00\\x64\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x11\\\n\\x06\\x85\\xfb\\x67\\\n\\x00\\x62\\\n\\x00\\x72\\x00\\x61\\x00\\x6e\\x00\\x63\\x00\\x68\\x00\\x2d\\x00\\x6d\\x00\\x6f\\x00\\x72\\x00\\x65\\x00\\x2d\\x00\\x70\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\\n\\x00\\x0c\\\n\\x0c\\x6b\\xc7\\xc7\\\n\\x00\\x73\\\n\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2d\\x00\\x6c\\x00\\x6f\\x00\\x67\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x12\\\n\\x04\\x38\\x1e\\xa7\\\n\\x00\\x61\\\n\\x00\\x6e\\x00\\x69\\x00\\x6d\\x00\\x2d\\x00\\x61\\x00\\x75\\x00\\x74\\x00\\x6f\\x00\\x2d\\x00\\x73\\x00\\x69\\x00\\x64\\x00\\x73\\x00\\x2e\\x00\\x70\\x00\\x6e\\\n\\x00\\x67\\\n\\x00\\x0d\\\n\\x09\\x06\\x23\\x27\\\n\\x00\\x74\\\n\\x00\\x6f\\x00\\x6f\\x00\\x6c\\x00\\x73\\x00\\x76\\x00\\x69\\x00\\x65\\x00\\x77\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x09\\xc3\\x9f\\x07\\\n\\x00\\x6c\\\n\\x00\\x69\\x00\\x6e\\x00\\x6b\\x00\\x2d\\x00\\x76\\x00\\x69\\x00\\x65\\x00\\x77\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x11\\\n\\x0e\\xf8\\x1e\\x27\\\n\\x00\\x68\\\n\\x00\\x5f\\x00\\x66\\x00\\x69\\x00\\x6c\\x00\\x65\\x00\\x5f\\x00\\x63\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x73\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\\n\\x00\\x09\\\n\\x00\\x48\\xad\\x27\\\n\\x00\\x76\\\n\\x00\\x6c\\x00\\x69\\x00\\x6e\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x09\\x09\\x53\\xe7\\\n\\x00\\x73\\\n\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2d\\x00\\x55\\x00\\x53\\x00\\x2d\\x00\\x4d\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x14\\\n\\x09\\xd1\\x0c\\xc7\\\n\\x00\\x6e\\\n\\x00\\x6f\\x00\\x64\\x00\\x65\\x00\\x2d\\x00\\x73\\x00\\x69\\x00\\x64\\x00\\x73\\x00\\x2d\\x00\\x63\\x00\\x6c\\x00\\x6f\\x00\\x73\\x00\\x65\\x00\\x64\\x00\\x2e\\\n\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x12\\\n\\x09\\x9f\\xee\\x87\\\n\\x00\\x73\\\n\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2d\\x00\\x63\\x00\\x6f\\x00\\x6e\\x00\\x76\\x00\\x65\\x00\\x72\\x00\\x74\\x00\\x65\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\\n\\x00\\x67\\\n\\x00\\x0d\\\n\\x0e\\x9b\\xdb\\xe7\\\n\\x00\\x7a\\\n\\x00\\x6f\\x00\\x6f\\x00\\x6d\\x00\\x70\\x00\\x6f\\x00\\x69\\x00\\x6e\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x06\\xf5\\x25\\x07\\\n\\x00\\x6d\\\n\\x00\\x6f\\x00\\x76\\x00\\x65\\x00\\x2d\\x00\\x61\\x00\\x63\\x00\\x74\\x00\\x6f\\x00\\x72\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x12\\\n\\x07\\xb3\\x5e\\xe7\\\n\\x00\\x61\\\n\\x00\\x6e\\x00\\x69\\x00\\x6d\\x00\\x2d\\x00\\x69\\x00\\x74\\x00\\x65\\x00\\x6d\\x00\\x2d\\x00\\x6e\\x00\\x65\\x00\\x78\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\\n\\x00\\x67\\\n\\x00\\x0f\\\n\\x0e\\x7f\\xc5\\x27\\\n\\x00\\x71\\\n\\x00\\x75\\x00\\x65\\x00\\x72\\x00\\x79\\x00\\x2d\\x00\\x61\\x00\\x6e\\x00\\x64\\x00\\x2d\\x00\\x73\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x0a\\x1d\\xe4\\x87\\\n\\x00\\x70\\\n\\x00\\x61\\x00\\x72\\x00\\x65\\x00\\x6e\\x00\\x74\\x00\\x2d\\x00\\x64\\x00\\x69\\x00\\x72\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x16\\\n\\x06\\x21\\x48\\x07\\\n\\x00\\x6e\\\n\\x00\\x6f\\x00\\x64\\x00\\x65\\x00\\x2d\\x00\\x73\\x00\\x69\\x00\\x64\\x00\\x73\\x00\\x2d\\x00\\x6d\\x00\\x6f\\x00\\x64\\x00\\x69\\x00\\x66\\x00\\x69\\x00\\x65\\\n\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x12\\\n\\x05\\xd9\\x3e\\x07\\\n\\x00\\x6e\\\n\\x00\\x6f\\x00\\x64\\x00\\x65\\x00\\x2d\\x00\\x73\\x00\\x69\\x00\\x64\\x00\\x73\\x00\\x2d\\x00\\x6c\\x00\\x65\\x00\\x61\\x00\\x66\\x00\\x2e\\x00\\x70\\x00\\x6e\\\n\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x18\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x44\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x10\\\n\\x01\\xae\\xf4\\x07\\\n\\x00\\x6f\\\n\\x00\\x70\\x00\\x65\\x00\\x72\\x00\\x61\\x00\\x74\\x00\\x65\\x00\\x2d\\x00\\x6c\\x00\\x69\\x00\\x73\\x00\\x74\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x00\\x13\\x84\\x27\\\n\\x00\\x63\\\n\\x00\\x6f\\x00\\x6c\\x00\\x6f\\x00\\x72\\x00\\x73\\x00\\x2d\\x00\\x77\\x00\\x62\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0f\\\n\\x03\\x11\\x78\\x07\\\n\\x00\\x63\\\n\\x00\\x61\\x00\\x6d\\x00\\x65\\x00\\x72\\x00\\x61\\x00\\x2d\\x00\\x73\\x00\\x6e\\x00\\x61\\x00\\x70\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x1a\\\n\\x0f\\xdd\\x18\\xa7\\\n\\x00\\x75\\\n\\x00\\x6e\\x00\\x64\\x00\\x6f\\x00\\x2d\\x00\\x6c\\x00\\x61\\x00\\x73\\x00\\x74\\x00\\x2d\\x00\\x6d\\x00\\x6f\\x00\\x64\\x00\\x69\\x00\\x66\\x00\\x69\\x00\\x63\\\n\\x00\\x61\\x00\\x74\\x00\\x69\\x00\\x6f\\x00\\x6e\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0c\\\n\\x05\\x8f\\x00\\x07\\\n\\x00\\x73\\\n\\x00\\x65\\x00\\x6c\\x00\\x65\\x00\\x63\\x00\\x74\\x00\\x65\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0e\\\n\\x01\\x8f\\x1f\\x07\\\n\\x00\\x75\\\n\\x00\\x6e\\x00\\x73\\x00\\x65\\x00\\x6c\\x00\\x65\\x00\\x63\\x00\\x74\\x00\\x65\\x00\\x64\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x10\\\n\\x03\\x4e\\xdd\\x67\\\n\\x00\\x70\\\n\\x00\\x61\\x00\\x74\\x00\\x74\\x00\\x65\\x00\\x72\\x00\\x6e\\x00\\x2d\\x00\\x6f\\x00\\x70\\x00\\x65\\x00\\x6e\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0a\\\n\\x05\\x09\\xc4\\xc7\\\n\\x00\\x75\\\n\\x00\\x73\\x00\\x65\\x00\\x72\\x00\\x2d\\x00\\x37\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x14\\\n\\x06\\xa7\\x88\\x27\\\n\\x00\\x68\\\n\\x00\\x5f\\x00\\x66\\x00\\x69\\x00\\x6c\\x00\\x65\\x00\\x5f\\x00\\x63\\x00\\x68\\x00\\x65\\x00\\x63\\x00\\x6b\\x00\\x73\\x00\\x5f\\x00\\x30\\x00\\x31\\x00\\x2e\\\n\\x00\\x70\\x00\\x6e\\x00\\x67\\\n\\x00\\x0d\\\n\\x0f\\xd3\\x5f\\x87\\\n\\x00\\x74\\\n\\x00\\x72\\x00\\x65\\x00\\x65\\x00\\x2d\\x00\\x73\\x00\\x61\\x00\\x76\\x00\\x65\\x00\\x2e\\x00\\x70\\x00\\x6e\\x00\\x67\\\n""\n\nqt_resource_struct_v1 = b""\\\n\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\\n\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x02\\\n\\x00\\x00\\x00\\x12\\x00\\x02\\x00\\x00\\x00\\xcd\\x00\\x00\\x00\\x05\\\n\\x00\\x00\\x00\\x22\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x00\\x3c\\x00\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x82\\xa5\\\n\\x00\\x00\\x14\\x6e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xb1\\xac\\\n\\x00\\x00\\x19\\x86\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x35\\x00\\\n\\x00\\x00\\x01\\x6a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xa0\\x4c\\\n\\x00\\x00\\x06\\x38\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x0f\\x97\\\n\\x00\\x00\\x0a\\x8a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xbd\\x3b\\\n\\x00\\x00\\x16\\x36\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xda\\x4f\\\n\\x00\\x00\\x17\\xa8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x0d\\xfd\\\n\\x00\\x00\\x10\\x4c\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x4e\\x1e\\\n\\x00\\x00\\x0f\\x3e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x36\\x8a\\\n\\x00\\x00\\x09\\xd8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xae\\x40\\\n\\x00\\x00\\x03\\x10\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xc9\\x37\\\n\\x00\\x00\\x06\\xee\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x20\\x15\\\n\\x00\\x00\\x12\\x8a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x7f\\x83\\\n\\x00\\x00\\x13\\x42\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x91\\xce\\\n\\x00\\x00\\x02\\xa2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xbe\\xdf\\\n\\x00\\x00\\x1a\\x22\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x42\\x83\\\n\\x00\\x00\\x19\\x60\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x32\\x9c\\\n\\x00\\x00\\x06\\xca\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x1d\\x89\\\n\\x00\\x00\\x07\\xfe\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x79\\xe6\\\n\\x00\\x00\\x13\\x9e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x9b\\x3b\\\n\\x00\\x00\\x0a\\x14\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xb3\\x6b\\\n\\x00\\x00\\x0d\\x3e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x03\\x80\\\n\\x00\\x00\\x0c\\x5a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xef\\x1e\\\n\\x00\\x00\\x15\\x4a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xc7\\x6d\\\n\\x00\\x00\\x0f\\x80\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x3b\\x5a\\\n\\x00\\x00\\x04\\x1e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xe2\\x53\\\n\\x00\\x00\\x03\\xac\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xd9\\x4e\\\n\\x00\\x00\\x19\\xa6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x38\\x46\\\n\\x00\\x00\\x1a\\x44\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x45\\x1c\\\n\\x00\\x00\\x01\\xce\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xaa\\x5c\\\n\\x00\\x00\\x0b\\xb2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xd9\\xb3\\\n\\x00\\x00\\x15\\x70\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xca\\x9d\\\n\\x00\\x00\\x13\\xe6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xa1\\x70\\\n\\x00\\x00\\x0e\\xf8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x2a\\x7c\\\n\\x00\\x00\\x11\\x08\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x5f\\x1a\\\n\\x00\\x00\\x11\\xce\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x70\\x2e\\\n\\x00\\x00\\x12\\x6a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x7c\\x4f\\\n\\x00\\x00\\x17\\x16\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xed\\xee\\\n\\x00\\x00\\x01\\xb0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xa7\\x2f\\\n\\x00\\x00\\x15\\xdc\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xd1\\xfa\\\n\\x00\\x00\\x0d\\x7e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x09\\x74\\\n\\x00\\x00\\x14\\xf8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xbf\\x83\\\n\\x00\\x00\\x05\\xaa\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x02\\x43\\\n\\x00\\x00\\x14\\x32\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xa9\\xf4\\\n\\x00\\x00\\x09\\x7c\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xa5\\x87\\\n\\x00\\x00\\x0c\\xa0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xf5\\xe4\\\n\\x00\\x00\\x0d\\xec\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x13\\xbe\\\n\\x00\\x00\\x08\\x1e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x7d\\x76\\\n\\x00\\x00\\x1a\\x6a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x48\\x2c\\\n\\x00\\x00\\x0b\\x0e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xc9\\x05\\\n\\x00\\x00\\x02\\x04\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xb0\\xda\\\n\\x00\\x00\\x15\\x30\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xc5\\x62\\\n\\x00\\x00\\x0d\\xac\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x0c\\xb0\\\n\\x00\\x00\\x0e\\xde\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x28\\x71\\\n\\x00\\x00\\x04\\x8e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xe9\\x24\\\n\\x00\\x00\\x0f\\xf6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x44\\x43\\\n\\x00\\x00\\x0e\\x8a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x23\\x95\\\n\\x00\\x00\\x16\\x58\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xdc\\xd1\\\n\\x00\\x00\\x0c\\xba\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xf7\\xf2\\\n\\x00\\x00\\x09\\xfa\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xb0\\x54\\\n\\x00\\x00\\x03\\x36\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xcc\\x19\\\n\\x00\\x00\\x19\\x46\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x2e\\xf5\\\n\\x00\\x00\\x09\\x62\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xa2\\x60\\\n\\x00\\x00\\x03\\xce\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xdd\\x2d\\\n\\x00\\x00\\x0c\\x40\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xeb\\x7d\\\n\\x00\\x00\\x15\\x16\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xc2\\x3e\\\n\\x00\\x00\\x08\\xa2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x8f\\xbe\\\n\\x00\\x00\\x07\\x0a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x64\\x69\\\n\\x00\\x00\\x08\\xe0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x95\\xca\\\n\\x00\\x00\\x03\\x76\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xd2\\x60\\\n\\x00\\x00\\x00\\xde\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x94\\x64\\\n\\x00\\x00\\x05\\x16\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xf5\\x05\\\n\\x00\\x00\\x01\\x50\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x9e\\x47\\\n\\x00\\x00\\x0c\\xd4\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xfb\\x03\\\n\\x00\\x00\\x01\\x96\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xa3\\xb1\\\n\\x00\\x00\\x05\\x76\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xfd\\x0a\\\n\\x00\\x00\\x0e\\x28\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x19\\x17\\\n\\x00\\x00\\x0b\\x88\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xd6\\x70\\\n\\x00\\x00\\x11\\x86\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x6a\\x64\\\n\\x00\\x00\\x10\\xe4\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x5c\\x7a\\\n\\x00\\x00\\x02\\xc2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xc2\\xcb\\\n\\x00\\x00\\x0d\\x12\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x00\\x9c\\\n\\x00\\x00\\x1a\\x04\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x3f\\x4e\\\n\\x00\\x00\\x03\\xe8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xdf\\x2d\\\n\\x00\\x00\\x07\\xe0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x78\\x46\\\n\\x00\\x00\\x02\\x5e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xb9\\x3b\\\n\\x00\\x00\\x16\\x90\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xe3\\x08\\\n\\x00\\x00\\x0b\\x28\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xcd\\xc7\\\n\\x00\\x00\\x0b\\x28\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xcb\\x0f\\\n\\x00\\x00\\x12\\xae\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x82\\x04\\\n\\x00\\x00\\x02\\x40\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xb6\\x7a\\\n\\x00\\x00\\x19\\x1c\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x2b\\xe3\\\n\\x00\\x00\\x0b\\xf0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xdf\\x6c\\\n\\x00\\x00\\x04\\x6a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xe7\\xef\\\n\\x00\\x00\\x18\\xea\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x27\\xd6\\\n\\x00\\x00\\x16\\x02\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xd4\\xa2\\\n\\x00\\x00\\x16\\xd0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xea\\x01\\\n\\x00\\x00\\x10\\x10\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x47\\xd1\\\n\\x00\\x00\\x13\\x08\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x8d\\xb8\\\n\\x00\\x00\\x0c\\x12\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xe1\\x88\\\n\\x00\\x00\\x1a\\x84\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x4a\\x39\\\n\\x00\\x00\\x04\\xc8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xee\\x8c\\\n\\x00\\x00\\x0f\\x10\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x2c\\x72\\\n\\x00\\x00\\x08\\x74\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x85\\x9f\\\n\\x00\\x00\\x18\\x58\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x1d\\xa1\\\n\\x00\\x00\\x0f\\xa2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x3e\\xba\\\n\\x00\\x00\\x10\\xc4\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x5a\\x1b\\\n\\x00\\x00\\x0a\\xec\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xc5\\x7d\\\n\\x00\\x00\\x07\\xb2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x71\\xe0\\\n\\x00\\x00\\x18\\x7a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x20\\x8b\\\n\\x00\\x00\\x15\\xbe\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xce\\x92\\\n\\x00\\x00\\x07\\x76\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x6e\\x35\\\n\\x00\\x00\\x06\\x82\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x16\\x99\\\n\\x00\\x00\\x16\\x72\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xe0\\x5b\\\n\\x00\\x00\\x0b\\x68\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xd3\\x83\\\n\\x00\\x00\\x00\\xf8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x97\\x12\\\n\\x00\\x00\\x14\\x8e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xb4\\xc3\\\n\\x00\\x00\\x09\\x96\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xa7\\x90\\\n\\x00\\x00\\x01\\xee\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xac\\xee\\\n\\x00\\x00\\x0a\\xae\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xbf\\xb9\\\n\\x00\\x00\\x14\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xa3\\x84\\\n\\x00\\x00\\x0a\\x60\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xb9\\x97\\\n\\x00\\x00\\x17\\x40\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xf1\\x64\\\n\\x00\\x00\\x17\\xc0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x0f\\x2e\\\n\\x00\\x00\\x09\\x1c\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x9b\\x90\\\n\\x00\\x00\\x10\\x62\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x50\\xbc\\\n\\x00\\x00\\x05\\x56\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xf8\\x75\\\n\\x00\\x00\\x0e\\xa4\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x26\\xac\\\n\\x00\\x00\\x11\\xf8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x72\\xe5\\\n\\x00\\x00\\x11\\x4e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x64\\xea\\\n\\x00\\x00\\x05\\xee\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x09\\x0e\\\n\\x00\\x00\\x18\\x0e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x16\\xe9\\\n\\x00\\x00\\x0b\\xc8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xdc\\x07\\\n\\x00\\x00\\x17\\x60\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xf4\\x5c\\\n\\x00\\x00\\x07\\x32\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x68\\x05\\\n\\x00\\x00\\x17\\xe0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x13\\xb4\\\n\\x00\\x00\\x07\\x50\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x6a\\x91\\\n\\x00\\x00\\x09\\x3e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x9e\\x55\\\n\\x00\\x00\\x0e\\x66\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x1f\\x79\\\n\\x00\\x00\\x0b\\x46\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xd0\\x7f\\\n\\x00\\x00\\x04\\xa8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xeb\\x31\\\n\\x00\\x00\\x10\\x26\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x4a\\x8d\\\n\\x00\\x00\\x18\\xc8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x26\\x55\\\n\\x00\\x00\\x00\\xb2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x90\\xe6\\\n\\x00\\x00\\x04\\xf0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xf1\\xb0\\\n\\x00\\x00\\x12\\xce\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x85\\x8e\\\n\\x00\\x00\\x09\\xb6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xab\\xa5\\\n\\x00\\x00\\x16\\xb2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xe6\\xb4\\\n\\x00\\x00\\x02\\xf6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xc5\\xf2\\\n\\x00\\x00\\x05\\x90\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xff\\xca\\\n\\x00\\x00\\x14\\xda\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xbc\\xe8\\\n\\x00\\x00\\x00\\x50\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x86\\xdc\\\n\\x00\\x00\\x12\\xe6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x8a\\xde\\\n\\x00\\x00\\x06\\x0a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x0c\\x4a\\\n\\x00\\x00\\x08\\x60\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x82\\x22\\\n\\x00\\x00\\x02\\x7e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xbc\\x77\\\n\\x00\\x00\\x13\\x60\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x94\\x69\\\n\\x00\\x00\\x13\\x80\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x98\\x55\\\n\\x00\\x00\\x11\\x2c\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x62\\x75\\\n\\x00\\x00\\x16\\xf8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xeb\\x11\\\n\\x00\\x00\\x0e\\x42\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x1c\\x8f\\\n\\x00\\x00\\x05\\xd2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x06\\x39\\\n\\x00\\x00\\x0f\\xd6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x41\\x19\\\n\\x00\\x00\\x15\\x9a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xcd\\x4a\\\n\\x00\\x00\\x07\\xc6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x75\\x22\\\n\\x00\\x00\\x0c\\x7c\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xf2\\x8b\\\n\\x00\\x00\\x0f\\x5c\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x39\\x9f\\\n\\x00\\x00\\x00\\x98\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x8e\\x93\\\n\\x00\\x00\\x00\\x7a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x8a\\x28\\\n\\x00\\x00\\x14\\x48\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xad\\xbc\\\n\\x00\\x00\\x12\\x32\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x78\\xb0\\\n\\x00\\x00\\x12\\x14\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x75\\xb0\\\n\\x00\\x00\\x16\\x1a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xd8\\x3a\\\n\\x00\\x00\\x13\\xbe\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x9d\\x6a\\\n\\x00\\x00\\x14\\x1e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xa6\\x55\\\n\\x00\\x00\\x08\\xbc\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x91\\xbd\\\n\\x00\\x00\\x13\\x22\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x90\\x92\\\n\\x00\\x00\\x02\\x1e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xb2\\xe5\\\n\\x00\\x00\\x08\\xfa\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x98\\x71\\\n\\x00\\x00\\x10\\xa6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x57\\x5e\\\n\\x00\\x00\\x06\\x56\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x13\\xe3\\\n\\x00\\x00\\x11\\x66\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x67\\x09\\\n\\x00\\x00\\x08\\x38\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x7f\\x86\\\n\\x00\\x00\\x0a\\xcc\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xc2\\x5a\\\n\\x00\\x00\\x05\\x30\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xf7\\x64\\\n\\x00\\x00\\x0a\\x38\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xb6\\x6c\\\n\\x00\\x00\\x07\\x8e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x6f\\x48\\\n\\x00\\x00\\x10\\x82\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x54\\x05\\\n\\x00\\x00\\x18\\xa4\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x23\\x38\\\n\\x00\\x00\\x18\\x38\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x1b\\x2b\\\n\\x00\\x00\\x04\\x46\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xe4\\xc4\\\n\\x00\\x00\\x01\\x2a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x9a\\xe6\\\n\\x00\\x00\\x0d\\x5e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x06\\x06\\\n\\x00\\x00\\x17\\x80\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xf7\\x2f\\\n\\x00\\x00\\x11\\xb0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x6c\\xd3\\\n\\x00\\x00\\x03\\x50\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xcf\\x3f\\\n\\x00\\x00\\x03\\x90\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xd5\\xa2\\\n\\x00\\x00\\x0c\\xee\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xfe\\x27\\\n\\x00\\x00\\x14\\xba\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xb9\\x2e\\\n\\x00\\x00\\x0d\\xce\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x10\\x7f\\\n\\x00\\x00\\x12\\x54\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x79\\xe5\\\n\\x00\\x00\\x1a\\xb2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x54\\x50\\\n\\x00\\x00\\x19\\xca\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x3c\\x6b\\\n\\x00\\x00\\x06\\xa4\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x1a\\x7c\\\n\\x00\\x00\\x0e\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x15\\xca\\\n""\n\nqt_resource_struct_v2 = b""\\\n\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x02\\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x00\\x12\\x00\\x02\\x00\\x00\\x00\\xcd\\x00\\x00\\x00\\x05\\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x00\\x22\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x00\\x3c\\x00\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x82\\xa5\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x14\\x6e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xb1\\xac\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x19\\x86\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x35\\x00\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x01\\x6a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xa0\\x4c\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x06\\x38\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x0f\\x97\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0a\\x8a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xbd\\x3b\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x16\\x36\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xda\\x4f\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x17\\xa8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x0d\\xfd\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x10\\x4c\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x4e\\x1e\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0f\\x3e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x36\\x8a\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x09\\xd8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xae\\x40\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x03\\x10\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xc9\\x37\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x06\\xee\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x20\\x15\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x12\\x8a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x7f\\x83\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x13\\x42\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x91\\xce\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x02\\xa2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xbe\\xdf\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x1a\\x22\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x42\\x83\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x19\\x60\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x32\\x9c\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x06\\xca\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x1d\\x89\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x07\\xfe\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x79\\xe6\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x13\\x9e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x9b\\x3b\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0a\\x14\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xb3\\x6b\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0d\\x3e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x03\\x80\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0c\\x5a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xef\\x1e\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x15\\x4a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xc7\\x6d\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0f\\x80\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x3b\\x5a\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x04\\x1e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xe2\\x53\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x03\\xac\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xd9\\x4e\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x19\\xa6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x38\\x46\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x1a\\x44\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x45\\x1c\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x01\\xce\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xaa\\x5c\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0b\\xb2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xd9\\xb3\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x15\\x70\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xca\\x9d\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x13\\xe6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xa1\\x70\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0e\\xf8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x2a\\x7c\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x11\\x08\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x5f\\x1a\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x11\\xce\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x70\\x2e\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x12\\x6a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x7c\\x4f\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x17\\x16\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xed\\xee\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x01\\xb0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xa7\\x2f\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x15\\xdc\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xd1\\xfa\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0d\\x7e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x09\\x74\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x14\\xf8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xbf\\x83\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x05\\xaa\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x02\\x43\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x14\\x32\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xa9\\xf4\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x09\\x7c\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xa5\\x87\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0c\\xa0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xf5\\xe4\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0d\\xec\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x13\\xbe\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x08\\x1e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x7d\\x76\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x1a\\x6a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x48\\x2c\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0b\\x0e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xc9\\x05\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x02\\x04\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xb0\\xda\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x15\\x30\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xc5\\x62\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0d\\xac\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x0c\\xb0\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0e\\xde\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x28\\x71\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x04\\x8e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xe9\\x24\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0f\\xf6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x44\\x43\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0e\\x8a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x23\\x95\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x16\\x58\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xdc\\xd1\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0c\\xba\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xf7\\xf2\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x09\\xfa\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xb0\\x54\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x03\\x36\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xcc\\x19\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x19\\x46\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x2e\\xf5\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x09\\x62\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xa2\\x60\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x03\\xce\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xdd\\x2d\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0c\\x40\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xeb\\x7d\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x15\\x16\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xc2\\x3e\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x08\\xa2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x8f\\xbe\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x07\\x0a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x64\\x69\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x08\\xe0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x95\\xca\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x03\\x76\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xd2\\x60\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x00\\xde\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x94\\x64\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x05\\x16\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xf5\\x05\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x01\\x50\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x9e\\x47\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0c\\xd4\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xfb\\x03\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x01\\x96\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xa3\\xb1\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x05\\x76\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xfd\\x0a\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0e\\x28\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x19\\x17\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0b\\x88\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xd6\\x70\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x11\\x86\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x6a\\x64\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x10\\xe4\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x5c\\x7a\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x02\\xc2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xc2\\xcb\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0d\\x12\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x00\\x9c\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x1a\\x04\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x3f\\x4e\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x03\\xe8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xdf\\x2d\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x07\\xe0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x78\\x46\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x02\\x5e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xb9\\x3b\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x16\\x90\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xe3\\x08\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0b\\x28\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xcd\\xc7\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0b\\x28\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xcb\\x0f\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x12\\xae\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x82\\x04\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x02\\x40\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xb6\\x7a\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x19\\x1c\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x2b\\xe3\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0b\\xf0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xdf\\x6c\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x04\\x6a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xe7\\xef\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x18\\xea\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x27\\xd6\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x16\\x02\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xd4\\xa2\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x16\\xd0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xea\\x01\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x10\\x10\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x47\\xd1\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x13\\x08\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x8d\\xb8\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0c\\x12\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xe1\\x88\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x1a\\x84\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x4a\\x39\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x04\\xc8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xee\\x8c\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0f\\x10\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x2c\\x72\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x08\\x74\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x85\\x9f\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x18\\x58\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x1d\\xa1\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0f\\xa2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x3e\\xba\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x10\\xc4\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x5a\\x1b\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0a\\xec\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xc5\\x7d\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x07\\xb2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x71\\xe0\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x18\\x7a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x20\\x8b\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x15\\xbe\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xce\\x92\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x07\\x76\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x6e\\x35\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x06\\x82\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x16\\x99\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x16\\x72\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xe0\\x5b\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0b\\x68\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xd3\\x83\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x00\\xf8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x97\\x12\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x14\\x8e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xb4\\xc3\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x09\\x96\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xa7\\x90\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x01\\xee\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xac\\xee\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0a\\xae\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xbf\\xb9\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x14\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xa3\\x84\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0a\\x60\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xb9\\x97\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x17\\x40\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xf1\\x64\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x17\\xc0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x0f\\x2e\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x09\\x1c\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x9b\\x90\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x10\\x62\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x50\\xbc\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x05\\x56\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xf8\\x75\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0e\\xa4\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x26\\xac\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x11\\xf8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x72\\xe5\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x11\\x4e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x64\\xea\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x05\\xee\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x09\\x0e\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x18\\x0e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x16\\xe9\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0b\\xc8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xdc\\x07\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x17\\x60\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xf4\\x5c\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x07\\x32\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x68\\x05\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x17\\xe0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x13\\xb4\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x07\\x50\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x6a\\x91\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x09\\x3e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x9e\\x55\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0e\\x66\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x1f\\x79\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0b\\x46\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xd0\\x7f\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x04\\xa8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xeb\\x31\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x10\\x26\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x4a\\x8d\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x18\\xc8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x26\\x55\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x00\\xb2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x90\\xe6\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x04\\xf0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xf1\\xb0\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x12\\xce\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x85\\x8e\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x09\\xb6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xab\\xa5\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x16\\xb2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xe6\\xb4\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x02\\xf6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xc5\\xf2\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x05\\x90\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xff\\xca\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x14\\xda\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xbc\\xe8\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x00\\x50\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x86\\xdc\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x12\\xe6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x8a\\xde\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x06\\x0a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x0c\\x4a\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x08\\x60\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x82\\x22\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x02\\x7e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xbc\\x77\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x13\\x60\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x94\\x69\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x13\\x80\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x98\\x55\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x11\\x2c\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x62\\x75\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x16\\xf8\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xeb\\x11\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0e\\x42\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x1c\\x8f\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x05\\xd2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x06\\x39\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0f\\xd6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x41\\x19\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x15\\x9a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xcd\\x4a\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x07\\xc6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x75\\x22\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0c\\x7c\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xf2\\x8b\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0f\\x5c\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x39\\x9f\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x00\\x98\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x8e\\x93\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x00\\x7a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x8a\\x28\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x14\\x48\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xad\\xbc\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x12\\x32\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x78\\xb0\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x12\\x14\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x75\\xb0\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x16\\x1a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xd8\\x3a\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x13\\xbe\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x9d\\x6a\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x14\\x1e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xa6\\x55\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x08\\xbc\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x91\\xbd\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x13\\x22\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x90\\x92\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x02\\x1e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xb2\\xe5\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x08\\xfa\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x98\\x71\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x10\\xa6\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x57\\x5e\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x06\\x56\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x13\\xe3\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x11\\x66\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x67\\x09\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x08\\x38\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x7f\\x86\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0a\\xcc\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xc2\\x5a\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x05\\x30\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xf7\\x64\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0a\\x38\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xb6\\x6c\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x07\\x8e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x6f\\x48\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x10\\x82\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x54\\x05\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x18\\xa4\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x23\\x38\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x18\\x38\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x1b\\x2b\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x04\\x46\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xe4\\xc4\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x01\\x2a\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x9a\\xe6\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0d\\x5e\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x06\\x06\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x17\\x80\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xf7\\x2f\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x11\\xb0\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x6c\\xd3\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x03\\x50\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xcf\\x3f\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x03\\x90\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\xd5\\xa2\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0c\\xee\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\xfe\\x27\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x14\\xba\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\xb9\\x2e\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0d\\xce\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x10\\x7f\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x12\\x54\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x79\\xe5\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x1a\\xb2\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x54\\x50\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x19\\xca\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x3c\\x6b\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x06\\xa4\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x1a\\x7c\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n\\x00\\x00\\x0e\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x15\\xca\\\n\\x00\\x00\\x01\\x67\\x9d\\x69\\x8e\\xc0\\\n""\n\nqt_version = [int(v) for v in QtCore.qVersion().split(\'.\')]\nif qt_version < [5, 8, 0]:\n    rcc_version = 1\n    qt_resource_struct = qt_resource_struct_v1\nelse:\n    rcc_version = 2\n    qt_resource_struct = qt_resource_struct_v2\n\ndef qInitResources():\n    QtCore.qRegisterResourceData(rcc_version, qt_resource_struct, qt_resource_name, qt_resource_data)\n\ndef qCleanupResources():\n    QtCore.qUnregisterResourceData(rcc_version, qt_resource_struct, qt_resource_name, qt_resource_data)\n\nqInitResources()\n'"
CGNS/NAV/__init__.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n# \n""""""\n implementation info:\n\n   All Q7***Window(s) are created using Qt Designer,\n   each produces a Ui_Q7***Window as Cython class,\n   which is wrapped by a Q7*** python class.\n   This latter is the one to use with Python.\n   Same with stuff like Widgets.\n\n   The Q7fingerPrint is the actual class with all CGNS tree info,\n   including the list of views and selections. It is more or less\n   the model itself but with some of local stuff and I want two\n   separate classes.\n""""""\nfrom __future__ import unicode_literals\n\ndef show(T, *args):\n    from CGNS.NAV.moption import Q7OptionContext as OCTXT\n    import qtpy.QtCore as QtCore\n    from qtpy.QtWidgets import QApplication, QSplashScreen\n    from qtpy.QtGui import QPixmap\n    from CGNS.NAV.wcontrol import Q7Main\n\n    from CGNS.NAV.wfile import Q7File\n    from CGNS.NAV.winfo import Q7Info\n    from CGNS.NAV.woption import Q7Option\n    from CGNS.NAV.wtree import Q7Tree\n    from CGNS.NAV.mtree import Q7TreeModel\n    from CGNS.NAV.wfingerprint import Q7FingerPrint\n    from CGNS.NAV.wquery import Q7Query\n    from CGNS.NAV.whelp import Q7Help\n\n    def dummy(*args):\n        pass\n\n    app = QApplication(args)\n\n    app.updateViews = dummy\n    app.removeTreeStatus = dummy\n    app.addTreeStatus = dummy\n    app.loadOptions = dummy\n    app.addLine = dummy\n    app.delLine = dummy\n    app.transientRecurse = False\n    app.transientVTK = False\n\n    app.verbose = True\n    app._application = app\n    app.wOption = Q7Option(app)\n    app.wOption.reset()\n    app.processEvents()\n\n    fgprint = Q7FingerPrint(app, \'.\', \'<run-time>\', T, [], [])\n    Q7TreeModel(fgprint.index)\n    child = Q7Tree(app, \'/\', fgprint.index)\n\n    for wg in [child.bSave, child.bQueryView, child.bSaveAs, child.bInfo,\n               child.bCheck, child.bCheckList, child.bClearChecks,\n               child.bPatternView, child.bToolsView, child.bFormView,\n               child.bSelectLinkSrc, child.bSelectLinkDst,\n               child.bBackControl]:\n        wg.setEnabled(False)\n\n    fgprint._status = [Q7FingerPrint.STATUS_MODIFIED]\n    child.show()\n\n    app.exec_()\n\n# --- last line\n'"
CGNS/NAV/moption.py,0,"b'# -*- coding: utf-8 -*-\n#\n#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\nimport shutil\nimport os\nimport os.path as op\nimport sys\nimport imp\nimport tempfile\n\nfrom time import gmtime, strftime\nfrom CGNS.pyCGNSconfig import version as __vid__\nfrom CGNS.pyCGNSconfig import HAS_MSW \n\nWINOPTS = HAS_MSW\n\nimport CGNS.PAT.cgnskeywords as CGK\n\nfrom qtpy.QtGui import QFont, QFontDatabase, QTextCursor\n\n# User file paths:\nconf_path = op.join(op.expanduser(\'~\'), "".CGNS.NAV"")\ntmp_path = ""/tmp""\nif sys.platform == \'win32\':\n    tmp_path = os.environ[\'TEMP\']\n\n\n# -----------------------------------------------------------------\ndef removeSubDirAndFiles(path):\n    shutil.rmtree(path)\n\n\ndef copyOneFile(src, dst):\n    f1 = open(src, \'r\')\n    l1 = f1.readlines()\n    f1.close()\n    if op.exists(dst):\n        os.remove(dst)\n    f2 = open(dst, \'w\')\n    f2.writelines(l1)\n    f2.close()\n\n\n# -----------------------------------------------------------------\nclass Q7OptionContext(object):\n    Q_VAR_NODE = \'NODE\'\n    Q_VAR_PARENT = \'PARENT\'\n    Q_VAR_NAME = \'NAME\'\n    Q_VAR_VALUE = \'VALUE\'\n    Q_VAR_CGNSTYPE = \'SIDSTYPE\'\n    Q_VAR_CHILDREN = \'CHILDREN\'\n    Q_VAR_TREE = \'TREE\'\n    Q_VAR_PATH = \'PATH\'\n    Q_VAR_LINKS = \'LINKS\'\n    Q_VAR_SKIPS = \'SKIPS\'\n    Q_VAR_RESULT = \'RESULT\'\n    Q_VAR_USER = \'ARGS\'\n    Q_VAR_SELECTED = \'SELECTED\'\n    Q_VAR_RESULT_LIST = \'__Q7_QUERY_RESULT__\'\n\n    Q_SCRIPT_PRE = """"""\nimport CGNS.PAT.cgnskeywords as CGK\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnslib as CGL\nimport numpy\n""""""\n\n    Q_FILE_PRE = """"""\nimport CGNS.PAT.cgnskeywords as CGK\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.NAV.moption as CGO\nimport numpy\n""""""\n\n    Q_SCRIPT_POST = """"""\ntry:\n  %s[0]=%s\nexcept NameError:\n  %s[0]=None\n"""""" % (Q_VAR_RESULT_LIST, Q_VAR_RESULT, Q_VAR_RESULT_LIST)\n\n    _depends = {\n        \'MaxDisplayDataSize\': [\'DoNotDisplayLargeData\'],\n        \'MaxLoadDataSize\': [\'DoNotLoadLargeArrays\'],\n        \'MaxRecursionLevel\': [\'RecursiveTreeDisplay\'],\n    }\n    _HasProPackage = True\n    CHLoneTrace = False\n    QueryNoException = False\n    ActivateMultiThreading = False\n    NAVTrace = False\n    AutoExpand = False\n    RecursiveTreeDisplay = False\n    OneViewPerTreeNode = False\n    ShowTableIndex = True\n    RecursiveSIDSPatternsLoad = True\n    DoNotDisplayLargeData = False\n    CheckOnTheFly = False\n    FollowLinksAtLoad = True\n    DoNotFollowLinksAtSave = True\n    AddCurrentDirInSearch = True\n    AddRootDirInSearch = True\n    DoNotLoadLargeArrays = True\n    ShowSIDSStatusColumn = True\n    ForceSIDSLegacyMapping = False\n    ForceFortranFlag = True\n    FilterCGNSFiles = True\n    FilterHDFFiles = True\n    FilterOwnFiles = True\n    FileUpdateRemovesChildren = True\n    TransposeArrayForView = True\n    Show1DAsPlain = True\n    ShowSIDSColumn = True\n    ShowLinkColumn = True\n    ShowSelectColumn = True\n    ShowUserColumn = True\n    ShowCheckColumn = True\n    ShowShapeColumn = True\n    ShowDataTypeColumn = True\n    UserCSS = """"\n    SelectionListDirectory = op.normpath(op.join(conf_path, \'selections\'))\n    QueriesDirectory = op.normpath(op.join(conf_path, \'queries\'))\n    FunctionsDirectory = op.normpath(op.join(conf_path, \'functions\'))\n    SnapShotDirectory = op.normpath(op.join(conf_path, \'snapshots\'))\n    _HistoryFileName = op.normpath(op.join(conf_path, \'historyfile.py\'))\n    _OptionsFileName = op.normpath(op.join(conf_path, \'optionsfile.py\'))\n    _QueriesDefaultFile = \'default.py\'\n    _FunctionsDefaultFile = \'default.py\'\n    IgnoredMessages = []\n    LinkSearchPathList = []\n    ProfileSearchPathList = []\n    GrammarSearchPathList = []\n    ValKeyList = [\'sample\']\n    CGNSFileExtension = [\'.cgns\', \'.adf\']\n    HDFFileExtension = [\'.hdf\', \'.hdf5\']\n    OwnFileExtension = [\'.cgh\']\n    MaxLoadDataSize = 1000\n    MaxDisplayDataSize = 1000\n    MaxRecursionLevel = 7\n    ADFConversionCom = \'cgnsconvert\'\n    TemporaryDirectory = op.normpath(tmp_path)\n    _ConvertADFFiles = True\n    _ToolName = \'CGNS.NAV\'\n    _ToolVersion = \'%s\' % __vid__\n\n    _CopyrightNotice = u""""""\nCopyright (c) Marc Poinot <br>\nCopyright (c) Safran - www.safran-group.com<br><br>\nCopyright (c) Onera - www.onera.fr<br><br>\n<b>all other copyrights and used versions listed below</b>\n\n<hr>\n<h3>Contributors (alphabetic order)</h3>\n<table>\n<tr><td>Florent Cayr\xc3\xa9</td><td>-SNECMA, France</td></tr>\n<tr><td>Alexandre Fayolle</td><td>-LOGILAB, France</td></tr>\n<tr><td>Xavier Garnaud</td><td>-SAFRAN, France</td></tr>\n<tr><td>Loic Hauchard</td><td>-ONERA (Student INSA Rouen, France)</td></tr>\n<tr><td>Elise H\xc3\xa9naux</td><td>-ONERA (Student FIIFO Orsay, France)</td></tr>\n<tr><td>Gr\xc3\xa9gory Laheurte</td><td>-ONERA, France</td></tr>\n<tr><td>Pierre-Jacques Legay</td><td>-BERTIN, France</td></tr>\n<tr><td>Bill Perkins</td><td>-Pacific Northwest Ntl Lab, U.S.A.</td></tr>\n<tr><td>Mickael Philit</td><td>-SAFRAN, France</td></tr>\n<tr><td>J\xc3\xa9r\xc3\xb4me Regis</td><td>-STILOG, France</td></tr>\n<tr><td>Benoit Rodriguez</td><td>-ONERA, France</td></tr>\n<tr><td>Tristan Soubri\xc3\xa9</td><td>-ANDHEO, France</td></tr>\n<tr><td>Francois Thirifays</td><td>-CENAERO, Belgique</td></tr>\n<tr><td>Simon Verley</td><td>-ONERA, France</td></tr>\n<tr><td>Ching-Yang Wang</td><td>-U.S.A.</td></tr>\n</table>\n\n<h2>Copyrights & Versions</h2>\n<hr>\n%(pycgnsversion)s<br>\nAll <b>pyCGNS</b> \nrights reserved in accordance with GPL v2 <br><br>\n<b>NO WARRANTY :</b><br>\nCheck GPL v2 sections 15 and 16\nabout <font color=red>loss of data or corrupted data</font><br>\n<hr>\n%(pyqtversion)s<br>\nPyQt Copyright (c) Riverbank Computing Limited. <br>\nUsage within the terms of the GPL v2.<br>\nAll Rights Reserved.<br>\n<hr>\n%(qtversion)s<br>\nQt Copyright (c)<br>\nThe Qt4 Library is (c) 2011 Nokia Corporation and/or its subsidiary(-ies),\nand is licensed under the GNU Lesser General Public License version 2.1\nwith Nokia Qt LGPL exception version 1.1. <br>\n<hr>\n%(pythonversion)s<br>\nPython Copyright (c)<br>\nCopyright (c) 2001-2011 Python Software Foundation.<br>\nAll Rights Reserved.<br>\n<br>\nCopyright (c) 2000 BeOpen.com.<br>\nAll Rights Reserved.<br>\n<br>\nCopyright (c) 1995-2001 Corporation for National Research Initiatives.<br>\nAll Rights Reserved.<br>\n<br>\nCopyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.<br>\nAll Rights Reserved.<br>\n<br>\n<hr>\n%(numpyversion)s<br>\nNumpy Copyright (c)<br>\nCopyright (c) 2005, NumPy Developers<br>\n<hr>\n%(hdf5version)s<br>\nHDF5 Copyright (c)<br>\nHDF5 (Hierarchical Data Format 5) Software Library and Utilities<br>\nCopyright 2006-2013 by The HDF Group.<br>\nNCSA HDF5 (Hierarchical Data Format 5) Software Library and Utilities<br>\nCopyright 1998-2006 by the Board of Trustees of the University of Illinois.<br>\n<hr>\n%(vtkversion)s<br>\nVTK Copyright (c)<br>\nCopyright (c) 1993-2008 Ken Martin, Will Schroeder, Bill Lorensen <br>\nAll rights reserved.<br>\n<hr>\n%(cythonversion)s<br>\nCython Copyright (c)<br>\n(c) Copyright 2012, Stefan Behnel, Robert Bradshaw, Dag Sverre Seljebotn,\nGreg Ewing, William Stein, Gabriel Gellner, et al.\n<hr>\nIcons Copyright (c)<br>\nAll these nice icons are provided or are modified versions of original\nicons provided by Mark James (Birmingham, UK).<br>\nPlease visit his web site: http://www.famfamfam.com/<br>\n\n""""""\n    #__fv = QFont(QFontDatabase().families()[0]) # Spyder-like but needs a QApplication\n    __fv = QFont(\'Courier new\')\n    __fc = QFont(\'Courier new\')\n\n    _Label_Font = QFont(__fv)\n    _Button_Font = QFont(__fv)\n    _Table_Font = QFont(__fc)\n    _Edit_Font = QFont(__fc)\n    _RName_Font = QFont(__fc)\n    _NName_Font = QFont(__fc)\n    _NName_Font.setBold(True)\n\n    _Default_Fonts = {\n        \'Label_Family\': _Label_Font.family(),\n        \'Label_Size\': _Label_Font.pointSize(),\n        \'Label_Bold\': False,\n        \'Label_Italic\': False,\n        \'Table_Family\': _Table_Font.family(),\n        \'Table_Size\': _Table_Font.pointSize(),\n        \'Table_Bold\': False,\n        \'Table_Italic\': False,\n        \'Edit_Family\': _Edit_Font.family(),\n        \'Edit_Size\': _Edit_Font.pointSize(),\n        \'Edit_Bold\': False,\n        \'Edit_Italic\': False,\n        \'Button_Family\': _Button_Font.family(),\n        \'Button_Size\': _Button_Font.pointSize(),\n        \'Button_Bold\': False,\n        \'Button_Italic\': False,\n        \'RName_Family\': _RName_Font.family(),\n        \'RName_Size\': _RName_Font.pointSize(),\n        \'RName_Bold\': False,\n        \'RName_Italic\': False,\n        \'NName_Family\': _NName_Font.family(),\n        \'NName_Size\': _NName_Font.pointSize(),\n        \'NName_Bold\': False,\n        \'NName_Italic\': True,\n    }\n\n    UserColors = [\n        \'gray\',\n        \'red\',\n        \'green\',\n        \'blue\',\n        \'orange\',\n        None,\n        None,\n        None,\n        None,\n        None,\n    ]\n\n    _ColorList = {\n        \'cold_grey\': (0.5000, 0.5400, 0.5300),\n        \'dim_grey\': (0.4118, 0.4118, 0.4118),\n        \'grey\': (0.7529, 0.7529, 0.7529),\n        \'light_grey\': (0.8275, 0.8275, 0.8275),\n        \'slate_grey\': (0.4392, 0.5020, 0.5647),\n        \'slate_grey_dark\': (0.1843, 0.3098, 0.3098),\n        \'slate_grey_light\': (0.4667, 0.5333, 0.6000),\n        \'warm_grey\': (0.5000, 0.5000, 0.4100),\n        \'black\': (0.0000, 0.0000, 0.0000),\n        \'ivory_black\': (0.1600, 0.1400, 0.1300),\n        \'lamp_black\': (0.1800, 0.2800, 0.2300),\n        \'alizarin_crimson\': (0.8900, 0.1500, 0.2100),\n        \'brick\': (0.6100, 0.4000, 0.1200),\n        \'coral\': (1.0000, 0.4980, 0.3137),\n        \'coral_light\': (0.9412, 0.5020, 0.5020),\n        \'deep_pink\': (1.0000, 0.0784, 0.5765),\n        \'firebrick\': (0.6980, 0.1333, 0.1333),\n        \'geranium_lake\': (0.8900, 0.0700, 0.1900),\n        \'hot_pink\': (1.0000, 0.4118, 0.7059),\n        \'light_salmon\': (1.0000, 0.6275, 0.4784),\n        \'madder_lake_deep\': (0.8900, 0.1800, 0.1900),\n        \'maroon\': (0.6902, 0.1882, 0.3765),\n        \'pink\': (1.0000, 0.7529, 0.7961),\n        \'pink_light\': (1.0000, 0.7137, 0.7569),\n        \'raspberry\': (0.5300, 0.1500, 0.3400),\n        \'rose_madder\': (0.8900, 0.2100, 0.2200),\n        \'salmon\': (0.9804, 0.5020, 0.4471),\n        \'tomato\': (1.0000, 0.3882, 0.2784),\n        \'beige\': (0.6400, 0.5800, 0.5000),\n        \'brown\': (0.5000, 0.1647, 0.1647),\n        \'brown_madder\': (0.8600, 0.1600, 0.1600),\n        \'brown_ochre\': (0.5300, 0.2600, 0.1200),\n        \'burlywood\': (0.8706, 0.7216, 0.5294),\n        \'burnt_sienna\': (0.5400, 0.2100, 0.0600),\n        \'burnt_umber\': (0.5400, 0.2000, 0.1400),\n        \'chocolate\': (0.8235, 0.4118, 0.1176),\n        \'deep_ochre\': (0.4500, 0.2400, 0.1000),\n        \'flesh\': (1.0000, 0.4900, 0.2500),\n        \'flesh_ochre\': (1.0000, 0.3400, 0.1300),\n        \'gold_ochre\': (0.7800, 0.4700, 0.1500),\n        \'greenish_umber\': (1.0000, 0.2400, 0.0500),\n        \'khaki\': (0.9412, 0.9020, 0.5490),\n        \'khaki_dark\': (0.7412, 0.7176, 0.4196),\n        \'light_beige\': (0.9608, 0.9608, 0.8627),\n        \'peru\': (0.8039, 0.5216, 0.2471),\n        \'rosy_brown\': (0.7373, 0.5608, 0.5608),\n        \'raw_sienna\': (0.7800, 0.3800, 0.0800),\n        \'raw_umber\': (0.4500, 0.2900, 0.0700),\n        \'sepia\': (0.3700, 0.1500, 0.0700),\n        \'sienna\': (0.6275, 0.3216, 0.1765),\n        \'saddle_brown\': (0.5451, 0.2706, 0.0745),\n        \'sandy_brown\': (0.9569, 0.6431, 0.3765),\n        \'tan\': (0.8235, 0.7059, 0.5490),\n        \'van_dyke_brown\': (0.3700, 0.1500, 0.0200),\n        \'cadmium_orange\': (1.0000, 0.3800, 0.0100),\n        \'carrot\': (0.9300, 0.5700, 0.1300),\n        \'dark_orange\': (1.0000, 0.5490, 0.0000),\n        \'mars_orange\': (0.5900, 0.2700, 0.0800),\n        \'mars_yellow\': (0.8900, 0.4400, 0.1000),\n        \'orange\': (1.0000, 0.5000, 0.0000),\n        \'orange_red\': (1.0000, 0.2706, 0.0000),\n        \'yellow_ochre\': (0.8900, 0.5100, 0.0900),\n        \'aureoline_yellow\': (1.0000, 0.6600, 0.1400),\n        \'banana\': (0.8900, 0.8100, 0.3400),\n        \'cadmium_lemon\': (1.0000, 0.8900, 0.0100),\n        \'cadmium_yellow\': (1.0000, 0.6000, 0.0700),\n        \'cadmium_yellow_light\': (1.0000, 0.6900, 0.0600),\n        \'gold\': (1.0000, 0.8431, 0.0000),\n        \'goldenrod\': (0.8549, 0.6471, 0.1255),\n        \'goldenrod_dark\': (0.7216, 0.5255, 0.0431),\n        \'goldenrod_light\': (0.9804, 0.9804, 0.8235),\n        \'goldenrod_pale\': (0.9333, 0.9098, 0.6667),\n        \'light_goldenrod\': (0.9333, 0.8667, 0.5098),\n        \'melon\': (0.8900, 0.6600, 0.4100),\n        \'naples_yellow_deep\': (1.0000, 0.6600, 0.0700),\n        \'yellow\': (1.0000, 1.0000, 0.0000),\n        \'yellow_light\': (1.0000, 1.0000, 0.8784),\n        \'chartreuse\': (0.4980, 1.0000, 0.0000),\n        \'chrome_oxide_green\': (0.4000, 0.5000, 0.0800),\n        \'cinnabar_green\': (0.3800, 0.7000, 0.1600),\n        \'cobalt_green\': (0.2400, 0.5700, 0.2500),\n        \'emerald_green\': (0.0000, 0.7900, 0.3400),\n        \'forest_green\': (0.1333, 0.5451, 0.1333),\n        \'green\': (0.0000, 1.0000, 0.0000),\n        \'green_dark\': (0.0000, 0.3922, 0.0000),\n        \'green_pale\': (0.5961, 0.9843, 0.5961),\n        \'green_yellow\': (0.6784, 1.0000, 0.1843),\n        \'lawn_green\': (0.4863, 0.9882, 0.0000),\n        \'lime_green\': (0.1961, 0.8039, 0.1961),\n        \'mint\': (0.7400, 0.9900, 0.7900),\n        \'olive\': (0.2300, 0.3700, 0.1700),\n        \'olive_drab\': (0.4196, 0.5569, 0.1373),\n        \'olive_green_dark\': (0.3333, 0.4196, 0.1843),\n        \'permanent_green\': (0.0400, 0.7900, 0.1700),\n        \'sap_green\': (0.1900, 0.5000, 0.0800),\n        \'sea_green\': (0.1804, 0.5451, 0.3412),\n        \'sea_green_dark\': (0.5608, 0.7373, 0.5608),\n        \'sea_green_medium\': (0.2353, 0.7020, 0.4431),\n        \'sea_green_light\': (0.1255, 0.6980, 0.6667),\n        \'spring_green\': (0.0000, 1.0000, 0.4980),\n        \'spring_green_medium\': (0.0000, 0.9804, 0.6039),\n        \'terre_verte\': (0.2200, 0.3700, 0.0600),\n        \'viridian_light\': (0.4300, 1.0000, 0.4400),\n        \'yellow_green\': (0.6039, 0.8039, 0.1961),\n        \'aquamarine\': (0.4980, 1.0000, 0.8314),\n        \'aquamarine_medium\': (0.4000, 0.8039, 0.6667),\n        \'cyan\': (0.0000, 1.0000, 1.0000),\n        \'cyan_white\': (0.8784, 1.0000, 1.0000),\n        \'turquoise\': (0.2510, 0.8784, 0.8157),\n        \'turquoise_dark\': (0.0000, 0.8078, 0.8196),\n        \'turquoise_medium\': (0.2824, 0.8196, 0.8000),\n        \'turquoise_pale\': (0.6863, 0.9333, 0.9333),\n        \'alice_blue\': (0.9412, 0.9725, 1.0000),\n        \'blue\': (0.0000, 0.0000, 1.0000),\n        \'blue_light\': (0.6784, 0.8471, 0.9020),\n        \'blue_medium\': (0.0000, 0.0000, 0.8039),\n        \'cadet\': (0.3725, 0.6196, 0.6275),\n        \'cobalt\': (0.2400, 0.3500, 0.6700),\n        \'cornflower\': (0.3922, 0.5843, 0.9294),\n        \'cerulean\': (0.0200, 0.7200, 0.8000),\n        \'dodger_blue\': (0.1176, 0.5647, 1.0000),\n        \'indigo\': (0.0300, 0.1800, 0.3300),\n        \'manganese_blue\': (0.0100, 0.6600, 0.6200),\n        \'midnight_blue\': (0.0980, 0.0980, 0.4392),\n        \'navy\': (0.0000, 0.0000, 0.5020),\n        \'peacock\': (0.2000, 0.6300, 0.7900),\n        \'powder_blue\': (0.6902, 0.8784, 0.9020),\n        \'royal_blue\': (0.2549, 0.4118, 0.8824),\n        \'slate_blue\': (0.4157, 0.3529, 0.8039),\n        \'slate_blue_dark\': (0.2824, 0.2392, 0.5451),\n        \'slate_blue_light\': (0.5176, 0.4392, 1.0000),\n        \'slate_blue_medium\': (0.4824, 0.4078, 0.9333),\n        \'sky_blue\': (0.5294, 0.8078, 0.9216),\n        \'sky_blue_deep\': (0.0000, 0.7490, 1.0000),\n        \'sky_blue_light\': (0.5294, 0.8078, 0.9804),\n        \'steel_blue\': (0.2745, 0.5098, 0.7059),\n        \'steel_blue_light\': (0.6902, 0.7686, 0.8706),\n        \'turquoise_blue\': (0.0000, 0.7800, 0.5500),\n        \'ultramarine\': (0.0700, 0.0400, 0.5600),\n        \'blue_violet\': (0.5412, 0.1686, 0.8863),\n        \'cobalt_violet_deep\': (0.5700, 0.1300, 0.6200),\n        \'magenta\': (1.0000, 0.0000, 1.0000),\n        \'orchid\': (0.8549, 0.4392, 0.8392),\n        \'orchid_dark\': (0.6000, 0.1961, 0.8000),\n        \'orchid_medium\': (0.7294, 0.3333, 0.8275),\n        \'permanent_red_violet\': (0.8600, 0.1500, 0.2700),\n        \'plum\': (0.8667, 0.6275, 0.8667),\n        \'purple\': (0.6275, 0.1255, 0.9412),\n        \'purple_medium\': (0.5765, 0.4392, 0.8588),\n        \'ultramarine_violet\': (0.3600, 0.1400, 0.4300),\n        \'violet\': (0.5600, 0.3700, 0.6000),\n        \'violet_dark\': (0.5804, 0.0000, 0.8275),\n        \'violet_red\': (0.8157, 0.1255, 0.5647),\n        \'violet_red_medium\': (0.7804, 0.0824, 0.5216),\n        \'violet_red_pale\': (0.8588, 0.4392, 0.5765),\n    }\n\n    _ReservedNames = CGK.cgnsnames\n    _ReservedTypes = CGK.cgnstypes\n    _SortedTypeList = CGK.sortedtypelist\n\n    _UsualQueries = [\n\n# ---------------------------------------------------------------------------\n# INDENTATION IS SIGNIFICANT\n# ---------------------------------------------------------------------------\n    \n# --- Search -----------------------------------------------------------\n# last two booleans: Update tree, has args\n(\'001. Node name\',\n\'Search by\',\n\'RESULT=(NAME==ARGS[0])\',\n""""""\nSearch by\nNode name\n\nSearch all nodes with the exact NAME as argument.\n\nThe argument name need not to be a tuple or to have quotes,\nall the following values are ok and would match the NAME <i>ZoneType</i>:\n\nZoneType\n\'ZoneType\'\n(\'ZoneType\',)\n"""""", False, True),\n\n(\'002. Wildcard node name\',\n\'Search by\',\n""""""import fnmatch\nRESULT=fnmatch.fnmatchcase(NAME,ARGS[0])\n"""""",\n""""""\nSearch by\nWildcard node name\n\nSearch all nodes with the wildcard NAME as argument.\n\nWarning: the <b>argument name</b> should be quoted:\n\n\'BC*\' is ok\n\nBC* would fail\n"""""", False, True),\n\n(\'003. Node type\',\n\'Search by\',\n\'RESULT=(SIDSTYPE==ARGS[0])\',\n""""""search all nodes with argument SIDS type."""""", False, True),\n\n(\'005. Node value\',\n\'Search by\',\n""""""\nfrom numpy import *\ntarget=eval(ARGS[0])\nif   (VALUE is None and target is None): RESULT=True\nelif (VALUE is None)            : RESULT=False\nelif (target.dtype!=VALUE.dtype): RESULT=False\nelif (target.size!=VALUE.size):   RESULT=False\nelif (target.shape!=VALUE.shape): RESULT=False\nelif (target.tolist()==VALUE.tolist()): RESULT=True\nelse:                             RESULT=False\n"""""",\n""""""search all nodes with argument value. The compare is performed\nusing a straightforward \'==\' and then relies on the Python/Numpy comparison\noperator."""""", False, True),\n\n(\'010. Node with truncated data\',\n\'Search by\',\n\'if (PATH in SKIPS): RESULT=PATH\',\n""""""search all nodes with truncated or unread data, for example if you have set\nthe maximum data argument for the load, or if you release the memory of a\nnode."""""", False, False),\n\n(\'004. Wildcard node type\',\n\'Search by\',\n""""""\nimport fnmatch\nRESULT=fnmatch.fnmatchcase(SIDSTYPE,ARGS[0])\n"""""",\n""""""\nSearch by\nWildcard node type\n\nSearch all nodes with wildcard argument SIDS type.\nWarning: the <b>argument type</b> should be quoted:\n\n\'Turb*\' is ok\n\nTurb* would fail\n"""""", False, True),\n\n(\'011. Non-MT UserDefinedData\',\n\'Search by\',\n""""""\nif (    (SIDSTYPE==CGK.UserDefinedData_ts)\n    and (CGU.getValueDataType(NODE)!=CGK.MT)):\n  RESULT=True\n"""""",\n""""""\nSearch by\nValued UserDefinedData\n\nSearch all <b>UserDefinedData_t</b> nodes with a non-<b>MT</b> data type.\n\nNo argument.\n"""""", False, False),\n# -----------------------------------------------------------------------------\n(\'012. FamilyName\',\n\'Search by\',\n""""""\nif (SIDSTYPE in [CGK.FamilyName_ts, CGK.AdditionalFamilyName_ts]):\n    RESULT=True\n"""""",\n""""""\nSearch by\nAll <b>FamilyName_t</b> and <b>AdditionalFamilyname_t</b> nodes.\n"""""", False, False),\n# -----------------------------------------------------------------------------\n(\'013. FamilyName reference\',\n\'Search by\',\n""""""\nif ((SIDSTYPE in [CGK.FamilyName_ts, CGK.AdditionalFamilyName_ts]) and\n    (VALUE.tostring().decode(\'ascii\')==ARGS[0])):\n    RESULT=True\n"""""",\n""""""\nSearch by<br>\nReference to a FamilyName<br>\n \nSearch all <b>FamilyName</b> nodes with the arg string (plain).<br>\nThe string arg should be a valid Python string such as:<br>\n \n\'BLADE(1)\'<br>\n\'Surface ext 1A\'<br>\n\'Left/Wing/Flap\'<br>\n \n"""""", False, True),\n# -----------------------------------------------------------------------------\n(\'014. Zones\',\n\'Search by\',\n""""""\nif (SIDSTYPE in [CGK.Zone_ts]):\n    RESULT=True\n"""""",\n""""""\nSearch by\nAll <b>Zone_t</b> nodes.\n"""""", False, False),\n# -----------------------------------------------------------------------------\n(\'015. Zones Structured\',\n\'Search by\',\n""""""\nif (SIDSTYPE in [CGK.Zone_ts]):\n    t=CGU.hasChildName(NODE,CGK.ZoneType_s)\n    if (t is None or CGU.stringValueMatches(t,CGK.Structured_s)):\n      RESULT=True\n"""""",\n""""""\nSearch by\nAll <b>Zone_t</b> with Structured <b>ZoneType</b> nodes.\n"""""", False, False),\n# -----------------------------------------------------------------------------\n(\'016. Zones Unstructured\',\n\'Search by\',\n""""""\nif (SIDSTYPE in [CGK.Zone_ts]):\n    t=CGU.hasChildName(NODE,CGK.ZoneType_s)\n    if (t is not None and CGU.stringValueMatches(t,CGK.Unstructured_s)):\n      RESULT=True\n"""""",\n""""""\nSearch by\nAll <b>Zone_t</b> with Unstructured <b>ZoneType</b> nodes.\n"""""", False, False),\n# -----------------------------------------------------------------------------\n(\'017. BCs\',\n\'Search by\',\n""""""\nif (SIDSTYPE in [CGK.BC_ts]):\n    RESULT=True\n"""""",\n""""""\nSearch by\nAll <b>BC_t</b> nodes.\n"""""", False, False),\n\n# --- Replace\n# -----------------------------------------------------------------------------\n(\'050. Valued UserDefinedData\',\n\'Replace\',\n""""""\nif (     (SIDSTYPE==CGK.UserDefinedData_ts)\n     and (CGU.getValueDataType(NODE)!=CGK.MT)):\n  NODE[3]=CGK.DataArray_ts\n  RESULT=True\n"""""",\n""""""\nReplace\nValued UserDefinedData\n \nSearch all <b>UserDefinedData_t</b> nodes with a non-<b>MT</b> data type\nand replace them as <b>DataArray_t</b>."""""", False, False),\n\n(\'051. Substitute Zone name\',\n\'Replace\',\n""""""\nl1=len(ARGS[0])\nif ((SIDSTYPE==CGK.Zone_ts) and (NAME[:l1]==ARGS[0])):\n  NODE[0]=ARGS[1]+NODE[0][l1:]\n  RESULT=True\n\nif (CGU.getValueDataType(NODE)==CGK.C1):\n  v=VALUE.tostring().decode(\'ascii\')\n  if (v[:l1]==ARGS[0]):\n    v=ARGS[1]+v[l1:]\n    NODE[1]=CGU.setStringAsArray(v)\n    RESULT=True\n"""""",\n""""""\n<h1>Replace</h1>\n<h2>Substitute Zone name</h2>\n<p>\nSearch all <b>Zone_t</b> nodes with a name pattern, then rename the\nzone with the substitution pattern. Any other reference in the tree,\nas a connectivity value for example, is subsitued as well.\n<p>\nArgument is a tuple with the first pattern to find and\nthe second as the subsitution pattern. For example:\n<pre>\n(\'domain.\',\'zone#\')\n</pre>\n"""""", True, True),\n\n# -----------------------------------------------------------------------------\n(\'052. FamilySpecified BC type rewrite\',\n\'Replace\',\n""""""\nif ((SIDSTYPE in [CGK.FamilyName_ts, CGK.AdditionalFamilyName_ts]) and\n    (VALUE.tostring().decode(\'ascii\')==ARGS[0]) and (PARENT[3]==CGK.BC_ts)):\n    PARENT[1]=CGU.setStringAsArray(CGK.FamilySpecified_s)\n    RESULT=True\n"""""",\n""""""\n<h1>Replace</h1>\n<h2>FamilySpecified BC type rewrite</h2>\n<p>\nSearch all <b>FamilyName BC</b> nodes with the arg string (plain).<br>\nThe string arg should be a valid Python string such as:<br>\n\n\'BLADE(1)\'<br>\n\'Surface ext 1A\'<br>\n\'Left/Wing/Flap\'<br>\n\n<p>\nOnce found, the parent <b>BC_t</b> value is forced to <b>FamilySpecified</b>\n\n"""""", True, True),\n\n# --- Find Elements_t\n(\'020. Elements\',\n\'Find Elements_t\',\n""""""if (SIDSTYPE==CGK.Elements_ts):\n  RESULT=True\n"""""",\n""""""Find all <b>Elements_t</b> nodes """""", False, False),\n\n(\'021. Elements QUAD\',\n\'Find Elements_t\',\n""""""if (SIDSTYPE==CGK.Elements_ts):\n  RESULT=VALUE[0] in (CGK.QUAD_4, CGK.QUAD_8, CGK.QUAD_9)\n"""""",\n""""""Find all <b>Elements_t</b> nodes of type <b>QUAD</b>"""""", False, False),\n\n(\'022. Elements TRI\',\n\'Find Elements_t\',\n""""""if (SIDSTYPE==CGK.Elements_ts):\n  RESULT=VALUE[0] in (CGK.TRI_3, CGK.TRI_6)\n"""""",\n""""""Find all <b>Elements_t</b> nodes of type <b>TRI</b>"""""", False, False),\n\n(\'023. Elements NGON\',\n\'Find Elements_t\',\n""""""if (SIDSTYPE==CGK.Elements_ts):\n  RESULT=VALUE[0] in (CGK.NGON_n,)\n"""""",\n""""""Find all <b>Elements_t</b> nodes of type <b>NGON_n</b>"""""", False, False),\n\n(\'024. Elements HEXA\',\n\'Find Elements_t\',\n""""""if (SIDSTYPE==CGK.Elements_ts):\n  RESULT=VALUE[0] in (CGK.HEXA_8, CGK.HEXA_20, CGK.HEXA_27)\n"""""",\n""""""Find all <b>Elements_t</b> nodes of type <b>HEXA</b>"""""", False, False),\n\n(\'025. Elements TETRA\',\n\'Find Elements_t\',\n""""""if (SIDSTYPE==CGK.Elements_ts):\n  RESULT=VALUE[0] in (CGK.TETRA_4, CGK.TETRA_10)\n"""""",\n""""""Find all <b>Elements_t</b> nodes of type <b>TETRA</b>"""""", False, False),\n\n# --- External Tools\n(\'030. Create Cartesian Zone\',\n\'External Tools\',\n""""""\nif (SIDSTYPE==CGK.CGNSTree_ts):\n    import Generator.PyTree as G\n    z=G.cart((0.,0.,0.), (0.1,0.1,0.2), (10,11,12))\n    b=None\n    base=\'BASE\'\n    if (len(ARGS)>0):\n      base=ARGS[0]\n      b=CGU.hasChildName(NODE,base)\n    if (b is None):\n      base=CGU.checkUniqueChildName(NODE,base)\n      b=CGL.newCGNSBase(NODE,base,3,3)\n    CGU.addChild(b,z)\n"""""",\n""""""Example of Cartesian zone creation using Cassiopee.\nThe first argument is the base name, if ommitted a name is generated."""""",\nTrue, True),\n(\'031. Bounding boxes\',\n\'External Tools\',\n""""""\nif (SIDSTYPE==CGK.Zone_ts):\n    import Generator as G\n    RESULT=G.bbox(NODE)\n"""""",\n""""""Example of Bounding box computation using Cassiopee""""""),\n(\'100. .Solver#Compute children\',\n\'Edit filters\',\n""""""\nif (PARENT[0]==\'.Solver#Compute\'):\n    RESULT=PATH\n"""""",\n""""""Selects all children nodes of the .Solver#Compute elsA userdefined node"""""",\nFalse, False),\n(\'101. ReferenceState children\',\n\'Edit filters\',\n""""""\nif (PARENT[0]==\'ReferenceState\'):\n    RESULT=PATH\n"""""",\n""""""Selects all children nodes of the ReferenceState node"""""",\nFalse, False),\n(\'102. .Solver#Param children\',\n\'Edit filters\',\n""""""\nif (PARENT[0]==\'.Solver#Param\'):\n   RESULT=PATH\n"""""",\n""""""Selects all children nodes of the .Solver#Param elsA userdefined node"""""",\nFalse, False),\n    \n    ]\n\n    # -----------------------------------------------------------------\n    @classmethod\n    def _setOption(cls, name, value):\n        setattr(cls, name, value)\n\n    @classmethod\n    def _writeFile(cls, tag, name, udata, filename, prefix=""""):\n        gdate = strftime(""%Y-%m-%d %H:%M:%S"", gmtime())\n        s = u""""""# %s - %s - Generated %s\\n# coding: utf-8\\n%s\\nimport PyQt5\\n%s="""""" % \\\n            (cls._ToolName, tag, gdate, prefix, name)\n        if isinstance(udata, dict):\n            s += u""""""{\\n""""""\n            for k in udata:\n                #          print \'K\',k,\'V\',udata[k],\'T\',type(udata[k])\n                if k[0] != \'_\':\n                    val = \'%s\' % str(udata[k])\n                    if isinstance(udata[k], str):\n                        val = u\'u""""""%s""""""\' % repr(udata[k]).lstrip(""u\'"").lstrip(""\'"").rstrip(""\'"") # Error\n                    elif isinstance(udata[k], bytes):\n                        val = u\'u""""""%s""""""\' % repr(udata[k].decode(\'utf-8\')).lstrip(""u\'"").lstrip(""\'"").rstrip(""\'"")\n                    if not isinstance(k, str):\n                        uk = u""u\'%s\'"" % repr(k.decode(\'utf-8\')).lstrip(""u\'"").lstrip(""\'"").rstrip(""\'"")\n                    else:\n                        uk = u""u\'%s\'"" % repr(k).lstrip(""u\'"").lstrip(""\'"").rstrip(""\'"")\n                    s += """"""%s:%s,\\n"""""" % (uk, val)\n            s += u""""""}\\n\\n# --- last line\\n""""""\n        elif isinstance(udata, list):\n            s += u""""""[\\n""""""\n            for k in udata:\n                s += u""""""%s,\\n"""""" % (k)\n            s += u""""""]\\n\\n# --- last line\\n""""""\n        cls._crpath(filename)\n        with open(filename, \'w+\') as f:\n            f.write(s)\n\n\n    @classmethod\n    def _readFile(cls, name, filename):\n        dpath = tempfile.mkdtemp()\n        if not op.exists(filename):\n            return None\n        try:\n            copyOneFile(filename, \'%s/%s.py\' % (dpath, name))\n        except IOError:\n            removeSubDirAndFiles(dpath)\n            return None\n        sprev = sys.path\n        sys.path = [dpath] + sys.path\n        try:\n            fp, pathname, description = imp.find_module(name)\n        except IndexError:  # ImportError:\n            return None\n        try:\n            mod = imp.load_module(name, fp, pathname, description)\n        finally:\n            if fp:\n                fp.close()\n        removeSubDirAndFiles(dpath)\n        sys.path = sprev\n        return mod\n\n    @classmethod\n    def _crpath(cls, path):\n        p = op.dirname(path)\n        if op.exists(p):\n            return True\n        os.makedirs(p)\n\n    @classmethod\n    def _trpath(cls, path):\n        return op.normpath(op.expanduser(op.expandvars(path)))\n\n    @classmethod\n    def _writeHistory(cls, control):\n        filename = cls._trpath(cls._HistoryFileName)\n        cls._writeFile(\'History\', \'history\', control._history, filename)\n\n    @classmethod\n    def _readHistory(cls, control):\n        filename = cls._trpath(cls._HistoryFileName)\n        m = cls._readFile(\'history\', filename)\n        if m is None:\n            return None\n        try:\n            return m.history\n        except:\n            return None\n\n    @classmethod\n    def _writeOptions(cls, control):\n        filename = cls._trpath(cls._OptionsFileName)\n        cls._writeFile(\'User options\', \'options\', control._options, filename)\n\n    @classmethod\n    def _readOptions(cls, control):\n        filename = cls._trpath(cls._OptionsFileName)\n        m = cls._readFile(\'options\', filename)\n        if m is None:\n            return None\n        try:\n            return m.options\n        except:\n            return None\n\n    @classmethod\n    def _writeQueries(cls, control, q):\n        filename = cls._trpath(op.join(cls.QueriesDirectory, cls._QueriesDefaultFile))\n        cls._writeFile(\'User queries\', \'queries\', q, filename, cls.Q_FILE_PRE)\n\n    @classmethod\n    def _readQueries(cls, control):\n        filename = cls._trpath(op.join(cls.QueriesDirectory, cls._QueriesDefaultFile))\n        m = cls._readFile(\'queries\', filename)\n        if m is None:\n            return None\n        try:\n            return m.queries\n        except:\n            return None\n\n    @classmethod\n    def _writeFunctions(cls, control, f):\n        filename = cls._trpath(op.join(cls.FunctionsDirectory, cls._FunctionsDefaultFile))\n        cls._writeFile(\'User functions\', \'functions\', f, filename, cls.Q_FILE_PRE)\n\n    @classmethod\n    def _readFunctions(cls, control):\n        filename = cls._trpath(op.join(cls.FunctionsDirectory, cls._FunctionsDefaultFile))\n        m = cls._readFile(\'functions\', filename)\n        if m is None:\n            return None\n        try:\n            return m.Q7UserFunction\n        except:\n            return None\n\n    def __init__(self):\n        pass\n\n    def __getitem__(self, name):\n        if name[0] != \'_\':\n            return Q7OptionContext.__dict__[name]\n        return None\n\n    def __setitem__(self, name, value):\n        if name[0] != \'_\':\n            setattr(Q7OptionContext, name, value)\n        return None\n\n    def __iter__(self):\n        for o in dir(self):\n            if o[0] != \'_\':\n                yield o\n\n    def _nextName(self):\n        for o in dir(self):\n            if o[0] != \'_\':\n                yield o\n\n# -----------------------------------------------------------------\n'"
CGNS/NAV/pqueries.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\ndef asQuery(f):\n    def prepostquery(node, parent, tree, links, skips, path, args, selected):\n        global CGK\n        global CGU\n        global CGL\n        global numpy\n        global NODE\n        global PARENT\n        global NAME\n        global VALUE\n        global CGNSTYPE\n        global CHILDREN\n        global TREE\n        global PATH\n        global LINKS\n        global SKIPS\n        global RESULT\n        global USER\n        global SELECTED\n        global RESULT_LIST\n\n        import CGNS.PAT.cgnskeywords as CGK\n        import CGNS.PAT.cgnsutils as CGU\n        import CGNS.PAT.cgnslib as CGL\n        import CGNS.MAP as CGM\n        import numpy\n\n        QueryNoException = True\n\n        NODE = node\n        PARENT = parent\n        NAME = node[0]\n        VALUE = node[1]\n        CGNSTYPE = node[3]\n        CHILDREN = node[2]\n        TREE = tree\n        PATH = path\n        LINKS = links\n        SKIPS = skips\n        USER = args\n        SELECTED = selected\n        RESULT_LIST = [False]\n\n        if QueryNoException:\n            RESULT = f()\n        else:\n            try:\n                RESULT = f()\n                if RESULT not in [True, False]:\n                    RESULT = False\n                RESULT_LIST[0] = RESULT\n            except Exception:\n                RESULT_LIST[0] = False\n\n        return RESULT\n\n    return prepostquery\n\n\n# -----------------------------------------------------------------\ndef parseAndSelect(tree, node, parent, links, skips, path, query, args, selected,\n                   result):\n    path = path + \'/\' + node[0]\n    Q = query(node, parent, tree, links, skips, path, args, selected)\n    R = []\n    if Q:\n        if result:\n            R = [Q]\n        else:\n            R = [path]\n    for C in node[2]:\n        R += parseAndSelect(tree, C, node, links, skips, path, query, args, selected,\n                            result)\n    return R\n\n\n# -----------------------------------------------------------------\ndef runQuery(tree, links, paths, query, args, selected=None, mode=True):\n    """"""Recursively applies a function on all nodes of a tree, breadth-first\n    parse, results returned in a list (breadth-first order of the list).\n\n    tree,links,paths: the three restults returned by the CGNS.MAP.load call\n    query: the query funciton as a name (string) or a callable object (such as\n    a function)\n    args: a tuple of args to pass to the query (for example a node name to\n    look for)\n    selected: the RETURNED list of values\n    mode: True (defaut) a boolean list is returned for every node in the tree,\n    False a list of the (True) paths is returned\n    \n    The match between results and paths can be performed with help of the\n    breadth-first paths order function in CGNS.PAT\n    """"""\n    if selected is None:\n        selected = []\n    v = None\n    try:\n        if args:\n            v = eval(args)\n        if (v is not None) and not isinstance(v, tuple):\n            v = (v,)\n    except NameError:\n        v = (str(args),)\n    except:\n        pass\n    _args = v\n    if isinstance(query, (str, bytes)):\n        query = eval(query)\n    result = parseAndSelect(tree, tree, [None, None, [], None], links, paths, \'\',\n                            query, _args, selected, mode)\n    return result\n'"
CGNS/NAV/script.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nfrom builtins import (str, bytes, range, dict)\n\nimport sys\nimport time\n\nfrom CGNS.pyCGNSconfig import HAS_MSW\n\nif HAS_MSW:\n    import ctypes\n    myappid = u\'pycgns.pycgns.cglook.version\' # arbitrary string\n    ctypes.windll.shell32.SetCurrentProcessExplicitAppUserModelID(myappid)\n\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nfrom qtpy import QtCore\nfrom qtpy.QtWidgets import QApplication, QSplashScreen\nfrom qtpy.QtGui import QPixmap\n#from qtpy.QtGui import *\nfrom CGNS.NAV.wcontrol import Q7Main\n\nsplash = None\nwcontrol = None\n\ndef closeSplash():\n    global splash\n    global wcontrol\n    splash.finish(wcontrol)\n    \n# -----------------------------------------------------------------\ndef run(args=[], files=[], datasets=[],\n        flags=(False, False, False, False, False, False, False),\n        ppath=None, query=None):\n    hidecontrol = False\n    global splash\n    global wcontrol\n    \n    if flags[4]:\n        from CGNS.NAV.wquery import Q7Query\n        Q7Query.loadUserQueries()\n        Q7Query.fillQueries()\n        ql = Q7Query.queriesNamesList()\n        print(\'# CGNS.NAV available queries:\')\n        for q in ql:\n            print(\' \', q)\n    else:\n        app = QApplication(args)\n        if not flags[5]:\n            pixmap = QPixmap("":/images/splash.png"")\n            splash = QSplashScreen(pixmap, QtCore.Qt.WindowStaysOnTopHint)\n            splash.show()\n            splash.showMessage(""Release v%s"" % OCTXT._ToolVersion,\n                               QtCore.Qt.AlignHCenter | QtCore.Qt.AlignBottom)\n            timer = QtCore.QTimer.singleShot(3000,closeSplash)\n        app.processEvents()\n        Q7Main.verbose = flags[2]\n        wcontrol = Q7Main()\n        wcontrol._application = app\n        wcontrol.setOptionValue(\'NAVTrace\', flags[2])\n        wcontrol.transientRecurse = flags[0]\n        wcontrol.transientVTK = flags[3]\n        wcontrol.query = query\n        wcontrol._T(\'start\')\n        wcontrol.setDefaults()\n        if flags[1]:\n            wcontrol.loadlast()\n            hidecontrol = flags[6]\n        if files:\n            for ff in files:\n                wcontrol.loadfile(ff)\n            hidecontrol = flags[6]\n        if datasets:\n            for dd in datasets:\n                wcontrol.loadCompleted(dataset_name=\'FFFF\',\n                                       dataset_base=\'BASE\',\n                                       dataset_tree=dd,\n                                       dataset_references=[],\n                                       dataset_paths=[])\n            hidecontrol = flags[6]\n        wcontrol.show()\n        if hidecontrol:\n            wcontrol.hide()\n        app.exec_()\n        wcontrol._T(\'leave\')\n    sys.exit()\n\n\n# run()\n\n# -----------------------------------------------------------------\n'"
CGNS/NAV/uqueries.py,0,"b'# -*- coding: utf-8 -*-\n#\n#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nfrom builtins import (str, bytes, range, dict)\n\nfrom CGNS.APP.lib.queries import asQuery\nfrom CGNS.APP.lib.queries import runQuery\n\n\n@asQuery\ndef nodeNameSearch(C):\n    """"""\n    Search by\n    Node name\n\n    Search all nodes with the exact NAME as argument.\n\n    The argument name need not to be a tuple or to have quotes,\n    all the following values are ok and would match the NAME <i>ZoneType</i>:\n\n    ZoneType\n    \'ZoneType\'\n    (\'ZoneType\',)\n    """"""\n    if C.NAME == C.ARGS[0]:\n        return C.PATH\n\n\n@asQuery\ndef nodeTokenSearch(C):\n    """"""\n    Search by\n    Node token\n\n    Search all nodes with NAME as a token in the PATH\n\n    The argument name need not to be a tuple or to have quotes,\n    all the following values are ok and would match the NAME <i>ZoneBC</i>:\n\n    ZoneBC\n    \'ZoneBC\'\n    (\'ZoneBC\',)\n    """"""\n    if C.ARGS[0] in C.PATH:\n        return C.PATH\n\n\nFILE = \'HYB/vbv-part32_comp_period_links_dom_32_SUB.hdf\'\nARGS = [\'GridLocation\']\n\n# -----------------------------------------------------------------\nimport CGNS.MAP as CGM\n\n(t, l, p) = CGM.load(FILE)\nprint(runQuery(t, l, p, nodeNameSearch, [\'GridLocation\']))\nprint(runQuery(t, l, p, nodeTokenSearch, [\'Zone\']))\n'"
CGNS/NAV/wcontrol.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\nfrom qtpy.QtCore import (Qt, QObject, Signal)\nfrom qtpy.QtWidgets import (QAction, QStyledItemDelegate, QStyleOptionViewItem,\n                            QMenu, QTableWidgetItem, QHeaderView)\n\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nimport CGNS.config as config\n\nimport CGNS.PAT.cgnslib as CGL\n\nfrom CGNS.NAV.Q7ControlWindow import Ui_Q7ControlWindow\nfrom CGNS.NAV.wfile import Q7File\nfrom CGNS.NAV.winfo import Q7Info\nfrom CGNS.NAV.woption import Q7Option\nfrom CGNS.NAV.wfingerprint import Q7FingerPrint\nfrom CGNS.NAV.wquery import Q7Query\nfrom CGNS.NAV.whelp import Q7Help\n\nimport CGNS.NAV.wmessages as MSG\n\nfrom CGNS.NAV.wfingerprint import Q7Window as QW\n\n\n# -----------------------------------------------------------------\nclass Q7SignalPool(QObject):\n    loadFile = Signal(name=\'loadFile\')\n    saveFile = Signal(name=\'saveFile\')\n    cancel = Signal(name=\'cancel\')\n    loadCompleted = Signal(name=\'loadCompleted\')\n    buffer = None\n    fgprint = None\n    saveAs = False\n\n\n# -----------------------------------------------------------------\nclass Q7ControlItemDelegate(QStyledItemDelegate):\n    def paint(self, painter, option, index):\n        if index.column() in [0, 1]:\n            option.decorationPosition = QStyleOptionViewItem.Top\n            QStyledItemDelegate.paint(self, painter, option, index)\n        else:\n            QStyledItemDelegate.paint(self, painter, option, index)\n\n\n# -----------------------------------------------------------------\nclass Q7Main(QW, Ui_Q7ControlWindow):\n    verbose = False\n\n    def __init__(self, parent=None):\n        self.lastView = None\n        self.w = None\n        self.fdialog = None\n        import platform\n        QW.control_log = MSG.Q7Log()\n        QW.__init__(self, QW.VIEW_CONTROL, self, None, None)\n        self.versions = {\'pycgnsversion\': \'pyCGNS v%s\' % config.version,\n                         #                       \'chloneversion\':\'CHLone %s\'%config.CHLONE_VERSION,\n                         \'vtkversion\': \'VTK v%s\' % config.VTK_VERSION,\n                         \'cythonversion\': \'Cython v%s\' % config.CYTHON_VERSION,\n                         \'hdf5version\': \'HDF5 v%s\' % config.HDF5_VERSION,\n                         \'numpyversion\': \'numpy v%s\' % config.NUMPY_VERSION,\n                         \'pythonversion\': \'python v%s\' % platform.python_version(),\n                         \'pyqtversion\': \'PyQt v%s\' % config.PYQT_VERSION,\n                         \'qtversion\': \'Qt v%s\' % config.QT_VERSION,\n                         }\n        self.getHistory()\n        self.bAbout.clicked.connect(self.about)\n        self.bOptionView.clicked.connect(self.option)\n        self.bTreeLoadLast.clicked.connect(self.loadlast)\n        self.lockable(self.bTreeLoadLast)\n        self.bTreeLoad.clicked.connect(self.load)\n        self.bLog.clicked.connect(self.logView)\n        self.lockable(self.bTreeLoad)\n        self.bEditTree.clicked.connect(self.edit)\n        self.lockable(self.bEditTree)\n        self.bInfo.clicked.connect(self.infoControl)\n        self.bPatternView.setDisabled(True)\n        # self.bResetScrollBars.clicked.connect(self.resetScrolls)\n        self.bClose.clicked.connect(self.close)\n        # QObject.connect(self.controlTable,\n        #                SIGNAL(""cellClicked(int,int)""),\n        #                self.clickedLine)\n        self.controlTable.cellClicked.connect(self.clickedLine)\n        self.initControlTable()\n        self.controlTable.setItemDelegate(Q7ControlItemDelegate(self))\n        self.signals = Q7SignalPool()\n        self.signals.loadFile.connect(self.loadStart)\n        self.signals.saveFile.connect(self.saving)\n        self.signals.cancel.connect(self.cancelUnlock)\n        self.signals.loadCompleted.connect(self.loadCompleted)\n        self.setContextMenuPolicy(Qt.CustomContextMenu)\n        self.popupmenu = QMenu()\n        self.transientRecurse = False\n        self.transientVTK = False\n        self.copyPasteBuffer = None\n        self.wOption = None\n        self.selectForLinkDst = None\n        self.newtreecount = 1\n        self.help = None\n        self._patternwindow = None\n        self._toolswindow = None\n        self.query = None\n        Q7Query.loadUserQueries()\n        Q7Query.fillQueries()\n        Q7Query.loadUserFunctions()\n\n    def clickedLine(self, *args):\n        if self.controlTable.lastButton == Qt.LeftButton:\n            # Q7FingerPrint.raiseView(self.getIdxFromLine(args[0]))\n            pass\n        if self.controlTable.lastButton == Qt.RightButton:\n            self.updateMenu(self.controlTable.currentIndex())\n            self.popupmenu.popup(self.controlTable.lastPos)\n\n    def closeView(self):\n        self.updateLastView()\n        if self.lastView is not None:\n            fg = Q7FingerPrint.getFingerPrint(self.lastView)\n            fg.closeView(self.lastView)\n            self.lastView = None\n\n    def raiseView(self):\n        self.updateLastView()\n        if self.lastView is not None:\n            Q7FingerPrint.raiseView(self.lastView)\n\n    def logView(self):\n        self.control_log.show()\n\n    def infoControl(self):\n        self.helpWindow(\'Control\')\n\n    def helpWindowDoc(self, doc):\n        if self.help is not None:\n            self.help.close()\n        self.help = Q7Help(self, doc=doc)\n        self.help.show()\n\n    def helpWindow(self, key):\n        if self.help is not None:\n            self.help.close()\n        self.help = Q7Help(self, key)\n        self.help.show()\n\n    def info(self):\n        self.updateLastView()\n        if self.lastView is not None:\n            (f, v, d) = Q7FingerPrint.infoView(self.lastView)\n            if not f.isFile():\n                return\n            self.w = Q7Info(self, d, f)\n            self.w.show()\n\n    def closeTree(self):\n        self.updateLastView()\n        if self.lastView is None:\n            return\n        (f, v, d) = Q7FingerPrint.infoView(self.lastView)\n        reply = MSG.wQuestion(self, 101, \'Double check...\',\n                              """"""Do you want to close the tree and all its views,<br>\n                              and <b>forget unsaved</b> modifications?"""""")\n        if reply:\n            f.closeAllViews()\n\n    def closeAllTrees(self):\n        reply = MSG.wQuestion(self, 101, \'Double check...\',\n                              """"""Do you want to close all the views,<br>\n                              and <b>forget unsaved</b> modifications?"""""")\n        if reply:\n            Q7FingerPrint.closeAllTrees()\n\n    def updateLastView(self):\n        it = self.controlTable.currentItem()\n        if it is None:\n            self.lastView = None\n        else:\n            r = it.row()\n            self.lastView = self.getIdxFromLine(r)\n        return self.lastView\n\n    def updateMenu(self, idx):\n        lv = self.getIdxFromLine(idx.row())\n        if lv is not None:\n            self.lastView = lv\n            actlist = ((""View information (Enter)"", self.info),\n                       (""Raise selected view (Space)"", self.raiseView),\n                       None,\n                       (""Close all trees"", self.closeAllTrees),\n                       (""Close selected tree"", self.closeTree),\n                       (""Close selected view (Del)"", self.closeView))\n            self.popupmenu.clear()\n            self.popupmenu.setTitle(\'Control view menu\')\n            for aparam in actlist:\n                if aparam is None:\n                    self.popupmenu.addSeparator()\n                else:\n                    a = QAction(aparam[0], self)\n                    a.triggered.connect(aparam[1])\n                    self.popupmenu.addAction(a)\n\n    def loadOptions(self):\n        if self.wOption is None:\n            self.wOption = Q7Option(self)\n        self.wOption.reset()\n\n    def option(self):\n        if self.wOption is None:\n            self.wOption = Q7Option(self)\n        self.wOption.show()\n\n    def about(self):\n        MSG.wInfo(self, 100, ""pyCGNS v%s"" % OCTXT._ToolVersion,\n                  OCTXT._CopyrightNotice % self.versions, again=False)\n\n    def closeApplication(self):\n        reply = MSG.wQuestion(self, 101, \'Double check...\',\n                              """"""Do you want to quit %s,<b>close all views</b>\n                              and forget unsaved modifications?""""""\n                              % OCTXT._ToolName)\n        if reply == MSG.OK:\n            Q7FingerPrint.closeAllTrees()\n            if self.help is not None:\n                self.help.close()\n            if self._patternwindow is not None:\n                self._patternwindow.close()\n            if self.control_log is not None:\n                self.control_log.close()\n            if self._toolswindow is not None:\n                self._toolswindow.close()\n            return True\n        else:\n            return False\n\n    def closeEvent(self, event):\n        if self.closeApplication():\n            event.accept()\n        # return True\n        else:\n            event.ignore()\n            #            return False\n\n    def resetScrolls(self):\n        self.controlTable.verticalScrollBar().setSliderPosition(0)\n        self.controlTable.horizontalScrollBar().setSliderPosition(0)\n\n    def initControlTable(self):\n        ctw = self.controlTable\n        ctw.control = self\n        cth = ctw.horizontalHeader()\n        ctw.verticalHeader().hide()\n        h = [\'S\', \'T\', \'View\', \'Dir\', \'File\', \'Node\']\n        for i in range(len(h)):\n            hi = QTableWidgetItem(h[i])\n            hi.setFont(OCTXT._Label_Font)\n            ctw.setHorizontalHeaderItem(i, hi)\n            cth.setSectionResizeMode(i, QHeaderView.ResizeToContents)\n        cth.setSectionResizeMode(len(h) - 1, QHeaderView.Stretch)\n\n    def updateViews(self):\n        for i in self.getAllIdx():\n            f = Q7FingerPrint.getFingerPrint(i)\n            v = Q7FingerPrint.getView(i)\n            l = self.getLineFromIdx(i)\n            self.modifiedLine(l, f._status, f)\n            try:\n                v.updateTreeStatus()\n            except AttributeError:\n                pass\n\n    def modifiedLine(self, n, stat, fg):\n        if ((Q7FingerPrint.STATUS_MODIFIED in stat) and\n                (Q7FingerPrint.STATUS_SAVEABLE in stat)):\n            stitem = QTableWidgetItem(self.IC(QW.I_MOD_SAV), \'\')\n            stitem.setToolTip(\'Tree modified and saveable\')\n        if ((Q7FingerPrint.STATUS_MODIFIED in stat) and\n                (Q7FingerPrint.STATUS_SAVEABLE not in stat)):\n            stitem = QTableWidgetItem(self.IC(QW.I_MOD_USAV), \'\')\n            stitem.setToolTip(\'Tree modified but NOT saveable\')\n        if ((Q7FingerPrint.STATUS_MODIFIED not in stat) and\n                (Q7FingerPrint.STATUS_SAVEABLE not in stat)):\n            stitem = QTableWidgetItem(self.IC(QW.I_UMOD_USAV), \'\')\n            stitem.setToolTip(\'Tree unmodified and NOT saveable\')\n        if ((Q7FingerPrint.STATUS_MODIFIED not in stat) and\n                (Q7FingerPrint.STATUS_SAVEABLE in stat)):\n            stitem = QTableWidgetItem(self.IC(QW.I_UMOD_SAV), \'\')\n            stitem.setToolTip(\'Tree unmodified and saveable\')\n        stitem.setTextAlignment(Qt.AlignCenter)\n        self.controlTable.setItem(n, 0, stitem)\n        self.controlTable.item(n, 3).setText(str(fg.filedir))\n        self.controlTable.item(n, 4).setText(str(fg.filename))\n\n    def addLine(self, l, fg):\n        ctw = self.controlTable\n        ctw.setRowCount(ctw.rowCount() + 1)\n        r = ctw.rowCount() - 1\n        if l[1] == QW.VIEW_TREE:\n            tpitem = QTableWidgetItem(self.IC(QW.I_TREE), \'\')\n        if l[1] == QW.VIEW_FORM:\n            tpitem = QTableWidgetItem(self.IC(QW.I_FORM), \'\')\n        if l[1] == QW.VIEW_VTK:\n            tpitem = QTableWidgetItem(self.IC(QW.I_VTK), \'\')\n        if l[1] == QW.VIEW_QUERY:\n            tpitem = QTableWidgetItem(self.IC(QW.I_QUERY), \'\')\n        if l[1] == QW.VIEW_SELECT:\n            tpitem = QTableWidgetItem(self.IC(QW.I_SELECT), \'\')\n        if l[1] == QW.VIEW_DIAG:\n            tpitem = QTableWidgetItem(self.IC(QW.I_DIAG), \'\')\n        if l[1] == QW.VIEW_TOOLS:\n            tpitem = QTableWidgetItem(self.IC(QW.I_TOOLS), \'\')\n            l = l[0:2] + [None, None, None]\n        if l[1] == QW.VIEW_LINK:\n            tpitem = QTableWidgetItem(self.IC(QW.I_LINK), \'\')\n        if l[1] == QW.VIEW_DIFF:\n            tpitem = QTableWidgetItem(self.IC(QW.I_DIFF), \'\')\n        tpitem.setTextAlignment(Qt.AlignCenter)\n        ctw.setItem(r, 1, tpitem)\n        for i in range(len(l) - 2):\n            it = QTableWidgetItem(\'%s \' % (l[i + 2]))\n            if i in [0]:\n                it.setTextAlignment(Qt.AlignCenter)\n            else:\n                it.setTextAlignment(Qt.AlignLeft)\n            it.setFont(OCTXT._Table_Font)\n            ctw.setItem(r, i + 2, it)\n        self.modifiedLine(r, l[0], fg)\n        ctw.setColumnWidth(0, 25)\n        ctw.setColumnWidth(1, 25)\n        ctw.setColumnWidth(2, 50)\n        for i in range(self.controlTable.rowCount()):\n            ctw.resizeRowToContents(i)\n\n    def selectLine(self, idx):\n        i = int(self.getLineFromIdx(idx))\n        if i != -1:\n            self.controlTable.setCurrentCell(i, 2)\n\n    def delLine(self, idx):\n        i = int(self.getLineFromIdx(idx))\n        if i != -1:\n            self.controlTable.removeRow(i)\n\n    def getIdxFromLine(self, l):\n        self.controlTable.setCurrentCell(l, 2)\n        it = self.controlTable.currentItem()\n        return it.text()\n\n    def getLineFromIdx(self, idx):\n        found = -1\n        for n in range(self.controlTable.rowCount()):\n            if int(idx) == int(self.controlTable.item(n, 2).text()):\n                found = n\n        return found\n\n    def getAllIdx(self):\n        all = []\n        for n in range(self.controlTable.rowCount()):\n            all.append(self.controlTable.item(n, 2).text())\n        return all\n\n    def clearOtherSelections(self):\n        if self._patternwindow is not None:\n            self._patternwindow.clearSelection()\n\n    def cancelUnlock(self, *args):\n        self.lockView(False)\n\n    def loadStart(self, *args):\n        self._T(\'loading: [%s]\' % self.signals.buffer)\n        self.busyCursor()\n        Q7FingerPrint.treeLoad(self, self.signals.buffer)\n        Q7FingerPrint.refreshScreen()\n\n    def setDefaults(self):\n        self.loadOptions()\n        self._application.setStyleSheet(self.wOption._options[\'UserCSS\'])\n\n    def loadCompleted(self, *args, **kwargs):\n        self.lockView(False)\n        if \'dataset_name\' in kwargs:\n            filedir = kwargs[\'dataset_base\']\n            filename = kwargs[\'dataset_name\']\n            tree = kwargs[\'dataset_tree\']\n            links = kwargs[\'dataset_references\']\n            paths = kwargs[\'dataset_paths\']\n            fgprint = Q7FingerPrint(self, filedir, filename,\n                                    tree, links, paths, **kwargs)\n        else:\n            fgprint = self.signals.fgprint\n        if len(fgprint) > 1:\n            code = fgprint[1][0]\n            msg0 = fgprint[1][1]            \n            msg1 = fgprint[1][2]\n            MSG.wError(self, code, msg0, msg1)\n        elif fgprint.tree is None:\n            MSG.wError(self, 201, \'Load error\',\n                       \'Fatal error while loading file, empty tree\')\n        else:\n            child = self.loadQ7Tree(fgprint)\n            child.show()\n            self.setHistory(fgprint.filedir, fgprint.filename)\n            self.updateViews()\n            fgprint.getInfo(force=True)\n        self.signals.fgprint = None\n        Q7FingerPrint.killProxy()\n        self.readyCursor()\n\n    def saving(self, *args):\n        self._T(\'saving as: [%s]\' % self.signals.buffer)\n        self.busyCursor()\n        Q7FingerPrint.treeSave(self, self.signals.fgprint, self.signals.buffer,\n                               self.signals.saveAs)\n        self.setHistory(self.signals.fgprint.filedir,\n                        self.signals.fgprint.filename)\n        self.updateViews()\n        self.signals.fgprint.getInfo(force=True)\n        self.readyCursor()\n        self.lockView(False)\n\n    def load(self):\n        self.fdialog = Q7File(self)\n        self.lockView(True)\n        self.fdialog.show()\n\n    def loadlast(self):\n        if self.getLastFile() is None:\n            return\n        self.signals.buffer = self.getLastFile()[0] + \'/\' + self.getLastFile()[1]\n        if self.signals.buffer is None:\n            self.load()\n        else:\n            self.signals.loadFile.emit()\n\n    def loadfile(self, name):\n        self.signals.buffer = name\n        self.signals.loadFile.emit()\n\n    def save(self, fgprint):\n        self.signals.fgprint = fgprint\n        self.signals.saveAs = True\n        self.fdialog = Q7File(self, 1)\n        self.lockView(True)\n        self.fdialog.show()\n\n    def savedirect(self, fgprint):\n        self.signals.fgprint = fgprint\n        self.signals.saveAs = False\n        self.signals.buffer = fgprint.filedir + \'/\' + fgprint.filename\n        self.signals.saveFile.emit()\n\n    def edit(self):\n        self._T(\'edit new\')\n        tree = CGL.newCGNSTree()\n        tc = self.newtreecount\n        self.busyCursor()\n        fgprint = Q7FingerPrint(self, \'.\', \'new#%.3d.hdf\' % tc, tree, [], [])\n        child = self.loadQ7Tree(fgprint)\n        fgprint._status = [Q7FingerPrint.STATUS_MODIFIED]\n        self.readyCursor()\n        self.newtreecount += 1\n        child.show()\n\n    def userFunctionFromPath(self, path, types):\n        return Q7Query._userFunction\n\n    def loadQ7Tree(self, fgprint):\n        from CGNS.NAV.wtree import Q7Tree\n        from CGNS.NAV.mtree import Q7TreeModel\n        Q7TreeModel(fgprint.index)\n        return Q7Tree(self, \'/\', fgprint.index)\n\n# -----------------------------------------------------------------\n'"
CGNS/NAV/wdiag.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\n\nimport os\n\nfrom qtpy.QtCore import Qt\nfrom qtpy.QtGui import QFont\nfrom qtpy.QtWidgets import QTreeView, QFileDialog, QTreeWidgetItem, QWidget\n\n\nimport CGNS.NAV.wmessages as MSG\nimport CGNS.VAL.parse.messages as CGM\nfrom CGNS.NAV.Q7DiagWindow import Ui_Q7DiagWindow\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\nfrom CGNS.NAV.wfingerprint import Q7Window as QW\nfrom CGNS.VAL.parse.findgrammar import locateGrammars\n\n\n# -----------------------------------------------------------------\nclass Q7CheckList(QW, Ui_Q7DiagWindow):\n    def __init__(self, parent, data, fgindex):\n        QW.__init__(self, QW.VIEW_DIAG, parent._control, None, fgindex)\n        self._currentItem = 0\n        self._filterItems = {}\n        self.bClose.clicked.connect(self.reject)\n        self.bExpandAll.clicked.connect(self.expand)\n        self.bInfo.clicked.connect(self.infoDiagView)\n        self.bCollapseAll.clicked.connect(self.collapse)\n        self.bPrevious.clicked.connect(self.previousfiltered)\n        self.bNext.clicked.connect(self.nextfiltered)\n        self.cWarnings.clicked.connect(self.reset)\n        self.cDiagFirst.clicked.connect(self.reset)\n        self.bSave.clicked.connect(self.diagnosticssave)\n        self.bWhich.clicked.connect(self.grammars)\n        self.cFilter.currentIndexChanged[int].connect(self.filterChange)\n        # QObject.connect(self.cFilter,\n        #                 SIGNAL(""currentIndexChanged(int)""),\n        #                 self.filterChange)\n        self._data = data\n        self._parent = parent\n        self.diagTable.keyPressEvent = self.diagTableKeyPressEvent\n        self.filterChange()\n\n    def doRelease(self):\n        pass\n\n    def grammars(self):\n        self.FG.pushGrammarPaths()\n        gl = """"\n        for g in locateGrammars():\n            gl += ""%s : %s<br>"" % (g[0], os.path.split(g[1])[0])\n        self.FG.popGrammarPaths()\n        MSG.wInfo(self, 400, ""Diag view:"",\n                  """"""Checks performed using the following grammars:<br>%s"""""" % gl,\n                  again=False)\n\n    def diagTableKeyPressEvent(self, event):\n        kmod = event.modifiers()\n        kval = event.key()\n        if kval == Qt.Key_Space:\n            itlist = self.diagTable.selectedItems()\n            it = itlist[0]\n            itxt = it.text(0)\n            if itxt[0] != \'/\':\n                itxt = it.parent().text(0)\n            self._parent.treeview.selectByPath(itxt)\n        else:\n            QTreeView.keyPressEvent(self.diagTable, event)\n\n    def infoDiagView(self):\n        self._control.helpWindow(\'Diagnosis\')\n\n    def diagnosticssave(self):\n        n = \'data=%s\\n\' % self._data\n\n        filename = QFileDialog.getSaveFileName(self,\n                                               ""Save diagnosis"", ""."", ""*.py"")\n        if filename[0] == """":\n            return\n        with open(str(filename[0]), \'w+\') as f:\n            f.write(n)\n\n    def previousfiltered(self):\n        iold = self._filterItems[self.cFilter.currentText()][self._currentItem]\n        if self._currentItem != 0:\n            self._currentItem -= 1\n        inew = self._filterItems[self.cFilter.currentText()][self._currentItem]\n        iold.setSelected(False)\n        inew.setSelected(True)\n        self.diagTable.scrollToItem(inew)\n        self.eCount.setText(str(self._currentItem + 1))\n\n    def nextfiltered(self):\n        ilist = self._filterItems[self.cFilter.currentText()]\n        if self._currentItem >= len(ilist) - 1:\n            return\n        iold = ilist[self._currentItem]\n        self._currentItem += 1\n        inew = ilist[self._currentItem]\n        iold.setSelected(False)\n        inew.setSelected(True)\n        self.diagTable.scrollToItem(inew)\n        self.eCount.setText(str(self._currentItem + 1))\n\n    def filterChange(self):\n        self._currentItem = 0\n        self.eCount.setText("""")\n        self.diagTable.clearSelection()\n\n    def expand(self):\n        self.diagTable.expandAll()\n\n    def collapse(self):\n        self.diagTable.collapseAll()\n\n    def show(self):\n        self.reset()\n        super(Q7CheckList, self).show()\n\n    def reset(self):\n        v = self.diagTable\n        v.clear()\n        v.setHeaderHidden(True)\n        plist = list(self._data)\n        plist.sort()\n        plist.reverse()\n        keyset = set()\n        self.cFilter.clear()\n        self._filterItems = {}\n        diagfirst = self.cDiagFirst.isChecked()\n        warnings = self.cWarnings.isChecked()        \n        diagstack = {}\n        for path in plist:\n            path_item = None\n            state = self._data.getWorstDiag(path)\n            if (state in [CGM.CHECK_NONE, CGM.CHECK_PASS]):\n                pass\n            elif (state == CGM.CHECK_WARN) and not warnings:\n                pass\n            else:\n                for (diag, pth) in self._data.diagnosticsByPath(path):\n                    if (diag.level == CGM.CHECK_WARN) and not warnings:\n                        pass\n                    elif diagfirst:\n                        if diag.key not in keyset:\n                            keyset.add(diag.key)\n                            diag_item = self.addDiagEntry(None, diag, top=True)\n                            v.insertTopLevelItem(0, diag_item)\n                            diagstack[diag.key] = diag_item\n                        path_item = self.addPathEntry(diagstack[diag.key],\n                                                      path,\n                                                      state, top=False)\n                    else:\n                        if diag.key not in keyset:\n                            keyset.add(diag.key)\n                        if path_item is None:\n                            path_item = self.addPathEntry(None, path,\n                                                          state, top=True)\n                            v.insertTopLevelItem(0, path_item)\n                        diag_item = self.addDiagEntry(path_item, diag,\n                                                      top=False)\n                    keylist = list(keyset)\n        keylist.sort()\n        for k in keylist:\n            self.cFilter.addItem(k)\n\n    def addPathEntry(self, parent, path, state, top=False):\n        it = QTreeWidgetItem(parent, (path,))\n        ft = QFont(OCTXT._Table_Font)\n        if top:\n            ft.setBold(True)\n        it.setFont(0, ft)\n        if state == CGM.CHECK_FAIL:\n            it.setIcon(0, self.IC(QW.I_C_SFL))\n        if state == CGM.CHECK_WARN:\n            it.setIcon(0, self.IC(QW.I_C_SWR))\n        return it\n\n    def addDiagEntry(self, parent, diag, top=False):\n        dit = QTreeWidgetItem(parent, (self._data.message(diag),))\n        ft = QFont(OCTXT._Table_Font)\n        if top:\n            ft.setBold(True)\n        dit.setFont(0, ft)\n        if diag.level == CGM.CHECK_FAIL:\n            dit.setIcon(0, self.IC(QW.I_C_SFL))\n        if diag.level == CGM.CHECK_WARN:\n            dit.setIcon(0, self.IC(QW.I_C_SWR))\n        if diag.key not in self._filterItems:\n            self._filterItems[diag.key] = [dit]\n        else:\n            self._filterItems[diag.key].insert(0, dit)\n        return dit\n        \n    def reject(self):\n        self.close()\n\n    def close(self):\n        self._parent.diagview = None\n        QWidget.close(self)\n\n# -----------------------------------------------------------------\n'"
CGNS/NAV/wdifftreeview.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS.NAV - Python package for CFD General Notation System - NAVigater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nimport CGNS.PAT.cgnsutils as CGU\n\nfrom qtpy.QtCore import Qt, QModelIndex, QPoint\nfrom qtpy.QtWidgets import QStyledItemDelegate, QMenu\nfrom qtpy.QtGui import QColor, QFont\n\nfrom CGNS.NAV.Q7DiffWindow import Ui_Q7DiffWindow\nfrom CGNS.NAV.wfingerprint import Q7Window, Q7FingerPrint\nfrom CGNS.NAV.mdifftreeview import Q7DiffTreeModel\n\nimport CGNS.NAV.mtree as NMT\n\n(DIFF_NX, DIFF_NA, DIFF_ND, DIFF_CQ, DIFF_CT, DIFF_CS, DIFF_CV) = range(7)\n\n\n# -----------------------------------------------------------------\nclass Q7DiffItemDelegate(QStyledItemDelegate):\n    def __init__(self, owner, model, diag):\n        QStyledItemDelegate.__init__(self, owner)\n        self._parent = owner\n        self._model = model\n        self._diag = diag\n        self.orange = QColor(""#FFA500"")\n        self.red = QColor(""#FF0000"")\n        self.green = QColor(""#008000"")\n        self.gray = QColor(""#C0C0C0"")\n\n    def paint(self, painter, option, index):\n        idx = self._parent.modelIndex(index)\n        col = idx.column()\n        nnm = self._parent.modelData(index).sidsName()\n        pth = CGU.getPathNoRoot(self._parent.modelData(index).sidsPath())\n        if col == NMT.COLUMN_NAME:\n            if nnm not in OCTXT._ReservedNames:\n                option.font.setWeight(QFont.Bold)\n            QStyledItemDelegate.paint(self, painter, option, index)\n            option.font.setWeight(QFont.Light)\n            if (self._diag is not None) and (pth in self._diag):\n                color = self.gray\n                if self._diag[pth] == DIFF_NX:\n                    color = self.gray\n                if self._diag[pth] == DIFF_NA:\n                    color = self.green\n                if self._diag[pth] == DIFF_ND:\n                    color = self.red\n                painter.save()\n                painter.setBrush(Qt.NoBrush)\n                painter.setPen(color)\n                painter.drawRect(option.rect)\n                painter.restore()\n        elif col == NMT.COLUMN_VALUE:\n            option.font.setFamily(OCTXT.Table_Family)\n            QStyledItemDelegate.paint(self, painter, option, index)\n            if (self._diag is not None) and (pth in self._diag):\n                if self._diag[pth] == DIFF_CV:\n                    painter.save()\n                    painter.setBrush(Qt.NoBrush)\n                    painter.setPen(self.orange)\n                    painter.drawRect(option.rect)\n                    painter.restore()\n        elif col == NMT.COLUMN_DATATYPE:\n            option.font.setFamily(OCTXT.Table_Family)\n            option.font.setPointSize(8)\n            QStyledItemDelegate.paint(self, painter, option, index)\n            if (self._diag is not None) and (pth in self._diag):\n                if self._diag[pth] == DIFF_CQ:\n                    painter.save()\n                    painter.setBrush(Qt.NoBrush)\n                    painter.setPen(self.orange)\n                    painter.drawRect(option.rect)\n                    painter.restore()\n        elif col == NMT.COLUMN_SHAPE:\n            QStyledItemDelegate.paint(self, painter, option, index)\n            if (self._diag is not None) and (pth in self._diag):\n                if self._diag[pth] == DIFF_CS:\n                    painter.save()\n                    painter.setBrush(Qt.NoBrush)\n                    painter.setPen(self.orange)\n                    painter.drawRect(option.rect)\n                    painter.restore()\n        elif col == NMT.COLUMN_SIDS:\n            QStyledItemDelegate.paint(self, painter, option, index)\n            if (self._diag is not None) and (pth in self._diag):\n                if self._diag[pth] == DIFF_CT:\n                    painter.save()\n                    painter.setBrush(Qt.NoBrush)\n                    painter.setPen(self.orange)\n                    painter.drawRect(option.rect)\n                    painter.restore()\n        else:\n            QStyledItemDelegate.paint(self, painter, option, index)\n\n\n# -----------------------------------------------------------------\nclass Q7Diff(Q7Window, Ui_Q7DiffWindow):\n    def __init__(self, control, fgprintindexA, fgprintindexB, diag):\n        Q7Window.__init__(self, Q7Window.VIEW_DIFF, control, None, fgprintindexA)\n        self._depthExpanded = 0\n        self._lastEntered = None\n        self._fgidxA = fgprintindexA\n        self._fgidxB = fgprintindexB\n        ldiag = self.diagAnalysis(diag)\n        self.treeviewA.expanded[QModelIndex].connect(self.expandNode)\n        self.treeviewA.collapsed.connect(self.collapseNode)\n        self.treeviewA.clicked[QModelIndex].connect(self.clickedNode)\n        self.treeviewA.customContextMenuRequested[QPoint].connect(self.clickedNode)\n        self.treeviewB.expanded[QModelIndex].connect(self.expandNode)\n        self.treeviewB.collapsed.connect(self.collapseNode)\n        self.treeviewB.clicked[QModelIndex].connect(self.clickedNode)\n        self.treeviewB.customContextMenuRequested[QPoint].connect(self.clickedNode)\n        # QObject.connect(self.treeviewA,\n        #                 SIGNAL(""expanded(QModelIndex)""),\n        #                 self.expandNode)\n        # QObject.connect(self.treeviewA,\n        #                 SIGNAL(""collapsed()""),\n        #                 self.collapseNode)\n        # QObject.connect(self.treeviewA,\n        #                 SIGNAL(""clicked(QModelIndex)""),\n        #                 self.clickedNode)\n        # QObject.connect(self.treeviewA,\n        #                 SIGNAL(""customContextMenuRequested(QPoint)""),\n        #                 self.clickedNode)\n        # QObject.connect(self.treeviewB,\n        #                 SIGNAL(""expanded(QModelIndex)""),\n        #                 self.expandNode)\n        # QObject.connect(self.treeviewB,\n        #                 SIGNAL(""collapsed()""),\n        #                 self.collapseNode)\n        # QObject.connect(self.treeviewB,\n        #                 SIGNAL(""clicked(QModelIndex)""),\n        #                 self.clickedNode)\n        # QObject.connect(self.treeviewB,\n        #                 SIGNAL(""customContextMenuRequested(QPoint)""),\n        #                 self.clickedNode)\n        # QObject.connect(self.bLockScroll,\n        #                 SIGNAL(""clicked()""),\n        #                 self.syncScrolls)\n        self.bLockScroll.clicked.connect(self.syncScrolls)\n        self.bClose.clicked.connect(self.leave)\n        self.bInfo.clicked.connect(self.infoTreeView)\n        self.bZoomIn.clicked.connect(self.expandLevel)\n        self.bZoomOut.clicked.connect(self.collapseLevel)\n        self.bZoomAll.clicked.connect(self.expandMinMax)\n        self.bSaveDiff.clicked.connect(self.savediff)\n        self.setContextMenuPolicy(Qt.CustomContextMenu)\n        self.popupmenu = QMenu()\n        self.proxyA = Q7DiffTreeModel(self._fgidxA)\n        self.proxyB = Q7DiffTreeModel(self._fgidxB)\n        self.proxyA.setDiag(ldiag)\n        self.proxyB.setDiag(ldiag)\n        self.treeviewA.setModel(self.proxyA)\n        self.treeviewB.setModel(self.proxyB)\n        fga = Q7FingerPrint.getByIndex(self._fgidxA)\n        fgb = Q7FingerPrint.getByIndex(self._fgidxB)\n        model_a = fga.model\n        model_b = fgb.model\n        self.treeviewA.setItemDelegate(Q7DiffItemDelegate(self.treeviewA,\n                                                          model_a,\n                                                          ldiag))\n        self.treeviewB.setItemDelegate(Q7DiffItemDelegate(self.treeviewB,\n                                                          model_b,\n                                                          ldiag))\n        self.treeviewA.setControlWindow(self, model_a)\n        self.treeviewB.setControlWindow(self, model_b)\n        self.treeviewA.hideColumn(NMT.COLUMN_FLAG_LINK)\n        self.treeviewA.hideColumn(NMT.COLUMN_FLAG_CHECK)\n        self.treeviewA.hideColumn(NMT.COLUMN_FLAG_SELECT)\n        self.treeviewA.hideColumn(NMT.COLUMN_FLAG_USER)\n        self.treeviewB.hideColumn(NMT.COLUMN_FLAG_LINK)\n        self.treeviewB.hideColumn(NMT.COLUMN_FLAG_CHECK)\n        self.treeviewB.hideColumn(NMT.COLUMN_FLAG_SELECT)\n        self.treeviewB.hideColumn(NMT.COLUMN_FLAG_USER)\n        self.wvsa = self.treeviewA.verticalScrollBar()\n        self.wvsb = self.treeviewB.verticalScrollBar()\n        self.uvsa = self.verticalScrollBarA\n        self.uvsb = self.verticalScrollBarB\n        self.uvsa.setToolTip(""%s/%s"" % (fga.filedir, fga.filename))\n        self.uvsb.setToolTip(""%s/%s"" % (fgb.filedir, fgb.filename))\n        self.syncScrolls(True)\n\n    def diagAnalysis(self, diag):\n        ldiag = {}\n        for k in diag:\n            ldiag[k] = DIFF_NX\n            for d in diag[k]:\n                if d[0] == \'NA\':\n                    ldiag[d[1]] = DIFF_NA\n                if d[0] == \'ND\':\n                    ldiag[d[1]] = DIFF_ND\n                if d[0] in [\'CT\']:\n                    ldiag[k] = DIFF_CT\n                if d[0] in [\'C3\', \'C1\', \'C2\']:\n                    ldiag[k] = DIFF_CQ\n                if d[0] in [\'C6\', \'C7\']:\n                    ldiag[k] = DIFF_CV\n                if d[0] in [\'C4\', \'C5\']:\n                    ldiag[k] = DIFF_CS\n        return ldiag\n\n    def syncScrolls(self, force=False):\n        self.uvsa.valueChanged[int].connect(self.wvsa.setValue[int])\n        self.uvsb.valueChanged[int].connect(self.wvsb.setValue[int])\n        self.wvsa.valueChanged[int].connect(self.uvsa.setValue[int])\n        self.wvsb.valueChanged[int].connect(self.uvsb.setValue[int])\n        #\n        # QObject.connect(self.uvsa, SIGNAL(""valueChanged(int)""),\n        #                 self.wvsa, SLOT(""setValue(int)""))\n        # QObject.connect(self.uvsb, SIGNAL(""valueChanged(int)""),\n        #                 self.wvsb, SLOT(""setValue(int)""))\n        # QObject.connect(self.wvsa, SIGNAL(""valueChanged(int)""),\n        #                 self.uvsa, SLOT(""setValue(int)""))\n        # QObject.connect(self.wvsb, SIGNAL(""valueChanged(int)""),\n        #                 self.uvsb, SLOT(""setValue(int)""))\n        if force or self.bLockScroll.isChecked():\n            self.wvsa.valueChanged[int].connect(self.wvsb.setValue[int])\n            self.wvsb.valueChanged[int].connect(self.wvsa.setValue[int])\n            # QObject.connect(self.wvsa, SIGNAL(""valueChanged(int)""),\n            #                 self.wvsb, SLOT(""setValue(int)""))\n            # QObject.connect(self.wvsb, SIGNAL(""valueChanged(int)""),\n            #                 self.wvsa, SLOT(""setValue(int)""))\n        else:\n            self.wvsa.valueChanged[int].disconnect(self.wvsb.setValue[int])\n            self.wvsb.valueChanged[int].disconnect(self.wvsa.setValue[int])\n            # QObject.disconnect(self.wvsa, SIGNAL(""valueChanged(int)""),\n            #                   self.wvsb, SLOT(""setValue(int)""))\n            # QObject.disconnect(self.wvsb, SIGNAL(""valueChanged(int)""),\n            #                   self.wvsa, SLOT(""setValue(int)""))\n\n    def model(self):\n        return self._fgprint.model\n\n    def modelIndex(self, idx):\n        if not idx.isValid():\n            return -1\n        midx = idx\n        # if (idx.model() != self.treeview.M()):\n        #    midx=self.treeview.model().mapToSource(idx)\n        return midx\n\n    def modelData(self, idx):\n        if not idx.isValid():\n            return None\n        return self.modelIndex(idx).internalPointer()\n\n    def infoTreeView(self):\n        self._control.helpWindow(\'Tree\')\n\n    def savediff(self):\n        pass\n\n    def expandMinMax(self):\n        if self._depthExpanded == Q7FingerPrint.getByIndex(self._fgidxA).depth - 2:\n            self._depthExpanded = -1\n            self.treeviewA.collapseAll()\n            self.treeviewB.collapseAll()\n        else:\n            self._depthExpanded = Q7FingerPrint.getByIndex(self._fgidxA).depth - 2\n            self.treeviewA.expandAll()\n            self.treeviewB.expandAll()\n        self.resizeAll()\n\n    def expandLevel(self):\n        if self._depthExpanded < Q7FingerPrint.getByIndex(self._fgidxA).depth - 2:\n            self._depthExpanded += 1\n        self.treeviewA.expandToDepth(self._depthExpanded)\n        self.treeviewB.expandToDepth(self._depthExpanded)\n        self.resizeAll()\n\n    def collapseLevel(self):\n        if self._depthExpanded != -1:\n            self._depthExpanded -= 1\n        if self._depthExpanded == -1:\n            self.treeviewA.collapseAll()\n            self.treeviewB.collapseAll()\n        else:\n            self.treeviewA.expandToDepth(self._depthExpanded)\n            self.treeviewB.expandToDepth(self._depthExpanded)\n        self.resizeAll()\n\n    def updateStatus(self, node):\n        return\n        self.lineEdit.clear()\n        self.lineEdit.insert(node.sidsPath())\n\n    def updateMenu(self, nodeidxs):\n        return\n        nodeidx = self.modelIndex(nodeidxs)\n        if not nodeidx.isValid:\n            return False\n        if nodeidx.internalPointer() is None:\n            return False\n        if nodeidx.internalPointer().sidsPath() == \'/CGNSTree\':\n            return False\n        self.setLastEntered(nodeidxs)\n        if nodeidx != -1:\n            node = nodeidx.internalPointer()\n            lknode = not node.sidsIsLink()\n            lznode = node.hasLazyLoad()\n            actlist = (\n                (""About %s"" % node.sidsType(), self.aboutSIDS, None, False),\n                None,\n                (""Mark/unmark node"", self.marknode, \'Space\', False),\n                (""Add new child node"", self.newnodechild, \'Ctrl+A\', False),\n                (""Add new brother node"", self.newnodebrother, \'Ctrl+Z\', False),\n                None,\n                (""Open form"", self.popform, \'Ctrl+F\', False),\n                (""Open view"", self.openSubTree, \'Ctrl+W\', False),\n                (""Open view on linked-to file"", self.openLkTree, \'Ctrl+O\', lknode),\n                None,\n                (""Load node data in memory"", self.dataLoad, \'Ctrl+L\', not lznode),\n                (""Release memory node data"", self.dataRelease, \'Ctrl+R\', lznode),\n                None,\n                (""Copy"", self.mcopy, \'Ctrl+C\', False),\n                (""Cut"", self.mcut, \'Ctrl+X\', False),\n                (""Paste as brother"", self.mpasteasbrother, \'Ctrl+V\', False),\n                (""Paste as child"", self.mpasteaschild, \'Ctrl+Y\', False),\n                None,\n                (""Cut all selected"", self.mcutselected, \'Ctrl+Shift+X\', False),\n                (""Paste as brother for each selected"",\n                 self.mpasteasbrotherselected, \'Ctrl+Shift+V\', False),\n                (""Paste as child for each selected"",\n                 self.mpasteaschildselected, \'Ctrl+Shift+Y\', False),\n                (""Load nodes data in memory for each selected"",\n                 self.dataLoadSelected, \'Ctrl+Shift+L\', False),\n                (""Release memory node data for each selected"",\n                 self.dataReleaseSelected, \'Ctrl+Shift+R\', False),\n            )\n            self.popupmenu.clear()\n            self.popupmenu.setTitle(\'Node menu\')\n            for aparam in actlist:\n                if aparam is None:\n                    self.popupmenu.addSeparator()\n                else:\n                    a = QAction(aparam[0], self)\n                    a.triggered.connect(aparam[1])\n                    if aparam[2] is not None:\n                        a.setShortcut(aparam[2])\n                    self.popupmenu.addAction(a)\n                    a.setDisabled(aparam[3])\n            return True\n\n    def setLastEntered(self, nix=None):\n        self._lastEntered = None\n\n    def getLastEntered(self):\n        return self._lastEntered\n\n    def clearLastEntered(self):\n        self._lastEntered = None\n        self.treeview.selectionModel().clearSelection()\n        return None\n\n    def clickedNode(self, index):\n        pass\n\n    def expandNode(self, *args):\n        self.resizeAll()\n\n    def collapseNode(self, *args):\n        pass\n\n    def resizeAll(self):\n        for n in range(NMT.COLUMN_LAST + 1):\n            self.treeviewA.resizeColumnToContents(n)\n            self.treeviewB.resizeColumnToContents(n)\n\n    def show(self):\n        super(Q7Diff, self).show()\n\n    def closeAlone(self):\n        pass\n\n    def leave(self):\n        self.close()\n\n    def doRelease(self):\n        pass\n\n# -----------------------------------------------------------------\n'"
CGNS/NAV/weditors.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS.NAV - Python package for CFD General Notation System - NAVigater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\n#from CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nimport re\n\nfrom qtpy.QtWidgets import QTextEdit\nfrom qtpy.QtGui import (QColor, QSyntaxHighlighter, QTextCursor, QFont, QTextCharFormat)\n\n\n# -----------------------------------------------------------------\nclass Q7DocEditor(QTextEdit):\n    def __init__(self, parent=None):\n        QTextEdit.__init__(self, parent)\n\n    def initText(self, text):\n        self.clear()\n        self.insertPlainText(text)\n        self.moveCursor(QTextCursor.Start, QTextCursor.MoveAnchor)\n        self.ensureCursorVisible()\n\n\n# -----------------------------------------------------------------\nclass Q7PythonEditor(QTextEdit):\n    def __init__(self, parent=None):\n        QTextEdit.__init__(self, parent)\n        self.highlighter = Q7PythonEditorHighlighter(self.document())\n        fsz = 12\n        ffm = \'Courier\'\n        self.setStyleSheet(""font: %dpt \\""%s\\"";"" % (fsz, ffm))\n\n    def initText(self, text):\n        self.clear()\n        self.insertPlainText(text)\n        self.moveCursor(QTextCursor.Start, QTextCursor.MoveAnchor)\n        self.ensureCursorVisible()\n\n\n# -----------------------------------------------------------------\nclass Q7PythonEditorHighlighter(QSyntaxHighlighter):\n    def __init__(self, *args):\n        keywords = r""\\bimport\\b|\\bas\\b|\\bfor\\b|\\bdef\\b|\\bpass\\b""\n        keywords += r""|\\bclass\\b|\\bfrom\\b|\\bif\\b|\\bthen\\b|\\belse\\b""\n        keywords += r""|\\belif\\b|\\btry\\b|\\bexcept\\b|\\bfinally\\b|\\braise\\b""\n        keywords += r""|\\bprint\\b|\\bin\\b|\\bnot\\b|\\band\\b|\\bor\\b|\\bcontinue\\b""\n        keywords += r""|\\bwhile\\b|\\breturn\\b|\\blambda\\b|\\bwith\\b|\\del\\b""\n        keywords += r""|\\bglobal\\b|\\byield\\b|\\bexec\\b|\\bassert\\b|\\break\\b""\n        constants = r""\\bNone\\b|\\bTrue\\b|\\bFalse\\b|\\bself\\b""\n        autovars = r""\\bNODE\\b|\\bNAME\\b|\\bVALUE\\b|\\bSIDSTYPE\\b|\\bCHILDREN\\b""\n        autovars += r""|\\bTREE\\b|\\bPATH\\b|\\bRESULT\\b|\\bARGS\\b|\\bPARENT\\b""\n        autovars += r""|\\bLINKS\\b|\\bSKIPS\\b|\\bSELECTED\\b""\n        numbers = r\'[-+]?\\d+\' + \'|[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?\'\n        comment = r\'\\#.*$\'\n        textstring = r\'""[^""]*?""|\\\'[^\\\']*?\\\'\'\n        self.f_keywords = QTextCharFormat()\n        self.f_keywords.setFontWeight(QFont.Bold)\n        self.f_keywords.setForeground(QColor(\'Blue\'))\n        self.f_comment = QTextCharFormat()\n        self.f_comment.setFontWeight(QFont.Light)\n        self.f_comment.setForeground(QColor(\'Red\'))\n        self.f_constants = QTextCharFormat()\n        self.f_constants.setFontWeight(QFont.Light)\n        self.f_constants.setForeground(QColor(\'Navy\'))\n        self.f_autovars = QTextCharFormat()\n        self.f_autovars.setFontWeight(QFont.Bold)\n        self.f_autovars.setForeground(QColor(\'Green\'))\n        self.f_textstring = QTextCharFormat()\n        self.f_textstring.setFontWeight(QFont.Bold)\n        self.f_textstring.setForeground(QColor(\'Coral\'))\n        self.f_numbers = QTextCharFormat()\n        self.f_numbers.setFontWeight(QFont.Light)\n        self.f_numbers.setForeground(QColor(\'Gray\'))\n        self.r_keywords = re.compile(keywords)\n        self.r_numbers = re.compile(numbers)\n        self.r_comment = re.compile(comment)\n        self.r_constants = re.compile(constants)\n        self.r_autovars = re.compile(autovars)\n        self.r_textstring = re.compile(textstring)\n        self.in_comment = False\n        self.in_string = False\n        self.r_syntax = []\n        self.r_syntax.append((self.r_keywords, self.f_keywords))\n        self.r_syntax.append((self.r_numbers, self.f_numbers))\n        self.r_syntax.append((self.r_autovars, self.f_autovars))\n        self.r_syntax.append((self.r_constants, self.f_constants))\n        self.r_syntax.append((self.r_comment, self.f_comment))\n        self.r_syntax.append((self.r_textstring, self.f_textstring))\n        QSyntaxHighlighter.__init__(self, *args)\n\n    def highlightBlock(self, textblock):\n        text = str(textblock)\n        fdef = self.format(0)\n        fmax = len(text)\n        for (rex, fmt) in self.r_syntax:\n            mit = rex.finditer(text)\n            for m in mit:\n                self.setFormat(m.span()[0], m.span()[1], fmt)\n                self.setFormat(m.span()[1], fmax, fdef)\n\n# --- last line\n'"
CGNS/NAV/wfile.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nimport os.path\nimport stat\nimport string\nimport time\nimport sys\n\nfrom CGNS.pyCGNSconfig import HAS_PY2, HAS_MSW\n\nfrom qtpy.QtCore import (Qt, QSortFilterProxyModel, QModelIndex, QFileInfo)\nfrom qtpy.QtWidgets import (QWidget, QFileIconProvider, QAbstractItemView, QFileSystemModel)\nfrom qtpy.QtGui import QIcon, QPixmap\n\nfrom CGNS.NAV.Q7FileWindow import Ui_Q7FileWindow\n\nimport CGNS.NAV.wmessages as MSG\n\nLOADBUTTON = [\'Load\', \'Load from selected file\']\nSAVEBUTTON = [\'Save\', \'Save to selected file\']\n(LOADMODE, SAVEMODE) = (0, 1)\n\n\n# -----------------------------------------------------------------\ndef checkFilePermission(path, write=False):\n    if HAS_MSW:\n        return True\n    if not (os.path.isfile(path) or os.path.isdir(path)):\n        return False\n    r = False\n    w = False\n    st = os.stat(path)\n    m = st.st_mode\n    if (st.st_uid == os.getuid()) and (m & stat.S_IRUSR):\n        r = True\n    if (st.st_gid == os.getgid()) and (m & stat.S_IRGRP):\n        r = True\n    if m & stat.S_IROTH:\n        r = True\n    if not r:\n        return False\n    if (st.st_uid == os.getuid()) and (m & stat.S_IWUSR):\n        w = True\n    if (st.st_gid == os.getgid()) and (m & stat.S_IWGRP):\n        w = True\n    if m & stat.S_IWOTH:\n        w = True\n    if write and not w:\n        return False\n    return True\n\n\n# -----------------------------------------------------------------\nclass Q7FileFilterProxy(QSortFilterProxyModel):\n    def __init__(self, parent):\n        super(Q7FileFilterProxy, self).__init__(parent)\n        # QSortFilterProxyModel.__init__(self, parent)\n        self.model = parent.model\n        self.treeview = parent.treeview\n        self.wparent = parent\n        self.setDynamicSortFilter(True)\n        import locale\n        locale.setlocale(locale.LC_ALL, \'C\')\n\n    def filterAcceptsRow(self, row, parentindex):\n        idx = self.model.index(row, 1, parentindex)\n        p = self.model.filePath(idx)\n        if isinstance(p, bytes):\n            p = str(self.model.filePath(idx).decode(\'utf-8\'))\n        elif HAS_PY2:\n            if isinstance(p, unicode):\n                p = str(p)\n        if not self.checkPermission(p):\n            return False\n        if os.path.isdir(p):\n            if self.wparent.cShowDirs.checkState() != Qt.Checked:\n                if len(p) > len(self.wparent.selecteddir):\n                    return False\n            return True\n        self.wparent.getBoxes()\n        # if (self.wparent.cShowAll.checkState()==Qt.Checked): xlist=[]\n        r = self.wparent.parent.matchFileExtensions(p)\n        return r\n\n    def checkPermission(self, path, write=False):\n        return checkFilePermission(path, write)\n\n    def lessThan(self, left, right):\n        c = self.sortColumn()\n        a = self.model.data(left)\n        b = self.model.data(right)\n        if c in (0, 2):\n            return a < b\n        if c == 3:\n            fmt_qt = ""dd-MM-yyyy hh:mm:ss""\n            left_time = self.model.lastModified(left)\n            right_time = self.model.lastModified(right)\n            a = left_time.toString(fmt_qt)\n            b = right_time.toString(fmt_qt)\n            fmtr = ""%d-%m-%Y %H:%M:%S""\n            fmtw = ""%Y-%m-%d %H:%M:%S""\n            ad = time.strptime(str(a), fmtr)\n            bd = time.strptime(str(b), fmtr)\n            af = time.strftime(fmtw, ad)\n            bf = time.strftime(fmtw, bd)\n            return af < bf\n        if c == 1:\n            wg = {\'MB\': 1e3, \'GB\': 1e6, \'KB\': 1}\n            try:\n                (av, au) = a.split()\n                (bv, bu) = b.split()\n            except ValueError:\n                return a < b\n            av = float(av.replace(\',\', \'.\')) * wg[au]\n            bv = float(bv.replace(\',\', \'.\')) * wg[bu]\n            return av < bv\n        return 1\n\n\n# -----------------------------------------------------------------\nclass Q7FileIconProvider(QFileIconProvider):\n    slist = [\'hdf\', \'HDF\', \'cgns\', \'CGNS\', \'adf\', \'ADF\']\n\n    def __init__(self):\n        super(Q7FileIconProvider, self).__init__()\n        self.dir = QIcon(QPixmap("":/images/icons/folder.png""))\n        self.cgns = QIcon(QPixmap("":/images/icons/tree-load.png""))\n        self.empty = QIcon()\n\n    def icon(self, fileinfo):\n        if not isinstance(fileinfo, QFileInfo):\n            return self.empty\n        if fileinfo.isDir():\n            return self.dir\n        if fileinfo.suffix() in Q7FileIconProvider.slist:\n            return self.cgns\n        return self.empty\n\n\n# -----------------------------------------------------------------\nclass Q7File(QWidget, Ui_Q7FileWindow):\n    def __init__(self, parent, mode=LOADMODE):\n        super(Q7File, self).__init__()\n        self.setupUi(self)\n        self.setWindowTitle(""Load/Save"")\n        self.parent = parent\n        self.iconProvider = Q7FileIconProvider()\n        self.model = QFileSystemModel()\n        self.model.setIconProvider(self.iconProvider)\n        self.proxy = Q7FileFilterProxy(self)\n        self.proxy.setSourceModel(self.model)\n        self.treeview.setModel(self.proxy)\n        self.setAttribute(Qt.WA_DeleteOnClose)\n        #\n        if HAS_PY2:\n            self.model.directoryLoaded[unicode].connect(self.expandCols)\n        else:\n            self.model.directoryLoaded[str].connect(self.expandCols)\n        self.treeview.expanded[QModelIndex].connect(self.expandCols)\n        self.treeview.clicked[QModelIndex].connect(self.clickedNode)\n        self.treeview.doubleClicked[QModelIndex].connect(self.clickedNodeAndLoad)\n        self.direntries.lineEdit().returnPressed.connect(self.changeDirEdit)\n        self.direntries.currentIndexChanged[int].connect(self.changeDirIndex)\n        self.fileentries.currentIndexChanged[int].connect(self.changeFile)\n        self.fileentries.lineEdit().editingFinished.connect(self.changeFile)\n        self.tabs.currentChanged[int].connect(self.currentTabChanged)\n        self.cShowAll.stateChanged[int].connect(self.updateView)\n        self.cShowDirs.stateChanged[int].connect(self.updateView)\n        self.rClearSelectedDirs.toggled[bool].connect(self.updateClearDirs)\n        self.rClearSelectedFiles.toggled[bool].connect(self.updateClearFiles)\n        self.rClearAllDirs.toggled[bool].connect(self.updateClearNone)\n        self.rClearNoHDF.toggled[bool].connect(self.updateClearNoHDF)\n        self.rClearNotFound.toggled[bool].connect(self.updateClearNotFound)\n        #\n        self.bClose.clicked.connect(self.closeUnlock)\n        self.bCurrent.clicked.connect(self.currentDir)\n        self.bBack.clicked.connect(self.backDir)\n        self.bInfo.clicked.connect(self.infoFileView)\n        self.bInfo2.clicked.connect(self.infoFileView)\n        self.bClearHistory.clicked.connect(self.doClearHistory)\n        self.mode = mode\n        if self.mode == SAVEMODE:\n            self.setMode(False)\n        else:\n            self.setMode(True)\n        self.setBoxes()\n        self.parent.getHistory()\n        self.updateHistory()\n        self.updateClearNotFound()\n\n    def closeUnlock(self):\n        self.parent.signals.cancel.emit()\n        self.close()\n\n    def closeEvent(self, event):\n        self.closeUnlock()\n\n    def infoFileView(self):\n        self.parent.helpWindow(\'File\')\n\n    def updateView(self):\n        p = self.direntries.currentText()\n        self.setCurrentDir(p)\n        print(\'CURRENT\', p)\n        # self.proxy.reset()\n        self.proxy.beginResetModel()\n        self.proxy.endResetModel()\n        self.setCurrentDir(p)\n        self.updateFileIfFound()\n\n    def currentTabChanged(self, tabno):\n        self.expandCols()\n        self.setBoxes()\n\n    def getOpt(self, name):\n        return getattr(self, \'_Ui_Q7FileWindow__O_\' + name.lower())\n\n    def setBoxes(self):\n        ckh = self.getOpt(\'FilterHDFFiles\')\n        ckg = self.getOpt(\'FilterCGNSFiles\')\n        if self.parent.getOptionValue(\'FilterHDFFiles\'):\n            ckh.setCheckState(Qt.Checked)\n        else:\n            ckh.setCheckState(Qt.Unchecked)\n        if self.parent.getOptionValue(\'FilterCGNSFiles\'):\n            ckg.setCheckState(Qt.Checked)\n        else:\n            ckg.setCheckState(Qt.Unchecked)\n        if ((ckh.checkState() == Qt.Unchecked) and\n                (ckg.checkState() == Qt.Unchecked)):\n            self.cShowAll.setCheckState(Qt.Checked)\n\n    def getBoxes(self):\n        if self.getOpt(\'FilterHDFFiles\').checkState() == Qt.Unchecked:\n            self.parent.setOptionValue(\'FilterHDFFiles\', False)\n        else:\n            self.parent.setOptionValue(\'FilterHDFFiles\', True)\n        if self.getOpt(\'FilterCGNSFiles\').checkState() == Qt.Unchecked:\n            self.parent.setOptionValue(\'FilterCGNSFiles\', False)\n        else:\n            self.parent.setOptionValue(\'FilterCGNSFiles\', True)\n\n    def expandCols(self, *args):\n        self.getBoxes()\n        for n in range(3):\n            self.treeview.resizeColumnToContents(n)\n\n    def currentDir(self, *args):\n        # p=os.path.split(self.path())[0]\n        p = os.getcwd()\n        self.setCurrentDir(p)\n\n    def backDir(self, *args):\n        p = os.path.split(self.path())[0]\n        self.setCurrentDir(p)\n\n    def changeDirEdit(self, *args):\n        self.changeDir(args)\n\n    def changeDirText(self, *args):\n        self.changeDir(args)\n\n    def changeDirIndex(self, *args):\n        self.changeDir(args)\n\n    def changeDir(self, *args):\n        if self.updateMode:\n            return\n        p = str(self.direntries.currentText())\n        if os.path.isdir(p):\n            self.updateView()\n        else:\n            reply = MSG.wQuestion(self.parent, 110, \'Directory not found...\',\n                                  """"""The path below doesn\'t exist, do you want to remove<br>\n                                     it from the history?<br>%s"""""" % p)\n            if reply == MSG.OK:\n                ix = self.direntries.currentIndex()\n                self.direntries.removeItem(ix)\n\n    def changeFile(self, *args):\n        self.selectedfile = str(self.fileentries.lineEdit().text())\n        d = None\n        if self.cAutoDir.checkState() == Qt.Checked:\n            d = self.parent.getHistoryFile(self.selectedfile)\n        if d is not None:\n            self.selecteddir = d[0]\n            ix = self.direntries.findText(self.selecteddir)\n            if ix != -1:\n                self.direntries.setCurrentIndex(ix)\n        else:\n            self.selecteddir = self.direntries.lineEdit().text()\n        self.updateFileIfFound()\n\n    def selectedPath(self):\n        return os.path.join(self.selecteddir, self.selectedfile)\n\n    def updateFileIfFound(self):\n        filepath = self.selectedPath()\n        midx = self.model.index(filepath)\n        if midx.row == 1:\n            return\n        fidx = self.proxy.mapFromSource(midx)\n        if fidx.row == 1:\n            return\n        self.treeview.setCurrentIndex(fidx)\n        self.treeview.scrollTo(fidx)\n\n    def setCurrentDir(self, newpath):\n        self.model.setRootPath(newpath)\n        midx = self.model.index(newpath)\n        fidx = self.proxy.mapFromSource(midx)\n        self.treeview.setRootIndex(fidx)\n        self.treeview.setCurrentIndex(fidx)\n        self.direntries.setItemText(self.direntries.currentIndex(), newpath)\n        self.selecteddir = newpath\n\n    def setMode(self, load=True):\n        if load:\n            self.bAction.clicked.connect(self.load)\n            self.bAction.setToolTip(LOADBUTTON[1])\n            self.bAction.setText(LOADBUTTON[0])\n            self.cOverwrite.setEnabled(False)\n            self.cReadOnly.setEnabled(True)\n            self.cNoLargeData.setEnabled(True)\n            self.cFollowLinks.setEnabled(True)\n            self.cDeleteMissing.setEnabled(False)\n            if OCTXT.DoNotLoadLargeArrays:\n                self.cNoLargeData.setCheckState(Qt.Checked)\n            else:\n                self.cNoLargeData.setCheckState(Qt.Unchecked)\n            if OCTXT.FollowLinksAtLoad:\n                self.cFollowLinks.setCheckState(Qt.Checked)\n            else:\n                self.cFollowLinks.setCheckState(Qt.Unchecked)\n        else:\n            self.bAction.clicked.connect(self.save)\n            self.bAction.setToolTip(SAVEBUTTON[1])\n            self.bAction.setText(SAVEBUTTON[0])\n            self.cOverwrite.setEnabled(True)\n            self.cReadOnly.setEnabled(False)\n            self.cNoLargeData.setEnabled(False)\n            self.cFollowLinks.setEnabled(False)\n            self.cDeleteMissing.setEnabled(True)\n            if OCTXT.FileUpdateRemovesChildren:\n                self.cDeleteMissing.setCheckState(Qt.Checked)\n            else:\n                self.cDeleteMissing.setCheckState(Qt.Unchecked)\n\n    def updateHistory(self):\n        self.updateMode = True\n        self.direntries.clear()\n        self.fileentries.clear()\n        hlist = self.parent.getHistory(fromfile=False)\n        flist = []\n        self.fileentries.addItem("""")\n        for i in list(hlist):\n            if i != self.parent.getHistoryLastKey():\n                self.direntries.addItem(str(i))\n                flist = flist + hlist[i]\n        for i in flist:\n            self.fileentries.addItem(str(i))\n        self.historyfiles = flist\n        self.historydirs = list(hlist)\n        if self.parent.getHistoryLastKey() in list(hlist):\n            self.selecteddir = hlist[self.parent.getHistoryLastKey()][0]\n            self.selectedfile = hlist[self.parent.getHistoryLastKey()][1]\n            # ixd=self.direntries.findText(self.selecteddir)\n            self.setCurrentDir(self.selecteddir)\n            ixf = self.fileentries.findText(self.selectedfile)\n            self.fileentries.setCurrentIndex(ixf)\n            self.changeFile()\n        else:\n            self.selecteddir = os.getcwd()\n            self.selectedfile = """"\n            self.setCurrentDir(self.selecteddir)\n        self.updateMode = False\n\n    def doClearHistory(self):\n        if self.rClearNoHDF.isChecked():\n            reply = MSG.wQuestion(self.parent, 120, \'Clear history\',\n                                  """"""You really want to remove directory entries from history<br>\n                                     where no file with defined extensions has been found?<br>"""""")\n            if reply == MSG.OK:\n                for d in self.parent.getDirNoHDFFromHistory():\n                    self.parent.removeDirFromHistory(d)\n                    self.updateHistory()\n                    self.lClear.clear()\n        if self.rClearNotFound.isChecked():\n            reply = MSG.wQuestion(self.parent, 121, \'Clear history\',\n                                  """"""You really want to remove <b>NOT FOUND</b> entries from<br>\n                                     the history of used directories?<br>"""""")\n            if reply == MSG.OK:\n                for d in self.parent.getDirNotFoundFromHistory():\n                    self.parent.removeDirFromHistory(d)\n                    self.updateHistory()\n                    self.lClear.clear()\n        if self.rClearAllDirs.isChecked():\n            reply = MSG.wQuestion(self.parent, 122, \'Clear history\',\n                                  """"""You really want to remove <b>ALL</b> entries from the<br>\n                                     the history of used files and directories?<br>"""""")\n            if reply == MSG.OK:\n                self.parent.destroyHistory()\n                self.updateHistory()\n        if self.rClearSelectedDirs.isChecked():\n            for it in self.lClear.selectedItems():\n                self.parent.removeDirFromHistory(it.text())\n            self.updateHistory()\n            self.updateClearDirs()\n        if self.rClearSelectedFiles.isChecked():\n            for it in self.lClear.selectedItems():\n                fd = self.parent.getHistoryFile(it.text())\n                if fd is not None:\n                    self.parent.removeFileFromHistory(*fd)\n            self.updateHistory()\n            self.updateClearFiles()\n\n    def updateClearNone(self):\n        self.lClear.clear()\n\n    def updateClearNoHDF(self):\n        self.lClear.clear()\n        self.lClear.setSelectionMode(QAbstractItemView.NoSelection)\n        for d in self.parent.getDirNoHDFFromHistory():\n            self.lClear.addItem(d)\n\n    def updateClearNotFound(self):\n        self.lClear.clear()\n        self.lClear.setSelectionMode(QAbstractItemView.NoSelection)\n        for d in self.parent.getDirNotFoundFromHistory():\n            self.lClear.addItem(d)\n\n    def updateClearDirs(self):\n        self.lClear.clear()\n        self.lClear.setSelectionMode(QAbstractItemView.MultiSelection)\n        for d in self.historydirs:\n            self.lClear.addItem(d)\n\n    def updateClearFiles(self):\n        self.lClear.clear()\n        self.lClear.setSelectionMode(QAbstractItemView.MultiSelection)\n        for d in self.historyfiles:\n            self.lClear.addItem(d)\n\n    def load(self):\n        diag = self.checkTarget(self.selectedPath())\n        if diag is None:\n            self.parent.signals.buffer = self.selectedPath()\n            self.hide()\n            self.parent.signals.loadFile.emit()\n            self.close()\n        else:\n            MSG.message(""Load file: %s"" % self.selectedPath(),\n                        diag, MSG.INFO)\n\n    def save(self):\n        diag = self.checkTarget(self.selectedPath(), write=True)\n        if diag is None:\n            self.parent.signals.buffer = self.selectedPath()\n            self.hide()\n            self.parent.signals.saveFile.emit()\n            self.close()\n        else:\n            MSG.message(""Save file: %s"" % self.selectedPath(),\n                        diag, MSG.INFO)\n\n    def checkTarget(self, filename, write=False):\n        if os.path.isfile(filename) and not write:\n            return None\n        if not os.path.isfile(filename) and write:\n            return None\n        if self.cOverwrite.isChecked():\n            sc = ""The file is <b>completely replaced</b> by the current tree""\n        else:\n            sc = ""The file is <b>updated</b> with the current tree contents.""\n            if self.cDeleteMissing.isChecked():\n                sc += ""The nodes <b>NOT</b> found in the current tree are removed from the updated file""\n            else:\n                sc += ""The nodes <b>NOT</b> found in the current tree are kept unchanged""\n        reply = MSG.wQuestion(self, 132, \'Saving on an already existing file\',\n                              """"""You are going to save into an existing file,\n                              based on the current options you have and the target tree you want to save,\n                              the result would be the following:<p>%s<p>\n                              If this not the way you want the save to operate, please <i>abort</b> this\n                              file selection and check the <i>Load/Save option</i> tab.\n                              You still want to write on this file?"""""" % sc,\n                              buttons=(\'Continue to save on existing file\',\n                                       \'Abort save\'))\n        if reply:\n            return None\n        return \'User Abort\'\n\n    def path(self, index=None):\n        if index is None:\n            idx = self.treeview.currentIndex()\n            p = str(self.model.filePath(self.proxy.mapToSource(idx)))\n        else:\n            p = str(self.model.filePath(self.proxy.mapToSource(index)))\n        return p\n\n    def clickedNodeAndLoad(self, index):\n        self.clickedNode(index)\n        if self.mode == SAVEMODE:\n            self.save()\n        else:\n            self.load()\n\n    def clickedNode(self, index):\n        self.treeview.resizeColumnToContents(0)\n        p = self.path(index)\n        if os.path.isdir(p):\n            f = \'\'\n            d = p\n            self.setCurrentDir(d)\n        else:\n            f = os.path.basename(self.path(index))\n            d = os.path.dirname(self.path(index))\n        ix = self.direntries.findText(d)\n        if ix != -1:\n            self.direntries.setCurrentIndex(ix)\n        else:\n            self.direntries.addItem(d)\n            self.direntries.setCurrentIndex(self.direntries.findText(d))\n        ix = self.fileentries.findText(f)\n        if ix != -1:\n            self.fileentries.setCurrentIndex(ix)\n        else:\n            self.fileentries.addItem(f)\n            self.fileentries.setCurrentIndex(self.fileentries.findText(f))\n        self.selecteddir = self.direntries.lineEdit().text()\n        self.selectedfile = self.fileentries.lineEdit().text()\n\n# --- last line\n'"
CGNS/NAV/wfingerprint.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nfrom builtins import (str, bytes, range, dict, type)\n\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nimport os\nimport os.path\nimport time\nimport stat\nimport sys\n\nimport CGNS.MAP\nimport CGNS.PAT.cgnsutils as CGU\n\nfrom qtpy.QtCore import QCoreApplication\nfrom qtpy.QtCore import Qt, QThread, QMutex, Signal\nfrom qtpy.QtWidgets import QWidget\nfrom qtpy.QtGui import (QIcon, QPixmap, QFont, QCursor)\n\nfrom CGNS.NAV.wstylesheets import Q7TREEVIEWSTYLESHEET, Q7TABLEVIEWSTYLESHEET\nfrom CGNS.NAV.wstylesheets import Q7CONTROLVIEWSTYLESHEET\nfrom CGNS.NAV.wfile import checkFilePermission\n\nimport CGNS.NAV.wmessages as MSG\n\ntry:\n    from pwd import getpwuid\nexcept ImportError:\n    def getpwuid(a):\n        return (0,)\ntry:\n    from grp import getgrgid\nexcept ImportError:\n    def getgrgid(a):\n        return (0,)\n\n\n# -----------------------------------------------------------------\nclass Q7CHLoneProxy(object):\n    def __init__(self, hasthreads=False):\n        self._data = None\n        self._hasthreads = hasthreads\n        self._thread = None\n\n    def kill(self):\n        self._data = None\n        if self._thread is not None:\n            self._thread.quit()\n\n    def load(self, control, selectedfile):\n        self._control = control\n        self._thread = Q7CHLoneThread(control, selectedfile)\n        self._thread.datacompleted.connect(self.proxyCompleted,Qt.QueuedConnection)\n        self._data = None\n        if self._hasthreads:\n            self._thread.start()\n        else:\n            self._thread.run()\n\n    @property\n    def data(self):\n        return self._data\n\n    # not useful anymore ?\n    #@Slot(tuple, name=\'proxyCompleted\')\n    def proxyCompleted(self, data):\n        if data[0] is None:\n            self._data = data\n        else:\n            self._data = data[0]\n        self._control.signals.fgprint = self._data\n        self._control.signals.loadCompleted.emit()\n\n\n# -----------------------------------------------------------------\nclass Q7CHLoneThread(QThread):\n    datacompleted = Signal(tuple, name=\'datacompleted\')\n\n    def __init__(self, control, selectedfile):\n        super(Q7CHLoneThread, self).__init__(None)\n        self._control = control\n        self._selectedfile = selectedfile\n        self._data = None\n\n    def run(self):\n        control = self._control\n        selectedfile = str(self._selectedfile)\n        Q7FingerPrint.Lock()\n        kw = {}\n        (filedir, filename) = (os.path.abspath(os.path.dirname(selectedfile)),\n                               os.path.basename(selectedfile))\n        if ""%s/%s"" % (filedir, filename) in Q7FingerPrint.getExpandedFilenameList():\n            Q7FingerPrint.Unlock()\n            txt = """"""The current file is already open:""""""\n            self._data = (None, (0, ""%s/%s"" % (filedir, filename), txt))\n            self.datacompleted.emit(self._data)\n            control.readyCursor()\n            return\n        slp = OCTXT.LinkSearchPathList\n        slp += [filedir]\n        slp = [str(lp) for lp in slp]\n        loadfilename = selectedfile\n        flags = CGNS.MAP.S2P_DEFAULTS\n        maxdataload = -1\n        if OCTXT.CHLoneTrace:\n            flags |= CGNS.MAP.S2P_TRACE\n        if OCTXT.DoNotLoadLargeArrays:\n            flags |= CGNS.MAP.S2P_NODATA\n            maxdataload = OCTXT.MaxLoadDataSize\n        if OCTXT.FollowLinksAtLoad:\n            flags |= CGNS.MAP.S2P_FOLLOWLINKS\n        try:\n            if not CGNS.MAP.probe(loadfilename):\n                if ((os.path.splitext(filename)[1] in OCTXT.CGNSFileExtension) and\n                        OCTXT._ConvertADFFiles):\n                    loadfilename = Q7FingerPrint.fileconversion(filedir,\n                                                                filename, control)\n                    kw[\'converted\'] = True\n                    kw[\'convertedAs\'] = loadfilename\n            if maxdataload:\n                (tree, links, paths) = CGNS.MAP.load(loadfilename, flags=flags,\n                                                     lksearch=slp,\n                                                     maxdata=maxdataload)\n            else:\n                (tree, links, paths) = CGNS.MAP.load(loadfilename, flags=flags,\n                                                     lksearch=slp)\n        except CGNS.MAP.error as chlex:\n            Q7FingerPrint.Unlock()\n            txt = """"""Load aborted by CGNS.MAP (file:%s)""""""%loadfilename\n            code = chlex.args[0][0]\n            msg = chlex.args[0][1]\n            self._data = (None, (code, msg, txt))\n            self.datacompleted.emit(self._data)\n            control.readyCursor()\n            return\n        except Exception as e:\n            Q7FingerPrint.Unlock()\n            txt = """"""Aborted: %s"""""" % e\n            self._data = (None, (0, txt, \'\'))\n            self.datacompleted.emit(self._data)\n            control.readyCursor()\n            return\n        kw[\'isfile\'] = True\n        Q7FingerPrint.Unlock()\n        self._data = (Q7FingerPrint(control, filedir, filename,\n                                    tree, links, paths, **kw),)\n        self.datacompleted.emit(self._data)\n\n\n# -----------------------------------------------------------------\nclass Q7Window(QWidget, object):\n    VIEW_CONTROL = \'C\'\n    VIEW_DIAG = \'D\'\n    VIEW_TOOLS = \'X\'\n    VIEW_TREE = \'T\'\n    VIEW_OPTION = \'O\'\n    VIEW_VTK = \'G\'\n    VIEW_FORM = \'F\'\n    VIEW_QUERY = \'Q\'\n    VIEW_SELECT = \'S\'\n    VIEW_PATTERN = \'P\'\n    VIEW_INFO = \'I\'\n    VIEW_LINK = \'L\'\n    VIEW_DIFF = \'Z\'\n    VIEW_MESSAGE = \'M\'\n    HISTORYLASTKEY = \'///LAST///\'\n    (I_MOD_SAV, I_UMOD_SAV, I_MOD_USAV, I_UMOD_USAV, I_TREE, I_VTK, I_QUERY, I_DIFF,\n     I_FORM, I_SELECT, I_PATTERN, I_DIAG, I_TOOLS, I_LINK, I_D_INF, I_D_ERR, I_L_OKL,\n     I_L_NFL, I_L_NRL, I_L_NNL, I_L_IGN, I_L_ERL, I_C_SFL, I_C_SWR, I_EMPTY,\n     I_MARK) = range(26)\n    ICONMAPPING = {\n        I_MOD_SAV: "":/images/icons/save-S-M.png"",\n        I_UMOD_SAV: "":/images/icons/save-S-UM.png"",\n        I_MOD_USAV: "":/images/icons/save-US-M.png"",\n        I_UMOD_USAV: "":/images/icons/save-US-UM.png"",\n        I_TREE: "":/images/icons/tree-load.png"",\n        I_VTK: "":/images/icons/vtkview.png"",\n        I_QUERY: "":/images/icons/operate-execute.png"",\n        I_DIFF: "":/images/icons/merge.png"",\n        I_FORM: "":/images/icons/form.png"",\n        I_SELECT: "":/images/icons/mark-node.png"",\n        I_PATTERN: "":/images/icons/pattern.png"",\n        I_DIAG: "":/images/icons/check-all.png"",\n        I_TOOLS: "":/images/icons/toolsview.png"",\n        I_LINK: "":/images/icons/link-node.png"",\n        I_D_INF: "":/images/icons/subtree-sids-warning.png"",\n        I_D_ERR: "":/images/icons/subtree-sids-failed.png"",\n        I_L_OKL: "":/images/icons/link.png"",\n        I_L_NFL: "":/images/icons/link-nofile.png"",\n        I_L_NRL: "":/images/icons/link-noreadable.png"",\n        I_L_NNL: "":/images/icons/link-nonode.png"",\n        I_L_IGN: "":/images/icons/link-error.png"",\n        I_L_ERL: "":/images/icons/link-ignore.png"",\n        I_C_SFL: "":/images/icons/check-fail.png"",\n        I_C_SWR: "":/images/icons/check-warn.png"",\n        I_EMPTY: "":/images/icons/empty.png"",\n        I_MARK: "":/images/icons/mark-node.png"",\n    }\n    control_log = None\n    _icons = {}\n    _title = {}\n\n    @classmethod\n    def initClassConstants(cls):\n        for ik in cls.ICONMAPPING:\n            cls._icons[ik] = QIcon(QPixmap(cls.ICONMAPPING[ik]))\n        cls._title[cls.VIEW_CONTROL] = \'Control\'\n        cls._title[cls.VIEW_OPTION] = \'Options\'\n        cls._title[cls.VIEW_TOOLS] = \'Tools\'\n        cls._busyx = QCursor(QPixmap("":/images/icons/cgSpy.png""))\n\n    @classmethod\n    def IC(cls, tag):\n        return cls._icons[tag]\n\n    def __init__(self, vtype, control, path, fgprintindex):\n        if fgprintindex is None:\n            fgprintindex = -1\n        if Q7Window._icons == {}:\n            Q7Window.initClassConstants()\n        QWidget.__init__(self, None)\n        self._stylesheet = None\n        if vtype == Q7Window.VIEW_TREE:\n            self._stylesheet = Q7TREEVIEWSTYLESHEET\n        if vtype == Q7Window.VIEW_CONTROL:\n            self._stylesheet = Q7CONTROLVIEWSTYLESHEET\n        self.setupUi(self)\n        # self.setAttribute(Qt.WA_DeleteOnClose)\n        if self._stylesheet is not None:\n            self.setStyleSheet(self._stylesheet)\n        self.getOptions()\n        self._timercount = 0\n        self._vtype = vtype\n        self._path = path\n        self._control = control\n        self._application = None\n        self._fgindex = fgprintindex\n        self._index = self.addChildWindow()\n        self._lockableWidgets = []\n        self._lockedWidgets = []\n        fn = \'\'\n        if self._fgindex != -1:\n            fn = Q7FingerPrint.getByIndex(self._fgindex).filename\n        if self._index != 0:\n            tit = ""%s: %s%.3d"" % (OCTXT._ToolName, self._vtype, self._index)\n        else:\n            if vtype in self._title:\n                tit = ""%s: %s"" % (OCTXT._ToolName, self._title[vtype])\n            else:\n                tit = ""%s: ---"" % OCTXT._ToolName\n        self.setWindowTitle(tit)\n        try:\n            self.bBackControl.clicked.connect(self.backcontrol)\n        except AttributeError:\n            pass\n        self._readonly = False\n        if not control.verbose:\n            sys.stdout = self.control_log\n            sys.stderr = self.control_log\n\n    @property\n    def FG(self):\n        return Q7FingerPrint.getByIndex(self._fgindex)\n\n    def validateOption(self, name, value):\n        # if (name[0]==\'_\'): return False\n        return True\n\n    def getOptions(self):\n        try:\n            if self._options is None:\n                self._options = {}\n        except AttributeError:\n            self._options = {}\n        user_options = OCTXT._readOptions(self)\n        for k in dir(OCTXT):\n            self.setOptionValue(k, getattr(OCTXT, k))\n        for k in OCTXT._Default_Fonts:\n            self.setOptionValue(k, OCTXT._Default_Fonts[k])\n        if user_options is not None:\n            for k in user_options:\n                self.setOptionValue(k, user_options[k])\n        return self._options\n\n    def setOptions(self):\n        OCTXT._writeOptions(self)\n\n    def getOptionValue(self, name):\n        return self._options[name]\n\n    def setOptionValue(self, name, value):\n        if self.validateOption(name, value):\n            self._options[name] = value\n            return value\n        return self._options[name]\n\n    def matchFileExtensions(self, filename):\n        xl = self.getFileExtensions()\n        (name, ext) = os.path.splitext(os.path.basename(filename))\n        return ((xl == []) or (ext in xl))\n\n    def getFileExtensions(self):\n        xlist = []\n        if OCTXT.FilterCGNSFiles:\n            xlist += OCTXT.CGNSFileExtension\n        if OCTXT.FilterHDFFiles:\n            xlist += OCTXT.HDFFileExtension\n        if OCTXT.FilterOwnFiles:\n            xlist += OCTXT.OwnFileExtension\n        return xlist\n\n    def getHistoryLastKey(self):\n        return Q7Window.HISTORYLASTKEY\n\n    def getHistory(self, fromfile=True):\n        if fromfile:\n            self._history = OCTXT._readHistory(self)\n            if self._history is None:\n                self._history = {}\n        return self._history\n\n    def getHistoryFile(self, filename):\n        if self._history is None:\n            return None\n        for d in self._history:\n            if filename in self._history[d]:\n                return (d, filename)\n        return None\n\n    def destroyHistory(self):\n        self._history = {}\n        OCTXT._writeHistory(self)\n        return self._history\n\n    def getDirNotFoundFromHistory(self):\n        nf = []\n        for d in list(self._history):\n            if not os.path.exists(d) and not (d == Q7Window.HISTORYLASTKEY):\n                nf.append(d)\n        return nf\n\n    def getDirNoHDFFromHistory(self):\n        nf = []\n        for d in list(self._history):\n            if not os.path.exists(d) or (d == Q7Window.HISTORYLASTKEY):\n                pass\n            else:\n                fl = [f for f in os.listdir(d) if self.matchFileExtensions(f)]\n                if not fl:\n                    nf.append(d)\n        return nf\n\n    def removeDirFromHistory(self, filedir):\n        if filedir in self._history:\n            del self._history[filedir]\n        if ((self.getLastFile() is not None) and\n                (self._history[Q7Window.HISTORYLASTKEY][0] == filedir)):\n            del self._history[Q7Window.HISTORYLASTKEY]\n        OCTXT._writeHistory(self)\n\n    def removeFileFromHistory(self, filedir, filename):\n        if (filedir in self._history and\n                (filename in self._history[filedir])):\n            self._history[filedir].remove(filename)\n        if ((self.getLastFile() is not None) and\n                (self._history[Q7Window.HISTORYLASTKEY][1] == filename)):\n            del self._history[Q7Window.HISTORYLASTKEY]\n        OCTXT._writeHistory(self)\n\n    def setHistory(self, filedir, filename):\n        for d in list(self._history):\n            if d == filedir:\n                if filename not in self._history[filedir]:\n                    self._history[filedir].append(filename)\n            else:\n                self._history[filedir] = [filename]\n        if self._history == {}:\n            self._history[filedir] = [filename]\n        self._history[Q7Window.HISTORYLASTKEY] = (filedir, filename)\n        OCTXT._writeHistory(self)\n        return self._history\n\n    def getQueries(self):\n        self._queries = OCTXT._readQueries(self)\n        if self._queries is None:\n            self._queries = []\n        return self._queries\n\n    def setQueries(self):\n        OCTXT._writeQueries(self)\n        return self._queries\n\n    def getLastFile(self):\n        if ((self._history == {}) or\n                    Q7Window.HISTORYLASTKEY not in self._history):\n            return None\n        return self._history[Q7Window.HISTORYLASTKEY]\n\n    def addChildWindow(self):\n        if self.FG is None:\n            return 0\n        self._index = self.FG.addChild(self._vtype, self)\n        l = [self.FG._status, self._vtype, \'%.3d\' % self._index]\n        l += [self.FG.filedir, self.FG.filename, self._path]\n        self._control.addLine(l, self.FG)\n        return self._index\n\n    def closeEvent(self, event):\n        self._control.delLine(\'%.3d\' % self._index)\n        if self.FG is not None:\n            self.FG.closeView(self._index)\n        event.accept()\n\n    def backcontrol(self):\n        if self.FG is not None:\n            self.FG.raiseControlView()\n        self._control.selectLine(\'%.3d\' % self._index)\n\n    def busyCursor(self):\n        self._control.lockView(True)\n        Q7FingerPrint.disableAllViewsButtons(True)\n\n    def readyCursor(self):\n        self._control.lockView(False)\n        Q7FingerPrint.disableAllViewsButtons(False)\n\n    def lockView(self, lock):\n        for wid in self._lockableWidgets:\n            if not lock and wid in self._lockedWidgets:\n                wid.setDisabled(lock)\n                self._lockedWidgets.remove(wid)\n            if lock and wid.isEnabled():\n                self._lockedWidgets.append(wid)\n                wid.setDisabled(lock)\n        if self.FG is not None:\n            self.FG._locked = lock\n\n    def isLocked(self):\n        if self.FG is None:\n            return self.FG._locked\n        return False\n\n    def lockable(self, widget):\n        self._lockableWidgets.append(widget)\n\n    def refreshScreen(self):\n        if self._control._application is not None:\n            self._control._application.processEvents()\n\n    def setLabel(self, it, text):\n        it.setText(text)\n        it.setFont(QFont(""Courier""))\n        it.setReadOnly(True)\n\n    def _T(self, msg):\n        if self.getOptionValue(\'NAVTrace\'):\n            print(\'### cg_look:\', msg)\n\n\n# -----------------------------------------------------------------\nclass Q7FingerPrint:\n    STATUS_UNCHANGED = \'U\'\n    STATUS_MODIFIED = \'M\'\n    STATUS_SAVEABLE = \'S\'\n    STATUS_CONVERTED = \'C\'\n    STATUS_LIST = (STATUS_UNCHANGED, STATUS_MODIFIED, STATUS_CONVERTED,\n                   STATUS_SAVEABLE)\n    __mutex = QMutex()\n    __chloneproxy = None\n    __viewscounter = 0\n    __fingerprintcounter = 0\n    __extension = []  # the single variable that holds the fingerprint reference\n\n    @classmethod\n    def proxy(cls):\n        cls.Lock()\n        if cls.__chloneproxy is None:\n            thrd = OCTXT.ActivateMultiThreading\n            # BLOCK ACTUAL MULTI-THREADING HERE\n            cls.__chloneproxy = Q7CHLoneProxy(thrd)\n        cls.Unlock()\n        return cls.__chloneproxy\n\n    @classmethod\n    def killProxy(cls):\n        cls.Lock()\n        if cls.__chloneproxy is not None:\n            cls.__chloneproxy.kill()\n        cls.Unlock()\n\n    @classmethod\n    def Lock(cls):\n        cls.__mutex.lock()\n\n    @classmethod\n    def Unlock(cls):\n        cls.__mutex.unlock()\n\n    @classmethod\n    def fileconversion(cls, fdir, filein, control):\n        fileout = OCTXT.TemporaryDirectory + \'/\' + filein + \'.hdf\'\n        count = 1\n        while os.path.exists(fileout):\n            fileout = OCTXT.TemporaryDirectory + \'/\' + filein + \'.%.3d.hdf\' % count\n            count += 1\n        com = \'(cd %s; %s -f -h %s %s)\' % (fdir,\n                                           OCTXT.ADFConversionCom,\n                                           filein, fileout)\n        os.system(com)\n        return fileout\n\n    @classmethod\n    def treeLoad(cls, control, selectedfile):\n        control.loadOptions()\n        proxy = cls.proxy()\n        proxy.load(control, selectedfile)\n        cls.refreshScreen()\n        return\n\n    @classmethod\n    def treeSave(cls, control, fgprint, f, saveas):\n        flags = CGNS.MAP.S2P_DEFAULT\n        if OCTXT.CHLoneTrace:\n            flags |= CGNS.MAP.S2P_TRACE\n        if not saveas:\n            flags |= CGNS.MAP.S2P_UPDATE\n            flags |= CGNS.MAP.S2P_DELETEMISSING\n        tree = fgprint.tree\n        lazylist = [CGU.getPathNoRoot(path) for path in list(fgprint.lazy)]\n        try:\n            CGNS.MAP.save(f, tree, links=fgprint.links, flags=flags, skip=lazylist)\n        except (CGNS.MAP.error,) as chlex:\n            txt = """"""The current save operation has been aborted (CHLone):""""""\n            control.readyCursor()\n            MSG.wError(control, 130, txt, chlex.args[0][1])\n            return None\n        except (Exception,) as e:\n            txt = """"""The current save operation has been aborted: %s"""""" % e\n            control.readyCursor()\n            MSG.wError(control, 131, txt, \'\')\n            return None\n        fgprint.updateFileStats(f, saveas=True)\n\n    @classmethod\n    def closeAllTrees(cls):\n        while cls.__extension:\n            x = cls.__extension[0]\n            x.closeAllViews()\n\n    @classmethod\n    def refreshScreen(cls):\n        QCoreApplication.processEvents()\n\n    @classmethod\n    def disableAllViewsButtons(cls, lock):\n        cls.Lock()\n        for x in cls.__extension:\n            for vtype in x.views:\n                for (v, i) in x.views[vtype]:\n                    for wid in v._lockableWidgets:\n                        if not lock and wid in v._lockedWidgets:\n                            wid.setDisabled(lock)\n                            v._lockedWidgets.remove(wid)\n                        if lock and wid.isEnabled():\n                            v._lockedWidgets.append(wid)\n                            wid.setDisabled(lock)\n                    if v.FG is not None:\n                        v.FG._locked = lock\n        cls.Unlock()\n\n    @classmethod\n    def raiseView(cls, idx):\n        cls.Lock()\n        for x in cls.__extension:\n            for vtype in x.views:\n                for (v, i) in x.views[vtype]:\n                    if i == int(idx):\n                        v.raise_()\n        cls.Unlock()\n\n    @classmethod\n    def infoView(cls, idx):\n        f = cls.getFingerPrint(idx)\n        v = cls.getView(idx)\n        if f is None:\n            return (None, None, None)\n        if not f.isfile:\n            return (f, None, None)\n        return (f, v, f.getInfo())\n\n    @classmethod\n    def getView(cls, idx):\n        for x in cls.__extension:\n            for vtype in x.views:\n                for (v, i) in x.views[vtype]:\n                    if i == int(idx):\n                        return v\n        return None\n\n    @classmethod\n    def getViewType(cls, idx):\n        vw = cls.getView(idx)\n        for x in cls.__extension:\n            for vtype in x.views:\n                for (v, i) in x.views[vtype]:\n                    if (v == vw) and (i == int(idx)):\n                        return vtype\n        return None\n\n    @classmethod\n    def getFingerPrint(cls, idx):\n        ix = int(idx)\n        for x in cls.__extension:\n            for vtype in x.views:\n                for (v, i) in x.views[vtype]:\n                    if i == ix:\n                        return x\n        return None\n\n    @classmethod\n    def getUniqueTreeViewIdList(cls):\n        r = set()\n        for x in cls.__extension:\n            for vtype in x.views:\n                if vtype == Q7Window.VIEW_TREE:\n                    for (v, i) in x.views[vtype]:\n                        r.add(i)\n        return list(r)\n\n    @classmethod\n    def getExpandedFilenameList(cls):\n        l = []\n        for x in cls.__extension:\n            l.append(""%s/%s"" % (x.filedir, x.filename))\n        return l\n\n    @classmethod\n    def removeNoMoreView(cls):\n        for fg in list(Q7FingerPrint.__extension):\n            if fg.views == {}:\n                fg.model.doRelease()\n                fg.doRelease()\n                Q7FingerPrint.__extension.remove(fg)\n\n    @classmethod\n    def getByIndex(cls, index):\n        for fg in Q7FingerPrint.__extension:\n            if fg.index == index:\n                return fg\n        return None\n\n    # -------------------------------------------------------------\n    def __init__(self, control, filedir, filename, tree, links, paths, **kw):\n        if control is None:\n            return  # __root instance, empty\n        self.index = Q7FingerPrint.__fingerprintcounter\n        self.filename = filename\n        self.tree = tree\n        self.filedir = filedir\n        self.links = links\n        self.model = None\n        self.depth = 0\n        self.nodes = 0\n        self.views = {}\n        self.control = control\n        self.converted = False\n        self.isfile = False\n        self.infoData = {}\n        self.tmpfile = \'\'\n        self._kw = kw\n        self._status = []\n        self._locked = False\n        if \'isfile\' in kw:\n            self.isfile = True\n        if \'converted\' in kw:\n            self.converted = kw[\'converted\']\n            self.tmpfile = kw[\'convertedAs\']\n            if self.converted:\n                self._status = []\n        self.lazy = {}\n        for p in paths:\n            self.lazy[\'/CGNSTree\' + p[0]] = p[1]\n        if ((self.lazy == {}) and\n            (checkFilePermission(filedir + \'/\' + filename, write=True))):\n            self._status = [Q7FingerPrint.STATUS_SAVEABLE]\n        Q7FingerPrint.__extension.append(self)\n        Q7FingerPrint.__fingerprintcounter += 1\n        self.updateFileStats(filedir + \'/\' + filename)\n\n    def __len__(self):\n        return 0\n\n    def isLocked(self):\n        return self._locked\n\n    def updateNodeData(self, pathdict):\n        tfile = ""%s/%s"" % (self.filedir, self.filename)\n        slp = OCTXT.LinkSearchPathList\n        slp += [self.filedir]\n        minpath = CGU.getPathListCommonAncestor(list(pathdict))\n        flags = CGNS.MAP.S2P_DEFAULTS\n        if OCTXT.CHLoneTrace:\n            flags |= CGNS.MAP.S2P_TRACE\n        if OCTXT.FollowLinksAtLoad:\n            flags |= CGNS.MAP.S2P_FOLLOWLINKS\n        (t, l, p) = CGNS.MAP.load(tfile, flags=flags, path=minpath, lksearch=slp,\n                                  update=pathdict)\n        return (t, l, p)\n\n    def updateFileStats(self, fname, saveas=False):\n        (filedir, filename) = (os.path.normpath(os.path.dirname(fname)),\n                               os.path.basename(fname))\n        self.filename = filename\n        self.filedir = filedir\n        self.version = CGU.getVersion(self.tree)\n        self.removeTreeStatus(Q7FingerPrint.STATUS_MODIFIED)\n        self.addTreeStatus(Q7FingerPrint.STATUS_UNCHANGED)\n        if saveas:\n            self.converted = False\n            self.isfile = True\n            self.tmpfile = \'\'\n            self.removeTreeStatus(Q7FingerPrint.STATUS_CONVERTED)\n            self.addTreeStatus(Q7FingerPrint.STATUS_SAVEABLE)\n\n    def isFile(self):\n        return self.isfile\n\n    def isLink(self, path):\n        pth = CGU.getPathNoRoot(path)\n        for lk in self.links:\n            if lk[3] == pth:\n                return lk\n        return False\n\n    def fileHasChanged(self):\n        dnow = {}\n        self.readInfoFromOS(dnow)\n        for k in dnow:\n            if dnow[k] != self.infoData[k]:\n                print(k, dnow[k], self.infoData[k])\n                return True\n        return False\n\n    def readInfoFromOS(self, d):\n        f = \'%s/%s\' % (self.filedir, self.filename)\n        d[\'eFilename\'] = f\n        d[\'eDirSource\'] = self.filedir\n        d[\'eFileSource\'] = self.filename\n        d[\'eTmpFile\'] = self.tmpfile\n        d[\'eDepth\'] = self.depth\n        d[\'eNodes\'] = self.nodes\n        d[\'eVersion\'] = str(self.version)\n        d[\'eVersionHDF5\'] = \'???\'\n        try:\n            st = os.stat(f)\n            d[\'eFileSize\'] = ""%.3f Mb"" % (1.0 * st[6] / (1024 * 1024))\n            d[\'eMergeSize\'] = ""%.3f Mb"" % (1.0 * st[6] / (1024 * 1024))\n            dfmt = ""%Y-%m-%d %H:%M""\n            d[\'eLastDate\'] = time.strftime(dfmt, time.localtime(int(st[7])))\n            d[\'eModifDate\'] = time.strftime(dfmt, time.localtime(int(st[8])))\n            e = getpwuid(st[4])\n            g = getgrgid(st[5])\n            d[\'eOwner\'] = e[0]\n            d[\'eGroup\'] = g[0]\n            d[\'cNoFollow\'] = False\n            d[\'cHasLinks\'] = (len(self.links) != 0)\n            d[\'cSameFS\'] = False\n            d[\'cBadLinks\'] = False\n            d[\'cModeProp\'] = False\n            m = """"\n            if st[0] & stat.S_IRUSR:\n                m += ""r""\n            else:\n                m += ""-""\n            if st[0] & stat.S_IWUSR:\n                m += ""w""\n            else:\n                m += ""-""\n            if st[0] & stat.S_IXUSR:\n                m += ""x""\n            else:\n                m += ""-""\n            if st[0] & stat.S_IRGRP:\n                m += ""r""\n            else:\n                m += ""-""\n            if st[0] & stat.S_IWGRP:\n                m += ""w""\n            else:\n                m += ""-""\n            if st[0] & stat.S_IXGRP:\n                m += ""x""\n            else:\n                m += ""-""\n            if st[0] & stat.S_IROTH:\n                m += ""r""\n            else:\n                m += ""-""\n            if st[0] & stat.S_IWOTH:\n                m += ""w""\n            else:\n                m += ""-""\n            if st[0] & stat.S_IXOTH:\n                m += ""x""\n            else:\n                m += ""-""\n            d[\'eRights\'] = m\n        except OSError:\n            pass\n        d[\'cConverted\'] = self.converted\n        d[\'cADF\'] = self.converted\n        d[\'cHDF5\'] = not self.converted\n        d[\'cREAD\'] = not self.isSaveable()\n        d[\'cMODIFY\'] = self.isSaveable()\n        d[\'cNODATA\'] = False\n        d[\'cHasInt64\'] = False\n        return d\n\n    def getInfo(self, force=False):\n        if force or not self.infoData:\n            if self.isFile:\n                self.readInfoFromOS(self.infoData)\n            else:\n                print(\'MEMORY TREE\')\n        return self.infoData\n\n    def raiseControlView(self):\n        self.control.show()\n        self.control.raise_()\n\n    def addChild(self, viewtype, view):\n        Q7FingerPrint.__viewscounter += 1\n        idx = Q7FingerPrint.__viewscounter\n        if viewtype not in self.views:\n            self.views[viewtype] = []\n        self.views[viewtype].append((view, idx))\n        return Q7FingerPrint.__viewscounter\n\n    def closeView(self, i):\n        idx = int(i)\n        fg = self.getFingerPrint(idx)\n        vw = self.getView(idx)\n        if vw is not None:\n            vt = self.getViewType(idx)\n            if vt in self.views:\n                self.views[vt].remove((vw, idx))\n                if self.views[vt] == []:\n                    del self.views[vt]\n            vw.doRelease()\n            vw.close()\n        Q7FingerPrint.removeNoMoreView()\n\n    def doRelease(self):\n        self.model = None\n        self.tree = None\n        self.links = None\n\n    def unlockAllViews(self):\n        self.lockAllViews(lock=False)\n\n    def lockAllViews(self, lock=True):\n        vtlist = list(self.views)\n        for vtype in vtlist:\n            for (v, i) in self.views[vtype]:\n                v.lockView(lock)\n\n    def closeAllViews(self):\n        vtlist = list(self.views)\n        for vtype in vtlist:\n            for (v, i) in self.views[vtype]:\n                self.closeView(i)\n\n    def isModified(self):\n        return (Q7FingerPrint.STATUS_MODIFIED in self._status)\n\n    def isSaveable(self):\n        return (Q7FingerPrint.STATUS_SAVEABLE in self._status)\n\n    def removeTreeStatus(self, status):\n        if status not in Q7FingerPrint.STATUS_LIST:\n            return\n        if status in self._status:\n            self._status.remove(status)\n        self.control.updateViews()\n\n    def addTreeStatus(self, status):\n        if status not in Q7FingerPrint.STATUS_LIST:\n            return\n        if status not in self._status:\n            self._status.append(status)\n        self.control.updateViews()\n\n    def pushGrammarPaths(self):\n        if not OCTXT.ValKeyList:\n            return\n        tag = OCTXT.ValKeyList[0]\n        pths = []\n        self._oldsys = sys.path\n        for p in OCTXT.GrammarSearchPathList:\n            pths.append(str(p))\n        for p in sys.path:\n            pths.append(str(p))\n        pths_uniq = []\n        for p in pths:\n            if p not in pths_uniq:\n                pths_uniq.append(p)\n        sys.path = pths_uniq\n\n    def popGrammarPaths(self):\n        sys.path = self._oldsys\n\n    def nextGrammarTag(self):\n        keyset = set(OCTXT.ValKeyList)\n        keyset.add(\'SIDS\')\n        for t in keyset:\n            yield t\n\n# -----------------------------------------------------------------\n'"
CGNS/NAV/wform.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import division\nfrom builtins import (str, bytes, range, dict)\n\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\n\nfrom qtpy.QtCore import Qt, QModelIndex\nfrom qtpy.QtWidgets import QStyledItemDelegate\n\nfrom CGNS.NAV.Q7FormWindow import Ui_Q7FormWindow\nfrom CGNS.NAV.mtable import Q7TableModel\nfrom CGNS.NAV.wstylesheets import Q7TABLEVIEWSTYLESHEET\nfrom CGNS.NAV.wfingerprint import Q7Window\n\n\n# -----------------------------------------------------------------\ndef divpairs(n):\n    d = n\n    l = []\n    while d != 0:\n        m = n // d\n        r = n % d\n        if r == 0:\n            l += [(d, m)]\n        d -= 1\n    return l\n\n\n# -----------------------------------------------------------------\nclass Q7TableItemDelegate(QStyledItemDelegate):\n    def paint(self, painter, option, index):\n        t = index.data(Qt.DisplayRole)\n        r = option.rect.adjusted(2, 2, -2, -2)\n        painter.drawText(r, Qt.AlignVCenter | Qt.AlignLeft, t, r)\n        # QStyledItemDelegate.paint(self, painter, option, index)\n\n\n# -----------------------------------------------------------------\nclass Q7Form(Q7Window, Ui_Q7FormWindow):\n    def __init__(self, control, node, fgprintindex):\n        Q7Window.__init__(self, Q7Window.VIEW_FORM, control,\n                          node.sidsPath(), fgprintindex)\n        self._node = node\n        self._operatorlist = [\'\']\n        for t in self._node.sidsTypeList():\n            self.eType.addItem(t)\n        self.bClose.clicked.connect(self.reject)\n        self.bInfo.clicked.connect(self.infoFormView)\n        self.cFortranOrderOff.setChecked(False)\n        self.cFortranOrderOff.setDisabled(True)\n        for dt in node.sidsDataType(all=True):\n            self.cDataType.addItem(dt)\n\n    def infoFormView(self):\n        self._control.helpWindow(\'Form\')\n\n    def updateTreeStatus(self):\n        pass\n\n    def accept(self):\n        pass\n\n    def reject(self):\n        self.close()\n\n    def show(self):\n        self.reset()\n        super(Q7Form, self).show()\n\n    def reset(self):\n        self.eName.setText(self._node.sidsName())\n        self.ePath.setText(self._node.sidsPath())\n        self.ePath.setReadOnly(True)\n        self.sMinH.setRange(-999999999, 999999999)\n        self.sMinV.setRange(-999999999, 999999999)\n        self.sMinH.setValue(1)\n        self.sMinV.setValue(1)\n        self.setCurrentType(self._node.sidsType())\n        dims = self._node.sidsDims()\n        its = 1\n        for x in dims:\n            its *= x\n        ndz = its * self._node.sidsDataTypeSize()\n        self.eDims.setText(str(dims))\n        self.setDataType(self._node)\n        self.eItems.setText(str(its))\n        self.ls = 1\n        self.cs = dims[0]\n        if len(dims) > 1:\n            self.ls = 1\n            for x in dims[1:]:\n                self.ls *= x\n        self.showparams = {\'cs\': self.cs, \'ls\': self.ls, \'mode\': \'IJ\'}\n        for dp in divpairs(self.cs * self.ls):\n            self.cRowColSize.addItem(""%d x %d"" % dp)\n        ix = self.cRowColSize.findText(""%d x %d"" % (self.cs, self.ls))\n        self.cRowColSize.setCurrentIndex(ix)\n        self.model = Q7TableModel(self._node, self.showparams)\n        self.tableView.setModel(self.model)\n        self.tableView.setStyleSheet(self._stylesheet)\n        self.bMinimize.clicked.connect(self.minimizeCells)\n        #\n        self.tableView.clicked[QModelIndex].connect(self.clickedNode)\n        self.cRowColSize.currentIndexChanged[int].connect(self.resizeTable)\n        self.sMinH.valueChanged[int].connect(self.resetIndex)\n        self.sMinV.valueChanged[int].connect(self.resetIndex)\n        # QObject.connect(self.tableView,\n        #                SIGNAL(""clicked(QModelIndex)""),\n        #                self.clickedNode)\n        # QObject.connect(self.cRowColSize,\n        #                SIGNAL(""currentIndexChanged(int)""),\n        #                self.resizeTable)\n        # QObject.connect(self.sMinH,\n        #                SIGNAL(""valueChanged(int)""),\n        #                self.resetIndex)\n        # QObject.connect(self.sMinV,\n        #                SIGNAL(""valueChanged(int)""),\n        #                self.resetIndex)\n        lk = self.FG.isLink(self._node.sidsPath())\n        if lk:\n            self.setLabel(self.eDestDir, lk[0])\n            self.setLabel(self.eDestFile, lk[1])\n            self.setLabel(self.eDestPath, lk[2])\n        else:\n            self.tFiles.setDisabled(True)\n        self.tPython.setDisabled(True)\n        if self._node.sidsDataType() == CGK.C1:\n            if self._node.sidsValue().ndim > 1:\n                txt = self._node.sidsValue().T.tostring().decode(\'ascii\')\n                self.cFortranOrderOff.setChecked(True)\n                self.cFortranOrderOff.setDisabled(True)\n            else:\n                txt = self._node.sidsValue().tostring().decode(\'ascii\')\n            self.eText.initText(txt)\n\n    def resizeTable(self):\n        s = self.cRowColSize.currentText()\n        (r, c) = s.split(\'x\')\n        self.cs = int(r)\n        self.ls = int(c)\n        self.showparams = {\'cs\': self.cs, \'ls\': self.ls, \'mode\': \'IJ\'}\n        self.model = Q7TableModel(self._node, self.showparams)\n        self.tableView.setModel(self.model)\n        self.tableView.setStyleSheet(self._stylesheet)\n\n    def clickedNode(self, index):\n        pass\n\n    def minimizeCells(self, *args):\n        self.tableView.resizeColumnsToContents()\n        self.tableView.resizeRowsToContents()\n\n    def setCurrentType(self, ntype):\n        idx = self.eType.findText(ntype)\n        self.eType.setCurrentIndex(idx)\n\n    def setDataType(self, node):\n        dt = node.sidsDataType()\n        ix = self.cDataType.findText(dt)\n        if ix == -1:\n            return\n        self.cDataType.setCurrentIndex(ix)\n\n    def resetIndex(self):\n        hm = self.sMinH.value()\n        vm = self.sMinV.value()\n        self.model.setRange(hm, vm)\n        self.model.headerDataChanged.emit(Qt.Vertical, 1, 1)\n        self.model.headerDataChanged.emit(Qt.Horizontal, 1, 1)\n\n    def addControlLine(self):\n        pass\n\n    def doRelease(self):\n        pass\n\n# -----------------------------------------------------------------\n'"
CGNS/NAV/whelp.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS.NAV - Python package for CFD General Notation System - NAVigater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\nfrom qtpy.QtWidgets import QWidget\nfrom qtpy.QtGui import QTextCursor\n\nfrom CGNS.NAV.Q7HelpWindow import Ui_Q7HelpWindow\n\n\n# -----------------------------------------------------------------\nclass Q7Help(QWidget, Ui_Q7HelpWindow):\n    def __init__(self, control, key=None, doc=None):\n        super(Q7Help, self).__init__()\n        self.setupUi(self)\n        self._control = control\n        if (doc is None) and (key not in HELPDOCS):\n            return\n        self.eHelp.setAcceptRichText(True)\n        self.eHelp.clear()\n        if key is not None:\n            self.setWindowTitle(""CGNS.NAV: Help on "" + HELPDOCS[key][0])\n            self.eHelp.insertHtml(HELPDOCS[key][1])\n        elif doc is not None:\n            self.setWindowTitle(""CGNS.NAV: Contextual Documentation"")\n            self.eHelp.insertHtml(doc)\n        else:\n            return\n        self.eHelp.moveCursor(QTextCursor.Start, QTextCursor.MoveAnchor)\n        self.eHelp.ensureCursorVisible()\n        self.eHelp.setReadOnly(True)\n\n    def close(self):\n        self._control.help = None\n        QWidget.close(self)\n\n\nHELPDOCS = {\n    # --------------------------------------------------------------------------\n    \'Control\': (\'Control panel\',\n                """"""\n                <h2>Control panel</h2>\n                The main panel of CGNS.NAV is a summary of views. The list gives you\n                short information about the file/tree being viewed and allows you some\n                basic operations.\n                <p>\n                You can open new trees, close views or close all <i>CGNS.NAV</i> from this\n                panel. \n                \n                <h3>Table entries</h3>\n                Each line of the control panel is a view. Each view has a number, which\n                counts from 001 up to the max number of views you have. The status and the\n                type of the view are indicated by an icon.<i>We use the term <b>view</b>\n                when a CGNS.NAV window appears in this list\n                and <b>panel</b> when the window doesn\'t appear.\n                <p>\n                \n                The <b>status</b> changes each time you modify the CGNS/Python tree or\n                its links or any other parameter that would lead to save a different file\n                than the one that was loaded at first.\n                \n                The <b>status</b> may indicate you cannot save the file, for example if\n                the file is read only, or if the file has been converted; In this latter\n                case, the actual file name is a temporary file name. The <b>Info panel</b>\n                gives you more details about the file itself: right click on a row in the\n                control panel list and select <b>View Information</b> to get\n                the <b>Info panel</b>.\n                <p>\n                The <b>status</b> icons are:\n                \n                <table>\n                <tr><td><img source="":/images/icons/save-S-UM.png""></td>\n                <td>File can be saved, no modification to save now</td></tr>\n                <tr><td><img source="":/images/icons/save-S-M.png""></td>\n                <td>File can be saved, some modifications are not saved yet</td></tr>\n                <tr><td><img source="":/images/icons/save-US-UM.png""></td>\n                <td>File cannot be saved, no modification to save now. You have no write access to the file, \n                you should use <b>save as</b> button.</td></tr>\n                <tr><td><img source="":/images/icons/save-US-M.png""></td>\n                <td>File cannot be saved, some modifications are not saved yet. You have no write access to the file, \n                you should use <b>save as</b> button.</td></tr>\n                </table>\n                <p>\n                The second column of a control panel line is the view type:\n                \n                <table>\n                <tr><td><img source="":/images/icons/tree-load.png""></td>\n                <td> Tree view - Open from control panel</td></tr>\n                <tr><td><img source="":/images/icons/vtkview.png""></td>\n                <td> VTK view - Open from tree view</td></tr>\n                <tr><td><img source="":/images/icons/operate-execute.png""></td>\n                <td> Query view - Open from tree view</td></tr>\n                <tr><td><img source="":/images/icons/form.png""></td>\n                <td> Form view - Open from tree view</td></tr>\n                <tr><td><img source="":/images/icons/operate-list.png""></td>\n                <td> Selection view - Open from tree view</td></tr>\n                <tr><td><img source="":/images/icons/check-all.png""></td>\n                <td> Diagnosis view - Open from tree view</td></tr>\n                <tr><td><img source="":/images/icons/link.png""></td>\n                <td> Link view - Open from tree view</td></tr>\n                </table>\n                \n                <p>\n                The remaining columns of a control panel line are the directory and the \n                filename of the CGNS/Python tree and the target node of the tree. \n                These values may be empty if not relevant. For example if you create\n                a tree from scratch, the directory and the file name are generated and thus\n                would require a <b>save as</b> to set these values.\n                \n                All <b>CGNS.NAV</b> windows have a <img source="":/images/icons/top.png"">\n                button that raises the control panel window. The other way, you select\n                a view line in the control panel and press <i>[space]</i> to raise the\n                corresponding view.\n                \n                You can close a single view, all views related to one tree or all the trees\n                using the right click menu, on a row.\n                \n                <h3>Buttons</h3>\n                <p>\n                <table>\n                <tr><td><img source="":/images/icons/tree-load-g.png""></td>\n                <td> load last used file</td></tr>\n                <tr><td><img source="":/images/icons/tree-load.png""></td>\n                <td> load a file, open the file dialog window</td></tr>\n                <tr><td><img source="":/images/icons/tree-new.png""></td>\n                <td> create a new CGNS/Python tree from scratch</td></tr>\n                <tr><td><img source="":/images/icons/pattern.png""></td>\n                <td> open the pattern database</td></tr>\n                <tr><td><img source="":/images/icons/options-view.png""></td>\n                <td> open the user options panel</td></tr>\n                <tr><td><img source="":/images/icons/help-view.png""></td>\n                <td> help</td></tr>\n                <tr><td><img source="":/images/icons/view-help.png""></td>\n                <td> about CGNS.NAV</td></tr>\n                <tr><td><img source="":/images/icons/close-view.png""></td>\n                <td> close CGNS.NAV and all its views</td></tr>\n                </table>\n                \n                """"""),\n    # --------------------------------------------------------------------------\n    \'Tree\': (\'Tree view\',\n             """"""\n             <h2>Tree view</h2>\n             \n             The main window you would use for browsing/editing a CGNS/Python tree is\n             the <i>Tree view</i>.\n             \n             <h3>Hierarchical view</h3>\n             The hierarchical view is a classical tree browser. You click just before the node name to \n             expand/collapse its children node. It supports copy/cut/paste as well\n             as line editing for node name change, node sidstype change and node value change.\n             <p>\n             \n             Bold names are user defined names, the non-bold are names found in the CGNS/SIDS.\n             <p>\n             You can use <i>[up][down]</i>arrows to move from a node to another, if you press <i>[control]</i> \n             together with the <i>[up][down]</i> then you move from nodes of a same level.\n             Pressing <i>[space]</i> sets/unsets the selection flag on the current node.\n             \n             <h3>Current node and selected nodes</h3>\n             \n             The current node is the highlighted line. The selected nodes are the lines\n             with a blue flag on. Some commands require a current node to run, for example\n             the <i>Form view</i> requires it. Some other commands require a list of\n             selected nodes, or example the check, or the <i>paste as child for each selected node</i>. This latter \n             command is in the right-click menu.\n             \n             <h3>Flags</h3>\n             \n             There a 4 flag columns: <b>L</b> is for link flag, <b>M</b> is mark flag,\n             <b>C</b> is check flag and the last <b>U</b> is user flag.<br><br>\n             \n             There are two link flags, <img source="":/images/icons/link.png""> indicates\n             the root node of a linked-to node. The actual node is in file used for the\n             current tree, but the node value and its children are located into another\n             file. Use the <img source="":/images/icons/link-view.png""> icon to open the\n             link view, that shows all existing links for the current tree. Or you can move\n             the mouse pointer on the link icon, the actual linked-to reference would\n             be displayed.\n             The second link flag is\n             <img source="":/images/icons/link-child.png""> that indicates the node has a\n             linked-to ancestor node (its direct parent or any other parent). Depending\n             on the options you set, you may or may not have the right to change this\n             child-link node name, type or value.<br><br>\n             \n             The mark flag is set when you run a selection, or when you mark it by\n             yourself by pressing <i>[space]</i>. The list of all selected nodes, for\n             example after running a large query, is displayed using the\n             <img source="":/images/icons/operate-list.png""> icon.<br><br>\n             \n             The check flag is set when you run a check with \n             <img source="":/images/icons/check-all.png"">, the diagnosis list is\n             open with <img source="":/images/icons/check-list.png"">.\n             Nodes can have a warning <img source="":/images/icons/check-warn.png"">\n             or an error <img source="":/images/icons/check-fail.png""> flag. Node without\n             flags are ok.<br><br>\n             \n             The last flag column is for the user flag. The user sets/unsets the flag\n             for each node by selecting the node and pressing one of the <i>[0-9]</i> keys.\n             Then, by default, the corresponding number is set as flag (for example you\n             have a <img source="":/images/icons/user-5.png""> if you press <i>[5]</i>.\n             The flag is an informative flag, it is not used by CGNS.NAV functions.<br><br>\n             \n             The snapshot below shows the flag columns with various flag settings.<br><br>\n             <img source="":/images/icons/help-01.png""><br>\n             \n             \n             <h3>Editing nodes</h3>\n             You can edit node name, type and values by right-cliking on the line/column\n             you want to edit.<br><br>\n             \n             The new name is rejected if it already exists or if its syntax is not\n             compliant with CGNS/SIDS requirements.<br><br>\n             \n             The new SIDS type should be one of the allowed types.<br><br>\n             \n             The new value edit depends on its SIDS type and its data type (the *D* column).\n             You may have an enumerate or a plain string. In case of plain string, you have\n             to provide a new value as a python value without interpretation.<br><br>\n             \n             In the case you want to get rid of enumerates, for example when you want\n             to document a new SIDS type for CPEX proposal, you force plain using\n             <i>[insert]</i> to edit the name (*NO NAME CHECK*),\n             <i>[control-insert]</i> to edit the SIDS type and\n             <i>[shift-insert]</i> to edit value.\n             These edit methods are not performing any check and your CGNS/Python tree\n             may be not-compliant, or even impossible to actually store with CGNS/HDF5!\n             \n             <h3>Copy/Cut/Paste</h3>\n             The <i>Tree views</i> support the copy/cut/paste of sub-trees.\n             \n             <h3>Top Buttons</h3>\n             <p>\n             <table>\n             <tr><td><img source="":/images/icons/save.png""></td>\n             <td> save file using the last used file name and save parameters</td></tr>\n             <tr><td><img source="":/images/icons/tree-save.png""></td>\n             <td> save as, as a new directory and/or file name, allows to change save\n             parameters such as link management</td></tr>\n             <tr><td><img source="":/images/icons/pattern-save.png""></td>\n             <td> save as a pattern (not available yet)</td></tr>\n             <tr><td><img source="":/images/icons/level-out.png""></td>\n             <td> expand one level of children nodes</td></tr>\n             <tr><td><img source="":/images/icons/level-all.png""></td>\n             <td> switch expand all / unexpand all</td></tr>\n             <tr><td><img source="":/images/icons/level-in.png""></td>\n             <td> unexpand one level of children nodes</td></tr>\n             <tr><td><img source="":/images/icons/flag-all.png""></td>\n             <td> set the selection flag on all the nodes. If a node is not visible, then it is flagged as well and \n             all subsequent operation on selection list would take this invisible node as argument. Note that such an \n             invisble node is actually in the CGNS/Python tree but it is not displayed</td></tr>\n             <tr><td><img source="":/images/icons/flag-revert.png""></td>\n             <td> revert nodes selection flag</td></tr>\n             <tr><td><img source="":/images/icons/flag-none.png""></td>\n             <td> remove all selection flags</td></tr>\n             <tr><td><img source="":/images/icons/operate-list.png""></td>\n             <td> open the selection view, gives the list of all selected nodes</td></tr>\n             <tr><td><img source="":/images/icons/check-all.png""></td>\n             <td> check nodes using <b>CGNS.VAL</b> tool. If the selection list is not\n             empty, then only the selected nodes are checked. If the selection list is\n             empty, all nodes of the tree are checked.</td></tr>\n             <tr><td><img source="":/images/icons/check-clear.png""></td>\n             <td> remove all check flags</td></tr>\n             <tr><td><img source="":/images/icons/check-list.png""></td>\n             <td> open the diagnosis view which details the check log</td></tr>\n             <tr><td><img source="":/images/icons/link-select.png""></td>\n             <td> not available yet</td></tr>\n             <tr><td><img source="":/images/icons/link-add.png""></td>\n             <td> not available yet</td></tr>\n             <tr><td><img source="":/images/icons/link-delete.png""></td>\n             <td> not available yet</td></tr>\n             <tr><td><img source="":/images/icons/form-open.png""></td>\n             <td> open the form view, gives details on a node including its data</td></tr>\n             <tr><td><img source="":/images/icons/vtk.png""></td>\n             <td> open the VTK view, a 3D view on the actual mesh and its associated data.\n             This requires a correct parsing of CGNS/Python tree, if the tool is not able\n             to understand the data (for example if your tree is not CGNS/SIDS compliant,\n             then no window is open.</td></tr>\n             <tr><td><img source="":/images/icons/plot.png""></td>\n             <td> open the Plot view, a 2D view on some tree data.\n             Same remarks as VTK view.</td></tr>\n             <tr><td><img source="":/images/icons/pattern-view.png""></td>\n             <td> not available yet</td></tr>\n             <tr><td><img source="":/images/icons/link-view.png""></td>\n             <td> open the Link view, gives details on the links</td></tr>\n             <tr><td><img source="":/images/icons/operate-view.png""></td>\n             <td> open the Query view, a powerful mean to edit and run Python commands on the tree</td></tr>\n             <tr><td><img source="":/images/icons/check-view.png""></td>\n             <td> not available yet</td></tr>\n             <tr><td><img source="":/images/icons/tools-view.png""></td>\n             <td> not available yet</td></tr>\n             <tr><td><img source="":/images/icons/snapshot.png""></td>\n             <td> creates a bitmap file with the snapshot of the current tree view.\n             See user options for directory and file used for this snapshot.</td></tr>\n             </table>\n             \n             """"""),\n    # --------------------------------------------------------------------------\n    \'VTK\': (\'VTK view\',\n            """"""\n            <h2>VTK view</h2>\n            \n            <h3>Selection list</h3>\n            <p>\n            <table>\n            <tr><td><img source="":/images/icons/selected.png""></td>\n            <td>The selection list entry is selected for operations</td></tr>\n            <tr><td><img source="":/images/icons/unselected.png""></td>\n            <td>The selection list entry is NOT selected for operations</td></tr>\n            <tr><td><img source="":/images/icons/hidden.png""></td>\n            <td>The selection list entry is hidden, the data is still there but it is not\n            displayed in the window.</td></tr>\n            </table>\n            \n            <h3>Icons and buttons</h3>\n            <p>\n            <table>\n            <tr><td><img source="":/images/icons/zoompoint.png""></td>\n            <td>Switch to the zoom-window mode. You draw a window using the mouse left\n            button and the zoom would fit to the defined window.</td></tr>\n            <tr><td><img source="":/images/icons/zoom-actor.png""></td>\n            <td>Reset the view to fit the object in the window</td></tr>\n            <tr><td><img source="":/images/icons/lock-legend.png""></td>\n            <td>Switch to move legend mode, used to mose the reference axis draw, the\n            legend and other extra information displayed on the view.</td></tr>\n            <tr><td><img source="":/images/icons/value.png""></td>\n            <td>Switch to the show value mode, in the case you have actual values,\n            the pick of a node would show corresponding value.</td></tr>\n            <tr><td><img source="":/images/icons/colors.png""></td>\n            <td>Randomly change the colors of view objects.</td></tr>\n            <tr><td><img source="":/images/icons/colors-bw.png""></td>\n            <td>Switch the view background to balck/white.</td></tr>\n            </table>\n            \n            \n            <h3>Displaying actual values</h3>\n            <p>\n            \n            \n            <h3>User defined camera views</h3>\n            <p>\n            You can the current camera and reset to this stored point of view later on.\n            <table>\n            <tr><td><img source="":/images/icons/camera-snap.png""></td>\n            <td>Sotre an existing camera</td></tr>\n            </table>\n            \n            \n            <h3>Interactions</h3>\n            \n            <h4>Mouse buttons</h4>\n            The <i>mouse left button</i> runs the rotation (see below). The\n            <i>mouse right button</i> runs the zoom, same with the <i>mouse wheel</i>\n            if you have one. The <i>mouse middle button</i>, if you have one, runs a\n            translation parallel to the view plane. \n            \n            <h4>Rotation</h4>\n            The <i>Camera axis all</i> uses the center of the view (the center of the\n            camera view) as the center of rotation.<br>\n            The <i>Object axis all</i> is a rotation with the center of the object\n            as rotation center.<br>\n            The <i>Object axis x</i> mode forces a rotation with x as single axis, same\n            for y and z.<br>\n            \n            <h4>Key Bindings</h4>\n            Keys are not case-sensitive letters, <b>s</b> and <b>S</b> are the same.\n            \n            <b>s</b> Surface mode rendering (toggle with wire)<br>\n            <b>w</b> Wire mode rendering (toggle with surface)<br>\n            <b>q</b> Surface and wire mode rendering (toggle with wire)<br>\n            <b>r</b> Reset view to fit to full object<br>\n            \n            <b>[space]</b> Throw a ray on the view and select all actors cuting the ray<br>\n            <b>z</b> Same as [space]<br>\n            <b>u</b> Unselect all<br>\n            <b>p</b> Pick a point in the selected Zone<br>\n            \n            <h4>Tips</h4>\n            \n            To unselect all and clear the list of selected actors, just move the mouse on\n            the graphic window background and press [space].\n            """"""),\n    # --------------------------------------------------------------------------\n    \'Link\': (\'Link view\',\n             """"""\n             <h2>Link view</h2>\n             \n             <b>When you copy a node path you SHOULD NOT add the CGNSTree root</b>\n             \n             <h3>Buttons</h3>\n             <p>\n             \n             """"""),\n    # --------------------------------------------------------------------------\n    \'Form\': (\'Form view\',\n             """"""\n             <h2>Form view</h2>\n             \n             This view shows all information it can find about a node. The <i>Form view</i>\n             displays the node and its data using different ways and allows you some\n             basic operations on this node. Each tab is a view of the same node. The\n             <i>table tab</i> is a raw view of dimensions, types and shows the\n             actual <i>data</i> in a spreadsheet-like widget.\n             \n             \n             <h3>Spreadsheet</h3>\n             <p>\n             The data is displayed in a 2D table, you can change the horizontal/vertical\n             distribution using the <i>Size</i> selector. It computes for you all\n             possible combinations of horizontal and vertical indicies from the original\n             data size.\n             \n             <h3>Links</h3>\n             <p>\n             All details about relationship with other files are in the <i>Link</i> tab.\n             It shows you the current link if the node is actually the root node of a link,\n             it also shows you the parent node link if the current node is the child of a\n             linked-to node. In other words, it tells you wether the node you are looking at\n             is in the top file or not.\n             \n             <h3>Text</h3>\n             <p>\n             Some node data are text, it is often more readable to look at it using a real\n             text tool than a spreadsheet-like tool. The <i>Text</i> tab is available only\n             for text data.\n             \n             """"""),\n    # --------------------------------------------------------------------------\n    \'Query\': (\'Query view\',\n              """"""\n              <h3><font color=red>WARNING</font></h3>\n              The queries can modify your CGNS/Python tree in such a way that it could\n              become non-compliant, inconsistant in CGNS/Python or even <font color=red>\n              <b>crash</b> the CGNS.NAV application</font>\n              or any of its sub-applications such as MAP or VAL.<p>\n              <font color=red>Use of CGNS/Python data modification requires a very\n              good level of Python and CGNS skills, use at your own risks...</font>\n              \n              <h2>Query view</h2>\n              The query view is one of CGNS.NAV most powerful feature. It provides a\n              true Python scripting access on the CGNS tree, the script you write is\n              applied to each node of the whole CGNS/Python tree. You have to write the\n              script using the usual Python syntax and semantics, including the required\n              <b>import</b>s statements, however CGNS.NAV adds a pre-script and a post-script\n              to your actual text.<br><br>\n              \n              The pre-script is used to defined local variable that would be useful for you.\n              The variables are setting the node context, you can get/set these values as\n              these are the actual node:\n              \n              <table>\n              <tr><td><b>NODE</b></td><td>the NODE as a CGNS/Python NODE, that is a list\n              with <i>[ NAME, VALUE, CHILDREN, SIDSTYPE]</i></td></tr>\n              <tr><td><b>NAME</b></td><td>the NAME of the NODE, same as NODE[0]</td></tr>\n              <tr><td><b>VALUE</b></td><td>the VALUE of the NODE, same as NODE[1]</td></tr>\n              <tr><td><b>SIDSTYPE</b></td><td>the CGNS/SIDS type of the NODE, same\n              as NODE[3]</td></tr>\n              <tr><td><b>CHILDREN</b></td><td>the list of CHILDREN of the NODE,\n              same as NODE[2]</td></tr>\n              <tr><td><b>PARENT</b></td><td>the PARENT node of current NODE</td></tr>\n              <tr><td><b>TREE</b></td><td>the complete CGNS/Python TREE</td></tr>\n              <tr><td><b>LINKS</b></td><td>the list of links info</td></tr>\n              <tr><td><b>SKIPS</b></td><td>the list of skips info</td></tr>\n              <tr><td><b>PATH</b></td><td>the PATH to the current NODE</td></tr>\n              <tr><td><b>ARGS</b></td><td>The arguments tuple you may have passed (in\n              the Tree view for example). Please note this is always a tuple, even if you\n              have a single argument (then use ARGS[0]). The is a special case, if your\n              argument is a single string then you need not to put quotes around. For\n              example, you can use <i>ZoneType</i> instead of <i>\'ZoneType\'</i>.</td></tr>\n              <tr><td><b>RESULT</b></td><td>the output of your script, this result value\n              is inserted into the global result list for all nodes. Thus, you would\n              rather add a tuple containing the current PATH and the result if you\n              want to find back which result matches which value (see example)</td></tr>\n              </table>\n              \n              <h3>Buttons</h3>\n              <p>\n              <table>\n              <tr><td><img source="":/images/icons/operate-add.png""></td>\n              <td>Add a new query</td></tr>\n              <tr><td><img source="":/images/icons/operate-delete.png""></td>\n              <td>Remove an existing query</td></tr>\n              <tr><td><img source="":/images/icons/operate-save.png""></td>\n              <td>Save all queries</td></tr>\n              </table>\n              \n              """"""),\n    # --------------------------------------------------------------------------\n    \'Option\': (\'Option panel\',\n               """"""\n               <h2>Option panel</h2>\n               <font color=red>Oups! the Option panel is a MODAL window, which means\n               it blocks all other windows until you answer to it. So if you want to\n               browse this help you have to close the Option panel window first!</font>\n               <h3>Buttons</h3>\n               \n               <h3>Message codes</h3>\n               <table>\n               <tr><td>100</td><td> * </td><td>Version and Copyright notice</td></tr>\n               <tr><td>101</td><td> - </td><td>CGNS.NAV Exit double check</td></tr>\n               <tr><td>110</td><td> - </td><td>Directory not found during file open</td></tr>\n               <tr><td>120</td><td> - </td><td>Clear file history - current not found file</td></tr>\n               <tr><td>121</td><td> - </td><td>Clear file history - all not found files</td></tr>\n               <tr><td>122</td><td> - </td><td>Clear file history - all files</td></tr>\n               <tr><td>130</td><td> - </td><td>Save abort</td></tr>\n               <tr><td>131</td><td> - </td><td>Save abort (execption caught)</td></tr>\n               <tr><td>132</td><td> - </td><td>Save warning about file overwriting issue</td></tr>\n               <tr><td>200</td><td> * </td><td>Error during load (returns actual CGNS/HDF5 layer error)</td></tr>\n               <tr><td>201</td><td> * </td><td>Fatal error during load</td></tr>\n               <tr><td>500</td><td> - </td><td>Bad data for a VTK display</td></tr>\n               <tr><td>501</td><td> - </td><td>VTK version lower than v6.0</td></tr>\n               <tr><td>502</td><td> - </td><td>VTK version lower than v5.8</td></tr>\n               <tr><td>302</td><td> - </td><td>Node selection required for Form view</td></tr>\n               <tr><td>310</td><td> - </td><td>Create link as new node</td></tr>\n               <tr><td>311</td><td> - </td><td>Remove link entry</td></tr>\n               <tr><td>370</td><td> - </td><td>Leave query panel</td></tr>\n               <tr><td>371</td><td> - </td><td>Apply changes to all</td></tr>\n               <tr><td>400</td><td> * </td><td>Show diag view grammer used</td></tr>\n               </table>\n               \n               <p>\n               <img source="":/images/icons/unselected.png"">\n               """"""),\n    # --------------------------------------------------------------------------\n    \'File\': (\'File panel\',\n             """"""\n             <h2>File panel</h2>\n             <font color=red>Oups! the File panel is a MODAL window, which means\n             it blocks all other windows until you answer to it. So if you want to\n             browse this help you have to close the File panel window first!</font>\n             <p>\n             The same panel is used for both <b>load</b> and <b>save</b> file selection.\n             The <b>Cancel</b> button would abort the current load or save\n             operation, but once the the load/save process is strated there is no way\n             to abort it.\n             <p>\n             There are two tabs, the <i>Selection</i> tab is the default one, you select\n             there the directory and filename of the target file you want to load or to\n             save. The <I>Options</i> tab sets the behavior of the file filter and the\n             history of your loads/saves.\n             <P>\n             The <i>File panel</i> filters the CGNS/HDF/ADF files depending on the options\n             you set. Files can be sorted by name, size, type or modification date by\n             clicking on the corresponding column header.\n             <p>\n             Unchecking the <i>Show directories</i> checkbox would mask all directories\n             from the table, thus making it more easy to find your file in large lists.\n             \n             <h3>Load</h3>\n             The <i>File panel</i> options checkboxes, such as <i>Do Not load large data</i>\n             are used only for the current load/save. The initial values of these checkboxes,\n             each time you open the panel, are get from your overall options (see the\n             <img source="":/images/icons/option-view.png""> <i>Options Panel</i>).\n             <p>\n             <img source="":/images/icons/h_files_checks.png"">\n             <table>\n             <tr><td><b>Do not load large data</b></td><td>Skip large arrays, the threshold\n             is set in the <i>Options Panel</i></td></tr>\n             <tr><td><b>Follow links</b></td><td>Recursively load files you can reach through linksSkip large arrays, \n             the threshold is\n             set in the <i>Options Panel</i></td></tr>\n             <tr><td><b>Open as read-only</b></td><td>Prevent any attempt to modify the\n             tree. This guard is unlocked if you do a <I>Save as</i>, the tree is then\n             associated to a new file and becames writable.</td></tr>\n             </table>\n             \n             <h3>Save</h3>\n             The save policy is complex as saving a CGNS tree can be an update or\n             an overwrite. \n             The save checkboxes are <i>overwrite</i> and <i>delete missing</i>, the behavior\n             of the same is summerized in this table:\n             <table>\n             <tr><td><img source="":/images/icons/w_file_checks_00.png""></td><td></td></tr>\n             <tr><td><img source="":/images/icons/w_file_checks_10.png""></td><td></td></tr>\n             <tr><td><img source="":/images/icons/w_file_checks_01.png""></td><td></td></tr>\n             <tr><td><img source="":/images/icons/w_file_checks_11.png""></td><td></td></tr>\n             </table>\n             \n             <h3>Buttons</h3>\n             <p>\n             <img source="":/images/icons/unselected.png"">\n             """"""),\n    # --------------------------------------------------------------------------\n    \'Selection\': (\'Selection view\',\n                  """"""\n                  <h2>Selection view</h2>\n                  \n                  The <i>Selection view</i> lists the selected nodes resulting from a query or\n                  user performed selection. The only action you can perform on this list is\n                  to change the values, datatypes or SIDS types, or to save the list.\n                  \n                  The actual purpose of this view is to reduce the view of a tree for local\n                  modifications. For example you perform a query to retrieve a specific node\n                  and then you edit the selected nodes.\n                  \n                  You can run the query and display the result at once using the command line,\n                  for example:\n                  <pre>CGNS.NAV -q \'100. Family boundaries\' File.cgns</pre>\n                  \n                  <h3>Buttons</h3>\n                  <p>\n                  <table>\n                  <tr><td><img source="":/images/icons/control.png"">\n                  <img source="":/images/icons/unselected.png"">\n                  <img source="":/images/icons/node-sids-closed.png"">\n                  </td>\n                  <td> unsused</td></tr>\n                  <tr><td><img source="":/images/icons/select-add.png""></td>\n                  <td> select all lines</td></tr>\n                  <tr><td><img source="":/images/icons/falg-revert.png""></td>\n                  <td> revert line selection</td></tr>\n                  <tr><td><img source="":/images/icons/select-delete.png""></td>\n                  <td> unselect all lines</td></tr>\n                  <tr><td><img source="":/images/icons/flag-none""></td>\n                  <td> remove a line from the selection line</td></tr>\n                  <tr><td><img source="":/images/icons/select-save""></td>\n                  <td> save the selection list in a file</td></tr>\n                  </table>\n                  \n                  <h3>User defined edition</h3>\n                  The node value editing can be a plain text edition or a combo-box enumerate.\n                  In that latter case the user can define a function to map the list of\n                  allowed value with respect to the node path (name for example) and the node\n                  type path (that is the list of types for each node in the path to the\n                  current node). The function should be a python class in a python file,\n                  the file name is <pre>default.py</pre> in the directory\n                  <pre>$HOME/.CGNS.NAV/funtions</pre>. There is an example of such a file:\n                  <pre>\n                  # -----------------------------------------------------------------\n                  # Mandatory name\n                  #\n                  import CGNS.PAT.cgnskeywords as CGK\n                  \n                  class Q7UserFunction(object):\n                    __attributes={\n                      \'artviscosity\':[\'none\',\'dissca\',\'dismat\',\'dismrt\'],\n                      \'fluid\':[\'rg\',\'pg\'],\n                      \'flux\':[\'jameson\',\'roe\',\'vleer\',\'coquel_d\',\'coquel_i\',\'ausmp\',\'rbc\',\'rbci\'],\n                      \'ode\':[\'backwardeuler\',\'rk4\'],\n                      \'phymod\':[\'euler\',\'nslam\',\'nstur\'],\n                    }\n                    # --- mandatory method\n                    def getEnumerate(self,namepath,typepath):\n                      if (namepath[-1] in self.__attributes):\n                          return self.__attributes[namepath[-1]]\n                      else:\n                          return CGK.cgnsenums[typepath[-1]]\n                      return None\n                  \n                  # --- last line\n                  </pre>\n                  """"""),\n    # --------------------------------------------------------------------------\n    \'Diagnosis\': (\'Diagnosis view\',\n                  """"""\n                  <h2>Diagnosis view</h2>\n                  \n                  A <i>Diagnosis view</i> is associated to one <i>Tree view</i> once a check\n                  of its CGNS/Python tree has been performed. The <i>Diagnosis view</i>\n                  shows the errors and warnings per node, filter the error/warning type you\n                  want to see or suppress the warnings display. You can browse these diagnosis\n                  and go back to the targeted node in the <i>Tree view</i> by pressing the\n                  <i>[space]</i> key.\n                  \n                  <h3>Filters</h3>\n                  <p>\n                  You can select an error/warning code in the combo-box, it shows all the\n                  error/warning codes the check has collected. In the case you have too\n                  many warnings, you can just ignore them by un-setting the <i>Warnings</i>\n                  checkbox.\n                  \n                  <h3>Buttons</h3>\n                  <p>\n                  <table>\n                  <tr><td><img source="":/images/icons/level-in.png""></td>\n                  <td> expand all errors/warnings</td></tr>\n                  <tr><td><img source="":/images/icons/level-out.png""></td>\n                  <td> collapse all errors/warnings</td></tr>\n                  <tr><td><img source="":/images/icons/node-sids-opened.png""></td>\n                  <td> go to previous filtered error/warning</td></tr>\n                  <tr><td><img source="":/images/icons/selected.png""></td>\n                  <td> go to next filtered error/warning</td></tr>\n                  <tr><td><img source="":/images/icons/check-save.png""></td>\n                  <td> save errors/warnings as a Python importable file (see hereafter)</td></tr>\n                  </table>\n                  \n                  <h3>Save diagnosis</h3>\n                  <p>\n                  You can save all the diagnosis in a file. The file contains a Python\n                  dictionnary in the variable <i>data</i> with the node paths as key.\n                  For a key, the value is the list of diagnosis, each diagnosis is a tuple\n                  of three strings: the error/warning code, the level, the message.\n                  Here is an example of such a file:\n                  <pre>\n                  data={\n                  \'/SquaredNozzle/INJ3/.Solver#Trigger/next_iteration\':\n                    (""S004"",""E"",""DataType [I4] not allowed for this node""),\n                  \'/SquaredNozzle/INJ3/.Solver#Trigger/next_state\':\n                    (""S004"",""E"",""DataType [I4] not allowed for this node"")\n                  }\n                  </pre>\n                  \n                  """"""),\n    # --------------------------------------------------------------------------\n    \'Info\': (\'Info panel\',\n             """"""\n             <h2>Info panel</h2>\n             \n             Gives all details on the top file you use to load/save the target CGNS/Tree.\n             \n             \n             <b>In case of links, only the top file is detailled.</b>\n             \n             <h3>Translated files</h3>\n             <p>\n             \n             As <i>pyCGNS</i> uses only GCNS/HDF5 files, using <i>CHLone</i>, the CGNS/ADF\n             files are translated on the fly when you load them. The translation tool is\n             <i>cgnsconvert</i> and its location should be set into the <i>Option panel</i>.\n             \n             A translated file is stored into a temporary directory, the <i>Info panel</i>\n             shows you which is the actual original file name and the temporary filename.\n             """"""),\n    # --------------------------------------------------------------------------\n    \'Pattern\': (\'Pattern panel\',\n                """"""\n                <h2>Pattern panel</h2>\n                \n                """"""),\n    # --------------------------------------------------------------------------\n    \'Tools\': (\'Tools panel\',\n              """"""\n              <h2>Tools panel</h2>\n              \n              <h1>Search</h1>\n              The SIDS type can be selected as a choice in the CGNS/SIDS types or you\n              can enter your own pattern for regexp search. In that later case, you have to\n              press [ENTER] once you have typed down the actual search string.\n              \n              The Children checks are performed with a OR clause.\n              If you require a child to be named \'FamilyName\' for example, then the check\n              is True if at least one child has this name. With the NOT clause, the check\n              is True if NO child has the name \'FamilyName\'.\n              \n              """"""),\n    # --------------------------------------------------------------------------\n    \'Message\': (\'Message window\',\n                """"""\n                <h2>About Messages</h2>\n                \n                Some info messages have the <i>don\'t show again</b> check box.\n                If you set this once, you would never see the message again, unless you\n                re-activate it in the <b>Option Panel</b>\n                \n                """"""),\n    # --------------------------------------------------------------------------\n}\n\n# --- last line\n'"
CGNS/NAV/winfo.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nimport sys\nimport string\n\nfrom qtpy.QtCore import Qt\n#from qtpy.QtWidgets import QWidget\n\nfrom CGNS.NAV.Q7InfoWindow import Ui_Q7InfoWindow\nfrom CGNS.NAV.wfingerprint import Q7Window\n\n\n# -----------------------------------------------------------------\nclass Q7Info(Q7Window, Ui_Q7InfoWindow):\n    def __init__(self, parent, data, fgprint):\n        Q7Window.__init__(self, Q7Window.VIEW_INFO, parent, None, None)\n        self.bClose.clicked.connect(self.reject)\n        self.bInfo.clicked.connect(self.infoInfoView)\n        self._fgprint = fgprint\n        self._data = data\n\n    def infoInfoView(self):\n        self._control.helpWindow('Info')\n\n    def show(self):\n        self.reset()\n        self.bHasBeenModified.setVisible(False)\n        if self._fgprint.fileHasChanged():\n            self.bHasBeenModified.setVisible(True)\n        super(Q7Info, self).show()\n\n    def reset(self):\n        for k in dir(self):\n            if k in self._data:\n                v = self._data[k]\n                if isinstance(v, bool):\n                    getattr(self, k).setEnabled(True)\n                    if v:\n                        getattr(self, k).setCheckState(Qt.Checked)\n                    else:\n                        getattr(self, k).setCheckState(Qt.Unchecked)\n                    getattr(self, k).setEnabled(False)\n                if isinstance(v, (str, bytes, int, float)):\n                    getattr(self, k).setText(str(v))\n                    # getattr(self,k).setFont(OCTXT.FixedFontTable)\n\n    def reject(self):\n        self.close()\n\n# -----------------------------------------------------------------\n"""
CGNS/NAV/wlink.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nimport sys\nimport string\nimport os.path\n\nimport CGNS.MAP as CGM\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\n\nfrom qtpy.QtCore import Qt\nfrom qtpy.QtWidgets import QFileDialog\nfrom qtpy.QtWidgets import (QTableWidgetItem, QStyledItemDelegate, QLineEdit, QHeaderView)\n\nfrom CGNS.NAV.Q7LinkWindow import Ui_Q7LinkWindow\nfrom CGNS.NAV.wfingerprint import Q7Window as QW\n\nimport CGNS.NAV.wmessages as MSG\n\n\n# -----------------------------------------------------------------\nclass Q7LinkItemDelegate(QStyledItemDelegate):\n    def __init__(self, owner, model):\n        self._table = owner.linkTable\n        QStyledItemDelegate.__init__(self, self._table)\n        self._parent = owner\n        self._model = model\n        self._filename = \'\'\n        self._dirname = \'\'\n\n    def createEditor(self, parent, option, index):\n        ws = option.rect.width()\n        hs = option.rect.height() + 4\n        xs = option.rect.x()\n        ys = option.rect.y() - 2\n        if index.column() in [2]:\n            filt = ""CGNS Files (*.hdf *.cgns)""\n            filename = str(QFileDialog.getOpenFileName(self._table,\n                                                       ""Select file"",\n                                                       filter=filt)[0])\n            (dname, fname) = os.path.split(filename)\n            if not dname or not fname:\n                return None\n            itf = QTableWidgetItem(fname)\n            itd = QTableWidgetItem(dname)\n            self._table.setItem(index.row(), 2, itf)\n            self._table.setItem(index.row(), 4, itd)\n            return None\n        if index.column() in [1, 3]:\n            editor = QLineEdit(parent)\n            editor.transgeometry = (xs, ys, ws, hs)\n            editor.installEventFilter(self)\n            self.setEditorData(editor, index)\n            return editor\n        return None\n\n    def setEditorData(self, editor, index):\n        value = index.data()\n        editor.clear()\n        editor.insert(value)\n\n    def setModelData(self, editor, model, index):\n        col = index.column()\n        row = index.row()\n        v = str(editor.text())\n        if col in [1, 3]:\n            v = CGU.getPathNoRoot(v)\n        self._parent._links[row][self._parent._col2lk[col]] = v\n        self._parent.reset()\n\n    def updateEditorGeometry(self, editor, option, index):\n        editor.setGeometry(*editor.transgeometry)\n\n    def paint(self, painter, option, index):\n        QStyledItemDelegate.paint(self, painter, option, index)\n\n\n# -----------------------------------------------------------------\nclass Q7LinkList(QW, Ui_Q7LinkWindow):\n    def __init__(self, parent, fgindex, master):\n        QW.__init__(self, QW.VIEW_LINK, parent, None, fgindex)\n        self.bClose.clicked.connect(self.reject)\n        self._lk2col = [4, 2, 3, 1, 0]\n        self._col2lk = [4, 3, 1, 2, 0]\n        self._master = master\n        self._links = self.FG.links\n        self.linkTable.setItemDelegate(Q7LinkItemDelegate(self,\n                                                          self.FG.model))\n        self.setLabel(self.eDirSource, self.FG.filedir)\n        self.setLabel(self.eFileSource, self.FG.filename)\n        self.bInfo.clicked.connect(self.infoLinkView)\n        self.bAddLink.clicked.connect(self.newLink)\n        self.bDeleteLink.clicked.connect(self.removeLink)\n        self.bDuplicateLink.clicked.connect(self.duplicateLink)\n        self.bSave.clicked.connect(self.infoLinkView)\n        self.bCheckLink.clicked.connect(self.checkLinks)\n        self.bLoadTree.clicked.connect(self.loadLinkFile)\n\n    def doRelease(self):\n        self.reject()\n\n    def loadLinkFile(self):\n        i = self.linkTable.currentItem()\n        if i is None:\n            return\n        r = i.row()\n        d = self.linkTable.item(r, 4).text()\n        f = self.linkTable.item(r, 2).text()\n        filename = ""%s/%s"" % (d, f)\n        self.busyCursor()\n        if filename is not None:\n            self._control.loadfile(filename)\n        self.readyCursor()\n\n    def infoLinkView(self):\n        self._control.helpWindow(\'Link\')\n\n    def duplicateLink(self):\n        if self._links:\n            i = self.linkTable.currentItem()\n            if i is None:\n                return\n            r = i.row()\n            self._links.append(self._links[r])\n            self.reset()\n        return\n\n    def removeLink(self):\n        if not self._links:\n            return\n        i = self.linkTable.currentItem()\n        if i is None:\n            return\n        reply = MSG.wQuestion(self, 311, \'Remove link entry\',\n                              """"""Do you want to remove the selected link entry?\n                                 Existing sub-tree would be <b>merged</b> in the\n                                 top file during the next save."""""")\n        if reply:\n            r = i.row()\n            self._links.pop(r)\n            self.reset()\n\n    def checkLinks(self):\n        pass\n\n    def newLink(self):\n        self._links.append([\'\', \'\', \'\', \'\', CGM.S2P_LKIGNORED])\n        self.reset()\n\n    def show(self):\n        self.reset()\n        super(Q7LinkList, self).show()\n\n    def statusIcon(self, status):\n        if status == CGM.S2P_LKOK:\n            it = QTableWidgetItem(self.IC(QW.I_L_OKL), \'\')\n            it.setToolTip(\'Link ok\')\n            return it\n        if status & CGM.S2P_LKNOFILE:\n            it = QTableWidgetItem(self.IC(QW.I_L_NFL), \'\')\n            it.setToolTip(\'File not found in search path\')\n            return it\n        if status & CGM.S2P_LKIGNORED:\n            it = QTableWidgetItem(self.IC(QW.I_L_IGN), \'\')\n            it.setToolTip(\'Link was ignored during load\')\n            return it\n        if status & CGM.S2P_LKFILENOREAD:\n            it = QTableWidgetItem(self.IC(QW.I_L_NRL), \'\')\n            it.setToolTip(\'File found, not readable\')\n            return it\n        if status & CGM.S2P_LKNONODE:\n            it = QTableWidgetItem(self.IC(QW.I_L_NNL), \'\')\n            it.setToolTip(\'File ok, node path not found\')\n            return it\n        it = QTableWidgetItem(self.IC(QW.I_L_ERL), \'\')\n        it.setToolTip(\'Unknown error\')\n        return it\n\n    def reset(self):\n        v = self.linkTable\n        v.clear()\n        v.setRowCount(0)\n        lh = v.horizontalHeader()\n        lv = v.verticalHeader()\n        h = [\'S\', \'Source Node\', \'Linked-to file\', \'Linked-to Node\', \'Found in dir\']\n        for i, hstr in enumerate(h):\n            hi = QTableWidgetItem(hstr)\n            hi.setFont(OCTXT._Label_Font)\n            v.setHorizontalHeaderItem(i, hi)\n            lh.setSectionResizeMode(i, QHeaderView.ResizeToContents)\n        lh.setSectionResizeMode(len(h) - 1, QHeaderView.Stretch)\n        v.setRowCount(len(self._links))\n        r = 0\n        for lk in self._links:\n            (ld, lf, ln, sn, st) = lk\n            t1item = self.statusIcon(st)\n            t2item = QTableWidgetItem(sn)\n            t2item.setFont(OCTXT._Table_Font)\n            t3item = QTableWidgetItem(lf)\n            t3item.setFont(OCTXT._Table_Font)\n            t4item = QTableWidgetItem(ln)\n            t4item.setFont(OCTXT._Table_Font)\n            t5item = QTableWidgetItem(ld)\n            t5item.setFont(OCTXT._Table_Font)\n            v.setItem(r, 0, t1item)\n            v.setItem(r, 1, t2item)\n            v.setItem(r, 2, t3item)\n            v.setItem(r, 3, t4item)\n            v.setItem(r, 4, t5item)\n            r += 1\n        for i in (2, 3):\n            v.resizeColumnToContents(i)\n        for i in range(v.rowCount()):\n            v.resizeRowToContents(i)\n\n    def reject(self):\n        if self._master._linkwindow is not None:\n            self._master._linkwindow = None\n        self.close()\n\n# -----------------------------------------------------------------\n'"
CGNS/NAV/wmergetreeview.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS.NAV - Python package for CFD General Notation System - NAVigater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nimport CGNS.PAT.cgnsutils as CGU\n\nfrom qtpy.QtCore import (Qt, QModelIndex, QPoint)\nfrom qtpy.QtWidgets import (QStyledItemDelegate, QMenu)\nfrom qtpy.QtGui import (QColor, QFont, QIcon, QPixmap)\n\nfrom CGNS.NAV.Q7MergeWindow import Ui_Q7MergeWindow\nfrom CGNS.NAV.wfingerprint import Q7Window\n\nimport CGNS.NAV.mtree as NMT\n\n(DIFF_NX, DIFF_NA, DIFF_ND, DIFF_CQ, DIFF_CT, DIFF_CS, DIFF_CV) = range(7)\n(MERGE_NX, MERGE_NA, MERGE_NB) = range(3)\n\n\n# -----------------------------------------------------------------\nclass Q7MergeItemDelegate(QStyledItemDelegate):\n    def __init__(self, owner, model, diag, merge):\n        QStyledItemDelegate.__init__(self, owner)\n        self._parent = owner\n        self._model = model\n        self._diag = diag\n        self._merge = merge\n        self.orange = QColor(""#FFA500"")\n        self.red = QColor(""#FF0000"")\n        self.green = QColor(""#008000"")\n        self.gray = QColor(""#C0C0C0"")\n\n    def paint(self, painter, option, index):\n        idx = self._parent.modelIndex(index)\n        col = idx.column()\n        nnm = self._parent.modelData(index).sidsName()\n        pth = CGU.getPathNoRoot(self._parent.modelData(index).sidsPath())\n        if (self._merge is not None) and (pth in self._merge):\n            if self._merge[pth] == MERGE_NA:\n                self._parent.modelData(index).setUserStatePrivate(\'A\')\n            if self._merge[pth] == MERGE_NB:\n                self._parent.modelData(index).setUserStatePrivate(\'B\')\n        if col == NMT.COLUMN_NAME:\n            if nnm not in OCTXT._ReservedNames:\n                option.font.setWeight(QFont.Bold)\n            QStyledItemDelegate.paint(self, painter, option, index)\n            option.font.setWeight(QFont.Light)\n            if (self._diag is not None) and (pth in self._diag):\n                color = self.gray\n                if self._diag[pth] == DIFF_NX:\n                    color = self.gray\n                if self._diag[pth] == DIFF_NA:\n                    color = self.green\n                if self._diag[pth] == DIFF_ND:\n                    color = self.red\n                painter.save()\n                painter.setBrush(Qt.NoBrush)\n                painter.setPen(color)\n                painter.drawRect(option.rect)\n                painter.restore()\n        elif col == NMT.COLUMN_VALUE:\n            option.font.setFamily(OCTXT.Table_Family)\n            QStyledItemDelegate.paint(self, painter, option, index)\n            if (self._diag is not None) and (pth in self._diag):\n                if self._diag[pth] == DIFF_CV:\n                    painter.save()\n                    painter.setBrush(Qt.NoBrush)\n                    painter.setPen(self.orange)\n                    painter.drawRect(option.rect)\n                    painter.restore()\n        elif col == NMT.COLUMN_DATATYPE:\n            option.font.setFamily(OCTXT.Table_Family)\n            option.font.setPointSize(8)\n            QStyledItemDelegate.paint(self, painter, option, index)\n            if (self._diag is not None) and (pth in self._diag):\n                if self._diag[pth] == DIFF_CQ:\n                    painter.save()\n                    painter.setBrush(Qt.NoBrush)\n                    painter.setPen(self.orange)\n                    painter.drawRect(option.rect)\n                    painter.restore()\n        elif col == NMT.COLUMN_SHAPE:\n            QStyledItemDelegate.paint(self, painter, option, index)\n            if (self._diag is not None) and (pth in self._diag):\n                if self._diag[pth] == DIFF_CS:\n                    painter.save()\n                    painter.setBrush(Qt.NoBrush)\n                    painter.setPen(self.orange)\n                    painter.drawRect(option.rect)\n                    painter.restore()\n        elif col == NMT.COLUMN_SIDS:\n            QStyledItemDelegate.paint(self, painter, option, index)\n            if (self._diag is not None) and (pth in self._diag):\n                if self._diag[pth] == DIFF_CT:\n                    painter.save()\n                    painter.setBrush(Qt.NoBrush)\n                    painter.setPen(self.orange)\n                    painter.drawRect(option.rect)\n                    painter.restore()\n        else:\n            QStyledItemDelegate.paint(self, painter, option, index)\n\n\n# -----------------------------------------------------------------\nclass Q7Merge(Q7Window, Ui_Q7MergeWindow):\n    def __init__(self, control, fgprint, diag):\n        Q7Window.__init__(self, Q7Window.VIEW_DIFF, control, None, fgprint)\n        self._depthExpanded = 0\n        self._lastEntered = None\n        self._fgprint = fgprint\n        (ldiag, lmerge) = self.diagAnalysis(diag)\n        self.treeview.expanded[QModelIndex].connect(self.expandNode)\n        self.treeview.collapsed.connect(self.collapseNode)\n        self.treeview.clicked[QModelIndex].connect(self.clickedNode)\n        self.treeview.customContextMenuRequested[QPoint].connect(self.clickedNode)\n        # QObject.connect(self.treeview,\n        #                 SIGNAL(""expanded(QModelIndex)""),\n        #                 self.expandNode)\n        # QObject.connect(self.treeview,\n        #                 SIGNAL(""collapsed()""),\n        #                 self.collapseNode)\n        # QObject.connect(self.treeview,\n        #                 SIGNAL(""clicked(QModelIndex)""),\n        #                 self.clickedNode)\n        # QObject.connect(self.treeview,\n        #                 SIGNAL(""customContextMenuRequested(QPoint)""),\n        #                 self.clickedNode)\n        self.bClose.clicked.connect(self.leave)\n        self.bInfo.clicked.connect(self.infoTreeView)\n        self.bZoomIn.clicked.connect(self.expandLevel)\n        self.bZoomOut.clicked.connect(self.collapseLevel)\n        self.bZoomAll.clicked.connect(self.expandMinMax)\n        self.bSaveDiff.clicked.connect(self.savediff)\n        self.bSelectA.clicked.connect(self.showSelected)\n        self.bSelectB.clicked.connect(self.showSelected)\n        self.bSelectOrderSwap.clicked.connect(self.swapSelected)\n        self.setContextMenuPolicy(Qt.CustomContextMenu)\n        self.popupmenu = QMenu()\n        self.proxyA = self._fgprint.model\n        self.treeview.setModel(self.proxyA)\n        self.treeview.setItemDelegate(Q7MergeItemDelegate(self.treeview,\n                                                          self._fgprint.model,\n                                                          ldiag, lmerge))\n        self.treeview.setControlWindow(self, self._fgprint.model)\n        self.treeview.hideColumn(NMT.COLUMN_FLAG_LINK)\n        self.treeview.hideColumn(NMT.COLUMN_FLAG_CHECK)\n        self.treeview.hideColumn(NMT.COLUMN_FLAG_SELECT)\n        self._fgprint.model.addA = True\n        self._fgprint.model.addB = True\n        self._A = QIcon(QPixmap("":/images/icons/user-A.png""))\n        self._B = QIcon(QPixmap("":/images/icons/user-B.png""))\n        self._order = 0  # A first\n\n    def swapSelected(self):\n        if not self._order:\n            self.bSelectA.setIcon(self._B)\n            self.bSelectB.setIcon(self._A)\n            self._order = 1\n        else:\n            self.bSelectA.setIcon(self._A)\n            self.bSelectB.setIcon(self._B)\n            self._order = 0\n\n    def showSelected(self):\n        self._fgprint.model.addA = False\n        self._fgprint.model.addB = False\n        if self.bSelectA.isChecked():\n            self._fgprint.model.addA = True\n        if self.bSelectB.isChecked():\n            self._fgprint.model.addB = True\n\n    def diagAnalysis(self, diag):\n        ldiag = {}\n        lmerge = {}\n        for k in diag:\n            ldiag[k] = DIFF_NX\n            for d in diag[k]:\n                if d[0] == \'NA\':\n                    ldiag[d[1]] = DIFF_NA\n                    lmerge[d[1]] = MERGE_NB\n                if d[0] == \'ND\':\n                    ldiag[d[1]] = DIFF_ND\n                    lmerge[d[1]] = MERGE_NA\n                if d[0] in [\'CT\']:\n                    ldiag[k] = DIFF_CT\n                    lmerge[k] = MERGE_NA\n                if d[0] in [\'C3\', \'C1\', \'C2\']:\n                    ldiag[k] = DIFF_CQ\n                    lmerge[k] = MERGE_NA\n                if d[0] in [\'C6\', \'C7\']:\n                    ldiag[k] = DIFF_CV\n                    lmerge[k] = MERGE_NA\n                if d[0] in [\'C4\', \'C5\']:\n                    ldiag[k] = DIFF_CS\n                    lmerge[k] = MERGE_NA\n        return (ldiag, lmerge)\n\n    def model(self):\n        return self._fgprint.model\n\n    def modelIndex(self, idx):\n        if not idx.isValid():\n            return -1\n        midx = idx\n        # if (idx.model() != self.treeview.M()):\n        #    midx=self.treeview.model().mapToSource(idx)\n        return midx\n\n    def modelData(self, idx):\n        if not idx.isValid():\n            return None\n        return self.modelIndex(idx).internalPointer()\n\n    def infoTreeView(self):\n        self._control.helpWindow(\'Tree\')\n\n    def savediff(self):\n        pass\n\n    def expandMinMax(self):\n        if self._depthExpanded == self._fgprint.depth - 2:\n            self._depthExpanded = -1\n            self.treeview.collapseAll()\n        else:\n            self._depthExpanded = self._fgprint.depth - 2\n            self.treeview.expandAll()\n        self.resizeAll()\n\n    def expandLevel(self):\n        if self._depthExpanded < self._fgprint.depth - 2:\n            self._depthExpanded += 1\n        self.treeview.expandToDepth(self._depthExpanded)\n        self.resizeAll()\n\n    def collapseLevel(self):\n        if self._depthExpanded != -1:\n            self._depthExpanded -= 1\n        if self._depthExpanded == -1:\n            self.treeview.collapseAll()\n        else:\n            self.treeview.expandToDepth(self._depthExpanded)\n        self.resizeAll()\n\n    def updateStatus(self, node):\n        return\n        self.lineEdit.clear()\n        self.lineEdit.insert(node.sidsPath())\n\n    def updateMenu(self, nodeidxs):\n        return\n        nodeidx = self.modelIndex(nodeidxs)\n        if not nodeidx.isValid:\n            return False\n        if nodeidx.internalPointer() is None:\n            return False\n        if nodeidx.internalPointer().sidsPath() == \'/CGNSTree\':\n            return False\n        self.setLastEntered(nodeidxs)\n        if nodeidx != -1:\n            node = nodeidx.internalPointer()\n            lknode = not node.sidsIsLink()\n            lznode = node.hasLazyLoad()\n            actlist = (\n                (""About %s"" % node.sidsType(), self.aboutSIDS, None, False),\n                None,\n                (""Mark/unmark node"", self.marknode, \'Space\', False),\n                (""Add new child node"", self.newnodechild, \'Ctrl+A\', False),\n                (""Add new brother node"", self.newnodebrother, \'Ctrl+Z\', False),\n                None,\n                (""Open form"", self.popform, \'Ctrl+F\', False),\n                (""Open view"", self.openSubTree, \'Ctrl+W\', False),\n                (""Open view on linked-to file"", self.openLkTree, \'Ctrl+O\', lknode),\n                None,\n                (""Load node data in memory"", self.dataLoad, \'Ctrl+L\', not lznode),\n                (""Release memory node data"", self.dataRelease, \'Ctrl+R\', lznode),\n                None,\n                (""Copy"", self.mcopy, \'Ctrl+C\', False),\n                (""Cut"", self.mcut, \'Ctrl+X\', False),\n                (""Paste as brother"", self.mpasteasbrother, \'Ctrl+V\', False),\n                (""Paste as child"", self.mpasteaschild, \'Ctrl+Y\', False),\n                None,\n                (""Cut all selected"", self.mcutselected, \'Ctrl+Shift+X\', False),\n                (""Paste as brother for each selected"",\n                 self.mpasteasbrotherselected, \'Ctrl+Shift+V\', False),\n                (""Paste as child for each selected"",\n                 self.mpasteaschildselected, \'Ctrl+Shift+Y\', False),\n                (""Load nodes data in memory for each selected"",\n                 self.dataLoadSelected, \'Ctrl+Shift+L\', False),\n                (""Release memory node data for each selected"",\n                 self.dataReleaseSelected, \'Ctrl+Shift+R\', False),\n            )\n            self.popupmenu.clear()\n            self.popupmenu.setTitle(\'Node menu\')\n            for aparam in actlist:\n                if aparam is None:\n                    self.popupmenu.addSeparator()\n                else:\n                    a = QAction(aparam[0], self)\n                    a.triggered.connect(aparam[1])\n                    if aparam[2] is not None:\n                        a.setShortcut(aparam[2])\n                    self.popupmenu.addAction(a)\n                    a.setDisabled(aparam[3])\n            return True\n\n    def setLastEntered(self, nix=None):\n        self._lastEntered = None\n\n    def getLastEntered(self):\n        return self._lastEntered\n\n    def clearLastEntered(self):\n        self._lastEntered = None\n        self.treeview.selectionModel().clearSelection()\n        return None\n\n    def clickedNode(self, index):\n        pass\n\n    def expandNode(self, *args):\n        self.resizeAll()\n\n    def collapseNode(self, *args):\n        pass\n\n    def resizeAll(self):\n        for n in range(NMT.COLUMN_LAST + 1):\n            self.treeview.resizeColumnToContents(n)\n\n    def show(self):\n        super(Q7Merge, self).show()\n\n    def closeAlone(self):\n        pass\n\n    def leave(self):\n        self.close()\n\n# -----------------------------------------------------------------\n'"
CGNS/NAV/wmessages.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nimport sys\nimport string\nimport re\n\nfrom qtpy.QtWidgets import QTextEdit, QDialog\nfrom qtpy.QtGui import QTextCursor, QSyntaxHighlighter, QTextCharFormat, QFont, QColor\n\n\nfrom CGNS.NAV.Q7MessageWindow import Ui_Q7MessageWindow\nfrom CGNS.NAV.Q7LogWindow import Ui_Q7LogWindow\n\n(INFO, QUESTION, ERROR, WARNING) = (0, 1, 2, 3)\n\n# globals\nOK = True\nCANCEL = False\nANSWER = True\n\n\n# -----------------------------------------------------------------\nclass Q7DocEditor(QTextEdit):\n    def __init__(self, parent=None):\n        QTextEdit.__init__(self, parent)\n\n    def initText(self, text):\n        self.clear()\n        self.insertPlainText(text)\n        self.moveCursor(QTextCursor.Start, QTextCursor.MoveAnchor)\n        self.ensureCursorVisible()\n\n\n# -----------------------------------------------------------------\nclass Q7PythonEditor(QTextEdit):\n    def __init__(self, parent=None):\n        QTextEdit.__init__(self, parent)\n        self.highlighter = Q7PythonEditorHighlighter(self.document())\n        fsz = 12\n        ffm = \'Courier\'\n        self.setStyleSheet(""font: %dpt \\""%s\\"";"" % (fsz, ffm))\n\n    def initText(self, text):\n        self.clear()\n        self.insertPlainText(text)\n        self.moveCursor(QTextCursor.Start, QTextCursor.MoveAnchor)\n        self.ensureCursorVisible()\n\n\n# -----------------------------------------------------------------\nclass Q7PythonEditorHighlighter(QSyntaxHighlighter):\n    def __init__(self, *args):\n        keywords = r""\\bimport\\b|\\bas\\b|\\bfor\\b|\\bdef\\b|\\bpass\\b""\n        keywords += r""|\\bclass\\b|\\bfrom\\b|\\bif\\b|\\bthen\\b|\\belse\\b""\n        keywords += r""|\\belif\\b|\\btry\\b|\\bexcept\\b|\\bfinally\\b|\\braise\\b""\n        keywords += r""|\\bprint\\b|\\bin\\b|\\bnot\\b|\\band\\b|\\bor\\b|\\bcontinue\\b""\n        keywords += r""|\\bwhile\\b|\\breturn\\b|\\blambda\\b|\\bwith\\b|\\del\\b""\n        keywords += r""|\\bglobal\\b|\\byield\\b|\\bexec\\b|\\bassert\\b|\\break\\b""\n        constants = r""\\bNone\\b|\\bTrue\\b|\\bFalse\\b|\\bself\\b""\n        autovars = r""\\bNODE\\b|\\bNAME\\b|\\bVALUE\\b|\\bSIDSTYPE\\b|\\bCHILDREN\\b""\n        autovars += r""|\\bTREE\\b|\\bPATH\\b|\\bRESULT\\b|\\bARGS\\b|\\bPARENT\\b""\n        autovars += r""|\\bLINKS\\b|\\bSKIPS\\b""\n        numbers = r\'[-+]?\\d+\' + \'|[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?\'\n        comment = r\'\\#.*$\'\n        textstring = r\'""[^""]*?""|\\\'[^\\\']*?\\\'\'\n        self.f_keywords = QTextCharFormat()\n        self.f_keywords.setFontWeight(QFont.Bold)\n        self.f_keywords.setForeground(QColor(\'Blue\'))\n        self.f_comment = QTextCharFormat()\n        self.f_comment.setFontWeight(QFont.Light)\n        self.f_comment.setForeground(QColor(\'Red\'))\n        self.f_constants = QTextCharFormat()\n        self.f_constants.setFontWeight(QFont.Light)\n        self.f_constants.setForeground(QColor(\'Navy\'))\n        self.f_autovars = QTextCharFormat()\n        self.f_autovars.setFontWeight(QFont.Bold)\n        self.f_autovars.setForeground(QColor(\'Green\'))\n        self.f_textstring = QTextCharFormat()\n        self.f_textstring.setFontWeight(QFont.Bold)\n        self.f_textstring.setForeground(QColor(\'Coral\'))\n        self.f_numbers = QTextCharFormat()\n        self.f_numbers.setFontWeight(QFont.Light)\n        self.f_numbers.setForeground(QColor(\'Gray\'))\n        self.r_keywords = re.compile(keywords)\n        self.r_numbers = re.compile(numbers)\n        self.r_comment = re.compile(comment)\n        self.r_constants = re.compile(constants)\n        self.r_autovars = re.compile(autovars)\n        self.r_textstring = re.compile(textstring)\n        self.in_comment = False\n        self.in_string = False\n        self.r_syntax = []\n        self.r_syntax.append((self.r_keywords, self.f_keywords))\n        self.r_syntax.append((self.r_numbers, self.f_numbers))\n        self.r_syntax.append((self.r_autovars, self.f_autovars))\n        self.r_syntax.append((self.r_constants, self.f_constants))\n        self.r_syntax.append((self.r_comment, self.f_comment))\n        self.r_syntax.append((self.r_textstring, self.f_textstring))\n        QSyntaxHighlighter.__init__(self, *args)\n\n    def highlightBlock(self, textblock):\n        text = str(textblock)\n        fdef = self.format(0)\n        fmax = len(text)\n        for (rex, fmt) in self.r_syntax:\n            mit = rex.finditer(text)\n            for m in mit:\n                self.setFormat(m.span()[0], m.span()[1], fmt)\n                self.setFormat(m.span()[1], fmax, fdef)\n\n\n# -----------------------------------------------------------------\nclass Q7Log(QDialog, Ui_Q7LogWindow):\n    def __init__(self):\n        QDialog.__init__(self, None)\n        self.setupUi(self)\n        self.bClose.clicked.connect(self.leave)\n        self.bClear.clicked.connect(self.clear)\n        self.setWindowTitle(""%s: Log"" % OCTXT._ToolName)\n        self.eLog.setReadOnly(True)\n        self.eLog.setAcceptRichText(False)\n        self.eLog.setStyleSheet(""font: 12pt \\""Courier\\"";"")\n\n    def write(self, msg):\n        self.eLog.insertPlainText(msg)\n\n    def clear(self):\n        self.eLog.clear()\n\n    def leave(self, *arg):\n        self.hide()\n\n\n# -----------------------------------------------------------------\nclass Q7MessageBox(QDialog, Ui_Q7MessageWindow):\n    def __init__(self, control, code):\n        QDialog.__init__(self, None)\n        self.setupUi(self)\n        self.bOK.clicked.connect(self.runOK)\n        self.bCANCEL.clicked.connect(self.runCANCEL)\n        self.bInfo.setDisabled(True)\n        self._text = \'\'\n        self._control = control\n        self._code = 0\n\n    def setMode(self, cancel=False, again=False):\n        if (not again): self.cNotAgain.hide()\n        if (not cancel): self.bCANCEL.hide()\n\n    def setLayout(self, text, btype=INFO,\n                  cancel=False, again=False, buttons=(\'OK\', \'Cancel\')):\n        self.bOK.setText(buttons[0])\n        if len(buttons) > 1:\n            self.bCANCEL.setText(buttons[1])\n        self.eMessage.setText(str(text))\n        self._text = text\n        self.eMessage.setReadOnly(True)\n        self.setMode(cancel, again)\n\n    def runOK(self, *arg):\n        self.addToSkip()\n        self.close()\n        self.setResult(QDialog.Accepted)\n\n    def runCANCEL(self, *arg):\n        self.addToSkip()\n        self.close()\n        self.setResult(QDialog.Rejected)\n\n    def addToSkip(self):\n        if (self.cNotAgain.isChecked()):\n            if (self._code and self._code not in OCTXT.IgnoredMessages):\n                OCTXT.IgnoredMessages += [self._code]\n\n    def showAndWait(self):\n        ret = self.exec_()\n        if ret == QDialog.Accepted:\n            return True\n        else:\n            return False\n\n\ndef wError(control, code, info, error):\n    txt = """"""<img source="":/images/icons/user-G.png"">  <big>ERROR #%d</big><hr>\n         %s<br>%s"""""" % (code, error, info)\n    if (code in OCTXT.IgnoredMessages): return True\n    msg = Q7MessageBox(control, code)\n    msg.setWindowTitle(""%s: Error"" % OCTXT._ToolName)\n    msg.setLayout(txt, btype=ERROR, cancel=False, again=True, buttons=(\'Close\',))\n    return msg.showAndWait()\n\n\ndef wQuestion(control, code, title, question, again=True, buttons=(\'OK\', \'Cancel\')):\n    txt = """"""<img source="":/images/icons/user-M.png"">\n         <b> <big>%s</big></b><hr>%s"""""" % (title, question)\n    if (code in OCTXT.IgnoredMessages): return True\n    msg = Q7MessageBox(control, code)\n    msg.setWindowTitle(""%s: Question"" % OCTXT._ToolName)\n    msg.setLayout(txt, btype=QUESTION, cancel=True, again=again, buttons=buttons)\n    return msg.showAndWait()\n\n\ndef wInfo(control, code, title, info, again=True, buttons=(\'Close\',)):\n    txt = """"""<img source="":/images/icons/user-S.png"">\n         <b> <big>%s</big></b><hr>%s"""""" % (title, info)\n    if (code in OCTXT.IgnoredMessages): return True\n    msg = Q7MessageBox(control, code)\n    msg.setWindowTitle(""%s: Info"" % OCTXT._ToolName)\n    msg.setLayout(txt, btype=INFO, cancel=False, again=again, buttons=buttons)\n    return msg.showAndWait()\n\n# --- last line\n'"
CGNS/NAV/woption.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nfrom builtins import (str, bytes, range, dict)\n\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nimport string\n\nfrom qtpy.QtCore import Qt\nfrom qtpy.QtGui import QFont\n\nfrom CGNS.NAV.Q7OptionsWindow import Ui_Q7OptionsWindow\nfrom CGNS.NAV.wfingerprint import Q7Window\n\ncombonames = []\nfor tn in [\'label\', \'edit\', \'table\', \'button\', \'rname\', \'nname\']:\n    combonames += [\'__O_%s_family\' % tn, \'__O_%s_size\' % tn,\n                   \'__O_%s_bold\' % tn, \'__O_%s_italic\' % tn]\n\n\n# -----------------------------------------------------------------\nclass Q7Option(Q7Window, Ui_Q7OptionsWindow):\n    labdict = {\'Label\': [\'QLabel\', \'QTabWidget\', \'QGroupBox\', \'QCheckBox\',\n                         \'QRadioButton\'],\n               \'Button\': [\'QPushButton\'],\n               \'Edit\': [\'QLineEdit\', \'QSpinBox\', \'QComboBox\'],\n               \'RName\': [\'Q7TreeView\'],\n               \'NName\': [],\n               \'Table\': [\'Q7TableView\']}\n    combos = combonames\n\n    def __init__(self, parent):\n        Q7Window.__init__(self, Q7Window.VIEW_OPTION, parent, None, None)\n        self.bApply.clicked.connect(self.accept)\n        self.bInfo.clicked.connect(self.infoOptionView)\n        self.bClose.clicked.connect(self.close)\n        self.bReset.clicked.connect(self.reset)\n        self.bResetIgnored.clicked.connect(self.resetIgnored)\n        self.bResetFonts.clicked.connect(self.resetFonts)\n        self.getOptions()\n\n    def infoOptionView(self):\n        self._control.helpWindow(\'Option\')\n\n    def getopt(self, name):\n        if name[0] == \'_\':\n            return None\n        try:\n            a = getattr(self, \'_Ui_Q7OptionsWindow__O_\' + name.lower())\n        except AttributeError:\n            return None\n        return a\n\n    def checkDeps(self):\n        for dep in OCTXT._depends:\n            for chks in OCTXT._depends[dep]:\n                if self.getopt(chks) is not None:\n                    if not self.getopt(chks).isChecked():\n                        self.getopt(dep).setDisabled(True)\n                    else:\n                        self.getopt(dep).setEnabled(True)\n                else:\n                    print(\'CGNS.NAV (debug) NO OPTION :\', chks)\n\n    def resetIgnored(self):\n        OCTXT.IgnoredMessages = []\n\n    def reset(self):\n        self.getOptions()\n        data = self._options\n        for k in data:\n            if (k[0] != \'_\') and (self.getopt(k) is not None):\n                setattr(OCTXT, k, data[k])\n                if self.getopt(k).objectName() in Q7Option.combos:\n                    pass\n                elif isinstance(data[k], bool):\n                    if data[k]:\n                        self.getopt(k).setCheckState(Qt.Checked)\n                    else:\n                        self.getopt(k).setCheckState(Qt.Unchecked)\n                elif isinstance(data[k], int):\n                    self.getopt(k).setValue(data[k])\n                elif isinstance(data[k], str):\n                    try:\n                        self.getopt(k).setText(data[k])\n                    except AttributeError:\n                        pass  # self.getopt(k).setEditText(data[k])\n                elif isinstance(data[k], list):\n                    s = \'\'\n                    for l in data[k]:\n                        s += \'%s\\n\' % l\n                    self.getopt(k).setPlainText(s)\n        self.checkDeps()\n        self.updateFonts()\n\n    def resetFonts(self):\n        for k in OCTXT._Default_Fonts:\n            self.setOptionValue(k, OCTXT._Default_Fonts[k])\n        self.updateFonts()\n        self.accept()\n\n    def show(self):\n        self.reset()\n        super(Q7Option, self).show()\n\n    def accept(self):\n        data = self._options\n        for k in data:\n            if (k[0] != \'_\') and (self.getopt(k) is not None):\n                if self.getopt(k).objectName() in Q7Option.combos:\n                    pass\n                elif isinstance(data[k], bool):\n                    if self.getopt(k).isChecked():\n                        data[k] = True\n                    else:\n                        data[k] = False\n                elif isinstance(data[k], int):\n                    v = self.getopt(k).value()\n                    if self.validateOption(k, v):\n                        data[k] = self.getopt(k).value()\n                elif isinstance(data[k], str):\n                    v = self.getopt(k).text()\n                    if self.validateOption(k, v):\n                        data[k] = self.getopt(k).text()\n                elif isinstance(data[k], list):\n                    s = self.getopt(k).toPlainText()\n                    cset = []\n                    for l in s.split(\'\\n\'):\n                        if l and l not in cset:\n                            cset.append(l)\n                    if self.validateOption(k, cset):\n                        data[k] = cset\n        self.updateFonts(update=True)\n        self.setOptions()\n        self.reset()\n\n    def updateFonts(self, update=False):\n        data = self._options\n        scss = """"\n        for kfont in Q7Option.labdict:\n            if update:\n                fm = self.getopt(\'%s_Family\' % kfont).currentFont().family()\n                it = self.getopt(\'%s_Italic\' % kfont).isChecked()\n                bd = self.getopt(\'%s_Bold\' % kfont).isChecked()\n                sz = int(self.getopt(\'%s_Size\' % kfont).text())\n                data[\'%s_Family\' % kfont] = fm\n                data[\'%s_Size\' % kfont] = sz\n                data[\'%s_Bold\' % kfont] = bd\n                data[\'%s_Italic\' % kfont] = it\n            fm = self._options[\'%s_Family\' % kfont]\n            sz = self._options[\'%s_Size\' % kfont]\n            bd = self._options[\'%s_Bold\' % kfont]\n            it = self._options[\'%s_Italic\' % kfont]\n            if bd:\n                wg = QFont.Bold\n                self.getopt(\'%s_Bold\' % kfont).setCheckState(Qt.Checked)\n            else:\n                wg = QFont.Normal\n                self.getopt(\'%s_Bold\' % kfont).setCheckState(Qt.Unchecked)\n            if it:\n                self.getopt(\'%s_Italic\' % kfont).setCheckState(Qt.Checked)\n            else:\n                self.getopt(\'%s_Italic\' % kfont).setCheckState(Qt.Unchecked)\n            self.getopt(\'%s_Size\' % kfont).setValue(sz)\n            qf = QFont(fm, italic=it, weight=wg, pointSize=sz)\n            self._options[\'_%s_Font\' % kfont] = qf\n            self.getopt(\'%s_Family\' % kfont).setCurrentFont(qf)\n            for wtype in Q7Option.labdict[kfont]:\n                bf = \'\'\n                tf = \'\'\n                if bd:\n                    bf = \'bold\'\n                if it:\n                    tf = \'italic\'\n                scss += """"""%s { font:  %s %s %dpx ""%s"" }\\n"""""" % (wtype, bf, tf, sz, fm)\n        self._control._application.setStyleSheet(scss)\n        self._options[\'UserCSS\'] = scss\n\n# -----------------------------------------------------------------\n'"
CGNS/NAV/wpattern.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nimport sys\nimport numpy\nimport os\nimport importlib\nimport glob\n\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport CGNS.PAT.SIDS\n\nfrom qtpy.QtCore import Qt\nfrom qtpy.QtWidgets import (QFileDialog, QTableWidgetItem, QStyledItemDelegate)\nfrom qtpy.QtGui import QFont\n\nfrom CGNS.NAV.Q7PatternWindow import Ui_Q7PatternWindow\nfrom CGNS.NAV.wfingerprint import Q7Window as QW\n\n# -----------------------------------------------------------------\nclass Q7PatternList(QW, Ui_Q7PatternWindow):\n    def __init__(self, control, fgprint):\n        QW.__init__(self, QW.VIEW_PATTERN, control, None, None)\n        self.bClose.clicked.connect(self.reject)\n        self.bSave.clicked.connect(self.patternsave)\n        self.bInfo.clicked.connect(self.infoPatternView)\n        self.bCopy.clicked.connect(self.copyPatternInBuffer)\n        self.bDelete.clicked.connect(self.deletelocal)\n        self.bSave.setDisabled(True)\n        self.bDelete.setDisabled(True)\n        self.bAdd.setDisabled(True)\n        self._profiles = {}\n        self._profiles[\'SIDS\'] = CGNS.PAT.SIDS.profile\n        self.loadUserProfiles()\n        self._modified = False\n        self._initialized = False\n        self._selected = None\n        self._master = control\n        self.patternTable._panel = self\n\n    def infoPatternView(self):\n        self._control.helpWindow(\'Pattern\')\n\n    def clearSelection(self):\n        if self._selected is not None:\n            rold = self.findRow(*self._selected)\n            if rold != -1:\n                it1 = QTableWidgetItem(self.IC(QW.I_EMPTY), \'\')\n                self.patternTable.setItem(rold, 0, it1)\n\n    def findRow(self, pit, nit):\n        maxrow = self.patternTable.rowCount()\n        for row in range(maxrow):\n            rnit = self.patternTable.item(row, 1).text()\n            rpit = self.patternTable.item(row, 2).text()\n            if (rpit, rnit) == (pit, nit):\n                return row\n        return -1\n\n    def copyPatternInBuffer(self):\n        ix = self.patternTable.currentIndex()\n        if not ix.isValid():\n            return\n        row = ix.row()\n        nit = self.patternTable.item(ix.row(), 1).text()\n        pit = self.patternTable.item(ix.row(), 2).text()\n        if (pit, nit) == self._selected:\n            self.clearSelection()\n            self._selected = None\n            return\n        self.clearSelection()\n        self._selected = (pit, nit)\n        self._control.copyPasteBuffer = self._profiles[pit][nit][0]\n        it1 = QTableWidgetItem(self.IC(QW.I_MARK), \'\')\n        self.patternTable.setItem(row, 0, it1)\n\n    def show(self):\n        if not self._initialized:\n            self.reset()\n        super(Q7PatternList, self).show()\n        self.raise_()\n\n    def patternsave(self):\n        filename = QFileDialog.getSaveFileName(self,\n                                               ""Save pattern"", ""."", ""*.py"")\n        if filename[0] == """":\n            return\n        # f=open(str(filename[0]),\'w+\')\n        # f.write(n)\n        # f.close()\n\n    def deletelocal(self):\n        pass\n\n    def reset(self):\n        tlvcols = 4\n        tlvcolsnames = [\'S\', \'Pattern\', \'P\', \'Comment\']\n        v = self.patternTable\n        v.setColumnCount(tlvcols)\n        lh = v.horizontalHeader()\n        lv = v.verticalHeader()\n        h = tlvcolsnames\n        n = len(h)\n        for i in range(n):\n            hi = QTableWidgetItem(h[i])\n            v.setHorizontalHeaderItem(i, hi)\n        for profkey in self._profiles:\n            prof = self._profiles[profkey]\n            for k in prof:\n                pentry = prof[k]\n                v.setRowCount(v.rowCount() + 1)\n                r = v.rowCount() - 1\n                it1 = QTableWidgetItem(self.IC(QW.I_EMPTY), \'\')\n                it2 = QTableWidgetItem(k)\n                it2.setFont(QFont(""Courier""))\n                it3 = QTableWidgetItem(profkey)\n                it4 = QTableWidgetItem(pentry[2])\n                v.setItem(r, 0, it1)\n                v.setItem(r, 1, it2)\n                v.setItem(r, 2, it3)\n                v.setItem(r, 3, it4)\n        self.patternTable.resizeColumnsToContents()\n        self.patternTable.resizeRowsToContents()\n        plist = []\n        for i in range(len(plist)):\n            v.resizeColumnToContents(i)\n        for i in range(v.rowCount()):\n            v.resizeRowToContents(i)\n        self._initialized = True\n\n    def reject(self):\n        if self._master._patternwindow is not None:\n            self._master._patternwindow = None\n        self.close()\n\n    def loadUserProfiles(self):\n        pthlist = OCTXT.ProfileSearchPathList\n        if not pthlist:\n            return\n        pthlistok = []\n        for pth in pthlist:\n            if os.path.isdir(pth):\n                pthlistok += [pth]\n        if not pthlistok:\n            return\n        for pth in pthlistok:\n            sys.path.append(pth)\n            modlist = [os.path.splitext(os.path.basename(mod))[0]\n                       for mod in glob.glob(\'%s/*\' % pth)]\n            for m in modlist:\n                pym = importlib.import_module(m)\n                self._profiles[m] = pym.profile\n\n\n# -----------------------------------------------------------------\nclass Q7PatternTableItemDelegate(QStyledItemDelegate):\n    def paint(self, painter, option, index):\n        t = index.data(Qt.DisplayRole)\n        r = option.rect.adjusted(2, 2, -2, -2)\n        painter.drawText(r, Qt.AlignVCenter | Qt.AlignLeft, t, r)\n\n# -----------------------------------------------------------------\n'"
CGNS/NAV/wquery.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS.NAV - Python package for CFD General Notation System - NAVigater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nfrom builtins import (str, bytes, range, dict)\n\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nimport sys\nimport numpy\nimport os\n\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\n\nfrom qtpy.QtCore import Qt\nfrom qtpy.QtWidgets import (QFileDialog, QStyledItemDelegate, QLineEdit, QComboBox, QTableWidgetItem, QMessageBox)\nfrom qtpy.QtGui import (QFont, QIcon, QPixmap)\n\nfrom CGNS.NAV.Q7QueryWindow import Ui_Q7QueryWindow\nfrom CGNS.NAV.Q7SelectionWindow import Ui_Q7SelectionWindow\nfrom CGNS.NAV.wfingerprint import Q7Window\nfrom CGNS.NAV.mquery import Q7QueryEntry\nfrom CGNS.NAV.mtree import (COLUMN_VALUE, COLUMN_DATATYPE,\n                            COLUMN_SIDS, COLUMN_NAME,\n                            HIDEVALUE)\nimport CGNS.NAV.wmessages as MSG\n\n(CELLCOMBO, CELLTEXT) = range(2)\nCELLEDITMODE = (CELLCOMBO, CELLTEXT)\n\n\n# -----------------------------------------------------------------\nclass Q7SelectionItemDelegate(QStyledItemDelegate):\n    def __init__(self, owner, model):\n        QStyledItemDelegate.__init__(self, owner._tb)\n        self._parent = owner\n        self._mode = CELLTEXT\n        self._model = model\n        self._lastCol = None\n\n    def createEditor(self, parent, option, index):\n        tnode = self._model.nodeFromPath(self._parent._data[index.row()])\n        if tnode.sidsIsCGNSTree():\n            return None\n        if tnode.sidsIsLink():\n            return None\n        if tnode.sidsIsLinkChild():\n            return None\n        ws = option.rect.width()\n        hs = option.rect.height() + 4\n        xs = option.rect.x()\n        ys = option.rect.y() - 2\n        if index.column() == 2:\n            self._lastCol = COLUMN_SIDS\n            if self._parent.cForce.checkState() != Qt.Checked:\n              self._mode = CELLTEXT\n              editor = QLineEdit(parent)\n              editor.transgeometry = (xs, ys, ws, hs)\n            else:\n              self._mode = CELLCOMBO\n              editor = QComboBox(parent)\n              editor.transgeometry = (xs, ys, ws, hs)\n              itemslist = tnode.sidsTypeList()\n              editor.addItems(itemslist)\n              try:\n                tix = itemslist.index(tnode.sidsType())\n              except ValueError:\n                editor.insertItem(0, tnode.sidsType())\n                tix = 0\n              editor.setCurrentIndex(tix)\n            editor.installEventFilter(self)\n            self.setEditorData(editor, index)\n            return editor\n        if index.column() == 3:\n            self._lastCol = COLUMN_DATATYPE\n            self._mode = CELLCOMBO\n            editor = QComboBox(parent)\n            editor.transgeometry = (xs, ys, ws, hs)\n            itemslist = tnode.sidsDataType(all=True)\n            editor.addItems(itemslist)\n            editor.setCurrentIndex(0)\n            editor.installEventFilter(self)\n            self.setEditorData(editor, index)\n            return editor\n        if index.column() == 4:\n            self._lastCol = COLUMN_VALUE\n            if tnode.hasValueView():\n                pt = tnode.sidsPath().split(\'/\')[1:]\n                lt = tnode.sidsTypePath()\n                fc = self._parent._control.userFunctionFromPath(pt, lt)\n                if fc is not None:\n                    en = fc.getEnumerate(pt, lt)\n                else:\n                    en = tnode.sidsValueEnum()\n                if en is None:\n                    self._mode = CELLTEXT\n                    editor = QLineEdit(parent)\n                    editor.transgeometry = (xs, ys, ws, hs)\n                else:\n                    self._mode = CELLCOMBO\n                    editor = QComboBox(parent)\n                    editor.transgeometry = (xs, ys, ws, hs)\n                    editor.addItems(en)\n                    try:\n                        tix = en.index(tnode.sidsValue().tostring().decode(\'ascii\'))\n                    except ValueError:\n                        editor.insertItem(0, tnode.sidsValue().tostring().decode(\'ascii\'))\n                        tix = 0\n                    editor.setCurrentIndex(tix)\n                editor.installEventFilter(self)\n                self.setEditorData(editor, index)\n                return editor\n        return None\n\n    def setEditorData(self, editor, index):\n        if self._mode == CELLTEXT:\n            value = index.data()\n            editor.clear()\n            editor.insert(value)\n        elif self._mode == CELLCOMBO:\n            value = index.data()\n            ix = editor.findText(value)\n            if ix != -1:\n                editor.setCurrentIndex(ix)\n        else:\n            pass\n\n    def setModelData(self, editor, model, index):\n        col = self._lastCol\n        if col is None:\n            return\n        value = None\n        nodelist = []\n        dt = self._parent._data\n        if self._mode == CELLCOMBO:\n            value = editor.currentText()\n        if self._mode == CELLTEXT:\n            value = editor.text()\n        if self._parent.setToAll():\n            reply = MSG.wQuestion(self._parent, 371, \'Apply changes to all...\',\n                                  """"""The same value is going to be set to all selected nodes,<br>\n                                     Do we continue and perform the modification on all selected?<br>\n                                     This may fail on some nodes if the data type is not the same\n                                     as the original node for example. In that case some of the\n                                     nodes would be modified but not the others, you would not\n                                     have any status on the actual result of the modification.<br>\n                                     """""")\n            if reply == MSG.OK:\n                for rw in self._parent.selectedRows():\n                    nd = self._model.nodeFromPath(dt[rw])\n                    nodelist.append((rw, nd))\n            else:\n                return\n        else:\n            nodelist.append((index.row(),\n                             self._model.nodeFromPath(dt[index.row()])))\n        if self._parent.cForce.checkState() != Qt.Checked:\n            noforce = True\n        else:\n            noforce = False\n        for ndr in nodelist:\n            nix = self._model.createIndex(ndr[0], col, ndr[1])\n            if noforce:\n                nix.internalPointer().setEditCheck(False)\n            self._model.setData(nix, value, role=Qt.EditRole)\n            self._parent.updateRowData(ndr[0], dt[ndr[0]])\n\n    def updateEditorGeometry(self, editor, option, index):\n        editor.setGeometry(*editor.transgeometry)\n\n\n# -----------------------------------------------------------------\nclass Q7SelectionList(Q7Window, Ui_Q7SelectionWindow):\n    def __init__(self, parent, model, fgindex):\n        Q7Window.__init__(self, Q7Window.VIEW_SELECT,\n                          parent._control, None, fgindex)\n        self.bClose.clicked.connect(self.reject)\n        self._parent = parent\n        self._model = model\n        self._data = model.getSelected()\n        self._tb = self.selectionTable\n        self.bSave.clicked.connect(self.selectionsave)\n        self.bInfo.clicked.connect(self.infoSelectView)\n        self.cShowPath.stateChanged.connect(self.colCheck)\n        self.cShowSIDS.stateChanged.connect(self.colCheck)\n        # QObject.connect(self.cShowPath,\n        #                SIGNAL(""stateChanged(int)""),self.colCheck)\n        # QObject.connect(self.cShowSIDS,\n        #                SIGNAL(""stateChanged(int)""),self.colCheck)\n        self.bFirst.clicked.connect(self.sClear)\n        self._tb.setItemDelegate(Q7SelectionItemDelegate(self, self.FG.model))\n        self.bRemoveToSelect.clicked.connect(self.sRemove)\n        self.bReverse.clicked.connect(self.sReverse)\n        self.bSelectAll.clicked.connect(self.sAll)\n        self.bUnselectAll.clicked.connect(self.sClear)\n\n    def doRelease(self):\n        pass\n\n    def colCheck(self):\n        if self.cShowPath.checkState() == Qt.Checked:\n            self._tb.showColumn(0)\n        else:\n            self._tb.hideColumn(0)\n        if self.cShowSIDS.checkState() == Qt.Checked:\n            self._tb.showColumn(2)\n        else:\n            self._tb.hideColumn(2)\n\n    def setToAll(self):\n        if self.cApplyToAll.checkState() == Qt.Checked:\n            return True\n        return False\n\n    def selectedRows(self):\n        ixl = self._tb.selectionModel().selection().indexes()\n        sr = set()\n        for ix in ixl:\n            sr.add(ix.row())\n        return list(sr)\n\n    def sRemove(self):\n        dsel = []\n        for r in self._tb.selectionModel().selectedRows():\n            dsel.append(self._data[r.row()])\n        for p in dsel:\n            self._data.remove(p)\n        self.reset()\n\n    def sReverse(self):\n        rall = set(range(self._tb.rowCount()))\n        rsel = set()\n        for r in self._tb.selectionModel().selectedRows():\n            rsel.add(r.row())\n        runs = rall.difference(rsel)\n        self._tb.clearSelection()\n        for r in runs:\n            self._tb.selectRow(r)\n\n    def sAll(self):\n        self._tb.selectAll()\n\n    def sClear(self):\n        self._tb.clearSelection()\n\n    def infoSelectView(self):\n        self._control.helpWindow(\'Selection\')\n\n    def show(self):\n        self.reset()\n        super(Q7SelectionList, self).show()\n        self.raise_()\n\n    def selectionsave(self):\n        n = \'data=[\\n\'\n        for path in self._data:\n            node = self._model.nodeFromPath(path)\n            t = node.data(COLUMN_SIDS)\n            d = node.data(COLUMN_DATATYPE)\n            v = node.sidsValue()\n            if isinstance(v, numpy.ndarray):\n                if v.dtype.char in [\'S\', \'c\']:\n                    s = \'""\' + v.tostring().decode(\'ascii\') + \'""\'\n                else:\n                    s = str(v.tolist())\n            else:\n                s = str(v)\n            n += \'(""%s"",""%s"",""%s"",%s),\\n\' % (path, t, d, s)\n        n += \']\\n\'\n        filename = QFileDialog.getSaveFileName(self,\n                                               ""Save selection list"", ""."", ""*.py"")\n        if filename[0] == """":\n            return\n        with open(str(filename[0]), \'w+\') as f:\n            f.write(n)\n\n    def deletelocal(self):\n        pass\n\n    def reset(self):\n        tlvcolsnames = [\'Path\', \'Name\', \'SIDS type\', \'DT\', \'Value\']\n        self._tb.clear()\n        self._tb.setColumnCount(len(tlvcolsnames))\n        self._tb.setRowCount(0)\n        lh = self._tb.horizontalHeader()\n        lv = self._tb.verticalHeader()\n        for i, colname in enumerate(tlvcolsnames):\n            hi = QTableWidgetItem(colname)\n            self._tb.setHorizontalHeaderItem(i, hi)\n        for path in self._data:\n            self._tb.setRowCount(self._tb.rowCount() + 1)\n            r = self._tb.rowCount() - 1\n            self.updateRowData(r, path)\n        self.colCheck()\n        self._tb.resizeColumnsToContents()\n        self._tb.resizeRowsToContents()\n        self._parent.treeview.refreshView()\n\n    def updateRowData(self, r, path):\n        it0 = QTableWidgetItem(\'%s \' % \'/\'.join(path.split(\'/\')[:-1]))\n        it0.setFont(QFont(""Courier""))\n        self._tb.setItem(r, 0, it0)\n        it1 = QTableWidgetItem(\'%s \' % path.split(\'/\')[-1])\n        it1.parent = self\n        ft = QFont(""Courier"")\n        ft.setWeight(QFont.Bold)\n        it1.setFont(ft)\n        self._tb.setItem(r, 1, it1)\n        node = self._model.nodeFromPath(path)\n        if node:\n            it1 = QTableWidgetItem(node.data(COLUMN_SIDS))\n            it1.parent = self\n            it2 = QTableWidgetItem(node.data(COLUMN_DATATYPE))\n            it2.parent = self\n            val = node.data(COLUMN_VALUE)\n            if val == HIDEVALUE:\n                val = QIcon(QPixmap("":/images/icons/data-array-large.png""))\n                it3 = QTableWidgetItem(val, \'\')\n            else:\n                it3 = QTableWidgetItem(val)\n                it3.setFont(QFont(""Courier""))\n            it3.parent = self\n            it1.setFont(QFont(""Courier""))\n            it2.setFont(QFont(""Courier""))\n            it3.setFont(QFont(""Courier""))\n            self._tb.setItem(r, 2, it1)\n            self._tb.setItem(r, 3, it2)\n            self._tb.setItem(r, 4, it3)\n\n    def reject(self):\n        self.close()\n\n\n# -----------------------------------------------------------------\nclass Q7Query(Q7Window, Ui_Q7QueryWindow):\n    _allQueries = {}\n\n    def __init__(self, control, fgindex, treeview):\n        Q7Window.__init__(self, Q7Window.VIEW_QUERY, control, \'/\', fgindex)\n        self.bClose.clicked.connect(self.reject)\n        self.bRun.clicked.connect(self.runCurrent)\n        self.bAdd.clicked.connect(self.queryAdd)\n        self.bDel.clicked.connect(self.queryDel)\n        self.bRevert.clicked.connect(self.queryRevert)\n        self.bCommitDoc.clicked.connect(self.queryCommit)\n        self.bRevertDoc.clicked.connect(self.queryRevert)\n        self.bSave.clicked.connect(self.queriesSave)\n        self.bSaveAsScript.clicked.connect(self.queryScriptSave)\n        self._master = treeview\n        #\n        self.cQueryName.currentIndexChanged.connect(self.changeCurrentQuery)\n        self.cQueryGroup.currentIndexChanged.connect(self.changeCurrentGroup)\n        #\n        # QObject.connect(self.cQueryName,\n        #                SIGNAL(""currentIndexChanged(int)""),\n        #                self.changeCurrentQuery)\n        # QObject.connect(self.cQueryGroup,\n        #                SIGNAL(""currentIndexChanged(int)""),\n        #                self.changeCurrentGroup)\n        self.cQueryName.editTextChanged.connect(self.checkNewQueryName)\n        #\n        self.eText.textChanged.connect(self.changeText)\n        self.eQueryDoc.textChanged.connect(self.changeText)\n        #\n        # QObject.connect(self.cQueryName,\n        #                SIGNAL(""editTextChanged()""),\n        #                self.checkNewQueryName)\n        # QObject.connect(self.cQueryName,\n        #                SIGNAL(""editTextChanged(QString)""),\n        #                self.checkNewQueryName)\n        # QObject.connect(self.eText,\n        #                SIGNAL(""textChanged()""),\n        #                self.changeText)\n        # QObject.connect(self.eQueryDoc,\n        #                SIGNAL(""textChanged()""),\n        #                self.changeText)\n        self.bInfo.clicked.connect(self.infoQueryView)\n        self.bAdd.setEnabled(False)\n        self.setCurrentQuery()\n        self._modified = False\n        self.showQuery()\n\n    def doRelease(self):\n        pass\n\n    def infoQueryView(self):\n        self._control.helpWindow(\'Query\')\n\n    def updateTreeStatus(self):\n        print(\'query up\')\n\n    def queriesSave(self):\n        self.queryCommit()\n        Q7Query.saveUserQueries()\n        self._modified = False\n\n    def queryScriptSave(self):\n        n = self.cQueryName.currentText()\n        q = self.getQuery(n)\n        c = self.eText.toPlainText()\n        v = self.eUserVariable.text()\n        f = ""%s/%s"" % (self.FG.filedir, self.FG.filename)\n        s = q.getFullScript(f, c, v)\n        filename = QFileDialog.getSaveFileName(self,\n                                               ""Save query script"", ""."", ""*.py"")\n        if filename[0] == """":\n            return\n        with open(str(filename[0]), \'w+\') as f:\n            f.write(s)\n        os.chmod(filename[0], 0o0750)\n        self._modified = False\n\n    def queryDel(self):\n        self._modified = True\n        q = self.cQueryName.currentText()\n        i = self.cQueryName.currentIndex()\n        reply = MSG.message(\'Delete query\',\n                            """"""Do you really want to delete query [%s]?"""""" % q,\n                            MSG.YESNO)\n        if reply == QMessageBox.Yes:\n            del Q7Query._allQueries[q]\n            self.cQueryName.removeItem(i)\n\n    def checkNewQueryName(self, *args):\n        qname = self.cQueryName.currentText().strip()\n        if qname not in Q7Query._allQueries:\n            self.bAdd.setEnabled(True)\n\n    def queryAdd(self):\n        self.bAdd.setEnabled(False)\n        qname = self.cQueryName.currentText().strip()\n        if qname in Q7Query._allQueries:\n            return\n        q = Q7QueryEntry(qname)\n        Q7Query._allQueries[qname] = q\n        self.queryCommit()\n        self.cQueryName.addItem(qname)\n\n    def queryCommit(self):\n        self._modified = True\n        q = self.cQueryName.currentText()\n        if q not in Q7Query._allQueries:\n            self.queryAdd()\n        com = self.eText.toPlainText()\n        doc = self.eQueryDoc.toPlainText()\n        if self.cRequireUpdate.checkState() == Qt.Checked:\n            self.setRequireTreeUpdate(True)\n        else:\n            self.setRequireTreeUpdate(False)\n        Q7Query._allQueries[q].setScript(com)\n        Q7Query._allQueries[q].setDoc(doc)\n        self.bRevert.setEnabled(False)\n        self.bCommitDoc.setEnabled(False)\n        self.bRevertDoc.setEnabled(False)\n\n    def queryRevert(self):\n        self.showQuery()\n\n    def reject(self):\n        reply = True\n        if self._modified:\n            reply = MSG.wQuestion(self._control, 370, \'Leave query panel\',\n                                  """"""There are unsaved modified queries,\n  leave this panel without save?"""""", again=False)\n        if not reply:\n            return\n        else:\n            self._modified = False\n        if self._master._querywindow is not None:\n            self._master._querywindow = None\n        self.close()\n\n    def reset(self):\n        gq = set()\n        for qn in self.queriesNamesList():\n            self.cQueryName.addItem(qn)\n            gq.add(Q7Query._allQueries[qn].group)\n        self.cQueryGroup.addItem(\'*\')\n        for gqn in gq:\n            self.cQueryGroup.addItem(gqn)\n\n    def showQuery(self, name=None):\n        pstate = self._modified\n        if name is None:\n            name = self.getCurrentQuery().name\n        if name in Q7Query.queriesNamesList():\n            txt = self.getCurrentQuery().script\n            self.eText.initText(txt)\n            doc = self.getCurrentQuery().doc\n            self.eQueryDoc.initText(doc)\n        if self.getCurrentQuery().requireTreeUpdate():\n            self.cRequireUpdate.setCheckState(Qt.Checked)\n        else:\n            self.cRequireUpdate.setCheckState(Qt.Unchecked)\n        self.bRevert.setEnabled(False)\n        self.bCommitDoc.setEnabled(False)\n        self.bRevertDoc.setEnabled(False)\n        self._modified = pstate\n\n    def show(self):\n        self.reset()\n        super(Q7Query, self).show()\n\n    def runCurrent(self):\n        com = self.eText.toPlainText()\n        v = self.eUserVariable.text()\n        q = Q7QueryEntry(\'__tmp__query__\')\n        q.setScript(com)\n        skp = list(self.FG.lazy)\n        r = q.run(self.FG.tree, self.FG.links, skp, False, v,\n                  self.FG.model.getSelected())\n        self.eResult.initText(str(r))\n        self.FG.model.markExtendToList(r)\n        self.FG.model.updateSelected()\n        if q.requireTreeUpdate():\n            self.FG.model.modelReset()\n\n        self._master.treeview.refreshView()\n\n    @classmethod\n    def fillQueries(cls):\n        allqueriestext = Q7Query._userQueriesText + OCTXT._UsualQueries\n        Q7Query._defaultQueriesNames = [n[0] for n in OCTXT._UsualQueries]\n        for qe in allqueriestext:\n            try:\n                q = Q7QueryEntry(qe[0], qe[1], qe[2], qe[3],\n                                 hasargs=qe[5], update=qe[4])\n                Q7Query._allQueries[qe[0]] = q\n            except IndexError:\n                pass\n\n    @classmethod\n    def getQuery(cls, name):\n        if name in Q7Query.queriesNamesList():\n            return Q7Query._allQueries[name]\n        return None\n\n    @classmethod\n    def loadUserFunctions(cls):\n        try:\n            Q7Query._userFunction = OCTXT._readFunctions(cls)()\n        except:\n            Q7Query._userFunction = None\n\n    @classmethod\n    def loadUserQueries(cls):\n        Q7Query._userQueriesText = OCTXT._readQueries(cls)\n        if Q7Query._userQueriesText is None:\n            Q7Query._userQueriesText = []\n        return Q7Query._userQueriesText\n\n    @classmethod\n    def saveUserQueries(cls):\n        ql = []\n        for q in Q7Query._allQueries:\n            if q not in Q7Query._defaultQueriesNames:\n                ql += [str(Q7Query._allQueries[q])]\n        OCTXT._writeQueries(cls, ql)\n\n    @classmethod\n    def queriesNamesList(cls):\n        k = list(Q7Query._allQueries)\n        k.sort()\n        return k\n\n    @classmethod\n    def queriesGroupsList(cls):\n        gl = set()\n        for q in Q7Query._allQueries:\n            g = Q7Query._allQueries[q].group\n            gl.add(g)\n        return [\'*\'] + list(gl)\n\n    def getCurrentQuery(self):\n        return self._currentQuery\n\n    def changeCurrentGroup(self):\n        group = self.cQueryGroup.currentText()\n        self.cQueryName.clear()\n        for qn in self.queriesNamesList():\n            gp = Q7Query._allQueries[qn].group\n            if (group == \'*\') or (gp == group):\n                self.cQueryName.addItem(qn)\n        self.showQuery()\n\n    def changeCurrentQuery(self, *args):\n        name = self.cQueryName.currentText()\n        if name not in self.queriesNamesList():\n            return\n        self.setCurrentQuery(name)\n        self.showQuery()\n\n    def setCurrentQuery(self, name=None):\n        if name is None:\n            name = self.queriesNamesList()[0]\n        self._currentQuery = Q7Query._allQueries[name]\n\n    def changeText(self):\n        self.bRevert.setEnabled(True)\n        self.bCommitDoc.setEnabled(True)\n        self.bRevertDoc.setEnabled(True)\n        self._modified = True\n\n    @classmethod\n    def queries(cls):\n        return Q7Query.queriesNamesList()\n\n# -----------------------------------------------------------------\n'"
CGNS/NAV/wstylesheets.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\ncolordict = {\'high\': \'#7ebaff\', \'low\': \'#78b5e9\', \'high2\': \'#bad5f4\', \'low2\': \'#bad5ff\'}\n\nQ7CONTROLVIEWSTYLESHEET = """"""\n QTableView {\n show-decoration-selected: 1;\n }\n\n QTableView::item:selected {\n background:qlineargradient(x1:0,y1:0,x2:0,y2:1,stop:0 %(high)s,stop:1 %(low)s);\n color:black;\n border: 1px solid #bfcde4;\n }\n\n QTableView::item\n {\n border: 0px;\n padding: 0px;\n }\n"""""" % colordict\n\nQ7TABLEVIEWSTYLESHEET = """"""\n Q7TableView {\n show-decoration-selected: 1;\n }\n\n Q7TableView::item:selected\n {\n  border: 1px solid %(high)s;\n  font: bold;\n }\n\n Q7TableView::item\n {\n  border: 0px;\n  padding: 0px;\n  font: fixed 8;\n }\n"""""" % colordict\n\nQ7TREEVIEWSTYLESHEET = """"""\n QTreeView {\n show-decoration-selected: 1;\n }\n\n QTreeView::branch {\n background: palette(base);\n }\n\n QTreeView::item [diffNA=""true""] { background-color: yellow }\n\n QTreeView::item {\n border: 1px solid #d9d9d9;\n border-top-color: transparent;\n border-bottom-color: transparent;\n text-align:right;\n color:black;\n }\n\n QTreeView::item:selected {\n border: 1px solid #567dbc;\n }\n\n QTreeView::item:selected:active{\n background:qlineargradient(x1:0,y1:0,x2:0,y2:1,stop:0 %(high)s,stop:1 %(low)s);\n }\n\n QTreeView::item:selected:!active {\n background:qlineargradient(x1:0,y1:0,x2:0,y2:1,stop:0 %(high)s,stop:1 %(low)s);\n }\n\n QTreeView::branch:has-siblings:!adjoins-item {\n border-image: url(:/images/icons/vline.png) 0;\n }\n\n QTreeView::branch:has-siblings:adjoins-item {\n border-image: url(:/images/icons/branch-more.png) 0;\n }\n\n QTreeView::branch:!has-children:!has-siblings:adjoins-item {\n border-image: url(:/images/icons/branch-end.png) 0;\n }\n\n QTreeView::branch:closed:has-children:has-siblings {\n border-image: url(:/images/icons/branch-more-p.png) 0;\n }\n\n QTreeView::branch:has-children:!has-siblings:closed {\n border-image: url(:/images/icons/branch-end-p.png) 0;\n }\n\n QTreeView::branch:open:has-children:has-siblings {\n background: magenta;\n }\n\n QTreeView::branch:open:has-children:!has-siblings {\n border-image: url(:/images/icons/branch-end.png) 0;\n }\n\n"""""" % colordict\n\n# -----------------------------------------------------------------\n'"
CGNS/NAV/wtools.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS.NAV - Python package for CFD General Notation System - NAVigater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nfrom builtins import (str, bytes, range, dict)\n\nfrom CGNS.pyCGNSconfig import HAS_PY2\n\nfrom qtpy.QtCore import Qt\nfrom qtpy.QtWidgets import QButtonGroup\nfrom qtpy.QtGui import (QColor, QPalette)\n\nfrom CGNS.NAV.wfingerprint import Q7FingerPrint\nfrom CGNS.NAV.Q7ToolsWindow import Ui_Q7ToolsWindow\nfrom CGNS.NAV.wfingerprint import Q7Window\nfrom CGNS.NAV.wquery import Q7Query, Q7SelectionList\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\nfrom CGNS.NAV.diff import diffAB\nfrom CGNS.NAV.merge import mergeAB\nfrom CGNS.NAV.mmergetreeview import (Q7TreeMergeModel, TAG_FRONT, TAG_BACK)\nfrom CGNS.NAV.wtree import Q7Tree\nfrom CGNS.NAV.wdifftreeview import Q7Diff\nfrom CGNS.NAV.wmergetreeview import Q7Merge\nfrom CGNS.NAV.mquery import Q7QueryEntry\n\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnskeywords as CGK\n\n\n# -----------------------------------------------------------------\nclass Q7Criteria(object):\n    def __init__(self):\n        self.name = \'\'\n        self.sidstype = \'\'\n        self.value = \'\'\n        self.shape = \'\'\n        self.rgx_name = False\n        self.not_name = False\n        self.rgx_sids = False\n        self.not_sids = False\n\n\n# -----------------------------------------------------------------\nclass Q7ToolsView(Q7Window, Ui_Q7ToolsWindow):\n    def __init__(self, parent, fgprint, master):\n        Q7Window.__init__(self, Q7Window.VIEW_TOOLS, parent, None, None)\n        self.bClose.clicked.connect(self.reject)\n        self.bInfo.clicked.connect(self.infoToolsView)\n        self.bDiff.clicked.connect(self.diffAB)\n        self.bMerge.clicked.connect(self.mergeAB)\n        self._master = master\n        self._fgprint = fgprint\n        self._model = fgprint.model\n        self._treeview = master.treeview\n        self.cGroup.currentIndexChanged.connect(self.fillqueries)\n        if HAS_PY2:\n            self.cQuery.currentTextChanged[unicode].connect(self.checkquery)\n        else:\n            self.cQuery.currentTextChanged[str].connect(self.checkquery)\n        # QObject.connect(self.cGroup,\n        #                SIGNAL(""currentIndexChanged(int)""),\n        #                self.fillqueries)\n        # QObject.connect(self.cQuery,\n        #                SIGNAL(""valueChanged(int)""),\n        #                self.checkquery)\n        qlist = Q7Query.queriesNamesList()\n        qlist.sort()\n        for q in qlist:\n            self.cQuery.addItem(q)\n        gqlist = Q7Query.queriesGroupsList()\n        for gq in gqlist:\n            self.cGroup.addItem(gq)\n        # ix=-1#self.cQuery.findText()self.querymodel.getCurrentQuery())\n        # if (ix!=-1): self.cQuery.setCurrentIndex(ix)\n        self.bApply.clicked.connect(self.applyquery)\n        pal = self.bApplyBox.palette()\n        pal.setColor(QPalette.WindowText, QColor(\'red\'))\n        self.bApplyBox.setPalette(pal)\n        self.lockable(self.bApply)\n        self.bOperateDoc.clicked.connect(self.querydoc)\n        self.bRunSearch.clicked.connect(self.runsearch)\n        if self._control.query is not None:\n            ix = self.cQuery.findText(self._control.query,\n                                      flags=Qt.MatchStartsWith)\n            if ix != -1:\n                self.cQuery.setCurrentIndex(ix)\n            self.applyquery()\n            self.selectionlist()\n        self.sLevel.valueChanged[int].connect(self.updateCriteria)\n        if HAS_PY2:\n            self.cSIDStype.editTextChanged[unicode].connect(self.updateSIDStypeEntry)\n        else:\n            self.cSIDStype.editTextChanged[str].connect(self.updateSIDStypeEntry)\n        # QObject.connect(self.sLevel,\n        #                SIGNAL(""valueChanged(int)""),\n        #                self.updateCriteria)\n        # QObject.connect(self.cSIDStype,\n        #                SIGNAL(""editTextChanged(QString)""),\n        #                self.updateSIDStypeEntry)\n        self.criteria = []\n        for l in range(3):\n            self.criteria.append(Q7Criteria())\n            self.criteria[-1].name = \'\'\n            self.criteria[-1].sidstype = \'\'\n            self.criteria[-1].value = \'\'\n            self.criteria[-1].shape = \'\'\n            self.criteria[-1].rgx_name = False\n            self.criteria[-1].not_name = False\n            self.criteria[-1].rgx_sids = False\n            self.criteria[-1].not_sids = False\n        self.criteria[0].title = \'Ancestor criteria\'\n        self.criteria[1].title = \'Current node criteria\'\n        self.criteria[2].title = \'Children criteria\'\n        self.previousLevel = 1\n        self.cSIDStype.addItems([\'\'] + CGK.cgnstypes)\n        self.cDataType.addItems([\'\'] + list(CGK.adftypes))\n        self.updateCriteria()\n\n    def updateSIDStypeEntry(self):\n        print(self.cSIDStype.currentText())\n\n    def updateCriteria(self):\n        l = self.sLevel.value()\n        p = self.previousLevel\n        self.criteria[p].name = self.eName.text()\n        self.criteria[p].sidstype = self.cSIDStype.currentText()\n        self.criteria[p].rgx_name = self.cRegexpName.isChecked()\n        self.criteria[p].not_name = self.cNotName.isChecked()\n        self.criteria[p].rgx_sids = self.cRegexpSIDStype.isChecked()\n        self.criteria[p].not_sids = self.cNotSIDStype.isChecked()\n        self.eName.setText(self.criteria[l].name)\n        st = self.criteria[l].sidstype\n        self.cSIDStype.setCurrentIndex(self.cSIDStype.findText(st))\n        self.cRegexpName.setChecked(self.criteria[l].rgx_name)\n        self.cNotName.setChecked(self.criteria[l].not_name)\n        self.cRegexpSIDStype.setChecked(self.criteria[l].rgx_sids)\n        self.cNotSIDStype.setChecked(self.criteria[l].not_sids)\n        self.previousLevel = l\n        self.gCriteria.setTitle(self.criteria[l].title)\n\n    def model(self):\n        return self._fgprint.model\n\n    def checkquery(self):\n        q = self.cQuery.currentText()\n        if (Q7Query.getQuery(q) is not None and\n                Q7Query.getQuery(q).hasArgs):\n            self.eUserVariable.setEnabled(True)\n        else:\n            self.eUserVariable.setEnabled(False)\n\n    def fillqueries(self):\n        g = self.cGroup.currentText()\n        self.cQuery.clear()\n        for qn in Q7Query.queriesNamesList():\n            if (g == \'*\') or (Q7Query.getQuery(qn).group == g):\n                self.cQuery.addItem(qn)\n\n    def querydoc(self):\n        q = self.cQuery.currentText()\n        if q in Q7Query.queriesNamesList():\n            doc = Q7Query.getQuery(q).doc\n            self._control.helpWindowDoc(doc)\n\n    def runsearch(self):\n        self.updateCriteria()\n        s = ""n1=True\\nn2=True\\nn3=True\\n""\n        s += ""t1=True\\nt2=True\\nt3=True\\n""\n        if self.criteria[0].name:\n            if self.criteria[0].rgx_name:\n                s += ""n1=(CGU.stringNameMatches(PARENT,\'%s\'))\\n"" % \\\n                     self.criteria[0].name\n            else:\n                s += ""n1=(PARENT[0]==\'%s\')\\n"" % self.criteria[0].name\n            if self.criteria[0].not_name:\n                s += ""n1=not n1\\n""\n        if self.criteria[1].name:\n            if self.criteria[1].rgx_name:\n                s += ""n2=(CGU.stringMatches(NAME,\'%s\'))\\n"" % self.criteria[1].name\n            else:\n                s += ""n2=(NAME==\'%s\')\\n"" % self.criteria[1].name\n            if self.criteria[1].not_name:\n                s += ""n2=not n2\\n""\n        if self.criteria[2].name:\n            if self.criteria[1].rgx_name:\n                s += ""for cn in CGU.childrenNames(NODE):\\n  n3=n3 or (\'%s\'==cn[0])\\n"" % self.criteria[2].name\n            else:\n                s += ""n3=(\'%s\' in CGU.childrenNames(NODE))\\n"" % self.criteria[2].name\n        s += ""rn=n1 and n2 and n3\\n""\n        if self.criteria[0].sidstype:\n            if self.criteria[0].rgx_sids:\n                s += ""t1=(CGU.stringTypeMatches(PARENT,\'%s\'))\\n"" % \\\n                     self.criteria[0].sidstype\n            else:\n                s += ""t1=(PARENT[3]==\'%s\')\\n"" % self.criteria[0].sidstype\n            if self.criteria[0].not_sids:\n                s += ""t1=not t1\\n""\n        if self.criteria[1].sidstype:\n            if self.criteria[1].rgx_sids:\n                s += ""t2=(CGU.stringTypeMatches(NAME,\'%s\'))\\n"" % \\\n                     self.criteria[1].sidstype\n            else:\n                s += ""t2=(SIDSTYPE==\'%s\')\\n"" % self.criteria[1].sidstype\n            if self.criteria[1].not_sids:\n                s += ""t2=not t2\\n""\n        if self.criteria[2].sidstype:\n            if self.criteria[1].rgx_sids:\n                s += ""t3=False\\nfor cn in CHILDREN:\\n  t3=t3 or (CGU.stringTypeMatches(\'%s,cn))\\n"" % self.criteria[\n                    2].sidstype\n            else:\n                s += ""t3=False\\nfor cn in CHILDREN:\\n  t3=t3 or (\'%s\'==cn[3])\\n"" % self.criteria[2].sidstype\n        s += ""rt=t1 and t2 and t3\\n""\n        s += ""RESULT=rn and rt\\n""\n        q = Q7QueryEntry(\'TMP\', script=s)\n        skp = list(self._fgprint.lazy)\n        sl = q.run(self._fgprint.tree, self._fgprint.links, skp, False, \'\',\n                   self._model.getSelected())\n        self._model.markExtendToList(sl)\n        self._model.updateSelected()\n        self._treeview.refreshView()\n\n    def applyquery(self):\n        q = self.cQuery.currentText()\n        v = self.eUserVariable.text()\n        if q in [\'\', \' \']:\n            self.unmarkall()\n            return\n        qry = Q7Query\n        if q in qry.queriesNamesList():\n            sl = qry.getQuery(q).run(self._fgprint.tree, self._fgprint.links,\n                                     list(self._fgprint.lazy),\n                                     False, v, self.model().getSelected())\n            self.model().markExtendToList(sl)\n            self.model().updateSelected()\n            if qry.getQuery(q).requireTreeUpdate():\n                self.model().modelReset()\n        self._treeview.refreshView()\n\n    def reset(self):\n        self.cAncestor.clear()\n        self.cVersionA.clear()\n        r = self._fgprint.getUniqueTreeViewIdList()\n        for i in r:\n            self.cAncestor.addItem(\'%.3d\' % i)\n            self.cVersionA.addItem(\'%.3d\' % i)\n        for i in r:\n            self.cTreeA.addItem(\'%.3d\' % i)\n            self.cTreeB.addItem(\'%.3d\' % i)\n            self.cTreeAncestor.addItem(\'%.3d\' % i)\n        self.gForce = QButtonGroup()\n        self.gForce.addButton(self.rForceA)\n        self.gForce.addButton(self.rForceB)\n        self.gForce.addButton(self.rForceNone)\n        self.rForceNone.setChecked(True)\n        self.gAncestor = QButtonGroup()\n        self.gAncestor.addButton(self.rAncestorA)\n        self.gAncestor.addButton(self.rAncestorB)\n        self.gAncestor.addButton(self.rAncestor)\n        self.rAncestor.setChecked(True)\n        self.ePrefixA.setText(\'%sA%s\' % (TAG_FRONT, TAG_BACK))\n        self.ePrefixB.setText(\'%sB%s\' % (TAG_FRONT, TAG_BACK))\n\n    def infoToolsView(self):\n        self._control.helpWindow(\'Tools\')\n\n    def show(self):\n        self.reset()\n        super(Q7ToolsView, self).show()\n\n    def diffAB(self):\n        idx_a = int(self.cAncestor.currentText())\n        idx_b = int(self.cVersionA.currentText())\n        fpa = self._fgprint.getFingerPrint(idx_a)\n        fpb = self._fgprint.getFingerPrint(idx_b)\n        diag = {}\n        diffAB(fpa.tree, fpb.tree, \'\', \'A\', diag, False)\n        dw = Q7Diff(self._control, fpa.index, fpb.index, diag)\n        dw.show()\n\n    def mergeAB(self):\n        idx_a = int(self.cTreeA.currentText())\n        idx_b = int(self.cTreeB.currentText())\n        fpa = self._fgprint.getFingerPrint(idx_a)\n        fpb = self._fgprint.getFingerPrint(idx_b)\n        pfx_a = self.ePrefixA.text()\n        pfx_b = self.ePrefixB.text()\n        tree = CGL.newCGNSTree()\n        tc = fpa.control.newtreecount\n        fpc = Q7FingerPrint(fpa.control, \'.\', \'new#%.3d.hdf\' % tc, tree, [], [])\n        Q7TreeMergeModel(fpc)\n        self.merge = Q7Tree(fpa.control, \'/\', fpc)\n        fpc._status = [Q7FingerPrint.STATUS_MODIFIED]\n        fpa.control.newtreecount += 1\n        diag = {}\n        diffAB(fpa.tree, fpb.tree, \'\', \'A\', diag, False)\n        fpc.tree = mergeAB(fpa.tree, fpb.tree, fpc.tree, \'C\', diag, pfx_a, pfx_b)\n        fpc.model.modelReset()\n        dw = Q7Merge(self._control, fpc, diag)\n        dw.show()\n        self.merge.hide()\n\n    def reject(self):\n        if self.merge is not None:\n            self.merge.show()\n            self.merge = None\n        if self._master._control._toolswindow is not None:\n            self._master._control._toolswindow = None\n\n    def closeEvent(self, event):\n        self.reject()\n        event.accept()\n\n# -----------------------------------------------------------------\n'"
CGNS/NAV/wtree.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\nimport sys\nimport gc\nimport functools\n\nimport CGNS.PAT.cgnskeywords as CGK\nimport CGNS.PAT.cgnsutils    as CGU\nimport CGNS.PAT.SIDS         as CGS\n\nfrom qtpy.QtCore import Qt, QModelIndex\nfrom qtpy.QtWidgets import (QStyledItemDelegate, QLineEdit, QComboBox, QSizePolicy,\n                            QStyleOptionViewItem, QMenu, QAction)\nfrom qtpy.QtGui import (QFont, QPalette, QScreen)\n\nfrom CGNS.pyCGNSconfig import HAS_VTK\n\nfrom CGNS.NAV.Q7TreeWindow import Ui_Q7TreeWindow\nfrom CGNS.NAV.wform import Q7Form\nfrom CGNS.NAV.wpattern import Q7PatternList\nfrom CGNS.NAV.wquery import Q7Query, Q7SelectionList\nfrom CGNS.NAV.wdiag import Q7CheckList\nfrom CGNS.NAV.wlink import Q7LinkList\nfrom CGNS.NAV.mtree import (Q7TreeModel, Q7TreeItem)\nfrom CGNS.NAV.wfingerprint import Q7Window, Q7FingerPrint\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nimport CGNS.NAV.mtree as NMT\nimport CGNS.NAV.wmessages as MSG\n\n(CELLCOMBO, CELLTEXT) = range(2)\nCELLEDITMODE = (CELLCOMBO, CELLTEXT)\n\n\n# -----------------------------------------------------------------\nclass Q7TreeItemDelegate(QStyledItemDelegate):\n    def __init__(self, wtree, model):\n        QStyledItemDelegate.__init__(self, wtree)\n        self._parent = wtree\n        self._mode = CELLTEXT\n        self._model = model\n\n    def createEditor(self, parent, option, index):\n        if (self._parent.isLocked()): return None\n        if (index.internalPointer().sidsIsCGNSTree()): return None\n        if (index.internalPointer().sidsIsLink()): return None\n        if (index.internalPointer().sidsIsLinkChild()): return None\n        ws = option.rect.width()\n        hs = option.rect.height() + 4\n        xs = option.rect.x()\n        ys = option.rect.y() - 2\n        if (not index.internalPointer().hasEditCheck() or\n                (index.column() in [NMT.COLUMN_NAME])):\n            self._mode = CELLTEXT\n            editor = QLineEdit(parent)\n            editor.transgeometry = (xs, ys, ws, hs)\n            editor.installEventFilter(self)\n            self.setEditorData(editor, index)\n            return editor\n        if index.column() in [NMT.COLUMN_VALUE]:\n            node = self._parent.modelData(index)\n            if node.hasValueView():\n                pt = node.sidsPath().split(\'/\')[1:]\n                lt = node.sidsTypePath()\n                fc = self._parent._control._control.userFunctionFromPath(pt, lt)\n                if (fc is not None):\n                    en = fc.getEnumerate(pt, lt)\n                else:\n                    en = node.sidsValueEnum()\n                if (en is None):\n                    self._mode = CELLTEXT\n                    editor = QLineEdit(parent)\n                    editor.transgeometry = (xs, ys, ws, hs)\n                else:\n                    self._mode = CELLCOMBO\n                    editor = QComboBox(parent)\n                    editor.transgeometry = (xs, ys, ws, hs)\n                    editor.addItems(en)\n                    try:\n                        tix = en.index(node.sidsValue().tostring().decode(\'ascii\'))\n                    except ValueError:\n                        editor.insertItem(0, node.sidsValue().tostring().decode(\'ascii\'))\n                        tix = 0\n                    editor.setCurrentIndex(tix)\n                editor.installEventFilter(self)\n                self.setEditorData(editor, index)\n                return editor\n        if (index.column() == NMT.COLUMN_SIDS):\n            self._mode = CELLCOMBO\n            editor = QComboBox(parent)\n            editor.transgeometry = (xs, ys, ws, hs)\n            tnode = self._parent.modelData(index)\n            itemslist = tnode.sidsTypeList()\n            editor.addItems(itemslist)\n            try:\n                tix = itemslist.index(tnode.sidsType())\n            except ValueError:\n                editor.insertItem(0, tnode.sidsType())\n                tix = 0\n            editor.setCurrentIndex(tix)\n            editor.installEventFilter(self)\n            self.setEditorData(editor, index)\n            return editor\n        if (index.column() == NMT.COLUMN_DATATYPE):\n            self._mode = CELLCOMBO\n            editor = QComboBox(parent)\n            editor.transgeometry = (xs, ys, ws, hs)\n            editor.setProperty(""Q7SIDSDataTypeComboBox"", ""True"")\n            itemslist = self._parent.modelData(index).sidsDataType(all=True)\n            editor.addItems(itemslist)\n            editor.installEventFilter(self)\n            sizePolicy = QSizePolicy(QSizePolicy.Minimum,QSizePolicy.Minimum)\n            editor.setSizePolicy(sizePolicy)\n            self.setEditorData(editor, index)\n            return editor\n        return None\n\n    def setEditorData(self, editor, index):\n        if (self._mode == CELLTEXT):\n            value = index.data()\n            editor.clear()\n            editor.insert(value)\n        elif (self._mode == CELLCOMBO):\n            value = index.data()\n            ix = editor.findText(value)\n            print(\'VALUE\',value,ix)\n            if (ix != -1): editor.setCurrentIndex(ix)\n        else:\n            pass\n\n    def setModelData(self, editor, model, index):\n        value = None\n        if (self._mode == CELLCOMBO):\n            value = editor.currentText()\n        if (self._mode == CELLTEXT):\n            value = editor.text()\n        pth = self._parent.modelData(index).sidsPath()\n        model.setData(index, value, role=Qt.EditRole)\n        node = index.internalPointer().lastEdited()\n        if (node is not None):\n            nindex = self._parent.model().indexByPath(node.sidsPath())\n            self._parent.setLastEntered(nindex)\n        if (self._parent._control._selectwindow is not None):\n            self._parent._control._selectwindow.reset()\n\n    def updateEditorGeometry(self, editor, option, index):\n        editor.setGeometry(*editor.transgeometry)\n\n    def paint(self, painter, option, index):\n        if (self._parent.modelIndex(index).column() == NMT.COLUMN_NAME):\n            if (self._parent.modelData(index).sidsName()\n                not in OCTXT._ReservedNames):\n                option.font.setWeight(QFont.Bold)\n            uf = self._parent.modelData(index).userState()\n            if (uf in NMT.USERSTATES):\n                if (self._model.hasUserColor(uf)):\n                    cl = self._model.getUserColor(uf)\n                    option.palette.brush(QPalette.Text).setColor(cl)\n            QStyledItemDelegate.paint(self, painter, option, index)\n            option.font.setWeight(QFont.Light)\n        elif (index.column() in [NMT.COLUMN_VALUE, NMT.COLUMN_DATATYPE]):\n            option.font.setFamily(OCTXT.Table_Family)\n            if (index.column() == NMT.COLUMN_DATATYPE):\n                # option.font.setPointSize(8)\n                pass\n            QStyledItemDelegate.paint(self, painter, option, index)\n        elif (index.column() in NMT.COLUMN_FLAGS):\n            option.decorationPosition = QStyleOptionViewItem.Top\n            QStyledItemDelegate.paint(self, painter, option, index)\n            option.decorationPosition = QStyleOptionViewItem.Left\n        else:\n            QStyledItemDelegate.paint(self, painter, option, index)\n\n    def doRelease(self):\n        self._model = None\n\n\n# -----------------------------------------------------------------\nclass Q7Tree(Q7Window, Ui_Q7TreeWindow):\n    def __init__(self, control, path, fgprintindex):\n        Q7Window.__init__(self, Q7Window.VIEW_TREE, control, path, fgprintindex)\n        self._depthExpanded = 0\n        self._lastEntered = None\n        self.lastdiag = None\n        self._linkwindow = None\n        self._querywindow = None\n        self._vtkwindow = None\n        self._selectwindow = None\n        self._column = {NMT.COLUMN_SIDS: OCTXT.ShowSIDSColumn,\n                        NMT.COLUMN_FLAG_LINK: OCTXT.ShowLinkColumn,\n                        NMT.COLUMN_FLAG_SELECT: OCTXT.ShowSelectColumn,\n                        NMT.COLUMN_FLAG_CHECK: OCTXT.ShowCheckColumn,\n                        NMT.COLUMN_FLAG_USER: OCTXT.ShowUserColumn,\n                        NMT.COLUMN_SHAPE: OCTXT.ShowShapeColumn,\n                        NMT.COLUMN_DATATYPE: OCTXT.ShowDataTypeColumn}\n        self.selectForLinkSrc = None  # one link source per tree view allowed\n\n        #self.treeview.expanded[QModelIndex].connect(self.expandNode)\n        self.treeview.collapsed.connect(self.collapseNode)\n        self.treeview.pressed[QModelIndex].connect(self.clickedPressedNode)\n        self.treeview.customContextMenuRequested.connect(self.clickedNode)\n\n        # QObject.connect(self.treeview,\n        #                SIGNAL(""expanded(QModelIndex)""),\n        #                self.expandNode)\n        # QObject.connect(self.treeview,\n        #                SIGNAL(""collapsed()""),\n        #                self.collapseNode)\n        # QObject.connect(self.treeview,\n        #                SIGNAL(""pressed(QModelIndex)""),\n        #                self.clickedPressedNode)\n        # QObject.connect(self.treeview,\n        #                SIGNAL(""customContextMenuRequested(QPoint)""),\n        #                self.clickedNode)\n\n        self.bSave.clicked.connect(self.savetree)\n        self.lockable(self.bSave)\n        self.bQueryView.clicked.connect(self.queryview)\n        self.lockable(self.bQueryView)\n        self.bSaveAs.clicked.connect(self.savetreeas)\n        self.lockable(self.bSaveAs)\n        self.bInfo.clicked.connect(self.infoTreeView)\n        self.bZoomIn.clicked.connect(self.expandLevel)\n        self.bZoomOut.clicked.connect(self.collapseLevel)\n        self.bZoomAll.clicked.connect(self.expandMinMax)\n        self.bFormView.clicked.connect(self.formview)\n        self.bMarkAll.clicked.connect(self.markall)\n        self.bUnmarkAll_1.clicked.connect(self.unmarkall)\n        self.bUnmarkAll_2.clicked.connect(self.unmarkall)\n        self.bPreviousMark.clicked.connect(self.previousmark)\n        self.bNextMark.clicked.connect(self.nextmark)\n        self.bSwapMarks.clicked.connect(self.swapmarks)\n        self.bMarksAsList.clicked.connect(self.selectionlist)\n        self.bVTKView.clicked.connect(self.vtkview)\n        self.lockable(self.bVTKView)\n        self.bScreenShot.clicked.connect(self.screenshot)\n        self.bCheck.clicked.connect(self.check)\n        self.bCheckList.clicked.connect(self.checklist)\n        self.bClearChecks.clicked.connect(self.clearchecks)\n        self.bLinkView.clicked.connect(self.linklist)\n        self.bPatternView.clicked.connect(self.patternlist)\n        self.bToolsView.clicked.connect(self.tools)\n        self.setContextMenuPolicy(Qt.CustomContextMenu)\n        self.popupmenu = QMenu()\n        self.diagview = None\n        lmodel = self.FG.model\n        self.treeview.setModel(lmodel)\n        self.treeview.setItemDelegate(Q7TreeItemDelegate(self.treeview, lmodel))\n        self.treeview.setControlWindow(self, self.FG.index)\n        if (self._control.transientRecurse or OCTXT.RecursiveTreeDisplay):\n            self.expandMinMax()\n        if (self._control.transientVTK): self.vtkview()\n        self._control.transientRecurse = False\n        self._control.transientVTK = False\n        self.clearchecks()\n        #\n        self.bCheckList.setDisabled(True)\n        if (not OCTXT._HasProPackage):\n            self.bToolsView.setDisabled(True)\n        self.bCheckView.setDisabled(True)\n        self.bPatternDB.setDisabled(True)\n        self.bAddLink.clicked.connect(self.linkadd)\n        self.bSelectLinkSrc.clicked.connect(self.linkselectsrc)\n        self.bSelectLinkDst.clicked.connect(self.linkselectdst)\n        self.bAddLink.setDisabled(True)\n        self.lineEdit.returnPressed.connect(self.jumpToNode)\n        # QObject.connect(self.lineEdit,\n        #                SIGNAL(""returnPressed()""),\n        #                self.jumpToNode)\n        tvh = self.treeview.header()\n        tvh.setContextMenuPolicy(Qt.CustomContextMenu)\n        tvh.customContextMenuRequested.connect(self.headerMenu)\n        self._hmenu = QMenu()\n        self._hmenu._idx = {}\n        self._tlist = ((\'SIDS type\', NMT.COLUMN_SIDS),\n                       (\'Link flag\', NMT.COLUMN_FLAG_LINK),\n                       (\'Mark flag\', NMT.COLUMN_FLAG_SELECT),\n                       (\'Check flag\', NMT.COLUMN_FLAG_CHECK),\n                       (\'User flag\', NMT.COLUMN_FLAG_USER),\n                       (\'Shape\', NMT.COLUMN_SHAPE),\n                       (\'Data type\', NMT.COLUMN_DATATYPE))\n        for (tag, idx) in self._tlist:\n            a = QAction(tag, self._hmenu, checkable=True)\n            self._hmenu._idx[idx] = a\n            if (self._column[idx]):\n                a.setChecked(True)\n            else:\n                a.setChecked(False)\n            self._hmenu.addAction(a)\n            self.treeview.setColumnHidden(idx, not self._column[idx])\n        self._recursiveAddNewNode = False\n        self.updateTreeStatus()\n\n    def headerMenu(self, pos):\n        for (tag, idx) in self._tlist:\n            self._hmenu._idx[idx].setChecked(self._column[idx])\n        self._hmenu.exec_(self.treeview.mapToGlobal(pos))\n        for (tag, idx) in self._tlist:\n            if (self._hmenu._idx[idx].isChecked()):\n                self._column[idx] = True\n            else:\n                self._column[idx] = False\n            self.treeview.setColumnHidden(idx, not self._column[idx])\n\n    def model(self):\n        return self.FG.model\n\n    def modelIndex(self, idx):\n        if not idx.isValid():\n            return -1\n        midx = idx\n        if idx.model() != self.treeview.M():\n            midx = self.treeview.model().mapToSource(idx)\n        return midx\n\n    def modelData(self, idx):\n        if not idx.isValid():\n            return None\n        return self.modelIndex(idx).internalPointer()\n\n    def savetree(self):\n        if (not (self.FG.isSaveable() and self.FG.isModified())):\n            return\n        self._control.savedirect(self.FG)\n        self.updateTreeStatus()\n\n    def tools(self):\n        from CGNS.NAV.wtools import Q7ToolsView\n        if (self._control._toolswindow is None):\n            self._control._toolswindow = Q7ToolsView(self._control,\n                                                     self.FG,\n                                                     self)\n            self._control._toolswindow.show()\n        else:\n            self._control._toolswindow.raise_()\n\n    def savetreeas(self):\n        self._control.save(self.FG)\n        self.updateTreeStatus()\n\n    def infoTreeView(self):\n        self._control.helpWindow(\'Tree\')\n\n    def screenshot(self):\n        self.treeview.model().sort(0)\n        sshot = QScreen.grabWindow(self.treeview.winId())\n        sshot.save(\'/tmp/foo.png\', \'png\')\n\n    def expandMinMax(self):\n        if (self._depthExpanded == self.FG.depth - 2):\n            self._depthExpanded = -1\n            self.treeview.collapseAll()\n        else:\n            self._depthExpanded = self.FG.depth - 2\n            self.treeview.expandAll()\n        self.resizeAll()\n\n    def resetOptions(self):\n        if (OCTXT.AutoExpand):\n            self.treeview.setAutoExpandDelay(1000)\n        else:\n            self.treeview.setAutoExpandDelay(-1)\n\n    def expandLevel(self):\n        if (self._depthExpanded < self.FG.depth - 2):\n            self._depthExpanded += 1\n        self.treeview.expandToDepth(self._depthExpanded)\n        self.resizeAll()\n\n    def collapseLevel(self):\n        if (self._depthExpanded != -1): self._depthExpanded -= 1\n        if (self._depthExpanded == -1):\n            self.treeview.collapseAll()\n        else:\n            self.treeview.expandToDepth(self._depthExpanded)\n        self.resizeAll()\n\n    def updateStatus(self, node):\n        if (not self.lineEditLock.isChecked()):\n            self.lineEdit.clear()\n            self.lineEdit.insert(node.sidsPath())\n\n    def jumpToNode(self):\n        path = self.lineEdit.text()\n        self.treeview.selectByPath(path)\n\n    def popform(self):\n        self.formview()\n\n    def openLkTree(self):\n        self.busyCursor()\n        filename = self.getLastEntered().sidsLinkFilename()\n        if (filename is not None):\n            self._control.loadfile(filename)\n        self.readyCursor()\n\n    def openSubTree(self):\n        self.busyCursor()\n        node = self.getLastEntered().sidsPath()\n        child = Q7Tree(self._control, node, self.FG)\n        self.readyCursor()\n        child.show()\n\n    def pop0(self):\n        pass\n\n    def newnodebrother(self):\n        if (self.getLastEntered() is not None):\n            self.model().newNodeBrother(self.getLastEntered())\n\n    def newnodechild(self):\n        if (self.getLastEntered() is not None):\n            self.model().newNodeChild(self.getLastEntered())\n\n    def marknode(self):\n        if (self.getLastEntered() is not None):\n            self.treeview.markNode(self.getLastEntered())\n\n    def mcopy(self):\n        if (self.getLastEntered() is not None):\n            self.model().copyNode(self.getLastEntered())\n            self.clearOtherSelections()\n\n    def mcutselected(self):\n        self.model().cutAllSelectedNodes()\n        self.clearLastEntered()\n        self.clearOtherSelections()\n\n    def mcut(self):\n        if (self.getLastEntered() is not None):\n            self.model().cutNode(self.getLastEntered())\n            self.clearLastEntered()\n            self.clearOtherSelections()\n\n    def mpasteasbrotherselected(self):\n        self.model().pasteAsBrotherAllSelectedNodes()\n\n    def mpasteasbrother(self):\n        if (self.getLastEntered() is not None):\n            self.model().pasteAsBrother(self.getLastEntered())\n\n    def mpasteaschildselected(self):\n        self.model().pasteAsChildAllSelectedNodes()\n\n    def mpasteaschild(self):\n        if (self.getLastEntered() is not None):\n            self.model().pasteAsChild(self.getLastEntered())\n\n    def updateMenu(self, nodeidxs):\n        nodeidx = self.modelIndex(nodeidxs)\n        if (not nodeidx.isValid): return False\n        if (nodeidx.internalPointer() is None): return False\n        if (nodeidx.internalPointer().sidsPath() == \'/CGNSTree\'): return False\n        self.setLastEntered(nodeidxs)\n        if (nodeidx != -1):\n            node = nodeidx.internalPointer()\n            lknode = not node.sidsIsLink()\n            lznode = node.hasLazyLoad()\n            actlist = (\n                (""%s goodies"" % node.sidsType(),),\n                None,\n                (""Expand sub-tree from this node"", self.expand_sb, \'Ctrl++\', False),\n                (""Collapses sub-tree from this node"", self.collapse_sb, \'Ctrl+-\', False),                \n                None,\n                [\'Mark nodes...\',[\n                (""Mark/unmark node"", self.marknode, \'Space\', False),\n                 None,\n                (""Mark all nodes same SIDS type"", self.marknode_t, \'Ctrl+1\', False),\n                (""Mark all nodes same name"", self.marknode_n, \'Ctrl+2\', False),\n                (""Mark all nodes same value"", self.marknode_v, \'Ctrl+3\', False),\n                 None,\n                (""Mark parent path"", self.marknode_p, \'Ctrl+4\', False)]],\n                (""Add new child node"", self.newnodechild, \'Ctrl+A\', False),\n                (""Add new brother node"", self.newnodebrother, \'Ctrl+Z\', False),\n                #            None,\n                #            (""Open form"",self.popform,\'Ctrl+F\',False),\n                #            (""Open view"",self.openSubTree,\'Ctrl+W\',False),\n                #            (""Open view on linked-to file"",self.openLkTree,\'Ctrl+O\',lknode),\n                None,\n                (""Load node data in memory"", self.dataLoad, \'Ctrl+L\', not lznode),\n                (""Release memory node data"", self.dataRelease, \'Ctrl+R\', lznode),\n                None,\n                (""Copy current"", self.mcopy, \'Ctrl+C\', False),\n                (""Cut current"", self.mcut, \'Ctrl+X\', False),\n                (""Paste as brother"", self.mpasteasbrother, \'Ctrl+V\', False),\n                (""Paste as child"", self.mpasteaschild, \'Ctrl+Y\', False),\n                None,\n                [\'On selected nodes...\',[\n                (""Expand sub-tree from all selected nodes"", self.sexpand_sb, \'Ctrl+Shift++\', False),\n                (""Collapses sub-tree from all selected nodes"", self.scollapse_sb, \'Ctrl+Shift+-\', False),\n                None,\n                (""Cut all selected"", self.mcutselected, \'Ctrl+Shift+X\', False),\n                (""Paste as brother for each selected"",\n                 self.mpasteasbrotherselected, \'Ctrl+Shift+V\', False),\n                (""Paste as child for each selected"",\n                 self.mpasteaschildselected, \'Ctrl+Shift+Y\', False),\n                 None,\n                (""Load nodes data in memory for each selected"",\n                 self.dataLoadSelected, \'Ctrl+Shift+L\', False),\n                (""Release memory node data for each selected"",\n                 self.dataReleaseSelected, \'Ctrl+Shift+R\', False)]],\n            )\n            self.popupmenu.clear()\n            self.popupmenu.setTitle(\'Node menu\')\n            for aparam in actlist:\n                if (aparam is None):\n                    self.popupmenu.addSeparator()\n                elif (len(aparam) == 1):\n                    stp = node.sidsType()\n                    tag = \'_GM_{}\'.format(stp)\n                    subm = self.popupmenu.addMenu(\'{}...\'.format(stp))\n                    a = QAction(""About %s"" % node.sidsType(), self,\n                                triggered=self.aboutSIDS)\n                    subm.addAction(a)\n                    patmenu = subm.addMenu(\'Insert pattern\')\n                    self.patternMenu(patmenu, node.sidsNode())\n                    subm.addSeparator()\n                    if (hasattr(self, tag)):\n                        getattr(self, tag)(subm, node)\n                else:\n                    if isinstance(aparam,list):\n                        subm = self.popupmenu.addMenu(aparam[0])\n                        for aaparam in aparam[1]:\n                            if (aaparam is None):\n                                 subm.addSeparator()\n                            else:\n                                a = QAction(aaparam[0], self, triggered=aaparam[1])\n                                if (aaparam[2] is not None): a.setShortcut(aaparam[2])\n                                subm.addAction(a)\n                                a.setDisabled(aaparam[3])\n                    else:\n                        a = QAction(aparam[0], self, triggered=aparam[1])\n                        if (aparam[2] is not None): a.setShortcut(aparam[2])\n                        self.popupmenu.addAction(a)\n                        a.setDisabled(aparam[3])\n            return True\n\n    def _runAndSelect(self, qname, value):\n        q = Q7Query.getQuery(qname)\n        sl = q.run(self.FG.tree, self.FG.links, list(self.FG.lazy), False, value)\n        self.model().markExtendToList(sl)\n        self.model().updateSelected()\n        self.treeview.refreshView()\n\n    def patternMenu(self, menu, node):\n        a = QAction(""Recursive sub-pattern add"", self, checkable=True)\n        menu.addAction(a)\n        a.setChecked(self._recursiveAddNewNode)\n        menu.addSeparator()\n        for t in [n[0] for n in CGU.getAuthChildren(node)]:\n            def genCopyPattern(arg):\n                def copyPattern():\n                    self.model().copyNodeRaw(CGS.profile[arg][0])\n                    if (self.getLastEntered() is not None):\n                        self.model().pasteAsChild(self.getLastEntered())\n                return copyPattern\n            a = QAction(""{}"".format(t), self, triggered=genCopyPattern(t))\n            menu.addAction(a)\n        \n    def _gm_family_1(self, node):\n        self._runAndSelect(\'013. FamilyName reference\', ""\'%s\'"" % node.sidsName())\n\n    def _gm_family_2(self, node):\n        self._runAndSelect(\'003. Node type\', ""\'Family_t\'"")\n\n    def _GM_Family_t(self, m, node):\n        a = QAction(\'Select references to myself\', self)\n        a.triggered.connect(functools.partial(self._gm_family_1, node))\n        m.addAction(a)\n        a = QAction(\'Select all families\', self)\n        a.triggered.connect(functools.partial(self._gm_family_2, node))\n        m.addAction(a)\n        m.addSeparator()\n        return True\n\n    def _GM_IndexRange_t(self, m, node):\n        if (node.sidsName() != CGK.ElementRange_s):\n            v = 0\n            a = QAction(\'Range size: %d\' % (v), self)\n            m.addAction(a)\n        else:\n            v = node.sidsValue()[1] - node.sidsValue()[0]\n            etp = CGU.getEnumAsString(node.sidsParent())\n            a = QAction(\'Number of elements of type [%s]: %d\' % (etp, v), self)\n            m.addAction(a)\n        return True\n\n    def _GM_Elements_t(self, m, node):\n        etp = CGU.getEnumAsString(node.sidsNode())\n        npe = CGK.ElementTypeNPE[etp]\n        a = QAction(\'Element type [%s] npe [%d]\' % (etp, npe), self)\n        m.addAction(a)\n        return True\n\n    def marknode_t(self):\n        node = self.getLastEntered()\n        self._runAndSelect(\'003. Node type\', ""\'%s\'"" % node.sidsType())\n\n    def marknode_n(self):\n        node = self.getLastEntered()\n        self._runAndSelect(\'001. Node name\', ""\'%s\'"" % node.sidsName())\n\n    def marknode_v(self):\n        node = self.getLastEntered()\n        value = node.sidsValue()\n        self._runAndSelect(\'005. Node value\', value)\n\n    def marknode_p(self):\n        node = self.getLastEntered()\n        node.switchMarked()\n        path = node.sidsPath()\n        while path is not None:\n            path = CGU.getPathAncestor(path)\n            if (path not in [\'/\', None]):\n                node = self.model().nodeFromPath(\'/CGNSTree\' + path)\n                node.switchMarked()\n        self.model().updateSelected()\n\n    def setLastEntered(self, nix=None):\n        if ((nix is None) or (not nix.isValid())):\n            nix = self.treeview.modelCurrentIndex()\n        self._lastEntered = None\n        if (nix.isValid()):\n            self.treeview.exclusiveSelectRow(nix, False)\n            self._lastEntered = self.modelData(nix)\n\n    def getLastEntered(self):\n        return self._lastEntered\n\n    def clearLastEntered(self):\n        self._lastEntered = None\n        self.treeview.selectionModel().clearSelection()\n        return None\n\n    def clearOtherSelections(self):\n        if (self._control._patternwindow is not None):\n            self._control._patternwindow.clearSelection()\n\n    def clickedPressedNode(self, index):\n        self.clickedNode(index)\n\n    def clickedNode(self, index):\n        self.treeview.exclusiveSelectRow(index)\n        if (self.treeview.lastButton == Qt.RightButton):\n            if (self.updateMenu(index)):\n                self.popupmenu.popup(self.treeview.lastPos)\n\n    def expandNode(self, *args):\n        self.resizeAll()\n\n    def collapseNode(self, *args):\n        pass\n\n    def expand_sb(self):\n        self.treeview.expand_sb()\n    \n    def collapse_sb(self):\n        self.treeview.collapse_sb()\n    \n    def sexpand_sb(self):\n        self.treeview.sexpand_sb()\n    \n    def scollapse_sb(self):\n        self.treeview.scollapse_sb()\n    \n    def resizeAll(self):\n        for n in range(NMT.COLUMN_LAST + 1):\n            self.treeview.resizeColumnToContents(n)\n\n    def show(self):\n        super(Q7Tree, self).show()\n\n    def linkselectsrc(self):\n        if (self.bSelectLinkSrc.isChecked()):\n            if (self.getLastEntered() is None): return\n            self.bAddLink.setDisabled(False)\n            node = self.getLastEntered()\n            self.selectForLinkSrc = (node, node.sidsPath())\n        else:\n            self.bAddLink.setDisabled(True)\n            self.selectForLinkSrc = None\n\n    def linkselectdst(self):\n        if (self.getLastEntered() is None): return\n        node = self.getLastEntered()\n        if (node is None):  return\n        if (node.sidsIsLink()): return\n        if (node.sidsType() == CGK.CGNSTree_ts): return\n        if (self._control.selectForLinkDst is not None):\n            bt = self._control.selectForLinkDst[-1].bSelectLinkDst\n            bt.setChecked(Qt.Unchecked)\n            if (self._control.selectForLinkDst[-1] == self):\n                self._control.selectForLinkDst = None\n                return\n        self._control.selectForLinkDst = (node, node.sidsPath(),\n                                          self.FG.filedir,\n                                          self.FG.filename,\n                                          self)\n        self.bSelectLinkDst.setChecked(Qt.Checked)\n        if (self._linkwindow is not None):\n            n = node.sidsPath()\n            d = self.FG.filedir\n            f = self.FG.filename\n            self._linkwindow.updateSelected(d, f, n)\n\n    def linkadd(self):\n        if (self._control.selectForLinkDst is None): return\n        dst = self._control.selectForLinkDst\n        str_dst = ""%s:%s"" % (dst[3], dst[1])\n        tpath = \'relative\'\n        newname = CGU.getPathLeaf(dst[1])\n        if (CGU.checkDuplicatedName(self.selectForLinkSrc[0].sidsNode(),\n                                    newname, dienow=False)):\n            str_cnm = ""New child node name is <b>%s</b>"" % newname\n        else:\n            count = 0\n            while (not CGU.checkDuplicatedName(self.selectForLinkSrc[0].sidsNode(),\n                                               newname, dienow=False)):\n                count += 1\n                newname = \'{%s#%.3d}\' % (dst[0].sidsType(), count)\n            str_cnm = """"""As a child with this name already exists, the name <b>%s</b> is used (generated name)"""""" % \\\n                      newname\n        str_src = ""%s:%s/%s"" % (self.FG.filename,\n                                self.selectForLinkSrc[1], newname)\n        str_msg = ""you want to create a link from <b>%s</b> to <b>%s</b><br>%s<br>Your current user options do force "" \\\n                  ""the link to use <b>%s</b> destination file path."""""" % (\n        str_src, str_dst, str_cnm, tpath)\n        reply = MSG.wQuestion(self, 231, \'Create link as a new node\', str_msg)\n\n    def linklist(self):\n        if (self._linkwindow is None):\n            self._linkwindow = Q7LinkList(self._control, self.FG.index, self)\n            self._linkwindow.show()\n        else:\n            self._linkwindow.raise_()\n\n    def patternlist(self):\n        if (self._control._patternwindow is None):\n            self._control._patternwindow = Q7PatternList(self._control, self.FG)\n            self._control._patternwindow.show()\n        self._control._patternwindow.raise_()\n\n    def check(self):\n        self.busyCursor()\n        if (self.diagview is not None):\n            self.diagview.close()\n            self.diagview = None\n        self.lastdiag = self.model().checkSelected()\n        self.readyCursor()\n        self.treeview.refreshView()\n        self.bCheckList.setDisabled(False)\n\n    def checklist(self):\n        if (self.lastdiag is None): return\n        self.diagview = Q7CheckList(self, self.lastdiag, self.FG.index)\n        self.diagview.show()\n\n    def clearchecks(self):\n        self.model().checkClear()\n        self.treeview.refreshView()\n        self.lastdiag = None\n        self.bCheckList.setDisabled(True)\n\n    def selectionlist(self):\n        if (self._selectwindow is not None):\n            self._selectwindow.close()\n            self._selectwindow = None\n        self._selectwindow = Q7SelectionList(self, self.model(), self.FG.index)\n        self._selectwindow.show()\n        self._selectwindow.raise_()\n\n    def previousmark(self):\n        self.treeview.changeSelectedMark(-1)\n\n    def nextmark(self):\n        self.treeview.changeSelectedMark(+1)\n\n    def markall(self):\n        self.model().markAll()\n        self.model().updateSelected()\n        self.treeview.refreshView()\n\n    def unmarkall(self):\n        self.model().unmarkAll()\n        self.model().updateSelected()\n        self.treeview.refreshView()\n\n    def swapmarks(self):\n        self.model().swapMarks()\n        self.model().updateSelected()\n        self.treeview.refreshView()\n\n    def formview(self):\n        ix = self.treeview.modelCurrentIndex()\n        node = self.modelData(ix)\n        if (node is None):\n            MSG.wInfo(self, 254, ""Form view:"",\n                      """"""You have to select a node to open its form view"""""",\n                      again=False)\n            return\n        if (node.sidsType() == CGK.CGNSTree_ts): return\n        form = Q7Form(self._control, node, self.FG.index)\n        form.show()\n\n    def vtkview(self):\n        if (not HAS_VTK): return\n        from CGNS.NAV.wvtk import Q7VTK\n        if (self._vtkwindow is None):\n            self.busyCursor()\n            ix = self.treeview.modelCurrentIndex()\n            zlist = self.model().getSelectedZones()\n            node = self.modelData(ix)\n            self._vtkwindow = Q7VTK(self._control, self, node, self.FG.index,\n                                    self.model(), zlist)\n            if (self._vtkwindow._vtkstatus):\n                self._vtkwindow.show()\n            else:\n                self._vtkwindow.close()\n                self._vtkwindow = None\n            self.readyCursor()\n        else:\n            self._vtkwindow.raise_()\n\n    def plotview(self):\n        return\n\n    def queryview(self):\n        if (self._querywindow is None):\n            self._querywindow = Q7Query(self._control, self.FG.index, self)\n            self._querywindow.show()\n        else:\n            self._querywindow.raise_()\n\n    def aboutSIDS(self):\n        path = self.getLastEntered().sidsPath()\n\n    def dataLoadSelected(self):\n        self.model().dataLoadSelected()\n\n    def dataReleaseSelected(self):\n        self.model().dataReleaseSelected()\n\n    def dataLoad(self):\n        node = self.getLastEntered()\n        self.model().dataLoadSelected(single=node.sidsPath())\n\n    def dataRelease(self):\n        node = self.getLastEntered()\n        self.model().dataReleaseSelected(single=node.sidsPath())\n\n    def forceapply(self):\n        pass\n\n    def updateTreeStatus(self):\n        if ((Q7FingerPrint.STATUS_MODIFIED in self.FG._status)\n            and (Q7FingerPrint.STATUS_SAVEABLE in self.FG._status)):\n            self.bSave.setEnabled(True)\n        else:\n            self.bSave.setEnabled(False)\n\n    def doRelease(self):\n        # break cyclic refs to allow garbage\n        self.treeview.itemDelegate().doRelease()\n        self.treeview.setItemDelegate(None)\n        self.treeview.doRelease()\n        self.treeview = None\n\n# -----------------------------------------------------------------\n'"
CGNS/NAV/wvtk.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nfrom __future__ import division\nfrom builtins import (str, bytes, range, dict)\n\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nimport numpy as NPY\nimport math\nimport sys\nimport random\nimport vtk\n\nimport CGNS.PAT.cgnskeywords as CGK\nimport CGNS.PAT.cgnsutils as CGU\n\nfrom qtpy.QtCore import Qt, Slot\nfrom qtpy.QtWidgets import QColorDialog\nfrom qtpy.QtGui import (QColor, QIcon, QPixmap, QScreen)\n\nfrom CGNS.NAV.Q7VTKWindow import Ui_Q7VTKWindow\nfrom CGNS.NAV.wfingerprint import Q7Window, Q7FingerPrint\nfrom CGNS.NAV.mparser import Mesh\nfrom CGNS.NAV.mparser import SIZE_PATTERN, LIST_PATTERN\nfrom CGNS.NAV.wfile import Q7File\n\nimport CGNS.NAV.wmessages as MSG\n\nvers = vtk.vtkVersion()\nVTK_VERSION_MINOR = vers.GetVTKMinorVersion()\nVTK_VERSION_MAJOR = vers.GetVTKMajorVersion()\n\n\n# ----------------------------------------------------------------------------\nclass wVTKContext(object):\n    def __init__(self, cm):\n        (self.vx, self.vy, self.vz) = cm.GetViewUp()\n        (self.cx, self.cy, self.cz) = cm.GetFocalPoint()\n        (self.px, self.py, self.pz) = cm.GetPosition()\n        (self.sx, self.sy, self.sz) = (0., 0., 0.)\n        (self.ox, self.oy, self.oz) = (0., 0., 0.)\n\n    def setViewUp(self, vx, vy, vz):\n        (self.vx, self.vy, self.vz) = (vx, vy, vz)\n\n    def setFocalPoint(self, cx, cy, cz):\n        (self.cx, self.cy, self.cz) = (cx, cy, cz)\n\n    def setPosition(self, px, py, pz):\n        (self.px, self.py, self.pz) = (px, py, pz)\n\n    def dump(self):\n        return """"""\n(self.vx,self.vy,self.vz)=%s\n(self.cx,self.cy,self.cz)=%s\n(self.px,self.py,self.pz)=%s\n(self.sx,self.sy,self.sz)=%s\n(self.ox,self.oy,self.oz)=%s"""""" % (\n            (self.vx, self.vy, self.vz),\n            (self.cx, self.cy, self.cz),\n            (self.px, self.py, self.pz),\n            (self.sx, self.sy, self.sz),\n            (self.ox, self.oy, self.oz))\n\n\n# -----------------------------------------------------------------\nclass Q7VTK(Q7Window, Ui_Q7VTKWindow):\n    def __init__(self, control, parent, node, fgprintindex, tmodel, zlist):\n        if not zlist:\n            pth = \'/\'\n        else:\n            pth = \'<partial>\'\n        self._vtkstatus = False\n        self._control = control\n        self._fgindex = fgprintindex\n        self._tree = Q7FingerPrint.getByIndex(self._fgindex).tree\n        self._parent = parent\n        self._master = parent\n        self._vtk = None\n        self._lastSelectedType = None\n        if VTK_VERSION_MAJOR < 8:\n            MSG.wError(self._control,\n                       501, ""Your VTK version is lower than v8.0, you should consider upgrading"", ""Oups..."")\n            raise RuntimeError(""VTK version is too old, please upgrade"")\n        # FIXME: options are required for parse, then wCGNSTreeParse should\n        # be called AFTER the init (that reads options)\n        # if the parse fails (no data, bad data...) the window has to be deleted\n        Q7Window.__init__(self, Q7Window.VIEW_VTK, control, pth, self._fgindex)\n        if not self.wCGNSTreeParse(self._tree, zlist):\n            return\n        self._vtkstatus = True\n        self._xmin = self._ymin = self._zmin = self._xmax = self._ymax = self._zmax = 0.0\n        self._epix = QIcon(QPixmap("":/images/icons/empty.png""))\n        self._spix = QIcon(QPixmap("":/images/icons/selected.png""))\n        self._npix = QIcon(QPixmap("":/images/icons/unselected.png""))\n        self._hpix = QIcon(QPixmap("":/images/icons/hidden.png""))\n        self.lut = None\n        self.grid_dims = None\n        self.mincolor = None\n        self.maxcolor = None\n        self.scalarbar = None\n        self.scalarbarwidget = None\n        self._selected = []\n        self._picked = None\n        self._hidden = []\n        self.actorpt = None\n        self.wact = None\n        self._cacheActor = {}\n        self._tmodel = tmodel\n        self.color = (0, 0, 0)\n        self.selectionColor = (1, 0, 0)\n        self.OutlineActor = None\n        self._currentactor = None\n        self.PickedRenderer = None\n        self.PropPicked = 0\n        self.controlKey = 0\n        self.highlightProp = None\n        self.maxColorMap = None\n        self._camera = {}\n        self._blackonwhite = False\n        self.widgets = False\n        self.resetSpinBox()\n        self.display.Initialize()\n        self.display.Start()\n        self.display.show()\n        self._vtktree = self.wCGNSTreeActors(self._tree, zlist)\n        self.bX.clicked.connect(self.b_xaxis)\n        self.bY.clicked.connect(self.b_yaxis)\n        self.bZ.clicked.connect(self.b_zaxis)\n        #      self.bReverse.clicked.connect(self.reverseSelection)\n        self.bSaveVTK.clicked.connect(self.b_saveVTK)\n        self.bSuffleColors.clicked.connect(self.b_shufflecolors)\n        self.bBlackColor.clicked.connect(self.b_blackandwhite)\n        self.bAddView.clicked.connect(self.b_saveview)\n        self.bRemoveView.clicked.connect(self.b_delview)\n        self.bNext.clicked.connect(self.b_next)\n        self.bPrevious.clicked.connect(self.b_prev)\n        self.bReset.clicked.connect(self.b_reset)\n        self.bUpdateFromTree.clicked.connect(self.b_update_from)\n        self.bUpdateFromVTK.clicked.connect(self.b_update_to)\n        self.bScreenShot.clicked.connect(self.screenshot)\n        self.selectable.clicked.connect(self.setInteractive)\n        self.ColorMapMin = QColorDialog(self)\n        self.ColorMapMax = QColorDialog(self)\n        self.cCurrentPath.setParent(self)\n        self.ColorMapMin.colorSelected[QColor].connect(self.getColorMapMin)\n        self.ColorMapMax.colorSelected[QColor].connect(self.getColorMapMax)\n        self.bZoom.clicked.connect(self.RubberbandZoom)\n        self.bColorMapMin.clicked.connect(self.displayColorMapMin)\n        self.bColorMapMax.clicked.connect(self.displayColorMapMax)\n        self.bInfo.clicked.connect(self.infoVtkView)\n        self.cShowValue.clicked.connect(self.showValues)\n        self.setColorSpace()\n        self.cViews.currentIndexChanged[int].connect(self.b_loadview)\n        self.cViews.lineEdit().editingFinished.connect(self.b_saveview)\n        self.cCurrentPath.currentIndexChanged[int].connect(self.changeCurrentPath)\n        #      QObject.connect(self.cFamilies,\n        #                      SIGNAL(""currentIndexChanged(int)""),\n        #                      self.changeCurrentFamily)\n        self.sIndex1.valueChanged[int].connect(self.highlightPoint)\n        self.sIndex2.valueChanged[int].connect(self.highlightPoint)\n        self.sIndex3.valueChanged[int].connect(self.highlightPoint)\n        self.cShowZone.stateChanged[int].connect(self.fillCurrentPath)\n        self.cShowBC.stateChanged[int].connect(self.fillCurrentPath)\n        self.cShowCT.stateChanged[int].connect(self.fillCurrentPath)\n        self.cShowFamily.stateChanged[int].connect(self.fillCurrentPath)\n        self.cRotationAxis.currentIndexChanged[int].connect(self.setInteractor)\n        self.cVariables.currentIndexChanged[int].connect(self.getVariable)\n        self.cColorSpace.currentIndexChanged[int].connect(self.getColorSpace)\n        # QObject.connect(self.sIndex1, SIGNAL(""valueChanged(int)""),\n        #                 self.highlightPoint)\n        # QObject.connect(self.sIndex2, SIGNAL(""valueChanged(int)""),\n        #                 self.highlightPoint)\n        # QObject.connect(self.sIndex3, SIGNAL(""valueChanged(int)""),\n        #                 self.highlightPoint)\n        # QObject.connect(self.cShowZone, SIGNAL(""stateChanged(int)""),\n        #                 self.fillCurrentPath)\n        # QObject.connect(self.cShowBC, SIGNAL(""stateChanged(int)""),\n        #                 self.fillCurrentPath)\n        # QObject.connect(self.cShowCT, SIGNAL(""stateChanged(int)""),\n        #                 self.fillCurrentPath)\n        # QObject.connect(self.cShowFamily, SIGNAL(""stateChanged(int)""),\n        #                 self.fillCurrentPath)\n        # QObject.connect(self.cRotationAxis,\n        #                 SIGNAL(""currentIndexChanged(int)""),self.setInteractor)\n        # QObject.connect(self.cVariables,\n        #                 SIGNAL(""currentIndexChanged(int)""),\n        #                 self.getVariable)\n        # QObject.connect(self.cColorSpace,\n        #                 SIGNAL(""currentIndexChanged(int)""),\n        #                 self.getColorSpace)\n        self.bResetCamera.clicked.connect(self.ResetCam)\n\n        self.Rotating = 0\n        self.Zooming = 0\n        self.Panning = 0\n        self.Rolling = 0\n        self.InteractorIndex = 0\n        self.txt = None\n        self.observer = None\n        self.actorval = None\n        self.planeActor = None\n\n    @Slot(str, name=\'printMessage\')\n    def printMessage(self, text):\n        sys.stdout.write(text + \'\\n\')\n        sys.stdout.flush()\n\n    def doRelease(self):\n        self._tree = None\n        self.reject()\n\n    def parseDone(self):\n        print(\'PARSE DONE\')\n\n    def updateSelectedFromVTK(self):\n        s = []\n        paths = set()\n        if self._lastSelectedType == \'Zone\':\n            for a in self._selected:\n                paths.add(CGU.stackPathItem(\'/\', *CGU.getPathToList(a[0], True)[:2]))\n        elif self._lastSelectedType == \'Family\':\n            for a in self._selected:\n                paths.add(CGU.stackPathItem(\'/\', self._lastSelectedTag))\n        else:\n            for a in self._selected:\n                paths.add(a[0])\n        for p in list(paths):\n            if (len(p) > SIZE_PATTERN) and (p[-SIZE_PATTERN:] in LIST_PATTERN):\n                p = p[:-SIZE_PATTERN]\n            s += [\'/\' + CGK.CGNSTree_s + p]\n        print(s)\n        self._tmodel.markExtendToList(s)\n        self._tmodel.updateSelected()\n        self._parent.treeview.refreshView()\n\n    def setCutPlane(self):\n        if self._currentactor is None:\n            return\n        if not vtk.vtkStructuredGrid().SafeDownCast(self._currentactor[1].GetMapper().GetInput()):\n            return\n        bounds = self._currentactor[1].GetBounds()\n        bds = [0, 0, 0]\n        bds[0] = (bounds[0] + bounds[1]) / 2.0\n        bds[1] = (bounds[3] + bounds[2]) / 2.0\n        bds[2] = (bounds[5] + bounds[4]) / 2.0\n        grid = self._currentactor[1].GetMapper().GetInput()\n        filter = vtk.vtkStructuredGridGeometryFilter()\n        if VTK_VERSION_MAJOR < 8:\n            raise RuntimeError(""VTK version is too old, please upgrade"")\n        filter.SetInputData(grid)\n        self.planeWidget.SetPlaceFactor(1.0)\n        self.planeWidget.GetOutlineProperty().SetColor(0, 1, 1)\n        self.planeWidget.OutlineTranslationOff()\n        if VTK_VERSION_MAJOR < 8:\n            raise RuntimeError(""VTK version is too old, please upgrade"")\n        self.planeWidget.SetInputConnection(filter.GetOutputPort())\n        self.planeWidget.PlaceWidget()\n        self.planeWidget.SetOrigin(bds[0], bds[1], bds[2])\n        self.planeWidget.SetNormal(1, 0, 0)\n        self.planeWidget.On()\n        self.planeWidget.AddObserver(""InteractionEvent"", self.myCallback)\n        self._iren.Render()\n\n    def myCallback(self, *args):\n        if self.planeWidget.GetDrawPlane() == 0:\n            self.planeWidget.DrawPlaneOn()\n\n    def cutting(self):\n        if (self._currentactor is None) or (self.planeWidget.GetEnabled() == 0):\n            return\n        if self.planeActor is not None:\n            self._vtkren.RemoveActor(self.planeActor)\n        variable = self.cVariables.currentText()\n        origin = self.planeWidget.GetOrigin()\n        normal = self.planeWidget.GetNormal()\n        plane = vtk.vtkPlane()\n        plane.SetOrigin(origin)\n        plane.SetNormal(normal)\n        grid = self._currentactor[1].GetMapper().GetInput()\n        filter = vtk.vtkStructuredGridGeometryFilter()\n        if VTK_VERSION_MAJOR < 8:\n            raise RuntimeError(""VTK version is too old, please upgrade"")\n        filter.SetInputData(grid)\n        cutter = vtk.vtkCutter()\n        cutter.SetCutFunction(plane)\n        if VTK_VERSION_MAJOR < 8:\n            raise RuntimeError(""VTK version is too old, please upgrade"")\n        filter.SetInputData(grid)\n        cutter.Update()\n        cutterMapper = vtk.vtkPolyDataMapper()\n        cutterMapper.SetInputConnection(cutter.GetOutputPort())\n        cutterMapper.SetScalarModeToUseCellData()\n        cutterMapper.ScalarVisibilityOn()\n        cutterMapper.SetLookupTable(self.lut)\n        self.planeActor = vtk.vtkActor()\n        self.planeActor.GetProperty().SetColor(1, 1, 0)\n        self.planeActor.GetProperty().SetLineWidth(15)\n        self.planeActor.GetProperty().SetRepresentationToSurface()\n        self.planeActor.SetMapper(cutterMapper)\n        self.planeActor.GetMapper().GetInput().GetCellData().SetActiveScalars(variable)\n        self.planeWidget.DrawPlaneOff()\n        self._vtkren.AddActor(self.planeActor)\n        self._iren.Render()\n\n    def infoVtkView(self):\n        self._control.helpWindow(\'VTK\')\n\n    def mouseReleaseEvent(self, ev):\n        self._ActiveButton = ev.button()\n        try:\n            ctrl = self._iren.GetControlKey()\n        except AttributeError:\n            return\n        shift = self._iren.GetShiftKey()\n        self._iren.SetEventInformationFlipY(ev.x(), ev.y(),\n                                            ctrl, shift, chr(0), 0, None)\n        if ev.button() == Qt.LeftButton:\n            self._iren.LeftButtonReleaseEvent()\n            self.Rotating = 0\n            self.Panning = 0\n            self.Rolling = 0\n        elif ev.button() == Qt.RightButton:\n            self._iren.RightButtonReleaseEvent()\n            self.Zooming = 0\n        elif ev.button() == Qt.MidButton:\n            self._iren.MiddleButtonReleaseEvent()\n            self.Panning = 0\n\n    def setInteractor(self, *args):\n        if self.cRotationAxis.currentIndex() == 0:\n            self._vtk.SetInteractorStyle(Q7InteractorStyle(self))\n        elif self.InteractorIndex == 0:\n            self._vtk.SetInteractorStyle(Q7InteractorStyleTrackballObject(self))\n        self.InteractorIndex = self.cRotationAxis.currentIndex()\n\n    def setCameraMode(self):\n        self.cRotationAxis.clear()\n        self.cRotationAxis.addItem(""Camera axis all"")\n        self.cRotationAxis.addItem(""Object axis all"")\n        self.cRotationAxis.addItem(""Object axis x"")\n        self.cRotationAxis.addItem(""Object axis y"")\n        self.cRotationAxis.addItem(""Object axis z"")\n\n    def ResetCam(self, *args):\n        if self.OutlineActor is None:\n            self._vtkren.ResetCamera()\n        else:\n            v = self.OutlineActor.GetBounds()\n            print(\'BOUNDS \', v)\n            self._vtkren.ResetCamera(v)\n        self._iren.Render()\n\n    def RubberbandZoom(self, *args):\n        if self.bZoom.isChecked():\n            self._vtk.SetInteractorStyle(Q7InteractorStyleRubberBandZoom(self))\n        else:\n            interactor = self.cRotationAxis.currentIndex()\n            if interactor == 0:\n                self._vtk.SetInteractorStyle(Q7InteractorStyle(self))\n            else:\n                self._vtk.SetInteractorStyle(Q7InteractorStyleTrackballObject(self))\n\n    def showValues(self, *args):\n        if self._currentactor is not None:\n            if not vtk.vtkStructuredGrid().SafeDownCast(self._currentactor[1].GetMapper().GetInput()):\n                self.cShowValue.setChecked(0)\n                return\n        if (self.cVariables.currentIndex() == 0) or self.OutlineActor is None:\n            self.cShowValue.setChecked(0)\n            return\n        if self.cShowValue.isChecked():\n            self.observer = self._iren.AddObserver(""MouseMoveEvent"", self.displayScalars)\n        elif self.observer is not None:\n            self._iren.RemoveObserver(self.observer)\n\n    def displayScalars(self, *args):\n        self.setPickableOff()\n        eventPos = self._iren.GetEventPosition()\n        picker = vtk.vtkCellPicker()\n        picker.Pick(eventPos[0], eventPos[1], 0.0, self._vtkren)\n        cell = picker.GetCellId()\n        if cell > -1:\n            array = self.cVariables.currentIndex() - 1\n            grid = self._currentactor[1].GetMapper().GetInput()\n            data = grid.GetCellData().GetArray(array)\n            value = data.GetTuple1(cell)\n            value = ""%.3f"" % value\n            txt = vtk.vtkTextActor()\n            txt.SetInput(value)\n            txtprop = txt.GetTextProperty()\n            txtprop.SetFontFamilyToArial()\n            txtprop.SetFontSize(18)\n            txtprop.SetColor(self.color)\n            txt.SetDisplayPosition(eventPos[0], eventPos[1])\n            self.selectionCellId(grid, cell)\n            self._vtkren.AddActor(txt)\n            if self.txt is not None:\n                self._vtkren.RemoveActor(self.txt)\n                self._iren.Render()\n            self.txt = txt\n        else:\n            if self.txt is not None:\n                self._vtkren.RemoveActor(self.txt)\n            self._vtkren.RemoveActor(self.actorpt)\n            self._iren.Render()\n        self.setPickableOn()\n\n    def setInteractive(self, *args):\n        if self.selectable.isChecked():\n            if self.scalarbarwidget is not None:\n                self.scalarbarwidget.RepositionableOn()\n                self.scalarbarwidget.ResizableOn()\n            self.widget.InteractiveOn()\n\n        else:\n            if self.scalarbarwidget is not None:\n                self.scalarbarwidget.RepositionableOff()\n                self.scalarbarwidget.ResizableOff()\n            self.widget.InteractiveOff()\n\n    def displayColorMapMin(self, *args):\n        self.ColorMapMin.show()\n\n    def displayColorMapMax(self, *args):\n        self.ColorMapMax.show()\n\n    def getColorMapMin(self, *args):\n        self.maxcolor = self.ColorMapMin.currentColor().getRgbF()\n        self.getVariable()\n\n    def getColorMapMax(self, *args):\n        self.mincolor = self.ColorMapMax.currentColor().getRgbF()\n        self.getVariable()\n\n    def setVariable(self, variable=None):\n        self.cVariables.clear()\n        self.cVariables.addItem("""")\n        if variable is not None:\n            for i in variable:\n                self.cVariables.addItem(i)\n\n    def getVariable(self, *args):\n        if self.planeWidget.GetEnabled() == 1:\n            self.planeWidget.Off()\n        index = self.cVariables.currentIndex()\n        if (index == 0) or (not self.cShowValue.isChecked()):\n            if self.observer is not None:\n                self._iren.RemoveObserver(self.observer)\n            self.cShowValue.setChecked(0)\n        if (self.mincolor is None) or (self.maxcolor is None):\n            return\n        variable = self.cVariables.currentText()\n        name = variable[0:10]\n        self.scalarbar.SetTitle(name)\n        if index == 0:\n            self.setVisibilityGrids(1)\n            if self.scalarbarwidget is not None:\n                self.scalarbarwidget.Off()\n                self.setScalarVisibilityOff()\n                self.scalarbarwidget.GetScalarBarRepresentation().SetPosition(0.9, 0.4)\n                self.cShowValue.setChecked(0)\n        else:\n            a = self._vtkren.GetActors()\n            a.InitTraversal()\n            s = a.GetNextItem()\n            minrange = []\n            maxrange = []\n            while s:\n                grid = s.GetMapper().GetInput()\n                tgrid = self.findObjectDims(grid)[0]\n                if tgrid == 0:\n                    grid.GetCellData().SetActiveScalars(variable)\n                    minrange += [grid.GetScalarRange()[0]]\n                    maxrange += [grid.GetScalarRange()[1]]\n                    s.GetMapper().SetScalarModeToUseCellData()\n                    s.GetMapper().ScalarVisibilityOn()\n                    if self.lut is not None:\n                        s.GetMapper().SetLookupTable(self.lut)\n                        self.lut.RemoveAllPoints()\n                        self.lut.AddRGBPoint(min(minrange), self.mincolor[0], self.mincolor[1], self.mincolor[2])\n                        self.lut.AddRGBPoint(max(maxrange), self.maxcolor[0], self.maxcolor[1], self.maxcolor[2])\n                if tgrid == 1:\n                    s.VisibilityOff()\n                s = a.GetNextItem()\n            if self.scalarbarwidget.GetEnabled() == 0:\n                sz = self._iren.GetRenderWindow().GetSize()\n                self.scalarbarwidget.GetScalarBarRepresentation().SetPosition2(0.07 * 781 / sz[0], 0.6 * 554 / sz[1])\n                self.scalarbarwidget.On()\n        if self.OutlineActor is not None:\n            self.OutlineActor.VisibilityOn()\n        self._iren.Render()\n\n    def setVisibilityGrids(self, n):\n        a = self._vtkren.GetActors()\n        a.InitTraversal()\n        s = a.GetNextItem()\n        while s:\n            grid = s.GetMapper().GetInput()\n            if vtk.vtkUnstructuredGrid.SafeDownCast(grid):\n                s.SetVisibility(n)\n            s = a.GetNextItem()\n\n    def setScalarVisibilityOff(self):\n        a = self._vtkren.GetActors()\n        a.InitTraversal()\n        s = a.GetNextItem()\n        while s:\n            s.GetMapper().ScalarVisibilityOff()\n            s = a.GetNextItem()\n\n    def setColorSpace(self):\n        self.cColorSpace.clear()\n        self.cColorSpace.addItem("""")\n        self.cColorSpace.addItem(""RGB"")\n        self.cColorSpace.addItem(""HSV"")\n        self.cColorSpace.addItem(""Diverging"")\n\n    def getColorSpace(self):\n        index = self.cColorSpace.currentIndex()\n        if index == 0:\n            return\n        colorspaces = {1: self.lut.SetColorSpaceToRGB, 2: self.lut.SetColorSpaceToHSV,\n                       3: self.lut.SetColorSpaceToDiverging}\n        colorspaces[index]()\n        self._iren.Render()\n\n    def LookupTable(self):\n        self.lut = vtk.vtkColorTransferFunction()\n        self.lut.SetColorSpaceToRGB()\n        self.lut.SetScaleToLinear()\n        text = vtk.vtkTextProperty()\n        text.SetFontFamilyToArial()\n        text.SetFontSize(12)\n        text.SetColor(self.color)\n        self.scalarbar = vtk.vtkScalarBarActor()\n        self.scalarbar.SetLookupTable(self.lut)\n        self.scalarbar.SetNumberOfLabels(5)\n        self.scalarbar.SetLabelTextProperty(text)\n        self.scalarbar.SetTitleTextProperty(text)\n        self.scalarbarwidget = vtk.vtkScalarBarWidget()\n        self.scalarbarwidget.ResizableOff()\n        self.scalarbarwidget.RepositionableOff()\n        self.scalarbarwidget.GetScalarBarRepresentation().SetScalarBarActor(self.scalarbar)\n        self.scalarbarwidget.GetScalarBarRepresentation().PickableOff()\n        self.scalarbarwidget.GetScalarBarRepresentation().SetPosition(0.9, 0.4)\n        self.scalarbarwidget.GetScalarBarRepresentation().SetOrientation(1)\n\n    def screenshot(self):\n        sshot = QScreen.grabWindow(self.display.winId())\n        sshot.save(\'/tmp/cg_look-vtkview.png\', \'png\')\n\n    def findObjectPath(self, selected):\n        return self._parser.getPathFromObject(selected)\n\n    def findPathObject(self, path):\n        if path in self._cacheActor:\n            return self._cacheActor[path]\n        alist = self._vtkren.GetActors()\n        alist.InitTraversal()\n        a = alist.GetNextItem()\n        while a:\n            if path == self.findObjectPath(a.GetMapper().GetInput()):\n                self._cacheActor[path] = a\n                return a\n            a = alist.GetNextItem()\n        return None\n\n    def findObjectDims(self, selected):\n        return self._parser.getDimsFromObject(selected)\n\n    #  def leave(self):\n    #    self._wtop.destroy()\n    #    print self._parent._vtkwindow\n    #    self._parent._vtkwindow=None\n    #\n    #  def onexit(self):\n    #    self._control._control.delTreeView(self._viewid,\n    #                                       self._fgprint.filedir,\n    #                                       self._fgprint.filename)\n    #    self.leave()\n\n    def addMarker(self):\n        axes = vtk.vtkAxesActor()\n        axes.SetShaftTypeToLine()\n        axes.SetTotalLength(1, 1, 1)\n\n        self.widget = vtk.vtkOrientationMarkerWidget()\n        self.widget.SetOutlineColor(0.93, 0.57, 0.13)\n        self.widget.SetOrientationMarker(axes)\n        self.widget.SetViewport(0, 0, 0.25, 0.25)\n\n        xLabel = axes.GetXAxisCaptionActor2D()\n        xLabel.SetCaption(""X"")\n        xprop = vtk.vtkTextProperty()\n        xprop.SetFontSize(3)\n        xLabel.SetCaptionTextProperty(xprop)\n        xLabel.SetAttachmentPoint(0.75, 0.2, 0)\n        xLabel.LeaderOff()\n        xLabel.BorderOff()\n        xLabel.GetProperty().SetColor(self.color)\n        xLabel.SetPosition(0, 0)\n\n        yLabel = axes.GetYAxisCaptionActor2D()\n        yLabel.SetCaption(""Y"")\n        yprop = vtk.vtkTextProperty()\n        yprop.SetFontSize(3)\n        yLabel.SetCaptionTextProperty(yprop)\n        yLabel.SetAttachmentPoint(0.2, 0.75, 0)\n        yLabel.LeaderOff()\n        yLabel.BorderOff()\n        yLabel.GetProperty().SetColor(self.color)\n        yLabel.SetPosition(0, 0)\n\n        zLabel = axes.GetZAxisCaptionActor2D()\n        zLabel.SetCaption(""Z"")\n        zprop = vtk.vtkTextProperty()\n        zprop.SetFontSize(3)\n        zLabel.SetCaptionTextProperty(zprop)\n        zLabel.SetAttachmentPoint(0, 0.2, 0.75)\n        zLabel.LeaderOff()\n        zLabel.BorderOff()\n        zLabel.GetProperty().SetColor(self.color)\n        zLabel.SetPosition(0, 0)\n\n        self.xLabel = xLabel\n        self.yLabel = yLabel\n        self.zLabel = zLabel\n\n    def colourLabel(self):\n        self.xLabel.GetProperty().SetColor(self.color)\n        self.yLabel.GetProperty().SetColor(self.color)\n        self.zLabel.GetProperty().SetColor(self.color)\n        self.scalarbar.GetLabelTextProperty().SetColor(self.color)\n        self.scalarbar.GetTitleTextProperty().SetColor(self.color)\n        self.textwidget.GetTextActor().GetTextProperty().SetColor(self.color)\n\n    def wire(self):\n        actors = self._vtkren.GetActors()\n        actors.InitTraversal()\n        actor = actors.GetNextItem()\n        while actor:\n            actor.GetProperty().SetRepresentationToWireframe()\n            actor.GetProperty().EdgeVisibilityOff()\n            actor = actors.GetNextItem()\n\n    def addPicker(self):\n        txtActor = vtk.vtkActor2D()\n        self.txtMapper = vtk.vtkTextMapper()\n        txtActor.SetMapper(self.txtMapper)\n        self.textActor = vtk.vtkTextActor()\n        self.textActor.VisibilityOff()\n        self.textActor.PickableOff()\n        tprop = vtk.vtkTextProperty()\n        tprop.SetFontFamilyToArial()\n        tprop.SetFontSize(10)\n        tprop.BoldOff()\n        tprop.ShadowOff()\n        tprop.SetColor(self.color)\n        self.textActor.SetTextProperty(tprop)\n        self.picker = vtk.vtkCellPicker()\n        self.picker.SetTolerance(0.001)\n        self.picker.AddObserver(""EndPickEvent"", self.annotatePick)\n        self.textrepresentation = vtk.vtkTextRepresentation()\n        self.textrepresentation.GetPositionCoordinate().SetCoordinateSystem(3)\n        self.textwidget = vtk.vtkTextWidget()\n        self.textwidget.SetRepresentation(self.textrepresentation)\n        self.textwidget.SetTextActor(self.textActor)\n        self.textwidget.SelectableOff()\n        self.textwidget.ResizableOff()\n\n    def annotatePick(self, obj, event):\n        if self.wact == 1:\n            self.wire()\n            self.wact = 0\n        if self.controlKey != 1:\n            self._selected = []\n            self.PropPicked = 0\n        if self.picker.GetCellId() < 0:\n            self.textActor.VisibilityOff()\n            self.textwidget.Off()\n            self.highlightProp = 0\n        else:\n            pickAct = self.picker.GetActors()\n            pickAct.InitTraversal()\n            a = pickAct.GetNextItem()\n            t = \'\'\n            s = None\n            while a:\n                x = a.GetMapper().GetInput()\n                s = self.findObjectPath(x)\n                t += s + \'\\n\'\n                self._selected += [[s, a]]\n                a = pickAct.GetNextItem()\n            self.txtMapper.SetInput(t)\n            sz = self._iren.GetRenderWindow().GetSize()[1]\n            y = sz - self.txtMapper.GetHeight(self._vtkren) - 10.\n            h = y / sz\n            self.textActor.VisibilityOn()\n            self.textActor.SetInput(t)\n            self.textActor.SetTextScaleModeToNone()\n            self.textActor.GetTextProperty().SetJustificationToLeft()\n            self.textrepresentation.SetPosition(0.02, h)\n            self.textwidget.On()\n            self.PropPicked = 0\n            self.controlKey = 0\n            self.highlightProp = 1\n\n    def wCGNSTreeParse(self, tree, zlist):\n        self._parser = Mesh(tree, zlist)\n        self._T(\'Parse data for VTK display\')\n        if not self._parser._status:\n            MSG.wError(self._control, 500, \'Cannot create VTK view\',\n                       \'No data or bad data for a VTK display\')\n            return False\n        return True\n\n    def wCGNSTreeActors(self, tree, zlist):\n        o = vtk.vtkObject()\n        o.SetGlobalWarningDisplay(0)\n        del o\n\n        self._vtk = self.display\n        self._vtk.setParent(self)\n        self._vtkren = vtk.vtkRenderer()\n\n        self.addMarker()\n        self._vtkwin = self._vtk.GetRenderWindow()\n        self._vtkwin.SetNumberOfLayers(1)\n\n        self._vtk.GetRenderWindow().AddRenderer(self._vtkren)\n\n        self._selected = []\n        alist = self._parser.createActors()\n        for act in alist:\n            if act[3] not in self._cacheActor:\n                self._cacheActor[act[3]] = act[0]\n        variables = []\n        if alist != []:\n            grid = vtk.vtkStructuredGrid.SafeDownCast(alist[0][2])\n            if grid:\n                for i in range(grid.GetCellData().GetNumberOfArrays()):\n                    variables += [grid.GetCellData().GetArray(i).GetName()]\n            for a in alist:\n                self._vtkren.AddActor(a[0])\n                if a[1] is not None:\n                    if self._xmin > a[1][0]:\n                        self._xmin = a[1][0]\n                    if self._ymin > a[1][2]:\n                        self._ymin = a[1][2]\n                    if self._zmin > a[1][4]:\n                        self._zmin = a[1][4]\n                    if self._xmax < a[1][1]:\n                        self._xmax = a[1][1]\n                    if self._ymax < a[1][3]:\n                        self._ymax = a[1][3]\n                    if self._zmax < a[1][5]:\n                        self._zmax = a[1][5]\n        self.setVariable(variables)\n        self._vtkren.SetBackground(1, 1, 1)\n        self._vtkren.GetActiveCamera().ParallelProjectionOn()\n        self._vtkren.ResetCamera()\n\n        (self.vx, self.vy, self.vz) = self._vtkren.GetActiveCamera().GetViewUp()\n        (self.cx, self.cy, self.cz) = self._vtkren.GetActiveCamera().GetFocalPoint()\n        (self.px, self.py, self.pz) = self._vtkren.GetActiveCamera().GetPosition()\n        (self.sx, self.sy, self.sz) = (0., 0., 0.)\n        (self.ox, self.oy, self.oz) = (0., 0., 0.)\n\n        self._ctxt = wVTKContext(self._vtkren.GetActiveCamera())\n        self._ctxt.setViewUp(self.vx, self.vy, self.vz)\n        self._ctxt.setFocalPoint(self.cx, self.cy, self.cz)\n        self._ctxt.setPosition(self.px, self.py, self.pz)\n        self.LookupTable()\n        self.addPicker()\n        self._istyle = Q7InteractorStyle(self)\n        self._vtk.SetInteractorStyle(self._istyle)\n        self._iren = self._istyle.GetInteractor()\n        self.scalarbarwidget.SetInteractor(self._iren)\n        self.textwidget.SetInteractor(self._iren)\n        self.widget.SetInteractor(self._iren)\n        self.widget.On()\n        self.widget.InteractiveOff()\n        self.planeWidget = vtk.vtkImplicitPlaneWidget()\n        self.planeWidget.SetInteractor(self._iren)\n        self.fillCurrentPath()\n        #      self.fillCurrentFamily()\n\n        self._vtkren.AddObserver(""StartEvent"", self.posWidgets)\n        self.setCameraMode()\n        self._p_wire = True\n        self.setColors(True)\n\n        self._bindings = {\'s\': self.b_surf,\n                          \'S\': self.b_surf,\n                          \'q\': self.b_surfwire,\n                          \'Q\': self.b_surfwire,\n                          \'a\': self.wireActor,\n                          \'A\': self.wireActor,\n                          \'w\': self.b_wire,\n                          \'W\': self.b_wire,\n                          \'r\': self.resetCam,\n                          \'R\': self.resetCam,\n                          \'u\': self.b_reset,\n                          \'U\': self.b_reset,\n                          \'d\': self.hideActor,\n                          \'D\': self.hideActor}\n\n        return self._vtk.GetRenderWindow()\n\n    def b_shufflecolors(self, pos=None):\n        self.setColors(True)\n\n    def b_blackandwhite(self, pos=None):\n        self.setColors()\n\n    def getRandomColor(self):\n        clst = OCTXT._ColorList\n        cl = clst[list(clst)[random.randrange(len(list(clst)))]]\n        return cl\n\n    def setColors(self, randcolors=False):\n        if not randcolors:\n            if self._blackonwhite:\n                self._vtkren.SetBackground(1, 1, 1)\n                self.color = (0, 0, 0)\n                self.colourLabel()\n                cl = (0, 0, 0)\n            else:\n                self._vtkren.SetBackground(0, 0, 0)\n                self.color = (1, 1, 1)\n                self.colourLabel()\n                cl = (1, 1, 1)\n            self._blackonwhite = not self._blackonwhite\n        actors = self._vtkren.GetActors()\n        actors.InitTraversal()\n        actor = actors.GetNextItem()\n        while actor:\n            if randcolors:\n                cl = self.getRandomColor()\n            actor.GetProperty().SetColor(cl)\n            actor = actors.GetNextItem()\n        if self.OutlineActor is not None:\n            self.OutlineActor.GetProperty().SetColor(0, 1, 1)\n        if self.highlightProp == 1:\n            color = self._currentactor[1].GetProperty().GetColor()\n            self._currentactor[1].GetProperty().SetColor(1, 0, 0)\n            self._currentactor[2] = color\n        else:\n            self._currentactor = None\n        if self.actorpt is not None:\n            self.actorpt.GetProperty().SetColor(0, 1, 0)\n        self._iren.Render()\n\n    def b_update_from(self):\n        self.busyCursor()\n        self._selected = []\n        for pth in self._parser.getPathList():\n            if pth in self._parent.model().getSelected(True):\n                self._selected.append([pth, self.findPathObject(pth)])\n        if len(self._selected) > 1:\n            MSG.wInfo(self, 503, ""VTK view selections"",\n                      """"""Only the first marked object in tree view would be\n                      selected in the VTK view. That could be one of the\n                      Family_t, Zone_t or BC_t SIDS type node."""""")\n        for s in self._selected:\n            self.changeCurrentActor(s)\n            break  # todo: allow multiple selections\n        self.readyCursor()\n\n    def b_update_to(self):\n        self.busyCursor()\n        self.textActor.VisibilityOff()\n        ptmp = set()\n        stmp = []\n        for i in self._selected:\n            if i[0] not in ptmp:\n                ptmp.add(i[0])\n                stmp.append(i)\n        self._selected = stmp\n        self.updateSelectedFromVTK()\n        self.fillCurrentPath()\n        self.readyCursor()\n\n    def b_reset(self, *args):\n        self._selected = []\n        for i in self._hidden:\n            i[1].VisibilityOn()\n        self._hidden = []\n        self._selected = []\n        self.textActor.VisibilityOff()\n        self.changeCurrentActor([None, None])\n        self.fillCurrentPath()\n\n    def b_next(self):\n        if len(self._selected) > 0:\n            self._selected = self._selected[1:] + [self._selected[0]]\n            self.PropPicked = 1\n            self.changeCurrentActor(self._selected[0], False)\n            return self._selected[0]\n\n    def b_prev(self):\n        if len(self._selected) > 0:\n            self._selected = [self._selected[-1]] + self._selected[0:-1]\n            self.PropPicked = 1\n            self.changeCurrentActor(self._selected[0], False)\n\n    def b_loadview(self, name=None):\n        vname = self.cViews.currentText()\n        if vname in self._camera:\n            (vu, cr, p, fp, va, ps, pj) = self._camera[vname]\n            camera = self._vtkren.GetActiveCamera()\n            camera.SetViewUp(vu)\n            camera.SetClippingRange(cr)\n            camera.SetPosition(p)\n            camera.SetFocalPoint(fp)\n            camera.SetViewAngle(va)\n            camera.SetParallelScale(ps)\n            camera.SetParallelProjection(pj)\n            self._iren.Render()\n\n    def updateViewList(self):\n        k = list(self._camera)\n        k.sort()\n        self.cViews.clear()\n        self.cViews.addItem("""")\n        for i in k:\n            self.cViews.addItem(i)\n        self.cViews.setCurrentIndex(0)\n\n    def b_delview(self, name=None):\n        name = str(self.cViews.currentText())\n        if (name == """") or (name not in self._camera):\n            return\n        del self._camera[name]\n        self.updateViewList()\n\n    def b_saveview(self, name=None):\n        camera = self._vtkren.GetActiveCamera()\n        name = str(self.cViews.currentText())\n        if (name == """") or (name in self._camera):\n            return\n        self._camera[name] = (camera.GetViewUp(),\n                              camera.GetClippingRange(),\n                              camera.GetPosition(),\n                              camera.GetFocalPoint(),\n                              camera.GetViewAngle(),\n                              camera.GetParallelScale(),\n                              camera.GetParallelProjection()\n                              )\n        self.updateViewList()\n\n    def b_refresh(self, pos):\n        self._vtk.GetRenderWindow().Render()\n\n    def b_saveVTK(self, *args):\n        w = vtk.vtkGenericDataObjectWriter()\n        w.SetFileName(\'/tmp/Foo.vtk\')\n        actors = self._vtkren.GetActors()\n        actors.InitTraversal()\n        actor = actors.GetNextItem()\n        while actor:\n            if VTK_VERSION_MAJOR < 8:\n                raise RuntimeError(""VTK version is too old, please upgrade"")\n            w.SetInputData(actor.GetMapper().GetInput())\n            actor = actors.GetNextItem()\n        w.Write()\n\n    def b_xaxis(self, pos=None):\n        if self.cMirror.isChecked():\n            self.setAxis(pos, -1)\n        else:\n            self.setAxis(pos, 1)\n\n    def b_yaxis(self, pos=None):\n        if self.cMirror.isChecked():\n            self.setAxis(pos, -2)\n        else:\n            self.setAxis(pos, 2)\n\n    def b_zaxis(self, pos=None):\n        if self.cMirror.isChecked():\n            self.setAxis(pos, -3)\n        else:\n            self.setAxis(pos, 3)\n\n    def changeCurrentFamily(self, *args):\n        print(args)\n\n    def fillCurrentFamily(self):\n        self.cFamilies.clear()\n        #      sel=[n[0] for n in self._fselected]\n        #      hid=[n[0] for n in self._fhidden]\n        self.cFamilies.addItem(self._epix, \'\')\n        for i in self._parser.getFamilyList():\n            pix = self._npix\n            #          if (i in sel): pix=self._spix\n            #          if (i in hid): pix=self._hpix\n            self.cFamilies.addItem(pix, i)\n        self.cFamilies.model().sort(0)\n        self._iren.Render()\n\n    def setCurrentFamily(self, family):\n        pass\n\n    def changeCurrentPath(self, *args):\n        path = self.cCurrentPath.currentText()\n        if path == \'\':\n            return\n        if self.PropPicked == 1:\n            self.PropPicked = 0\n            return\n        actor = self.findPathObject(path)\n        self.changeCurrentActor([path, actor])\n\n    def setCurrentPath(self, path):\n        ix = self.cCurrentPath.findText(path)\n        if ix != -1:\n            self.cCurrentPath.setCurrentIndex(ix)\n\n    def fillCurrentPath(self):\n        self.cCurrentPath.clear()\n        sel = [n[0] for n in self._selected]\n        hid = [n[0] for n in self._hidden]\n        self.cCurrentPath.addItem(self._epix, \'\')\n        pthlist = []\n        if self.cShowZone.isChecked():\n            pthlist += [\'Zone\']\n        if self.cShowCT.isChecked():\n            pthlist += [\'CT\']\n        if self.cShowBC.isChecked():\n            pthlist += [\'BC\']\n        if self.cShowFamily.isChecked():\n            pthlist += [\'Family\']\n        for i in self._parser.getPathList(pthlist):\n            pix = self._npix\n            if i in sel:\n                pix = self._spix\n            if i in hid:\n                pix = self._hpix\n            self.cCurrentPath.addItem(pix, i)\n        self.cCurrentPath.model().sort(0)\n        self._iren.Render()\n\n    def reverseSelection(self):\n        selected = []\n        selection = []\n        hidden = []\n        for i in self._selected:\n            selected.append(i[0])\n        for i in self._hidden:\n            hidden.append(i[0])\n        for i in self._parser.getPathList():\n            if (i not in selected) and (i not in hidden):\n                selection.append([i, self.findPathObject(i)])\n        self._selected = selection\n        actor = self.b_next()\n        path = actor[0]\n        self.fillCurrentPath()\n        if path is not None:\n            self.setCurrentPath(path)\n\n    def setAxis(self, pos, iaxis):\n        camera = self._vtkren.GetActiveCamera()\n        fp = camera.GetFocalPoint()\n        pos = camera.GetPosition()\n        distance = NPY.sqrt((fp[0] - pos[0]) * (fp[0] - pos[0])\n                            + (fp[1] - pos[1]) * (fp[1] - pos[1])\n                            + (fp[2] - pos[2]) * (fp[2] - pos[2]))\n        if iaxis == 1:\n            (vx, vy, vz) = (0., 0., 1.)\n            (px, py, pz) = (fp[0] + distance, fp[1], fp[2])\n        elif iaxis == 2:\n            (vx, vy, vz) = (0., 0., 1.)\n            (px, py, pz) = (fp[0], fp[1] + distance, fp[2])\n        elif iaxis == 3:\n            (vx, vy, vz) = (0., 1., 0.)\n            (px, py, pz) = (fp[0], fp[1], fp[2] + distance)\n        elif iaxis == -1:\n            (vx, vy, vz) = (0., 0., 1.)\n            (px, py, pz) = (fp[0] - distance, fp[1], fp[2])\n        elif iaxis == -2:\n            (vx, vy, vz) = (0., 0., 1.)\n            (px, py, pz) = (fp[0], fp[1] - distance, fp[2])\n        elif iaxis == -3:\n            (vx, vy, vz) = (0., 1., 0.)\n            (px, py, pz) = (fp[0], fp[1], fp[2] - distance)\n        camera.SetViewUp(vx, vy, vz)\n        camera.SetPosition(px, py, pz)\n        self._vtkren.ResetCameraClippingRange()\n        self._vtkren.Render()\n        self._vtkren.ResetCamera()\n        self._iren.Render()\n        self._ctxt = wVTKContext(camera)\n        self._ctxt.setViewUp(vx, vy, vz)\n        self._ctxt.setPosition(px, py, pz)\n\n    def b_surf(self, pos):\n        if not self._p_wire:\n            self.b_wire(pos)\n            return\n        self._p_wire = False\n        actors = self._vtkren.GetActors()\n        actors.InitTraversal()\n        actor = actors.GetNextItem()\n        while actor:\n            actor.GetProperty().SetRepresentationToSurface()\n            actor.GetProperty().EdgeVisibilityOff()\n            actor = actors.GetNextItem()\n        self._vtk.GetRenderWindow().Render()\n\n    def posWidgets(self, *args):\n        if self._iren is not None:\n            sz = self._iren.GetRenderWindow().GetSize()\n            self.posScalarBar(sz)\n\n    def posScalarBar(self, sz):\n        if self.scalarbarwidget.GetEnabled() == 1:\n            if self.scalarbarwidget.GetScalarBarActor().GetOrientation() == 1:\n                self.scalarbarwidget.GetScalarBarRepresentation().SetPosition2(0.07 * 781 / sz[0], 0.6 * 554 / sz[1])\n            else:\n                self.scalarbarwidget.GetScalarBarRepresentation().SetPosition2(0.6 * 781 / sz[0], 0.07 * 554 / sz[1])\n            pos2 = self.scalarbarwidget.GetScalarBarRepresentation().GetPosition2()\n            pos = self.scalarbarwidget.GetScalarBarRepresentation().GetPosition()\n            pos = list(pos)\n            if pos[0] <= 0:\n                pos[0] = 0\n            if pos[1] <= 0:\n                pos[1] = 0\n            if (pos2[1] + pos[1]) >= 1:\n                pos[1] = 1 - pos2[1]\n                self.scalarbarwidget.GetScalarBarRepresentation().SetPosition(pos[0], 1.2 - pos2[1])\n            if (pos2[0] + pos[0]) >= 1.01:\n                pos[0] = 1.01 - pos2[0]\n            self.scalarbarwidget.GetScalarBarRepresentation().SetPosition(pos[0], pos[1])\n\n    def b_surfwire(self, pos):\n        if not self._p_wire:\n            self.b_wire(pos)\n            return\n        self._p_wire = False\n        actors = self._vtkren.GetActors()\n        actors.InitTraversal()\n        actor = actors.GetNextItem()\n        while actor:\n            actor.GetProperty().SetRepresentationToSurface()\n            actor.GetProperty().EdgeVisibilityOn()\n            actor = actors.GetNextItem()\n        if self.OutlineActor is not None:\n            self.OutlineActor.GetProperty().EdgeVisibilityOff()\n        self._vtk.GetRenderWindow().Render()\n\n    def b_wire(self, pos):\n        if self._p_wire:\n            self.b_surf(pos)\n            return\n        self._p_wire = True\n        actors = self._vtkren.GetActors()\n        actors.InitTraversal()\n        actor = actors.GetNextItem()\n        while actor:\n            actor.GetProperty().SetRepresentationToWireframe()\n            actor = actors.GetNextItem()\n        self._vtk.GetRenderWindow().Render()\n\n    def wireActor(self, pos):\n        if not self._selected:\n            return\n        self.wire()\n        for i in self._selected:\n            i[1].GetProperty().SetRepresentationToSurface()\n            i[1].GetProperty().EdgeVisibilityOff()\n        self._vtk.GetRenderWindow().Render()\n        self.wact = 1\n\n    def hideActor(self, pos):\n        if self._currentactor is not None:\n            if self._currentactor[0:2] in self._selected:\n                self._currentactor[1].VisibilityOff()\n                #              self._currentactor[3].VisibilityOff() ### FIXME\n                self._selected.remove(self._currentactor[0:2])\n                self._hidden.append(self._currentactor[0:2])\n                actor = self.b_next()\n                self.fillCurrentPath()\n                if actor is not None:\n                    s = self.findObjectPath(actor[1].GetMapper().GetInput())\n                    if s is not None:\n                        self.setCurrentPath(s)\n                else:\n                    self.changeCurrentActor([None, None])\n\n    def resetCam(self, pos):\n        self._vtkren.ResetCamera()\n        self._iren.Render()\n\n    def reject(self):\n        # some blocking cases may lead to a not-already defined self._master\n        # thus closing the window raises an AttributeError\n        if self._vtk is not None:\n            self._vtk.GetRenderWindow().Finalize()\n        self._master._vtkwindow = None\n\n    def changeCurrentActor(self, act, combo=True):\n        self._selected = []\n        self._lastSelectedType = None\n        self._lastSelectedTag = \'\'\n        if act[1] is not None and not act[1].alone():\n            self._lastSelectedType = act[1].topo()\n            self._lastSelectedTag = act[1].tag()\n            atpl = []\n            plst = act[1].GetParts()\n            plst.InitTraversal()\n            a = plst.GetNextItemAsObject()\n            while a:\n                self._selected += [[a.path(), a]]\n                atpl += [(act[0], a)]\n                a = plst.GetNextItemAsObject()\n        else:\n            atpl = [act]\n            if act[1] is not None:\n                self._lastSelectedType = act[1].topo()\n        self.resetSpinBox()\n        if self.planeWidget is not None:\n            if self.planeWidget.GetEnabled() == 1:\n                self.planeWidget.Off()\n            if self.planeActor is not None:\n                self._vtkren.RemoveActor(self.planeActor)\n        if self.actorpt is not None:\n            self._vtkren.RemoveActor(self.actorpt)\n        if self._currentactor is not None:\n            if type(self._currentactor[2]) != list:\n                lact = [(self._currentactor[3], self._currentactor[2])]\n            else:\n                lact = self._currentactor\n            if ((lact is not None) and\n                    (type(lact) == list) and\n                    (lact[0] is not None)):\n                for (col, act) in lact[2]:\n                    self._vtkren.RemoveActor(act)\n                    act.GetProperty().SetColor(col)\n                    act.GetProperty().SetLineWidth(1.0)\n        aclist = []\n        for atp in atpl:\n            path = atp[0]\n            actor = atp[1]\n            if not combo:\n                self.setCurrentPath(path)\n            if actor is None:\n                self.cCurrentPath.setCurrentIndex(0)\n                if None not in [self.PickedRenderer, self.OutlineActor]:\n                    self.PickedRenderer.RemoveActor(self.OutlineActor)\n                    self.PickedRenderer = None\n                    self.CurrentRenderer.Render()\n                    self.CurrentRenderer.GetRenderWindow().Render()\n                return\n            self.grid_dims = self.findObjectDims(actor.GetMapper().GetInput())\n            color = actor.GetProperty().GetColor()\n            actor2 = vtk.vtkActor()\n            actor2.ShallowCopy(actor)\n            actor2.PickableOff()\n            actor2.DragableOff()\n            actor2.GetProperty().SetColor(*self.selectionColor)\n            actor2.GetProperty().SetLineWidth(3.0)\n            self._vtkren.AddActor(actor2)\n            self.CurrentRenderer = self._vtkren\n            self.Outline = vtk.vtkStructuredGridOutlineFilter()\n            self.OutlineMapper = vtk.vtkPolyDataMapper()\n            if VTK_VERSION_MAJOR < 8:\n                raise RuntimeError(""VTK version is too old, please upgrade"")\n            self.Outline.SetInputData(actor2.GetMapper().GetInput())\n            self.OutlineMapper.SetInputConnection(self.Outline.GetOutputPort())\n            if None not in [self.PickedRenderer, self.OutlineActor]:\n                self.PickedRenderer.RemoveActor(self.OutlineActor)\n                self.PickedRenderer = None\n            if actor is not None:\n                self.OutlineActor = vtk.vtkActor()\n                self.OutlineActor.PickableOff()\n                self.OutlineActor.DragableOff()\n                self.OutlineActor.SetMapper(self.OutlineMapper)\n                self.OutlineActor.GetProperty().SetColor(*self.selectionColor)\n                self.OutlineActor.GetProperty().SetAmbient(1.0)\n                self.OutlineActor.GetProperty().SetDiffuse(0.0)\n                self.OutlineActor.GetProperty().SetLineWidth(3.0)\n                self.OutlineActor.SetScale(1.01, 1.01, 1.01)\n                if self.CurrentRenderer != self.PickedRenderer:\n                    if None not in [self.PickedRenderer, self.OutlineActor]:\n                        self.PickedRenderer.RemoveActor(self.OutlineActor)\n                    self.CurrentRenderer.AddActor(self.OutlineActor)\n                    self.PickedRenderer = self.CurrentRenderer\n                aclist += [(color, actor2)]\n        self._iren.Render()\n        self._currentactor = [path, actor, aclist]\n\n    def highlightPoint(self, *args):\n        actor = self._currentactor[1]\n        if actor is None:\n            return\n        grid = actor.GetMapper().GetInput()\n        tgrid = self.grid_dims[0]\n        if tgrid == 0:\n            i = self.sIndex1.value()\n            j = self.sIndex2.value()\n            k = self.sIndex3.value()\n            self.s_highlightPoint(grid, (i, j, k))\n        if tgrid == 2:\n            i = self.sIndex1.value()\n            self.uns_highlightPoint(grid, i)\n        if tgrid == 1:\n            ptid = self.sIndex1.value() - 1\n            self.selectionPointId(grid, ptid)\n\n    def s_highlightPoint(self, grid, index):\n        if self.actorpt is not None:\n            self._vtkren.RemoveActor(self.actorpt)\n        if grid is None:\n            return\n        (i, j, k) = index\n        filter = vtk.vtkStructuredGridGeometryFilter()\n        if VTK_VERSION_MAJOR < 8:\n            raise RuntimeError(""VTK version is too old, please upgrade"")\n        filter.SetInputData(grid)\n        filter.SetExtent(i - 1, i - 1, j - 1, j - 1, k - 1, k - 1)\n        mapper = vtk.vtkPolyDataMapper()\n        mapper.SetInputConnection(filter.GetOutputPort())\n        self.actorpt = vtk.vtkActor()\n        self.actorpt.SetMapper(mapper)\n        self.actorpt.GetProperty().SetColor(0, 1, 0)\n        self.actorpt.GetProperty().SetPointSize(6)\n        self.actorpt.PickableOff()\n        self.actorpt.DragableOff()\n        self._vtkren.AddActor(self.actorpt)\n        self._iren.Render()\n\n    def uns_highlightPoint(self, grid, cellid):\n        if self.actorpt is not None:\n            self._vtkren.RemoveActor(self.actorpt)\n        if grid is None:\n            return\n        filter = vtk.vtkUnstructuredGridGeometryFilter()\n        if VTK_VERSION_MAJOR < 6:\n            filter.SetInput(grid)\n        else:\n            filter.SetInputData(grid)\n        filter.CellClippingOn()\n        filter.SetCellMinimum(cellid)\n        filter.SetCellMaximum(cellid)\n        mapper = vtk.vtkDataSetMapper()\n        mapper.SetInputConnection(filter.GetOutputPort())\n        self.actorpt = vtk.vtkActor()\n        self.actorpt.SetMapper(mapper)\n        self.actorpt.GetProperty().SetColor(0, 1, 0)\n        self.actorpt.GetProperty().SetLineWidth(2)\n        self.actorpt.GetProperty().SetRepresentationToWireframe()\n        self.actorpt.PickableOff()\n        self.actorpt.DragableOff()\n        self._vtkren.AddActor(self.actorpt)\n        self._iren.Render()\n\n    def selectionCellId(self, grid, ptid):\n        if self.actorpt is not None:\n            self._vtkren.RemoveActor(self.actorpt)\n        if grid is None:\n            return\n        ids = vtk.vtkIdTypeArray()\n        ids.SetNumberOfComponents(1)\n        ids.InsertNextValue(ptid)\n        selectionNode = vtk.vtkSelectionNode()\n        selectionNode.SetFieldType(0)\n        selectionNode.SetContentType(4)\n        selectionNode.SetSelectionList(ids)\n        selection = vtk.vtkSelection()\n        selection.AddNode(selectionNode)\n        extractSelection = vtk.vtkExtractSelection()\n        if VTK_VERSION_MAJOR < 8:\n            raise RuntimeError(""VTK version is too old, please upgrade"")\n        extractSelection.SetInputData(0, grid)\n        extractSelection.SetInputData(1, selection)\n        extractSelection.Update()\n        selected = vtk.vtkUnstructuredGrid()\n        selected.ShallowCopy(extractSelection.GetOutput())\n        selectedMapper = vtk.vtkDataSetMapper()\n        if VTK_VERSION_MAJOR < 8:\n            raise RuntimeError(""VTK version is too old, please upgrade"")\n        selectedMapper.SetInputData(selected)\n        self.actorpt = vtk.vtkActor()\n        self.actorpt.SetMapper(selectedMapper)\n        self.actorpt.GetProperty().SetColor(0, 1, 0)\n        self.actorpt.GetProperty().SetPointSize(6)\n        self.actorpt.PickableOff()\n        self.actorpt.DragableOff()\n        self._vtkren.AddActor(self.actorpt)\n        self._iren.Render()\n\n    def selectionPointId(self, grid, ptid):\n        if self.actorpt is not None:\n            self._vtkren.RemoveActor(self.actorpt)\n        if grid is None:\n            return\n        ids = vtk.vtkIdTypeArray()\n        ids.SetNumberOfComponents(1)\n        ids.InsertNextValue(ptid)\n        selectionNode = vtk.vtkSelectionNode()\n        selectionNode.SetFieldType(1)\n        selectionNode.SetContentType(4)\n        selectionNode.SetSelectionList(ids)\n        selection = vtk.vtkSelection()\n        selection.AddNode(selectionNode)\n        extractSelection = vtk.vtkExtractSelection()\n        if VTK_VERSION_MAJOR < 8:\n            raise RuntimeError(""VTK version is too old, please upgrade"")\n        extractSelection.SetInputData(0, grid)\n        extractSelection.SetInputData(1, selection)\n        extractSelection.Update()\n        selected = vtk.vtkUnstructuredGrid()\n        selected.ShallowCopy(extractSelection.GetOutput())\n        selectedMapper = vtk.vtkDataSetMapper()\n        if VTK_VERSION_MAJOR < 8:\n            raise RuntimeError(""VTK version is too old, please upgrade"")\n        selectedMapper.SetInputData(selected)\n        self.actorpt = vtk.vtkActor()\n        self.actorpt.SetMapper(selectedMapper)\n        self.actorpt.GetProperty().SetColor(0, 1, 0)\n        self.actorpt.GetProperty().SetPointSize(6)\n        self.actorpt.PickableOff()\n        self.actorpt.DragableOff()\n        self._vtkren.AddActor(self.actorpt)\n        self._iren.Render()\n\n    def setIndexPoint3(self, grid, index):\n        (i, j, k) = index\n        (idim, jdim, kdim) = self.grid_dims[1]\n        self.sIndex1.blockSignals(True)\n        self.sIndex2.blockSignals(True)\n        self.sIndex3.blockSignals(True)\n        self.sIndex1.setRange(1, idim)\n        self.sIndex1.setSingleStep(1)\n        self.sIndex2.setRange(1, jdim)\n        self.sIndex2.setSingleStep(1)\n        self.sIndex3.setRange(1, kdim)\n        self.sIndex3.setSingleStep(1)\n        self.sIndex1.setValue(i)\n        self.sIndex2.setValue(j)\n        self.sIndex3.setValue(k)\n        self.sIndex1.blockSignals(False)\n        self.sIndex2.blockSignals(False)\n        self.sIndex3.blockSignals(False)\n        self.s_highlightPoint(grid, index)\n\n    def setIndexCell1(self, grid, index):\n        idmax = grid.GetNumberOfCells()\n        self.sIndex1.blockSignals(True)\n        self.sIndex1.setRange(1, idmax)\n        self.sIndex1.setSingleStep(1)\n        self.sIndex1.setValue(index)\n        self.sIndex1.blockSignals(False)\n        self.uns_highlightPoint(grid, index)\n\n    def setIndexPoint1(self, grid, index):\n        idmax = grid.GetNumberOfPoints()\n        self.sIndex1.blockSignals(True)\n        self.sIndex1.setRange(1, idmax)\n        self.sIndex1.setSingleStep(1)\n        self.sIndex1.setValue(index + 1)\n        self.sIndex1.blockSignals(False)\n        self.selectionPointId(grid, index)\n\n    def setPickableOff(self):\n        actors = self._vtkren.GetActors()\n        actors.InitTraversal()\n        a = actors.GetNextActor()\n        a.PickableOff()\n        while a:\n            a.PickableOff()\n            a = actors.GetNextActor()\n        self._currentactor[1].PickableOn()\n\n    def setPickableOn(self):\n        actors = self._vtkren.GetActors()\n        actors.InitTraversal()\n        a = actors.GetNextActor()\n        a.PickableOn()\n        while a:\n            a.PickableOn()\n            a = actors.GetNextActor()\n        if self._currentactor is not None:\n            pass\n            # self._currentactor[3].PickableOff() ### FIXME\n\n    def resetSpinBox(self):\n        self.sIndex1.blockSignals(True)\n        self.sIndex2.blockSignals(True)\n        self.sIndex3.blockSignals(True)\n        self.sIndex1.setRange(0, 0)\n        self.sIndex2.setRange(0, 0)\n        self.sIndex3.setRange(0, 0)\n        self.sIndex1.setValue(0)\n        self.sIndex2.setValue(0)\n        self.sIndex3.setValue(0)\n        self.sIndex1.blockSignals(False)\n        self.sIndex2.blockSignals(False)\n        self.sIndex3.blockSignals(False)\n\n    def removeElement(self):\n        if self.actorpt is None:\n            return\n        self._vtkren.RemoveActor(self.actorpt)\n        self._iren.Render()\n        self.resetSpinBox()\n\n    def keycode(self, *args):\n        keycode = self._iren.GetKeyCode()\n        control = self._iren.GetControlKey()\n        vtkkeys = [\'f\', \'F\', \'r\', \'R\']\n        keys = [\'d\', \'D\', \'s\', \'S\', \'w\', \'W\', \'q\', \'Q\', \'a\', \'A\', \'u\', \'U\']\n        if keycode in vtkkeys:\n            self.OnChar()\n        if keycode in keys:\n            self.CharCallback()\n        if keycode in [\'z\', \'Z\', \' \']:\n            self.setPick()\n        if keycode == \'p\' or keycode == \'P\':\n            self.pickElement()\n        if control == 1:\n            self.controlKey = 1\n\n    def pickElement(self):\n        if (self._selected == []) or self.cShowValue.isChecked():\n            return\n        grid = self._currentactor[1].GetMapper().GetInput()\n        tgrid = self.grid_dims[0]\n        eventPos = self._iren.GetEventPosition()\n        if tgrid == 0:\n            pointid = self.getPointId(eventPos)\n            if pointid > -1:\n                array = grid.GetPointData().GetArray(0).GetTuple3(pointid)\n                self.setIndexPoint3(grid, array)\n            else:\n                self.removeElement()\n        if tgrid == 2:\n            cellid = self.getCellId(eventPos)\n            if cellid > -1:\n                self.setIndexCell1(grid, cellid)\n            else:\n                self.removeElement()\n        if tgrid == 1:\n            pointid = self.getPointId(eventPos)\n            if pointid > -1:\n                self.setIndexPoint1(grid, pointid)\n            else:\n                self.removeElement()\n\n    def setPick(self):\n        self.setPickableOn()\n        path = None\n        eventPos = self._iren.GetEventPosition()\n        self._iren.SetPicker(self.picker)\n        if self.picker is not None:\n            self.picker.Pick(eventPos[0], eventPos[1], 0.0, self._vtkren)\n            pathpick = self.picker.GetPath()\n            if pathpick is None:\n                self.changeCurrentActor([None, None])\n                self.OutlineActor = None\n                self.PropPicked = 0\n            else:\n                actor = pathpick.GetFirstNode().GetViewProp()\n                path = self.findObjectPath(actor.GetMapper().GetInput())\n                self.changeCurrentActor([path, actor])\n                self.PropPicked = 1\n            self.fillCurrentPath()\n            if path is not None:\n                self.setCurrentPath(path)\n\n    def getPointId(self, eventPos):\n        picker = vtk.vtkPointPicker()\n        picker.SetTolerance(0.005)\n        self._iren.SetPicker(picker)\n        self.setPickableOff()\n        picker.Pick(eventPos[0], eventPos[1], 0.0, self._vtkren)\n        pointid = picker.GetPointId()\n        return pointid\n\n    def getCellId(self, eventPos):\n        picker = vtk.vtkCellPicker()\n        picker.SetTolerance(0.001)\n        self._iren.SetPicker(picker)\n        self.setPickableOff()\n        picker.Pick(eventPos[0], eventPos[1], 0.0, self._vtkren)\n        cellid = picker.GetCellId()\n        return cellid\n\n    def CharCallback(self, *args):\n        keycode = self._iren.GetKeyCode()\n        control = self._iren.GetControlKey()\n        pos = self._iren.GetEventPosition()\n        if keycode in self._bindings:\n            self._bindings[keycode](pos)\n        if control == 1:\n            self.controlKey = 1\n        return\n\n\n# -----------------------------------------------------------------------------\nclass Q7InteractorStyle(vtk.vtkInteractorStyleTrackballCamera):\n    def __init__(self, parent):\n        self._parent = parent\n        self.AddObserver(""CharEvent"", self.keycode)\n\n    def keycode(self, *args):\n        keycode = self._parent._iren.GetKeyCode()\n        control = self._parent._iren.GetControlKey()\n        vtkkeys = [\'f\', \'F\', \'r\', \'R\']\n        keys = [\'d\', \'D\', \'s\', \'S\', \'w\', \'W\', \'q\', \'Q\', \'a\', \'A\', \'u\', \'U\']\n        if keycode in vtkkeys:\n            self.OnChar()\n        if keycode in keys:\n            self._parent.CharCallback()\n        if keycode in [\'z\', \'Z\', \' \']:\n            self._parent.setPick()\n        if keycode == \'p\' or keycode == \'P\':\n            self._parent.pickElement()\n        if keycode == \'o\' or keycode == \'O\':\n            self._parent.setCutPlane()\n        if keycode == \'t\' or keycode == \'T\':\n            self._parent.cutting()\n        if control == 1:\n            self._parent.controlKey = 1\n\n\n# -----------------------------------------------------------------------------\nclass Q7InteractorStyleTrackballObject(vtk.vtkInteractorStyle):\n    def __init__(self, parent):\n        self._parent = parent\n        self.AddObserver(""CharEvent"", self.keycode)\n        self.AddObserver(""LeftButtonPressEvent"", self.ButtonEvent)\n        self.AddObserver(""MouseMoveEvent"", self.MouseMove)\n        self.AddObserver(""RightButtonPressEvent"", self.ButtonEvent)\n        self.AddObserver(""MiddleButtonPressEvent"", self.ButtonEvent)\n        self.AddObserver(""MouseWheelForwardEvent"", self.MouseWheelForward)\n        self.AddObserver(""MouseWheelBackwardEvent"", self.MouseWheelBackward)\n\n    def MouseWheelForward(self, *args):\n        factor = pow(1.1, 2.0)\n        self.Zoom(factor)\n\n    def MouseWheelBackward(self, *args):\n        factor = pow(1.1, -2.0)\n        self.Zoom(factor)\n\n    def keycode(self, *args):\n        keycode = self._parent._iren.GetKeyCode()\n        control = self._parent._iren.GetControlKey()\n        vtkkeys = [\'f\', \'F\', \'r\', \'R\']\n        keys = [\'d\', \'D\', \'s\', \'S\', \'w\', \'W\', \'q\', \'Q\', \'a\', \'A\', \'u\', \'U\']\n        if keycode in vtkkeys:\n            self.OnChar()\n        if keycode in keys:\n            self._parent.CharCallback()\n        if keycode in [\'z\', \'Z\', \' \']:\n            self._parent.setPick()\n        if keycode == \'p\' or keycode == \'P\':\n            self._parent.pickElement()\n        if control == 1:\n            self._parent.controlKey = 1\n\n    def ButtonEvent(self, obj, event):\n        if event == ""LeftButtonPressEvent"":\n            if self._parent._iren.GetShiftKey():\n                self._parent.Panning = 1\n            elif self._parent._iren.GetControlKey():\n                self._parent.Rolling = 1\n            else:\n                self._parent.Rotating = 1\n        if event == ""RightButtonPressEvent"":\n            self._parent.Zooming = 1\n        if event == ""MiddleButtonPressEvent"":\n            self._parent.Panning = 1\n\n    def MouseMove(self, obj, event):\n        index = self._parent.cRotationAxis.currentIndex()\n        axis = {2: [1, 0, 0], 3: [0, 1, 0], 4: [0, 0, 1]}\n        if self._parent.Rotating:\n            if index == 1:\n                self.CameraModeToObjectAllAxis()\n            else:\n                self.CameraModeToObjectAxis(axis[index])\n        if self._parent.Zooming:\n            self.Dolly()\n        if self._parent.Panning:\n            self.Pan()\n        if self._parent.Rolling:\n            self.Roll()\n\n    def ComputeDisplayCenter(self):\n        if self._parent.OutlineActor is None:\n            bounds = (self._parent._xmin, self._parent._xmax, self._parent._ymin,\n                      self._parent._ymax, self._parent._zmin, self._parent._zmax)\n        else:\n            bounds = self._parent._currentactor[1].GetBounds()\n        center = [0, 0, 0]\n        center[0] = (bounds[0] + bounds[1]) / 2.0\n        center[1] = (bounds[2] + bounds[3]) / 2.0\n        center[2] = (bounds[4] + bounds[5]) / 2.0\n        self._parent._vtkren.SetWorldPoint(center[0], center[1], center[2], 1.0)\n        self._parent._vtkren.WorldToDisplay()\n        pt = self._parent._vtkren.GetDisplayPoint()\n        return pt, center\n\n    def CameraModeToObjectAxis(self, axis):\n        camera = self._parent._vtkren.GetActiveCamera()\n        transform = vtk.vtkTransform()\n        transform.Identity()\n        (pt, center) = self.ComputeDisplayCenter()\n        transform.Translate(center[0], center[1], center[2])\n        dx = self._parent._iren.GetLastEventPosition()[0] - self._parent._iren.GetEventPosition()[0]\n        dy = self._parent._iren.GetLastEventPosition()[1] - self._parent._iren.GetEventPosition()[1]\n        camera.OrthogonalizeViewUp()\n        size = self._parent._vtkren.GetSize()\n        transform.RotateWXYZ(360.0 * dx / size[0], axis[0], axis[1], axis[2])\n        transform.RotateWXYZ(360.0 * dy / size[1], axis[0], axis[1], axis[2])\n        transform.Translate(-center[0], -center[1], -center[2])\n        camera.ApplyTransform(transform)\n        camera.OrthogonalizeViewUp()\n        self._parent._vtkren.ResetCameraClippingRange()\n        self._parent._vtkren.GetRenderWindow().Render()\n\n    def CameraModeToObjectAllAxis(self):\n        camera = self._parent._vtkren.GetActiveCamera()\n        transform = vtk.vtkTransform()\n        transform.Identity()\n        (pt, center) = self.ComputeDisplayCenter()\n        transform.Translate(center[0], center[1], center[2])\n        dx = self._parent._iren.GetLastEventPosition()[0] - self._parent._iren.GetEventPosition()[0]\n        dy = self._parent._iren.GetLastEventPosition()[1] - self._parent._iren.GetEventPosition()[1]\n        camera.OrthogonalizeViewUp()\n        viewUp = camera.GetViewUp()\n        size = self._parent._vtkren.GetSize()\n        transform.RotateWXYZ(360.0 * dx / size[0], viewUp[0], viewUp[1], viewUp[2])\n        v2 = [0, 0, 0]\n        vtk.vtkMath().Cross(camera.GetDirectionOfProjection(), viewUp, v2)\n        transform.RotateWXYZ(-360.0 * dy / size[1], v2[0], v2[1], v2[2])\n        transform.Translate(-center[0], -center[1], -center[2])\n        camera.ApplyTransform(transform)\n        camera.OrthogonalizeViewUp()\n        self._parent._vtkren.ResetCameraClippingRange()\n        self._parent._vtkren.GetRenderWindow().Render()\n\n    def Dolly(self, *args):\n        camera = self._parent._vtkren.GetActiveCamera()\n        center = self._parent._vtkren.GetCenter()\n        dy = self._parent._iren.GetEventPosition()[1] - self._parent._iren.GetLastEventPosition()[1]\n        dyf = 10 * dy / center[1]\n        dollyFactor = pow(1.1, dyf)\n        self.Zoom(dollyFactor)\n\n    def Zoom(self, factor):\n        camera = self._parent._vtkren.GetActiveCamera()\n        camera.SetParallelScale(camera.GetParallelScale() / factor)\n        if self._parent._iren.GetLightFollowCamera():\n            self._parent._vtkren.UpdateLightsGeometryToFollowCamera()\n        self._parent._iren.Render()\n\n    def Pan(self, *args):\n        camera = self._parent._vtkren.GetActiveCamera()\n        motionVector = [0, 0, 0]\n        fp = camera.GetFocalPoint()\n\n        self._parent._vtkren.SetWorldPoint(fp[0], fp[1], fp[2], 1.0)\n        self._parent._vtkren.WorldToDisplay()\n        dp = self._parent._vtkren.GetDisplayPoint()\n        focalDepth = dp[2]\n        self._parent._vtkren.SetDisplayPoint(self._parent._iren.GetEventPosition()[0],\n                                             self._parent._iren.GetEventPosition()[1], focalDepth)\n        self._parent._vtkren.DisplayToWorld()\n        newPickPoint = self._parent._vtkren.GetWorldPoint()\n        self._parent._vtkren.SetDisplayPoint(self._parent._iren.GetLastEventPosition()[0],\n                                             self._parent._iren.GetLastEventPosition()[1], focalDepth)\n        self._parent._vtkren.DisplayToWorld()\n        oldPickPoint = self._parent._vtkren.GetWorldPoint()\n        motionVector[0] = oldPickPoint[0] - newPickPoint[0]\n        motionVector[1] = oldPickPoint[1] - newPickPoint[1]\n        motionVector[2] = oldPickPoint[2] - newPickPoint[2]\n\n        viewFocus = list(camera.GetFocalPoint())\n        viewPoint = list(camera.GetPosition())\n        camera.SetFocalPoint(motionVector[0] + viewFocus[0],\n                             motionVector[1] + viewFocus[1],\n                             motionVector[2] + viewFocus[2])\n\n        camera.SetPosition(motionVector[0] + viewPoint[0],\n                           motionVector[1] + viewPoint[1],\n                           motionVector[2] + viewPoint[2])\n        if self._parent._iren.GetLightFollowCamera():\n            self._parent._vtkren.UpdateLightsGeometryToFollowCamera()\n        self._parent._iren.Render()\n\n    def Roll(self, *args):\n        camera = self._parent._vtkren.GetActiveCamera()\n        transform = vtk.vtkTransform()\n        pos = camera.GetPosition()\n        fp = camera.GetFocalPoint()\n        axis = [fp[i] - pos[i] for i in range(3)]\n        (DisplayCenter, Center) = self.ComputeDisplayCenter()\n        x1 = self._parent._iren.GetLastEventPosition()[0] - int(DisplayCenter[0])\n        x2 = self._parent._iren.GetEventPosition()[0] - int(DisplayCenter[0])\n        y1 = self._parent._iren.GetLastEventPosition()[1] - int(DisplayCenter[1])\n        y2 = self._parent._iren.GetEventPosition()[1] - int(DisplayCenter[1])\n        zCross = x1 * y2 - y1 * x2\n        zCross = float(zCross)\n        angle = vtk.vtkMath().DegreesFromRadians(zCross / (math.sqrt(float(x1 * x1 + y1 * y1)) *\n                                                           math.sqrt(float(x2 * x2 + y2 * y2))))\n        transform.Identity()\n        transform.Translate(Center[0], Center[1], Center[2])\n        transform.RotateWXYZ(angle, axis[0], axis[1], axis[2])\n        transform.Translate(-Center[0], -Center[1], -Center[2])\n        camera.ApplyTransform(transform)\n        camera.OrthogonalizeViewUp()\n        self._parent._vtkren.ResetCameraClippingRange()\n        self._parent._iren.Render()\n\n        # -----------------------------------------------------------------------------\n\n\nclass Q7InteractorStyleRubberBandZoom(vtk.vtkInteractorStyleRubberBandZoom):\n    def __init__(self, parent):\n        self._parent = parent\n        self.AddObserver(""CharEvent"", self.keycode)\n        self.AddObserver(""MouseMoveEvent"", self.MouseMove)\n        self.AddObserver(""LeftButtonPressEvent"", self.ButtonEvent)\n        self.AddObserver(""RightButtonPressEvent"", self.ButtonEvent)\n        self.AddObserver(""MiddleButtonPressEvent"", self.ButtonEvent)\n        self.AddObserver(""MouseWheelForwardEvent"", self.MouseWheelForward)\n        self.AddObserver(""MouseWheelBackwardEvent"", self.MouseWheelBackward)\n\n    def MouseWheelForward(self, *args):\n        factor = pow(1.1, 2.0)\n        self.Zoom(factor)\n\n    def MouseWheelBackward(self, *args):\n        factor = pow(1.1, -2.0)\n        self.Zoom(factor)\n\n    def keycode(self, *args):\n        keycode = self._parent._iren.GetKeyCode()\n        control = self._parent._iren.GetControlKey()\n        vtkkeys = [\'f\', \'F\', \'r\', \'R\']\n        keys = [\'d\', \'D\', \'s\', \'S\', \'w\', \'W\', \'q\', \'Q\', \'a\', \'A\', \'u\', \'U\']\n        if keycode in vtkkeys:\n            self.OnChar()\n        if keycode in keys:\n            self._parent.CharCallback()\n        if keycode in [\'z\', \'Z\', \' \']:\n            self._parent.setPick()\n        if keycode == \'p\' or keycode == \'P\':\n            self._parent.pickElement()\n        if control == 1:\n            self._parent.controlKey = 1\n\n    def ButtonEvent(self, obj, event):\n        if event == ""LeftButtonPressEvent"":\n            if self._parent._iren.GetShiftKey():\n                self._parent.Panning = 1\n            elif self._parent._iren.GetControlKey():\n                self._parent.Rolling = 1\n            else:\n                self.OnLeftButtonDown()\n        if event == ""RightButtonPressEvent"":\n            self._parent.Zooming = 1\n        if event == ""MiddleButtonPressEvent"":\n            self._parent.Panning = 1\n\n    def MouseMove(self, obj, event):\n        index = self._parent.cRotationAxis.currentIndex()\n        if self._parent.Zooming:\n            self.Dolly()\n        if self._parent.Panning:\n            self.Pan()\n        if self._parent.Rolling:\n            self.Roll()\n        self.OnMouseMove()\n\n    def ComputeDisplayCenter(self):\n        if self._parent.OutlineActor is None:\n            bounds = (self._parent._xmin, self._parent._xmax, self._parent._ymin,\n                      self._parent._ymax, self._parent._zmin, self._parent._zmax)\n        else:\n            bounds = self._parent._currentactor[1].GetBounds()\n        center = [0, 0, 0]\n        center[0] = (bounds[0] + bounds[1]) / 2.0\n        center[1] = (bounds[2] + bounds[3]) / 2.0\n        center[2] = (bounds[4] + bounds[5]) / 2.0\n        self._parent._vtkren.SetWorldPoint(center[0], center[1], center[2], 1.0)\n        self._parent._vtkren.WorldToDisplay()\n        pt = self._parent._vtkren.GetDisplayPoint()\n        return pt, center\n\n    def Dolly(self, *args):\n        camera = self._parent._vtkren.GetActiveCamera()\n        center = self._parent._vtkren.GetCenter()\n        dy = self._parent._iren.GetEventPosition()[1] - self._parent._iren.GetLastEventPosition()[1]\n        dyf = 10 * dy / center[1]\n        dollyFactor = pow(1.1, dyf)\n        self.Zoom(dollyFactor)\n\n    def Zoom(self, factor):\n        camera = self._parent._vtkren.GetActiveCamera()\n        camera.SetParallelScale(camera.GetParallelScale() / factor)\n        if self._parent._iren.GetLightFollowCamera():\n            self._parent._vtkren.UpdateLightsGeometryToFollowCamera()\n        self._parent._iren.Render()\n\n    def Pan(self, *args):\n        camera = self._parent._vtkren.GetActiveCamera()\n        motionVector = [0, 0, 0]\n        fp = camera.GetFocalPoint()\n\n        self._parent._vtkren.SetWorldPoint(fp[0], fp[1], fp[2], 1.0)\n        self._parent._vtkren.WorldToDisplay()\n        dp = self._parent._vtkren.GetDisplayPoint()\n        focalDepth = dp[2]\n        self._parent._vtkren.SetDisplayPoint(self._parent._iren.GetEventPosition()[0],\n                                             self._parent._iren.GetEventPosition()[1], focalDepth)\n        self._parent._vtkren.DisplayToWorld()\n        newPickPoint = self._parent._vtkren.GetWorldPoint()\n        self._parent._vtkren.SetDisplayPoint(self._parent._iren.GetLastEventPosition()[0],\n                                             self._parent._iren.GetLastEventPosition()[1], focalDepth)\n        self._parent._vtkren.DisplayToWorld()\n        oldPickPoint = self._parent._vtkren.GetWorldPoint()\n        motionVector[0] = oldPickPoint[0] - newPickPoint[0]\n        motionVector[1] = oldPickPoint[1] - newPickPoint[1]\n        motionVector[2] = oldPickPoint[2] - newPickPoint[2]\n\n        viewFocus = list(camera.GetFocalPoint())\n        viewPoint = list(camera.GetPosition())\n        camera.SetFocalPoint(motionVector[0] + viewFocus[0],\n                             motionVector[1] + viewFocus[1],\n                             motionVector[2] + viewFocus[2])\n\n        camera.SetPosition(motionVector[0] + viewPoint[0],\n                           motionVector[1] + viewPoint[1],\n                           motionVector[2] + viewPoint[2])\n        if self._parent._iren.GetLightFollowCamera():\n            self._parent._vtkren.UpdateLightsGeometryToFollowCamera()\n        self._parent._iren.Render()\n\n    def Roll(self, *args):\n        camera = self._parent._vtkren.GetActiveCamera()\n        transform = vtk.vtkTransform()\n        pos = camera.GetPosition()\n        fp = camera.GetFocalPoint()\n        axis = [fp[i] - pos[i] for i in range(3)]\n        (DisplayCenter, Center) = self.ComputeDisplayCenter()\n        x1 = self._parent._iren.GetLastEventPosition()[0] - int(DisplayCenter[0])\n        x2 = self._parent._iren.GetEventPosition()[0] - int(DisplayCenter[0])\n        y1 = self._parent._iren.GetLastEventPosition()[1] - int(DisplayCenter[1])\n        y2 = self._parent._iren.GetEventPosition()[1] - int(DisplayCenter[1])\n        zCross = x1 * y2 - y1 * x2\n        zCross = float(zCross)\n        angle = vtk.vtkMath().DegreesFromRadians(zCross / (math.sqrt(float(x1 * x1 + y1 * y1)) *\n                                                           math.sqrt(float(x2 * x2 + y2 * y2))))\n        transform.Identity()\n        transform.Translate(Center[0], Center[1], Center[2])\n        transform.RotateWXYZ(angle, axis[0], axis[1], axis[2])\n        transform.Translate(-Center[0], -Center[1], -Center[2])\n        camera.ApplyTransform(transform)\n        camera.OrthogonalizeViewUp()\n        self._parent._vtkren.ResetCameraClippingRange()\n        self._parent._iren.Render()\n\n        # -----------------------------------------------------------------\n'"
CGNS/NAV/wvtkutils.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nfrom builtins import (str, bytes, range, dict)\n\nfrom CGNS.NAV.moption import Q7OptionContext as OCTXT\n\nfrom qtpy.QtCore import Qt, QEvent\nfrom qtpy.QtWidgets import QComboBox, QListWidget\n\n# -----------------------------------------------------------------\nclass Q7ComboBox(QComboBox):\n    def __init__(self, arg):\n        QComboBox.__init__(self, arg)\n        self.actorlist = QListWidget()\n        self.setModel(self.actorlist.model())\n        self.setView(self.actorlist)\n        self.view().installEventFilter(self)\n        self.parent = None\n\n    def setParent(self, parent):\n        self.parent = parent\n\n    def eventFilter(self, o, e):\n        if e.type() == QEvent.KeyPress:\n            # kmod = e.modifiers()\n            kval = e.key()\n            if kval in [Qt.Key_Z]:\n                path = self.actorlist.currentItem().text()\n                actor = self.parent.findPathObject(path)\n                self.parent.changeCurrentActor([path, actor])\n                return True\n            if kval in [Qt.Key_H]:\n                path = self.actorlist.currentItem().text()\n                actor = self.parent.findPathObject(path)\n                self.parent.changeCurrentActor([path, actor])\n                self.parent.hideActor(None)\n                return True\n        return QComboBox.eventFilter(self, o, e)\n\n    def keyPressEvent(self, event):\n        kmod = event.modifiers()\n        kval = event.key()\n        print(kmod, kval)\n\n# --- last line\n'"
CGNS/PAT/__init__.py,0,b'#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\npass\n#\n'
CGNS/PAT/cgnsclass.py,0,"b'#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\nimport CGNS\nimport CGNS.PAT.cgnskeywords as CK\nimport CGNS.PAT.cgnstypes as CT\nimport CGNS.PAT.cgnserrors as CE\nimport CGNS.PAT.cgnsutils as CU\n\nimport numpy as NPY\n\n\n# -----------------------------------------------------------------------------\nclass CGNSPythonChildren(list):\n    def __getitem__(self, key):\n        if isinstance(key, str):\n            for c in self:\n                if c.name == key:\n                    return c\n        else:\n            return list.__getitem__(self, key)\n\n\n# -----------------------------------------------------------------------------\nclass CGNSPython(object):\n    """"""\n    A CGNS/Python object\n    """"""\n\n    def __init__(self, node, parent=None):\n        self.__node = node\n        self.__parent = parent\n\n    @property\n    def name(self):\n        """"""\n        Name of the node (node[0])\n        """"""\n        return self.__node[0]\n\n    @property\n    def sidstype(self):\n        return self.__node[3]\n\n    @property\n    def sids(self):\n        return self.sidstype\n\n    @property\n    def value(self):\n        return self.data\n\n    @property\n    def data(self):\n        return self.__node[1]\n\n    @property\n    def child(self):\n        l = CGNSPythonChildren([CGNSPython(n) for n in self.__node[2]])\n        for n in l:\n            n.parent = self\n        return l\n\n    @property\n    def children(self):\n        return self.__node[2]\n\n    def nextChild(self, sidstype=None, namepattern=None):\n        for c in self.__node[2]:\n            take = False\n            if sidstype is not None:\n                if ((isinstance(sidstype, list) and (c[3] in sidstype)) or\n                        (isinstance(sidstype, str) and (c[3] == sidstype))):\n                    take = True\n            else:\n                take = True\n            if take:\n                n = CGNSPython(c)\n                n.parent = self\n                yield n\n\n    @property\n    def node(self):\n        return self.__node\n\n    @property\n    def parent(self):\n        return self.__parent\n\n    @parent.setter\n    def parent(self, node):\n        if isinstance(node, CGNSPython):\n            self.__parent = node\n        else:\n            self.__parent = CGNSPython(node)\n\n    def __str__(self):\n        return CU.toString(self.__node)\n\n    def __len__(self):\n        return len(self.__node[2])\n\n# ---\n'"
CGNS/PAT/cgnserrors.py,0,"b'#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\nTAG = ""\\n### pyCGNS:""\nTAG_ERROR = "" ERROR ""\n\n\ndef perr(error_id, *tp):\n    try:\n        msg = TAG + TAG_ERROR + ""[%.3d] %s"" % (error_id, errorTable[error_id])\n    except (TypeError, KeyError):\n        msg = TAG + TAG_ERROR + ""[%.3d] %s"" % (error_id, errorTable[999])\n    ret = msg\n    if tp:\n        if isinstance(tp, tuple) and (len(tp) > 0):\n            ret = msg % tp[0]\n        else:\n            ret = msg % tp\n    return ret\n\n\nclass CGNSException(Exception):\n    def __init__(self, code, args=None):\n        self.code = code\n        self.value = args\n\n    def __str__(self):\n        if self.value is not None:\n            ret = perr(self.code, self.value)\n        else:\n            ret = perr(self.code)\n        return ret\n\ncgnsException = CGNSException\nclass cgnsNodeError(cgnsException):\n    pass\n\n\nclass cgnsNameError(cgnsNodeError):\n    pass\n\n\nclass cgnsTypeError(cgnsNodeError):\n    pass\n\n\n# -----------------------------------------------------------------------------\nerrorTable = {\n    -1: ""Stop on check"",\n    0: ""No error"",\n    1: ""Node is empty !"",\n    2: ""Node should be a list of <name, value, children, type>"",\n    3: ""Node name should be a string"",\n    4: ""Node [%s] children list should be a list"",\n    5: ""Node [%s] bad value: should be a numpy object"",\n    6: ""Parent node for [%s] is not a CGNS node"",\n    7: ""Failed to add a badly formed child node into [%s]"",\n    8: ""Failed to add root node as child node into [%s]"",\n    9: ""Link chaser returns a badly formed node as place of [%s]"",\n    10: ""CGNSBase [%s] bad cell dimensions"",\n    11: ""CGNSBase [%s] bad physical dimensions"",\n    12: ""CGNSBase [%s] bad cell/physical dimensions values"",\n    20: ""No node of type [%s] with name [%s]"",\n    21: ""No node with name [%s]"",\n    22: ""Node name should have type string"",\n    23: ""Empty string is not allowed for a node name"",\n    24: ""Node name should not contain a \'/\' (you have [%s])"",\n    25: ""Node name length should not be greater than 32 chars: %s"",\n    26: ""Bad name [%s] for this node"",\n    27: ""Bad type [%s] for this node"",\n    28: ""Node [%s] should have no child"",\n    29: ""Node name cannot be \'.\' or \'..\'"",\n    30: ""Nodes [%s] and [%s] are different"",\n    31: ""Node name cannot be only \' \'"",\n    32: ""Node name should not have prefix or suffix \' \'s"",\n    33: ""Node name contains unsafe chars"",\n    34: ""Node name contains two consecutive spaces"",\n    40: ""Node [%s] has type [%s] which is not a CGNS/SIDS type"",\n    90: ""Node is None!"",\n    91: ""Root node can have only CGNSBase_t or CGNSLibraryVersion_t children"",\n    99: ""More than one CGNSLibraryVersion node found"",\n    100: ""Absolute path implies a root node with CGNSLibraryVersion node"",\n    101: ""No child on CGNS tree first level"",\n    102: ""Duplicated child name [%s] in [%s]"",\n    103: ""Node type of [%s] not [%s]"",\n    104: ""Node type of [%s] not in %s"",\n    105: ""String data should have type array or string"",\n    106: ""Value should be a real array"",\n    107: ""Value should be an integer array"",\n    108: ""Parent node should have type [%s]"",\n    109: ""Value should be an array"",\n    110: ""Value should be a string in [%s]"",\n    111: ""Bad value type"",\n    112: ""Empty args is not allowed as value"",\n    200: ""Bad GridLocation value [%s]"",\n    201: ""Bad ConvergenceHistory name [%s]"",\n    202: ""Units specification list should have 5 values (one per unit)"",\n    203: ""Bad units specification [%s]"",\n    204: ""Units specifications duplicated [%s]"",\n    205: ""Bad SimulationType value [%s]"",\n    206: ""Bad ZoneType value [%s]"",\n    207: ""Bad DataClass value [%s]"",\n    208: ""Exponents specification list should have 5 values (one per unit)"",\n    209: ""BaseIterativeData number of steps should be an integer value"",\n    210: ""BaseIterativeData steps should in %s"",\n    211: ""BaseIterativeData value has greater length than number of steps"",\n    212: ""BaseIterativeData is missing sub-node"",\n    213: ""Parent node should be BaseIterativeData"",\n    214: ""BaseIterativeData bad Pointer name [%s]"",\n    215: ""BaseIterativeData Pointer list [%s] has not the right length [%s]"",\n    216: ""BaseIterativeData Pointer list [%s] contents has bad length [%s]"",\n    217: ""Parent node should be EMConductivityModel"",\n    218: ""Bad EMConductivityModelType value [%s]"",\n    219: ""EMConductivityModelType is missing sub-node"",\n    220: ""Parent node should be GoverningEquations"",\n    221: ""Bad GoverningEquationsType value [%s]"",\n    222: ""GoverningEquationsType is missing sub-node"",\n    223: ""Parent node should be GasModel"",\n    224: ""Bad GasModelType value [%s]"",\n    225: ""GasModelType is missing sub-node"",\n    226: ""Parent node should be ThermalConductivityModel"",\n    227: ""Bad ThermalConductivityModelType value [%s]"",\n    228: ""ThermalConductivityModelType is missing sub-node"",\n    229: ""Parent node should be ViscosityModel"",\n    230: ""Bad ViscosityModelType value [%s]"",\n    231: ""ViscosityModelType is missing sub-node"",\n    232: ""Parent node should be TurbulenceClosure"",\n    233: ""Bad TurbulenceClosureType value [%s]"",\n    234: ""TurbulenceClosureType is missing sub-node"",\n    235: ""Parent node should be TurbulenceModel"",\n    236: ""Bad TurbulenceModelType value [%s]"",\n    237: ""TurbulenceModelType is missing sub-node"",\n    238: ""Parent node should be ThermalRelaxationModel"",\n    239: ""Bad ThermalRelaxationModelType value [%s]"",\n    240: ""ThermalRelaxationModelType is missing sub-node"",\n    241: ""Parent node should be ChemicalKineticsModel"",\n    242: ""Bad ChemicalKineticsModelType value [%s]"",\n    243: ""ChemicalKineticsModelType is missing sub-node"",\n    244: ""Parent node should be EMElectricFieldModel"",\n    245: ""Bad EMElectricFieldModelType value [%s]"",\n    246: ""EMElectricFieldModelType is missing sub-node"",\n    247: ""Parent node should be EMMagneticFieldModel"",\n    248: ""Bad EMMagneticFieldModelType value [%s]"",\n    249: ""EMMagneticFieldModelType is missing sub-node"",\n    250: ""Bad ElementType value [%s]"",\n    251: ""Bad ElementConnectivity value [%s]"",\n    252: ""Bad BCTypeSimple value [%s]"",\n    253: ""Bad AverageInterfaceType value [%s]"",\n    254: ""Bad RigidGridMotionType value [%s]"",\n    255: ""Bad ArbitraryGridMotionType value [%s]"",\n    256: ""Bad GeometryFormat value [%s]"",\n    257: ""Bad BCTypeSimple or BCTypeCompound value [%s]"",\n    258: ""Parent node should be ArbitraryGridMotion_t"",\n    259: ""Parent node should be ReferenceState_t"",\n    260: ""Parent node should be IntegralData_t"",\n    261: ""Parent node should be UserDefinedData_t"",\n    262: ""Parent node should be Family_t"",\n    263: ""Parent node should be GridCoordinates_t"",\n    264: ""Parent node should be DiscreteData_t"",\n    265: ""Parent node should be BCData_t"",\n    266: ""Parent node should be ZoneIterativeData_t"",\n    267: ""Parent node should be AverageInterface_t"",\n    268: ""Bad AverageInterfaceType value [%s]"",\n    269: ""AverageInterfaceType is missing sub-node"",\n    270: ""Parent node should be ZoneGridConnectivity_t"",\n    271: ""Bad ZoneGridConnectivityType value [%s]"",\n    272: ""ZoneGridConnectivityType is missing sub-node"",\n    273: ""Parent node should be DimensionalExponents_t"",\n    274: ""Bad SimulationType value [%s]"",\n    275: ""Parent node should be BCDataSet_t"",\n    276: ""BCDataSetType is missing sub-node"",\n    277: ""Parent node should be ZoneBC_t"",\n    278: ""Parent node should be GridCoordinates_t"",\n    279: ""Parent node should be RotatingCoordinates_t"",\n    280: ""Parent node should be Axisymmetry_t"",\n    281: ""Parent node should be FlowSolution_t "",\n    282: ""Parent node should be Periodic_s "",\n    283: ""Parent node should be OversetHoles_t "",\n    284: ""Parent node should be GridConnectivity1to1_t "",\n    285: ""Parent node should be GridCoordinates"",\n    286: ""Parent node should be DiscreteData_t"",\n    287: ""Parent node should be DataArray_t"",\n    288: ""Parent node should be Zone_t"",\n    289: ""Parent node should be DataConversion_t"",\n    290: ""Parent node should be GridLocation_t"",\n    291: ""Parent node should be Descriptor_t"",\n    292: ""Parent node should be GeometryReference_t"",\n    293: ""GeometryReferenceType is missing sub-node"",\n    294: ""Parent node should be FamilyBC_t"",\n    295: ""FamilyBCType is missing sub-node"",\n\n    300: ""Zone creation requires a dimension tuple"",\n\n    710: ""Numpy array should have a \'Fortran\' order"",\n\n    800: ""Cannot find pyCGNS config ?"",\n    801: ""No information about numeric library in pyCGNS config"",\n    802: ""Bad information about numeric library in pyCGNS config [%s]"",\n\n    900: \'No such file [{}]\',\n    901: \'File already exists [{}]\',\n    902: \'File name should be a string\',\n    903: \'Cannot propagate save to non-existant linked-to file [{}]\',\n    904: \'Cannot propagate save to unreadable linked-to file [{}]\',\n    905: \'Cannot propagate save to non-existant node in linked-to file [{}]\',\n    906: \'Bad tree structure (root should be list of 4 items, refer to doc)\',\n    907: \'Invalid combination of flags (refer to doc)\',\n    908: \'Using a maxdata implies FNODATA flag\',\n    909: \'Cannot have attributes {} at the same time\',\n    910: \'Keyword argument [{}] unknown\',\n    911: \'Bad [flag] argument (should be int)\',\n    912: \'Bad [depth] argument (should be int)\',\n    913: \'Bad [path] argument (should be str)\',\n    914: \'Bad [lksearch] argument (should be list of str)\',\n    915: \'Bad [maxdata] argument (should be int)\',\n    916: \'Bad [skip] argument (should be list of str)\',\n    917: \'Bad [links] argument (refer to doc)\',\n    920: \'Cannot write in file [{}]\',\n    930: \'Filter dict requires a path (str) as key\',\n    931: \'Filter dict value should be a tuple with int as first arg\',\n    932: \'SPARTIAL Filter requires a ""list of 8 lists of integers"" as value""\',\n    933: \'SPARTIAL Filter bad parameters\',\n    934: \'SCONTIGUOUS requires a tuple of index,rank (integers) as value\',\n\n    999: ""Unknow error code"",\n}\n\nCGNS_NoSuchFile = \'pyCGNS[001] No such file\'\nCGNS_OpenFileFailed = \'pyCGNS[002] Open file failed\'\nCGNS_FileAlreadyExists = \'pyCGNS[003] File already exists\'\nCGNS_NotConnected = ""pyCGNS[100] Not yet connected to a CGNS database""\nCGNS_NoSuchBase = ""pyCGNS[101] No such base name""\nCGNS_AbsolutePathRequired = ""pyCGNS[102] Absolute path required""\nCGNS_NoSuchZone = ""pyCGNS[103] No such zone name""\nCGNS_NoSuchArray = ""pyCGNS[104] No such array name""\nCGNS_NoSuchUserData = ""pyCGNS[105] No such user data node name""\nCGNS_NoSuchFlowSolution = ""pyCGNS[106] No such flow solution node name""\nCGNS_NoSuchBoundary = ""pyCGNS[107] No such boundary condition node name""\nCGNS_FileShouldBeReadable = ""pyCGNS[110] File should be readable""\nCGNS_GotoPathNotFound = ""pyCGNS[901] No such goto path in CGNS tree""\nCGNS_BadType = ""pyCGNS[200] Bad type""\nCGNS_BadOpenMode = ""pyCGNS[201] Bad OpenMode value""\nCGNS_BadErrorCode = ""pyCGNS[202] Bad ErrorCode type""\nCGNS_BadMassUnit = ""pyCGNS[203] Bad MassUnit type""\nCGNS_BadLengthUnit = ""pyCGNS[204] Bad LengthUnit type""\nCGNS_BadTimeUnit = ""pyCGNS[205] Bad TimeUnit type""\nCGNS_BadTemperatureUnit = ""pyCGNS[206] Bad TemperatureUnit type""\nCGNS_BadAngleUnit = ""pyCGNS[207] Bad AngleUnit type""\nCGNS_BadDataClass = ""pyCGNS[208] Bad DataClass type""\nCGNS_BadGridLocation = ""pyCGNS[209] Bad GridLocation type""\nCGNS_BadBCDataType = ""pyCGNS[210] Bad BC data type""\nCGNS_BadGridConnectivityType = ""pyCGNS[211] Bad GridConnectivityType type""\nCGNS_BadPointSetType = ""pyCGNS[212] Bad PointSetType type""\nCGNS_BadGoverningType = ""pyCGNS[213] Bad GoverningEquation type""\nCGNS_BadModelType = ""pyCGNS[214] Bad Model type""\nCGNS_BadBCType = ""pyCGNS[215] Bad BC type""\nCGNS_BadDataType = ""pyCGNS[216] Bad DataType type""\nCGNS_BadElementType = ""pyCGNS[217] Bad ElementType type""\nCGNS_BadZoneType = ""pyCGNS[218] Bad ZoneType type""\nCGNS_BadRigidGridMotionType = ""pyCGNS[219] Bad RigidGridMotionType type""\nCGNS_BadArbitraryGridMotionType = ""pyCGNS[220] Bad ArbitraryGridMotionType type""\nCGNS_BadSimulationType = ""pyCGNS[221] Bad SimulationType type""\nCGNS_BadWallFunctionType = ""pyCGNS[222] Bad WallFunctionType type""\nCGNS_BadAreaType = ""pyCGNS[223] Bad AreaType type""\nCGNS_BadAverageInterfaceType = ""pyCGNS[224] Bad AverageInterfaceType type""\n\n# -----------------------------------------------------------------------------\n'"
CGNS/PAT/cgnskeywords.py,0,"b'#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#  \n""""""\n TYPES, ENUMERATES, CONSTANTS, NAMES from CGNS/MLL\n\n Conventions:\n\n [1] A CGNS/SIDS string constant is postfixed with _s\n \'ZoneType\' is ZoneType_s\n\n [2] A CGNS/SIDS string constant naming a type has _ts\n \'ZoneType_t\' is ZoneType_ts\n\n [3] A list of possible values for a given type has _l\n ZoneType_l is [Null_s,UserDefined_s,Structured_s,Unstructured_s]\n which is same as [""Null"",""UserDefined"",""Structured"",""Unstructured""]\n List should be ordered wrt the actual enumerate\n\n [4] An enumerate mapping of a list of values is not prefixed\n ZoneType is {\'Unstructured\':3,\'Null\':0,\'Structured\':2,\'UserDefined\':1}\n\n [5] The reverse dictionnary of the previous one is postfixed with _\n ZoneType_ is {0:\'Null\',1:\'UserDefined\',2:\'Structured\',3:\'Unstructured\'}\n\n [6] The variables are declared with an integer value (not enumerates)\n wrt their position in the _l list, for example:\n (Null,UserDefined,Structured,Unstructured)=list(ZoneType_)\n\n [7] The _t type names are reserved for Cython, enums are then used as int:\n ctypedef int DataType_t\n int cg_array_read_as(int A, DataType_t type, void *Data)\n \n""""""\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\n# ----------------------------------------------------------------------------\n\ndef stringAsKeyDict(l):\n    return dict(zip(l, range(len(l))))\n\n\ndef enumAsKeyDict(l):\n    return dict(zip(range(len(l)), l))\n\n\n# --------------------------------------------------\n# --- ADF-level Datatypes\n#\n# MT: No data; LK: Link\nadftypes = (\'C1\', \'I4\', \'I8\', \'R4\', \'R8\', \'MT\', \'LK\')\n(C1, I4, I8, R4, R8, MT, LK) = adftypes\n\n# --------------------------------------------------\n# --- ADF-level Constants\n#\nADF_DATA_TYPE_LENGTH = 32\nADF_DATE_LENGTH = 32\nADF_FILENAME_LENGTH = 1024\nADF_FORMAT_LENGTH = 20\nADF_LABEL_LENGTH = 32\nADF_MAXIMUM_LINK_DEPTH = 100\nADF_MAX_DIMENSIONS = 12\nADF_MAX_ERROR_STR_LENGTH = 80\nADF_MAX_LINK_DATA_SIZE = 4096\nADF_NAME_LENGTH = 32\nADF_STATUS_LENGTH = 32\nADF_VERSION_LENGTH = 32\n\nADF_ROOT_NODE_NAME = ""HDF5 MotherNode""\nADF_ROOT_NODE_LABEL = ""Root Node of HDF5 File""\n\nCGNSHDF5ROOT_s = ADF_ROOT_NODE_NAME\nCGNSLIBRARYVERSION = 3.3\n\n# -------------------------------------------------- (NOT SIDS)\n# --- CGNS/Python mapping extensions\n#\nCGNSTree_ts = \'CGNSTree_t\'\nCGNSTree_s = \'CGNSTree\'\n\n# --- Type with weird (coming from outer space) names\n#\nTransform_ts = \'Transform_t\'\nDiffusionModel_ts = \'DiffusionModel_t\'\nEquationDimension_ts = \'EquationDimension_t\'\nInwardNormalIndex_ts = \'InwardNormalIndex_t\'\nIntIndexDimension_ts = \'IntIndexDimension_t\'\n\n# --- Add legacy strings for translation tools\n#\nTransform_ts2 = \'""int[IndexDimension]""\'\nTransform_ts3 = \'int[IndexDimension]\'\nDiffusionModel_ts2 = \'""int[1+...+IndexDimension]""\'\nEquationDimension_ts2 = \'""int""\'\nInwardNormalIndex_ts2 = \'""int[IndexDimension]""\'\n\nweirdSIDStypes = {\n    Transform_ts2: IntIndexDimension_ts,\n    Transform_ts3: IntIndexDimension_ts,\n    DiffusionModel_ts2: DiffusionModel_ts,\n    EquationDimension_ts2: EquationDimension_ts,\n    InwardNormalIndex_ts2: IntIndexDimension_ts,\n}\n\nweirdSIDStypes_ = {\n    Transform_ts: Transform_ts2,\n    DiffusionModel_ts: DiffusionModel_ts2,\n    EquationDimension_ts: EquationDimension_ts2,\n    InwardNormalIndex_ts: InwardNormalIndex_ts2,\n}\n\n# -------------------------------------------------- (SIDS)\n# SIDS\n#\nNull_s = ""Null""\nUserDefined_s = ""UserDefined""\n\n# --------------------------------------------------\nKilogram_s = ""Kilogram""\nGram_s = ""Gram""\nSlug_s = ""Slug""\nPoundMass_s = ""PoundMass""\nMassUnits_l = [Null_s, UserDefined_s,\n               Kilogram_s, Gram_s, Slug_s, PoundMass_s]\n\nMassUnits = stringAsKeyDict(MassUnits_l)\nMassUnits_ = enumAsKeyDict(MassUnits_l)\n(MassUnitsNull, MassUnitsUserDefined,\n Kilogram, Gram, Slug, PoundMass) = list(MassUnits_)\n\n# --------------------------------------------------\nMeter_s = ""Meter""\nCentimeter_s = ""Centimeter""\nMillimeter_s = ""Millimeter""\nFoot_s = ""Foot""\nInch_s = ""Inch""\nLengthUnits_l = [Null_s, UserDefined_s,\n                 Meter_s, Centimeter_s, Millimeter_s, Foot_s, Inch_s]\n\nLengthUnits = stringAsKeyDict(LengthUnits_l)\nLengthUnits_ = enumAsKeyDict(LengthUnits_l)\n(LengthUnitsNull, LengthUnitsUserDefined,\n Meter, Centimeter, Millimeter, Foot, Inch) = list(LengthUnits_)\n\n# --------------------------------------------------\nSecond_s = ""Second""\nTimeUnits_l = [Null_s, UserDefined_s, Second_s]\n\nTimeUnits = stringAsKeyDict(TimeUnits_l)\nTimeUnits_ = enumAsKeyDict(TimeUnits_l)\n(TimeUnitsNull, TimeUnitsUserDefined, Second) = list(TimeUnits_)\n\n# --------------------------------------------------\nKelvin_s = ""Kelvin""\nCelcius_s = ""Celcius""\nRankine_s = ""Rankine""\nFahrenheit_s = ""Fahrenheit""\nTemperatureUnits_l = [Null_s, UserDefined_s,\n                      Kelvin_s, Celcius_s, Rankine_s, Fahrenheit_s]\n\nTemperatureUnits = stringAsKeyDict(TemperatureUnits_l)\nTemperatureUnits_ = enumAsKeyDict(TemperatureUnits_l)\n(TemperatureUnitsNull, TemperatureUnitsUserDefined,\n Kelvin, Celcius, Rankine, Fahrenheit) = list(TemperatureUnits_)\n\n# --------------------------------------------------\nDegree_s = ""Degree""\nRadian_s = ""Radian""\nAngleUnits_l = [Null_s, UserDefined_s, Degree_s, Radian_s]\n\nAngleUnits = stringAsKeyDict(AngleUnits_l)\nAngleUnits_ = enumAsKeyDict(AngleUnits_l)\n(AngleUnitsNull, AngleUnitsUserDefined, Degree, Radian) = list(AngleUnits_)\n\n# --------------------------------------------------\nAmpere_s = ""Ampere""\nAbampere_s = ""Abampere""\nStatampere_s = ""Statampere""\nEdison_s = ""Edison""\nauCurrent_s = ""auCurrent""\nElectricCurrentUnits_l = [Null_s, UserDefined_s,\n                          Ampere_s, Abampere_s, Statampere_s,\n                          Edison_s, auCurrent_s]\n\nElectricCurrentUnits = stringAsKeyDict(ElectricCurrentUnits_l)\nElectricCurrentUnits_ = enumAsKeyDict(ElectricCurrentUnits_l)\n(ElectricCurrentUnitsNull, ElectricCurrentUnitsUserDefined,\n Ampere, Abampere, Statampere,\n Edison, auCurrent) = list(ElectricCurrentUnits_)\n\n# --------------------------------------------------\nMole_s = ""Mole""\nEntities_s = ""Entities""\nStandardCubicFoot_s = ""StandardCubicFoot""\nStandardCubicMeter_s = ""StandardCubicMeter""\nSubstanceAmountUnits_l = [Null_s, UserDefined_s,\n                          Mole_s, Entities_s,\n                          StandardCubicFoot_s, StandardCubicMeter_s]\n\nSubstanceAmountUnits = stringAsKeyDict(SubstanceAmountUnits_l)\nSubstanceAmountUnits_ = enumAsKeyDict(SubstanceAmountUnits_l)\n(SubstanceAmountUnitsNull, SubstanceAmountUnitsUserDefined,\n Mole, Entities,\n StandardCubicFoot, StandardCubicMeter) = list(SubstanceAmountUnits_)\n\n# --------------------------------------------------\nCandela_s = ""Candela""\nCandle_s = ""Candle""\nCarcel_s = ""Carcel""\nHefner_s = ""Hefner""\nViolle_s = ""Violle""\nLuminousIntensityUnits_l = [Null_s, UserDefined_s,\n                            Candela_s, Candle_s, Carcel_s, Hefner_s, Violle_s]\n\nLuminousIntensityUnits = stringAsKeyDict(LuminousIntensityUnits_l)\nLuminousIntensityUnits_ = enumAsKeyDict(LuminousIntensityUnits_l)\n(LuminousIntensityUnitsNull, LuminousIntensityUnitsUserDefined,\n Candela, Candle, Carcel, Hefner, Violle) = list(LuminousIntensityUnits_)\n\n# --------------------------------------------------\nDimensionalUnits_s = ""DimensionalUnits""\nAdditionalUnits_s = ""AdditionalUnits""\nAdditionalExponents_s = ""AdditionalExponents""\n\nAllDimensionalUnits_l = TimeUnits_l + MassUnits_l + LengthUnits_l \\\n                        + TemperatureUnits_l + AngleUnits_l\nAllAdditionalUnits_l = LuminousIntensityUnits_l + SubstanceAmountUnits_l \\\n                       + ElectricCurrentUnits_l\nAllUnits_l = AllDimensionalUnits_l + AllAdditionalUnits_l\n\n# --------------------------------------------------\nDataClass_ts = ""DataClass_t""\nDataClass_s = ""DataClass""\n\nDimensional_s = ""Dimensional""\nNormalizedByDimensional_s = ""NormalizedByDimensional""\nNormalizedByUnknownDimensional_s = ""NormalizedByUnknownDimensional""\nNondimensionalParameter_s = ""NondimensionalParameter""\nDimensionlessConstant_s = ""DimensionlessConstant""\n\nDataClass_l = [Null_s, UserDefined_s, Dimensional_s, NormalizedByDimensional_s,\n               NormalizedByUnknownDimensional_s, NondimensionalParameter_s,\n               DimensionlessConstant_s]\nDataClass = stringAsKeyDict(DataClass_l)\nDataClass_ = enumAsKeyDict(DataClass_l)\n(Null, UserDefined, Dimensional, NormalizedByDimensional,\n NormalizedByUnknownDimensional, NondimensionalParameter,\n DimensionlessConstant) = list(DataClass_)\n\n# ------------------------------------------------------------\nGridLocation_ts = ""GridLocation_t""\nGridLocation_s = ""GridLocation""\n\nVertex_s = ""Vertex""\nEdge_s = ""Edge""\nFace_s = ""Face""\nCell_s = ""Cell""\nCellCenter_s = ""CellCenter""\nFaceCenter_s = ""FaceCenter""\nIFaceCenter_s = ""IFaceCenter""\nJFaceCenter_s = ""JFaceCenter""\nKFaceCenter_s = ""KFaceCenter""\nEdgeCenter_s = ""EdgeCenter""\n\nGridLocation_l = [Null_s, UserDefined_s, Vertex_s, CellCenter_s, FaceCenter_s,\n                  IFaceCenter_s, JFaceCenter_s, KFaceCenter_s,\n                  EdgeCenter_s]\nGridLocation = stringAsKeyDict(GridLocation_l)\nGridLocation_ = enumAsKeyDict(GridLocation_l)\n(Null, UserDefined, Vertex, CellCenter, FaceCenter,\n IFaceCenter, JFaceCenter, KFaceCenter, EdgeCenter) = list(GridLocation_)\n\nVertexSize_s = ""VertexSize""\nCellSize_s = ""CellSize""\nVertexSizeBoundary_s = ""VertexSizeBoundary""\nElementsSize_s = ""ElementsSize""\n\n# ------------------------------------------------------------\nPointSetType_ts = ""PointSetType_t""\n\nPointList_s = ""PointList""\nPointListDonor_s = ""PointListDonor""\nPointRange_s = ""PointRange""\nPointRangeDonor_s = ""PointRangeDonor""\nElementRange_s = ""ElementRange""\nElementList_s = ""ElementList""\nCellListDonor_s = ""CellListDonor""\n\nPointSetType_l = [Null_s, UserDefined_s,\n                  PointList_s, PointListDonor_s, PointRange_s, PointRangeDonor_s,\n                  ElementRange_s, ElementList_s, CellListDonor_s]\nPointSetType = stringAsKeyDict(PointSetType_l)\nPointSetType_ = enumAsKeyDict(PointSetType_l)\n(Null, UserDefined, PointList, PointListDonor, PointRange, PointRangeDonor,\n ElementRange, ElementList, CellListDonor) = list(PointSetType_)\n\nZoneDonorName_s = ""ZoneDonorName""\n\n# ------------------------------------------------------------\nBCDataType_ts = ""BCDataType_t""\nBCDataType_s = ""BCDataType""\n\nDirichletData_s = ""DirichletData""\nNeumannData_s = ""NeumannData""\nDirichlet_s = ""Dirichlet""\nNeumann_s = ""Neumann""\n\nBCDataType_l = [Null_s, UserDefined_s, Dirichlet_s, Neumann_s]\nBCDataType = stringAsKeyDict(BCDataType_l)\nBCDataType_ = enumAsKeyDict(BCDataType_l)\n(BCDataTypeNull, BCDataTypeUserDefined, Dirichlet, Neumann) = list(BCDataType_)\n\nFullPotential_s = ""FullPotential""\nEuler_s = ""Euler""\nNSLaminar_s = ""NSLaminar""\nNSTurbulent_s = ""NSTurbulent""\nNSLaminarIncompressible_s = ""NSLaminarIncompressible""\nNSTurbulentIncompressible_s = ""NSTurbulentIncompressible""\n\nIdeal_s = ""Ideal""\nVanderWaals_s = ""VanderWaals""\nConstant_s = ""Constant""\nPowerLaw_s = ""PowerLaw""\nSutherlandLaw_s = ""SutherlandLaw""\nConstantPrandtl_s = ""ConstantPrandtl""\nEddyViscosity_s = ""EddyViscosity""\nReynoldsStress_s = ""ReynoldsStress""\nAlgebraic_s = ""Algebraic""\nBaldwinLomax_s = ""BaldwinLomax""\nReynoldsStressAlgebraic_s = ""ReynoldsStressAlgebraic""\nAlgebraic_BaldwinLomax_s = ""Algebraic_BaldwinLomax""\nAlgebraic_CebeciSmith_s = ""Algebraic_CebeciSmith""\nHalfEquation_JohnsonKing_s = ""HalfEquation_JohnsonKing""\nOneEquation_BaldwinBarth_s = ""OneEquation_BaldwinBarth""\nOneEquation_SpalartAllmaras_s = ""OneEquation_SpalartAllmaras""\nTwoEquation_JonesLaunder_s = ""TwoEquation_JonesLaunder""\nTwoEquation_MenterSST_s = ""TwoEquation_MenterSST""\nTwoEquation_Wilcox_s = ""TwoEquation_Wilcox""\nCaloricallyPerfect_s = ""CaloricallyPerfect""\nThermallyPerfect_s = ""ThermallyPerfect""\nConstantDensity_s = ""ConstantDensity""\nRedlichKwong_s = ""RedlichKwong""\nFrozen_s = ""Frozen""\nThermalEquilib_s = ""ThermalEquilib""\nThermalNonequilib_s = ""ThermalNonequilib""\nChemicalEquilibCurveFit_s = ""ChemicalEquilibCurveFit""\nChemicalEquilibMinimization_s = ""ChemicalEquilibMinimization""\nChemicalNonequilib_s = ""ChemicalNonequilib""\nEMElectricField_s = ""EMElectricField""\nEMMagneticField_s = ""EMMagneticField""\nEMConductivity_s = ""EMConductivity""\nVoltage_s = ""Voltage""\nInterpolated_s = ""Interpolated""\nEquilibrium_LinRessler_s = ""Equilibrium_LinRessler""\nChemistry_LinRessler_s = ""Chemistry_LinRessler""\n\nFamilySpecified_s = ""FamilySpecified""\n\n# --------------------------------------------------\nDataType_ts = ""DataType_t""\nDataType_s = ""DataType""\n\nInteger_s = ""Integer""\nLongInteger_s = ""LongInteger""\nRealSingle_s = ""RealSingle""\nRealDouble_s = ""RealDouble""\nCharacter_s = ""Character""\n\nDataType_l = [Null_s, UserDefined_s,\n              Integer_s, RealSingle_s, RealDouble_s, Character_s, LongInteger_s]\nDataType = stringAsKeyDict(DataType_l)\nDataType_ = enumAsKeyDict(DataType_l)\n\n(DataTypeNull, DataTypeUserDefined,\n Integer, RealSingle, RealDouble, Character, LongInteger) = list(DataType_)\n\n# --------------------------------------------------\nGridConnectivityType_ts = ""GridConnectivityType_t""\nGridConnectivityType_s = ""GridConnectivityType""\nGridConnectivity_ts = ""GridConnectivity_t""\nZoneGridConnectivity_ts = ""ZoneGridConnectivity_t""\nZoneGridConnectivity_s = ""ZoneGridConnectivity""\n\nOverset_s = ""Overset""\nAbutting_s = ""Abutting""\nAbutting1to1_s = ""Abutting1to1""\n\nGridConnectivityType_l = [Null_s, UserDefined_s,\n                          Overset_s, Abutting_s, Abutting1to1_s]\nGridConnectivityType = stringAsKeyDict(GridConnectivityType_l)\nGridConnectivityType_ = enumAsKeyDict(GridConnectivityType_l)\n\n(Null, UserDefined,\n Overset, Abutting, Abutting1to1) = list(GridConnectivityType_)\n\n# --------------------------------------------------\nZoneType_ts = ""ZoneType_t""\nZoneType_s = ""ZoneType""\nZone_ts = ""Zone_t""\n\nStructured_s = ""Structured""\nUnstructured_s = ""Unstructured""\n\nZoneType_l = [Null_s, UserDefined_s, Structured_s, Unstructured_s]\nZoneType = stringAsKeyDict(ZoneType_l)\nZoneType_ = enumAsKeyDict(ZoneType_l)\n\n(ZoneTypeNull, ZoneTypeUserdefined, Structured, Unstructured) = list(ZoneType_)\n\nZoneSubRegion_ts = ""ZoneSubRegion_t""\nBCRegionName_s = ""BCRegionName""\nGridConnectivityRegionName_s = ""GridConnectivityRegionName""\n\n# --------------------------------------------------\nSimulationType_ts = ""SimulationType_t""\nSimulationType_s = ""SimulationType""\n\nTimeAccurate_s = ""TimeAccurate""\nNonTimeAccurate_s = ""NonTimeAccurate""\n\nSimulationType_l = [Null_s, UserDefined_s, TimeAccurate_s, NonTimeAccurate_s]\nSimulationType = stringAsKeyDict(SimulationType_l)\nSimulationType_ = enumAsKeyDict(SimulationType_l)\n\n(Null, UserDefined, TimeAccurate, NonTimeAccurate) = list(SimulationType_)\n\n# --------------------------------------------------\nRigidGridMotionType_s = ""RigidGridMotionType""\nRigidGridMotionType_ts = ""RigidGridMotionType_t""\n\nConstantRate_s = ""ConstantRate""\nVariableRate_s = ""VariableRate""\n\nRigidGridMotionType_l = [Null_s, UserDefined_s, ConstantRate_s, VariableRate_s]\nRigidGridMotionType = stringAsKeyDict(RigidGridMotionType_l)\nRigidGridMotionType_ = enumAsKeyDict(RigidGridMotionType_l)\n\n(Null, UserDefined, ConstantRate, VariableRate) = list(RigidGridMotionType_)\n\nArbitraryGridMotionType_s = ""ArbitraryGridMotionType""\nArbitraryGridMotionType_ts = ""ArbitraryGridMotionType_t""\n\nNonDeformingGrid_s = ""NonDeformingGrid""\nDeformingGrid_s = ""DeformingGrid""\n\nArbitraryGridMotion_ts = ""ArbitraryGridMotion_t""\nArbitraryGridMotion_s = ""ArbitraryGridMotion""\nArbitraryGridMotionType_l = [Null_s, UserDefined_s,\n                             NonDeformingGrid_s, DeformingGrid_s]\nArbitraryGridMotion = stringAsKeyDict(ArbitraryGridMotionType_l)\nArbitraryGridMotion_ = enumAsKeyDict(ArbitraryGridMotionType_l)\n\n(Null, UserDefined, NonDeformingGrid, DeformingGrid) = list(ArbitraryGridMotion_)\n\n# --------------------------------------------------\nWallFunction_ts = ""WallFunction_t""\nWallFunction_s = ""WallFunction""\n\nGeneric_s = ""Generic""\n\nWallFunctionType_ts = ""WallFunctionType_t""\nWallFunctionType_s = ""WallFunctionType""\n\nWallFunctionType_l = [Null_s, UserDefined_s, Generic_s]\nWallFunctionType = stringAsKeyDict(WallFunctionType_l)\nWallFunctionType_ = enumAsKeyDict(WallFunctionType_l)\n\n(Null, UserDefined, Generic) = list(WallFunctionType_)\n\n# --------------------------------------------------\nArea_ts = ""Area_t""\nArea_s = ""Area""\n\nBleedArea_s = ""BleedArea""\nCaptureArea_s = ""CaptureArea""\n\nAreaType_ts = ""AreaType_t""\nAreaType_s = ""AreaType""\nAreaType_l = [Null_s, UserDefined_s, BleedArea_s, CaptureArea_s]\nAreaType = stringAsKeyDict(AreaType_l)\nAreaType_ = enumAsKeyDict(AreaType_l)\n(Null, UserDefined, BleedArea, CaptureArea) = list(AreaType_)\n\n# --------------------------------------------------\nZoneBC_ts = ""ZoneBC_t""\nZoneBC_s = ""ZoneBC""\nZoneIterativeData_ts = ""ZoneIterativeData_t""\nZoneIterativeData_s = ""ZoneIterativeData""\n\nUserDefinedData_ts = ""UserDefinedData_t""\n\nAverageAll_s = ""AverageAll""\nAverageCircumferential_s = ""AverageCircumferential""\nAverageRadial_s = ""AverageRadial""\nAverageI_s = ""AverageI""\nAverageJ_s = ""AverageJ""\nAverageK_s = ""AverageK""\nCGNSLibraryVersion_s = ""CGNSLibraryVersion""\nCellDimension_s = ""CellDimension""\nIndexDimension_s = ""IndexDimension""\nPhysicalDimension_s = ""PhysicalDimension""\nGridCoordinates_s = ""GridCoordinates""\nCoordinateNames_s = ""CoordinateNames""\nCoordinateX_s = ""CoordinateX""\nCoordinateY_s = ""CoordinateY""\nCoordinateZ_s = ""CoordinateZ""\nCoordinateR_s = ""CoordinateR""\nCoordinateTheta_s = ""CoordinateTheta""\nCoordinatePhi_s = ""CoordinatePhi""\nCoordinateNormal_s = ""CoordinateNormal""\nCoordinateTangential_s = ""CoordinateTangential""\nCoordinateXi_s = ""CoordinateXi""\nCoordinateEta_s = ""CoordinateEta""\nCoordinateZeta_s = ""CoordinateZeta""\nCoordinateTransform_s = ""CoordinateTransform""\nInterpolantsDonor_s = ""InterpolantsDonor""\nElementConnectivity_s = ""ElementConnectivity""\nElementStartOffset_s = ""ElementStartOffset""\nParentData_s = ""ParentData""\nParentElements_s = ""ParentElements""\nParentElementsPosition_s = ""ParentElementsPosition""\nElementSizeBoundary_s = ""ElementSizeBoundary""\nVectorX_ps = ""%sX""\nVectorY_ps = ""%sY""\nVectorZ_ps = ""%sZ""\nVectorTheta_ps = ""%sTheta""\nVectorPhi_ps = ""%sPhi""\nVectorMagnitude_ps = ""%sMagnitude""\nVectorNormal_ps = ""%sNormal""\nVectorTangential_ps = ""%sTangential""\nPotential_s = ""Potential""\nStreamFunction_s = ""StreamFunction""\nDensity_s = ""Density""\nPressure_s = ""Pressure""\nTemperature_s = ""Temperature""\nEnergyInternal_s = ""EnergyInternal""\nEnthalpy_s = ""Enthalpy""\nEntropy_s = ""Entropy""\nEntropyApprox_s = ""EntropyApprox""\nDensityStagnation_s = ""DensityStagnation""\nPressureStagnation_s = ""PressureStagnation""\nTemperatureStagnation_s = ""TemperatureStagnation""\nEnergyStagnation_s = ""EnergyStagnation""\nEnthalpyStagnation_s = ""EnthalpyStagnation""\nEnergyStagnationDensity_s = ""EnergyStagnationDensity""\nVelocityX_s = ""VelocityX""\nVelocityY_s = ""VelocityY""\nVelocityZ_s = ""VelocityZ""\nVelocityR_s = ""VelocityR""\nVelocityTheta_s = ""VelocityTheta""\nVelocityPhi_s = ""VelocityPhi""\nVelocityMagnitude_s = ""VelocityMagnitude""\nVelocityNormal_s = ""VelocityNormal""\nVelocityTangential_s = ""VelocityTangential""\nVelocitySound_s = ""VelocitySound""\nVelocitySoundStagnation_s = ""VelocitySoundStagnation""\nMomentumX_s = ""MomentumX""\nMomentumY_s = ""MomentumY""\nMomentumZ_s = ""MomentumZ""\nMomentumMagnitude_s = ""MomentumMagnitude""\nRotatingVelocityX_s = ""RotatingVelocityX""\nRotatingVelocityY_s = ""RotatingVelocityY""\nRotatingVelocityZ_s = ""RotatingVelocityZ""\nRotatingMomentumX_s = ""RotatingMomentumX""\nRotatingMomentumY_s = ""RotatingMomentumY""\nRotatingMomentumZ_s = ""RotatingMomentumZ""\nRotatingVelocityMagnitude_s = ""RotatingVelocityMagnitude""\nRotatingPressureStagnation_s = ""RotatingPressureStagnation""\nRotatingEnergyStagnation_s = ""RotatingEnergyStagnation""\nRotatingEnergyStagnationDensity_s = ""RotatingEnergyStagnationDensity""\nRotatingEnthalpyStagnation_s = ""RotatingEnthalpyStagnation""\nEnergyKinetic_s = ""EnergyKinetic""\nPressureDynamic_s = ""PressureDynamic""\nSoundIntensityDB_s = ""SoundIntensityDB""\nSoundIntensity_s = ""SoundIntensity""\nVorticityX_s = ""VorticityX""\nVorticityY_s = ""VorticityY""\nVorticityZ_s = ""VorticityZ""\nVorticityMagnitude_s = ""VorticityMagnitude""\nSkinFrictionX_s = ""SkinFrictionX""\nSkinFrictionY_s = ""SkinFrictionY""\nSkinFrictionZ_s = ""SkinFrictionZ""\nSkinFrictionMagnitude_s = ""SkinFrictionMagnitude""\nVelocityAngleX_s = ""VelocityAngleX""\nVelocityAngleY_s = ""VelocityAngleY""\nVelocityAngleZ_s = ""VelocityAngleZ""\nVelocityUnitVectorX_s = ""VelocityUnitVectorX""\nVelocityUnitVectorY_s = ""VelocityUnitVectorY""\nVelocityUnitVectorZ_s = ""VelocityUnitVectorZ""\nMassFlow_s = ""MassFlow""\nViscosityKinematic_s = ""ViscosityKinematic""\nViscosityMolecular_s = ""ViscosityMolecular""\nViscosityEddyDynamic_s = ""ViscosityEddyDynamic""\nViscosityEddy_s = ""ViscosityEddy""\nThermalConductivity_s = ""ThermalConductivity""\nPowerLawExponent_s = ""PowerLawExponent""\nSutherlandLawConstant_s = ""SutherlandLawConstant""\nTemperatureReference_s = ""TemperatureReference""\nViscosityMolecularReference_s = ""ViscosityMolecularReference""\nThermalConductivityReference_s = ""ThermalConductivityReference""\nIdealGasConstant_s = ""IdealGasConstant""\nSpecificHeatPressure_s = ""SpecificHeatPressure""\nSpecificHeatVolume_s = ""SpecificHeatVolume""\nReynoldsStressXX_s = ""ReynoldsStressXX""\nReynoldsStressXY_s = ""ReynoldsStressXY""\nReynoldsStressXZ_s = ""ReynoldsStressXZ""\nReynoldsStressYY_s = ""ReynoldsStressYY""\nReynoldsStressYZ_s = ""ReynoldsStressYZ""\nReynoldsStressZZ_s = ""ReynoldsStressZZ""\nLengthReference_s = ""LengthReference""\nMolecularWeight_s = ""MolecularWeight""\nMolecularWeight_ps = ""MolecularWeight%s""\nHeatOfFormation_s = ""HeatOfFormation""\nHeatOfFormation_ps = ""HeatOfFormation%s""\nFuelAirRatio_s = ""FuelAirRatio""\nReferenceTemperatureHOF_s = ""ReferenceTemperatureHOF""\nMassFraction_s = ""MassFraction""\nMassFraction_ps = ""MassFraction%s""\nLaminarViscosity_s = ""LaminarViscosity""\nLaminarViscosity_ps = ""LaminarViscosity%s""\nThermalConductivity_ps = ""ThermalConductivity%s""\nEnthalpyEnergyRatio_s = ""EnthalpyEnergyRatio""\nCompressibilityFactor_s = ""CompressibilityFactor""\nVibrationalElectronEnergy_s = ""VibrationalElectronEnergy""\nVibrationalElectronTemperature_s = ""VibrationalElectronTemperature""\nSpeciesDensity_s = ""SpeciesDensity""\nSpeciesDensity_ps = ""SpeciesDensity%s""\nMoleFraction_s = ""MoleFraction""\nMoleFraction_ps = ""MoleFraction%s""\nElectricFieldX_s = ""ElectricFieldX""\nElectricFieldY_s = ""ElectricFieldY""\nElectricFieldZ_s = ""ElectricFieldZ""\nMagneticFieldX_s = ""MagneticFieldX""\nMagneticFieldY_s = ""MagneticFieldY""\nMagneticFieldZ_s = ""MagneticFieldZ""\nCurrentDensityX_s = ""CurrentDensityX""\nCurrentDensityY_s = ""CurrentDensityY""\nCurrentDensityZ_s = ""CurrentDensityZ""\nLorentzForceX_s = ""LorentzForceX""\nLorentzForceY_s = ""LorentzForceY""\nLorentzForceZ_s = ""LorentzForceZ""\nElectricConductivity_s = ""ElectricConductivity""\nJouleHeating_s = ""JouleHeating""\nTurbulentDistance_s = ""TurbulentDistance""\nTurbulentDistanceIndex_s = ""TurbulentDistanceIndex""  # not SIDS\nTurbulentEnergyKinetic_s = ""TurbulentEnergyKinetic""\nTurbulentEnergyKineticDensity_s = ""TurbulentEnergyKineticDensity""  # not SIDS\nTurbulentDissipation_s = ""TurbulentDissipation""\nTurbulentDissipationRate_s = ""TurbulentDissipationRate""\nTurbulentDissipationDensity_s = ""TurbulentDissipationDensity""  # not SIDS\nTurbulentBBReynolds_s = ""TurbulentBBReynolds""\nTurbulentSANuTilde_s = ""TurbulentSANuTilde""\nTurbulentSANuTildeDensity_s = ""TurbulentSANuTildeDensity""  # not SIDS\nMach_s = ""Mach""\nMach_Velocity_s = ""Mach_Velocity""\nMach_VelocitySound_s = ""Mach_VelocitySound""\nReynolds_s = ""Reynolds""\nReynolds_Velocity_s = ""Reynolds_Velocity""\nReynolds_Length_s = ""Reynolds_Length""\nReynolds_ViscosityKinematic_s = ""Reynolds_ViscosityKinematic""\nPrandtl_s = ""Prandtl""\nPrandtl_ThermalConductivity_s = ""Prandtl_ThermalConductivity""\nPrandtl_ViscosityMolecular_s = ""Prandtl_ViscosityMolecular""\nPrandtl_SpecificHeatPressure_s = ""Prandtl_SpecificHeatPressure""\nPrandtlTurbulent_s = ""PrandtlTurbulent""\nSpecificHeatRatio_s = ""SpecificHeatRatio""\nSpecificHeatRatio_Pressure_s = ""SpecificHeatRatio_Pressure""\nSpecificHeatRatio_Volume_s = ""SpecificHeatRatio_Volume""\nCoefPressure_s = ""CoefPressure""\nCoefSkinFrictionX_s = ""CoefSkinFrictionX""\nCoefSkinFrictionY_s = ""CoefSkinFrictionY""\nCoefSkinFrictionZ_s = ""CoefSkinFrictionZ""\nCoef_PressureDynamic_s = ""Coef_PressureDynamic""\nCoef_PressureReference_s = ""Coef_PressureReference""\nVorticity_s = ""Vorticity""\nAcoustic_s = ""Acoustic""\nRiemannInvariantPlus_s = ""RiemannInvariantPlus""\nRiemannInvariantMinus_s = ""RiemannInvariantMinus""\nCharacteristicEntropy_s = ""CharacteristicEntropy""\nCharacteristicVorticity1_s = ""CharacteristicVorticity1""\nCharacteristicVorticity2_s = ""CharacteristicVorticity2""\nCharacteristicAcousticPlus_s = ""CharacteristicAcousticPlus""\nCharacteristicAcousticMinus_s = ""CharacteristicAcousticMinus""\nForceX_s = ""ForceX""\nForceY_s = ""ForceY""\nForceZ_s = ""ForceZ""\nForceR_s = ""ForceR""\nForceTheta_s = ""ForceTheta""\nForcePhi_s = ""ForcePhi""\nLift_s = ""Lift""\nDrag_s = ""Drag""\nMomentX_s = ""MomentX""\nMomentY_s = ""MomentY""\nMomentZ_s = ""MomentZ""\nMomentR_s = ""MomentR""\nMomentTheta_s = ""MomentTheta""\nMomentPhi_s = ""MomentPhi""\nMomentXi_s = ""MomentXi""\nMomentEta_s = ""MomentEta""\nMomentZeta_s = ""MomentZeta""\nMoment_CenterX_s = ""Moment_CenterX""\nMoment_CenterY_s = ""Moment_CenterY""\nMoment_CenterZ_s = ""Moment_CenterZ""\nCoefLift_s = ""CoefLift""\nCoefDrag_s = ""CoefDrag""\nCoefMomentX_s = ""CoefMomentX""\nCoefMomentY_s = ""CoefMomentY""\nCoefMomentZ_s = ""CoefMomentZ""\nCoefMomentR_s = ""CoefMomentR""\nCoefMomentTheta_s = ""CoefMomentTheta""\nCoefMomentPhi_s = ""CoefMomentPhi""\nCoefMomentXi_s = ""CoefMomentXi""\nCoefMomentEta_s = ""CoefMomentEta""\nCoefMomentZeta_s = ""CoefMomentZeta""\nCoef_PressureDynamic_s = ""Coef_PressureDynamic""\nCoef_Area_s = ""Coef_Area""\nCoef_Length_s = ""Coef_Length""\nTimeValues_s = ""TimeValues""\nIterationValues_s = ""IterationValues""\nNumberOfZones_s = ""NumberOfZones""\nNumberOfFamilies_s = ""NumberOfFamilies""\nNumberOfSteps_s = ""NumberOfSteps""\nDataConversion_s = ""DataConversion""\n\nZonePointers_s = ""ZonePointers""\nFamilyPointers_s = ""FamilyPointers""\nRigidGridMotionPointers_s = ""RigidGridMotionPointers""\nArbitraryGridMotionPointers_s = ""ArbitraryGridMotionPointers""\nGridCoordinatesPointers_s = ""GridCoordinatesPointers""\nFlowSolutionPointers_s = ""FlowSolutionPointers""\nZoneGridConnectivityPointers_s = ""ZoneGridConnectivityPointers""\nZoneSubRegionPointers_s = ""ZoneSubRegionPointers""\nPointerNames_l = [ZonePointers_s, FamilyPointers_s, RigidGridMotionPointers_s,\n                  ArbitraryGridMotionPointers_s, GridCoordinatesPointers_s,\n                  FlowSolutionPointers_s,\n                  ZoneGridConnectivityPointers_s, ZoneSubRegionPointers_s]\n\nOriginLocation_s = ""OriginLocation""\nRigidRotationAngle_s = ""RigidRotationAngle""\nTranslation_s = ""Translation""\nRotationAngle_s = ""RotationAngle""\nRigidVelocity_s = ""RigidVelocity""\nRigidRotationRate_s = ""RigidRotationRate""\nGridVelocityX_s = ""GridVelocityX""\nGridVelocityY_s = ""GridVelocityY""\nGridVelocityZ_s = ""GridVelocityZ""\nGridVelocityR_s = ""GridVelocityR""\nGridVelocityTheta_s = ""GridVelocityTheta""\nGridVelocityPhi_s = ""GridVelocityPhi""\nGridVelocityXi_s = ""GridVelocityXi""\nGridVelocityEta_s = ""GridVelocityEta""\nGridVelocityZeta_s = ""GridVelocityZeta""\n\nSurfaceArea_s = ""SurfaceArea""\nRegionName_s = ""RegionName""\nAverageInterface_ts = ""AverageInterface_t""\nAxisymmetry_ts = ""Axisymmetry_t""\nAxisymmetry_s = ""Axisymmetry""\nAxisymmetryReferencePoint_s = ""AxisymmetryReferencePoint""\nAxisymmetryAxisVector_s = ""AxisymmetryAxisVector""\nAxisymmetryAngle_s = ""AxisymmetryAngle""\nBCDataSet_ts = ""BCDataSet_t""\nBCData_ts = ""BCData_t""\nBCData_s = ""BCData""\n\nBCProperty_ts = ""BCProperty_t""\nBCProperty_s = ""BCProperty""\nBC_ts = ""BC_t""\n\nBaseIterativeData_ts = ""BaseIterativeData_t""\nBaseIterativeData_s = ""BaseIterativeData""\n\nCGNSBase_ts = ""CGNSBase_t""\nCGNSLibraryVersion_ts = ""CGNSLibraryVersion_t""\n\n# --------------------------------------------------\nConvergenceHistory_ts = ""ConvergenceHistory_t""\nZoneConvergenceHistory_s = ""ZoneConvergenceHistory""\nGlobalConvergenceHistory_s = ""GlobalConvergenceHistory""\n\nConvergenceHistory_l = [ZoneConvergenceHistory_s,\n                        GlobalConvergenceHistory_s]\n\nNormDefinitions_s = ""NormDefinitions""\n\nDataArray_ts = ""DataArray_t""\nDataConversion_ts = ""DataConversion_t""\nDescriptor_ts = ""Descriptor_t""\n\n# --------------------------------------------------\nDimensionalExponents_ts = ""DimensionalExponents_t""\nDimensionalExponents_s = ""DimensionalExponents""\nDimensionalUnits_ts = ""DimensionalUnits_t""\nAdditionalUnits_ts = ""AdditionalUnits_t""\nAdditionalExponents_ts = ""AdditionalExponents_t""\n\nDiscreteData_ts = ""DiscreteData_t""\nDiscreteData_s = ""DiscreteData""\n\nFamilyBC_s = ""FamilyBC""\nFamilyBC_ts = ""FamilyBC_t""\nFamilyBCDataSet_ts = ""FamilyBCDataSet_t""\n\nFamilyName_ts = ""FamilyName_t""\nFamilyName_s = ""FamilyName""\nAdditionalFamilyName_ts = ""AdditionalFamilyName_t""\nAdditionalFamilyName_s = ""AdditionalFamilyName""\nFamily_ts = ""Family_t""\nFamily_s = ""Family""\nFlowEquationSet_ts = ""FlowEquationSet_t""\nFlowEquationSet_s = ""FlowEquationSet""\nFlowSolution_ts = ""FlowSolution_t""\nGasModel_ts = ""GasModel_t""\nGasModel_s = ""GasModel""\n\nGeometryEntity_ts = ""GeometryEntity_t""\nGeometryFile_ts = ""GeometryFile_t""\nGeometryFile_s = ""GeometryFile""\n\nGeometryFormat_s = ""GeometryFormat""\nGeometryFormat_ts = ""GeometryFormat_t""\n\n# not supported \'-\'\nNASAIGES_s = ""NASA-IGES""\nICEMCFD_s = ""ICEM-CFD""\n\nSDRC_s = ""SDRC""\nUnigraphics_s = ""Unigraphics""\nProEngineer_s = ""ProEngineer""\nGeometryFormat_l = [Null_s, NASAIGES_s, SDRC_s, Unigraphics_s,\n                    ProEngineer_s, ICEMCFD_s, UserDefined_s]\nGeometryReference_ts = ""GeometryReference_t""\nGeometryReference_s = ""GeometryReference""\n\nGravity_ts = ""Gravity_t""\nGravity_s = ""Gravity""\nGravityVector_s = ""GravityVector""\n\nGridConnectivity1to1_ts = ""GridConnectivity1to1_t""\nGridConnectivityProperty_ts = ""GridConnectivityProperty_t""\nGridConnectivityProperty_s = ""GridConnectivityProperty""\n\nGridCoordinates_ts = ""GridCoordinates_t""\nIndexArray_ts = ""IndexArray_t""\nIndexRange_ts = ""IndexRange_t""\nIntegralData_ts = ""IntegralData_t""\nInwardNormalList_ts = ""InwardNormalList_t""\nInwardNormalList_s = ""InwardNormalList""\nInwardNormalIndex_s = ""InwardNormalIndex""\nOrdinal_ts = ""Ordinal_t""\nOrdinal_s = ""Ordinal""\nTransform_s = ""Transform""\nOversetHoles_ts = ""OversetHoles_t""\nOversetHoles_s = ""OversetHoles""\nPeriodic_ts = ""Periodic_t""\nPeriodic_s = ""Periodic""\n\nReferenceState_ts = ""ReferenceState_t""\nReferenceState_s = ""ReferenceState""\nReferenceStateDescription_s = ""ReferenceStateDescription""\n\nRigidGridMotion_ts = ""RigidGridMotion_t""\nRigidGridMotion_s = ""RigidGridMotion""\n\nRind_s = ""Rind""\nRind_ts = ""Rind_t""\n\nRotatingCoordinates_s = ""RotatingCoordinates""\nRotatingCoordinates_ts = ""RotatingCoordinates_t""\nRotationRateVector_s = ""RotationRateVector""\nRotationCenter_s = ""RotationCenter""\n\nGoverningEquations_s = ""GoverningEquations""\nGoverningEquations_ts = ""GoverningEquations_t""\n\nGoverningEquationsType_l = [Null_s, UserDefined_s,\n                            FullPotential_s, Euler_s, NSLaminar_s,\n                            NSTurbulent_s, NSLaminarIncompressible_s,\n                            NSTurbulentIncompressible_s]\nGoverningEquationsType_s = ""GoverningEquationsType""\nGoverningEquationsType_ts = ""GoverningEquationsType_t""\nGoverningEquationsType = stringAsKeyDict(GoverningEquationsType_l)\nGoverningEquationsType_ = enumAsKeyDict(GoverningEquationsType_l)\n(GoverningEquationsNull, GoverningEquationUserDefined,\n FullPotential, Euler, NSLaminar,\n NSTurbulent, NSLaminarIncompressible,\n NSTurbulentIncompressible) = list(GoverningEquationsType_)\n\n# --------------------------------------------------\nBCType_s = ""BCType""\nBCType_ts = ""BCType_t""\nBCTypeSimple_s = ""BCTypeSimple""\nBCTypeSimple_ts = ""BCTypeSimple_t""\nBCTypeCompound_s = ""BCTypeCompound""\nBCTypeCompound_ts = ""BCTypeCompound_ts""\n\nBCAxisymmetricWedge_s = ""BCAxisymmetricWedge""\nBCDegenerateLine_s = ""BCDegenerateLine""\nBCDegeneratePoint_s = ""BCDegeneratePoint""\nBCDirichlet_s = ""BCDirichlet""\nBCExtrapolate_s = ""BCExtrapolate""\nBCFarfield_s = ""BCFarfield""\nBCGeneral_s = ""BCGeneral""\nBCInflow_s = ""BCInflow""\nBCInflowSubsonic_s = ""BCInflowSubsonic""\nBCInflowSupersonic_s = ""BCInflowSupersonic""\nBCNeumann_s = ""BCNeumann""\nBCOutflow_s = ""BCOutflow""\nBCOutflowSubsonic_s = ""BCOutflowSubsonic""\nBCOutflowSupersonic_s = ""BCOutflowSupersonic""\nBCSymmetryPlane_s = ""BCSymmetryPlane""\nBCSymmetryPolar_s = ""BCSymmetryPolar""\nBCTunnelInflow_s = ""BCTunnelInflow""\nBCTunnelOutflow_s = ""BCTunnelOutflow""\nBCWall_s = ""BCWall""\nBCWallInviscid_s = ""BCWallInviscid""\nBCWallViscous_s = ""BCWallViscous""\nBCWallViscousHeatFlux_s = ""BCWallViscousHeatFlux""\nBCWallViscousIsothermal_s = ""BCWallViscousIsothermal""\n\nBCType_l = [Null_s, UserDefined_s,\n            BCAxisymmetricWedge_s, BCDegenerateLine_s, BCDegeneratePoint_s,\n            BCDirichlet_s, BCExtrapolate_s, BCFarfield_s,\n            BCGeneral_s, BCInflow_s, BCInflowSubsonic_s, BCInflowSupersonic_s,\n            BCNeumann_s, BCOutflow_s, BCOutflowSubsonic_s, BCOutflowSupersonic_s,\n            BCSymmetryPlane_s, BCSymmetryPolar_s,\n            BCTunnelInflow_s, BCTunnelOutflow_s,\n            BCWall_s, BCWallInviscid_s, BCWallViscous_s,\n            BCWallViscousHeatFlux_s, BCWallViscousIsothermal_s,\n            FamilySpecified_s]\nBCType = stringAsKeyDict(BCType_l)\nBCType_ = enumAsKeyDict(BCType_l)\n(Null, UserDefined,\n BCAxisymmetricWedge, BCDegenerateLine, BCDegeneratePoint,\n BCDirichlet, BCExtrapolate, BCFarfield,\n BCGeneral, BCInflow, BCInflowSubsonic, BCInflowSupersonic,\n BCNeumann, BCOutflow, BCOutflowSubsonic, BCOutflowSupersonic,\n BCSymmetryPlane, BCSymmetryPolar,\n BCTunnelInflow, BCTunnelOutflow,\n BCWall, BCWallInviscid, BCWallViscous,\n BCWallViscousHeatFlux, BCWallViscousIsothermal,\n FamilySpecified) = list(BCType_)\n\nBC_l = BCType_l\nBC = BCType\nBC_ = BCType_\n\nFamilyBC_l = BCType_l\nFamilyBC = BCType\nFamilyBC_ = BCType_\n\n# CAUTION, index of values in the lists below cannot be used as enumerate,\n# the lists are subset of the global list and some index are missing.\nBCTypeSimple_l = [Null_s, UserDefined_s, BCGeneral_s, BCDirichlet_s, BCNeumann_s,\n                  BCExtrapolate_s, BCWallInviscid_s, BCWallViscousHeatFlux_s,\n                  BCWallViscousIsothermal_s, BCWallViscous_s, BCWall_s,\n                  BCInflowSubsonic_s, BCInflowSupersonic_s, BCOutflowSubsonic_s,\n                  BCOutflowSupersonic_s, BCTunnelInflow_s, BCTunnelOutflow_s,\n                  BCDegenerateLine_s, BCDegeneratePoint_s, BCSymmetryPlane_s,\n                  BCSymmetryPolar_s, BCAxisymmetricWedge_s, FamilySpecified_s]\nBCTypeCompound_l = [Null_s, UserDefined_s,\n                    BCInflow_s, BCOutflow_s, BCFarfield_s]\n\n# --------------------------------------------------\n# WARNING -\n# - the model sub-list CANNOT be used to define the corresponding enumerate\n#   because the new values are add at the end of a global list (ModelType)\n#   then the ONLY enumerate to use is the ModelType one which has its own list\n#\nGasModelType_l = [Null_s, UserDefined_s,\n                  Ideal_s, VanderWaals_s, CaloricallyPerfect_s,\n                  ThermallyPerfect_s, ConstantDensity_s, RedlichKwong_s]\nGasModelType_s = ""GasModelType""\nGasModelType_ts = ""GasModelType_t""\nGasModelIdentifier_l = [IdealGasConstant_s, SpecificHeatRatio_s,\n                        SpecificHeatVolume_s, SpecificHeatPressure_s]\n\nViscosityModel_ts = ""ViscosityModel_t""\nViscosityModel_s = ""ViscosityModel""\nViscosityModelType_l = [Null_s, UserDefined_s,\n                        Constant_s, PowerLaw_s, SutherlandLaw_s]\nViscosityModelType_s = ""ViscosityModelType""\nViscosityModelType_ts = ""ViscosityModelType_t""\nViscosityModelIdentifier_l = [PowerLawExponent_s, SutherlandLawConstant_s,\n                              TemperatureReference_s,\n                              ViscosityMolecularReference_s]\n\nThermalConductivityModel_ts = ""ThermalConductivityModel_t""\nThermalConductivityModel_s = ""ThermalConductivityModel""\nThermalConductivityModelType_l = [Null_s, UserDefined_s,\n                                  ConstantPrandtl_s, PowerLaw_s,\n                                  SutherlandLaw_s]\nThermalConductivityModelType_s = ""ThermalConductivityModelType""\nThermalConductivityModelType_ts = ""ThermalConductivityModelType_t""\nThermalConductivityModelIdentifier_l = [Prandtl_s, PowerLawExponent_s,\n                                        SutherlandLawConstant_s,\n                                        TemperatureReference_s,\n                                        ThermalConductivityReference_s]\n\nTurbulenceModel_ts = ""TurbulenceModel_t""\nTurbulenceModel_s = ""TurbulenceModel""\nTurbulenceModelType_l = [Null_s, UserDefined_s,\n                         Algebraic_BaldwinLomax_s,\n                         Algebraic_CebeciSmith_s,\n                         HalfEquation_JohnsonKing_s,\n                         OneEquation_BaldwinBarth_s,\n                         OneEquation_SpalartAllmaras_s,\n                         TwoEquation_JonesLaunder_s,\n                         TwoEquation_MenterSST_s, TwoEquation_Wilcox_s]\nTurbulenceModelType_s = ""TurbulenceModelType""\nTurbulenceModelType_ts = ""TurbulenceModelType_t""\n\nTurbulenceClosure_ts = ""TurbulenceClosure_t""\nTurbulenceClosure_s = ""TurbulenceClosure""\nTurbulenceClosureType_l = [Null_s, UserDefined_s,\n                           EddyViscosity_s, ReynoldsStress_s,\n                           ReynoldsStressAlgebraic_s]\nTurbulenceClosureType_s = ""TurbulenceClosureType""\nTurbulenceClosureType_ts = ""TurbulenceClosureType_t""\nTurbulenceClosureIdentifier_l = [PrandtlTurbulent_s]\n\nThermalRelaxationModel_ts = ""ThermalRelaxationModel_t""\nThermalRelaxationModel_s = ""ThermalRelaxationModel""\nThermalRelaxationModelType_l = [Null_s, UserDefined_s,\n                                Frozen_s, ThermalEquilib_s,\n                                ThermalNonequilib_s]\nThermalRelaxationModelType_s = ""ThermalRelaxationModelType""\nThermalRelaxationModelType_ts = ""ThermalRelaxationModelType_t""\n\nChemicalKineticsModel_ts = ""ChemicalKineticsModel_t""\nChemicalKineticsModel_s = ""ChemicalKineticsModel""\nChemicalKineticsModelType_l = [Null_s, UserDefined_s,\n                               Frozen_s, ChemicalEquilibCurveFit_s,\n                               ChemicalEquilibMinimization_s,\n                               ChemicalNonequilib_s]\nChemicalKineticsModelType_s = ""ChemicalKineticsModelType""\nChemicalKineticsModelType_ts = ""ChemicalKineticsModelType_t""\nChemicalKineticsModelIdentifier_l = [FuelAirRatio_s, ReferenceTemperatureHOF_s]\n\nEMElectricFieldModel_s = ""EMElectricFieldModel""\nEMElectricFieldModel_ts = ""EMElectricFieldModel_t""\nEMElectricFieldModelType_l = [Null_s, UserDefined_s,\n                              Constant_s, Frozen_s,\n                              Interpolated_s, Voltage_s]\nEMElectricFieldModelType_s = ""EMElectricFieldModelType""\nEMElectricFieldModelType_ts = ""EMElectricFieldModelType_t""\n\nEMMagneticFieldModel_s = ""EMMagneticFieldModel""\nEMMagneticFieldModel_ts = ""EMMagneticFieldModel_t""\nEMMagneticFieldModelType_l = [Null_s, UserDefined_s,\n                              Constant_s, Frozen_s, Interpolated_s]\nEMMagneticFieldModelType_s = ""EMMagneticFieldModelType""\nEMMagneticFieldModelType_ts = ""EMMagneticFieldModelType_t""\n\nEMConductivityModel_s = ""EMConductivityModel""\nEMConductivityModel_ts = ""EMConductivityModel_t""\nEMConductivityModelType_l = [Null_s, UserDefined_s,\n                             Constant_s, Frozen_s,\n                             Equilibrium_LinRessler_s,\n                             Chemistry_LinRessler_s]\nEMConductivityModelType_s = ""EMConductivityModelType""\nEMConductivityModelType_ts = ""EMConductivityModelType_t""\nEMConductivityModelIdentifier_l = [Null_s, UserDefined_s,\n                                   ElectricFieldX_s, ElectricFieldY_s,\n                                   ElectricFieldZ_s, MagneticFieldX_s,\n                                   MagneticFieldY_s, MagneticFieldZ_s,\n                                   CurrentDensityX_s, CurrentDensityY_s,\n                                   CurrentDensityZ_s, ElectricConductivity_s,\n                                   LorentzForceX_s, LorentzForceY_s,\n                                   LorentzForceZ_s, JouleHeating_s]\n\nModelType_l = [Null_s, UserDefined_s,\n               Ideal_s, VanderWaals_s, Constant_s, PowerLaw_s, SutherlandLaw_s,\n               ConstantPrandtl_s, EddyViscosity_s, ReynoldsStress_s,\n               ReynoldsStressAlgebraic_s, Algebraic_BaldwinLomax_s,\n               Algebraic_CebeciSmith_s, HalfEquation_JohnsonKing_s,\n               OneEquation_BaldwinBarth_s, OneEquation_SpalartAllmaras_s,\n               TwoEquation_JonesLaunder_s, TwoEquation_MenterSST_s,\n               TwoEquation_Wilcox_s, CaloricallyPerfect_s, ThermallyPerfect_s,\n               ConstantDensity_s, RedlichKwong_s, Frozen_s, ThermalEquilib_s,\n               ThermalNonequilib_s, ChemicalEquilibCurveFit_s,\n               ChemicalEquilibMinimization_s, ChemicalNonequilib_s,\n               EMElectricField_s, EMMagneticField_s, EMConductivity_s,\n               Voltage_s, Interpolated_s, Equilibrium_LinRessler_s,\n               Chemistry_LinRessler_s]\nModelType = stringAsKeyDict(ModelType_l)\nModelType_ = enumAsKeyDict(ModelType_l)\n(Null, UserDefined,\n Ideal, VanderWaals, Constant, PowerLaw, SutherlandLaw,\n ConstantPrandtl, EddyViscosity, ReynoldsStress,\n ReynoldsStressAlgebraic, Algebraic_BaldwinLomax,\n Algebraic_CebeciSmith, HalfEquation_JohnsonKing,\n OneEquation_BaldwinBarth, OneEquationpalartAllmaras,\n TwoEquation_JonesLaunder, TwoEquation_MenterSST,\n TwoEquation_Wilcox, CaloricallyPerfect, ThermallyPerfect,\n ConstantDensity, RedlichKwong, Frozen, ThermalEquilib,\n ThermalNonequilib, ChemicalEquilibCurveFit,\n ChemicalEquilibMinimization, ChemicalNonequilib,\n EMElectricField, EMMagneticField, EMConductivity,\n Voltage, Interpolated, Equilibrium_LinRessler,\n Chemistry_LinRessler) = list(ModelType_)\n\nDiffusionModel_s = \'DiffusionModel\'\nEquationDimension_s = \'EquationDimension\'\n\n# --------------------------------------------------\n\nAverageInterfaceType_s = ""AverageInterfaceType""\nAverageInterfaceType_ts = ""AverageInterfaceType_t""\nAverageInterfaceType_l = [Null_s, UserDefined_s,\n                          AverageAll_s, AverageCircumferential_s,\n                          AverageRadial_s, AverageI_s, AverageJ_s, AverageK_s]\n\nAverageInterfaceType = stringAsKeyDict(AverageInterfaceType_l)\nAverageInterfaceType_ = enumAsKeyDict(AverageInterfaceType_l)\n(Null, UserDefined,\n AverageAll, AverageCircumferential,\n AverageRadial, AverageI, AverageJ, AverageK) = list(AverageInterfaceType_)\n\nAverageInterface_s = ""AverageInterface""\nAverageInterface_ts = ""AverageInterface_t""\n\nNODE_s = ""NODE""\nBAR_2_s = ""BAR_2""\nBAR_3_s = ""BAR_3""\nTRI_3_s = ""TRI_3""\nTRI_6_s = ""TRI_6""\nQUAD_4_s = ""QUAD_4""\nQUAD_8_s = ""QUAD_8""\nQUAD_9_s = ""QUAD_9""\nTETRA_4_s = ""TETRA_4""\nTETRA_10_s = ""TETRA_10""\nPYRA_5_s = ""PYRA_5""\nPYRA_14_s = ""PYRA_14""\nPENTA_6_s = ""PENTA_6""\nPENTA_15_s = ""PENTA_15""\nPENTA_18_s = ""PENTA_18""\nHEXA_8_s = ""HEXA_8""\nHEXA_20_s = ""HEXA_20""\nHEXA_27_s = ""HEXA_27""\nMIXED_s = ""MIXED""\nPYRA_13_s = ""PYRA_13""\nNGON_n_s = ""NGON_n""\nNFACE_n_s = ""NFACE_n""\nBAR_4_s = ""BAR_4""\nTRI_9_s = ""TRI_9""\nTRI_10_s = ""TRI_10""\nQUAD_12_s = ""QUAD_12""\nQUAD_16_s = ""QUAD_16""\nTETRA_16_s = ""TETRA_16""\nTETRA_20_s = ""TETRA_20""\nPYRA_21_s = ""PYRA_21""\nPYRA_29_s = ""PYRA_29""\nPYRA_30_s = ""PYRA_30""\nPENTA_24_s = ""PENTA_24""\nPENTA_38_s = ""PENTA_38""\nPENTA_40_s = ""PENTA_40""\nHEXA_32_s = ""HEXA_32""\nHEXA_56_s = ""HEXA_56""\nHEXA_64_s = ""HEXA_64""\nBAR_5_s = ""BAR_5""\nTRI_12_s = ""TRI_12""\nTRI_15_s = ""TRI_15""\nQUAD_P4_16_s = ""QUAD_P4_16""\nQUAD_25_s = ""QUAD_25""\nTETRA_22_s = ""TETRA_22""\nTETRA_34_s = ""TETRA_34""\nTETRA_35_s = ""TETRA_35""\nPYRA_P4_29_s = ""PYRA_P4_29""\nPYRA_50_s = ""PYRA_50""\nPYRA_55_s = ""PYRA_55""\nPENTA_33_s = ""PENTA_33""\nPENTA_66_s = ""PENTA_66""\nPENTA_75_s = ""PENTA_75""\nHEXA_44_s = ""HEXA_44""\nHEXA_98_s = ""HEXA_98""\nHEXA_125_s = ""HEXA_125""\n\n# ORDER *IS* SIGNIFICANT\n\nNull_npe = 0\nUserDefined_npe = 0\nNODE_npe = 1\nBAR_2_npe = 2\nBAR_3_npe = 3\nTRI_3_npe = 3\nTRI_6_npe = 6\nQUAD_4_npe = 4\nQUAD_8_npe = 8\nQUAD_9_npe = 9\nTETRA_4_npe = 4\nTETRA_10_npe = 10\nPYRA_5_npe = 5\nPYRA_14_npe = 14\nPENTA_6_npe = 6\nPENTA_15_npe = 15\nPENTA_18_npe = 18\nHEXA_8_npe = 8\nHEXA_20_npe = 20\nHEXA_27_npe = 27\nMIXED_npe = 0\nPYRA_13_npe = 13\nNGON_n_npe = 0\nNFACE_n_npe = 0\nBAR_4_npe = 4\nTRI_9_npe = 9\nTRI_10_npe = 10\nQUAD_12_npe = 12\nQUAD_16_npe = 16\nTETRA_16_npe = 16\nTETRA_20_npe = 20\nPYRA_21_npe = 21\nPYRA_29_npe = 29\nPYRA_30_npe = 30\nPENTA_24_npe = 24\nPENTA_38_npe = 38\nPENTA_40_npe = 40\nHEXA_32_npe = 32\nHEXA_56_npe = 56\nHEXA_64_npe = 64\nBAR_5_npe = 40\nTRI_12_npe = 41\nTRI_15_npe = 42\nQUAD_P4_16_npe = 43\nQUAD_25_npe = 44\nTETRA_22_npe = 45\nTETRA_34_npe = 46\nTETRA_35_npe = 47\nPYRA_P4_29_npe = 48\nPYRA_50_npe = 49\nPYRA_55_npe = 50\nPENTA_33_npe = 51\nPENTA_66_npe = 52\nPENTA_75_npe = 53\nHEXA_44_npe = 54\nHEXA_98_npe = 55\nHEXA_125_npe = 56\n\nElements_ts = ""Elements_t""\nElementType_ts = ""ElementType_t""\nElementType_s = ""ElementType""\nElements_s = ""Elements""\nElementType_l = [Null_s, UserDefined_s, NODE_s, BAR_2_s, BAR_3_s,\n                 TRI_3_s, TRI_6_s, QUAD_4_s, QUAD_8_s, QUAD_9_s,\n                 TETRA_4_s, TETRA_10_s, PYRA_5_s, PYRA_14_s,\n                 PENTA_6_s, PENTA_15_s, PENTA_18_s,\n                 HEXA_8_s, HEXA_20_s, HEXA_27_s, MIXED_s, PYRA_13_s,\n                 NGON_n_s, NFACE_n_s, BAR_4_s, TRI_9_s, TRI_10_s, QUAD_12_s,\n                 QUAD_16_s, TETRA_16_s, TETRA_20_s, PYRA_21_s, PYRA_29_s,\n                 PYRA_30_s, PENTA_24_s, PENTA_38_s, PENTA_40_s, HEXA_32_s,\n                 HEXA_56_s, HEXA_64_s, BAR_5_s, TRI_12_s, TRI_15_s,\n                 QUAD_P4_16_s, QUAD_25_s, TETRA_22_s, TETRA_34_s,\n                 TETRA_35_s, PYRA_P4_29_s, PYRA_50_s, PYRA_55_s, PENTA_33_s,\n                 PENTA_66_s, PENTA_75_s, HEXA_44_s, HEXA_98_s, HEXA_125_s]\nElementTypeNPE_l = [Null_npe, UserDefined_npe, NODE_npe, BAR_2_npe, BAR_3_npe,\n                    TRI_3_npe, TRI_6_npe, QUAD_4_npe, QUAD_8_npe, QUAD_9_npe,\n                    TETRA_4_npe, TETRA_10_npe, PYRA_5_npe, PYRA_14_npe,\n                    PENTA_6_npe, PENTA_15_npe, PENTA_18_npe,\n                    HEXA_8_npe, HEXA_20_npe, HEXA_27_npe, MIXED_npe,\n                    PYRA_13_npe, NGON_n_npe, NFACE_n_npe, BAR_4_npe, TRI_9_npe,\n                    TRI_10_npe, QUAD_12_npe, QUAD_16_npe, TETRA_16_npe,\n                    TETRA_20_npe, PYRA_21_npe, PYRA_29_npe,\n                    PYRA_30_npe, PENTA_24_npe, PENTA_38_npe, PENTA_40_npe,\n                    HEXA_32_npe, HEXA_56_npe, HEXA_64_npe,\n                    BAR_5_npe, TRI_12_npe, TRI_15_npe,\n                    QUAD_P4_16_npe, QUAD_25_npe, TETRA_22_npe, TETRA_34_npe,\n                    TETRA_35_npe, PYRA_P4_29_npe, PYRA_50_npe, PYRA_55_npe,\n                    PENTA_33_npe,\n                    PENTA_66_npe, PENTA_75_npe,\n                    HEXA_44_npe, HEXA_98_npe, HEXA_125_npe]\nElementType = stringAsKeyDict(ElementType_l)\nElementType_ = enumAsKeyDict(ElementType_l)\nElementTypeNPE = dict(zip(ElementType_l, ElementTypeNPE_l))\n(Null, UserDefined, NODE, BAR_2, BAR_3,\n TRI_3, TRI_6, QUAD_4, QUAD_8, QUAD_9,\n TETRA_4, TETRA_10, PYRA_5, PYRA_14,\n PENTA_6, PENTA_15, PENTA_18,\n HEXA_8, HEXA_20, HEXA_27, MIXED, PYRA_13,\n NGON_n, NFACE_n,\n BAR_4, TRI_9, TRI_10, QUAD_12,\n QUAD_16, TETRA_16, TETRA_20, PYRA_21, PYRA_29,\n PYRA_30, PENTA_24, PENTA_38, PENTA_40, HEXA_32,\n HEXA_56, HEXA_64, BAR_5, TRI_12, TRI_15,\n QUAD_P4_16, QUAD_25, TETRA_22, TETRA_34,\n TETRA_35, PYRA_P4_29, PYRA_50, PYRA_55,\n PENTA_33,\n PENTA_66, PENTA_75,\n HEXA_44, HEXA_98, HEXA_125) = list(ElementType_)\n\nElementType3D = [TETRA_4, TETRA_10, PYRA_5, PYRA_14,\n                 PENTA_6, PENTA_15, PENTA_18,\n                 HEXA_8, HEXA_20, HEXA_27, MIXED, PYRA_13,\n                 TETRA_16, TETRA_20, PYRA_21, PYRA_29,\n                 PYRA_30, PENTA_24, PENTA_38, PENTA_40, HEXA_32,\n                 HEXA_56, HEXA_64, TETRA_22, TETRA_34,\n                 TETRA_35, PYRA_P4_29, PYRA_50, PYRA_55,\n                 PENTA_33, PENTA_66, PENTA_75,\n                 HEXA_44, HEXA_98, HEXA_125]\nElementType2D = [TRI_3, TRI_6, QUAD_4, QUAD_8, QUAD_9,\n                 TRI_9, TRI_10, QUAD_12, QUAD_16, TRI_12, TRI_15,\n                 QUAD_P4_16, QUAD_25]\nElementType1D = [BAR_2, BAR_3, BAR_4, BAR_5]\nElementType0D = [NODE]\nElementType_tri = [TRI_3, TRI_6, TRI_9, TRI_10, TRI_12, TRI_15]\nElementType_quad = [QUAD_4, QUAD_8, QUAD_9, QUAD_12, QUAD_16,\n                    QUAD_P4_16, QUAD_25]\nElementType_tetra = [TETRA_4, TETRA_10, TETRA_16, TETRA_20, TETRA_22, TETRA_34,\n                     TETRA_35]\nElementType_pyra = [PYRA_13, PYRA_21, PYRA_29, PYRA_30,\n                    PYRA_P4_29, PYRA_50, PYRA_55]\nElementType_penta = [PENTA_6, PENTA_15, PENTA_18, PENTA_24, PENTA_38, PENTA_40,\n                     PENTA_33, PENTA_66, PENTA_75]\nElementType_hexa = [HEXA_8, HEXA_20, HEXA_27, HEXA_32, HEXA_56, HEXA_64,\n                    HEXA_44, HEXA_98, HEXA_125]\nElementType_trionly = ElementType_tetra\nElementType_quadonly = ElementType_hexa\nElementType_triquad = ElementType_pyra + ElementType_penta\n\nElementRangeList_s = ""ElementRangeList""\n#\n\n# ---\ncgnsnames = [globals()[k] for k in dir() if (k[-2:] == \'_s\')]\ncgnstypes = [globals()[k] for k in dir() if (k[-3:] == \'_ts\')] + list(weirdSIDStypes)\ncgnsenums = {\n    GoverningEquations_ts: GoverningEquationsType_l,\n    GasModel_ts: GasModelType_l,\n    GasModelType_ts: GasModelIdentifier_l,\n    TurbulenceModel_ts: TurbulenceModelType_l,\n    ViscosityModel_ts: ViscosityModelType_l,\n    ViscosityModelType_ts: ViscosityModelIdentifier_l,\n    ThermalConductivityModel_ts: ThermalConductivityModelType_l,\n    ThermalConductivityModelType_ts: ThermalConductivityModelIdentifier_l,\n    ThermalRelaxationModel_ts: ThermalRelaxationModelType_l,\n    ChemicalKineticsModel_ts: ChemicalKineticsModelType_l,\n    ChemicalKineticsModelType_ts: ChemicalKineticsModelIdentifier_l,\n    EMElectricFieldModel_ts: EMElectricFieldModelType_l,\n    EMMagneticFieldModel_ts: EMMagneticFieldModelType_l,\n    EMConductivityModel_ts: EMConductivityModelType_l,\n    EMConductivityModelType_ts: EMConductivityModelIdentifier_l,\n}\nfor k in dir():\n    if (k[-2:] == \'_l\'):\n        cgnsenums[k[:-1] + \'t\'] = locals()[k]\n#\ncgnsnames.sort()\ncgnstypes.sort()\n#\n# Compatibility\n# - some constants have no integer/string correspondance, the legacy wrapper\n#   had its own defines, try to set them as long as it doens\'t collide with\n#   existing constants.\n#\nCoordinateX = CoordinateX_s\nCoordinateY = CoordinateY_s\nCoordinateZ = CoordinateZ_s\nCoefLift = CoefLift_s\nDensity = Density_s\n\nZone_t = Zone_ts\nReferenceState_t = ReferenceState_ts\nFlowEquationSet_t = FlowEquationSet_ts\nGoverningEquations_t = GoverningEquations_ts\nGasModel_t = GasModel_ts\nViscosityModel_t = ViscosityModel_ts\nTurbulenceModel_t = TurbulenceModel_ts\nUserDefinedData_t = UserDefinedData_ts\nFlowSolution_t = FlowSolution_ts\nDataArray_t = DataArray_ts\nFamily_t = Family_ts\nDiscreteData_t = DiscreteData_ts\nRigidGridMotion_t = RigidGridMotion_ts\n\n# sorted type list, for CGNS.NAV use or any CGNS/SIDS doc related order\nsortedtypelist = [\n    CGNSTree_ts,\n    Family_ts,\n    FamilyName_ts,\n    AdditionalFamilyName_ts,\n    CGNSBase_ts,\n    Zone_ts,\n    ZoneType_ts,\n    GridCoordinates_ts,\n    Elements_ts,\n    ZoneBC_ts,\n    AdditionalExponents_ts,\n    AdditionalUnits_ts,\n    ArbitraryGridMotionType_ts,\n    ArbitraryGridMotion_ts,\n    AreaType_ts,\n    Area_ts,\n    AverageInterfaceType_ts,\n    AverageInterface_ts,\n    Axisymmetry_ts,\n    BCDataSet_ts,\n    BCData_ts,\n    BCProperty_ts,\n    BCTypeSimple_ts,\n    BCType_ts,\n    BC_ts,\n    BaseIterativeData_ts,\n    ChemicalKineticsModelType_ts,\n    ChemicalKineticsModel_ts,\n    ConvergenceHistory_ts,\n    DataArray_ts,\n    DataClass_ts,\n    DataConversion_ts,\n    DataType_ts,\n    Descriptor_ts,\n    DiffusionModel_ts,\n    DimensionalExponents_ts,\n    DimensionalUnits_ts,\n    DiscreteData_ts,\n    EMConductivityModelType_ts,\n    EMConductivityModel_ts,\n    EMElectricFieldModelType_ts,\n    EMElectricFieldModel_ts,\n    EMMagneticFieldModelType_ts,\n    EMMagneticFieldModel_ts,\n    ElementType_ts,\n    EquationDimension_ts,\n    FamilyBC_ts,\n    FlowEquationSet_ts,\n    FlowSolution_ts,\n    GasModelType_ts,\n    GasModel_ts,\n    GeometryEntity_ts,\n    GeometryFile_ts,\n    GeometryFormat_ts,\n    GeometryReference_ts,\n    GoverningEquationsType_ts,\n    GoverningEquations_ts,\n    Gravity_ts,\n    GridConnectivity1to1_ts,\n    GridConnectivityProperty_ts,\n    GridConnectivityType_ts,\n    GridConnectivity_ts,\n    GridLocation_ts,\n    IndexArray_ts,\n    IndexRange_ts,\n    IntegralData_ts,\n    InwardNormalIndex_ts,\n    InwardNormalList_ts,\n    Ordinal_ts,\n    OversetHoles_ts,\n    Periodic_ts,\n    ReferenceState_ts,\n    RigidGridMotionType_ts,\n    RigidGridMotion_ts,\n    Rind_ts,\n    RotatingCoordinates_ts,\n    SimulationType_ts,\n    ThermalConductivityModelType_ts,\n    ThermalConductivityModel_ts,\n    ThermalRelaxationModelType_ts,\n    ThermalRelaxationModel_ts,\n    Transform_ts,\n    TurbulenceClosureType_ts,\n    TurbulenceClosure_ts,\n    TurbulenceModelType_ts,\n    TurbulenceModel_ts,\n    UserDefinedData_ts,\n    ViscosityModelType_ts,\n    ViscosityModel_ts,\n    WallFunctionType_ts,\n    WallFunction_ts,\n    ZoneGridConnectivity_ts,\n    ZoneIterativeData_ts,\n    CGNSLibraryVersion_ts,\n]\n\n\n#\n# --- last line\n'"
CGNS/PAT/cgnslib.py,0,"b'#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source\n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import division\nfrom builtins import (str, bytes, range, dict)\n\nimport numpy\n\nimport CGNS.PAT.cgnserrors as CE\nimport CGNS.PAT.cgnskeywords as CK\nimport CGNS.PAT.cgnsutils as CU\n\n\n# =============================================================================\n# MLL-like calls\n# - every call takes a parent as argument. If the parent is present, the new\n#   sub-tree is inserted in the parent child list. In all cases the call\n#   returns the created sub-tree\n# - some function are not MLL based\n# - function patterns\n#   newXXX :   creates a new XXX_t type node\n#   updateXXX: updates fields in the XXX_t node\n#   checkXXX:  check if node is ok for SIDS and for CGNS/Python\n# -----------------------------------------------------------------------------\n\n# -----------------------------------------------------------------------------\ndef newCGNSTree(version=CK.CGNSLIBRARYVERSION):\n    """"""\n    Top CGNS/Python tree node creation, not a CGNS/SIDS type::\n\n      T=newCGNSTree()\n\n    :param float32 version: force the CGNSLibraryVersion\n    :return: a new :ref:`XCGNSTree_t` node\n    :Remarks:\n      - You *should* keep the returned node in a variable or reference to it in\n        any other way, this tree root is a Python object that would be garbagged\n        if its reference count reaches zero.\n      - The `CGNSTree` node is a CGNS/Python node which has no existence in a\n        disk HDF5 file.\n      - Default version is taken from CGNS.PAT.cgnskeywords\n    :Children:\n      - :py:func:`newCGNSBase`\n\n    """"""\n    return newCGNS(version)\n\n\ndef newCGNS(version=CK.CGNSLIBRARYVERSION):\n    node = [CK.CGNSLibraryVersion_s,\n            numpy.array([version], dtype=numpy.float32),\n            [],\n            CK.CGNSLibraryVersion_ts]\n    badnode = [CK.CGNSTree_s, None, [node], CK.CGNSTree_ts]\n    return badnode\n\n\n# -----------------------------------------------------------------------------\ndef newCGNSBase(tree, name, ncell, nphys):\n    """"""\n    *CGNSBase* node creation, the top node for topological contents::\n\n      # The base is put in the `T` children list\n      T=newCGNSTree()\n      newBase(T,\'Box-1\',3,3)\n\n      # No parent, you should fetch the new node using a variable\n      B=newCGNSBase(None,\'Box-2\',3,3)\n\n      # using tuple de-ref\n      dims=(3,3)\n      B=newCGNSBase(None,\'Box-3\',*dims)\n\n\n    :arg CGNS/Python node tree: the parent node (`<node>` or `None`)\n    :arg str name: base name\n    :arg int ncell: cell dimensions\n    :arg int nphys: physical dimensions\n    :return: a new :ref:`XCGNSBase_t` node\n    :Children:\n      - :py:func:`newZone`\n      - :py:func:`newFamily`\n      - :py:func:`newReferenceState`\n      - :py:func:`newFlowEquationSet`\n      - :py:func:`newConvergenceHistory`\n    :See:\n      - :rsids:`SIDS CGNSBase <cgnsbase#CGNSBase>`\n    """"""\n    return newBase(tree, name, ncell, nphys)\n\n\ndef newBase(tree, name, ncell, nphys):\n    if ncell not in [1, 2, 3]:\n        raise CE.cgnsException(10, name)\n    if nphys not in [1, 2, 3]:\n        raise CE.cgnsException(11, name)\n    if nphys < ncell:\n        raise CE.cgnsException(12, name)\n    if (tree is not None) and (not CU.checkNode(tree)):\n        raise CE.cgnsException(6, name)\n    if (tree is not None) and (tree[0] == CK.CGNSTree_s):\n        parent = tree[2]\n    else:\n        parent = tree\n    CU.checkDuplicatedName([""<root node>"", None, parent], name)\n    node = CU.newNode(name,\n                      numpy.array([ncell, nphys], dtype=numpy.int32, order=\'Fortran\'),\n                      [], CK.CGNSBase_ts)\n    if parent is not None:\n        parent.append(node)\n    return node\n\n\ndef numberOfBases(tree):\n    return len(CU.hasChildType(tree, CK.CGNSBase_ts))\n\n\ndef readBase(tree, name):\n    b = CU.hasChildName(tree, name)\n    if b is None:\n        raise CE.cgnsException(21, name)\n    if b[3] != CK.CGNSBase_ts:\n        raise CE.cgnsException(20, (CK.CGNSBase_ts, name))\n    return b[0], b[1]\n\n\ndef updateBase(tree, name=None, ncell=None, nphys=None):\n    if ncell not in [1, 2, 3]:\n        raise CE.cgnsException(10, name)\n    if nphys not in [1, 2, 3]:\n        raise CE.cgnsException(11, name)\n    if nphys < ncell:\n        raise CE.cgnsException(12, name)\n\n    if tree:\n        CU.checkNode(tree)\n\n    if tree[3] != CK.CGNSBase_ts:\n        raise CE.cgnsException(20, (CK.CGNSBase_ts, name))\n    if name is not None:\n        tree[0] = name\n    if (ncell is not None) and (nphys is not None) and tree:\n        tree[1] = numpy.array([ncell, nphys], dtype=numpy.int32, order=\'Fortran\')\n    else:\n        raise CE.cgnsException(12)\n\n\n# -----------------------------------------------------------------------------\ndef newZone(parent, name, zsize=None,\n            ztype=CK.Structured_s,\n            family=\'\'):\n    """"""\n    *Zone* node creation, the sub-tree defining a topological domain::\n\n      s=NPY.array([[10],[2],[0]],dtype=NPY.int32)\n\n      T=newCGNSTree()\n      B=newBase(T,\'Box-1\',3,3)\n      Z=newZone(B,name,s,CK.Unstructured_s,\'Wing\')\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg str name: zone name\n    :arg ndarray zsize: array of zone dimensions\n    :arg str ztype: type of the zone\n    :arg str family: main FamilyName of the zone\n    :return: a new :ref:`XZone_t` node\n    :Children:\n      - :py:func:`newElements`\n    :Remarks:\n      - The zone size has dimensions [IndexDimensions][3]\n    :See:\n      - :rsids:`SIDS Zone <cgnsbase#Zone>`\n\n    """"""\n    if ztype not in CK.ZoneType_l:\n        raise CE.cgnsException(206, ztype)\n    if zsize is None:\n        raise CE.cgnsException(300)\n    CU.checkDuplicatedName(parent, name)\n    CU.checkArray(zsize, dienow=True)\n    znode = CU.newNode(name, zsize, [], CK.Zone_ts, parent)\n    CU.newNode(CK.ZoneType_s, CU.setStringAsArray(ztype), [], CK.ZoneType_ts, znode)\n    if family:\n        CU.newNode(CK.FamilyName_s,\n                   CU.setStringAsArray(family), [], CK.FamilyName_ts, znode)\n    return znode\n\n\ndef numberOfZones(tree, basename):\n    b = CU.hasChildName(tree, basename)\n    if b is None:\n        raise CE.cgnsException(21, basename)\n    if b[3] != CK.CGNSBase_ts:\n        raise CE.cgnsException(20, (CK.CGNSBase_ts, basename))\n    return len(CU.hasChildType(b, CK.Zone_ts))\n\n\ndef listZones(tree, basename=None):\n    if basename is None:\n        filterpath = [CK.CGNSTree_ts, CK.CGNSBase_ts, CK.Zone_ts]\n    else:\n        filterpath = [CK.CGNSTree_ts, basename, CK.Zone_ts]\n    return CU.getPathsByTypeOrNameList(tree, filterpath)\n\n\ndef readZone(tree, basename, zonename, gtype=None):\n    b = CU.hasChildName(tree, basename)\n    if b is None:\n        raise CE.cgnsException(21, basename)\n    if b[3] != CK.CGNSBase_ts:\n        raise CE.cgnsException(20, (CK.CGNSBase_ts, basename))\n    z = CU.hasChildName(b, zonename)\n    if z is None:\n        raise CE.cgnsException(21, zonename)\n    if z[3] != CK.Zone_ts:\n        raise CE.cgnsException(20, (CK.Zone_ts, zonename))\n    if gtype:\n        zt = CU.hasChildName(z, CK.ZoneType_s)\n        if zt is None:\n            raise CE.cgnsException(21, CK.ZoneType_s)\n        return z[0], z[1], zt[1]\n    else:\n        return z[0], z[1]\n\n\ndef typeOfZone(tree, basename, zonename):\n    return readZone(tree, basename, zonename, 1)[2]\n\n\n# -----------------------------------------------------------------------------\ndef newGridCoordinates(parent, name):\n    """"""\n    *GridCoordinates* node creation, container for coordinates::\n\n      newGridCoordinates(zone,CK.GridCoordinates_s)\n      newDataArray(gc,CK.CoordinateX_s)\n      newDataArray(gc,CK.CoordinateY_s)\n      newDataArray(gc,CK.CoordinateZ_s)\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg str name: new node name\n    :return: a new :ref:`XGridCoordinates_t` node\n    :Remarks:\n      - Creates only the grid node, you have to use :py:func:`newDataArray` to\n        add the actual coordinates as children arrays. You can also use the\n        :py:func:`newCoordinates` function, it creates this *GridCoordinates*\n        node if missing, at the first coordinate add.\n    :See:\n      - :rsids:`SIDS GridCoordinates <gridflow#GridCoordinates>`\n    """"""\n    node = CU.newNode(name, None, [], CK.GridCoordinates_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newCoordinates(parent, name=CK.GridCoordinates_s, value=None):\n    """"""\n    *GridCoordinates_t* and *DataArray_t* nodes creation::\n\n      cx=newCoordinates(zone,CK.CoordinateX_s,x_array)\n      cy=newCoordinates(zone,CK.CoordinateY_s,y_array)\n      cz=newCoordinates(zone,CK.CoordinateZ_s,z_array)\n\n      # the following function sequence performs the same action\n      gc=newGridCoordinates(zone,CK.GridCoordinates_s)\n      newDataArray(gc,CK.CoordinateX_s,x_array)\n      newDataArray(gc,CK.CoordinateY_s,y_array)\n      newDataArray(gc,CK.CoordinateZ_s,z_array)\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg str name: new node name\n    :arg ndarray value: the coordinates array to set\n    :return: The returned node always is the :ref:`XDataArray_t` node.\n    :Remarks:\n      - Creates a new <node> representing a GridCoordinates_t sub-tree with\n        the coordinate DataArray given as argument. This creates both the\n        GridCoordinates_t with GridCoordinates name and DataArray_t with the\n        argument name. Usually used to create the default grid.\n        If the GridCoordinates_t with name GridCoordinates already exists then\n        only the DataArray is created.\n      - Array dims are not checked, should be consistent with zone dims\n    :See:\n      - :rsids:`SIDS GridCoordinates <gridflow#GridCoordinates>`\n    """"""\n    CU.checkDuplicatedName(parent, name)\n    gnode = CU.hasChildName(parent, CK.GridCoordinates_s)\n    if gnode is None:\n        gnode = newGridCoordinates(parent, CK.GridCoordinates_s)\n    node = newDataArray(gnode, name, value)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newDataArray(parent, name, value=None):\n    """"""\n    *DataArray* node creation, the all purpose array node::\n\n      import numpy as NPY\n\n      da=newDataArray(dd,\'{DataArray}\',value=NPY.array(((1,3),(5,7)),dtype=NPY.float64))\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg str name: array name\n    :arg value: optional value used to set the new array\n    :return: a new :ref:`XDataArray_t` node\n    :See:\n      - :rsids:`SIDS DataArray <data#DataArray>`\n\n    """"""\n    CU.checkDuplicatedName(parent, name)\n    # code correction:  Add value type and fortran order\n    # code correction:  Add a specific array for string type\n    # code correction:  Modify array check\n    if isinstance(value, int):\n        vv = numpy.array([value], dtype=numpy.int64, order=\'Fortran\')\n        CU.checkArray(vv)\n    elif isinstance(value, float):\n        vv = numpy.array([value], dtype=numpy.float64, order=\'Fortran\')\n        CU.checkArray(vv)\n    elif isinstance(value, str):\n        vv = CU.setStringAsArray(value)\n        CU.checkArrayChar(vv)\n    else:\n        vv = value\n        if vv is not None:\n            CU.checkArray(vv)\n\n    node = CU.newNode(name, vv, [], CK.DataArray_ts, parent)\n    return node\n\n\ndef numberOfDataArrays(parent):\n    return len(CU.hasChildType(parent, CK.DataArray_ts))\n\n\ndef readDataArray(parent, name):\n    n = CU.hasChildName(parent, name)\n    if n is None:\n        raise CE.cgnsException(21, name)\n    if n[3] != CK.DataArray_ts:\n        raise CE.cgnsException(20, (CK.DataArray_ts, name))\n    return n[1]\n\n\n# -----------------------------------------------------------------------------\ndef newDataClass(parent, value=CK.UserDefined_s):\n    """"""\n    *DataClass* node creation, sets the class of a data array::\n\n      import CGNS.PAT.cgnskeywords as CK\n      import numpy as NPY\n\n      # N is an already existing CGNS/Python node\n      dd=newDiscreteData(N,\'{DiscreteData}\')\n      dc=newDataClass(dd,CK.DimensionalUnits_s)\n      da=newDataArray(dd,\'{DataArray}\',value=NPY.array((1,),dtype=NPY.float64))\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg str value: DataClass type to set\n    :return: a new :ref:`XDataClass_t` node\n    :Remarks:\n      - The value argument is a\n        :ref:`DataClass enumerate <pat_cgnskeywords>` enumerate.\n    :See:\n      - :rsids:`SIDS DataClass <build#DataClass>\n    """"""\n    CU.checkDuplicatedName(parent, CK.DataClass_s)\n    node = CU.newNode(CK.DataClass_s, CU.setStringAsArray(value), [],\n                      CK.DataClass_ts, parent)\n    return checkDataClass(node)\n\n\ndef updateDataClass(node, value):\n    CU.checkNode(node)\n    if value is not None:\n        node[1] = value\n    return checkDataClass(node)\n\n\ndef checkDataClass(node, parent=None):\n    CU.checkNode(node)\n    CU.checkName(node[0])\n    if node[0] != CK.DataClass_s:\n        raise CE.cgnsException(26, node[0])\n    if node[3] != CK.DataClass_ts:\n        raise CE.cgnsException(27, node[3])\n    if len(node[2]) != 0:\n        raise CE.cgnsException(28, node[0])\n    value = CU.getValue(node).tostring().decode(\'ascii\', \'strict\')\n    if value not in CK.DataClass_l:\n        raise CE.cgnsException(207, value)\n    if parent is not None:\n        CU.checkTypeList(parent, [CK.DataArray_ts, CK.CGNSBase_ts, CK.Zone_ts,\n                                  CK.GridCoordinates_ts, CK.Axisymmetry_ts,\n                                  CK.RotatingCoordinates_ts, CK.FlowSolution_ts,\n                                  CK.Periodic_ts, CK.ZoneBC_ts, CK.BC_ts,\n                                  CK.BCDataSet_ts,\n                                  CK.BCData_ts, CK.FlowEquationSet_ts,\n                                  CK.GasModel_ts,\n                                  CK.ViscosityModel_ts,\n                                  CK.ThermalConductivityModel_ts,\n                                  CK.TurbulenceClosure_ts, CK.TurbulenceModel_ts,\n                                  CK.ThermalRelaxationModel_ts,\n                                  CK.ChemicalKineticsModel_ts,\n                                  CK.EMElectricFieldModel_ts,\n                                  CK.EMMagneticFieldModel_ts,\n                                  CK.EMConductivityModel_ts,\n                                  CK.BaseIterativeData_ts,\n                                  CK.ZoneIterativeData_ts, CK.RigidGridMotion_ts,\n                                  CK.ArbitraryGridMotion_ts, CK.ReferenceState_ts,\n                                  CK.ConvergenceHistory_ts,\n                                  CK.DiscreteData_ts, CK.IntegralData_ts,\n                                  CK.UserDefinedData_ts, CK.Gravity_ts]\n                         , CK.DataClass_s)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newDimensionalUnits(parent, value=None):\n    """"""\n    *DimensionalUnits* node creation, sets the units of a data array::\n\n      import CGNS.PAT.cgnskeywords as CK\n      import numpy as NPY\n\n      # N is an already existing CGNS/Python node\n      dd=newDiscreteData(N,\'{DiscreteData}\')\n      dc=newDataClass(dd,CK.DimensionalUnits_s)\n      units=(CK.Gram_s,CK.Foot_s,CK.UserDefined_s,CK.Celcius_s,CK.Degree_s)\n      du=newDimensionalUnits(dd,units)\n      da=newDataArray(dd,\'{DataArray}\',value=NPY.array((1,),dtype=NPY.float64))\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg list(str) value: list of 5 units, order is significant\n    :return: a new :ref:`XDimensionalUnits_t` node\n    :Remarks:\n      - order is MassUnit,LengthUnit,TimeUnit,\n        TemperatureUnit,AngleUnit\n    :See:\n      - :rsids:`SIDS DimensionalUnits <build#DimensionalUnits>`\n\n    """"""\n    if value is None:\n        value = [CK.Kilogram_s, CK.Meter_s,\n                 CK.Second_s, CK.Kelvin_s, CK.Radian_s]\n    if len(value) != 5:\n        raise CE.cgnsException(202)\n    CU.checkDuplicatedName(parent, CK.DimensionalUnits_s)\n    # --- loop over values to find all required units\n    vunit = [CK.Null_s, CK.Null_s, CK.Null_s, CK.Null_s, CK.Null_s]\n    for v in value:\n        if v not in CK.AllUnits_l:\n            raise CE.cgnsException(203, v)\n        if ((v in CK.MassUnits_l) and\n                (v not in [CK.Null_s, CK.UserDefined_s])):\n            if v in vunit:\n                raise CE.cgnsException(204, v)\n            else:\n                vunit[0] = v\n        if ((v in CK.LengthUnits_l) and\n                (v not in [CK.Null_s, CK.UserDefined_s])):\n            if v in vunit:\n                raise CE.cgnsException(204, v)\n            else:\n                vunit[1] = v\n        if ((v in CK.TimeUnits_l) and\n                (v not in [CK.Null_s, CK.UserDefined_s])):\n            if v in vunit:\n                raise CE.cgnsException(204, v)\n            else:\n                vunit[2] = v\n        if ((v in CK.TemperatureUnits_l) and\n                (v not in [CK.Null_s, CK.UserDefined_s])):\n            if v in vunit:\n                raise CE.cgnsException(204, v)\n            else:\n                vunit[3] = v\n        if ((v in CK.AngleUnits_l) and\n                (v not in [CK.Null_s, CK.UserDefined_s])):\n            if v in vunit:\n                raise CE.cgnsException(204, v)\n            else:\n                vunit[4] = v\n    node = CU.newNode(CK.DimensionalUnits_s, CU.concatenateForArrayChar(vunit), [],\n                      CK.DimensionalUnits_ts, parent)\n    CU.newNode(CK.AdditionalUnits_s,\n               CU.concatenateForArrayChar([CK.Null_s, CK.Null_s, CK.Null_s]),\n               [],\n               CK.AdditionalUnits_ts, node)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newDimensionalExponents(parent,\n                            MassExponent=0, LengthExponent=0, TimeExponent=0,\n                            TemperatureExponent=0, AngleExponent=0):\n    """"""\n    *DimensionalExponents* node creation, sets the units exponents of an array::\n\n      import CGNS.PAT.cgnskeywords as CK\n      import numpy as NPY\n\n      # N is an already existing CGNS/Python node\n      dd=newDiscreteData(N,\'{DiscreteData}\')\n      dc=newDataClass(dd,CK.DimensionalUnits_s)\n      units=(CK.Gram_s,CK.Foot_s,CK.UserDefined_s,CK.Celcius_s,CK.Degree_s)\n      du=newDimensionalUnits(dd,units)\n      exps=(1,-1,-2,0,0)\n      du=newDimensionalExponents(dd,exps)\n      da=newDataArray(dd,\'{DataArray}\',value=NPY.array((1,),dtype=NPY.float64))\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg float MassExponent: exponent for mass\n    :arg float LengthExponent: exponent for length\n    :arg float TimeExponent: exponent for time\n    :arg float TemperatureExponent: exponent for temperature\n    :arg float AngleExponent: exponent for angle\n\n    :return: a new :ref:`XDimensionalExponents_t` node\n    :Remarks:\n      - order is MassExponent,LengthExponent,TimeExponent,\n        TemperatureExponent,AngleExponent\n      - values are forced to be double floats\n    :See:\n      - :rsids:`SIDS DimensionalExponents <build#DimensionalExponents>`\n\n    """"""\n    CU.checkDuplicatedName(parent, CK.DimensionalExponents_s)\n    node = CU.newNode(CK.DimensionalExponents_s,\n                      numpy.array([MassExponent,\n                                   LengthExponent,\n                                   TimeExponent,\n                                   TemperatureExponent,\n                                   AngleExponent], dtype=numpy.float64, order=\'Fortran\'),\n                      [], CK.DimensionalExponents_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newDataConversion(parent, ConversionScale=1.0, ConversionOffset=1.0):\n    """"""\n    *DataConversion* node creation, sets the conversion factors for an array::\n\n      import CGNS.PAT.cgnskeywords as CK\n      import numpy as NPY\n\n      # N is an already existing CGNS/Python node\n      dd=newDiscreteData(N,\'{DiscreteData}\')\n      dc=newDataClass(dd,CK.DimensionalUnits_s)\n      units=(CK.Gram_s,CK.Foot_s,CK.UserDefined_s,CK.Celcius_s,CK.Degree_s)\n      du=newDimensionalUnits(dd,units)\n      exps=(1,-1,-2,0,0)\n      du=newDimensionalExponents(dd,exps)\n      ds=newDataConversion(dd,2.0,0.0)\n      da=newDataArray(dd,\'{DataArray}\',value=NPY.array((1,),dtype=NPY.float64))\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg float ConversionScale: scale of the conversion to apply\n    :arg float ConversionOffset: offset of the conversion to apply\n    :return: a new :ref:`XDataConversion_t` node\n    :Remarks:\n      - values are forced to be double floats\n    :See:\n      - :rsids:`SIDS DataConversion <data#DataConversion>`\n\n    """"""\n    CU.checkDuplicatedName(parent, CK.DataConversion_s)\n    node = CU.newNode(CK.DataConversion_s,\n                      numpy.array([ConversionScale, ConversionOffset],\n                                  dtype=numpy.float64, order=\'Fortran\'),\n                      [], CK.DataConversion_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newDescriptor(parent, name, value=\'\'):\n    """"""\n    *Descriptor* node creation, to contain user-defined textual contents::\n\n       txt=newDescriptor(parent,\'CommandLine\',\'python -c import elsA.CGNS\')\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg str name: new node name\n    :arg str value: text to enter (python string)\n    :return: a new :ref:`XDescriptor_t` node\n    :See:\n      - :rsids:`SIDS Descriptor <build#Descriptor>`\n\n    """"""\n    CU.checkDuplicatedName(parent, name)\n    node = CU.newNode(name, CU.setStringAsArray(value), [], CK.Descriptor_ts, parent)\n    return checkDescriptor(node)\n\n\ndef checkDescriptor(node, parent=None):\n    CU.checkNode(node)\n    CU.checkName(node[0])\n    if node[3] != CK.Descriptor_ts:\n        raise CE.cgnsException(27, node[3])\n    if len(node[2]) != 0:\n        raise CE.cgnsException(28, node[0])\n    value = CU.getValue(node)\n    if CU.getValueType(value) != CK.Character_s:\n        raise CE.cgnsException(110, node[0])\n    if parent is not None:\n        CU.checkTypeList(parent, [CK.DataArray_ts, CK.CGNSBase_ts, CK.Zone_ts,\n                                  CK.GridCoordinates_ts, CK.Elements_ts,\n                                  CK.Axisymmetry_ts,\n                                  CK.RotatingCoordinates_ts, CK.FlowSolution_ts,\n                                  CK.ZoneGridConnectivity_ts,\n                                  CK.GridConnectivity1to1_ts,\n                                  CK.GridConnectivity_ts,\n                                  CK.GridConnectivityProperty_ts,\n                                  CK.AverageInterface_ts, CK.OversetHoles_ts,\n                                  CK.Periodic_ts, CK.ZoneBC_ts, CK.BC_ts,\n                                  CK.BCDataSet_ts,\n                                  CK.BCData_ts, CK.FlowEquationSet_ts,\n                                  CK.GasModel_ts,\n                                  CK.BCProperty_ts, CK.WallFunction_ts,\n                                  CK.Area_ts,\n                                  CK.GoverningEquations_ts,\n                                  CK.ViscosityModel_ts,\n                                  CK.ThermalConductivityModel_ts,\n                                  CK.TurbulenceClosure_ts, CK.TurbulenceModel_ts,\n                                  CK.ThermalRelaxationModel_ts,\n                                  CK.ChemicalKineticsModel_ts,\n                                  CK.EMElectricFieldModel_ts,\n                                  CK.EMMagneticFieldModel_ts,\n                                  CK.EMConductivityModel_ts,\n                                  CK.BaseIterativeData_ts,\n                                  CK.ZoneIterativeData_ts, CK.RigidGridMotion_ts,\n                                  CK.ArbitraryGridMotion_ts, CK.ReferenceState_ts,\n                                  CK.ConvergenceHistory_ts,\n                                  CK.DiscreteData_ts, CK.IntegralData_ts,\n                                  CK.Family_ts, CK.GeometryReference_ts,\n                                  CK.UserDefinedData_ts, CK.Gravity_ts]\n                         , CK.DataClass_s)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newGridLocation(parent, value=CK.CellCenter_s):\n    """"""\n    *GridLocation* node creation, set location of data value wrt grid::\n\n      n=newGridLocation(parent,CK.Vertex_s)\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg str value: GridLocation to set\n    :return: a new :ref:`XGridLocation_t` node\n    :Remarks:\n      - Allowed values are in CK.GridLocation_l\n    :See:\n      - :rsids:`SIDS GridLocation <build#GridLocation>`\n    """"""\n    CU.checkDuplicatedName(parent, CK.GridLocation_s)\n    if value not in CK.GridLocation_l:\n        raise CE.cgnsException(200, value)\n    node = CU.newNode(CK.GridLocation_s,\n                      CU.setStringAsArray(value), [], CK.GridLocation_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newIndexArray(parent, name, value=None):\n    """"""\n    *IndexArray* node creation, integer array for indexing purpose::\n\n      import numpy as NPY\n\n      ix=newIndexArray(parent,\'GlobalIndex\',NPY.array((3,4,5)))\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg str name: new node name\n    :arg ndarray value: array to set\n    :return: a new :ref:`XIndexArray_t` node\n    :Remarks:\n      - Values are *not* forced of any type, user has to use I4 or I8\n      - Array dims are not checked\n    :See:\n      - :rsids:`SIDS IndexArray <build#IndexArray>`\n\n    """"""\n    CU.checkDuplicatedName(parent, name)\n    node = CU.newNode(name, value, [], CK.IndexArray_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newPointList(parent, name=CK.PointList_s, value=None):\n    """"""\n    *PointList* node creation, integer array for indexing purpose::\n\n      import numpy as NPY\n\n      ix=newPointList(parent,\'FacesList\',NPY.array((3,4,5,9,15)))\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg str name: new node name\n    :arg ndarray value: array to set\n    :return: a new :ref:`XPointList_t` node\n    :Remarks:\n      - Values are *not* forced of any type, user has to use I4 or I8\n      - Array dims are not checked\n      - Not a SIDS type\n    :See:\n      - :rsids:`SIDS IndexArray <build#IndexArray>`\n\n    """"""\n    CU.checkDuplicatedName(parent, name)\n    node = CU.newNode(name, value, [], CK.IndexArray_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newPointRange(parent, name=CK.PointRange_s, value=None):\n    """"""\n    *PointRange* node creation, integer array for Structured indexing purpose::\n\n      import numpy as NPY\n\n      minmax=NPY.array([[1,13],[1,6],[1,1]],order=\'F\')\n      ix=newPointRange(parent,value=minmax)\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg str name: new node name\n    :arg ndarray value: array to set\n    :return: a new :ref:`XPointRange_t` node\n    :Remarks:\n      - Values are *not* forced of any type, user has to use I4 or I8\n      - Array dims are not checked\n      - Array index has to be in Fortran order\n      - not a SIDS type\n    :See:\n      - :rsids:`SIDS IndexRange <build#IndexRange>`\n\n    """"""\n    if value is None:\n        value = []\n    CU.checkDuplicatedName(parent, name)\n    node = CU.newNode(name, value, [], CK.IndexRange_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newRind(parent, value):\n    """"""\n    *Rind* node creation, indicates extra *ghost* cells around the grid::\n\n      rind=NPY.array([[1,13],[1,6],[1,1]],order=\'F\')\n      newRind(solution,rind)\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg ndarray value: array to set\n    :return: a new :ref:`XRind_t` node\n    :Remarks:\n      - For structured grids, order is imin,imax,jmin,jmax,kmin,kmax\n      - For unstructured grids, order is number of rind points before and after\n      - Values are *not* forced of any type, user has to use I4 or I8\n      - Array dims are not checked\n      - Array index has to be in Fortran order\n    :See:\n      - :rsids:`SIDS Rind <build#Rind>`\n\n    """"""\n    CU.checkDuplicatedName(parent, CK.Rind_s)\n    # check value wrt base dims\n    node = CU.newNode(CK.Rind_s, value, [], CK.Rind_ts, parent)\n    return node\n\n\n# ----------------------------------------------------------------------------\ndef newSimulationType(parent, stype=CK.NonTimeAccurate_s):\n    """"""\n    *SimulationType* node creation, set the TimeAccurate type::\n\n      newSimulationType(base,CK.TimeAccurate_s)\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg str stype: enumerate from CK.SimulationType_l\n    :return: a new :ref:`XSimulationType_t` node\n    :See:\n      - :rsids:`SIDS SimulationType <cgnsbase#CGNSBase>`\n\n    """"""\n    if parent:\n        CU.checkNode(parent)\n    CU.checkDuplicatedName(parent, CK.SimulationType_s)\n    CU.checkType(parent, CK.CGNSBase_ts, CK.SimulationType_s)\n    if stype not in CK.SimulationType_l:\n        raise CE.cgnsException(205, stype)\n    node = CU.newNode(CK.SimulationType_s,\n                      CU.setStringAsArray(stype), [], CK.SimulationType_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newOrdinal(parent, value=0):\n    """"""\n    *Ordinal* node creation, an informative integer value::\n\n      newOrdinal(node,4)\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg int value: arbtrary integer\n    :return: a new :ref:`XOrdinal_t` node\n    :See:\n      - :rsids:`SIDS Ordinal <cgnsbase#Zone>`\n\n    """"""\n    CU.checkDuplicatedName(parent, CK.Ordinal_s)\n    node = CU.newNode(CK.Ordinal_s,\n                      numpy.array([value], dtype=numpy.int32), [], CK.Ordinal_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newDiscreteData(parent, name):\n    """"""\n    *DiscreteData* node creation, structural node for data::\n\n      newDiscreteData(node,\'Parameters\')\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg str name: new node name\n    :return: a new :ref:`XDiscreteData_t` node\n    :See:\n      - :rsids:`SIDS DiscreteData <misc#DiscreteData>`\n\n    """"""\n    CU.checkDuplicatedName(parent, name)\n    node = CU.newNode(name, None, [], CK.DiscreteData_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newIntegralData(parent, name):\n    """"""\n    *IntegralData* node creation, structural node for data::\n\n      newIntegralData(node,\'Parameters\')\n\n    :arg CGNS/Python node parent: the parent node (`<node>` or `None`)\n    :arg str name: new node name\n    :return: a new :ref:`XIntegralData_t` node\n    :See:\n      - :rsids:`SIDS IntegralData <misc#IntegralData>`\n\n    """"""\n    CU.checkDuplicatedName(parent, name)\n    node = CU.newNode(name, None, [], CK.IntegralData_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newElements(parent, name,\n                etype=CK.UserDefined_s,\n                econnectivity=None,\n                erange=None,\n                eboundary=0\n                ):\n    """"""\n    *Elements_t* node creation, indexing unstructured meshes::\n\n     quads=newElements(None,\'QUADS\',CGK.QUAD_4,quad_array,NPY.array([start,end]))\'\n\n    - Args:\n     * `parent`: the parent node (`<node>` or `None`)\n     * `name`: element node name (`string`)\n     * `etype`: the type of element (`string` or \'int\')\n     * `econnectivity`: actual array of point connectivities (`numpy.ndarray`)\n     * `erange`: the first and last index of the connectivity (`numpy.ndarray`)\n     * `eboundary`: number of boundary elements (`int`)\n\n    - Return:\n     * The new :ref:`XElements_t` node\n\n    - Remarks:\n     * If a parent is given, the new node is added to the parent children list.\n     * The `elementsrange` *should* insure a unique and continuous index for\n       all elements nodes in the same parent zone.\n     * Element type can be set as `int` such as `CGK.QUAD_4` or 7, or\n       as `string` such as `CGK.QUAD_4_s` or `""QUAD_4""`\n\n    - Children:\n     * :py:func:`newDescriptor`\n    """"""\n    CU.checkDuplicatedName(parent, name)\n    if isinstance(etype, int):\n        if etype not in CK.ElementType.values():\n            raise CE.cgnsException(250, etype)\n        etp = etype\n    elif isinstance(etype, str) :\n        etype=str(etype)\n        if etype not in CK.ElementType_l:\n            raise CE.cgnsException(250, etype)\n        etp = CK.ElementType[etype]\n    else:\n        raise CE.cgnsException(250, etype)\n    v = numpy.array([etp, eboundary], dtype=numpy.int32)\n    enode = CU.newNode(name, v, [], CK.Elements_ts, parent)\n    newDataArray(enode, CK.ElementConnectivity_s, econnectivity)\n    newPointRange(enode, CK.ElementRange_s, erange)\n    return enode\n\n# -----------------------------------------------------------------------------\ndef newZoneBC(parent):\n    return CU.newNode(CK.ZoneBC_s, None, [], CK.ZoneBC_ts, parent)\n\n\ndef newBC(parent, bname, brange=None,\n          btype=CK.Null_s, bcType=CK.Null_s,\n          family=CK.Null_s, pttype=CK.PointRange_s):\n    if brange is None:\n        brange = [[1, 1], [1, 1], [1, 1]]\n    return newBoundary(parent, bname, brange, btype, family, pttype)\n\n\ndef newBoundary(parent, bname, brange,\n                btype=CK.Null_s,\n                family=None,\n                pttype=CK.PointRange_s):\n    """"""-BC node creation -BC\n\n    \'newNode:N=\'*newBoundary*\'(parent:N,bname:S,brange:[*i],btype:S)\'\n\n    Returns a new <node> representing a BC_t sub-tree.\n    If a parent is given, the new <node> is added to the parent children list.\n    Parent should be Zone_t, returned node is parent.\n    If the parent has already a child name ZoneBC then\n    only the BC_t,IndexRange_t are created.\n    chapter 9.3 Add IndexRange_t required\n    """"""\n    CU.checkDuplicatedName(parent, bname)\n    zbnode = parent\n    if ((zbnode is not None) and\n            (zbnode[0] != CK.ZoneBC_s) and\n            (zbnode[3] != CK.ZoneBC_ts)):\n        zbnode = CU.newNode(CK.ZoneBC_s, None, [], CK.ZoneBC_ts, parent)\n    bnode = CU.newNode(bname, CU.setStringAsArray(btype), [], CK.BC_ts, zbnode)\n    if pttype == CK.PointRange_s:\n        arange = numpy.array(brange, dtype=numpy.int32, order=\'Fortran\')\n        CU.newNode(CK.PointRange_s, arange, [], CK.IndexRange_ts, bnode)\n    else:\n        arange = numpy.array(brange, dtype=numpy.int32, order=\'Fortran\')\n        CU.newNode(CK.PointList_s, arange, [], CK.IndexArray_ts, bnode)\n    if family:\n        CU.newNode(CK.FamilyName_s, CU.setStringAsArray(family), [],\n                   CK.FamilyName_ts, bnode)\n    return bnode\n\n\n# -----------------------------------------------------------------------------\ndef newBCDataSet(parent, name, valueType=CK.Null_s):\n    """"""-BCDataSet node creation -BCDataSet\n\n    \'newNode:N=\'*newBCDataSet*\'(parent:N,name:S,valueType:CK.BCTypeSimple)\'\n\n     If a parent is given, the new <node> is added to the parent children list.\n     Returns a new <node> representing a BCDataSet_t sub-tree.\n     chapter 9.4 Add node BCTypeSimple is required\n    """"""\n    node = CU.hasChildName(parent, name)\n    if node is None:\n        node = CU.newNode(name, None, [], CK.BCDataSet_ts, parent)\n    if valueType not in CK.BCTypeSimple_l:\n        raise CE.cgnsException(252, valueType)\n    node[1] = CU.setStringAsArray(valueType)\n    return node\n\n\n# ---------------------------------------------------------------------------\ndef newBCData(parent, name=CK.NeumannData_s):\n    """"""-BCData node creation -BCData\n\n    \'newNode:N=\'*newBCData*\'(parent:N,name:S)\'\n\n     Returns a new <node> representing a BCData_t sub-tree.\n     chapter 9.5\n    """"""\n    CU.checkDuplicatedName(parent, name)\n    node = CU.newNode(name, None, [], CK.BCData_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newBCProperty(parent, wallfunction=CK.Null_s, area=CK.Null_s):\n    """"""-BCProperty node creation -BCProperty\n\n    \'newNode:N=\'*newBCProperty*\'(parent:N)\'\n\n     Returns a new <node> representing a BCProperty_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     chapter 9.6\n    """"""\n    CU.checkDuplicatedName(parent, CK.BCProperty_s)\n    node = CU.newNode(CK.BCProperty_s, None, [], CK.BCProperty_ts, parent)\n    wf = CU.newNode(CK.WallFunction_s, None, [], CK.WallFunction_ts, node)\n    CU.newNode(CK.WallFunctionType_s, CU.setStringAsArray(wallfunction), [], CK.WallFunctionType_ts, wf)\n    ar = newArea(node)\n    return node\n\n# -----------------------------------------------------------------------------\ndef newArea(parent, areatype=CK.UserDefined_s, regionname=\'{RegionName}\',\n            surfacearea=numpy.array([0.0])):\n    ar = CU.newNode(CK.Area_s, None, [], CK.Area_ts, parent)\n    CU.newNode(CK.AreaType_s, CU.setStringAsArray(areatype), [],\n               CK.AreaType_ts, ar)\n    CU.newNode(CK.RegionName_s, CU.setStringAsArray(regionname), [],\n               CK.DataArray_ts, ar)\n    newDataArray(ar, CK.SurfaceArea_s, surfacearea)\n    \n# -----------------------------------------------------------------------------\ndef newAxisymmetry(parent,\n                   refpoint=numpy.array([0.0, 0.0, 0.0]),\n                   axisvector=numpy.array([0.0, 0.0, 0.0])):\n    """"""-Axisymmetry node creation -Axisymmetry\n\n    \'newNode:N=\'*newAxisymmetry*\'(parent:N,refpoint:A,axisvector:A)\'\n\n    refpoint,axisvector should be a real array.\n    Returns a new <node> representing a CK.Axisymmetry_t sub-tree.\n    chapter 7.5 Add DataArray AxisymmetryAxisVector,AxisymmetryReferencePoint are required\n    """"""\n    if parent:\n        CU.checkNode(parent)\n    CU.checkType(parent, CK.CGNSBase_ts, CK.Axisymmetry_s)\n    CU.checkDuplicatedName(parent, CK.Axisymmetry_s)\n    CU.checkArrayReal(refpoint)\n    CU.checkArrayReal(axisvector)\n    node = CU.newNode(CK.Axisymmetry_s, None, [], CK.Axisymmetry_ts, parent)\n    n = CU.hasChildName(parent, CK.AxisymmetryReferencePoint_s)\n    if n is None:\n        newDataArray(node, CK.AxisymmetryReferencePoint_s, numpy.array(refpoint))\n    n = CU.hasChildName(parent, CK.AxisymmetryAxisVector_s)\n    if n is None:\n        newDataArray(node, CK.AxisymmetryAxisVector_s, numpy.array(axisvector))\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newRotatingCoordinates(parent,\n                           rotcenter=numpy.array([0.0, 0.0, 0.0]),\n                           ratev=numpy.array([0.0, 0.0, 0.0])):\n    """"""-RotatingCoordinates node creation -RotatingCoordinates\n\n    \'newNode:N=\'*newRotatingCoordinates*\'(parent:N,rotcenter=A,ratev=A)\'\n\n     Returns a new <node> representing a RotatingCoordinates_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     rotcenter,ratev should be a real array.\n     chapter  7.6 Add DataArray RotationRateVector,RotationCenter are required\n    """"""\n    if parent:\n        CU.checkNode(parent)\n    CU.checkTypeList(parent, [CK.CGNSBase_ts, CK.Zone_ts, CK.Family_ts],\n                     CK.RotatingCoordinates_s)\n    CU.checkDuplicatedName(parent, CK.RotatingCoordinates_s)\n    CU.checkArrayReal(rotcenter)\n    CU.checkArrayReal(ratev)\n    node = CU.newNode(CK.RotatingCoordinates_s, None, [], CK.RotatingCoordinates_ts, parent)\n    n = CU.hasChildName(node, CK.RotationCenter_s)\n    if n is None:\n        newDataArray(node, CK.RotationCenter_s, numpy.array(rotcenter))\n    n = CU.hasChildName(node, CK.RotationRateVector_s)\n    if n is None:\n        newDataArray(node, CK.RotationRateVector_s, numpy.array(ratev))\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newFlowSolution(parent, name=\'{FlowSolution}\', gridlocation=None):\n    """"""-Solution node creation -Solution\n\n    \'newNode:N=\'*newSolution*\'(parent:N,name:S,gridlocation:None)\'\n\n    Returns a new <node> representing a FlowSolution_t sub-tree.\n    chapter 7.7\n    """"""\n    CU.checkDuplicatedName(parent, name)\n    node = CU.newNode(name, None, [], CK.FlowSolution_ts, parent)\n    if gridlocation is None:\n        newGridLocation(node)\n    else:\n        newGridLocation(node, gridlocation)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newZoneGridConnectivity(parent, name=CK.ZoneGridConnectivity_s):\n    """"""-GridConnectivity node creation -Grid\n\n    \'newNode:N=\'*newZoneGridConnectivity*\'(parent:N,name:S)\'\n\n    Creates a ZoneGridConnectivity_t sub-tree\n    This sub-node is returned.\n    If a parent is given, the new <node> is added to the parent children list,\n    the parent should be a Zone_t.\n    chapter 8.1\n    """"""\n    CU.checkDuplicatedName(parent, name)\n    cnode = CU.hasChildName(parent, CK.ZoneGridConnectivity_s)\n    if cnode is None:\n        cnode = CU.newNode(CK.ZoneGridConnectivity_s,\n                           None, [], CK.ZoneGridConnectivity_ts, parent)\n    return cnode\n\n\n# -----------------------------------------------------------------------------\ndef newGridConnectivity1to1(parent, name, dname, window, dwindow, trans):\n    """"""-GridConnectivity1to1 node creation -Grid\n\n    \'newNode:N=\'*newGridConnectivity1to1*\'(parent:N,name:S,dname:S,window:[i*],dwindow:[i*],trans:[i*])\'\n\n    Creates a GridConnectivity1to1_t sub-tree.\n    If a parent is given, the new <node> is added to the parent children list,\n    the parent should be a Zone_t.\n    The returned node is the GridConnectivity1to1_t\n    chapter 8.2\n    """"""\n    zcnode = CU.newNode(name, CU.setStringAsArray(dname), [],\n                        CK.GridConnectivity1to1_ts, parent)\n    CU.newNode(CK.Transform_s, numpy.array(list(trans), dtype=numpy.int32), [],\n               CK.Transform_ts2, zcnode)\n    CU.newNode(CK.PointRange_s,\n               numpy.array(window, dtype=numpy.int32, order=\'Fortran\'), [],\n               CK.IndexRange_ts, zcnode)\n    CU.newNode(CK.PointRangeDonor_s,\n               numpy.array(dwindow, dtype=numpy.int32, order=\'Fortran\'), [],\n               CK.IndexRange_ts, zcnode)\n    return zcnode\n\n\n# -----------------------------------------------------------------------------\ndef newGridConnectivity(parent, name, dname, ctype=CK.Overset_s):\n    """"""-GridConnectivity node creation -Grid\n\n    \'newNode:N=\'*newGridConnectivity*\'(parent:N,name:S,dname:S,ctype:S)\'\n\n    Creates a GridConnectivity sub-tree.\n    If a parent is given, the new <node> is added to the parent children list,\n    the parent should be a ZoneGridConnectivity_t.\n    The returned node is the GridConnectivity_t\n    chapter 8.4\n    """"""\n    zcnode = CU.newNode(name, CU.setStringAsArray(dname),\n                        [], CK.GridConnectivity_ts, parent)\n    newGridConnectivityType(zcnode, ctype)\n    return zcnode\n\n\n# -----------------------------------------------------------------------------\ndef newGridConnectivityType(parent, ctype=CK.Overset_s):\n    """"""-GridConnectivityType node creation -Grid\n\n    \'newNode:N=\'*newGridConnectivityType*\'(parent:N,ctype:S)\'\n\n    Creates a GridConnectivityType sub-tree.\n    If a parent is given, the new <node> is added to the parent children list,\n    the parent should be a GridConnectivity_t.\n    The returned node is the GridConnectivityType_t\n    chapter 8\n    """"""\n    zctnode = CU.newNode(CK.GridConnectivityType_s, CU.setStringAsArray(ctype),\n                         [], CK.GridConnectivityType_ts, parent)\n    return zctnode\n\n\n# -----------------------------------------------------------------------------\ndef newGridConnectivityProperty(parent):\n    """"""-GridConnectivityProperty node creation -GridConnectivityProperty\n\n    \'newNode:N=\'*newGridConnectivityProperty*\'(parent:N)\'\n\n     Returns a new <node> representing a GridConnectivityProperty_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     chapter 8.5\n    """"""\n    CU.checkDuplicatedName(parent, CK.GridConnectivityProperty_s)\n    nodeType = CU.newNode(CK.GridConnectivityProperty_s, None, [],\n                          CK.GridConnectivityProperty_ts, parent)\n    return nodeType\n\n\ndef newPeriodic(parent,\n                rotcenter=numpy.array([0.0, 0.0, 0.0]),\n                ratev=numpy.array([0.0, 0.0, 0.0]),\n                trans=numpy.array([0.0, 0.0, 0.0])):\n    """"""-Periodic node creation -Periodic\n\n    \'newNode:N=\'*newPeriodic*\'(parent:N,rotcenter=A,ratev=A,trans=A)\'\n\n     Returns a new <node> representing a Periodic_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     If the parent has already a child name Periodic then\n     only the RotationCenter,RotationAngle,Translation are created.\n     rotcenter,ratev,trans should be a real array.\n     chapter 8.5.1 Add DataArray RotationCenter,RotationAngle,Translation are required\n    """"""\n    if parent:\n        CU.checkNode(parent)\n    CU.checkArrayReal(rotcenter)\n    CU.checkArrayReal(ratev)\n    CU.checkArrayReal(trans)\n    cnode = CU.hasChildName(parent, CK.Periodic_s)\n    if cnode is None:\n        cnode = CU.newNode(CK.Periodic_s, None, [], CK.Periodic_ts, parent)\n    n = CU.hasChildName(cnode, CK.RotationCenter_s)\n    if n is None:\n        newDataArray(cnode, CK.RotationCenter_s, numpy.array(rotcenter))\n    n = CU.hasChildName(cnode, CK.RotationAngle_s)\n    if n is None:\n        newDataArray(cnode, CK.RotationAngle_s, numpy.array(ratev))\n    n = CU.hasChildName(cnode, CK.Translation_s)\n    if n is None:\n        newDataArray(cnode, CK.Translation_s, numpy.array(trans))\n    return cnode\n\n\n# -----------------------------------------------------------------------------\ndef newAverageInterface(parent, valueType=CK.Null_s):\n    """"""-AverageInterface node creation -AverageInterface\n\n    \'newNode:N=\'*newAverageInterface*\'(parent:N,valueType:CK.AverageInterfaceType)\'\n\n     Returns a new <node> representing a AverageInterface_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     If the parent has already a child name AverageInterface then\n     only the AverageInterfaceType is created.\n     chapter 8.5.2\n    """"""\n    node = CU.hasChildName(parent, CK.AverageInterface_s)\n    if node is None:\n        node = CU.newNode(CK.AverageInterface_s, None, [],\n                          CK.AverageInterface_ts, parent)\n    if valueType not in CK.AverageInterfaceType_l:\n        raise CE.cgnsException(253, valueType)\n    CU.checkDuplicatedName(node, CK.AverageInterfaceType_s)\n    # code correction: Modify valueType string into NPY string array\n    CU.newNode(CK.AverageInterfaceType_s, CU.setStringAsArray(valueType), [],\n               CK.AverageInterfaceType_ts, node)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newOversetHoles(parent, name, hrange):\n    """"""-OversetHoles node creation -OversetHoles\n\n    \'node:N=\'*newOversetHoles*\'(parent:N,name:S,hrange:list)\'\n\n    Creates a OversetHoles_t sub-tree.\n    the parent should be a Zone_t.\n    If a parent is given, the new <node> is added to the parent children list.\n    chapter 8.6 Add PointList or List( PointRange ) are required\n    """"""\n    cnode = CU.hasChildName(parent, CK.ZoneGridConnectivity_s)\n    if cnode is None:\n        cnode = CU.newNode(CK.ZoneGridConnectivity_s, None, [], CK.ZoneGridConnectivity_ts, parent)\n    CU.checkDuplicatedName(cnode, name)\n    node = CU.newNode(name, None, [], CK.OversetHoles_ts, cnode)\n    # if(pname!=None and value!=None):\n    # newPointList(node,pname,value)\n    if hrange is not None:\n        # code correction: Modify PointRange shape and order\n        newPointRange(node, CK.PointRange_s, numpy.array(hrange, dtype=numpy.int32, order=\'Fortran\'))\n        # newNode(CK.PointRange_s,NPY.array(list(hrange),NPY.int32),[],CK.IndexRange_ts,node)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newFlowEquationSet(parent):\n    """"""-FlowEquationSet node creation -FlowEquationSet\n\n    \'newNode:N=\'*newFlowEquationSet*\'(parent:N)\'\n\n    If a parent is given, the new <node> is added to the parent children list.\n     Returns a new <node> representing a CK.FlowEquationSet_t sub-tree.\n     chapter 10.1\n    """"""\n    if parent:\n        CU.checkNode(parent)\n    CU.checkDuplicatedName(parent, CK.FlowEquationSet_s)\n    CU.checkTypeList(parent, [CK.CGNSBase_ts, CK.Zone_ts], CK.FlowEquationSet_s)\n    node = CU.newNode(CK.FlowEquationSet_s, None, [], CK.FlowEquationSet_ts, parent)\n    return node\n\n\ndef newGoverningEquations(parent, valueType=CK.Euler_s):\n    """"""-GoverningEquations node creation -GoverningEquations\n\n    \'newNode:N=\'*newGoverningEquations*\'(parent:N,valueType:CK.GoverningEquationsType)\'\n\n     Returns a new <node> representing a CK.GoverningEquations_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     If the parent has already a child name GoverningEquations then\n     only the GoverningEquationsType is created.\n     chapter  10.2 Add node GoverningEquationsType is required\n    """"""\n    node = CU.hasChildName(parent, CK.GoverningEquations_s)\n    if node is None:\n        node = CU.newNode(CK.GoverningEquations_s, None, [], CK.GoverningEquations_ts, parent)\n    if valueType not in CK.GoverningEquationsType_l:\n        raise CE.cgnsException(221, valueType)\n    CU.checkDuplicatedName(parent, CK.GoverningEquationsType_s, )\n    node[1] = CU.setStringAsArray(valueType)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newGasModel(parent, valueType=CK.Ideal_s):\n    """"""-GasModel node creation -GasModel\n\n    \'newNode:N=\'*newGasModel*\'(parent:N,valueType:CK.GasModelType)\'\n\n     Returns a new <node> representing a CK.GasModel_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     If the parent has already a child name GasModel then\n     only the GasModelType is created.\n     chapter 10.3 Add node GasModelType is required\n    """"""\n    node = CU.hasChildName(parent, CK.GasModel_s)\n    if node is None:\n        node = CU.newNode(CK.GasModel_s, None, [], CK.GasModel_ts, parent)\n    if valueType not in CK.GasModelType_l:\n        raise CE.cgnsException(224, valueType)\n    CU.checkDuplicatedName(node, CK.GasModelType_s)\n    node[1] = CU.setStringAsArray(valueType)\n    return node\n\n\ndef newThermalConductivityModel(parent, valueType=CK.SutherlandLaw_s):\n    """"""-ThermalConductivityModel node creation -ThermalConductivityModel\n\n    \'newNode:N=\'*newThermalConductivityModel*\'(parent:N,valueType:CK.ThermalConductivityModelType)\'\n\n     Returns a new <node> representing a CK.ThermalConductivityModel_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     If the parent has already a child name ThermalConductivityModel then\n     only the ThermalConductivityModelType is created.\n     chapter 10.5 Add node ThermalConductivityModelType is required\n    """"""\n    node = CU.hasChildName(parent, CK.ThermalConductivityModel_s)\n    if node is None:\n        node = CU.newNode(CK.ThermalConductivityModel_s, None, [],\n                          CK.ThermalConductivityModel_ts, parent)\n    if valueType not in CK.ThermalConductivityModelType_l:\n        raise CE.cgnsException(227, valueType)\n    CU.checkDuplicatedName(node, CK.ThermalConductivityModelType_s)\n    node[1] = CU.setStringAsArray(valueType)\n    return node\n\n\ndef newViscosityModel(parent, valueType=CK.SutherlandLaw_s):\n    """"""-ViscosityModel node creation -ViscosityModel\n\n    \'newNode:N=\'*newViscosityModel*\'(parent:N,valueType:CK.ViscosityModelType)\'\n\n     Returns a new <node> representing a CK.ViscosityModel_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     If the parent has already a child name ViscosityModel then\n     only the ViscosityModelType is created.\n     chapter 10.4 Add node ViscosityModelType is (r)\n    """"""\n    node = CU.hasChildName(parent, CK.ViscosityModel_s)\n    if node is None:\n        node = CU.newNode(CK.ViscosityModel_s, None, [], CK.ViscosityModel_ts, parent)\n    if valueType not in CK.ViscosityModelType_l:\n        raise CE.cgnsException(230, valueType)\n    CU.checkDuplicatedName(node, CK.ViscosityModelType_s)\n    node[1] = CU.setStringAsArray(valueType)\n    return node\n\n\ndef newTurbulenceClosure(parent, valueType=CK.Null_s):\n    """"""-TurbulenceClosure node creation -TurbulenceClosure\n\n    \'newNode:N=\'*newTurbulenceClosure*\'(parent:N,valueType:CK.TurbulenceClosureType)\'\n     Returns a new <node> representing a CK.TurbulenceClosure_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     If the parent has already a child name TurbulenceClosure then\n     only the ViscosityModelType is created.\n     chapter 10.5 Add node TurbulenceClosureType is (r)\n    """"""\n    node = CU.hasChildName(parent, CK.TurbulenceClosure_s)\n    if node is None:\n        node = CU.newNode(CK.TurbulenceClosure_s, None, [], CK.TurbulenceClosure_ts, parent)\n    if valueType not in CK.TurbulenceClosureType_l:\n        raise CE.cgnsException(233, valueType)\n    CU.checkDuplicatedName(node, CK.TurbulenceClosureType_s)\n    node[1] = CU.setStringAsArray(valueType)\n    return node\n\n\ndef newTurbulenceModel(parent, valueType=CK.OneEquation_SpalartAllmaras_s):\n    """"""-TurbulenceModel node creation -TurbulenceModel\n\n    \'newNode:N=\'*newTurbulenceModel*\'(parent:N,valueType:CK.TurbulenceModelType)\'\n\n     Returns a new <node> representing a CK.TurbulenceModel_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     If the parent has already a child name TurbulenceModel then\n     only the TurbulenceModelType is created.\n     chapter 10.6.2 Add node TurbulenceModelType is (r)\n    """"""\n    node = CU.hasChildName(parent, CK.TurbulenceModel_s)\n    if node is None:\n        node = CU.newNode(CK.TurbulenceModel_s, None, [], CK.TurbulenceModel_ts, parent)\n    if valueType not in CK.TurbulenceModelType_l:\n        raise CE.cgnsException(236, valueType)\n    CU.checkDuplicatedName(node, CK.TurbulenceModelType_s)\n    node[1] = CU.setStringAsArray(valueType)\n    return node\n\n\ndef newThermalRelaxationModel(parent, valueType=CK.Null_s):\n    """"""-ThermalRelaxationModel node creation -ThermalRelaxationModel\n\n    \'newNode:N=\'*newThermalRelaxationModel*\'(parent:N,valueType:CK.ThermalRelaxationModelType)\'\n\n     Returns a new <node> representing a CK.ThermalRelaxationModel_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     If the parent has already a child name ThermalRelaxationModel then\n     only the ThermalRelaxationModelType is created.\n     chapter 10.7 Add node ThermalRelaxationModelType is (r)\n    """"""\n    node = CU.hasChildName(parent, CK.ThermalRelaxationModel_s)\n    if node is None:\n        node = CU.newNode(CK.ThermalRelaxationModel_s, None, [],\n                          CK.ThermalRelaxationModel_ts, parent)\n    if valueType not in CK.ThermalRelaxationModelType_l:\n        raise CE.cgnsException(239, valueType)\n    CU.checkDuplicatedName(node, CK.ThermalRelaxationModelType_s)\n    node[1] = CU.setStringAsArray(valueType)\n    return node\n\n\ndef newChemicalKineticsModel(parent, valueType=CK.Null_s):\n    """"""-ChemicalKineticsModel node creation -ChemicalKineticsModel\n\n    \'newNode:N=\'*newChemicalKineticsModel*\'(parent:N,valueType:CK.ChemicalKineticsModelType)\'\n\n     Returns a new <node> representing a CK.ChemicalKineticsModel_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     If the parent has already a child name ChemicalKineticsModel then\n     only the ChemicalKineticsModelType is created.\n     chapter 10.8 Add node ChemicalKineticsModelType is (r)\n    """"""\n    node = CU.hasChildName(parent, CK.ChemicalKineticsModel_s)\n    if node is None:\n        node = CU.newNode(CK.ChemicalKineticsModel_s, None, [],\n                          CK.ChemicalKineticsModel_ts, parent)\n    if valueType not in CK.ChemicalKineticsModelType_l:\n        raise CE.cgnsException(242, valueType)\n    CU.checkDuplicatedName(node, CK.ChemicalKineticsModelType_s)\n    node[1] = CU.setStringAsArray(valueType)\n    return node\n\n\ndef newEMElectricFieldModel(parent, valueType=CK.Null_s):\n    """"""-EMElectricFieldModel node creation -EMElectricFieldModel\n\n    \'newNode:N=\'*newEMElectricFieldModel*\'(parent:N,valueType:CK.EMElectricFieldModelType)\'\n\n     Returns a new <node> representing a CK.EMElectricFieldModel_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n      If the parent has already a child name EMElectricFieldModel then\n     only the EMElectricFieldModelType is created.\n     chapter 10.9 Add node EMElectricFieldModelType is (r)\n    """"""\n    node = CU.hasChildName(parent, CK.EMElectricFieldModel_s)\n    if node is None:\n        node = CU.newNode(CK.EMElectricFieldModel_s, None, [],\n                          CK.EMElectricFieldModel_ts, parent)\n    if valueType not in CK.EMElectricFieldModelType_l:\n        raise CE.cgnsException(245, valueType)\n    CU.checkDuplicatedName(node, CK.EMElectricFieldModelType_s)\n    node[1] = CU.setStringAsArray(valueType)\n    return node\n\n\ndef newEMMagneticFieldModel(parent, valueType=CK.Null_s):\n    """"""-EMMagneticFieldModel node creation -EMMagneticFieldModel\n\n    \'newNode:N=\'*newEMMagneticFieldModel*\'(parent:N,valueType:CK.EMMagneticFieldModelType)\'\n\n     Returns a new <node> representing a CK.EMMagneticFieldModel_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     If the parent has already a child name EMMagneticFieldModel_s then\n     only the EMMagneticFieldModelType is created.\n     chapter 10.9.2 Add node EMMagneticFieldModelType is (r)\n    """"""\n    node = CU.hasChildName(parent, CK.EMMagneticFieldModel_s)\n    if node is None:\n        node = CU.newNode(CK.EMMagneticFieldModel_s, None, [],\n                          CK.EMMagneticFieldModel_ts, parent)\n    if valueType not in CK.EMMagneticFieldModelType_l:\n        raise CE.cgnsException(248, valueType)\n    CU.checkDuplicatedName(node, CK.EMMagneticFieldModelType_s)\n    node[1] = CU.setStringAsArray(valueType)\n    return node\n\n\ndef newEMConductivityModel(parent, valueType=CK.Null_s):\n    """"""-EMConductivityModel node creation -EMConductivityModel\n\n    \'newNode:N=\'*newEMConductivityModel*\'(parent:N,valueType:CK.EMConductivityModelType)\'\n\n     Returns a new <node> representing a CK.EMConductivityModel_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     If the parent has already a child name EMConductivityModel then\n     only the EMConductivityModelType is created.\n     chapter 10.9.3 Add node EMConductivityModelType is (r)\n    """"""\n    node = CU.hasChildName(parent, CK.EMConductivityModel_s)\n    if node is None:\n        node = CU.newNode(CK.EMConductivityModel_s, None, [],\n                          CK.EMConductivityModel_ts, parent)\n    if valueType not in CK.EMConductivityModelType_l:\n        raise CE.cgnsException(218, valueType)\n    CU.checkDuplicatedName(node, CK.EMConductivityModelType_s)\n    node[1] = CU.setStringAsArray(valueType)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newBaseIterativeData(parent, name, nsteps=0,\n                         itype=CK.IterationValues_s):\n    """"""-BaseIterativeData node creation -BaseIterativeData\n\n     \'newNode:N=\'*newBaseIterativeData*\'(parent:N,name:S,nsteps:I,itype:E)\'\n\n     Returns a new <node> representing a BaseIterativeData_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     chapter 11.1.1\n     NumberOfSteps is required, TimeValues or IterationValues are required\n    """"""\n\n    if parent:\n        CU.checkNode(parent)\n    CU.checkDuplicatedName(parent, name)\n    CU.checkType(parent, CK.CGNSBase_ts, CK.BaseIterativeData_ts)\n    if not isinstance(nsteps, int) or (nsteps < 0):\n        raise CE.cgnsException(209)\n    asteps = numpy.arange(1, nsteps + 1, dtype=numpy.int32)\n    node = CU.newNode(name, numpy.array([nsteps], dtype=numpy.int32), [],\n                      CK.BaseIterativeData_ts, parent)\n    if itype not in [CK.IterationValues_s, CK.TimeValues_s]:\n        raise CE.cgnsException(210, (CK.IterationValues_s, CK.TimeValues_s))\n    CU.newNode(itype, asteps, [], CK.DataArray_ts, node)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newZoneIterativeData(parent, name):\n    """"""-ZoneIterativeData node creation -ZoneIterativeData\n\n    \'newNode:N=\'*newZoneIterativeData*\'(parent:N,name:S)\'\n\n     Returns a new <node> representing a ZoneIterativeData_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     chapter  11.1.2\n    """"""\n    CU.checkDuplicatedName(parent, name)\n    node = CU.newNode(name, None, [], CK.ZoneIterativeData_ts, parent)\n    return node\n\n\n# ---------------------------------------------------------------------------\ndef newRigidGridMotion(parent, name,\n                       valueType=CK.Null_s,\n                       vector=numpy.array([0.0, 0.0, 0.0])):\n    """"""-RigidGridMotion node creation -RigidGridMotion\n\n    \'newNode:N=\'*newRigidGridMotion*\'(parent:N,name:S,valueType:CK.RigidGridMotionType,vector:A)\'\n\n    If a parent is given, the new <node> is added to the parent children list.\n     Returns a new <node> representing a CK.RigidGridMotion_t sub-tree.\n     If the parent has already a child name RigidGridMotion then\n     only the RigidGridMotionType is created and OriginLocation is created\n     chapter 11.2 Add Node RigidGridMotionType and add DataArray OriginLocation are the only required\n    """"""\n    if parent:\n        CU.checkNode(parent)\n    CU.checkDuplicatedName(parent, name)\n    node = CU.newNode(name, None, [], CK.RigidGridMotion_ts, parent)\n\n    if valueType not in CK.RigidGridMotionType_l:\n        raise CE.cgnsException(254, valueType)\n    node[1] = CU.setStringAsArray(valueType)\n    n = CU.hasChildName(parent, CK.OriginLocation_s)\n    if n is None:\n        newDataArray(node, CK.OriginLocation_s, numpy.array(vector))\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newReferenceState(parent, name=CK.ReferenceState_s):\n    """"""-ReferenceState node creation -ReferenceState\n\n    \'newNode:N=\'*newReferenceState*\'(parent:N,name:S)\'\n\n     Returns a new <node> representing a ReferenceState_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     chapter  12.1  """"""\n    if parent:\n        CU.checkNode(parent)\n    node = CU.hasChildName(parent, name)\n    if node is None:\n        CU.checkDuplicatedName(parent, name)\n        node = CU.newNode(name, None, [], CK.ReferenceState_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newConvergenceHistory(parent, name=CK.GlobalConvergenceHistory_s,\n                          iterations=0):\n    """"""-ConvergenceHistory node creation -ConvergenceHistory\n\n    \'newNode:N=\'*newConvergenceHistory*\'(parent:N,name:S,iterations:i)\'\n\n     Returns a new <node> representing a ConvergenceHistory_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     chapter  12.3  """"""\n    if name not in CK.ConvergenceHistory_l:\n        raise CE.cgnsException(201, name)\n    if parent:\n        CU.checkNode(parent)\n        CU.checkTypeList(parent, [CK.CGNSBase_ts, CK.Zone_ts], name)\n    if name == CK.GlobalConvergenceHistory_s:\n        CU.checkType(parent, CK.CGNSBase_ts, name)\n    if name == CK.ZoneConvergenceHistory_s:\n        CU.checkType(parent, CK.Zone_ts, name)\n    CU.checkDuplicatedName(parent, name)\n    node = CU.newNode(name, numpy.array([iterations], dtype=numpy.int32), [], CK.ConvergenceHistory_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newFamily(parent, name):\n    """"""-Family node creation -Family\n\n    \'newNode:N=\'*newFamily*\'(parent:N,name:S)\'\n\n     Returns a new <node> representing a Family_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     chapter  12.6\n    """"""\n    if parent:\n        CU.checkNode(parent)\n    CU.checkType(parent, CK.CGNSBase_ts, name)\n    CU.checkDuplicatedName(parent, name)\n    node = CU.newNode(name, None, [], CK.Family_ts, parent)\n    return node\n\n\ndef newFamilyName(parent, family=None):\n    # code correction: Modify family string into NPY string array\n    return CU.newNode(CK.FamilyName_s, CU.setStringAsArray(family),\n                      [], CK.FamilyName_ts, parent)\n\ndef newAdditionalFamilyName(parent, family=None):\n    # code correction: Modify family string into NPY string array\n    return CU.newNode(CK.FamilyName_s, CU.setStringAsArray(family),\n                      [], CK.AdditionalFamilyName_ts, parent)\n\n\n# -----------------------------------------------------------------------------\ndef newGeometryReference(parent, name=\'{GeometryReference}\',\n                         valueType=CK.UserDefined_s):\n    """"""-GeometryReference node creation -GeometryReference\n\n    \'newNode:N=\'*newGeometryReference*\'(parent:N,name:S,valueType:CK.GeometryFormat)\'\n\n     Returns a new <node> representing a CK.GeometryFormat_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     If the parent has already a child name CK.GeometryReference then\n     only the .GeometryFormat is created\n     chapter  12.7 Add node CK.GeometryFormat_t is (r) and GeometryFile_t definition not find but is required (CAD file)\n    """"""\n    node = CU.hasChildName(parent, CK.GeometryReference_s)\n    if node is None:\n        node = CU.newNode(name, None, [], CK.GeometryReference_ts, parent)\n    if valueType not in CK.GeometryFormat_l:\n        raise CE.cgnsException(256, valueType)\n    CU.checkDuplicatedName(node, CK.GeometryFormat_s)\n    # code correction: Modify valueType string into NPY string array\n    CU.newNode(CK.GeometryFormat_s, CU.setStringAsArray(valueType), [],\n               CK.GeometryFormat_ts, node)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newFamilyBC(parent, valueType=CK.UserDefined_s):\n    """"""-FamilyBC node creation -FamilyBC\n\n    \'newNode:N=\'*newFamilyBC*\'(parent:N,valueType:CK.BCTypeSimple/CK.BCTypeCompound)\'\n\n     Returns a new <node> representing a CK.FamilyBC_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     If the parent has already a child name FamilyBC then\n     only the BCType is created\n     chapter  12.8 Add node BCType is required\n    """"""\n    node = CU.hasChildName(parent, CK.FamilyBC_s)\n    if (valueType not in CK.BCTypeSimple_l and\n            valueType not in CK.BCTypeCompound_l):\n        raise CE.cgnsException(257, valueType)\n    if node is None:\n        node = CU.newNode(CK.FamilyBC_s,\n                          CU.setStringAsArray(valueType),\n                          [],\n                          CK.FamilyBC_ts,\n                          parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newArbitraryGridMotion(parent, name, valuetype=CK.Null_s):\n    """"""\n    Returns a **new node** representing a :ref:`XArbitraryGridMotionType_t`\n\n    :param parent: CGNS/Python node\n    :param name: String\n    :param valuetype: String (``CGNS.PAT.cgnskeywords.ArbitraryGridMotionType``)\n\n\n    If a *parent* is not ``None``, the **new node** is added to the parent\n    children list. If the *parent* has already a child with\n    name ``RigidGridMotion`` then only the ``RigidGridMotionType`` is created.\n\n    """"""\n    node = None\n    if parent:\n        node = CU.hasChildName(parent, name)\n    if node is None:\n        node = CU.newNode(name, None, [], CK.ArbitraryGridMotion_ts, parent)\n    if valuetype not in CK.ArbitraryGridMotionType_l:\n        raise CE.cgnsException(255, valuetype)\n    CU.checkDuplicatedName(node, CK.ArbitraryGridMotionType_s)\n    node[1] = CU.setStringAsArray(valuetype)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newUserDefinedData(parent, name):\n    """"""-UserDefinedData node creation -UserDefinedData\n\n    \'newNode:N=\'*newUserDefinedData*\'(parent:N,name:S)\'\n\n     Returns a new <node> representing a UserDefinedData_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     chapter  12.9\n    """"""\n    CU.checkDuplicatedName(parent, name)\n    node = CU.newNode(name, None, [], CK.UserDefinedData_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newGravity(parent, gvector=numpy.array([0.0, 0.0, 0.0])):\n    """"""-Gravity node creation -Gravity\n\n    \'newNode:N=\'*newGravity*\'(parent:N,gvector:A)\'\n\n     Returns a new <node> representing a Gravity_t sub-tree.\n     If a parent is given, the new <node> is added to the parent children list.\n     gvector should be a real array\n     chapter  12.10 Add DataArray GravityVector is required\n    """"""\n    if parent:\n        CU.checkNode(parent)\n    CU.checkType(parent, CK.CGNSBase_ts, CK.Gravity_s)\n    CU.checkDuplicatedName(parent, CK.Gravity_s)\n    CU.checkArrayReal(gvector)\n    node = CU.newNode(CK.Gravity_s, None, [], CK.Gravity_ts, parent)\n    n = CU.hasChildName(parent, CK.GravityVector_s)\n    if n is None:\n        newDataArray(node, CK.GravityVector_s, numpy.array(gvector))\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newField(parent, name, value):\n    CU.checkDuplicatedName(parent, name)\n    node = newDataArray(parent, name, value)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newModel(parent, name, label, value):\n    CU.checkDuplicatedName(parent, name)\n    node = CU.newNode(name, value, [], label, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newDiffusionModel(parent, value=None):\n    # the diffusion_t doesn\'t exist. We use the cgnspatch file to keep\n    # track of this...\n    CU.checkDuplicatedName(parent, CK.DiffusionModel_s)\n    node = CU.newNode(CK.DiffusionModel_s, value, [], CK.DiffusionModel_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\n# def newSection():\n#  pass\n\n# -----------------------------------------------------------------------------\ndef newParentElements(parent, value):\n    CU.checkDuplicatedName(parent, CK.ParentElements_s)\n    node = CU.newNode(CK.ParentElements_s, value, [], CK.DataArray_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef newParentElementsPosition(parent, value):\n    CU.checkDuplicatedName(parent, CK.ParentElementsPosition_s)\n    node = CU.newNode(CK.ParentElementsPosition_s, value, [], CK.DataArray_ts, parent)\n    return node\n\n\n# -----------------------------------------------------------------------------\n# def newPart():\n#  pass\n\n# -----------------------------------------------------------------------------\ndef nextRange(previous, etype, earray):\n    r = previous\n    if previous is None:\n        r = numpy.array([0, 0], dtype=numpy.int32)\n    npe = CK.ElementTypeNPE[etype]\n    if npe:\n        nelems = len(earray.flat) // npe\n    else:\n        raise NotImplementedError(\'Oupss not implemented variable number of elems\')\n    start = r[1] + 1\n    end = start + nelems - 1\n    return numpy.array([start, end], dtype=numpy.int32)\n'"
CGNS/PAT/cgnstypes.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom builtins import (str, bytes, range, dict)\n\nimport CGNS.PAT.cgnskeywords as CGK\n\ntlistA = [\n    CGK.Descriptor_ts,\n    CGK.UserDefinedData_ts,\n    CGK.DataClass_ts,\n    CGK.DimensionalUnits_ts,\n]\n\nallDT = [CGK.C1, CGK.MT, CGK.I4, CGK.I8, CGK.R4, CGK.R8]  # LK is default\n\nC_00 = 'Zero/Zero'\nC_01 = 'Zero/One'\nC_11 = 'One/One'\nC_0N = 'Zero/N'\nC_1N = 'One/N'\nC_NN = 'N/N'\n\nUD = '{UserDefined}'\n\nallCARD = [C_01, C_11, C_0N, C_1N, C_NN]\n\n\n# --------------------------------------------------------\nclass CGNStype:\n    def __init__(self, ntype, dtype=None, names=None):\n        if dtype is None:\n            dtype = [CGK.MT]\n        if names is None:\n            names = [UD]\n        self.type = ntype\n        self.datatype = [CGK.LK] + dtype\n        self.enumerate = []\n        self.shape = ()\n        self.names = names\n        self.children = []\n        self.parents = []\n\n    def hasChild(self, ctype):\n        for c in self.children:\n            if c[0] == ctype:\n                return True\n        return False\n\n    def addChild(self, ctype, cname=UD, dtype=CGK.MT, card=C_0N):\n        if type(cname) != list:\n            lname = [cname]\n        else:\n            lname = cname\n        self.children.append((ctype, lname, dtype, card))\n\n    def addParent(self, parent):\n        self.parents.append(parent)\n\n    def cardinality(self, childtype):\n        for c in self.children:\n            if c[0] == childtype:\n                return c[3]\n        return C_00\n\n    def isReservedName(self, name):\n        for c in self.children:\n            if name in c[1]:\n                return True\n        return False\n\n    def hasReservedNameType(self, name):\n        nl = []\n        for c in self.children:\n            if name in c[1]:\n                nl.append(c[0])\n        return nl\n\n\ncgt = {}\n\n# --------------------------------------------------------\nt = CGK.CGNSLibraryVersion_ts\ncgt[t] = CGNStype(t, dtype=[CGK.R4], names=[CGK.CGNSLibraryVersion_s])\ncgt[t].shape = (1,)\n\n# (CGK.CGNSLibraryVersion_ts,   # SIDS type\n# [CGK.CGNSLibraryVersion_s],  # Names\n# [CGK.R4],                    # Datatypes\n# (1,),                        # Shape\n# [2.3,2.4,3.2,3.3],           # Values\n# )\n\n# --------------------------------------------------------\nt = CGK.Descriptor_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1])\ncgt[t].shape = (0,)\n\n# --------------------------------------------------------\nt = CGK.Ordinal_ts\ncgt[t] = CGNStype(t, dtype=[CGK.I4], names=[CGK.Ordinal_s])\ncgt[t].shape = (1,)\n\n# --------------------------------------------------------\nt = CGK.DataClass_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.DataClass_s])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.DataClass_l\n\n# --------------------------------------------------------\nt = CGK.DimensionalUnits_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.DimensionalUnits_s])\ncgt[t].shape = (32, 5)\ncgt[t].enumerate = CGK.AllDimensionalUnits_l\ncgt[t].addChild(CGK.AdditionalUnits_ts, CGK.AdditionalUnits_s)\n\n# --------------------------------------------------------\nt = CGK.AdditionalUnits_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.AdditionalUnits_s])\ncgt[t].shape = (32, 3)\ncgt[t].enumerate = CGK.AllAdditionalUnits_l\n\n# --------------------------------------------------------\nt = CGK.DataConversion_ts\ncgt[t] = CGNStype(t, dtype=[CGK.R4, CGK.R8], names=[CGK.DataConversion_s])\ncgt[t].shape = (2,)\n\n# --------------------------------------------------------\nt = CGK.DimensionalExponents_ts\ncgt[t] = CGNStype(t, dtype=[CGK.R4, CGK.R8], names=[CGK.DimensionalExponents_s])\ncgt[t].shape = (5,)\n\n# --------------------------------------------------------\nt = CGK.AdditionalExponents_ts\ncgt[t] = CGNStype(t, dtype=[CGK.R4, CGK.R8], names=[CGK.AdditionalExponents_s])\ncgt[t].shape = (3,)\n\n# --------------------------------------------------------\nt = CGK.DataArray_ts\ncgt[t] = CGNStype(t, dtype=allDT)\ncgt[t].addChild(CGK.DimensionalExponents_ts, CGK.DimensionalExponents_s)\ncgt[t].addChild(CGK.DataConversion_ts, CGK.DataConversion_s)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\n\n# --------------------------------------------------------\nt = CGK.Transform_ts\ncgt[t] = CGNStype(t, dtype=[CGK.I4], names=[CGK.Transform_s])\ncgt[t].shape = (0,)\nt = CGK.Transform_ts2\ncgt[t] = CGNStype(t, dtype=[CGK.I4], names=[CGK.Transform_s])\ncgt[t].shape = (0,)\n\n# --------------------------------------------------------\nt = CGK.DiffusionModel_ts\ncgt[t] = CGNStype(t, dtype=[CGK.I4], names=[CGK.DiffusionModel_s])\ncgt[t].shape = (0,)\nt = CGK.DiffusionModel_ts2\ncgt[t] = CGNStype(t, dtype=[CGK.I4], names=[CGK.DiffusionModel_s])\ncgt[t].shape = (0,)\n\n# --------------------------------------------------------\nt = CGK.InwardNormalIndex_ts\ncgt[t] = CGNStype(t, dtype=[CGK.I4], names=[CGK.InwardNormalIndex_s])\ncgt[t].shape = (0,)\nt = CGK.InwardNormalIndex_ts2\ncgt[t] = CGNStype(t, dtype=[CGK.I4], names=[CGK.InwardNormalIndex_s])\ncgt[t].shape = (0,)\n\n# --------------------------------------------------------\nt = CGK.EquationDimension_ts\ncgt[t] = CGNStype(t, dtype=[CGK.I4], names=[CGK.EquationDimension_s])\ncgt[t].shape = (1,)\nt = CGK.EquationDimension_ts2\ncgt[t] = CGNStype(t, dtype=[CGK.I4], names=[CGK.EquationDimension_s])\ncgt[t].shape = (1,)\n\n# --------------------------------------------------------\nt = CGK.GridLocation_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.GridLocation_s])\ncgt[t].shape = (0,)\n\n# --------------------------------------------------------\nt = CGK.Rind_ts\ncgt[t] = CGNStype(t, dtype=[CGK.I4, CGK.I8], names=[CGK.Rind_s])\ncgt[t].shape = (0,)\n\n# --------------------------------------------------------\nt = CGK.IndexRange_ts\ncgt[t] = CGNStype(t, dtype=[CGK.I4, CGK.I8])\ncgt[t].shape = (0, 2)\ncgt[t].names = [CGK.PointRange_s, CGK.PointRangeDonor_s, CGK.ElementRange_s, UD]\n\n# --------------------------------------------------------\nt = CGK.IndexArray_ts\ncgt[t] = CGNStype(t, dtype=[CGK.I4, CGK.I8, CGK.R4, CGK.R8])\ncgt[t].shape = (0, 0)\ncgt[t].names = [CGK.PointList_s, CGK.PointListDonor_s, CGK.CellListDonor_s,\n                CGK.InwardNormalList_s, UD]\n\n# --------------------------------------------------------\nt = CGK.ReferenceState_ts\ncgt[t] = CGNStype(t, names=[CGK.ReferenceState_s])\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.Descriptor_ts, CGK.ReferenceStateDescription_s)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.ConvergenceHistory_ts\ncgt[t] = CGNStype(t, names=[CGK.GlobalConvergenceHistory_s,\n                            CGK.ZoneConvergenceHistory_s], dtype=[CGK.I4])\ncgt[t].shape = (1,)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.Descriptor_ts, CGK.NormDefinitions_s)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.IntegralData_ts\ncgt[t] = CGNStype(t)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.UserDefinedData_ts\ncgt[t] = CGNStype(t)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.GridLocation_ts, CGK.GridLocation_s)\ncgt[t].addChild(CGK.IndexRange_ts, CGK.PointRange_s)\ncgt[t].addChild(CGK.IndexArray_ts, CGK.PointList_s)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.FamilyName_ts, [CGK.FamilyName_s], card=C_01)\ncgt[t].addChild(CGK.AdditionalFamilyName_ts, card=C_0N)\ncgt[t].addChild(CGK.UserDefinedData_ts)\ncgt[t].addChild(CGK.Ordinal_ts, CGK.Ordinal_s)\n\n# --------------------------------------------------------\nt = CGK.Gravity_ts\ncgt[t] = CGNStype(t)\ncgt[t].addChild(CGK.DataArray_ts, CGK.GravityVector_s)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.FlowEquationSet_ts\ncgt[t] = CGNStype(t, names=[CGK.FlowEquationSet_s])\ncgt[t].addChild(CGK.GoverningEquations_ts, CGK.GoverningEquations_s)\ncgt[t].addChild(CGK.EquationDimension_ts, CGK.EquationDimension_s)\ncgt[t].addChild(CGK.GasModel_ts, CGK.GasModel_s)\ncgt[t].addChild(CGK.ViscosityModel_ts, CGK.ViscosityModel_s)\ncgt[t].addChild(CGK.ThermalRelaxationModel_ts, CGK.ThermalRelaxationModel_s)\ncgt[t].addChild(CGK.ThermalConductivityModel_ts, CGK.ThermalConductivityModel_s)\ncgt[t].addChild(CGK.TurbulenceModel_ts, CGK.TurbulenceModel_s)\ncgt[t].addChild(CGK.TurbulenceClosure_ts, CGK.TurbulenceClosure_s)\ncgt[t].addChild(CGK.ChemicalKineticsModel_ts, CGK.ChemicalKineticsModel_s)\ncgt[t].addChild(CGK.EMMagneticFieldModel_ts, CGK.EMMagneticFieldModel_s)\ncgt[t].addChild(CGK.EMElectricFieldModel_ts, CGK.EMElectricFieldModel_s)\ncgt[t].addChild(CGK.EMConductivityModel_ts, CGK.EMConductivityModel_s)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.GoverningEquations_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.GoverningEquations_s])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.GoverningEquationsType_l\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.DiffusionModel_ts, CGK.DiffusionModel_s)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.GasModel_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.GasModel_s])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.GasModelType_l\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.ViscosityModel_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.ViscosityModel_s])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.ViscosityModelType_l\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.ThermalConductivityModel_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.ThermalConductivityModel_s])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.ThermalConductivityModelType_l\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.TurbulenceClosure_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.TurbulenceClosure_s])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.TurbulenceClosureType_l\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.TurbulenceModel_ts\ncgt[t] = CGNStype(t, names=[CGK.TurbulenceModel_s])\ncgt[t].datatype = [CGK.C1]\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.TurbulenceModelType_l\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.DiffusionModel_ts, CGK.DiffusionModel_s)\n\n# --------------------------------------------------------\nt = CGK.ThermalRelaxationModel_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.ThermalRelaxationModel_s])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.ThermalRelaxationModelType_l\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.ChemicalKineticsModel_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.ChemicalKineticsModel_s])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.ChemicalKineticsModelType_l\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.EMElectricFieldModel_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.EMElectricFieldModel_s])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.EMElectricFieldModelType_l\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.EMMagneticFieldModel_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.EMMagneticFieldModel_s])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.EMMagneticFieldModelType_l\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.EMConductivityModel_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.EMConductivityModel_s])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.EMConductivityModelType_l\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.ZoneType_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.ZoneType_s])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.ZoneType_l\n\n# --------------------------------------------------------\nt = CGK.SimulationType_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.SimulationType_s])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.SimulationType_l\n\n# --------------------------------------------------------\nt = CGK.GridConnectivityType_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.GridConnectivityType_s])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.GridConnectivityType_l\n\n# --------------------------------------------------------\nt = CGK.Family_ts\ncgt[t] = CGNStype(t)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.Ordinal_ts, CGK.Ordinal_s)\ncgt[t].addChild(CGK.FamilyBC_ts, card=C_01)\ncgt[t].addChild(CGK.GeometryReference_ts)\ncgt[t].addChild(CGK.RotatingCoordinates_ts, CGK.RotatingCoordinates_s)\ncgt[t].addChild(CGK.FamilyName_ts, card=C_0N)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.FamilyName_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.FamilyName_s])\ncgt[t].shape = (0,)\n\n# --------------------------------------------------------\nt = CGK.AdditionalFamilyName_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1])\ncgt[t].shape = (0,)\n\n# --------------------------------------------------------\nt = CGK.FamilyBC_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.FamilyBC_s])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.BCType_l\ncgt[t].addChild(CGK.FamilyBCDataSet_ts)\n\n# --------------------------------------------------------\nt = CGK.FamilyBCDataSet_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1])\ncgt[t].enumerate = CGK.BCTypeSimple_l\ncgt[t].addChild(CGK.BCData_ts, CGK.NeumannData_s)\ncgt[t].addChild(CGK.BCData_ts, CGK.DirichletData_s)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.ReferenceState_ts, CGK.ReferenceState_s)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.GeometryReference_ts\ncgt[t] = CGNStype(t)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.GeometryFile_ts, CGK.GeometryFile_s)\ncgt[t].addChild(CGK.GeometryFormat_ts, CGK.GeometryFormat_s)\ncgt[t].addChild(CGK.GeometryEntity_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.GeometryFile_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.GeometryFile_s])\ncgt[t].shape = (0,)\n\n# --------------------------------------------------------\nt = CGK.GeometryFormat_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.GeometryFormat_s])\ncgt[t].shape = (0,)\n\n# --------------------------------------------------------\nt = CGK.GeometryEntity_ts\ncgt[t] = CGNStype(t)\n\n# --------------------------------------------------------\nt = CGK.CGNSTree_ts\ncgt[t] = CGNStype(t, names=[CGK.CGNSTree_s, UD])\ncgt[t].addChild(CGK.CGNSLibraryVersion_ts, [CGK.CGNSLibraryVersion_s], card=C_11)\ncgt[t].addChild(CGK.CGNSBase_ts, card=C_0N)\n\n# --------------------------------------------------------\nt = CGK.CGNSBase_ts\ncgt[t] = CGNStype(t, dtype=[CGK.I4])\ncgt[t].shape = (0, 0)\ncgt[t].addChild(CGK.Zone_ts, card=C_0N)\ncgt[t].addChild(CGK.SimulationType_ts, [CGK.SimulationType_s], card=C_01)\ncgt[t].addChild(CGK.BaseIterativeData_ts, card=C_01)\ncgt[t].addChild(CGK.IntegralData_ts, card=C_0N)\ncgt[t].addChild(CGK.ConvergenceHistory_ts, [CGK.GlobalConvergenceHistory_s], card=C_01)\ncgt[t].addChild(CGK.Family_ts, card=C_0N)\ncgt[t].addChild(CGK.FlowEquationSet_ts, [CGK.FlowEquationSet_s], card=C_01)\ncgt[t].addChild(CGK.ReferenceState_ts, [CGK.ReferenceState_s], card=C_01)\ncgt[t].addChild(CGK.Axisymmetry_ts, [CGK.Axisymmetry_s], card=C_01)\ncgt[t].addChild(CGK.RotatingCoordinates_ts, [CGK.RotatingCoordinates_s], card=C_01)\ncgt[t].addChild(CGK.Gravity_ts, [CGK.Gravity_s], card=C_01)\ncgt[t].addChild(CGK.DataClass_ts, [CGK.DataClass_s], card=C_01)\ncgt[t].addChild(CGK.DimensionalUnits_ts, [CGK.DimensionalUnits_s], card=C_01)\ncgt[t].addChild(CGK.Descriptor_ts, card=C_0N)\ncgt[t].addChild(CGK.UserDefinedData_ts, card=C_0N)\n\n# --------------------------------------------------------\nt = CGK.Zone_ts\ncgt[t] = CGNStype(t, dtype=[CGK.I4, CGK.I8])\ncgt[t].shape = (0, 3)\ncgt[t].addChild(CGK.GridCoordinates_ts, card=C_0N)\ncgt[t].addChild(CGK.DiscreteData_ts, card=C_0N)\ncgt[t].addChild(CGK.Elements_ts, card=C_0N)\ncgt[t].addChild(CGK.ZoneBC_ts, CGK.ZoneBC_s, card=C_01)\ncgt[t].addChild(CGK.FlowSolution_ts, card=C_0N)\ncgt[t].addChild(CGK.ZoneSubRegion_ts, card=C_0N)\ncgt[t].addChild(CGK.ZoneType_ts, CGK.ZoneType_s, card=C_11)\ncgt[t].addChild(CGK.Ordinal_ts, CGK.Ordinal_s, card=C_01)\ncgt[t].addChild(CGK.ZoneGridConnectivity_ts, CGK.ZoneGridConnectivity_s, card=C_01)\ncgt[t].addChild(CGK.ZoneIterativeData_ts, card=C_01)\ncgt[t].addChild(CGK.RigidGridMotion_ts, card=C_0N)\ncgt[t].addChild(CGK.ReferenceState_ts, CGK.ReferenceState_s, card=C_01)\ncgt[t].addChild(CGK.IntegralData_ts, card=C_0N)\ncgt[t].addChild(CGK.ArbitraryGridMotion_ts, card=C_0N)\ncgt[t].addChild(CGK.FamilyName_ts, CGK.FamilyName_s, card=C_01)\ncgt[t].addChild(CGK.AdditionalFamilyName_ts, card=C_0N)\ncgt[t].addChild(CGK.FlowEquationSet_ts, CGK.FlowEquationSet_s, card=C_01)\ncgt[t].addChild(CGK.ConvergenceHistory_ts, CGK.ZoneConvergenceHistory_s, card=C_01)\ncgt[t].addChild(CGK.RotatingCoordinates_ts, CGK.RotatingCoordinates_s, card=C_01)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s, card=C_01)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s, card=C_01)\ncgt[t].addChild(CGK.Descriptor_ts, card=C_0N)\ncgt[t].addChild(CGK.UserDefinedData_ts, card=C_0N)\n\n# --------------------------------------------------------\nt = CGK.GridCoordinates_ts\ncgt[t] = CGNStype(t, names=[CGK.GridCoordinates_s, UD])\ncgt[t].addChild(CGK.DataArray_ts, card=C_0N)\ncgt[t].addChild(CGK.Rind_ts, CGK.Rind_s, card=C_01)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s, card=C_01)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s, card=C_01)\ncgt[t].addChild(CGK.Descriptor_ts, card=C_0N)\ncgt[t].addChild(CGK.UserDefinedData_ts, card=C_0N)\n\n# --------------------------------------------------------\nt = CGK.ZoneSubRegion_ts\ncgt[t] = CGNStype(t, dtype=[CGK.I4])\ncgt[t].shape = (1,)\ncgt[t].addChild(CGK.GridLocation_ts, CGK.GridLocation_s)\ncgt[t].addChild(CGK.IndexRange_ts, CGK.PointRange_s, card=C_01)\ncgt[t].addChild(CGK.IndexArray_ts, CGK.PointList_s, card=C_01)\ncgt[t].addChild(CGK.FamilyName_ts, CGK.FamilyName_s, card=C_01)\ncgt[t].addChild(CGK.AdditionalFamilyName_ts, card=C_0N)\ncgt[t].addChild(CGK.DataArray_ts, card=C_0N)\ncgt[t].addChild(CGK.Rind_ts, CGK.Rind_s, card=C_01)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s, card=C_01)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s, card=C_01)\ncgt[t].addChild(CGK.Descriptor_ts, [CGK.BCRegionName_s, CGK.GridConnectivityRegionName_s], card=C_0N)\ncgt[t].addChild(CGK.UserDefinedData_ts, card=C_0N)\n\n# --------------------------------------------------------\nt = CGK.Elements_ts\ncgt[t] = CGNStype(t, dtype=[CGK.I4])\ncgt[t].shape = (2,)\ncgt[t].addChild(CGK.IndexRange_ts, CGK.PointRange_s)\ncgt[t].addChild(CGK.IndexArray_ts, CGK.PointList_s)\ncgt[t].addChild(CGK.DataArray_ts, CGK.ElementConnectivity_s, card=C_01)\ncgt[t].addChild(CGK.DataArray_ts, CGK.ElementStartOffset_s, card=C_01)\ncgt[t].addChild(CGK.DataArray_ts, CGK.ParentElements_s, card=C_01)\ncgt[t].addChild(CGK.DataArray_ts, CGK.ParentElementsPosition_s, card=C_01)\ncgt[t].addChild(CGK.DataArray_ts, CGK.ParentData_s, card=C_01)\ncgt[t].addChild(CGK.Rind_ts, CGK.Rind_s, card=C_01)\ncgt[t].addChild(CGK.Descriptor_ts, card=C_0N)\ncgt[t].addChild(CGK.UserDefinedData_ts, card=C_0N)\n\n# --------------------------------------------------------\nt = CGK.Axisymmetry_ts\ncgt[t] = CGNStype(t, names=[CGK.Axisymmetry_s])\ncgt[t].addChild(CGK.DataArray_ts, CGK.AxisymmetryReferencePoint_s)\ncgt[t].addChild(CGK.DataArray_ts, CGK.AxisymmetryAxisVector_s)\ncgt[t].addChild(CGK.DataArray_ts, CGK.AxisymmetryAngle_s)\ncgt[t].addChild(CGK.DataArray_ts, CGK.CoordinateNames_s)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.RotatingCoordinates_ts\ncgt[t] = CGNStype(t, names=[CGK.RotatingCoordinates_s])\ncgt[t].addChild(CGK.DataArray_ts, CGK.RotationCenter_s)\ncgt[t].addChild(CGK.DataArray_ts, CGK.RotationRateVector_s)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.FlowSolution_ts\ncgt[t] = CGNStype(t)\ncgt[t].addChild(CGK.GridLocation_ts, CGK.GridLocation_s)\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.Rind_ts, CGK.Rind_s)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.DiscreteData_ts\ncgt[t] = CGNStype(t)\ncgt[t].addChild(CGK.GridLocation_ts, CGK.GridLocation_s)\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.Rind_ts, CGK.Rind_s)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.ZoneBC_ts\ncgt[t] = CGNStype(t, names=[CGK.ZoneBC_s])\ncgt[t].addChild(CGK.BC_ts)\ncgt[t].addChild(CGK.ReferenceState_ts, CGK.ReferenceState_s)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.BCProperty_ts\ncgt[t] = CGNStype(t, names=[CGK.BCProperty_s])\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\ncgt[t].addChild(CGK.WallFunction_ts, CGK.WallFunction_s)\ncgt[t].addChild(CGK.Area_ts, CGK.Area_s)\n\n# --------------------------------------------------------\nt = CGK.BCData_ts\ncgt[t] = CGNStype(t, names=[CGK.DirichletData_s, CGK.NeumannData_s])\ncgt[t].addChild(CGK.DataArray_ts)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.BCDataSet_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1])\ncgt[t].enumerate = CGK.BCTypeSimple_l\ncgt[t].addChild(CGK.BCData_ts, CGK.NeumannData_s)\ncgt[t].addChild(CGK.BCData_ts, CGK.DirichletData_s)\ncgt[t].addChild(CGK.GridLocation_ts, CGK.GridLocation_s)\ncgt[t].addChild(CGK.IndexRange_ts, CGK.PointRange_s)\ncgt[t].addChild(CGK.IndexArray_ts, CGK.PointList_s)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.ReferenceState_ts, CGK.ReferenceState_s)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.BC_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1])\ncgt[t].enumerate = CGK.BCType_l\ncgt[t].shape = (0,)\ncgt[t].addChild(CGK.ReferenceState_ts, CGK.ReferenceState_s)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\ncgt[t].addChild(CGK.Ordinal_ts, CGK.Ordinal_s)\ncgt[t].addChild(CGK.FamilyName_ts, CGK.FamilyName_s)\ncgt[t].addChild(CGK.AdditionalFamilyName_ts, card=C_0N)\ncgt[t].addChild(CGK.IndexArray_ts, CGK.InwardNormalList_s)\ncgt[t].addChild(CGK.BCDataSet_ts)\ncgt[t].addChild(CGK.InwardNormalIndex_ts, CGK.InwardNormalIndex_s)\ncgt[t].addChild(CGK.IndexArray_ts, CGK.ElementList_s)\ncgt[t].addChild(CGK.IndexArray_ts, CGK.PointList_s)\ncgt[t].addChild(CGK.IndexRange_ts, CGK.ElementRange_s)\ncgt[t].addChild(CGK.IndexRange_ts, CGK.PointRange_s)\ncgt[t].addChild(CGK.GridLocation_ts, CGK.GridLocation_s)\ncgt[t].addChild(CGK.BCProperty_ts, CGK.BCProperty_s)\n\n# --------------------------------------------------------\nt = CGK.ArbitraryGridMotionType_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1],\n                  names=[CGK.ArbitraryGridMotionType_s])\ncgt[t].shape = (0,)\ncgt[t].addChild(CGK.DataArray_ts, card=C_0N)\ncgt[t].addChild(CGK.GridLocation_ts, CGK.GridLocation_s)\ncgt[t].addChild(CGK.Rind_ts, CGK.Rind_s, card=C_01)\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s, card=C_01)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s, card=C_01)\ncgt[t].addChild(CGK.Descriptor_ts, card=C_0N)\ncgt[t].addChild(CGK.UserDefinedData_ts, card=C_0N)\n\n# --------------------------------------------------------\nt = CGK.RigidGridMotionType_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.RigidGridMotionType_s])\ncgt[t].shape = (0,)\n\n# --------------------------------------------------------\nt = CGK.WallFunctionType_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.WallFunctionType_s])\ncgt[t].shape = (0,)\n\n# --------------------------------------------------------\nt = CGK.WallFunction_ts\ncgt[t] = CGNStype(t, names=[CGK.WallFunction_s])\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\ncgt[t].addChild(CGK.WallFunctionType_ts, CGK.WallFunctionType_s)\n\n# --------------------------------------------------------\nt = CGK.AreaType_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.AreaType_s])\ncgt[t].shape = (0,)\n\n# --------------------------------------------------------\nt = CGK.Area_ts\ncgt[t] = CGNStype(t, names=[CGK.Area_s])\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\ncgt[t].addChild(CGK.AreaType_ts, CGK.AreaType_s, card=C_11)\ncgt[t].addChild(CGK.DataArray_ts, CGK.SurfaceArea_s, dtype=CGK.C1, card=C_11)\ncgt[t].addChild(CGK.DataArray_ts, CGK.RegionName_s, dtype=CGK.C1, card=C_11)\n\n# --------------------------------------------------------\nt = CGK.BaseIterativeData_ts\ncgt[t] = CGNStype(t, dtype=[CGK.I4])\ncgt[t].shape = (1,)\ncgt[t].addChild(CGK.DataClass_ts, [CGK.DataClass_s], card=C_01)\ncgt[t].addChild(CGK.DimensionalUnits_ts, [CGK.DimensionalUnits_s], card=C_01)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\ncgt[t].addChild(CGK.DataArray_ts)\n\n# --------------------------------------------------------\nt = CGK.ZoneIterativeData_ts\ncgt[t] = CGNStype(t)\ncgt[t].addChild(CGK.DataClass_ts, [CGK.DataClass_s], card=C_01)\ncgt[t].addChild(CGK.DimensionalUnits_ts, [CGK.DimensionalUnits_s], card=C_01)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\ncgt[t].addChild(CGK.DataArray_ts, [CGK.RigidGridMotionPointers_s,\n                                   CGK.ArbitraryGridMotionPointers_s,\n                                   CGK.FlowSolutionPointers_s,\n                                   CGK.ZoneGridConnectivityPointers_s,\n                                   CGK.ZoneSubRegionPointers_s])\n\n# --------------------------------------------------------\nt = CGK.RigidGridMotion_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.RigidGridMotionType_l\ncgt[t].addChild(CGK.DataClass_ts, [CGK.DataClass_s], card=C_01)\ncgt[t].addChild(CGK.DimensionalUnits_ts, [CGK.DimensionalUnits_s], card=C_01)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\ncgt[t].addChild(CGK.DataArray_ts, [CGK.OriginLocation_s,\n                                   CGK.RigidRotationAngle_s,\n                                   CGK.RigidRotationRate_s,\n                                   CGK.RigidVelocity_s])\n\n# --------------------------------------------------------\nt = CGK.ArbitraryGridMotion_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1])\ncgt[t].shape = (0,)\ncgt[t].enumerate = CGK.ArbitraryGridMotionType_l\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\ncgt[t].addChild(CGK.GridLocation_ts, CGK.GridLocation_s)\ncgt[t].addChild(CGK.Rind_ts, CGK.Rind_s)\ncgt[t].addChild(CGK.DataArray_ts)\n\n# --------------------------------------------------------\nt = CGK.ZoneGridConnectivity_ts\ncgt[t] = CGNStype(t, names=[CGK.ZoneGridConnectivity_s])\ncgt[t].addChild(CGK.GridConnectivity1to1_ts)\ncgt[t].addChild(CGK.GridConnectivity_ts)\ncgt[t].addChild(CGK.OversetHoles_ts)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.GridConnectivityProperty_ts\ncgt[t] = CGNStype(t, names=[CGK.GridConnectivityProperty_s])\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\ncgt[t].addChild(CGK.Periodic_ts, CGK.Periodic_s)\ncgt[t].addChild(CGK.AverageInterface_ts, CGK.AverageInterface_s)\n\n# --------------------------------------------------------\nt = CGK.Periodic_ts\ncgt[t] = CGNStype(t, names=[CGK.Periodic_s])\ncgt[t].addChild(CGK.DataClass_ts, CGK.DataClass_s)\ncgt[t].addChild(CGK.DimensionalUnits_ts, CGK.DimensionalUnits_s)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\ncgt[t].addChild(CGK.DataArray_ts, CGK.RotationCenter_s)\ncgt[t].addChild(CGK.DataArray_ts, CGK.RotationAngle_s)\ncgt[t].addChild(CGK.DataArray_ts, CGK.Translation_s)\n\n# --------------------------------------------------------\nt = CGK.AverageInterfaceType_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.AverageInterfaceType_s])\ncgt[t].shape = (0,)\n\n# --------------------------------------------------------\nt = CGK.AverageInterface_ts\ncgt[t] = CGNStype(t, names=[CGK.AverageInterface_s])\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\ncgt[t].addChild(CGK.AverageInterfaceType_ts, CGK.AverageInterfaceType_s)\n\n# --------------------------------------------------------\nt = CGK.GridConnectivity1to1_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1])\ncgt[t].shape = (0,)\ncgt[t].addChild(CGK.Transform_ts, CGK.Transform_s)\ncgt[t].addChild(CGK.IntIndexDimension_ts, CGK.Transform_s)\ncgt[t].addChild(CGK.Transform_ts2, CGK.Transform_s)\ncgt[t].addChild(CGK.IndexRange_ts, CGK.PointRange_s)\ncgt[t].addChild(CGK.IndexRange_ts, CGK.PointRangeDonor_s)\ncgt[t].addChild(CGK.Ordinal_ts, CGK.Ordinal_s)\ncgt[t].addChild(CGK.GridConnectivityProperty_ts, CGK.GridConnectivityProperty_s)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.GridConnectivityType_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1], names=[CGK.GridConnectivityType_s])\ncgt[t].shape = (0,)\n\n# --------------------------------------------------------\nt = CGK.GridConnectivity_ts\ncgt[t] = CGNStype(t, dtype=[CGK.C1])\ncgt[t].shape = (0,)\ncgt[t].addChild(CGK.GridLocation_ts, CGK.GridLocation_s)\ncgt[t].addChild(CGK.Ordinal_ts, CGK.Ordinal_s)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.IndexRange_ts, CGK.PointRange_s)\ncgt[t].addChild(CGK.IndexArray_ts, CGK.PointList_s)\ncgt[t].addChild(CGK.IndexArray_ts, CGK.PointListDonor_s)\ncgt[t].addChild(CGK.IndexArray_ts, CGK.CellListDonor_s)\ncgt[t].addChild(CGK.GridConnectivityProperty_ts, CGK.GridConnectivityProperty_s)\ncgt[t].addChild(CGK.GridConnectivityType_ts, CGK.GridConnectivityType_s)\ncgt[t].addChild(CGK.DataArray_ts, CGK.InterpolantsDonor_s)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\nt = CGK.OversetHoles_ts\ncgt[t] = CGNStype(t)\ncgt[t].addChild(CGK.Descriptor_ts)\ncgt[t].addChild(CGK.IndexArray_ts, CGK.PointList_s)\ncgt[t].addChild(CGK.GridLocation_ts, CGK.GridLocation_s)\ncgt[t].addChild(CGK.IndexRange_ts)\ncgt[t].addChild(CGK.UserDefinedData_ts)\n\n# --------------------------------------------------------\ntypes = cgt\ntk = list(types)\ntk.sort()\nfor pk in tk:\n    for ck in tk:\n        if (ck != pk) and (types[pk].hasChild(ck)):\n            types[ck].addParent(pk)\n\n# --- reserved names / SIDS types\ncgnsnametypes = {\n    CGK.Density_s: (CGK.DataArray_ts, None),\n    CGK.Pressure_s: (CGK.DataArray_ts, None),\n    CGK.Temperature_s: (CGK.DataArray_ts, None),\n    CGK.EnergyInternal_s: (CGK.DataArray_ts, None),\n    CGK.Enthalpy_s: (CGK.DataArray_ts, None),\n    CGK.Entropy_s: (CGK.DataArray_ts, None),\n    CGK.EntropyApprox_s: (CGK.DataArray_ts, None),\n    CGK.DensityStagnation_s: (CGK.DataArray_ts, None),\n    CGK.PressureStagnation_s: (CGK.DataArray_ts, None),\n    CGK.TemperatureStagnation_s: (CGK.DataArray_ts, None),\n    CGK.EnergyStagnation_s: (CGK.DataArray_ts, None),\n    CGK.EnthalpyStagnation_s: (CGK.DataArray_ts, None),\n    CGK.EnergyStagnationDensity_s: (CGK.DataArray_ts, None),\n}\n\nfor pk in tk:\n    pkn = types[pk].names\n    if pkn != [UD]:\n        for curname in pkn:\n            if pkn != UD:\n                cgnsnametypes[curname] = (types[pk].type, types[pk].enumerate)\n\n# --- last line\n"""
CGNS/PAT/cgnsutils.py,0,"b'#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source\n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nfrom functools import cmp_to_key\nfrom builtins import (str, bytes, range, dict)\n\nimport hashlib\nimport os.path as op\nimport re\nimport string\n\nimport numpy\n\nimport CGNS\nimport CGNS.PAT.cgnserrors as CE\nimport CGNS.PAT.cgnskeywords as CK\nimport CGNS.PAT.cgnstypes as CT\n\nimport sys\nPY3 = sys.version_info[0] == 3\n# from os import sep as SEPARATOR\n\n__I4 = numpy.dtype(numpy.int32)\n__I8 = numpy.dtype(numpy.int64)\n__R4 = numpy.dtype(numpy.float32)\n__R8 = numpy.dtype(numpy.float64)\n\n\n# -----------------------------------------------------------------------------\n# undocumented functions are private (or obsolete)\n# -----------------------------------------------------------------------------\n\n# -----------------------------------------------------------------------------\ndef nodeCreate(name, value, children, ntype, parent=None, dienow=False):\n    """"""\n    Create a new node with and bind it to its parent::\n\n      import CGNS.PAT.cgnskeywords as CK\n      import numpy\n\n      n=nodeCreate(\'Base\',numpy.array([3,3]),[],CK.CGNSBase_ts)\n      z=nodeCreate(\'ReferenceState\',None,[],CK.ReferenceState_ts,parent=n)\n\n      # you can safely create a node without referencing its return,\n      # the actual new node is stored into the parent\'s children list\n      nodeCreate(\'ReferenceState\',None,[],CK.ReferenceState_ts,parent=n)\n\n    :arg str name: new node name\n    :arg numpy.ndarray value: node value\n    :arg list children: list of node children (list of CGNS/Python nodes)\n    :arg str ntype: CGNS/SIDS node type\n    :arg node parent: node where to insert the new node (default: None)\n    :arg bool dienow: If `True` raises an exception on error (default:`False`)\n\n    :return: the new node\n\n    :Remarks:\n      - If parent is None (default) node is orphan (see comment in example)\n      - Adds checks with :py:func:`checkNodeCompliant` only if `dienow` is `True`\n\n    """"""\n    return newNode(name, value, children, ntype, parent=parent, dienow=dienow)\n\n\ndef newNode(name, value, children, ntype, parent=None, dienow=False):\n    node = [name, value, [], ntype]\n    if isinstance(children, list) and children is not []:\n        if checkNodeCompliant(children):\n            setAsChild(node, children)\n        else:\n            node[2] = children\n    if dienow:\n        checkNodeCompliant(node, parent, dienow)\n    if parent:\n        setAsChild(parent, node)\n    return node\n\n\n# --------------------------------------------------\ndef nodeCopy(node, newname=None, share=False):\n    """"""\n    Creates a new node sub-tree as a copy of the argument node sub-tree.\n    A deep copy is performed on the node, including the values, which can\n    lead to a very large memory use::\n\n      n1=getNodeByPath(T,\'/Base/Zone1/ZoneGridConnectivity\')\n      n2=getNodeByPath(T,\'/Base/Zone1/ZoneGridConnectivity/Connect1\')\n      n3=nodeCopy(n2,\'Connect2\')\n      nodeChild(n1,n3)\n\n    :arg node node: node to copy\n    :arg str newname: new node (copy) name\n    :arg bool share: if True then actual numpy.ndarray in not copied (if possible)\n\n    :return: The new node\n\n    :Remarks:\n      - The new node name is the same by default, thus user would have to check\n        for potential duplicated name\n      - The node value is a copy too, numpy.ndarray is duplicated\n      - Default is to deep copy including numpy.ndarray\n    """"""\n    if newname is None:\n        newname = node[0]\n    return copyNode(node, newname, share)\n\n\ndef copyNode(n, newname, share=False):\n    if not share:\n        newn = [newname, copyArray(n[1]), deepcopyNodeList(n[2], share=share), n[3]]\n    else:\n        newn = [newname, n[1], deepcopyNodeList(n[2], share=share), n[3]]\n    return newn\n\n\n# --------------------------------------------------\ndef nodeDelete(tree, node, legacy=False):\n    """"""\n    Deletes a node from a tree::\n\n      import CGNS.PAT.cgnslib as CL\n      import CGNS.PAT.cgnsutils as CU\n      import numpy\n\n      T =CL.newCGNSTree()\n      b1=CL.newBase(T,\'Base\',3,3)\n      z1=CL.newZone(b1,\'Zone1\',numpy.array([1,2,3]))\n      z2=CL.newZone(b1,\'Zone2\',numpy.array([1,2,3]))\n      print CU.getPathFullTree(T)\n      # [\'/CGNSLibraryVersion\', \'/Base\',\n      #  \'/Base/Zone1\',\'/Base/Zone1/ZoneType\',\n      #  \'/Base/Zone2\', \'/Base/Zone2/ZoneType\']\n      CU.nodeDelete(T,z1)\n      print CU.getPathFullTree(T)\n      # [\'/CGNSLibraryVersion\', \'/Base\', \'/Base/Zone2\', \'/Base/Zone2/ZoneType\']\n\n    :arg node tree: target tree where to find the node to remove\n    :arg node: a CGNS/Python node or str (node name) as absolute path to remove\n\n    :Return: The tree argument (without the deleted node)\n\n    :Remarks:\n      - Uses :py:func:`checkSameNode`.\n      - Actual memory of the node is released only if there is no other reference\n      - No action if the node to delete is not found\n    """"""\n    if isinstance(node, str):\n        path = node\n    else:\n        path = getPathFromRoot(tree, node)\n    if path is not None:\n        pp = getPathAncestor(path)\n        pc = getPathLeaf(path)\n        if pp != path:\n            np = getNodeByPath(tree, pp)\n            if np is not None:\n                removeChildByName(np, pc)\n    return tree\n\n\n# --------------------------------------------------\ndef deepcopyNodeList(la, share=False):\n    if not la:\n        return la\n    ra = []\n    for a in la:\n        ra.append(copyNode(a, a[0], share))\n    return ra\n\n\n# -----------------------------------------------------------------------------\n# support functions\n# -----------------------------------------------------------------------------\ndef checkNodeName(node, dienow=False):\n    """"""\n    Checks if the name is CGNS/Python compliant node name::\n\n      if (not checkNodeName(node)):\n          print \'Such name \',name,\' not allowed\'\n\n    :arg CGNS/Python node: node to check\n    :return: True if the name has a correct syntax\n    :Remarks:\n      - The function is the same as :py:func:`checkName` but with a node as\n        arg instead of string\n      - See also :py:func:`checkNodeCompliant`\n    """"""\n    if not checkNode(node):\n        if dienow:\n            raise CE.cgnsNameError(2)\n        return False\n    return checkName(node[0], dienow)\n\n\ndef checkName(name, dienow=False, strict=False):\n    """"""\n    Checks if the name is CGNS/Python compliant node name. The name should be a\n    Python string of type ``str`` or ``unicode``, but ``str`` is strongly\n    recommended.\n    A name should follow these requirements:\n\n    * No more than 32 chars\n    * No ``/`` in the string\n    * Empty name or name with only spaces is forbidden\n    * Names ``.`` and ``..`` are forbidden\n    * Allowed chars are :py:data:`string.ascii_letters` + :py:data:`string.digits` + :py:data:`string.punctuation` + ``\' \'``\n\n    Additional checks can be performed with the `strict` flag set to True, these\n    checks are not CGNS compliant:\n\n    * No prefix nor suffix spaces\n    * No more than two consecutive spaces\n    * Punctuation is limited to:  ``!#$%&()*+,-.:;<=>?@[]^_{|}~``\n\n    The check following pattern shows a two steps verification::\n\n       if (not checkName(name)):\n          raise Exception(\'Such name %s not allowed\'%name)\n       elif (not checkName(name,strict=True)):\n          print \'name ok but unsafe\'\n\n    :arg str name: string to check\n    :arg bool strict: forces the \'strict\' mode checks (default is False)\n    :return: True if the name has a correct syntax\n    :Remarks:\n      - Type of name should be a str\n      - Name cannot be empty\n      - There is no way to check against a regular expression\n\n    :raises: codes 22,23,24,25,29,31,32,33,34 if `dienow` is True\n    """"""\n    if not isinstance(name, str):\n        if dienow:\n            raise CE.cgnsNameError(22)\n        return False\n    if len(name) == 0:\n        if dienow:\n            raise CE.cgnsNameError(23)\n        return False\n    sname = set(name)\n    rname = set(string.digits\n                + string.ascii_letters\n                + string.punctuation + \' \')\n    rname.remove(\'/\')\n    if not sname.issubset(rname):\n        if dienow:\n            raise CE.cgnsNameError(24, name)\n        return False\n    if len(name) > 32:\n        if dienow:\n            raise CE.cgnsNameError(25, name)\n        return False\n    if name in [\'.\', \'..\']:\n        if dienow:\n            raise CE.cgnsNameError(29)\n        return False\n    if name.count(\' \') == len(name):\n        if dienow:\n            raise CE.cgnsNameError(31)\n        return False\n    if strict:\n        if (name.lstrip() != name) or (name.rstrip() != name):\n            if dienow:\n                raise CE.cgnsNameError(32)\n            return False\n        rname.remove(\'""\')\n        rname.remove(\'\\\\\')\n        rname.remove(""\'"")\n        rname.remove(""`"")\n        if not sname.issubset(rname):\n            if dienow:\n                raise CE.cgnsNameError(33)\n            return False\n        if \'  \' in name:\n            if dienow:\n                raise CE.cgnsNameError(34)\n            return False\n    return True\n\n\ndef checkNameOrGenerate(name, pattern=\'%32s\'):\n    """"""\n    Checks if a name is CGNS/SIDS compliant, if not generate a new\n    name using a hash fonction with arg name as input.\n    The check is performed using checkName.\n    A pattern can be used only if it actually leads to a compliant name::\n\n      name=checkNameOrGenerate(name,pattern=\'GEN:%s\'\n    """"""\n    if checkName(name, strict=True):\n        return name\n    h = hashlib.md5()\n    h.update(name)\n    nname = h.hexdigest()\n    name = \'%32s\' % (pattern % nname)[:32]\n    if checkName(name, strict=True):\n        return name\n    return nname\n\n\n# --------------------------------------------------\ndef addChild(parent, node):\n    return setChild(parent, node)\n\n\ndef setAsChild(parent, node):\n    """"""\n    Adds a child node to the parent node children list::\n\n      n1=getNodeByPath(T,\'/Base/Zone1/ZoneGridConnectivity\')\n      n2=getNodeByPath(T,\'/Base/Zone1/ZoneGridConnectivity/Connect1\')\n      n3=nodeCopy(n2)\n      setChild(n1,n3)\n\n    :arg CGNS/Python parent: the parent node\n    :arg CGNS/Python node: the child node to add to parent\n    :return: The parent node\n    :Remarks:\n      - No check is performed on duplicated child name or any other validity.\n\n    """"""\n    return setChild(parent, node)\n\n\ndef setAsUniqueChild(parent, node, check=False):\n    """"""\n    Adds a child node to the parent node children list\n    Existing child node with the same name is replaced::\n\n      n1=getNodeByPath(T,\'/Base/Zone1/ZoneGridConnectivity\')\n      n2=getNodeByPath(T,\'/Base/Zone1/ZoneGridConnectivity/Connect1\')\n      n3=nodeCopy(n2)\n      setAsUniqueChild(n1,n3)\n\n    :arg CGNS/Python parent: the parent node\n    :arg CGNS/Python node: the child node to add to parent\n    :return: The parent node\n    :Remarks:\n      - Check is performed on duplicated child name.\n      - Check on node is optional\n\n    """"""\n    if check:\n        valid = (checkNode(node)\n                 and checkName(node[0])\n                 and checkArray(node[1])\n                 and checkNodeType(node))\n        if not valid:\n            return parent\n    for idx, child in enumerate(parent[2]):\n        if child[0] == node[0]:\n            parent[2][idx] = node\n            break\n    else:\n        parent[2].append(node)\n    return parent\n\n\ndef setChild(parent, node):\n    checkNodeCompliant(node, parent)\n    parent[2].append(node)\n    return parent\n\n\n# -----------------------------------------------------------------------------\ndef checkDuplicatedName(parent, name, dienow=False):\n    """"""\n    Checks if the name is not already in the children list of the parent::\n\n      count=1\n      while (not checkDuplicatedName(node,\'solution#%.3d\'%count)): count+=1\n\n    :arg CGNS/Python parent: the parent node\n    :arg str name: the child name to look for\n    :return:\n      - True if the child *IS NOT* duplicated\n      - False if the child *IS* duplicated\n    :Remarks:\n      - Bad legacy interface, True means not ok (see :py:func:`checkChildName`)\n    :raise: :ref:`cgnsnameerror` code 102 if `dienow` is True\n    """"""\n    if not parent:\n        return True\n    if parent[2] is None:\n        return True\n    for nc in parent[2]:\n        if nc[0] == name:\n            if dienow:\n                raise CE.cgnsNameError(102, (name, parent[0]))\n            return False\n    return True\n\n\n# -----------------------------------------------------------------------------\ndef checkHasChildName(parent, name, dienow=False):\n    return checkChildName(parent, name, dienow)\n\n\n# -----------------------------------------------------------------------------\ndef checkChildName(parent, name, dienow=False):\n    """"""\n    Checks if the name is in the children list of the parent::\n\n      count=1\n      while (checkChildName(node,\'solution#%.3d\'%count)): count+=1\n\n    :arg CGNS/Python parent: the parent node\n    :arg str name: the child name to look for\n\n    :return: True if the child exists\n\n    :Remarks:\n\n      - Same function as ``checkDuplicatedName`` but with the **NOT** return\n        (see :py:func:`checkDuplicatedName`)\n\n    :raise: :ref:`cgnsnameerror` code 102 if `dienow` is True\n    """"""\n    return not checkDuplicatedName(parent, name, dienow)\n\n\n# -----------------------------------------------------------------------------\ndef checkUniqueChildName(parent, name, dienow=False):\n    """"""\n    Checks if the name is unique in the children list of the parent::\n\n    :arg CGNS/Python parent: the parent node\n    :arg str name: the child name to look for\n    :return:\n      - True if the child *IS* Unique or Not Used\n      - False if the child *IS NOT* Unique\n\n    :raise: :ref:`cgnsnameerror` code 102 if `dienow` is True\n    """"""\n    if not parent:\n        return True\n    if parent[2] is None:\n        return True\n    count = sum(1 for child in parent[2] if child[0] == name)\n    status = count < 2\n    if dienow and not status:\n        raise CE.cgnsNameError(102, (name, parent[0]))\n    return status\n\n\n# -----------------------------------------------------------------------------\ndef getChildName(parent, name, dienow=False):\n    """"""\n    Checks if the name is in the children list of the parent, if the name\n    already exists, a new name is returned. If the name doesn\'t exist the\n    name itself is returned::\n\n    z=CGU.setAsChild(T,CGU.getChildName(T,\'BASE\'))\n\n    :arg CGNS/Python parent: the parent node\n    :arg str name: the child name to look for\n    :return:\n      - arg name is it doesn\'t exist\n      - a new unique name if arg name already exists\n    """"""\n    if checkDuplicatedName(parent, name, dienow):\n        return name\n    count = 1\n    while checkChildName(parent, \'%s#%.d\' % (name, count)):\n        count += 1\n    return \'%s#%.d\' % (name, count)\n\n\n# -----------------------------------------------------------------------------\ndef checkNodeType(node, cgnstype=None, dienow=False):\n    """"""\n    Check the CGNS type of a node. The type can be a single value or\n    a list of values. Each type to check is a string such as\n   `CGNS.PAT.cgnskeywords.CGNSBase_ts` constant for example.\n    If the list is empty, the check uses the list of all existing CGNS types::\n\n      import CGNS.PAT.cgnskeywords as CK\n\n      n=nodeCreate(\'Base\',numpy([3,3]),[],CK.CGNSBase_ts)\n      checkNodeType(n)\n      checkNodeType(n,[\'Zone_t\',CK.CGNSBase_ts])\n      checkNodeType(n,CGK.FamilyName_ts)\n\n    :arg node node: target node to check\n    :arg list cgnstype: a list of strings with the CGNS/SIDS types to check\n\n    :return:\n     * `True` if the type is a CGNS/SIDS the argument list.\n     * `False` if the type is a CGNSType or a type in the argument list.\n     * `None` if the parent is None (`may change to have consistent return`)\n\n    :raises: :ref:`cgnstypeerror` codes 103,104,40 if `dienow` is True\n\n    :Remarks:\n       - The default value for `cgnstype` is the list of all CGNS/SIDS types\n    """"""\n    if cgnstype is None:\n        cgnstype = []\n    return checkType(node, cgnstype, \'\', dienow)\n\n\ndef checkType(parent, ltype, name, dienow=False):\n    """"""same as :py:func:`checkNodeType <CGNS.PAT.cgnsutils.checkNodeType>`""""""\n    if parent is None:\n        return None\n    if (ltype == []) and (parent[3] in CK.cgnstypes):\n        return True\n    if isinstance(ltype, list) and (parent[3] in ltype):\n        return True\n    if parent[3] == ltype:\n        return True\n    if (ltype == []) and (parent[3] not in CK.cgnstypes):\n        if dienow:\n            raise CE.cgnsTypeError(40, (parent, parent[3]))\n        return False\n    if parent[3] != ltype:\n        if dienow:\n            raise CE.cgnsTypeError(103, (parent, ltype))\n        return False\n    if isinstance(ltype, list) and (parent[3] not in ltype):\n        if dienow:\n            raise CE.cgnsTypeError(104, (parent, ltype))\n        return False\n    return True\n\n\n# -----------------------------------------------------------------------------\ndef checkParentType(parent, stype):\n    """"""same as :py:func:`checkType <CGNS.PAT.cgnsutils.checkType>` but\n     checks the parent type instead of the current node""""""\n    if parent is None:\n        return False\n    if parent[3] != stype:\n        return False\n    return True\n\n\n# -----------------------------------------------------------------------------\ndef checkTypeList(parent, ltype, name):\n    if parent is None:\n        return None\n    if parent[3] not in ltype:\n        raise CE.cgnsException(104, (name, ltype))\n    return None\n\n\n# -----------------------------------------------------------------------------\ndef checkParent(node, dienow=False):\n    if node is None:\n        return False\n    return checkNode(node, dienow)\n\n\n# -----------------------------------------------------------------------------\ndef checkNode(node, dienow=False):\n    """"""\n    Checks if a node is a compliant CGNS/Python node structure of list.\n    The syntax for a compliant node structure is:\n\n    .. code-block:: c\n\n      [<name:string>, <value:numpy>, <children:list-of-nodes>, <cgnstype:string>]\n\n    With the following exception: a `value` can be None.\n\n    The function checks the syntax of the node and the types of its contents,\n    it doesn\'t perform sub checks such as `checkNodeName`, `checkNodeType`...\n\n    You should always check first the node structure, a function such as\n    `checkNodeName` blindly access to the first item of the list and would raise\n    an exception if the structure is not correct.\n\n    :arg CGNS/Python node: the CGNS/Python node to check\n    :return: True if the node is ok\n    :Remarks:\n      - see also :py:func:`checkNodeCompliant`\n    :raise: :ref:`cgnsnodeerror` codes 1,2,3,4,5 if `dienow` is True\n    """"""\n    if not node:\n        if dienow:\n            raise CE.cgnsException(1)\n        return False\n    if not isinstance(node, list):\n        if dienow:\n            raise CE.cgnsException(2)\n        return False\n    if len(node) != 4:\n        if dienow:\n            raise CE.cgnsException(2)\n        return False\n    if not isinstance(node[0], str):\n        if dienow:\n            raise CE.cgnsException(3)\n        return False\n    if not isinstance(node[2], list):\n        if dienow:\n            raise CE.cgnsException(4, node[0])\n        return False\n    if (node[1] is not None) and (not isinstance(node[1], numpy.ndarray)):\n        if dienow:\n            raise CE.cgnsException(5, node[0])\n        return False\n    return True\n\n\n# -----------------------------------------------------------------------------\ndef checkRootNode(node, legacy=False, dienow=False):\n    """"""\n    Checks if a node is the CGNS/Python tree root node.\n    If `legacy` is True, then `[None, None, [children], None]` is\n    accepted as Root. If it is not True (default) then a CGNS/Python node\n    of type `CGNSTree_t` is expected as root node.\n    Children contains then the `CGNSLibraryVersion`\n    and `CGNSBase` nodes as flat list.\n    The `flat` pattern with a list containing `CGNSLibraryVersion`\n    and zero or more `CGNSBase` nodes is not accepted. You should use a trick as\n    the one above by giving this pattern as child of a fake node::\n\n       # flatpattern is a CGNS/Python list with a `CGNSLibraryVersion` node\n       # and `CGNSBase` nodes at the same level.\n       # we build a temporary children list\n\n       tmp=[None, None, [flatpattern], None]\n       if (checkRootNode(tmp,True)):\n           print \'CGNS/Python tree has a legacy root node\'\n\n    :arg CGNS/Python node: the node to check\n    :arg bool legacy: True means you accept non-CGNSTree_t node\n    :return: True if the node is a root node\n    :raises: :ref:`cgnsnodeerror` codes 90,91,99 if `dienow` is True\n    """"""\n    return isRootNode(node, legacy, dienow)\n\n\ndef isRootNode(node, legacy=False, version=False, dienow=False):\n    if not node:\n        if dienow:\n            raise CE.cgnsNodeError(90)\n        return False\n\n    if not checkNode(node, dienow):\n        return False\n    if legacy:\n        start = node\n    else:\n        if node[3] == CK.CGNSTree_ts:\n            start = node\n        else:\n            return False\n    versionfound = 0\n    cgnsversion = 0.0\n    for n in start[2]:\n        if not checkNode(n, dienow):\n            return False\n        if ((n[0] == CK.CGNSLibraryVersion_s) and\n                (n[3] == CK.CGNSLibraryVersion_ts)):\n            if versionfound and dienow:\n                raise CE.cgnsNodeError(99)\n            if versionfound != 0:\n                return False\n            versionfound = 1\n            if version and n[1] is not None:\n                cgnsversion = n[1][0]\n        elif n[3] != CK.CGNSBase_ts:\n            if dienow:\n                raise CE.cgnsNodeError(91)\n            return False\n    if version:\n        return cgnsversion\n    if versionfound:\n        return True\n    else:\n        return True\n\n\ndef getVersion(tree):\n    v = isRootNode(tree, version=True)\n    if v:\n        return v\n    return 0.0\n\n\n# -----------------------------------------------------------------------------\n# Arbitrary and incomplete node comparison (lazy evaluation)\ndef checkSameTree(treeA, treeB, dienow=False):\n    """"""\n    Checks if two trees are the same, recursive use of CheckSameNode\n    Does not says where it may differ, only True or False is returned\n    """"""\n    try:\n        checkSameNode(treeA, treeB, dienow=True)\n        for a, b in zip(getNextChildSortByType(treeA), getNextChildSortByType(treeB)):\n            checkSameNode(a, b, dienow=True)\n    except CE.cgnsNodeError:\n        return False\n    return True\n\n\n# -----------------------------------------------------------------------------\n# Arbitrary and incomplete node comparison (lazy evaluation)\ndef checkSameNode(nodeA, nodeB, dienow=False):\n    """"""\n    Checks if two nodes have the same contents: same name, same CGNS/SIDS type,\n    same number of children, same value type (None of numpy).\n    The children are not parsed, the value itself is not checked\n    (see :py:func:`checkSameValue`)::\n\n      if checkSameNode(nodeA,nodeB):\n          nodeB = copyNode(nodeB)\n\n    :arg CGNS/Python nodeA: first node to compare\n    :arg CGNS/Python nodeB: second node to compare\n    :return: True if the nodes are same\n    :remarks:\n      - the function call :py:func:`checkSameValue`\n    :raise: :ref:`cgnsnodeerror` code 30 if `dienow` is True\n    """"""\n    return sameNode(nodeA, nodeB, dienow)\n\n\ndef sameNode(nodeA, nodeB, dienow=False):\n    same = True\n    if not (checkNode(nodeA) and checkNode(nodeB)):\n        same = False\n    elif nodeA[0] != nodeB[0]:\n        same = False\n    elif nodeA[3] != nodeB[3]:\n        same = False\n    elif not isinstance(nodeA[1], type(nodeB[1])):\n        same = False\n    elif not checkSameValue(nodeA, nodeB):\n        same = False\n    elif len(nodeA[2]) != len(nodeB[2]):\n        same = False\n    if not same and dienow:\n        raise CE.cgnsNodeError(30, (nodeA[0], nodeB[0]))\n    return same\n\n\n# -----------------------------------------------------------------------------\ndef checkSameValue(nodeA, nodeB, dienow=False):\n    """"""\n    Checks if two nodes have the same value. There is no tolerance on actual\n    array values when these are compared one to one. This could lead to time\n    consuming operations for large arrays::\n\n       if not checkSameValue(nodeA,nodeB):\n           raise Exception(\'Not the same value\')\n\n    :arg CGNS/Python nodeA: first node to compare the value with\n    :arg CGNS/Python nodeB: second node to compare the value with\n    :return: True if the nodes have same value\n    :raise: :ref:`cgnsnodeerror` code 30 if `dienow` is True\n    """"""\n    v_a = nodeA[1]\n    v_b = nodeB[1]\n    if (v_a is None) and (v_b is None):\n        return True\n    if (v_a is None) or (v_b is None):\n        return False\n    if isinstance(v_a, numpy.ndarray) and isinstance(v_b, numpy.ndarray):\n        if v_a.dtype != v_b.dtype:\n            return False\n        if v_a.shape != v_b.shape:\n            return False\n        return numpy.all(numpy.equal(v_a, v_b))\n    if isinstance(v_a, numpy.ndarray) or isinstance(v_b, numpy.ndarray):\n        return False\n    return v_a == v_b\n\n\n# -----------------------------------------------------------------------------\ndef checkArray(a, dienow=False, orNone=True):\n    """"""\n    Check if the array value of a node is a numpy array::\n\n       if not checkArray(node[1]):\n           raise Exception(\'Bad array (for a CGNS/Python node)\')\n\n    :arg numpy.ndarray a: value to check\n    :arg bool dienow: If `True` raises an exception on error (default:`False`)\n    :arg bool orNone: If `True\' return True when `a\' is None\n    :return: True if the arg array is suitable as CGNS/Python value\n    :raise: error codes 109,170 if `dienow` is True\n    """"""\n    if orNone and (a is None):\n        return True\n    if not isinstance(a, numpy.ndarray):\n        if dienow:\n            raise CE.cgnsException(109)\n        return False\n    if getValueType(a) is None:\n        if dienow:\n            raise CE.cgnsException(111)\n        return False\n    if len(a.shape) > 1 and not a.flags.f_contiguous:\n        if dienow:\n            raise CE.cgnsException(710)\n        return False\n    return True\n\n\n# -----------------------------------------------------------------------------\ndef checkArrayChar(a, dienow=False):\n    """"""same as :py:func:`checkArray <CGNS.PAT.cgnsutils.checkArray>` for an array of type C1""""""\n    if not checkArray(a, dienow):\n        return False\n    if a.dtype.kind not in [\'S\', \'a\']:\n        if dienow:\n            raise CE.cgnsException(105)\n        return False\n    return True\n\n\n# -----------------------------------------------------------------------------\ndef checkArrayI4(a, dienow=False):\n    """"""same as :py:func:`checkArray <CGNS.PAT.cgnsutils.checkArray>` for an array of type I4""""""\n    if not checkArray(a):\n        return False\n    if a.dtype != __I4:\n        return False\n    return True\n\n\n# -----------------------------------------------------------------------------\ndef checkArrayI8(a, dienow=False):\n    """"""same as :py:func:`checkArray <CGNS.PAT.cgnsutils.checkArray>` for an array of type I8""""""\n    if not checkArray(a):\n        return False\n    if a.dtype != __I8:\n        return False\n    return True\n\n\n# -----------------------------------------------------------------------------\ndef checkArrayR4(a, dienow=False):\n    """"""same as :py:func:`checkArray <CGNS.PAT.cgnsutils.checkArray>` for an array of type R4 """"""\n    if not checkArray(a):\n        return False\n    if a.dtype != __R4:\n        return False\n    return True\n\n\n# -----------------------------------------------------------------------------\ndef checkArrayR8(a, dienow=False):\n    """"""same as :py:func:`checkArray <CGNS.PAT.cgnsutils.checkArray>` for an array of type R8 """"""\n    if not checkArray(a):\n        return False\n    if a.dtype != __R8:\n        return False\n    return True\n\n\n# -----------------------------------------------------------------------------\ndef checkArrayReal(a, dienow=False):\n    """"""same as :py:func:`checkArray <CGNS.PAT.cgnsutils.checkArray>` for an array of type R4 or R8""""""\n    if not checkArray(a):\n        return False\n    if a.dtype not in [__R4, __R8]:\n        return False\n    return True\n\n\n# -----------------------------------------------------------------------------\ndef checkArrayInteger(a, dienow=False):\n    """"""same as :py:func:`checkArray <CGNS.PAT.cgnsutils.checkArray>` for an array of type I4,I8""""""\n    if not checkArray(a):\n        return False\n    if a.dtype not in [__I4, __I8]:\n        return False\n    return True\n\n# -----------------------------------------------------------------------------\ndef checkSingleValue(a):\n    """"""checks if a value is a single value, that is a single integer,\n    a single float or a single string""""""\n    if checkArrayReal(a) or checkArrayInteger(a):\n        if a.shape == (1,):\n            return True\n        return False\n    elif checkArrayChar(a):\n        if len(a.shape) == 1:\n            return True\n        return False\n    return False\n\n# -----------------------------------------------------------------------------\ndef checkNodeCompliant(node, parent=None, dienow=False):\n    """"""\n    Performs all possible checks on a node. Can raise any of the exceptions\n    related to node checks (:py:func:`checkNodeName`, :py:func:`checkNodeType`,\n    :py:func:`checkArray`...)::\n\n       if not checkNodeCompliant(node):\n           raise Exception(\'Bad Node\')\n\n    :arg CGNS/Python node: the CGNS/Python node to check\n    :arg CGNS/Python parent: CGNS/Python parent node to check (if not None)\n    :return: True if all controls are ok\n    :Remarks:\n      - Calls :py:func:`checkNode`,:py:func:`checkNodeName`,\n        :py:func:`checkArray`, :py:func:`checkNodeType`\n\n    """"""\n    r = checkNode(node, dienow=dienow) \\\n        and checkNodeName(node, dienow=dienow) \\\n        and checkArray(node[1], dienow=dienow) \\\n        and checkNodeType(node, dienow=dienow)\n    return r\n\n\n# -----------------------------------------------------------------------------\ndef concatenateForArrayChar(nlist):\n    nl = []\n    for n in nlist:\n        if isinstance(n, str):\n            nl += [setStringAsArray((""%-32s"" % n)[:32])]\n        else:\n            checkArrayChar(n)\n            nl += [setStringAsArray((""%-32s"" % n.tostring())[:32])]\n    r = numpy.array(numpy.array(nl, order=\'F\').T, order=\'F\')\n    return r\n\n\n# -----------------------------------------------------------------------------\ndef concatenateForArrayChar2D(nlist):\n    """"""Creates a numpy.ndarray of chars from a list of python strings::\n\n       udims=[\'Kilogram\',\'Meter\',\'Second\',\'Kelvin\',\'Gradian\']\n       a=concatenateForArrayChar2D(udims)\n\n    The result is a numpy.ndarray of type \'S\' with a shape of (32,N) for\n    N strings. In the example above the value of a[:,1] is \'Meter\' with\n    an added padding of 27 \'spaces\'.\n    The order of the values in the second axis is kept unchanged.\n    """"""\n    return concatenateForArrayChar(nlist)\n\n\n# -----------------------------------------------------------------------------\ndef concatenateForArrayChar3D(nlist):\n    """"""Creates a numpy.ndarray of chars from a list of list of python strings""""""\n    rr = []\n    for p in nlist:\n        nl = []\n        for n in p:\n            if isinstance(n, str) :\n                nl += [setStringAsArray((""%-32s"" % n)[:32])]\n            else:\n                checkArrayChar(n)\n                nl += [setStringAsArray((""%-32s"" % n.tostring())[:32])]\n        rr.append(numpy.array(numpy.array(nl, order=\'F\'), order=\'F\'))\n    r = numpy.array(rr, order=\'F\').T\n    return r\n\n\n# -----------------------------------------------------------------------------\n# old MLL returns - should not be used anymore\ndef getValueType(v):\n    """"""\n    Returns the node\'s value type as CGNS/MLL type.\n    The return value is a string in:\n    Character, RealSingle, RealDouble, Integer, LongInteger\n    """"""\n    if v is None:\n        return None\n    if isinstance(v, numpy.ndarray):\n        if v.dtype.kind in [\'S\', \'a\']:\n            return CK.Character_s\n        if v.dtype.name in [\'float32\']:\n            return CK.RealSingle_s\n        if v.dtype.name in [\'float64\']:\n            return CK.RealDouble_s\n        if v.dtype.name in [\'int32\']:\n            return CK.Integer_s\n        if v.dtype.name in [\'int64\']:\n            return CK.LongInteger_s\n    return None\n\n\n# -----------------------------------------------------------------------------\ndef setValue(node, value):\n    """"""\n    Sets an arbitrary value in the node, replacing the existing one.\n    The value is refered-to, no copy, data type is deduced from numpy array\n    data type.""""""\n    if node is None:\n        return None\n    t = getValueType(value)\n    if t is None:\n        node[1] = None\n    elif (t in [CK.Integer_s, CK.LongInteger_s, CK.RealDouble_s,\n                CK.RealSingle_s, CK.Character_s]):\n        node[1] = value\n    else:\n        return None\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef setStringByPath(tree, path, s):\n    """"""\n    Creates a 1D numpy.ndarray from one string, set to node by path::\n\n      p=\'/{Base#1}/BaseIterativeData/DataClass\'\n      setStringByPath(tree,p,\'UserDefined\')\n\n    Remark: target node should already exist\n    """"""\n    node = getNodeByPath(tree, path)\n    v = setStringAsArray(s)\n    if v is not None:\n        setValue(node, v)\n    return node\n\n# -----------------------------------------------------------------------------\ndef setStringAsArray(a):\n    """"""Creates a numpy.ndarray from a string::\n\n       setStringAsArray(\'UserDefined\')\n\n    """"""\n    if isinstance(a, numpy.ndarray):\n        if (a.shape != ()) and (a.dtype.kind == \'S\'):\n            return a\n        else:\n            return numpy.array(tuple(a), dtype=\'|S\', order=\'Fortran\')\n    if isinstance(a, bytes):\n        lst_bytes = [bytes([x]) for x in a]\n        if not PY3:\n            lst_bytes = [x.decode(\'ascii\') for x in lst_bytes]\n        return numpy.array(lst_bytes, dtype=\'|S\', order=\'Fortran\')\n    if isinstance(a, str) :\n        lst_bytes = [x.encode(\'ascii\') for x in a]\n        if not PY3:\n            lst_bytes = [x.decode(\'ascii\') for x in lst_bytes]\n        return numpy.array(lst_bytes, dtype=\'|S\', order=\'Fortran\')\n    return None\n\n# -----------------------------------------------------------------------------\ndef setIntegerByPath(tree, path, *i):\n    """"""Creates a 1D numpy.ndarray from one or more integers,\n       set to node by path. Same as :py:func:`setLongByPath` but with a\n       numpy.int32 data type.\n\n       Remark: target node should already exist\n    """"""\n    if isinstance(i, type(None)) or (len(i) == 0):\n        raise CE.cgnsNameError(112)\n    node = getNodeByPath(tree, path)\n    setValue(node, numpy.array(i, dtype=numpy.int32))\n    return node\n\n# -----------------------------------------------------------------------------\ndef setIntegerAsArray(*i):\n    """"""Creates a 1D numpy.ndarray from one or more integers.\n       Same as :py:func:`setLongAsArray` but with a\n       numpy.int32 data type.\n\n    """"""\n    if isinstance(i, type(None)) or (len(i) == 0):\n        raise CE.cgnsNameError(112)\n    return numpy.array(i, dtype=numpy.int32)\n\n# -----------------------------------------------------------------------------\ndef setLongByPath(tree, path, *l):\n    """"""Creates a 1D numpy.ndarray from one or more longs,\n       set to node by path::\n\n           p=\'/{Base#1}/BaseIterativeData/NumberOfZones\'\n           setFloatByPath(tree, p, 2)\n\n           p=\'/{Base#1}/BaseIterativeData/IterationValues\'\n           setFloatByPath(tree, p, 1, 2, 3, 4, 5)\n           setFloatByPath(tree, p, tuple(range(10,1010,10)))\n\n       The set value has numpy.int64 data type\n\n       Remark: target node should already exist\n    """"""\n    if isinstance(l, type(None)) or (len(l) == 0):\n        raise CE.cgnsNameError(112)\n    node = getNodeByPath(tree, path)\n    setValue(node, numpy.array(l, dtype=numpy.int64))\n    return node\n\n# -----------------------------------------------------------------------------\ndef setLongAsArray(*l):\n    """"""Creates a 1D numpy.ndarray from one or more longs::\n\n         setLongAsArray(2)\n         setLongAsArray(1, 2, 3, 4, 5)\n         setLongAsArray(tuple(range(10,1010,10)))\n\n       The set value has numpy.int64 data type\n    """"""\n    if isinstance(l, type(None)) or (len(l) == 0):\n        raise CE.cgnsNameError(112)\n    return numpy.array(l, dtype=numpy.int64)\n\n# -----------------------------------------------------------------------------\ndef setFloatByPath(tree, path, *f):\n    """"""Creates a 1D numpy.ndarray from one or more floats,\n    set to node by path::\n\n      p=\'/{Base#1}/{Zone-A}/ReferenceState/Coef_PressureDynamic\'\n      setFloatByPath(tree, p, 2837.153)\n\n      p=\'/{Base#1}/{Zone-A}/ReferenceState/Coef_Local\'\n      setFloatByPath(tree, p, 2.1, 2.2, 2.3, 2.4)\n\n    The set value has numpy.float32 data type\n\n    Remark: target node should already exist\n    """"""\n    if isinstance(f, type(None)) or (len(f) == 0):\n        raise CE.cgnsNameError(112)\n    node = getNodeByPath(tree, path)\n    setValue(node, numpy.array(f, dtype=numpy.float32))\n    return node\n\n# -----------------------------------------------------------------------------\ndef setFloatAsArray(*f):\n    """"""Creates a 1D numpy.ndarray from one or more floats::\n\n         setFloatAsArray(2837.153)\n         setFloatAsArray(2.1, 2.2, 2.3, 2.4)\n         setFloatAsArray(tuple(range(10,1010,10)))\n\n       The returned array has numpy.float32 data type\n    """"""\n    if isinstance(f, type(None)) or (len(f) == 0):\n        raise CE.cgnsNameError(112)\n    return numpy.array(f, dtype=numpy.float32)\n\n\n# -----------------------------------------------------------------------------\ndef setDoubleByPath(tree, path, *d):\n    """"""Creates a 1D numpy.ndarray from one or more doubles,\n      set to node by path. Same as :py:func:`setFloatByPath` but with a\n      numpy.float64 data type.\n\n      Remark: target node should already exist\n    """"""\n    if isinstance(d, type(None)) or (len(d) == 0):\n        raise CE.cgnsNameError(112)\n    node = getNodeByPath(tree, path)\n    setValue(node, numpy.array(d, dtype=numpy.float64))\n    return node\n\n\n# -----------------------------------------------------------------------------\ndef setDoubleAsArray(*d):\n    """"""Creates a 1D numpy.ndarray from one or more doubles.\n    Same as :py:func:`setFloatAsArray` but with a\n    numpy.float64 data type.\n\n    """"""\n    if isinstance(d, type(None)) or (len(d) == 0):\n        raise CE.cgnsNameError(112)\n    return numpy.array(d, dtype=numpy.float64)\n\n\n# -----------------------------------------------------------------------------\ndef getValueAsString(node):\n    """"""Returns node value as a Python string""""""\n    return node[1].tostring().decode(""ascii"", ""strict"")\n\n\n# -----------------------------------------------------------------------------\ndef getValueAsStringEval(value):\n    """"""Tries to build the best value one can deduce from given string, the\n    returned value is a numpy array or None (if everything else fail).\n    Evaluation is performed on string with the following order:\n\n     - numpy array of single int\n     - numpy array of single float\n     - numpy array of ints\n     - numpy array of floats\n     - numpy array of chars\n    """"""\n    if eval(value) is None:\n        return None\n    try:\n        v = numpy.array(value, dtype=numpy.int64)\n        return v\n    except ValueError:\n        pass\n\n    try:\n        v = numpy.array(value, dtype=numpy.float64)\n        return v\n    except ValueError:\n        pass\n\n    try:\n        v = numpy.array(eval(value), dtype=numpy.int64)\n        return v\n    except ValueError:\n        pass\n\n    try:\n        v = numpy.array(eval(value), dtype=numpy.float64)\n        return v\n    except ValueError:\n        pass\n    try:\n        v = setStringAsArray(value)\n        return v\n    except ValueError:\n        pass\n\n    return None\n\n\n# -----------------------------------------------------------------------------\ndef getValue(node):\n    """"""Returns node value, could be `None` or a `numpy.ndarray`.""""""\n    v = node[1]\n    t = getValueType(v)\n    if t is None:\n        return None\n    if t == CK.Integer_s:\n        return v\n    if t == CK.LongInteger_s:\n        return v\n    if t == CK.RealDouble_s:\n        return v\n    if t == CK.Character_s:\n        return v\n    return v\n\n\n# --------------------------------------------------\ndef hasFortranFlag(node):\n    """"""Returns node value fortran flag.""""""\n    if node[1] is None:\n        return True\n    if node[1] == []:\n        return True\n    if isinstance(node[1], str):\n        return True  # link\n    if not node[1].shape:\n        return True\n    if len(node[1].shape) == 1:\n        return True\n    return numpy.isfortran(node[1])\n\n\n# --------------------------------------------------\ndef getValueShape(node):\n    """"""\n    Returns the value data shape for a CGNS/Python node for **display purpose**.\n    If the shape cannot be determined a `-` is returned::\n\n       print \'node data shape is %s\'%getValueShape(node)\n\n    :arg CGNS/Python node: the target node\n    :return: A string with the shape\n\n    """"""\n    return getNodeShape(node)\n\n\ndef getNodeShape(node):\n    if node[1] is None:\n        r = ""-""\n    elif node[1] == []:\n        r = ""-""\n    elif node[3] == \'\':\n        r = ""-""\n    elif node[1].shape in [\'\', (0,), ()]:\n        r = ""[0]""\n    else:\n        r = str(list(node[1].shape))\n    return r\n\n\ndef getShape(node):\n    if not isinstance(node[1], numpy.ndarray):\n        r = (0,)  # None, []\n    elif node[3] == \'\':\n        r = (0,)\n    elif node[1].shape in [\'\', (0,), ()]:\n        r = (0,)\n    else:\n        r = node[1].shape\n    return r\n\n\n# --------------------------------------------------\ndef getNodeAllowedChildrenNames(node):\n    return getAuthNames(node)\n\n\n# --------------------------------------------------\ndef getAuthNames(node):\n    """"""\n    Returns the authorized names for a CGNS/Python node.\n    If the names cannot be determined an empty list is returned::\n\n       node=[\'gasmodel\',None,[],\'GasModel_t\']\n       if (node[0] not in getAuthNames(node)):\n           print \'not SIDS compliant name\'\n\n    :arg CGNS/Python node: the target node\n    :return: A list of authorized names (empty list if not found)\n    """"""\n    if not node[3]:\n        r = []  # \'\'\n    elif CT.types[node[3]].names in [\'\', None, CT.UD]:\n        r = []\n    else:\n        r = CT.types[node[3]].names\n    return r\n\n\n# --------------------------------------------------\ndef getAuthDataTypes(node):\n    """"""\n    Returns the authorized types for a CGNS/Python node.\n    If the types cannot be determined a None is returned::\n\n       if (getValueType(node) not in getAuthDataTypes(node)):\n           print \'Type of node value is not SIDS comliant\'\n\n    :arg CGNS/Python node: the target node\n    :return: A list of authorized data types (empty if not found)\n\n    """"""\n    if node[1] is None:\n        r = []\n    elif node[1] == []:\n        r = []\n    elif not node[3]:\n        r = []  # \'\'\n    elif CT.types[node[3]].datatype in [\'\', None, [CK.LK]]:\n        r = []\n    else:\n        r = CT.types[node[3]].datatype\n    return r\n\n\n# --------------------------------------------------\ndef getAuthParentTypes(node):\n    """"""\n    Returns the authorized parent types for a CGNS/Python node.\n    If the parent types cannot be determined a None is returned::\n\n        np=getParentFromNode(T,node)\n        if (np[3] not in getAuthParentTypes(node)):\n            p=getPathByNode(T,node)\n            print \'[%s] cannot have parent of type [%s]\'%(p,np[3])\n\n    :arg CGNS/Python node: the target node\n    :return: A list of authorized parent types (empty list is none)\n\n    """"""\n    if node[1] is None:\n        r = []\n    elif node[1] == []:\n        r = []\n    elif not node[3]:\n        r = []\n    elif CT.types[node[3]].parents in [\'\', None]:\n        r = []\n    else:\n        r = CT.types[node[3]].parents\n    return r\n\n\n# --------------------------------------------------\ndef getAuthShapes(node):\n    """"""Returns the authorized shapes for a CGNS/Python node.\n    If the shapes cannot be determined a None is returned::\n\n       if getShape(node) not in getAuthShapes(node):\n           p=getPathByNode(T,node)\n           print \'[%s] cannot have shape [%s]\'%(p,getShape(node))\n\n    :arg CGNS/Python node: the target node\n    :return: A list of authorized shapes\n\n    """"""\n    if node[1] is None:\n        r = []\n    elif node[1] == []:\n        r = []\n    elif not node[3]:\n        r = []\n    elif CT.types[node[3]].shape in [\'\']:\n        r = []\n    else:\n        r = CT.types[node[3]].shape\n    return r\n\n\n# --------------------------------------------------\ndef getAuthChildren(node):\n    """"""\n    Returns the authorized children for a CGNS/Python node.\n    If the children types cannot be determined a None is returned::\n\n       if hasChildNodeOfType(node) not in getAuthChildren(node):\n           p = getPathByNode(T,node)\n           print \'[%s] cannot have [%s] of type [%s] as child\'%(p,node[0],node[3])\n\n    :arg node node: target node\n    :return: list of str, authorized CGNS/SIDS types for children\n\n    """"""\n    if not node[3]:\n        r = []  # None, [], \'\'\n    elif CT.types[node[3]].children in [\'\', None, []]:\n        r = []\n    else:\n        r = CT.types[node[3]].children\n    return r\n\n\n# --------------------------------------------------\ndef getValueDataType(node):\n    """"""\n    Returns the value data type for a CGNS/Python node for **display purpose**::\n\n       print \'node data type is %s\'%getValueDataType(node)\n\n    :arg CGNS/Python node: function target\n    :return: A data type as string in ``[`C1`,`I4`,`I8`,`R4`,`R8`,`??`]``\n    :Remarks:\n      - ``??`` returned if datatype is not one of ``[`C1`,`I4`,`I8`,`R4`,`R8`]``\n      - Then ``None`` value returns ``??``\n      - There is no ``LK`` link type with the CGNS/Python mapping\n\n    """"""\n    return getNodeType(node)\n\n\n# --------------------------------------------------\ndef getNodeType(node):\n    data = node[1]\n    if node[0] == \'CGNSLibraryVersion_t\':\n        return CK.R4  # ONLY ONE R4 IN ALL SIDS !\n    if isinstance(data, numpy.ndarray):\n        if data.dtype.kind in [\'S\', \'a\']:\n            return CK.C1\n        if data.dtype.name in [\'float32\', \'Float32\']:\n            return CK.R4\n        if data.dtype.name in [\'float64\', \'Float64\']:\n            return CK.R8\n        if data.dtype.name in [\'int32\', \'Int32\']:\n            return CK.I4\n        if data.dtype.name in [\'int64\', \'Int64\']:\n            return CK.I8\n    if isinstance(data, list) and (len(data)):  # oups !\n        if isinstance(data[0], str):\n            return CK.C1\n        if isinstance(data[0], int):\n            return CK.I4\n        if isinstance(data[0], float):\n            return CK.R8\n    if (data is None) or (data == []):\n        return CK.MT\n    return \'??\'\n\n\n# --------------------------------------------------\ndef hasFirstPathItem(path, item=CK.CGNSTree_s):\n    """"""\n    True if the arg string is the item of the path::\n\n      p=\'/{Base#1}/{Zone-A}/ZoneGridConnectivity\'\n      print hasFirstPathItem(p,\'{Base#1}\')\n      # True\n\n    :arg str path: path to process\n    :arg str item: item to check against\n    :return bool: True if first item matches arg\n    :Remarks:\n      - There is no call to :py:func:`getPathNormalize`\n      - Default value for item is `CGNSTree`\n\n    """"""\n    if (len(path) > 0) and (path[0] == \'/\'):\n        path = path[1:]\n    p = path.split(\'/\')\n    if (len(p) > 1) and (item == p[0]):\n        return True\n    return False\n\n\n# --------------------------------------------------\ndef removeFirstPathItem(path):\n    """"""\n    Return the path without the first item::\n\n      print removeFirstPathItem(\'/{Base#1}/{Zone-A}/ZoneGridConnectivity\')\n      # \'/{Zone-A}/ZoneGridConnectivity\'\n\n    :arg str path: path to process\n    :return: path without first token\n    :Remarks:\n      - There is no call to :py:func:`getPathNormalize`.\n\n    """"""\n    p = path.split(\'/\')\n    if (p[0] == \'\') and (len(p) > 2):\n        return str.join(\'/\', [\'\'] + p[2:])\n    elif len(p) > 1:\n        return str.join(\'/\', p[1:])\n    else:\n        return \'/\'\n\n\n# --------------------------------------------------\ndef getNodeByPath(tree, path):\n    """"""\n    Returns the CGNS/Python node with the argument path::\n\n      zbc=getNodeByPath(tree,\'/Base/Zone001/ZoneBC\')\n      nchildren=len(childrenNames(zbc))\n\n    The path is compared as a string, you should provide the exact path\n    if you have a sub-tree or a tree with its `CGNSTree` fake node. The\n    following lines are not equivalent (sic!)::\n\n      zbc=getNodeByPath(tree,\'/Base/Zone001/ZoneBC\')\n      zbc=getNodeByPath(tree,\'/CGNSTree/Base/Zone001/ZoneBC\')\n\n    You can change the relative root by giving any sub-node of the complete tree.\n    For example, to get a specific BC node in a zone, you first look for the\n    ``ZoneBC`` of the zone and you use the returned node a the new root::\n\n      zbc=getNodeByPath(tree,\'/Base/Zone001/ZoneBC\')\n      nbc=getNodeByPath(zbc,\'./wall01\')\n\n    :arg node tree: the target tree to parse\n    :arg str path: absolute or relative path\n    :return:\n      - The CGNS/Python `node` matching the path\n      - Returns `None` if the path is not found\n    :Remarks:\n      - No wildcards allowed (see :py:func:`getPathsByNameFilter`\n        and :py:func:`getPathsByNameFilter` )\n      - there is no concept of absolute or relative path, the path is always the\n        concatenation of children node names (and then recurse)\n    """"""\n    path = getPathNormalize(path)\n    if path in [\'\', \'/\', \'.\']:\n        return tree\n    if not checkPath(path):\n        return None\n    lpath = path.split(\'/\')\n    if lpath[0] == \'\':\n        lpath = lpath[1:]\n    if tree[3] == CK.CGNSTree_ts:\n        _tree = tree\n        if lpath[0] == CK.CGNSTree_s:\n            if len(lpath) == 1:\n                return _tree\n            lpath = lpath[1:]\n    elif lpath[0] == tree[0]:\n        _tree = [CK.CGNSTree_s, None, [tree], CK.CGNSTree_ts]\n    else:\n        _tree = tree\n    n = getNodeFromPath(lpath, _tree)\n    return n\n\n\n# --------------------------------------------------\ndef getValueByPath(tree, path):\n    """"""\n    Returns the value of a CGNS/Python node with the argument path::\n\n      import CGNS.PAT.cgnskeywords as CK\n\n      v=getNodeByPath(T,\'/Base/Zone001/ZoneType\')\n      if (v == CK.Structured_s): print \'Structured Zone Found\'\n\n    :arg CGNS/Python tree: target tree to parse\n    :arg str path: absolute or relative path\n    :return:\n      - CGNS/Python node value matching the path\n      - Returns None if the path is not found\n    :Remark:\n      - No wildcards allowed (see :py:func:`getPathsByNameFilter`\n        and :py:func:`getPathsByNameFilter` )\n    """"""\n    n = getNodeByPath(tree, path)\n    if n is None:\n        return None\n    return n[1]\n\n\n# --------------------------------------------------\ndef getChildrenByPath(tree, path):\n    """"""\n    Returns the children list of a CGNS/Python node with the argument path::\n\n      import CGNS.PAT.cgnskeywords as CK\n\n      for bc in getChildrenByPath(T,\'/Base/Zone01/ZoneBC\'):\n          if (bc[3] == CK.BC_ts):\n              print \'BC found:\', bc[0]\n\n    :arg CGNS/Python tree: target tree to parse\n    :arg str path: absolute or relative path\n    :return:\n      - The CGNS/Python node children list of node matching the path\n      - Returns None if the path is not found\n    :Remark:\n      - No wildcards allowed (see :py:func:`getPathsByNameFilter`\n        and :py:func:`getPathsByNameFilter` )\n    """"""\n    n = getNodeByPath(tree, path)\n    if n is None:\n        return None\n    return n[2]\n\n\n# --------------------------------------------------\ndef getNextChildSortByType(node, parent=None, criteria=None):\n    """"""\n    **Iterator** returns the children list of the argument CGNS/Python\n    sorted using the CGNS type then the name. The `sortlist` gives\n    an alternate sort list/dictionnary::\n\n      for child in getNextChildSortByType(node):\n          print \'Next child:\', child[0]\n\n      zonesort=[CGK.Elements_ts, CGK.Family_ts, CGK.ZoneType_ts]\n      for child in getNextChildSortByType(node,criteria=mysort):\n          print \'Next child:\', child[0]\n\n      mysort={CGK.Zone_t: zonesort}\n      for child in getNextChildSortByType(node,parent,mysort):\n          print \'Next child:\', child[0]\n\n    :arg CGNS/Python node: the target\n    :arg CGNS/Python parent: the parent\n    :arg list criteria: a list or a dictionnary used as the sort criteria\n    :return:\n      - This is an iterator, it returns a CGNS/Python node\n    :remarks:\n      - The function is an **iterator**\n      - If criteria is a list of type, the sort order for the type is the\n        list order. If it is a dictionnary, its keys are the parent types\n        and the values are list of types.\n      - Default value for criteria is CGNS.PAT.cgnskeywords.cgnstypes\n    """"""\n\n    def sortbytypesasincriteria(a, b):\n        if (a[0] in a[2]) and (b[0] in b[2]):\n            if a[2].index(a[0]) > b[2].index(b[0]):\n                return 1\n            if a[2].index(a[0]) < b[2].index(b[0]):\n                return -1\n        if a[1] > b[1]:\n            return 1\n        if a[1] < b[1]:\n            return -1\n        return 0\n\n    if criteria is None:\n        criteria = CK.cgnstypes\n    __criteria = []\n    if isinstance(criteria, list):\n        __criteria = criteria\n    if (isinstance(criteria, dict) and\n            (parent is not None) and\n            (parent[3] in criteria)):\n        __criteria = criteria[parent[3]]\n    r = []\n    for i, c in enumerate(node[2]):\n        r += [(c[3], c[0], __criteria, i)]\n    r.sort(key=cmp_to_key(sortbytypesasincriteria))\n    for i in r:\n        yield node[2][i[3]]\n\n\n# --------------------------------------------------\ndef getTypeByPath(tree, path):\n    """"""\n    Returns the CGNS type of a CGNS/Python node with the argument path::\n\n      import CGNS.PAT.cgnskeywords as CK\n\n      if (getTypeByPath(T,\'/Base/Zone01/ZoneBC/\')):\n          if (bc[3] == CK.BC_ts):\n              print \'BC found:\', bc[0]\n\n    :arg CGNS/Python tree: target tree to parse\n    :arg str path: absolute or relative path\n    :return:\n      - the CGNS/SIDS type (str)\n      - None if the path is not found\n    :remark:\n      - No wildcards allowed (see :py:func:`getPathsByTypeFilter`\n        and :py:func:`getPathsByNameFilter` )\n    """"""\n    n = getNodeByPath(tree, path)\n    if n is not None:\n        return n[3]\n    return None\n\n\n# --------------------------------------------------\ndef getPathByNameFilter(tree, filter):\n    return getPathsByNameFilter(tree, filter)\n\n\n# --------------------------------------------------\ndef getPathsByTokenFilter(tree, filter):\n    """"""\n    Returns a list of paths from T matching the filter. The filter is a\n    `regular expression <http://docs.python.org/library/re.html>`_\n    used to match at least one of the token of the path::\n\n     import CGNS.PAT.cgnskeywords as CK\n\n     for path in getPathsByTokenFilter(T,\'Family.*\'):\n         print \'Family \',path,\' is \',path[2]\n\n    :arg CGNS/Python tree: target tree to parse\n    :arg str filter: a regular expression for the token to match to\n    :return:\n      - A list of paths (strings) matching the path pattern\n      - Returns empty list if no match\n    :Remarks:\n      - You cannot use the regex to match for a path\n      - Always skips `CGNSTree_t`\n    """"""\n    lpth = getAllPaths(tree)\n    reg = re.compile(filter)\n    rpth = []\n    for p in lpth:\n        pl = getPathToList(p, True)\n        for tk in pl:\n            if reg.match(tk) is not None:\n                rpth.append(p)\n    return rpth\n\n\n# --------------------------------------------------\ndef getPathsByNameFilter(tree, filter):\n    """"""\n    Returns a list of paths from T matching the filter. The filter is a\n    `regular expression <http://docs.python.org/library/re.html>`_\n    used to match the path of **node names**::\n\n     import CGNS.PAT.cgnskeywords as CK\n\n     for path in getPathsByNameFilter(T,\'/Base[0-1]/domain\\..*/.*/.*/FamilyName\'):\n        print \'FamilyName \',path,\' is \',path[2]\n\n    :arg CGNS/Python tree: target tree to parse\n    :arg str filter: a regular expression for the complete path to match to\n    :return:\n      - A list of paths (strings) matching the path pattern\n      - Returns empty list if no match\n    :Remarks:\n      - The \'/\' is the separator for the path tokens, so you cannot use it\n        in the regular expression for any other purpose. Then you cannot match\n        any number of tokens in the filter, you must have the exact count of\n        \'/\' chars.\n      - Always skips `CGNSTree_t`\n    """"""\n    recmplist = []\n    restrlist = filter.split(\'/\')[1:]\n    for restr in restrlist:\n        recmplist.append(re.compile(restr))\n    lpth = getAllPaths(tree)\n    rpth = []\n    for p in lpth:\n        pl = getPathToList(p, True)\n        if len(pl) != len(recmplist):\n            continue\n        for n, pattern in enumerate(recmplist):\n            if pattern.match(pl[n]) is None:\n                break\n        else:\n            rpth.append(p)\n    return rpth\n\n\n# --------------------------------------------------\ndef getPathAsTemplate(sidslist, namelist, required=None, enclosed=False):\n    """"""\n    Return a list of CGNS/SIDS type or name (strings) by replacing in a path\n    all the user defined names by their CGNS/SIDS type. If the name is a\n    non-ambiguous SIDS name, it is kept as name (for example GridLocation and\n    GridLocation_t, ZoneBC_t and ZoneBC...).\n    The required list of boolean forces the name to be kept if True.\n    For example:\n\n      sidslist=[CGNSBase_t, Zone_t, ZoneBC_t, BC_t, GridLocation_t]\n      namelist=[Base#1, Zone#1, ZoneBC, BC#1, GridLocation]\n\n      returns=[CGNSBase_t, Zone_t, ZoneBC, BC_t, GridLocation]\n\n      # add a required list\n      required=[False, True, False, False, False]\n      returns=[CGNSBase_t, Zone#1, ZoneBC, BC_t, GridLocation]\n\n    This function is used for pattern storage/check.\n\n    Return [] in failure (should be an except).\n    """"""\n    if len(sidslist) != len(namelist):\n        return []\n    if not required:\n        required = [False] * len(namelist)\n\n    r = []\n    for idx, name in enumerate(namelist):\n        if required[idx]:\n            r += [name]\n        else:\n            sids = sidslist[idx]\n            e = CT.types[sids]\n            if enclosed:\n                sids = \'{%s}\' % sids\n            if CT.UD not in e.names:\n                if name in e.names:\n                    r += [name]\n                else:\n                    r += [sids]\n            else:\n                r += [sids]\n    return r\n\n\n# --------------------------------------------------\ndef getPathByTypeFilter(tree, filter):\n    return getPathsByTypeFilter(tree, filter)\n\n\n# --------------------------------------------------\ndef getPathsByTypeFilter(tree, filter):\n    """"""\n    Returns a list of paths from T matching the filter. The filter is a\n    `regular expression <http://docs.python.org/library/re.html>`_\n    used to match the path of **node types**::\n\n      # gets GridConnectivity_t and GridConnectivity1to1_t\n      allconnectivities=getPathsByTypeFilter(T,\'/.*/.*/.*/GridConnectivity.*\')\n\n    :arg node tree: the target tree to parse\n    :arg str filter: a regular expression for the complete path to match to\n\n    :Return:\n      - A list of paths (str) matching the types-path pattern\n      - Returns empty list if no match\n\n    :Remarks:\n      - The \'/\' is the separator for the path tokens, so you cannot use it\n       in the regular expression for any other purpose\n      - Always skips `CGNSTree_t`\n    """"""\n    recmplist = []\n    restrlist = filter.split(\'/\')[1:]\n    for restr in restrlist:\n        recmplist.append(re.compile(restr))\n    lpth = getAllPaths(tree)\n    rpth = []\n    for p in lpth:\n        pl = getPathAsTypes(tree, p)[1:]\n        if len(pl) != len(recmplist):\n            continue\n        for n, pattern in enumerate(recmplist):\n            if isinstance(pl[n], str) and (pattern.match(pl[n]) is None):\n                break\n        else:\n            rpth.append(p)\n    return rpth\n\n\n# --------------------------------------------------\ndef nodeByPath(path, tree):\n    if not checkPath(path):\n        return None\n    if path[0] == \'/\':\n        path = path[1:]\n    if tree[3] == CK.CGNSTree_ts:\n        n = getNodeFromPath(path.split(\'/\'), tree)\n    else:\n        n = getNodeFromPath(path.split(\'/\'), [None, None, [tree], None])\n    return n\n\n\n# --------------------------------------------------\ndef removeChildByName(parent, name):\n    """"""Remove the child from the parent node.\n\n    :arg CGNS/Python node parent: node where to find the child name\n    :arg str name: name of the child to delete (with all its sub-tree)\n    :return: None\n    :Remarks:\n      - node name to delete is a direct child of the parent node\n      - See also :py:func:`nodeDelete`\n    """"""\n    if not checkNode(parent):\n        return None\n    for n, node in enumerate(parent[2]):\n        if node[0] == name:\n            del parent[2][n]\n            return None\n    return None\n\n\n# --------------------------------------------------\ndef removeNodeFromPath(path, node):\n    target = getNodeFromPath(path, node)\n    if len(path) > 1:\n        father = getNodeFromPath(path[:-1], node)\n        father[2].remove(target)\n    else:\n        # Root node child\n        for c in node[2]:\n            if c[0] == path[0]:\n                node[2].remove(target)\n\n\n# --------------------------------------------------\ndef getNodeFromPath(path, node):\n    # Beware: this parse starts with children, not current node...\n    for c in node[2]:\n        if c[0] == path[0]:\n            if len(path) == 1:\n                return c\n            return getNodeFromPath(path[1:], c)\n    return None\n\n\n# --------------------------------------------------\ndef getParentFromNode(tree, node):\n    """"""\n    Returns the parent node of a node. If the node is root node, itself is\n    returned::\n\n      parent=getParentFromNode(T,node)\n\n    :arg CGNS/Python tree: target tree to parse\n    :arg CGNS/Python node: child node\n    :return:\n      - the parent node\n      - arg ``node`` itself if node is root\n    """"""\n    pn = getPathFromNode(tree, node)\n    pp = getPathAncestor(pn)\n    np = getNodeByPath(tree, pp)\n    return np\n\n\n# --------------------------------------------------\ndef getAncestorByType(tree, node, ptype):\n    """"""\n    Returns the parent node of a node which has the CGNS/SIDS type. If the node is root node, itself is\n    returned::\n\n      >>> import CGNS.PAT.cgnskeywords as CGK\n      >>> base = getAncestorByType(tree, node, CGK.CGNSBase_ts)\n\n    :arg CGNS/Python tree: target tree to parse\n    :arg CGNS/Python node: child node\n    :arg CGNS/SIDS ptype: required type of the parent\n    :return:\n      - the parent node with CGNS/SIDS type\n      - arg ``node`` itself if node is root\n      - None if CGNS/SIDS type not in parents node\n    """"""\n    pn = getPathFromNode(tree, node)\n    pln = getPathToList(pn)\n    ptn = getPathAsTypes(tree, pn, legacy=False)\n    try:\n        i = ptn.index(ptype)\n    except ValueError:\n        return None\n    if not checkRootNode(tree):\n        i += 1\n    pp = ""/"".join(pln[:i + 1])\n    np = getNodeByPath(tree, pp)\n    return np\n\n\n# --------------------------------------------------\ndef getPathFromRoot(tree, node):\n    """"""\n    Same as :py:func:`getPathFromNode` but takes into account the root\n    node name::\n\n      n=CGU.nodeCreate(\'Base\',numpy.array([3,3]),[],CGK.CGNSBase_ts)\n      r=CGU.nodeCreate(\'State\',None,[],CGK.ReferenceState_ts,parent=n)\n      d=CGU.nodeCreate(\'Data\',numpy.array([3.14]),[],CGK.DataArray_ts,parent=r)\n\n      CGU.getPathFromRoot(n,d)\n      # \'/Base/State/Data\'\n      CGU.getPathFromRoot(r,d)\n      # \'/Base/Data\'\n\n    :arg CGNS/Python tree: target tree to parse\n    :arg CGNS/Python node: target node\n    :return:\n      - the path of the node (str)\n    """"""\n    return getPathFromNode(tree, node, \'/\' + tree[0])\n\n\n# --------------------------------------------------\ndef getPathFromNode(tree, node, path=\'\'):\n    """"""\n    Returns the path from a node in a tree. The argument tree is parsed and\n    a path is built-up until the node is found. Then the **start node** name\n    is not taken into account. For example::\n\n      n=CGU.nodeCreate(\'Base\',numpy.array([3,3]),[],CGK.CGNSBase_ts)\n      r=CGU.nodeCreate(\'State\',None,[],CGK.ReferenceState_ts,parent=n)\n      d=CGU.nodeCreate(\'Data\',numpy.array([3.14]),[],CGK.DataArray_ts,parent=r)\n\n      CGU.getPathFromNode(n,d)\n      # \'/State/Data\'\n      CGU.getPathFromNode(r,d)\n      # \'/Data\'\n\n    In the case you want to add the name of the root node (**start node**) in\n    the path, you should use the ``path`` argument\n    (see also :py:func:`getPathFromRoot`)::\n\n      CGU.getPathFromNode(n,d,\'/\'+n[0])\n      # \'/Base/ReferenceState/Data\'\n\n    The functions behaves like this for historical reasons, the root of\n    a CGNS/Python tree is ``CGNSTree`` but is not CGNS/SIDS compliant. So the\n    path of a ``CGNSBase_t``, starting from the root node, is `/Base`\n    instead of the logically expected `/CGNSTree/CGNSBase`.\n\n    The node object is compared to the tree nodes, if you have multiple\n    references to the same node, the first found is used for the path::\n\n     # T is a compliant CGNS/Python tree\n     path=getPathFromNode(T,node)\n     getNodeByPath(T,getPathAncestor(path))\n\n    :arg CGNS/Python tree: target tree to parse\n    :arg CGNS/Python node: target node to find\n    :arg string path: name of the root node to add if desired\n    :return:\n      - path as string\n      - None if not found\n    :remark:\n      - see also :py:func:`getPathFromRoot`\n    """"""\n    if id(node) == id(tree):\n        return path\n    for c in tree[2]:\n        p = getPathFromNode(c, node, path + \'/\' + c[0])\n        if p:\n            return p\n    return None\n\n\n# --------------------------------------------------\ndef zipTypeOrNameList(tlist, nlist):\n    """"""\n    Mixes two lists for pattern search: the CGNS/SIDS type list and the\n    name list.\n\n    For example with two lists::\n\n     >>> for q in zipTypeOrNameList([1,2,3,4],[\'a\',\'b\',\'c\',\'d\']): print(q)\n     [1, 2, 3, 4]\n     [1, 2, 3, \'d\']\n     [1, 2, \'c\', 4]\n     [1, 2, \'c\', \'d\']\n     [1, \'b\', 3, 4]\n     [1, \'b\', 3, \'d\']\n     [1, \'b\', \'c\', 4]\n     [1, \'b\', \'c\', \'d\']\n     [\'a\', 2, 3, 4]\n     [\'a\', 2, 3, \'d\']\n     [\'a\', 2, \'c\', 4]\n     [\'a\', 2, \'c\', \'d\']\n     [\'a\', \'b\', 3, 4]\n     [\'a\', \'b\', 3, \'d\']\n     [\'a\', \'b\', \'c\', 4]\n     [\'a\', \'b\', \'c\', \'d\']\n\n    """"""\n    w = []\n    r = []\n    z = len(tlist)\n    for b in range(2 ** z):\n        w.append([int(x) for x in \'{0:0{width}{base}}\'.format(b, base=\'b\', width=z)])\n    for b in w:\n        h = []\n        for u, item in enumerate(b):\n            if item:\n                h.append(nlist[u])\n            else:\n                h.append(tlist[u])\n        r.append(h)\n    return r\n\n\n# --------------------------------------------------\ndef getAllNodesByTypeOrNameList(tree, typeornamelist):\n    return getPathsByTypeOrNameList(tree, typeornamelist)\n\n\n# --------------------------------------------------\ndef getPathsByTypeOrNameList(tree, typeornamelist):\n    """"""\n    Returns a list of paths from the argument tree with nodes matching\n    the list of types or names. The list you give is the list you would\n    have if you pick the node type or the node name during the parse::\n\n      tnlist=[\'CGNSTree_t\',\'Base#001\',\'Zone_t\']\n\n      for path in getPathsByTypeOrNameList(T,tnlist):\n          node=getNodeByPath(T,path)\n          # do something with node\n\n    Would return all the zones of the named base.\n    See also :py:func:`getPathsByTypeSet`\n    See also :py:func:`getPathsByTypeList`\n\n    :arg CGNS/Python tree: the start node of the CGNS tree to parse\n    :arg list typeornamelist: the (ordered) list of CGNS/SIDS types\n    :return: a list of strings, each string is the path to a matching node\n    :remarks:\n      - only plain strings allowed, no regular expression\n      - the first comparison is performed on name, then on type. If you have\n        a node name that matches a type, the node is included in the result.\n    """"""\n    if (tree[0] != typeornamelist[0]) and (tree[3] != typeornamelist[0]):\n        return []\n    if tree[3] == CK.CGNSTree_ts:\n        start = """"\n    else:\n        start = ""%s"" % tree[0]\n    n = getAllNodesFromTypeOrNameList(typeornamelist[1:], tree[2], start, [])\n    return n\n\n\n# --------------------------------------------------\ndef getAllParentTypePathsAux(ntype, path, plist):\n    tlist = CT.types[ntype].parents\n    for pt in tlist:\n        plist.append(path + \'/\' + pt)\n        getAllParentTypePathsAux(pt, path + \'/\' + pt, plist)\n\n\n# --------------------------------------------------\ndef getAllParentTypePaths(nodetype):\n    return getAuthParentTypePaths(nodetype)\n\n\n# --------------------------------------------------\ndef getAuthParentTypePaths(nodetype):\n    """"""\n    Return all type paths allowed by CGNS/SIDS for the node type.\n    For example, to check all possible places where you can set a\n    `FamilyName_t` you call `getAllParentTypePaths`, it returns you a list\n    of all types paths allowed by CGNS/SIDS.\n\n    :arg str nodetype: a CGNS/SIDS type as string\n    :return: a list of list of strings, each string is a CGNS/SIDS type path\n    :Remarks:\n      - You can loop on this list of list to feed input arguments for a call to\n        :py:func:`getPathsByTypeList` for example.\n      - See also :py:func:`getPathAsTypes`\n\n    """"""\n    r = []\n    p = \'\'\n    l = []\n    getAllParentTypePathsAux(nodetype, p, r)\n    for tp in r:\n        s = tp.split(\'/\')\n        if s[-1] == CK.CGNSTree_ts:\n            s.reverse()\n            s[-1] = nodetype\n            l.append(s)\n    return l\n\n\n# --------------------------------------------------\ndef getAllNodesFromTypeOrNameList(tnlist, node, path, result):\n    if not tnlist:\n        return result\n    for c in node:\n        if (c[0] == tnlist[0]) or (c[3] == tnlist[0]):\n            if len(tnlist) == 1:\n                result.append(""%s/%s"" % (path, c[0]))\n            else:\n                getAllNodesFromTypeOrNameList(tnlist[1:],\n                                              c[2], ""%s/%s"" % (path, c[0]), result)\n    return result\n\n\n# --------------------------------------------------\ndef getAllNodesByTypeList(tree, typelist):\n    return getPathsByTypeList(tree, typelist)\n\n\n# --------------------------------------------------\ndef getPathsByTypeList(tree, typelist):\n    """"""\n    Returns a list of paths from the argument tree with nodes matching\n    the list of types. The list you give is the list you would have if you\n    pick the node type during the parse::\n\n      tlist=[\'CGNSTree_t\',\'CGNSBase_t\',\'Zone_t\']\n\n      for path in getPathsByTypeList(T,tlist):\n         node=getNodeByPath(T,path)\n         # do something with node\n\n    Would return all the zones of your tree.\n    See also :py:func:`getPathsByTypeSet`\n\n    :arg CGNS/Python tree: the start node of the CGNS tree to parse\n    :arg list typelist: the (ordered) list of types\n    :return:\n      - a list of strings, each string is the path to a matching node\n    """"""\n    if tree[3] != typelist[0]:\n        return []\n    if tree[3] == CK.CGNSTree_ts:\n        start = """"\n    else:\n        start = ""%s"" % tree[0]\n    n = getAllNodesFromTypeList(typelist[1:], tree[2], start, [])\n    return n\n\n\n# --------------------------------------------------\ndef getAllNodesFromTypeList(typelist, node, path, result):\n    for c in node:\n        if c[3] == typelist[0]:\n            if len(typelist) == 1:\n                result.append(""%s/%s"" % (path, c[0]))\n            else:\n                getAllNodesFromTypeList(typelist[1:], c[2], ""%s/%s"" % (path, c[0]), result)\n    return result\n\n\n# --------------------------------------------------\ndef stackPath(path, *items):\n    return stackPathItem(path, *items)\n\n\n# --------------------------------------------------\ndef stackPathItem(path, *items):\n    """"""\n    Add the items to the path::\n\n      p=\'/base\'\n      p1=stackPathItem(p,\'Zone\',\'FlowSolution\')\n      p2=stackPathItem(p,\'ReferenceState\')\n\n    :arg str path: original path\n    :arg *str items: tuple of strings to be de-referenced\n    :return: a new path with concatenation of items as path tokens\n    """"""\n    pth = path\n    for tk in items:\n        pth += \'/\' + tk\n    return getPathNormalize(pth)\n\n\n# --------------------------------------------------\ndef getPaths(tree, path, plist):\n    for c in tree[2]:\n        if (len(c) > 1) and isinstance(c[0], str):\n            plist.append(path + \'/\' + c[0])\n            getPaths(c, path + \'/\' + c[0], plist)\n\n\n# --------------------------------------------------\ndef getAllPaths(tree):\n    plist = []\n    path = \'\'\n    getPaths(tree, path, plist)\n    plist.sort()\n    return plist\n\n\n# def wsort(a, b):\n#     if a[0] < b[0]:\n#         return -1\n#     if a[0] > b[0]:\n#         return 1\n#     if a[1] < b[1]:\n#         return -1\n#     if a[1] > b[1]:\n#         return 1\n#     return 0\n\n\n# --------------------------------------------------\ndef getPathFullTree(tree, width=False):\n    return getPathsFullTree(tree, width)\n\n\n# --------------------------------------------------\ndef getPathsFullTree(tree, width=False, raw=False):\n    """"""\n    Returns the list of all possible node paths of a CGNS/Python tree::\n\n      for path in getPathsFullTree(T):\n          print path\n\n    :arg CGNS/Python tree: target tree to parse\n    :arb bool width: ``True`` for width sorting (default is ``False``)\n    :arb bool raw: ``True`` to add top node (default is ``False``)\n    :return:\n      - A list of strings, each is a path\n      - Empty list if tree is empty or invalid\n    :Remarks:\n      - The top node is ignored (usually /CGNSTree) unless you set ``raw``\n      - When sorting with **width** the paths are listed as width-first parse\n      - See also :py:func:`getPathListAsWidthFirstIndex`\n    """"""\n    if raw:\n        tree = [None, None, [tree], None]\n    r = getAllPaths(tree)\n    if width:\n        r.sort(key=lambda p: (p.count(\'/\'), p))\n    return r\n\n\n# --------------------------------------------------\ndef checkPath(path, dienow=False):\n    """"""\n    Checks the compliance of a path, which is basically a UNIX-like\n    path with constraints on each node name::\n\n      checkPath(\'/Base/Zone/ZoneBC\')\n\n    :arg str path: path to check\n    :return: ``True`` if the path is ok, ``False`` if a problem is found\n\n    """"""\n    if not isinstance(path, str) or not path:\n        return False\n    if path[0] == \'/\':\n        path = path[1:]\n    for p in path.split(\'/\'):\n        if not checkName(p, dienow):\n            return False\n    return True\n\n\n# --------------------------------------------------\ndef hasSameRootPath(pathroot, pathtocompare):\n    """"""\n    Compares two paths::\n\n      hasSameRootPath(\'/Base/Zone/ZoneBC\',\'/Base/Zone/ZoneBC/BC#2/Data\')\n      # True\n      hasSameRootPath(\'/Base/Zone/ZoneBC\',\'/Base/ZoneBC#2\')\n      # False\n\n    :arg str pathroot: root path to compare\n    :arg str pathtocompare: path which is supposed to have rootpath as substring\n    :return: True if \'rootpath\' is a prefix of \'pathtocompare\'\n    :Remark:\n      - Each node name is a token, see example below: the second example\n        doesn\'t match as a path while it matches as a string.\n    """"""\n    l1 = getPathToList(pathroot)\n    l2 = getPathToList(pathtocompare)\n    if len(l1) > len(l2):\n        return False\n    for item1, item2 in zip(l1, l2):\n        if item1 != item2:\n            break\n    else:\n        return True\n    return False\n\n\n# --------------------------------------------------\ndef getPathListCommonAncestor(pathlist):\n    """"""\n    Finds the common ancestor for all paths in list::\n\n      p=[\'/Base/Zone/Data-A\',\'/Base/Zone/Data-D\',\'/Base/Zone/ZoneBC/BC1\']\n      print getPathListCommonAncestor(p)\n      # \'/Base/Zone\'\n\n    :args list pathlist: list of path strings\n    :return: The common root path (at least \'/\')\n    """"""\n    if len(pathlist) == 0:\n        return \'/\'\n    if len(pathlist) == 1:\n        return pathlist[0]\n    lp = []\n    for p in pathlist:\n        if p == \'/\':\n            return \'/\'\n        lp.append(getPathToList(p, True))\n    t = lp[0]\n    for p in lp:\n        n = 0\n        r = t\n        m = min(len(p), len(r))\n        for n in range(m):\n            if p[n] != r[n]:\n                t = r[:n]\n                break\n        else:\n            t = r[:n + 1]\n    if t:\n        t = [\'\'] + t\n        c = \'/\'.join(t)\n    else:\n        c = \'/\'\n    return c\n\n\n# --------------------------------------------------\ndef getPathToList(path, nofirst=False, noroot=True):\n    """"""\n    Return the path as a list of node names::\n\n      print getPathToList(\'/Base/Zone/ZoneBC\')\n      # [\'\',\'Base\',\'Zone\',\'ZoneBC\']\n      print getPathToList(\'/Base/Zone/ZoneBC\',True)\n      # [\'Base\',\'Zone\',\'ZoneBC\']\n      print getPathToList(\'/\')\n      # []\n\n    :arg str path: path string to split\n    :arg bool nofirst: removes first empty string for absolute paths (default: False)\n    :arg bool noroot: If true then removes the CGNS/HDF5 root if found (default: True)\n    :return:\n      - The list of path elements as strings\n      - with \'/\' as argument, the function returns an empty list\n    :Remarks:\n      - The path is processed by :py:func:`getPathNormalize` before its split\n    """"""\n    lp = []\n    if path is None:\n        return []\n    if len(path) > 0:\n        path = getPathNormalize(path)\n        if noroot:\n            path = getPathNoRoot(path)\n        if nofirst and (path[0] == \'/\'):\n            path = path[1:]\n        if path not in [\'/\', \'\']:\n            lp = path.split(\'/\')\n    return lp\n\n\n# --------------------------------------------------\ndef getPathAncestor(path, level=1, noroot=True):\n    """"""\n    Return the path of the node parent of the argument node path::\n\n      print getPathAncestor(\'/Base/Zone/ZoneBC\')\n      # \'/Base/Zone\'\n\n    :arg str path: string of the child node\n    :arg int level: number of levels back from the child (default: 1 means the father of the node)\n    :return:\n      - The ancestor path\n      - If the path is \'/\' its ancestor is None.\n    """"""\n    lp = getPathToList(path, noroot=noroot)\n    if (len(lp) == 2) and (lp[0] == \'\'):\n        ancestor = \'/\'\n    elif len(lp) > 1:\n        ancestor = \'/\'.join(lp[:-1])\n    elif len(lp) == 1:\n        ancestor = \'/\'\n    else:\n        ancestor = None\n    if level == 0:\n        ancestor = path\n    if level > 1:\n        ancestor = getPathAncestor(ancestor, level - 1)\n    return ancestor\n\n\n# --------------------------------------------------\ndef getDepth(path):\n    return len(getPathToList(path, True))\n\n\n# --------------------------------------------------\ndef getPathLeaf(path):\n    """"""\n    Return the leaf node name of the path::\n\n      print getPathLeaf(\'/Base/Zone/ZoneBC\')\n      # \'ZoneBC\'\n\n    :arg str path: a CGNS/Python path\n    :return:\n      - The leaf node name (the last token of the path)\n      - If the path is \'/\' the function returns \'\' (empty string)\n\n    """"""\n    leaf = \'\'\n    lp = getPathToList(path)\n    if len(lp) > 0:\n        leaf = lp[-1]\n    return leaf\n\n\n# --------------------------------------------------\ndef getPathNoRoot(path):\n    """"""\n    Return an absolute path without the implementation nodes \'HDF5 Mother node\'\n    or \'CGNSTree\' if detected as first element::\n\n      print getPathNoRoot(\'/HDF5 Mother Node/Base/Zone/ZoneBC\')\n      # [\'Base\',\'Zone\',\'ZoneBC\']\n\n    :arg str path: the path of the node\n    :return: The new path without root implementation node if found\n    :Remarks:\n      - a \'/\' is expected as first char, it is forced if not found\n      - The path is processed by :py:func:`getPathNormalize`\n      - Implementation root can be CGNS.PAT.cgnskeywords.CGNSHDF5ROOT_s as\n        well as CGNS.PAT.cgnskeywords.CGNSTree_s\n    """"""\n    path = getPathNormalize(path)\n    if path in [None, """", ""."", \'/\', ""/"" + CK.CGNSHDF5ROOT_s, ""/"" + CK.CGNSTree_s]:\n        return ""/""\n    if path[0] != \'/\':\n        path = \'/\' + path\n    lp = path.split(\'/\')\n    if lp[0] in [CK.CGNSHDF5ROOT_s, CK.CGNSTree_s]:\n        lp = lp[1:]\n    if ((lp[0] == \'\') and\n            (len(lp) > 1) and\n            (lp[1] in [CK.CGNSHDF5ROOT_s, CK.CGNSTree_s])):\n        lp = [lp[0]] + lp[2:]\n    path = \'/\'.join(lp)\n    if (path == \'\') or (path[0] != \'/\'):\n        path = \'/\' + path\n    return path\n\n\n# --------------------------------------------------\ndef getPathAsTypes(tree, path, legacy=True):\n    """"""Return the list of types corresponding to the argument path in the tree::\n\n      getPathAsTypes(T,\'/Base/Zone/ZoneBC\')\n      # [\'CGNSBase_t\',\'Zone_t\',\'ZoneBC_t\']\n\n    :arg CGNS/Python tree: target tree\n    :arg str path: path to parse get\n    :return:\n      - The list of CGNS/SIDS types found (as strings)\n      - `None` if the path is not found\n    """"""\n    ltypes = []\n    if checkRootNode(tree, legacy=False):\n        p = getPathToList(path, noroot=False, nofirst=True)\n        if p and (p[0] != CK.CGNSTree_s):\n            path = \'/\' + CK.CGNSTree_s + \'/\' + path\n            legacy = False\n    path = getPathNormalize(path)\n    while path not in [\'/\', None]:\n        t = getTypeByPath(tree, path)\n        ltypes += [t]\n        path = getPathAncestor(path, noroot=False)\n    if legacy and (len(ltypes) > 0):\n        ltypes = ltypes[:-1]\n    ltypes.reverse()\n    return ltypes\n\n\n# --------------------------------------------------\ndef getPathNormalize(path):\n    """"""Return the same path as minimal string, removes `////` and `/./` and\n    other simplifiable UNIX-like path elements::\n\n        # a checkPath here would fail, because single or double dots are not\n        # allowed as a node name. But actually this is allowed as a\n        # path description\n        p=getPathNormalize(\'///Base/././//Zone/../Zone/./ZoneBC//.\')\n\n        # would return \'/Base/Zone/ZoneBC\'\n        if (not checkPath(p)):\n            print \'something bad happens\'\n\n    :arg str path: the path of the node\n    :return: The simplified path\n    :Remarks:\n      - Uses *os.path.normpath* and replaces \\\\ if windows os.path\n      - Before its normalization a path can be **non-compliant**\n    """"""\n    if path == \'\':\n        return \'\'\n    if path is None:\n        return \'/\'\n    first = ((len(path) > 0) and (path[0] == \'/\'))\n    result_tokens = []\n    tokens = path.split(\'/\')\n    for token in tokens:\n        if token in [\'\', \'.\']:\n            continue\n        if result_tokens and (token == \'..\'):\n            result_tokens.pop()\n        else:\n            result_tokens.append(token)\n    path = \'/\'.join(result_tokens)\n    if first:\n        path = \'/\' + path\n    if path == \'\':\n        path = \'.\'\n    return path\n\n\n# --------------------------------------------------\ndef childNames(node):\n    return childrenNames(node)\n\n\ndef childrenNames(node):\n    """"""Gets the children names as a list of strings::\n\n      for c in childrenNames(node):\n          print \'%s/%s\'%(node[0],c)\n\n    :arg CGNS/Python node: the parent node\n    :return: List of children names (str)\n    """"""\n    r = []\n    if node is None:\n        return r\n    for c in node[2]:\n        r.append(c[0])\n    return r\n\n\n# --------------------------------------------------\ndef getAllNodesByTypeSet2(typelist, tree):\n    if tree[3] == CK.CGNSTree_ts:\n        start = ""/%s"" % tree[0]\n    else:\n        start = ""%s"" % tree[0]\n    n = getAllNodesFromTypeSet(typelist, tree[2], start, [])\n    return n\n\n\n# --------------------------------------------------\ndef getAllNodesByTypeSet(tree, typeset):\n    return getPathsByTypeSet(tree, typeset)\n\n\n# --------------------------------------------------\ndef getPathsByNameSet(tree, nameset):\n    """"""\n    Returns a list of paths from the argument tree with nodes matching\n    one of the names in the list::\n\n      #  Would return all the nodes with names *BCWall* or  *BCExt*\n      tset=[\'BCWall\',\'BCExt\']\n\n      for path in getPathsByNameSet(T,tset):\n          node=getNodeByPath(T,path)\n          # do something\n\n    :arg CGNS/Python tree: start node of the CGNS tree to parse\n    :arg list nameset: the list of names\n    :return: a list of strings, each string is the path to a matching node\n    :Remarks: See also :py:func:`getPathsByTypeSet`\n\n    """"""\n    if tree[3] == CK.CGNSTree_ts:\n        start = """"\n    else:\n        start = ""%s"" % tree[0]\n    n = getAllNodesFromNameSet(nameset, tree[2], start, [])\n    return n\n\n\n# --------------------------------------------------\ndef getPathsByTypeSet(tree, typeset):\n    """"""\n    Returns a list of paths from the argument tree with nodes matching\n    one of the types in the list::\n\n      #  Would return all the zones and BCs of your tree.\n      tset=[\'BC_t\',\'Zone_t\']\n\n      for path in getPathsByTypeSet(T,tset):\n          node=getNodeByPath(T,path)\n          # do something\n\n    :arg CGNS/Python tree: start node of the CGNS tree to parse\n    :arg list typeset: the list of CGNS/SIDS types as strings\n    :return: a list of strings, each string is the path to a matching node\n    :Remarks: See also :py:func:`getPathsByTypeList`\n\n    """"""\n    if tree[3] == CK.CGNSTree_ts:\n        start = """"\n    else:\n        start = ""%s"" % tree[0]\n    n = getAllNodesFromTypeSet(typeset, tree[2], start, [])\n    return n\n\n\n# --------------------------------------------------\ndef getPathListAsWidthFirstIndex(paths, fileindex=1):\n    """"""\n    The order of the paths for a given depth is the alphabetical order of\n    the full path to the node. The width parse goes through all the children\n    of a given depth, for all parents.\n\n    For example, you want to loop on a list of nodes you retrieved from\n    another function call. You want to make sure that your loop actually\n    follows a width-first constraint for parse purpose. You first call\n    `getPathListAsWidthFirstIndex` to get the list in the right order.\n\n    As the returned value also contains the index of the path, you can perform\n    you simple loop by getting only the path::\n\n      listpath=someFonctionReturnsPathList( ... )\n      sortedlistpath=[s[2] for s in getPathListAsWidthFirstIndex(lispath)]\n\n    :arg list paths: list of paths to order\n    :arg int fileindex: index of the current ""file"" (default is 1)\n    :return: ordered list with the pattern [ [<int:file-index>, <int:child-index>, <string:path>] ... ]\n    :Remarks:\n      - Children index goes from 0 to N-1\n    """"""\n    dpth = {}\n    for p in paths:\n        d = len(p.split(\'/\'))\n        if d not in dpth:\n            dpth[d] = []\n        dpth[d].append(p)\n    for d in dpth:\n        dpth[d].sort()\n    k = list(dpth)\n    k.sort()\n    count = 0\n    ix = []\n    for d in k:\n        for p in dpth[d]:\n            ix.append([fileindex, count, p])\n            count += 1\n    return ix\n\n\n# --------------------------------------------------\ndef getAllNodesAsWidthFirstIndex(tree, fileindex=1):\n    lpth = getAllPaths(tree)\n    return getPathListAsWidthFirstIndex(lpth)\n\n\n# --------------------------------------------------\ndef getAllNodesFromNameSet(namelist, node, path, result):\n    for c in node:\n        if c[0] in namelist:\n            result.append(""%s/%s"" % (path, c[0]))\n        getAllNodesFromNameSet(namelist, c[2], ""%s/%s"" % (path, c[0]), result)\n    return result\n\n\n# --------------------------------------------------\ndef getAllNodesFromTypeSet(typelist, node, path, result):\n    for c in node:\n        if c[3] in typelist:\n            result.append(""%s/%s"" % (path, c[0]))\n        getAllNodesFromTypeSet(typelist, c[2], ""%s/%s"" % (path, c[0]), result)\n    return result\n\n\n# --------------------------------------------------\ndef getNodeAllowedChildrenTypes(pnode, node):\n    """"""\n    Returns all allowed CGNS-types for the node. The parent is mandatory::\n       if (node[2] not in getNodeAllowedChildrenTypes(parent,node)):\n           print \'Such a child is not SIDS compliant\'\n    :arg CGNS/Python pnode: parent node of second argument\n    :arg CGNS/Python node: target node\n    :return: A list of CGNS/SIDS types (strings)\n    :Remarks:\n      - The parent node is mandatory, many CGNS/SIDS types are allowed in many\n        places and the only way to check their compliance is to have their\n        father node.\n    """"""\n    tlist = []\n    if node[3] == CK.CGNSTree_ts:\n        return tlist\n    try:\n        if (node[3] is None) or (pnode is None):\n            ctl = CT.types[CK.CGNSTree_ts]\n        else:\n            ctl = CT.types[pnode[3]]\n        for cn in ctl.children:\n            if cn[0] not in tlist:\n                tlist += [cn[0]]\n    except:\n        pass\n    return tlist\n\n\n# --------------------------------------------------\ndef getNodeAllowedDataTypes(node):\n    """"""Returns a list of string with all allowed CGNS data types for the node::\n         node=[\'ReferenceState\',numpy.array((1,2,3)),[],\'ReferenceState_t\']\n         if (getValueDataType(node) not in getNodeAllowedDataTypes(node)):\n              print \'Node %s has bad value type\'%(node[0])\n    :arg CGNS/Python node: target node\n    :return:\n      - A list of CGNS/SIDS value data types (strings)\n      - see also :py:func:`getValueDataType`\n    """"""\n    tlist = []\n    try:\n        tlist = CT.types[node[3]].datatype\n    except:\n        pass\n    return tlist\n\n\n# --------------------------------------------------\ndef getAllFamilies(tree):\n    """"""Return all the Family_t of the tree (all CGNSBases)""""""\n    fpth = [CK.CGNSTree_ts, CK.CGNSBase_ts, CK.Family_ts]\n    famlist = getAllNodesByTypeOrNameList(tree, fpth)\n    return [getPathLeaf(f) for f in famlist]\n\n\n# --------------------------------------------------\ndef getZoneFromFamily(tree, families, additional=True):\n    """"""Return the Zone paths for all Zones having the target families as\n    FamilyName_t or AdditionalFamilyName_t.\n\n    :arg CGNS/Python tree: target tree to parse\n    :arg list str families: list of family names to look for\n    :arg boolean additional: also looks for AdditionalFamilyName_t (default True)\n    :return: list of Zone paths\n    """"""\n    fpth1 = [CK.CGNSTree_ts, CK.CGNSBase_ts, CK.Zone_ts, CK.FamilyName_ts]\n    fpth2 = [CK.CGNSTree_ts, CK.CGNSBase_ts, CK.Zone_ts, CK.AdditionalFamilyName_ts]\n    zlist = getAllNodesByTypeOrNameList(tree, fpth1)\n    if additional:\n        zlist += getAllNodesByTypeOrNameList(tree, fpth2)\n    r = []\n    for pth in zlist:\n        if getValueByPath(tree, pth).toString() in families:\n            r += [getPathAncestor(pth)]\n    return r\n\n\n# --------------------------------------------------\ndef getBCFromFamily(tree, families, additional=True):\n    """"""Return the BC paths for all BCs having the target families as\n    FamilyName_t or AdditionalFamilyName_t.\n\n    :arg CGNS/Python tree: target tree to parse\n    :arg list str families: list of family names to look for\n    :arg boolean additional: also looks for AdditionalFamilyName_t (default True)\n    :return: list of BC paths\n    """"""\n    fpth0 = [CK.CGNSTree_ts, CK.CGNSBase_ts, CK.Zone_ts, CK.ZoneBC_ts, CK.BC_ts]\n    fpth1 = fpth0 + [CK.FamilyName_ts]\n    fpth2 = fpth0 + [CK.AdditionalFamilyName_ts]\n    zlist = getAllNodesByTypeOrNameList(tree, fpth1)\n    if additional:\n        zlist += getAllNodesByTypeOrNameList(tree, fpth2)\n    r = []\n    for pth in zlist:\n        if getValueByPath(tree, pth).tostring().decode(\'ascii\') in families:\n            r += [getPathAncestor(pth)]\n    return r\n\n\n# --------------------------------------------------\ndef getZoneSubRegionFromFamily(tree, families, additional=True):\n    """"""Return the ZoneSubRegion paths for all having the target families as\n    FamilyName_t or AdditionalFamilyName_t.\n\n    :arg CGNS/Python tree: target tree to parse\n    :arg list str families: list of family names to look for\n    :arg boolean additional: also looks for AdditionalFamilyName_t (default True)\n    :return: list of ZoneSubRegion paths\n    """"""\n    fpth0 = [CK.CGNSTree_ts, CK.CGNSBase_ts, CK.Zone_ts, CK.ZoneBC_ts,\n             CK.ZoneSubRegion_ts]\n    fpth1 = fpth0 + [CK.FamilyName_ts]\n    fpth2 = fpth0 + [CK.AdditionalFamilyName_ts]\n    zlist = getAllNodesByTypeOrNameList(tree, fpth1)\n    if additional:\n        zlist += getAllNodesByTypeOrNameList(tree, fpth2)\n    r = []\n    for pth in zlist:\n        if getValueByPath(tree, pth).tostring().decode(\'ascii\') in families:\n            r += [getPathAncestor(pth)]\n    return r\n\n\n# --------------------------------------------------\ndef getFamiliesFromZone(tree, zonepath):\n    """"""Return all the Zone\'s FamilyName_t or AdditionalFamilyName_t.\n\n    :arg CGNS/Python tree: target tree to parse\n    :arg str zonepath: target zone\n    :return: list of family names\n    """"""\n    return getFamiliesFromBC(tree, zonepath)\n\n\n# --------------------------------------------------\ndef getFamiliesFromBC(tree, path):\n    """"""Return all the BC\'s FamilyName_t or AdditionalFamilyName_t.\n\n    :arg CGNS/Python tree: target tree to parse\n    :arg str path: target path\n    :return: list of family names\n    """"""\n    node = getNodeByPath(tree, path)\n    l1 = hasChildType(node, CK.FamilyName_ts)\n    l2 = hasChildType(node, CK.AdditionalFamilyName_ts)\n    if l1 is None:\n        l1 = []\n    if l2 is None:\n        l2 = []\n    r = []\n    for nd in l1 + l2:\n        r.append(nd[1].tostring().decode(\'ascii\'))\n    return r\n\n\n# --------------------------------------------------\ndef getFamiliesFromZoneSubRegion(tree, zonepath):\n    """"""Return all the ZoneSubRegion\'s FamilyName_t or AdditionalFamilyName_t.\n\n    :arg CGNS/Python tree: target tree to parse\n    :arg str zonepath: target zone\n    :return: list of family names\n    """"""\n    return getFamiliesFromBC(tree, zonepath)\n\n\n# -----------------------------------------------------------------------------\ndef hasChildType(parent, ntype):\n    """"""Checks if the parent node has a child with given type::\n\n       node=getNodeByPath(T,\'/Base/Zone/BC\')\n       nl=hasChildType(node, \'AdditionalFamily_t\')\n       for n in nl:\n         v=getValue(n)\n\n    :arg CGNS/Python parent: target node\n    :arg str ntype: CGNS/SIDS node type to look for\n    :return: List of nodes with this type (can be empty)\n\n    """"""\n    if not parent:\n        return []\n    r = []\n    for n in parent[2]:\n        if n[3] == ntype:\n            r.append(n)\n    if r:\n        return r\n    return []\n\n\n# -----------------------------------------------------------------------------\ndef getEnumAsString(node):\n    """"""\n    Return the node value as corresponding SIDS enumerate string::\n        if (hasEnumValue(node)):\n            print getEnumAsString(node)\n\n    The enumerate value is the <node-value>.flat[0] that is supposed to be an\n    integer.\n\n    :arg CGNS/Python node: target node\n    :return: A string corresponding to the SIDS enumerate value\n    :Remarks:\n      - returns empty string if something wrong happens\n      - See also :py:func:`hasEnumValue`\n    """"""\n    try:\n        stp = node[3]\n        if stp == CK.Elements_ts:\n            stp = CK.ElementType_ts\n        e = CK.cgnsenums[stp]\n        v = e[node[1].flat[0]]\n        return v\n    except:\n        return \'\'\n\n\n# -----------------------------------------------------------------------------\ndef hasEnumValue(node):\n    """"""\n    Checks if the node type allows a SIDS enum value::\n        if (hasEnumValue(node)):\n            print getEnumAsString(node)\n    :arg CGNS/Python node: target node\n    :return: True if the node value is a SIDS enumerate\n    :Remarks:\n      - See also :py:func:`getEnumAsString`\n    """"""\n    stp = node[3]\n    if stp == CK.Elements_ts:\n        stp = CK.ElementType_ts\n    if stp in CK.cgnsenums:\n        return True\n    return False\n\n\n# -----------------------------------------------------------------------------\ndef hasChildName(parent, name, dienow=False):\n    """"""\n    Finds a child with a target name. Returns the node.\n    """"""\n    return hasChildNode(parent, name, dienow)\n\n\n# -----------------------------------------------------------------------------\ndef setChildName(parent, oldname, newname, dienow=False):\n    """"""\n    Changes the name of an existing node::\n\n        n=hasChildNode(zone,CGK.ZoneType_s)\n        for nc in childrenNames\n            nc=setChildName(parent,zonename,zonename+\'#01\')\n\n    :arg CGNS/Python parent: the parent node\n    :arg str oldname: the child name to look for\n    :arg str newname: the new name\n    :return:\n      - parent node\n    :Remarks:\n      - uses :py:func:`hasChildName` to check if old name exists and new name\n        does not.\n    """"""\n    n1 = hasChildName(parent, oldname)\n    n2 = hasChildName(parent, newname)\n    if n1 and not n2:\n        n1[0] = newname\n    return parent\n\n\n# -----------------------------------------------------------------------------\ndef hasChildNode(parent, name, dienow=False):\n    """"""\n    Returns a child node if it exists::\n\n      n=hasChildNode(zone,CGK.ZoneType_s)\n      if ((n is not None) and (stringValueMatches(n,CGK.Unstructured_s)):\n          # found unstructured zone\n\n    :arg CGNS/Python parent: the parent node\n    :arg str name: the child name to look for\n    :return:\n      - the actual child node if the child exists\n      - None if the child is not found\n    :raises: :ref:`cgnsnameerror` code 102 if `dienow` is True\n    """"""\n    if not parent:\n        return None\n    if parent[2] is None:\n        return None\n    for nc in parent[2]:\n        if nc[0] == name:\n            if dienow:\n                raise CE.cgnsNameError(102, (name, parent[0]))\n            return nc\n    return None\n\n\n# --------------------------------------------------\ndef getTypeAsGrammarToken(ntype):\n    if ntype in CK.weirdSIDStypes:\n        return CK.weirdSIDStypes[ntype]\n    return ntype\n\n\n# --------------------------------------------------\ndef hasChildNodeOfType(node, ntype):\n    if node is None:\n        return 0\n    for cn in node[2]:\n        if cn[3] == ntype:\n            return 1\n    return 0\n\n\n# --------------------------------------------------\ndef stringMatches(string, reval):\n    """"""Returns re.group if the pattern matches the string, None otherwise""""""\n    return re.match(reval, string)\n\n\n# --------------------------------------------------\ndef stringNameMatches(node, reval):\n    """"""Returns re.group if the pattern matches the node name, None otherwise""""""\n    return stringMatches(node[0], reval)\n\n\n# --------------------------------------------------\ndef stringTypeMatches(node, reval):\n    """"""Returns re.group if the pattern matches the node type, None otherwise""""""\n    return stringMatches(node[3], reval)\n\n\n# --------------------------------------------------\ndef stringValueMatches(node, reval):\n    """"""True if the string matches the node value""""""\n    if node is None:\n        return False\n    if node[1] is None:\n        return False\n    if getNodeType(node) != CK.C1:\n        return False\n    if isinstance(node[1], str):\n        vn = node[1]\n    elif isinstance(node[1], numpy.ndarray) and (node[1].dtype.kind in [\'S\', \'a\']):\n        vn = node[1].tostring().decode(\'ascii\', \'strict\')\n    else:\n        return False\n    if stringMatches(vn, reval) is not None:\n        return True\n    return False\n\n\n# --------------------------------------------------\ndef stringValueInList(node, listval):\n    """"""True if the value list contains the node value""""""\n    if node is None:\n        return False\n    if node[1] is None:\n        return False\n    if getNodeType(node) != CK.C1:\n        return False\n\n    if isinstance(node[1], str):\n        vn = node[1]\n    elif isinstance(node[1], numpy.ndarray) and (node[1].dtype.kind in [\'S\', \'s\']):\n        vn = node[1].tostring().decode(\'ascii\', \'strict\')\n    else:\n        return False\n    return vn in listval\n\n\n# --------------------------------------------------\ndef isLinkNode(tree, links, node):\n    # """"""Returns True if the node is a linked node""""""\n    pass\n\n\n# --------------------------------------------------\ndef checkLinkFile(lkfile, lksearch=None):\n    """"""Checks if the file exists""""""\n    found = (None, None)\n    if not lksearch:\n        lksearch = [\'\']  # None, []\n    for spath in lksearch:\n        sfile = op.normpath(spath + \'/\' + lkfile)\n        if op.exists(sfile):\n            found = (op.normpath(spath), op.normpath(lkfile))\n            break\n    return found\n\n\n# --------------------------------------------------\ndef copyArray(a):\n    """"""Copy a numpy.ndarray with flags""""""\n    if not isinstance(a, numpy.ndarray):\n        return None  # None, []\n    if numpy.isfortran(a):\n        b = numpy.array(a, order=\'Fortran\', copy=True)\n    else:\n        b = numpy.array(a, copy=True)\n    return b\n\n\n# --------------------------------------------------\ndef getChildren(t):\n    s = set([c[0] for c in t[2]])\n    cl = {}\n    for c in t[2]:\n        cl[c[0]] = c\n    return s, cl\n\n\n# --------------------------------------------------\n# should merge with checkSameValue that returns True/False\n#\ndef compareValues(na, nb):\n    va = na[1]\n    vb = nb[1]\n    eps = 1e-12\n    if va is None and vb is not None:\n        return 1\n    if va is not None and vb is None:\n        return 2\n    if va is None and vb is None:\n        return 0\n    if (not isinstance(va, numpy.ndarray) or\n            not isinstance(vb, numpy.ndarray)):\n        return 0\n    if va.dtype.char != vb.dtype.char:\n        return 3\n    if va.size != vb.size:\n        return 4\n    if va.shape != vb.shape:\n        return 5\n    if va.dtype.char not in [\'c\', \'S\']:\n        vd = numpy.array(numpy.abs(va - vb))\n        if numpy.any(vd > eps):\n            return 6\n    elif va.ravel().tostring() != vb.ravel().tostring():\n        return 7\n    return 0\n\n\n# --------------------------------------------------\ndef diff(ta, tb, path=\'\', tag=\'A\', diag=None, trace=False):\n    if diag is None:\n        diag = {}\n    diag[path] = []\n    if ta[3] != tb[3]:\n        diag[path].append((\'CT\',))\n        if trace:\n            print(\'CT %s %s\' % (tag, path))\n    dta = getValueDataType(ta)\n    dtb = getValueDataType(tb)\n    # dta = CGNS.PAT.cgnsutils.getValueDataType(ta)\n    # dtb = CGNS.PAT.cgnsutils.getValueDataType(tb)\n    #\n    if dta is not CGNS.PAT.cgnskeywords.MT:\n        dnum = compareValues(ta, tb)\n        if dnum:\n            diag[path].append((\'C%d\' % dnum,))\n            if trace:\n                print(\'C%d %s %s\' % (dnum, tag, path))\n    (sa, da) = getChildren(ta)\n    (sb, db) = getChildren(tb)\n    a2b = sa.difference(sb)\n    sn = sa.union(sb)\n    for cn in sn:\n        np = path + \'/\' + cn\n        a = cn in sa\n        b = cn in sb\n        if not a and b:\n            diag[path].append((\'NA\', np))\n            if trace:\n                print(\'NA %s %s\' % (tag, np))\n        if a and not b:\n            diag[path].append((\'ND\', np))\n            if trace:\n                print(\'ND %s %s\' % (tag, np))\n        if a and b:\n            diff(da[cn], db[cn], np, tag, diag, trace)\n    if not diag[path]:\n        del diag[path]\n    return diag\n\n\n# --------------------------------------------------\ndef diffAnalysis(diag):\n    s = \'## ++ A node not in B\\n\'\n    s += \'## -- B node not in A\\n\'\n    s += \'## >t A and B node SIDS type differ\\n\'\n    s += \'## >a A and B node values differ (one has None)\\n\'\n    s += \'## >x A and B node values differ (not same data type)\\n\'\n    s += \'## >n A and B node values differ (not same total size)\\n\'\n    s += \'## >d A and B node values differ (not same shape)\\n\'\n    s += \'## >c A and B node values differ (not same contents)\\n\'\n    s += \'## >s A and B node values differ (string values)\\n\'\n    paths = list(diag)\n    paths.sort()\n    for k in paths:\n        for d in diag[k]:\n            ldiag = \'\'\n            if d[0] == \'NA\':\n                ldiag = \'++\'\n            if d[0] == \'ND\':\n                ldiag = \'--\'\n            if d[0] in [\'CT\']:\n                ldiag = \'>t\'\n            if d[0] in [\'C1\', \'C2\']:\n                ldiag = \'>a\'\n            if d[0] in [\'C3\']:\n                ldiag = \'>x\'\n            if d[0] in [\'C6\']:\n                ldiag = \'>c\'\n            if d[0] in [\'C7\']:\n                ldiag = \'>s\'\n            if d[0] in [\'C4\']:\n                ldiag = \'>n\'\n            if d[0] in [\'C5\']:\n                ldiag = \'>d\'\n            if len(d) > 1:\n                s += \'%s %s\\n\' % (ldiag, d[1])\n            else:\n                s += \'%s %s\\n\' % (ldiag, k)\n    return s\n\n\n# --------------------------------------------------\ndef toStringValue(v):\n    """"""ASCII pretty print of one node value.""""""\n    if v is None:\n        return None\n    ao = \'C\'\n    if numpy.isfortran(v):\n        ao = \'F\'\n    at = v.dtype.name\n    av = v.tolist()\n    return ""numpy.array(%s,dtype=\'%s\',order=\'%s\')"" % (av, at, ao)\n\n\n# --------------------------------------------------\ndef toStringChildren(l, readable=False, shift=0, keywords=False, pycgns=False):\n    """"""ASCII pretty print of one children node list.""""""\n    s = ""[""\n    for c in l:\n        s += toString(c, readable, shift, keywords)\n        s += \',\'\n    if l:\n        s = s[:-1]\n    if readable and l:\n        s += \'],\\n\' + (shift - 1) * \' \'\n    else:\n        s += \'],\'\n    return s\n\n\n# --------------------------------------------------\ndef prettyPrint(tree, path=\'\', depth=0, sort=False, links=None, paths=None):\n    """"""ASCII pretty print of the whole tree.""""""\n    if links is None:\n        links = []\n    if paths is None:\n        paths = []\n    print(depth * \' \',)\n    path = path + \'/\' + tree[0]\n    pnr = getPathNoRoot(path)\n    nt = getNodeType(tree)\n    ns = getShape(tree)\n    if paths:\n        d = {p[0]: p[2:] for p in paths}\n        if pnr in d:\n            nt = d[pnr][0]\n            ns = d[pnr][1]\n    n = ""%s(%s) %s:%s"" % (tree[0], tree[3], nt, ns),\n    print(""%-32s"" % n)\n    if not sort:\n        for c in tree[2]:\n            prettyPrint(c, path, depth=depth + 2, links=links, paths=paths)\n    else:\n        for c in getNextChildSortByType(tree, criteria=CK.sortedtypelist):\n            prettyPrint(c, path, depth=depth + 2, sort=True, links=links, paths=paths)\n\n\n# --------------------------------------------------\ndef toString(tree, readable=False, shift=0, keywords=False, pycgns=False):\n    """"""\n    Returns the full sub-tree as a single line string::\n\n      s=toString(tree)\n      print s\n\n    :arg CGNS/Python tree: the CGNS/Python tree to parse\n    :return: A string representation of the whole tree\n    :Remarks:\n      - the `numpy` module is used, the values strings are actual string\n        representation of a `numpy` array, include `dtype` and `order`\n\n    """"""\n    if pycgns:\n        keywords = True\n    n = tree\n    prefix = \'\'\n    if pycgns and (shift == 0):\n        prefix += """"""# ---\nimport numpy\nimport CGNS.PAT.cgnskeywords as CGK\nimport CGNS.PAT.cgnsutils as CGU\n\ntree=\\\\\\n""""""\n    if readable and shift:\n        prefix = \'\\n\' + shift * \' \'\n    if n is None:\n        return \'None\'\n    name = n[0]\n    if keywords and name in CK.cgnsnames:\n        name = \'CGK.%s_s\' % n[0]\n    else:\n        name = ""\'%s\'"" % n[0]\n    s = ""%s[%s,%s,%s"" % (prefix,\n                         name,\n                         toStringValue(n[1]),\n                         toStringChildren(n[2], readable, shift + 2, keywords, pycgns))\n    if keywords:\n        s += \'CGK.%ss ]\' % n[3]\n    else:\n        s += ""\'%s\' ]"" % n[3]\n    return s\n\n\n# --------------------------------------------------\ndef toFile(tree, filename):\n    """"""\n    Writes the CGNS/Python tree as an ``import``-able string in a file::\n\n      tofile(tree,\'NACA0012.py\')\n      import NACA0012 as M\n      T=M.T\n\n    The actual node variable is ``T``, we retrieve this value from the module\n    ``M``, which is the result of the import.\n\n    :arg CGNS/Python tree: the tree structure to save\n    :arg str filename: the name of the file\n    :Remarks:\n      - you have to use the``.py`` file extension if you use usual imports\n      - calls :py:func:`toString`\n\n    """"""\n    f = open(filename, \'w+\')\n    f.write(\'import numpy\\nT=\')\n    f.write(toString(tree, readable=True))\n    f.close()\n\n\n# --------------------------------------------------\ndef getNodesFromTypeSet(tree, typeset):\n    """"""  **Iterator** returns the children nodes of the argument CGNS/Python\n    matching one of the type in the list. It allows an alternate traversal\n    of the CGNS/Python tree::\n\n      for path, child in getNodesFromTypeSet(tree, [CGK.Zone_ts]):\n          print \'Next child:\', child[0]\n\n    :arg CGNS/Python tree: the tree structure to traverse\n    :arg list typeset: the list of CGNS/SIDS types as strings\n    :return:\n      - This is an iterator, it returns a tuple (path, CGNS/Python node)\n    :Remarks:\n      - this iterator must be used carefully to scan a CGNS/Python tree\n        or do inplace modification. Modification of tree structure while\n        using this iterator is hazardous.\n    """"""\n\n    def genNodesFromTypeSet(typelist, cnode, cpath):\n        for c in cnode:\n            if c[3] in typelist:\n                yield (""%s/%s"" % (cpath, c[0]), c)\n            for curpath, curnode in genNodesFromTypeSet(typelist, c[2], ""%s/%s"" % (cpath, c[0])):\n                yield (curpath, curnode)\n\n    if tree[3] == CK.CGNSTree_ts:\n        start = """"\n    else:\n        start = ""%s"" % tree[0]\n    for path, node in genNodesFromTypeSet(typeset, tree[2], start):\n        yield (path, node)\n\n# ----\n'"
CGNS/VAL/SIDS.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS.VAL - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nimport CGNS.VAL.simplecheck\n\n\ndef check(t, trace=False, grammar=None, paths=[''], stop=False,\n          warnings=[], failures=[]):\n    if grammar is None:\n        grammar = ['SIDS']\n    chk = CGNS.VAL.simplecheck.compliant(t, userlist=grammar, paths=paths, stop=stop,\n                                         warnings=warnings, failures=failures)\n    if trace:\n        for d in chk[1]:\n            print('# %s >>> %s' % (d[1], d[0]))\n    return chk[0]\n"""
CGNS/VAL/__init__.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS.VAL - Python package for CFD General Notation System - VALidater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\n__version__ = 0\n__release__ = 5\n__vid__ = ""%d.%d"" % (__version__, __release__)\n#\n'"
CGNS/VAL/simplecheck.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS.VAL - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nimport CGNS.VAL.grammars.CGNS_VAL_USER_DEFAULT as CGV\nimport CGNS.VAL.parse.messages as CGM\nimport CGNS.PAT.cgnserrors     as CGE\nimport CGNS.VAL.parse.findgrammar\n\nimport sys\nimport os\n\n\ndef listuserkeys(trace):\n    s = \'\'\n    if not trace:\n        print(\'### Use -v (verbose) option to check if the found paths\')\n        print(\'### are into your PYTHONPATH. If not, grammar would not be\')\n        print(""### used by CGNS.VAL even if detected..."")\n    dk = CGNS.VAL.parse.findgrammar.findAllUserGrammars(trace)\n    for key in dk:\n        s += \'%-16s: %s\\n\' % (key, dk[key])\n    return s\n\n\ndef getParser(trace, user):\n    if user is not None:\n        mod = CGNS.VAL.parse.findgrammar.importUserGrammars(user, verbose=trace)\n        if mod is None:\n            if trace:\n                print(\'### Using grammar [DEFAULT]\')\n            parser = CGV.CGNS_VAL_USER_Checks(None)\n        else:\n            if trace:\n                print(\'### Using grammar [%s]\' % user)\n            if trace:\n                print(\'### Found in [%s]\' % os.path.dirname(mod.__file__))\n            parser = mod.CGNS_VAL_USER_Checks(None)\n    else:\n        parser = CGV.CGNS_VAL_USER_Checks(None)\n    return parser\n\n\ndef listdiags(trace, userlist):\n    ld = []\n    for user in userlist:\n        parser = getParser(trace, user)\n        mlist = parser.listDiagnostics()\n        ld += list(mlist)\n    ld.sort()\n    s = \'\'\n    for d in ld:\n        s += ""%s\\n"" % (str(mlist[d]))\n    return s\n\n\ndef run(T, trace, userlist, stop=False, warnings=[], failures=[]):\n    diag = CGM.DiagnosticLog()\n    for user in userlist:\n        parser = getParser(trace, user)\n        # parser lookup and init are required prior to initialize message tables\n        for w in warnings:\n            diag.forceAsWarning(w)\n        for w in failures:\n            diag.forceAsFailure(w)\n        try:\n            parser.checkTree(T, trace, stop=stop)\n        except (CGE.cgnsException,) as v:\n            pass\n        diag.merge(parser.log)\n    return diag\n\n\ndef compliant(T, trace=False, userlist=[\'DEFAULT\'], paths=[\'\'], stop=False,\n              warnings=[], failures=[]):\n    ipath = \'%s/lib/python%s.%s/site-packages/CGNS/VAL/grammars\' % \\\n            (sys.prefix, sys.version_info[0], sys.version_info[1])\n    sys.path.append(ipath)\n    for pp in paths: sys.path.append(pp)\n    diag = run(T, trace, userlist, stop=stop, warnings=warnings, failures=failures)\n    ok = [True, []]\n    for p in diag:\n        for (s, sp) in diag.diagnosticsByPath(p):\n            if (diag.status(s) == CGM.CHECK_FAIL):\n                ok[0] = False\n                ok[1].append((p, diag.message(s)))\n    return ok\n\n\ndef showDiag(diag, idlist, bypath=True):\n    ok = True\n    if bypath:\n        for p in diag:\n            if not diag.hasOnlyKey(p, idlist):\n                print(\'\\n%s\\n%s\' % (\'-\' * 75, p))\n                for (s, sp) in diag.diagnosticsByPath(p):\n                    if ((diag.status(s) != CGM.CHECK_GOOD) and\n                            (diag.key(s) not in idlist)):\n                        print(diag.message(s))\n                        if diag.status(s) == CGM.CHECK_FAIL:\n                            ok = False\n        print(\'\\n%s\\n\' % (\'-\' * 75))\n    else:\n        for m in diag.allMessageKeys():\n            if (m not in idlist):\n                first = True\n                ctxt = diag.noContextMessage(m)\n                if (ctxt is not None):\n                    print(\'\\n%s\\n[%s] %s\' % (\'-\' * 75, m, ctxt))\n                else:\n                    print(\'\\n%s\\n[%s]\' % (\'-\' * 75, m))\n                for (d, dp) in diag.diagnosticsByMessage(m):\n                    if diag.status(d) != CGM.CHECK_GOOD:\n                        if ctxt is None:\n                            if not first:\n                                skip = \'\\n\'\n                            else:\n                                skip = \'\'\n                            print(\'%s  %s\\n  > %s\' % (skip, dp, d.message))\n                        else:\n                            print(\'  %s\' % (dp))\n                        first = False\n                        if diag.status(d) == CGM.CHECK_FAIL:\n                            ok = False\n        print(\'\\n%s\' % (\'-\' * 75))\n    if ok:\n        print(\'### CGNS/Python tree Compliant\')\n    else:\n        print(\'### CGNS/Python tree *NOT* Compliant\')\n'"
lib/compatibility/test.py,0,b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\n\nfrom CGNS.MAP import test\ntest.run()\n\nfrom CGNS.PAT import test\ntest.run()\n\nfrom CGNS.VAL import test\ntest.run()\n\nfrom CGNS.NAV import test\ntest.run()\n\nfrom CGNS.DAT import test\ntest.run()\n\nfrom CGNS.APP import test\ntest.run()\n\n# --- last line\n\n'
CGNS/APP/examples/__init__.py,0,b'#  ---------------------------------------------------------------------------\n#  pyCGNS.APP - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\npass\n'
CGNS/APP/examples/addNodes.py,0,"b'#!/usr/bin/env python\n\n# [ name, value, children, type ]\nimport CGNS.MAP\nimport CGNS.PAT\nimport CGNS.PAT.cgnsutils\n\n(tree, links) = CGNS.MAP.load(""./001Disk.hdf"", CGNS.MAP.S2P_FOLLOWLINKS | CGNS.MAP.S2P_TRACE)\n\nref = [\'ReferenceState\', None, [], CGNS.PAT.ReferenceState_t]\nref[2].append([\'Density\', dens, [], \'DataArray_t\'])\n\nnode = CGNS.PAT.cgnsutils.getNodeByPath(tree, ""/Disk"")\nnode[2].append(ref)\n\nCGNS.MAP.save(""./001Disk-new.hdf"", CGNS.MAP.S2P_FOLLOWLINKS | CGNS.MAP.S2P_TRACE, tree, links)\n'"
CGNS/APP/examples/getBCbyFamily.py,0,"b'\nimport CGNS.PAT.cgnsutils    as CGU\nimport CGNS.PAT.cgnskeywords as CGK\n\ndef getBCbyFamily(T,family):\n    """"""Finds all BC that belongs to a family.\n    Works with more than one base.\n    Returns a list of path, you have to use getNodeByPath to retrieve\n    the actual node.""""""\n    result=[]\n    fpath=[CGK.CGNSTree_ts,CGK.CGNSBase_t,CGK.Zone_t,CGK.ZoneBC_t,\n           CGK.BC_t,CGK.FamilyName_t]\n    flist=CGU.getAllNodesByTypeOrNameList(T,fpath)\n    for famnamepath in flist:\n        fnode=CGU.getNodeByPath(T,famnamepath)\n        if (CGU.stringValueMatches(fnode,family)):\n            bcpath=CGU.getAncestor(famnamepath)\n            result.append(bcpath)\n    return result\n'"
CGNS/APP/examples/map_loadandsave.py,0,"b'#!/usr/bin/env python\nfrom __future__ import print_function\nimport CGNS.MAP\nimport CGNS.PAT.cgnsutils as PU\nimport numpy\nimport time\nimport sys\nnumpy.set_printoptions(threshold=sys.maxint)\n\nflags=CGNS.MAP.S2P_FOLLOWLINKS|CGNS.MAP.S2P_TRACE\nstart=time.clock()\n(tree,links)=CGNS.MAP.load(""./001Disk.hdf"",flags)\n\nnode=PU.getNodeByPath(tree,""/Disk/zone1/ZoneBC/ext1/PointRange"")\n\nprint(""PointRange is fortran:"",numpy.isfortran(node[1]),node[1],node[1].shape)\n\nf=open(\'T0.py\',\'w+\')\nf.write(\'from numpy import *\\n\')\nf.write(\'tree=\')\nf.write(str(tree))\nf.write(\'\\nlinks=\')\nf.write(str(links))\nf.write(\'\\n\')\nf.close()\n\nCGNS.MAP.save(""./002Disk.hdf"",tree,links,flags)\n\nend=time.clock()\nprint(\'# time =\',end-start)\n'"
CGNS/APP/examples/merge.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.MAP         as CGM\nfrom   CGNS.APP.lib import mergeTrees\n\nimport numpy as NPY\n\n\ndef test():\n    T1 = CGL.newCGNSTree()\n    b1 = CGL.newCGNSBase(T1, 'B1', 3, 3)\n    b2 = CGL.newCGNSBase(T1, 'B2', 3, 3)\n    f1 = CGL.newFamily(b1, 'F1')\n    f2 = CGL.newFamily(b1, 'F2')\n    f1 = CGL.newFamily(b2, 'F1')\n    f2 = CGL.newFamily(b2, 'F2')\n    f3 = CGL.newFamily(b2, 'F3')\n    f4 = CGL.newFamily(b2, 'F4')\n    z1 = CGL.newZone(b1, 'Z1', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n    z2 = CGL.newZone(b1, 'Z2', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n    z3 = CGL.newZone(b1, 'Z3', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n    z4 = CGL.newZone(b1, 'Z4', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n    z5 = CGL.newZone(b1, 'Z5', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n    z1 = CGL.newZone(b2, 'Z1', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n    z2 = CGL.newZone(b2, 'Z2', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n    z3 = CGL.newZone(b2, 'Z3', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n\n    T2 = CGL.newCGNSTree()\n    b1 = CGL.newCGNSBase(T2, 'B1', 3, 3)\n    b2 = CGL.newCGNSBase(T2, 'B2', 3, 3)\n    b3 = CGL.newCGNSBase(T2, 'B3', 2, 2)\n    f1 = CGL.newFamily(b1, 'F1')\n    f1 = CGL.newFamily(b2, 'F1')\n    f2 = CGL.newFamily(b2, 'F2')\n    f3 = CGL.newFamily(b2, 'F3')\n    f4 = CGL.newFamily(b2, 'F4')\n    f5 = CGL.newFamily(b2, 'F5')\n    f1 = CGL.newFamily(b3, 'F1')\n    f2 = CGL.newFamily(b3, 'F2')\n    z1 = CGL.newZone(b1, 'Z1', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n    z2 = CGL.newZone(b1, 'Z2', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n    z3 = CGL.newZone(b1, 'Z3', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n    z1 = CGL.newZone(b2, 'Z1', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n    z2 = CGL.newZone(b2, 'Z2', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n    z3 = CGL.newZone(b2, 'Z3', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n    z4 = CGL.newZone(b2, 'Z4', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n\n    T3 = CGL.newCGNSTree()\n    b1 = CGL.newCGNSBase(T3, 'B1', 3, 3)\n    b2 = CGL.newCGNSBase(T3, 'B7', 3, 3)\n    b3 = CGL.newCGNSBase(T3, 'B8', 2, 2)\n    f1 = CGL.newFamily(b1, 'F1')\n    f1 = CGL.newFamily(b2, 'F8')\n\n    Tlist = []\n    for TT in [T1, T2, T3]: Tlist.append(TT)\n\n    count = 0\n    for t in Tlist:\n        CGM.save('merge-T%.2d.hdf' % count, t, flags=CGM.S2P_TRACE)\n        count += 1\n    T = mergeTrees(Tlist)\n    CGM.save('merge-Result.hdf', T, flags=CGM.S2P_TRACE)\n    return T\n\n# --- last line\n"""
CGNS/APP/lib/__init__.py,0,b'pass\n'
CGNS/APP/lib/cg_com.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import print_function\nimport os\nimport sys\nimport subprocess\n\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport CGNS.MAP as CGM\nimport CGNS.version\n\n\nclass Context:\n    def __init__(self):\n        self.converter = None\n\n\ndef openFile(filename):\n    flags = CGM.S2P_DEFAULTS | CGM.S2P_NODATA\n    (t, l, p) = CGM.load(filename, flags=flags, maxdata=33, lksearch=[\'.\'])\n    return (t, l, p, filename)\n\n\ndef parseFile(filename, P, C, L):\n    C.depth += 1\n    R = []\n    T = openFile(filename)\n    LK = T[1]\n    if (C.translate):\n        LK = transLinks(filename, LK, P, C)\n    searchLinks(LK, C, R)\n    for p in R:\n        L.append((filename, p))\n        if (C.path):\n            P.append(\'%s\' % (p[3],))\n        else:\n            P.append(\'%s:%s\' % (T[3], p[3]))\n    for l in LK:\n        if (l[0] == \'\'):\n            FH = l[1]\n        else:\n            FH = ""%s/%s"" % (l[0], l[1])\n        parseFile(FH, P, C, L)\n    C.depth -= 1\n    return P, L\n\n\ndef linkErrorAsString(code):\n    s = """"\n    if (code & CGM.S2P_LKOK):\n        s += \'Link ok\'\n    if (code & CGM.S2P_LKFAIL):\n        s += \'Link Failed:\'\n    if (code & CGM.S2P_LKBADSYNTAX):\n        s += \'Link bad syntax\'\n    if (code & CGM.S2P_LKNOFILE):\n        s += \'Linked-to file not found\'\n    if (code & CGM.S2P_LKFILENOREAD):\n        s += \'Linked-to file not readable\'\n    if (code & CGM.S2P_LKNONODE):\n        s += \'Linked-to node not found in file\'\n    if (code & CGM.S2P_LKLOOP):\n        s += \'Link loop detected\'\n    if (code & CGM.S2P_LKIGNORED):\n        s += \'Link ignored\'\n    return s\n\n\ndef checkString(variable, targetlist, re):\n    if (variable is None):\n        return False\n    if (not re):\n        return (variable in targetlist)\n    else:\n        for t in targetlist:\n            if (variable.search(t) is not None):\n                return True\n        return False\n\n\ndef searchLinks(L, C, R):\n    for l in L:\n        add = True\n        if (add or C.linklist):\n            R.append(l)\n\n\ndef asHDFname(FA, C):\n    return os.path.splitext(FA)[0] + C.exthdf\n\n\ndef convertInPlace(FA, FH, C):\n    if not os.path.isfile(FA):\n        if C.verbose:\n            print(\'   \' * C.depth + "" Error: Unreachable file: %s"" % FA)\n        return False\n    elif not CGM.probe(FA):\n        subprocess.check_output([C.converter, ""-h"", FA, FH])\n        return True\n    else:\n        if C.verbose:\n            print(\'   \' * C.depth + "" Error: Mixing links to ADF and HDF files..."")\n        return False\n\n\ndef transLinks(filename, L, P, C):\n    LH = []\n    for l in L:\n        LN = asHDFname(l[1], C)\n        if (l[0] == \'\'):\n            FA = l[1]\n        else:\n            FA = ""%s/%s"" % (l[0], l[1])\n        if (C.verbose):\n            print(\'   \' * C.depth, \'->\', FA)\n        FH = asHDFname(FA, C)\n        if (convertInPlace(FA, FH, C)):\n            LH.append([l[0], LN, l[2], l[3]])\n    (t, l, p) = CGM.load(filename)\n    CGM.save(filename, t, links=LH)\n    return LH\n\n# --- last line\n'"
CGNS/APP/lib/linkZoneGridConnectivities.py,0,b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom CGNS.APP.lib import mergeTrees\nimport CGNS.MAP as CGM\n\n\ndef treeLinkZGC(T1):\n    pass\n\n\ndef fileLinkZGC(*files):\n    l = []\n    for f in files:\n        l += [CGM.load(f)[0]]\n'
CGNS/APP/lib/mergeTrees.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nimport CGNS.PAT.cgnsutils    as CGU\n\n\ndef mergeTrees(treelist):\n    """"""Merge a list of CGNS/Python trees into a single one\n    Actual trees are modified\n    List order is meaningful: the first tree is set as the master tree,\n    if a conflict occurs and the FORCEFIRST flag is on, the master tree\n    overwrites the slave tree...\n    There is no loop detection""""""\n    if (len(treelist) < 2): return treelist[0]\n    tmaster = treelist[0]\n    for tslave in treelist[1:]:\n        tmaster = mergeTwoTrees(tmaster, tslave)\n    return tmaster\n\n\ndef mergeTwoTrees(TM, TS, path=\'\'):\n    TR = [TM[0], TM[1], [], TM[3]]\n    C_M = set(CGU.childrenNames(TM))\n    C_S = set(CGU.childrenNames(TS))\n    C_L = C_M.symmetric_difference(C_S)\n    for C in C_L:\n        # print \'add   \',path+\'/\'+C\n        if (C in C_M):\n            T = TM\n        else:\n            T = TS\n        C_N = CGU.hasChildNode(T, C)\n        TR[2].append(C_N)\n    C_L = C_M.intersection(C_S)\n    for C in C_L:\n        # print \'merge \',path+\'/\'+C\n        TR[2].append(mergeTwoTrees(CGU.hasChildNode(TM, C),\n                                   CGU.hasChildNode(TS, C),\n                                   path + \'/\' + C))\n    return TR\n\n# --- last line\n'"
CGNS/APP/lib/queries.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nfrom builtins import (str, bytes, range, dict)\n\ndef asQuery(f):\n    def prepostquery(node, parent, tree, links, skips, path, args, selected):\n        import CGNS.PAT.cgnskeywords as CGK\n        import CGNS.PAT.cgnsutils as CGU\n        import CGNS.PAT.cgnslib as CGL\n        import CGNS.MAP as CGM\n        import numpy\n\n        QueryNoException = True\n\n        class Context(object):\n            pass\n\n        C = Context()\n        C.NODE = node\n        C.PARENT = parent\n        C.NAME = node[0]\n        C.VALUE = node[1]\n        C.CGNSTYPE = node[3]\n        C.CHILDREN = node[2]\n        C.TREE = tree\n        C.PATH = path\n        C.LINKS = links\n        C.SKIPS = skips\n        C.USER = args\n        C.ARGS = args\n        C.SELECTED = selected\n        C.RESULT_LIST = [False]\n\n        if (QueryNoException):\n            RESULT = f(C)\n        else:\n            try:\n                RESULT = f(C)\n                if (RESULT not in [True, False]): RESULT = False\n                RESULT_LIST[0] = RESULT\n            except Exception:\n                RESULT_LIST[0] = False\n\n        return RESULT\n\n    return prepostquery\n\n\n# -----------------------------------------------------------------\ndef parseAndSelect(tree, node, parent, links, skips, path, query, args, selected,\n                   result):\n    path = path + \'/\' + node[0]\n    print(\'ARGS \', args)\n    Q = query(node, parent, tree, links, skips, path, args, selected)\n    R = []\n    if (Q):\n        if (result):\n            R = [Q]\n        else:\n            R = [path]\n    for C in node[2]:\n        R += parseAndSelect(tree, C, node, links, skips, path, query, args, selected,\n                            result)\n    return R\n\n\n# -----------------------------------------------------------------\ndef runQuery(tree, links, paths, query, args, selected=[], mode=True):\n    """"""Recursively applies a function on all nodes of a tree, breadth-first\n    parse, results returned in a list (breadth-first order of the list).\n\n    tree,links,paths: the three restults returned by the CGNS.MAP.load call\n    query: the query funciton as a name (string) or a callable object (such as\n    a function)\n    args: a tuple of args to pass to the query (for example a node name to\n    look for)\n    selected: the RETURNED list of values\n    mode: True (defaut) a boolean list is returned for every node in the tree,\n    False a list of the (True) paths is returned\n    \n    The match between results and paths can be performed with help of the\n    breadth-first paths order function in CGNS.PAT\n    """"""\n    v = None\n    try:\n        try:\n            if (args): v = eval(args)\n        except TypeError:\n            v = args\n        if ((v is not None) and (type(v) not in [tuple, list])): v = (v,)\n    except NameError:\n        v = (str(args),)\n    except:\n        pass\n    _args = v\n    if (type(query) in [str,]): query = eval(query)\n    result = parseAndSelect(tree, tree, [None, None, [], None], links, paths, \'\',\n                            query, _args, selected, mode)\n    return result\n'"
CGNS/APP/lib/unstructured.py,0,"b""from __future__ import print_function\nimport CGNS.MAP              as CGM\nimport CGNS.PAT.cgnskeywords as CGK\nimport CGNS.PAT.cgnsutils    as CGU\nimport CGNS.PAT.cgnslib      as CGL\n\nimport CGNS.APP.probe.arrayutils as ARU\n\n\ndef parseTree(filename):\n    flags = CGM.S2P_DEFAULT\n    (tree, l) = CGM.load(filename, flags, 0, None, [], None)\n    typepath = [CGK.CGNSTree_ts, CGK.CGNSBase_ts, CGK.Zone_ts, CGK.Elements_ts]\n    elist = CGU.getAllNodesByTypeList(tree, typepath)\n    sn = 0\n    sl = []\n    sp = ARU.SectionParse()\n    mr = 1\n    for e in elist:\n        print('Parse ', e)\n        sn += 1\n        ne = CGU.getNodeByPath(tree, e)[1]\n        et = ne[0]\n        eb = ne[1]\n        ea = CGU.getNodeByPath(tree, e + '/' + CGK.ElementConnectivity_s)[1]\n        if (et in sp.QUAD_SURFACE):\n            sl.append(sp.extQuadFacesPoints(ea, et, sn, mr, eb))\n        if (et in sp.TRI_SURFACE):\n            sl.append(sp.extTriFacesPoints(ea, et, sn, mr, eb))\n        mr = sl[-1][-1]\n\n# for s in sl:\n#       print CGK.ElementType_l[s[0]]\n#       if (s[0]==CGK.QUAD_4):\n#         for p in range(len(s[1])/4):\n#             print s[1][4*p+0],s[1][4*p+1],s[1][4*p+2],s[1][4*p+3]\n\n# --- last line\n"""
CGNS/APP/misc/checktypes.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nimport CGNS.PAT.cgnskeywords as CK\nimport CGNS.PAT.cgnstypes    as CT\n\nstringsphinx0 = """"""\n\n----\n\n.. _X%s:\n\n%s\n%s\n\n * Name\n\n   * %s\n """"""\n\nstringsphinx1 = """"""\n\n * Data-Type: %s\n\n * Dimensions/DimensionValues\n\n * Cardinality: %s\n\n""""""\n\nstringsphinx2 = """"""\n * Child Nodes\n\n   - :ref:`%s <X%s>` (%s)\\n""""""\n\nstringsphinx3 = """"""   - :ref:`%s <X%s>` (%s)\\n""""""\n\nstringsphinx4 = """"""   * %s\\n""""""\n\n\n# a ref is :ref:`XCGNSBase_t`\ndef showBoxes():\n    s = """"\n    lt = list(CT.types)\n    lt.sort()\n    for t in lt:\n        st = ""-"" * len(t)\n        s += stringsphinx0 % (t, t, st, CT.types[t].names[0])\n        if (len(CT.types[t].names) > 1):\n            for n in CT.types[t].names[1:]:\n                s += stringsphinx4 % n\n        datatype = """"\n        for d in CT.types[t].datatype:\n            datatype += ""%s "" % d\n        cardinality = CT.types[t].cardinality\n        s += stringsphinx1 % (datatype, cardinality)\n        if (CT.types[t].children):\n            s += stringsphinx2 % (CT.types[t].children[0][0],\n                                  CT.types[t].children[0][0],\n                                  CT.types[t].children[0][1])\n        if (CT.types[t].children > 1):\n            for c in CT.types[t].children[1:]:\n                s += stringsphinx3 % (c[0], c[0], c[1])\n    return s\n\n\ndef generateSphinx(file):\n    f = open(file, \'w+\')\n    f.write(showBoxes())\n    f.close()\n\n# --- last line\n'"
CGNS/APP/test/__init__.py,0,b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n\n\ndef run():\n    import CGNS.APP.test.cgu\n\n# --- last line\n'
CGNS/APP/test/cgu.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\n# TESTING APP\n#\nfrom __future__ import print_function\nimport unittest\n\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nimport importlib\nimport os\nimport string\nimport subprocess\n\n\ndef genTrees():\n    T = CGL.newCGNSTree()\n    b = CGL.newBase(T, '{Base}', 2, 3)\n    z = CGL.newZone(b, '{Zone}', NPY.array([[5, 4, 0], [7, 6, 0]], order='F'))\n    g = CGL.newGridCoordinates(z, 'GridCoordinates')\n    d = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7), dtype='d', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7), dtype='d', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7), dtype='d', order='F'))\n    return (T,)\n\n\nclass APPTestCase(unittest.TestCase):\n    def setUp(self):\n        pass\n\n    def test_000_Module(self):\n        import CGNS.APP.lib\n\n\n# ---\nprint('-' * 70 + '\\nCGNS.APP test suite')\nsuite = unittest.TestLoader().loadTestsFromTestCase(APPTestCase)\nunittest.TextTestRunner(verbosity=2).run(suite)\n\n# --- last line\n"""
CGNS/MAP/test/__init__.py,0,b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n\n\ndef run():\n    import CGNS.MAP.test.cgu\n\n# --- last line\n'
CGNS/MAP/test/cgu.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\n# TESTING RAW HDF5/C API and H5PY IMPLEMENTATIONS ***\n# - test save first\n# - test load\n\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nfrom builtins import (bytes, str, range, dict)\nimport os\nimport subprocess\nimport unittest\n\nimport numpy\n\ndef genTrees():\n    import CGNS.PAT.cgnskeywords as CGK\n    import CGNS.PAT.cgnslib as CGL\n\n    tree = CGL.newCGNSTree()\n    b = CGL.newBase(tree, \'{Base}\', 2, 3)\n    z = CGL.newZone(b, \'{Zone}\', numpy.array([[5, 4, 0], [7, 6, 0]], order=\'F\'))\n    g = CGL.newGridCoordinates(z, \'GridCoordinates\')\n    d = CGL.newDataArray(g, CGK.CoordinateX_s, numpy.ones((5, 7), dtype=\'d\', order=\'F\'))\n    d = CGL.newDataArray(g, CGK.CoordinateY_s, numpy.ones((5, 7), dtype=\'d\', order=\'F\'))\n    d = CGL.newDataArray(g, CGK.CoordinateZ_s, numpy.ones((5, 7), dtype=\'d\', order=\'F\'))\n    return (tree,)\n\nclass MAPTestCase(unittest.TestCase):\n    def setUp(self):\n        try:\n            self.T = genTrees()[0]\n            self.L = []\n        except ImportError:\n            self.T = []\n            self.L = []\n        self.HDF01 = \'T01.hdf\'\n        self.HDF02 = \'T02.hdf\'\n\n    def unlink(self, filename):\n        if os.path.isfile(filename):\n            os.unlink(filename)\n\n    def chmod(self, filename, mode):\n        if os.path.isfile(filename):\n            os.chmod(filename, mode)\n\n    def getDump(self, filename, path, format, fct):\n        com = ""h5dump -d \\""%s/ data%s\\"" %s"" % (path, format, filename)\n        r = subprocess.check_output(com, shell=True)\n        r = r.decode(\'ascii\')\n        d = r.split(\'\\n\')[10]\n        v = d.split(\'): \')[1:][0]\n        return fct(v)\n\n    def void_test_000_Constants(self):\n        import CGNS\n        import CGNS.MAP\n        from CGNS.MAP import flags, flags_set, flags_unset, flags_check    \n        f1 = flags.NONE\n        f2 = flags.ALL\n        self.assertEqual(flags.NONE & flags.ALL, flags.NONE)\n        self.assertEqual(flags.NONE | flags.ALL & flags.ALL, flags.ALL)\n        self.assertEqual(flags.ALL | ~flags.NONE & flags.ALL, flags.ALL)\n        self.assertEqual(flags.ALL ^ flags.TRACE & flags.ALL, flags.ALL & ~flags.TRACE)\n        l = flags.links.OK\n        f = flags_set()\n        self.assertEqual(f, flags.DEFAULT)\n        f = flags_set(f, flags.TRACE)\n        self.assertEqual(f, flags.DEFAULT | flags.TRACE & flags.ALL)\n        c = flags_check(f, flags.TRACE)\n        self.assertTrue(c)\n        f = flags_unset(f, flags.TRACE)\n        self.assertEqual(f, flags.DEFAULT & flags.ALL)\n        c = flags_check(f, flags.TRACE)\n        self.assertFalse(c)\n\n    def void_test_001_Probe(self):\n        from CGNS.MAP import probe\n        from CGNS.PAT.cgnserror import CGNSException\n        self.assertRaisesRegexp(CGNSException,\n                                ""[900].*"", probe, ""/Z/ ?/ /U.cgns"")\n    \n    def void_test_002_Save_Args(self):\n        from CGNS.MAP import save, flags\n        from CGNS.PAT.cgnserror import CGNSException\n        self.assertRaisesRegexp(CGNSException,\n                                ""[910].*"", save, self.HDF01, self.T, zflag=None)\n        self.assertRaisesRegexp(CGNSException,\n                                ""[917].*"", save, self.HDF01, self.T,\n                                links=[[\'A\', \'A\', \'A\']])        \n        self.unlink(self.HDF01)\n        self.assertRaisesRegexp(CGNSException, ""[906].*"",\n                                save, self.HDF01, None)\n        self.unlink(self.HDF01)\n        save(self.HDF01, self.T)\n        v = self.getDump(self.HDF01, \'/{Base}/{Zone}\', \'[0,1]\', int)\n        self.assertEqual(v, 7)\n        v = self.getDump(self.HDF01, \'/{Base}/{Zone}\', \'[1,1]\', int)\n        self.assertEqual(v, 6)\n        self.unlink(self.HDF02)\n        save(self.HDF02, self.T)\n        self.chmod(self.HDF02, 0)\n        self.assertRaisesRegexp(CGNSException,\n                                ""[100].*"", save, self.HDF02,\n                                self.T, flags=flags.UPDATE)\n        self.chmod(self.HDF02, 511)\n        self.unlink(self.HDF02)\n        self.unlink(self.HDF01)\n        self.assertRaisesRegexp(CGNSException,\n                                ""[300].*"", save, self.HDF01,\n                                [None, None, self.T, None])\n        self.unlink(self.HDF01)\n        flags = flags.DEFAULT | flags.UPDATE\n        self.assertRaisesRegexp(CGNSException,\n                                ""[100].*"", save, self.HDF01, self.T, flags=flags)\n\n    def void_test_003_Load_Args(self):\n        from CGNS.MAP import load\n        from CGNS.PAT.cgnserror import CGNSException\n        self.assertRaisesRegexp(CGNSException,\n                                ""[910].*"", load, self.HDF01, zflag=None)\n        self.assertRaisesRegexp(CGNSException,\n                                ""[911].*"", load, self.HDF01, flags=[])\n        self.assertRaisesRegexp(CGNSException,\n                                ""[912].*"", load, self.HDF01, depth=[])\n        self.assertRaisesRegexp(CGNSException,\n                                ""[909].*"", load, self.HDF01,\n                                maxdata=400, threshold=200)\n        self.assertRaisesRegexp(CGNSException,\n                                ""[908].*"", load, self.HDF01,\n                                flags=flags.DEFAULT, maxdata=400)\n        self.assertRaisesRegexp(CGNSException,\n                                ""[100].*"", load, \'foo.hdf\')\n        self.assertRaisesRegexp(CGNSException,\n                                ""[101].*"", load, \'chltest.py\')\n\n    def void_test_004_LoadSave(self):\n        from CGNS.MAP import load\n        from CGNS.PAT.cgnserror import CGNSException\n        save(self.HDF01, self.T)\n        (t, l, p) = load(self.HDF01)\n\n# ---\nprint(\'-\' * 70 + \'\\nCGNS.MAP test suite\')\nsuite = unittest.TestLoader().loadTestsFromTestCase(MAPTestCase)\nunittest.TextTestRunner(verbosity=2).run(suite)\n\n# --- last line\n'"
CGNS/NAV/test/__init__.py,0,b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n\n\ndef run():\n    import CGNS.NAV.test.cgu\n\n# --- last line\n'
CGNS/NAV/test/cgu.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\n# TESTING NAV (imports & functions, no GUI) ***\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nimport unittest\n\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nimport importlib\nimport os\nimport string\nimport subprocess\n\n\ndef genTrees():\n    tree = CGL.newCGNSTree()\n    b = CGL.newBase(tree, '{Base}', 2, 3)\n    z = CGL.newZone(b, '{Zone}', NPY.array([[5, 4, 0], [7, 6, 0]], order='F'))\n    g = CGL.newGridCoordinates(z, 'GridCoordinates')\n    d = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7), dtype='d', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7), dtype='d', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7), dtype='d', order='F'))\n    return (tree,)\n\n\nclass NAVTestCase(unittest.TestCase):\n    def setUp(self):\n        pass\n\n    def test_000_Module(self):\n        import qtpy\n        import qtpy.QtCore\n        import qtpy.QtWidgets\n\n    def test_001_Script(self):\n        import CGNS.NAV\n\n\n# ---\nprint('-' * 70 + '\\nCGNS.NAV test suite')\nsuite = unittest.TestLoader().loadTestsFromTestCase(NAVTestCase)\nunittest.TextTestRunner(verbosity=2).run(suite)\n\n# --- last line\n"""
CGNS/PAT/SIDS/AdditionalFamilyName_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = C.newAdditionalFamilyName(None, family='{AdditionalFamilyName}')\nstatus = '-'\ncomment = 'SIDS Leaf node'\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/ArbitraryGridMotion_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\n#\nimport CGNS.PAT.cgnslib as C\nimport CGNS.PAT.cgnskeywords as K\nimport CGNS.PAT.cgnserrors as E\nimport numpy as N\n#\n#\ndata = C.newArbitraryGridMotion(None, '{ArbitraryGridMotion}')\nC.newRind(data, N.array([0, 0, 0, 0, 1, 1]))\nC.newGridLocation(data)\nC.newDataArray(data, K.GridVelocityX_s)\nC.newDataArray(data, K.GridVelocityY_s)\nC.newDataArray(data, K.GridVelocityZ_s)\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '11.3'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/Area_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\n#\nimport CGNS.PAT.cgnslib as C\nimport CGNS.PAT.cgnskeywords as K\nimport CGNS.PAT.cgnserrors as E\nimport numpy as N\n#\n#\ndata = C.newArea(None)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '11.3'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/AverageInterface_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as C\nimport CGNS.PAT.cgnserrors as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy as N\n\n#\ndata = C.newAverageInterface(None)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '8.5.2'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/AxiSymmetry_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as C\nimport CGNS.PAT.cgnserrors as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy as N\n\n#\ndata = C.newAxisymmetry(None)\nC.newDataArray(data, K.AxisymmetryAngle_s)\nC.newDataArray(data, K.CoordinateNames_s)\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '7.5'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/BCDataSet_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import absolute_import\nimport CGNS.PAT.cgnslib as C\nimport CGNS.PAT.cgnserrors as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy as N\nimport copy\n#\nfrom . import BCData_t\n\n#\ndata = C.newBCDataSet(None, '{BCDataSet}')\nC.newGridLocation(data)\nC.newPointRange(data)\nC.newPointList(data)\nC.newDescriptor(data, '{Descriptor}')\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newReferenceState(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\n#\nd1 = copy.deepcopy(BCData_t.pattern[0])\nd1[0] = K.NeumannData_s\ndata[2].append(d1)\n#\nd2 = copy.deepcopy(BCData_t.pattern[0])\nd2[0] = K.DirichletData_s\ndata[2].append(d2)\n#\nstatus = '9.4'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/BCData_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as C\nimport CGNS.PAT.cgnserrors as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy as N\n\n#\ndata = C.newBCData(None, '{BCData}')\nC.newDescriptor(data, '{Descriptor}')\nC.newDataArray(data, '{DataLocal}')\nC.newDataArray(data, '{DataGlobal}')\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\n#\nstatus = '9.5'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/BCProperty_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as C\nimport CGNS.PAT.cgnserrors as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy as N\n\n#\ndata = C.newBCProperty(None)\nC.newDescriptor(data, '{Descriptor}')\nC.newUserDefinedData(data, '{UserDefinedData}')\n#for n in data[2]:\n#    if n[0] == K.Area_s:\n#        C.newArea(n)\n#    if (n[0] == K.WallFunction_s):\n#        C.newDescriptor(n, '{Descriptor}')\n#        C.newUserDefinedData(n, '{UserDefinedData}')\n# #\nstatus = '9.6'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/BC_t.py,0,"b'#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as C\nimport CGNS.PAT.cgnserrors as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy as N\n\n#\ndata = C.newBC(None, ""{BC}"")\nC.newIndexArray(data, K.InwardNormalList_s)\nC.newReferenceState(data)\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, \'{UserDefinedData}\')\nC.newDescriptor(data, \'{Descriptor}\')\nC.newOrdinal(data)\n#\nstatus = \'9.3\'\ncomment = \'Full SIDS with all optionals\'\npattern = [data, status, comment]\n#\n'"
CGNS/PAT/SIDS/BaseIterativeData_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as C\nimport CGNS.PAT.cgnserrors as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy as N\n\n#\ndata = C.newBaseIterativeData(None, K.BaseIterativeData_s)\nC.newDataArray(data, K.NumberOfZones_s)\nC.newDataArray(data, K.NumberOfFamilies_s)\nC.newDataArray(data, K.ZonePointers_s)\nC.newDataArray(data, K.FamilyPointers_s)\nC.newDataArray(data, '{DataArray}')\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '11.1.1'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/CGNSBase_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as C\nimport CGNS.PAT.cgnserrors as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy as N\n\ndata = C.newBase(None, '{Base}', 3, 3)\nC.newZone(data, '{Zone}', N.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\nC.newSimulationType(data)\nC.newIntegralData(data, '{IntegralData}')\nC.newBaseIterativeData(data, '{BaseIterativeData}')\nC.newConvergenceHistory(data)\nC.newFamily(data, '{Family}')\nC.newFlowEquationSet(data)\nC.newReferenceState(data)\nC.newAxisymmetry(data)\nC.newRotatingCoordinates(data)\nC.newGravity(data)\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n\nstatus = '6.2'\ncomment = 'Full SIDS with all optionals children'\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/ChemicalKineticModel_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newChemicalKineticsModel(None)\nC.newDataArray(data, '{DataArray}')\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '10.8'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/ConvergenceHistory_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newConvergenceHistory(None)\nC.newDescriptor(data, 'NormDefinition')\nC.newDataArray(data, '{DataArray}')\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '12.3'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/DataArray_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newDataArray(None, '{DataArray}')\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newDimensionalExponents(data)\nC.newDataConversion(data)\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '7.1'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/DataClass_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newDataClass(None)\n#\nstatus = '4.1'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/DataConversion_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newDataConversion(None)\n#\nstatus = '5.1.1'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/Descriptor_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newDescriptor(None, '{Descriptor}', '')\n#\nstatus = '4.2'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/DimensionalExponents_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newDimensionalExponents(None)\nC.newRind(data, N.array([0, 0, 0, 0, 1, 1]))\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '4.4'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/DimensionalUnits_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newDimensionalUnits(None)\nstatus = '4.3'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/DiscreteData_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newDiscreteData(None, '{DiscreteData}')\nC.newRind(data, N.array([0, 0, 0, 0, 1, 1]))\nC.newGridLocation(data)\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '12.4'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/EMConductivityModel_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newEMConductivityModel(None)\nC.newDataArray(data, '{DataArray}')\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '10.9.3'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/EMElectricFieldModel_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newEMElectricFieldModel(None)\nC.newDataArray(data, '{DataArray}')\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '10.9.1'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/EMMagneticFieldModel_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newEMMagneticFieldModel(None)\nC.newDataArray(data, '{DataArray}')\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '10.9.2'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/Elements_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newElements(None, '{Elements_t}')\nC.newDataArray(data, K.ParentData_s)\nC.newRind(data, N.array([0, 0, 0, 0, 1, 1]))\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '7.3'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/FamilyBC_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import absolute_import\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n#\nfrom . import BCDataSet_t\n\n#\ndata = C.newFamilyBC(None)\ndata[2].append(BCDataSet_t.pattern[0])\n#\nstatus = '12.8'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/FamilyName_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = C.newFamilyName(None, family='{FamilyName}')\nstatus = '-'\ncomment = 'SIDS Leaf node'\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/Family_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newFamily(None, '{Family}')\nC.newGeometryReference(data, '{GeometryReference}')\nC.newRotatingCoordinates(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\nC.newOrdinal(data)\n\n#\nstatus = '12.6'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/FlowEquationSet_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newFlowEquationSet(None)\n#\nstatus = '10.1'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/FlowSolution_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newFlowSolution(None)\nC.newDataArray(data, '{DataArray}')\nC.newRind(data, N.array([0, 0, 0, 0, 1, 1]))\nC.newGridLocation(data)\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '7.7'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/GasModel_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newGasModel(None)\nC.newDataArray(data, '{DataArray}')\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '10.3'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/GeometryReference_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\n#\ndata = C.newGeometryReference(None)\nC.newDataArray(data, '{GeometryEntity}')\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n#\nstatus = '12.7'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n#\n"""
CGNS/PAT/SIDS/GoverningEquations_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = C.newGoverningEquations(None)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\nC.newDiffusionModel(data)\nstatus = '-'\ncomment = 'SIDS GoverningEquations_t'\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/Gravity_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = C.newGravity(None)\nstatus = '-'\ncomment = ''\n\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/GridConnectivity1to1_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['GridConnectivity1to1', None, [], 'GridConnectivity1to1_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/GridConnectivityProperty_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['GridConnectivityProperty', None, [], 'GridConnectivityProperty_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/GridConnectivity_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['GridConnectivity', None, [], 'GridConnectivity_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/GridCoordinates_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = C.newCoordinates(None)\nC.newRind(data, N.array([0, 0, 0, 0, 1, 1]))\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n\nC.newDataArray(data, K.CoordinateX_s)\nC.newDataArray(data, K.CoordinateY_s)\nC.newDataArray(data, K.CoordinateZ_s)\n\nstatus = '7.1'\ncomment = 'Full SIDS with all optionals'\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/GridLocation_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = C.newGridLocation(None)\nstatus = '-'\ncomment = 'SIDS Leaf node'\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/IntegralData_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['IntegralData', None, [], 'IntegralData_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/Ordinal_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['Ordinal', None, [], 'Ordinal_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/OversetHoles_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['OversetHoles', None, [], 'OversetHoles_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/PointList_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['PointList', None, [], 'PointList_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/PointRange_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['PointRange', None, [], 'PointRange_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/ReferenceState_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['ReferenceState', None, [], 'ReferenceState_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/RigidGridMotion_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['RigidGridMotion', None, [], 'RigidGridMotion_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/Rind_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['Rind', None, [], 'Rind_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/RotatingCoordinates_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['RotatingCoordinates', None, [], 'RotatingCoordinates_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/SimulationType_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = C.newSimulationType(None)\nstatus = '-'\ncomment = 'SIDS Leaf node'\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/ThermalConductivityModel_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['ThermalConductivityModel', None, [], 'ThermalConductivityModel_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/ThermalRelaxationModel_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['ThermalRelaxationModel', None, [], 'ThermalRelaxationModel_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/TurbulenceClosure_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['TurbulenceClosure', None, [], 'TurbulenceClosure_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/TurbulenceModel_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = C.newTurbulenceModel(None)\nstatus = '-'\ncomment = 'SIDS Leaf node'\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/UserDefinedData_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['UserDefinedData', None, [], 'UserDefinedData_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/ViscosityModel_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['ViscosityModel', None, [], 'ViscosityModel_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/X_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['X', None, [], 'X_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/ZoneBC_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = C.newZoneBC(None)\n\nC.newReferenceState(data)\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newUserDefinedData(data, '{UserDefinedData}')\nC.newDescriptor(data, '{Descriptor}')\n\nstatus = '-'\ncomment = 'SIDS structural node'\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/ZoneGridConnectivity_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['ZoneGridConnectivity', None, [], 'ZoneGridConnectivity_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/ZoneIterativeData_t.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = ['ZoneIterativeData', None, [], 'ZoneIterativeData_t']\nstatus = ''\ncomment = ''\npattern = [data, status, comment]\n"""
CGNS/PAT/SIDS/Zone_t.py,0,"b'#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib      as C\nimport CGNS.PAT.cgnserrors   as E\nimport CGNS.PAT.cgnskeywords as K\nimport numpy             as N\n\ndata = C.newZone(None, \'{Zone}\', N.array([[5, 4, 0], [7, 7, 0], [9, 8, 0]], order=\'F\'))\n\ng1 = C.newGridCoordinates(data, ""GridCoordinates"")\nC.newRigidGridMotion(data, ""{RigidGridMotion}"")\nC.newArbitraryGridMotion(data, ""{ArbitraryGridMotion}"")\nC.newFlowSolution(data, ""{FlowSolution}"")\nC.newDiscreteData(data, ""{DiscreteData}"")\nC.newIntegralData(data, ""{IntegralData}"")\nC.newZoneGridConnectivity(data, ""{GridConnectivity}"")\nC.newBoundary(data, ""{BC}"", N.array([[0, 0, 0], [0, 0, 0]]))\nC.newZoneIterativeData(data, ""{ZoneIterativeData}"")\nC.newReferenceState(data)\nC.newRotatingCoordinates(data)\nC.newDataClass(data)\nC.newDimensionalUnits(data)\nC.newFlowEquationSet(data)\nC.newConvergenceHistory(data, K.ZoneConvergenceHistory_s)\nC.newUserDefinedData(data, \'{UserDefinedData}\')\nC.newDescriptor(data, \'{Descriptor}\')\nC.newOrdinal(data)\n\nstatus = \'6.3\'\ncomment = \'Full SIDS with all optionals\'\npattern = [data, status, comment]\n'"
CGNS/PAT/SIDS/__init__.py,0,"b""#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import absolute_import\nfrom . import CGNSBase_t\nfrom . import Zone_t\nfrom . import ZoneBC_t\nfrom . import BC_t\nfrom . import DataClass_t\nfrom . import Descriptor_t\nfrom . import DimensionalUnits_t\nfrom . import DimensionalExponents_t\nfrom . import GridLocation_t\nfrom . import PointList_t\nfrom . import PointRange_t\nfrom . import Rind_t\nfrom . import DataConversion_t\nfrom . import SimulationType_t\nfrom . import Ordinal_t\nfrom . import GridCoordinates_t\nfrom . import DataArray_t\nfrom . import DiscreteData_t\nfrom . import Elements_t\nfrom . import BCDataSet_t\nfrom . import BCData_t\nfrom . import BCProperty_t\nfrom . import RotatingCoordinates_t\nfrom . import ZoneGridConnectivity_t\nfrom . import GridConnectivity1to1_t\nfrom . import GridConnectivity_t\nfrom . import GridConnectivityProperty_t\nfrom . import AverageInterface_t\nfrom . import OversetHoles_t\nfrom . import FlowSolution_t\nfrom . import FlowEquationSet_t\nfrom . import GoverningEquations_t\nfrom . import GasModel_t\nfrom . import ThermalConductivityModel_t\nfrom . import ThermalRelaxationModel_t\nfrom . import ChemicalKineticModel_t\nfrom . import EMElectricFieldModel_t\nfrom . import EMMagneticFieldModel_t\nfrom . import EMConductivityModel_t\nfrom . import ViscosityModel_t\nfrom . import TurbulenceClosure_t\nfrom . import TurbulenceModel_t\nfrom . import AxiSymmetry_t\nfrom . import BaseIterativeData_t\nfrom . import ZoneIterativeData_t\nfrom . import RigidGridMotion_t\nfrom . import ArbitraryGridMotion_t\nfrom . import ReferenceState_t\nfrom . import ConvergenceHistory_t\nfrom . import IntegralData_t\nfrom . import UserDefinedData_t\nfrom . import Gravity_t\nfrom . import Family_t\nfrom . import FamilyName_t\nfrom . import FamilyBC_t\nfrom . import GeometryReference_t\n\nprofile = {\n    'CGNSBase_t': CGNSBase_t.pattern,\n    'Zone_t': Zone_t.pattern,\n    'ZoneBC_t': ZoneBC_t.pattern,\n    'BC_t': BC_t.pattern,\n    'DataClass_t': DataClass_t.pattern,\n    'Descriptor_t': Descriptor_t.pattern,\n    'DimensionalUnits_t': DimensionalUnits_t.pattern,\n    'DimensionalExponents_t': DimensionalExponents_t.pattern,\n    'GridLocation_t': GridLocation_t.pattern,\n    'PointList_t': PointList_t.pattern,\n    'PointRange_t': PointRange_t.pattern,\n    'Rind_t': Rind_t.pattern,\n    'DataConversion_t': DataConversion_t.pattern,\n    'SimulationType_t': SimulationType_t.pattern,\n    'Ordinal_t': Ordinal_t.pattern,\n    'GridCoordinates_t': GridCoordinates_t.pattern,\n    'DataArray_t': DataArray_t.pattern,\n    'DiscreteData_t': DiscreteData_t.pattern,\n    'Elements_t': Elements_t.pattern,\n    'BCDataSet_t': BCDataSet_t.pattern,\n    'BCData_t': BCData_t.pattern,\n    'BCProperty_t': BCProperty_t.pattern,\n    'RotatingCoordinates_t': RotatingCoordinates_t.pattern,\n    'ZoneGridConnectivity_t': ZoneGridConnectivity_t.pattern,\n    'GridConnectivity1to1_t': GridConnectivity1to1_t.pattern,\n    'GridConnectivity_t': GridConnectivity_t.pattern,\n    'GridConnectivityProperty_t': GridConnectivityProperty_t.pattern,\n    'AverageInterface_t': AverageInterface_t.pattern,\n    'OversetHoles_t': OversetHoles_t.pattern,\n    'FlowSolution_t': FlowSolution_t.pattern,\n    'FlowEquationSet_t': FlowEquationSet_t.pattern,\n    'GoverningEquations_t': GoverningEquations_t.pattern,\n    'GasModel_t': GasModel_t.pattern,\n    'ThermalConductivityModel_t': ThermalConductivityModel_t.pattern,\n    'ThermalRelaxationModel_t': ThermalRelaxationModel_t.pattern,\n    'ChemicalKineticModel_t': ChemicalKineticModel_t.pattern,\n    'EMElectricFieldModel_t': EMElectricFieldModel_t.pattern,\n    'EMMagneticFieldModel_t': EMMagneticFieldModel_t.pattern,\n    'EMConductivityModel_t': EMConductivityModel_t.pattern,\n    'ViscosityModel_t': ViscosityModel_t.pattern,\n    'TurbulenceClosure_t': TurbulenceClosure_t.pattern,\n    'TurbulenceModel_t': TurbulenceModel_t.pattern,\n    'AxiSymmetry_t': AxiSymmetry_t.pattern,\n    'BaseIterativeData_t': BaseIterativeData_t.pattern,\n    'ZoneIterativeData_t': ZoneIterativeData_t.pattern,\n    'RigidGridMotion_t': RigidGridMotion_t.pattern,\n    'ArbitraryGridMotion_t': ArbitraryGridMotion_t.pattern,\n    'ReferenceState_t': ReferenceState_t.pattern,\n    'ConvergenceHistory_t': ConvergenceHistory_t.pattern,\n    'IntegralData_t': IntegralData_t.pattern,\n    'UserDefinedData_t': UserDefinedData_t.pattern,\n    'Gravity_t': Gravity_t.pattern,\n    'Family_t': Family_t.pattern,\n    'FamilyName_t': FamilyName_t.pattern,\n    'FamilyBC_t': FamilyBC_t.pattern,\n    'GeometryReference_t': GeometryReference_t.pattern,\n}\n#\n"""
CGNS/PAT/test/__init__.py,0,b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n\n\ndef run():\n    import CGNS.PAT.test.cgu\n\n# --- last line\n'
CGNS/PAT/test/cgu.py,0,"b'#  ---------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  ---------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nfrom builtins import (bytes, str, range, dict)\nimport unittest\n\n\n# --------------------------------------------------\n# should not be documented with docstrings\nclass PATTestCase(unittest.TestCase):\n    def setUp(self):\n        self.T = None\n\n    def eStr(self, code):\n        import CGNS.PAT.cgnserrors as CGE\n        return CGE.TAG + CGE.TAG_ERROR + ""\\[%.3d\\].*$"" % code\n\n    def genTree(self):\n        # should not self reference for test\n        # then load tree\n        import CGNS.PAT.test.disk\n        self.T = CGNS.PAT.test.disk.T\n\n    def test_00Module(self):\n        pass\n\n    def test_01Check(self):\n        import CGNS.PAT.cgnsutils as CGU\n        import CGNS.PAT.cgnserrors as CGE\n        import CGNS.PAT.cgnskeywords as CGK\n        self.assertFalse(CGU.checkName(\'/name\'))\n        self.assertFalse(CGU.checkNodeName(3))\n        self.assertFalse(CGU.checkName(3))\n        self.assertFalse(CGU.checkName([\'name\']))\n        self.assertFalse(CGU.checkName(\'\'))\n        self.assertFalse(CGU.checkName(\'x\' * 33))\n        self.assertFalse(CGU.checkName(\'.\'))\n        self.assertFalse(CGU.checkName(\'..\'))\n        self.assertFalse(CGU.checkName(\'         \'))\n        self.assertTrue(CGU.checkName(\'name  test\'))\n        self.assertTrue(CGU.checkName(\'name""test""\'))\n        self.assertTrue(CGU.checkName(\'name\\\\test\'))\n        self.assertTrue(CGU.checkName(\' name\'))\n        self.assertTrue(CGU.checkName(\'name\'))\n        self.assertTrue(CGU.checkName(\'x\' * 32))\n        self.assertTrue(CGU.checkNodeName([\'test\', None, [], \'Zone_t\']))\n        self.assertTrue(CGU.checkNodeName([\'  test\', None, [], \'Zone_t\']))\n        self.assertTrue(CGU.checkNodeName([\'?test#320\', None, [], \'Zone_t\']))\n        self.assertTrue(CGU.checkNodeName([\'test   \', None, [], \'Zone_t\']))\n        self.assertFalse(CGU.checkName(\'name  test\', strict=True))\n        self.assertFalse(CGU.checkName(\'name\\\\test\', strict=True))\n        self.assertFalse(CGU.checkName(\'name""test""\', strict=True))\n        self.assertFalse(CGU.checkName(\' name\', strict=True))\n        import string\n        clist = list(string.ascii_letters + string.digits + string.punctuation + \' \')\n        clist.remove(\'/\')\n        for c in clist:\n            self.assertTrue(CGU.checkName(\'_\' + c))\n        ex = CGE.cgnsNameError\n        fn = CGU.checkName\n        self.assertRaisesRegexp(ex, self.eStr(2), CGU.checkNodeName, [], dienow=True)\n        self.assertRaisesRegexp(ex, self.eStr(22), fn, 3, dienow=True)\n        self.assertRaisesRegexp(ex, self.eStr(23), fn, \'\', dienow=True)\n        self.assertRaisesRegexp(ex, self.eStr(24), fn, \'/\', dienow=True)\n        self.assertRaisesRegexp(ex, self.eStr(25), fn, \'a\' * 33, dienow=True)\n        self.assertRaisesRegexp(ex, self.eStr(29), fn, \'.\', dienow=True)\n        self.assertRaisesRegexp(ex, self.eStr(31), fn, \' \' * 5, dienow=True)\n        self.assertRaisesRegexp(ex, self.eStr(32), fn, \' a\' * 5, dienow=True, strict=True)\n        self.assertRaisesRegexp(ex, self.eStr(33), fn, \'""\', dienow=True, strict=True)\n        self.assertRaisesRegexp(ex, self.eStr(34), fn, \'a  a\', dienow=True, strict=True)\n        self.genTree()\n        self.assertTrue(CGU.checkSameNode(self.T, self.T))\n        self.assertFalse(CGU.checkSameNode(self.T, [None, None, [], None]))\n        self.assertRaisesRegexp(CGE.cgnsNodeError, self.eStr(30), CGU.checkSameNode, self.T, [None, None, [], None],\n                                dienow=True)\n\n    def test_02Path(self):\n        import CGNS.PAT.cgnsutils as CGU\n        import CGNS.PAT.cgnserrors as CGE\n        import CGNS.PAT.cgnskeywords as CGK\n        self.genTree()\n        p = \'/{Base#1}/{Zone-A}/ZoneBC\'\n        self.assertEqual(p, CGU.getPathNoRoot(p))\n        self.assertEqual(p, CGU.getPathNoRoot(\'/CGNSTree\' + p))\n        self.assertEqual(""/"", CGU.getPathNoRoot(\'/CGNSTree\'))\n        self.assertEqual(CGU.getPathNormalize(\'/./{Base#1}/{Zone-A}/ZoneBC\'), p)\n        self.assertEqual(CGU.getPathNormalize(\'/./{Base#1}/{Zone-A}/ZoneBC//\'), p)\n        self.assertEqual(CGU.getPathToList(p), [\'\', \'{Base#1}\', \'{Zone-A}\', \'ZoneBC\'])\n        self.assertEqual(CGU.getPathToList(p, True), [\'{Base#1}\', \'{Zone-A}\', \'ZoneBC\'])\n        self.assertEqual(CGU.getPathAsTypes(self.T, p), [CGK.CGNSTree_ts, CGK.CGNSBase_ts, CGK.Zone_ts, CGK.ZoneBC_ts])\n        zone = [\'Zone\', None, [[\'ZoneBC\', None, [], CGK.ZoneBC_ts]], CGK.Zone_ts]\n        p = \'/Zone/ZoneBC\'\n        self.assertEqual(CGU.getPathAsTypes(zone, p, legacy=False), [CGK.Zone_ts, CGK.ZoneBC_ts])\n        self.assertEqual(CGU.getPathAsTypes(zone, p, legacy=True), [CGK.ZoneBC_ts])\n\n    def test_03NodeStructure(self):\n        import CGNS.PAT.cgnsutils as CGU\n        import CGNS.PAT.cgnserrors as CGE\n        import CGNS.PAT.cgnskeywords as CGK\n        self.assertEqual([\'N1\', None, [], \'N_t\'], CGU.nodeCreate(\'N1\', None, [], \'N_t\'))\n        p = CGU.nodeCreate(\'N1\', None, [], \'N_t\')\n        self.assertEqual([\'N1\', None, [], \'N_t\'], CGU.nodeCreate(\'N1\', None, [], \'N_t\', p))\n        self.assertEqual([\'N1\', None, [], \'N_t\'], p[2][0])\n        n = CGU.nodeCreate(\'N2\', None, [], \'N_t\', p)\n        self.assertNotEqual([\'N1\', None, [], \'N_t\'], p[2][1])\n        self.assertIs(n, p[2][1])\n        self.assertEqual([\'N2\', None, [], \'N_t\'], CGU.nodeCopy(n))\n        c = CGU.nodeCopy(n)\n        self.assertIsNot(n, c)\n        cname = \'NCopy\'\n        c = CGU.nodeCopy(n, cname)\n        self.assertEqual(c[0], cname)\n        del n\n        self.assertEqual(c[0], cname)\n\n    def test_04NodeChildren(self):\n        import CGNS.PAT.cgnsutils as CGU\n        import CGNS.PAT.cgnslib as CGL\n        import CGNS.PAT.cgnserrors as CGE\n        import CGNS.PAT.cgnskeywords as CGK\n        A = [\'A\', None, [], None]\n        B = [\'B\', None, [], None]\n        C = [\'C\', None, [], None]\n        A[2] += [B]\n        CGU.setAsChild(A, C)\n        self.assertTrue(CGU.hasChildName(A, \'B\'))\n        self.assertTrue(CGU.hasChildName(A, \'C\'))\n        self.assertTrue(CGU.checkDuplicatedName(A, \'D\'))\n        self.assertFalse(CGU.checkHasChildName(A, \'D\'))\n        D = CGU.nodeCreate(\'D\', None, [], None, parent=A)\n        self.assertFalse(CGU.checkDuplicatedName(A, \'D\'))\n        self.assertTrue(CGU.checkHasChildName(A, \'D\'))\n        self.assertFalse(CGU.checkNodeType(C))\n        d = {\'None\': None, \'String\': \'string value\', \'Integer\': 10, \'Float\': 1.4}\n        for n, v in d.items():\n            CGL.newDataArray(A, n, v)\n        for name in d:\n            self.assertTrue(CGU.hasChildName(A, name))\n\n    def test_05NodeValue(self):\n        import numpy\n        import CGNS.PAT.cgnsutils as CGU\n        import CGNS.PAT.cgnserrors as CGE\n        import CGNS.PAT.cgnskeywords as CGK\n        self.genTree()\n        v = CGU.getValueByPath(self.T, \'/CGNSTree/CGNSLibraryVersion\')\n        self.assertEqual(v, numpy.array(3.2))\n        n = [\'ZoneType\', numpy.array([\'S\', \'t\', \'r\', \'u\', \'c\', \'t\', \'u\', \'r\', \'e\', \'d\'], dtype=\'S\', order=\'C\'), [],\n             \'ZoneType_t\']\n        self.assertTrue(CGU.stringValueMatches(n, \'Structured\'))\n        # set*AsArray\n        self.assertEqual(CGU.setStringAsArray(\'Structured\').tostring().decode(\'ascii\'), \'Structured\')\n        self.assertEqual(CGU.setIntegerAsArray(1), numpy.array(1, dtype=\'int32\'))\n        self.assertTrue((CGU.setIntegerAsArray(1, 2, 3) == numpy.array([1, 2, 3], dtype=\'int32\')).all())\n        self.assertEqual(CGU.setLongAsArray(1), numpy.array(1, dtype=\'int64\'))\n        self.assertTrue((CGU.setLongAsArray(1, 2, 3) == numpy.array([1, 2, 3], dtype=\'int64\')).all())\n        self.assertEqual(CGU.setFloatAsArray(1), numpy.array(1, dtype=\'float32\'))\n        self.assertTrue((CGU.setFloatAsArray(1, 2, 3) == numpy.array([1, 2, 3], dtype=\'float32\')).all())\n        self.assertEqual(CGU.setDoubleAsArray(1), numpy.array(1, dtype=\'float64\'))\n        self.assertTrue((CGU.setDoubleAsArray(1, 2, 3) == numpy.array([1, 2, 3], dtype=\'float64\')).all())\n        self.assertTrue((CGU.setDoubleAsArray(tuple(range(10, 1010, 10))) == numpy.array(tuple(range(10, 1010, 10)),\n                                                                                         dtype=\'float64\')).all())\n        n = [\'ZoneType\', None, [], \'ZoneType_t\']\n        # set*ByPath\n        self.assertTrue(CGU.stringValueMatches(CGU.setStringByPath(n, \'/\', \'Structured\'), \'Structured\'))\n        self.assertEqual(CGU.setIntegerByPath(n, \'/\', 1)[1], numpy.array(1, dtype=\'int32\'))\n        self.assertTrue(numpy.array_equal(CGU.setIntegerByPath(n, \'/\', 1, 2, 3)[1], numpy.array([1, 2, 3], dtype=\'int32\')))\n        self.assertEqual(CGU.setLongByPath(n, \'/\', 1)[1], numpy.array(1, dtype=\'int64\'))\n        self.assertTrue(numpy.array_equal(CGU.setLongByPath(n, \'/\', 1, 2, 3)[1], numpy.array([1, 2, 3], dtype=\'int64\')))\n        self.assertEqual(CGU.setFloatByPath(n, \'/\', 1)[1], numpy.array(1, dtype=\'float32\'))\n        self.assertTrue(numpy.array_equal(CGU.setFloatByPath(n, \'/\', 1, 2, 3)[1], numpy.array([1, 2, 3], dtype=\'float32\')))\n        self.assertEqual(CGU.setDoubleByPath(n, \'/\', 1)[1], numpy.array(1, dtype=\'float64\'))\n        self.assertTrue(numpy.array_equal(CGU.setDoubleByPath(n, \'/\', 1, 2, 3)[1], numpy.array([1, 2, 3], dtype=\'float64\')))\n        self.assertTrue(numpy.array_equal(CGU.setDoubleByPath(n, \'/\', range(10, 1010, 10))[1],\n                                          numpy.array([range(10, 1010, 10)], dtype=\'float64\')))\n\n    def test_06NodeType(self):\n        import CGNS.PAT.cgnsutils as CGU\n        import CGNS.PAT.cgnserrors as CGE\n        import CGNS.PAT.cgnskeywords as CGK\n        A = [\'A\', None, [], None]\n        B = [\'B\', None, [], None]\n        C = [\'C\', None, [], None]\n        D = [\'D\', None, [], None]\n        A[2] += [B]\n        A[2] += [C]\n        C[3] = \'UnknownType_t\'\n        self.assertFalse(CGU.checkNodeType(C))\n        self.assertFalse(CGU.checkNodeType(C, [CGK.CGNSBase_ts, CGK.Zone_ts]))\n        self.assertFalse(CGU.checkNodeType(C, CGK.CGNSBase_ts))\n        C[3] = CGK.CGNSBase_ts\n        self.assertTrue(CGU.checkNodeType(C))\n        self.assertTrue(CGU.checkNodeType(C, [CGK.CGNSBase_ts, CGK.Zone_ts]))\n        self.assertTrue(CGU.checkNodeType(C, [CGK.Zone_ts, CGK.CGNSBase_ts,\n                                              CGK.Zone_ts]))\n        self.assertTrue(CGU.checkNodeType(C, CGK.CGNSBase_ts))\n\n    def test_07NodeCompliance(self):\n        import CGNS.PAT.cgnsutils as CGU\n        import CGNS.PAT.cgnserrors as CGE\n        import CGNS.PAT.cgnskeywords as CGK\n        import numpy\n        n = CGU.nodeCreate(\'Base\', numpy.array([3, 3]), [], CGK.CGNSBase_ts)\n        z = CGU.nodeCreate(\'ReferenceState\', None, [], CGK.ReferenceState_ts, parent=n)\n        self.assertTrue(CGU.checkNodeCompliant(n, None))\n        self.assertTrue(CGU.checkNodeCompliant(z, None))\n        self.assertTrue(CGU.checkNodeCompliant(z, n, dienow=True))\n        self.assertFalse(CGU.checkNodeCompliant(None, n))\n\n    def test_08NodeRetrieval(self):\n        import CGNS.PAT.cgnsutils as CGU\n        import CGNS.PAT.cgnserrors as CGE\n        import CGNS.PAT.cgnskeywords as CGK\n        self.genTree()\n        p1 = \'/CGNSTree/{Base#1}/{Zone-B}\'\n        self.assertEqual(CGU.getNodeByPath(self.T, p1)[0], \'{Zone-B}\')\n        p2 = \'/CGNSTree/.///{Base#1}/{Zone-B}/../{Zone-A}\'\n        self.assertEqual(CGU.getNodeByPath(self.T, p2)[0], \'{Zone-A}\')\n        p3 = \'/{Base#1}/{Zone-A}/ZoneBC\'\n        n3 = CGU.getNodeByPath(self.T, p3)\n        self.assertEqual(n3[0], \'ZoneBC\')\n        self.assertEqual(CGU.getPathFromNode(self.T, n3), p3)\n        c1 = \'{BC-2}\'\n        n31 = CGU.getNodeByPath(n3, c1)\n        self.assertEqual(n31[0], \'{BC-2}\')\n        self.assertEqual(CGU.getPathFromNode(n3, n31), ""/"" + c1)\n        c2 = \'./{BC-1}\'\n        self.assertEqual(CGU.getNodeByPath(n3, c2)[0], \'{BC-1}\')\n        filter = \'/.*/.*/Zone.*\'\n        v1 = [\'/{Base#1}/{Zone-B}/ZoneBC\', \'/{Base#1}/{Zone-B}/ZoneGridConnectivity\']\n        self.assertEqual(CGU.getPathByNameFilter(self.T, filter)[3:5], v1)\n        filter = \'/.*/.*/.*/GridConnectivity.*\'\n        v2 = \'/{Base#1}/{Zone-D2}/ZoneGridConnectivity/{CT-D2-C}\'\n        self.assertEqual(CGU.getPathByTypeFilter(self.T, filter)[-2], v2)\n        t = CGK.CGNSBase_ts\n        b = CGU.getAncestorByType(self.T, n3, t)\n        self.assertEqual(b[3], t)\n        self.assertIsNone(CGU.getAncestorByType(self.T, b, CGK.Zone_ts))\n        t = CGK.Zone_ts\n        self.assertEqual(CGU.getAncestorByType(b, n3, t)[3], t)\n        for p in CGU.getPathsByTypeSet(self.T, [CGK.BC_ts]):\n            node = CGU.getNodeByPath(self.T, p)\n            self.assertEqual(p, CGU.getPathFromNode(self.T, node))\n        res = CGU.getPathsByTypeOrNameList(self.T, [\'Zaza\'])\n        self.assertEqual(res, [])\n\n    def test_09NodeDelete(self):\n        import CGNS.PAT.cgnsutils as CGU\n        import CGNS.PAT.cgnserrors as CGE\n        import CGNS.PAT.cgnskeywords as CGK\n        import numpy\n        n = CGU.nodeCreate(\'Base\', numpy.array([3, 3]), [], CGK.CGNSBase_ts)\n        r = CGU.nodeCreate(\'ReferenceState\', None, [], CGK.ReferenceState_ts, parent=n)\n        d = CGU.nodeCreate(\'Data\', numpy.array([3.14]), [], CGK.DataArray_ts, parent=r)\n        self.assertIsNotNone(CGU.hasChildName(r, \'Data\'))\n        CGU.nodeDelete(n, d)\n        self.assertIsNone(CGU.hasChildName(r, \'Data\'))\n        d = CGU.nodeCreate(\'DataZ\', numpy.array([3.14]), [], CGK.DataArray_ts, parent=r)\n        self.assertIsNotNone(CGU.hasChildName(r, \'DataZ\'))\n        CGU.nodeDelete(r, d)\n        self.assertIsNone(CGU.hasChildName(r, \'DataZ\'))\n        CGU.nodeDelete(r, d)\n        self.assertIsNone(CGU.hasChildName(r, \'DataZ\'))\n        n = CGU.nodeCreate(\'Base\', numpy.array([3, 3]), [], CGK.CGNSBase_ts)\n        r = CGU.nodeCreate(\'ReferenceState\', None, [], CGK.ReferenceState_ts, parent=n)\n        d = CGU.nodeCreate(\'Data\', numpy.array([3.14]), [], CGK.DataArray_ts, parent=r)\n        self.assertIsNotNone(CGU.getNodeByPath(n, \'/Base/ReferenceState/Data\'))\n        CGU.nodeDelete(n, d)\n        self.assertIsNone(CGU.hasChildName(r, \'Data\'))\n        n = CGU.nodeCreate(\'Base\', numpy.array([3, 3]), [], CGK.CGNSBase_ts)\n        r = CGU.nodeCreate(\'ReferenceState\', None, [], CGK.ReferenceState_ts, parent=n)\n        d = CGU.nodeCreate(\'Data\', numpy.array([3.14]), [], CGK.DataArray_ts, parent=r)\n        self.assertIsNotNone(CGU.getNodeByPath(n, \'/Base/ReferenceState/Data\'))\n        CGU.removeChildByName(r, \'Data\')\n        self.assertIsNone(CGU.hasChildName(r, \'Data\'))\n\n# ---\nprint(\'-\' * 70 + \'\\nCGNS.PAT test suite\')\nsuite = unittest.TestLoader().loadTestsFromTestCase(PATTestCase)\nunittest.TextTestRunner(verbosity=2).run(suite)\n\n# --- last line\n'"
CGNS/PAT/test/disk.py,0,"b'# cannot be used for CFD\nfrom __future__ import unicode_literals\nimport numpy\n\n\nT = [\'CGNSTree\', None, [\n    [\'CGNSLibraryVersion\', numpy.array([3.200000047683716], dtype=\'float32\', order=\'C\'), [], \'CGNSLibraryVersion_t\'],\n    [\'{Base#1}\', numpy.array([3, 3], dtype=\'int32\', order=\'C\'), [\n        [\'Interior\', None, [\n            [\'FamilyBC\', numpy.array([\'B\', \'C\', \'F\', \'a\', \'r\', \'f\', \'i\', \'e\', \'l\', \'d\'], dtype=\'S\', order=\'C\'), [],\n             \'FamilyBC_t\'], ], \'Family_t\'],\n        [\'Exterior\', None, [\n            [\'FamilyBC\', numpy.array([\'B\', \'C\', \'W\', \'a\', \'l\', \'l\'], dtype=\'S\', order=\'C\'), [], \'FamilyBC_t\'], ],\n         \'Family_t\'],\n        [\'{Zone-A}\', numpy.array([[13, 12, 0], [61, 60, 0], [17, 16, 0]], dtype=\'int64\', order=\'F\'), [\n            [\'ZoneType\', numpy.array([\'S\', \'t\', \'r\', \'u\', \'c\', \'t\', \'u\', \'r\', \'e\', \'d\'], dtype=\'S\', order=\'C\'), [],\n             \'ZoneType_t\'],\n            [\'GridCoordinates\', None, [\n                [\'CoordinateX\', None, [], \'DataArray_t\'],\n                [\'CoordinateY\', None, [], \'DataArray_t\'],\n                [\'CoordinateZ\', None, [], \'DataArray_t\'], ], \'GridCoordinates_t\'],\n            [\'ZoneBC\', None, [\n                [\'{BC-2}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 13], [1, 1], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'I\', \'n\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'],\n                [\'{BC-1}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 13], [1, 61], [1, 1]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'E\', \'x\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'],\n                [\'{BC-4}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 13], [61, 61], [1, 17]], dtype=\'int32\', order=\'F\'), [],\n                      \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'E\', \'x\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'],\n                [\'{BC-6}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 13], [1, 61], [17, 17]], dtype=\'int32\', order=\'F\'), [],\n                      \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'E\', \'x\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'], ], \'ZoneBC_t\'],\n            [\'ZoneGridConnectivity\', None, [\n                [\'{CT-A-D}\', numpy.array([\'{\', \'Z\', \'o\', \'n\', \'e\', \'-\', \'D\', \'}\'], dtype=\'S\', order=\'C\'), [\n                    [\'GridConnectivityType\',\n                     numpy.array([\'A\', \'b\', \'u\', \'t\', \'t\', \'i\', \'n\', \'g\'], dtype=\'S\', order=\'C\'), [],\n                     \'GridConnectivityType_t\'],\n                    [\'ConnectivityKeyLocal\', numpy.array([\'A\', \'_\', \'D\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'ConnectivityKeyDonor\', numpy.array([\'D\', \'_\', \'A\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'PointRange\', numpy.array([[1, 1], [1, 61], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                    [\'.Solver#Property\', None, [\n                        [\'globborder\', numpy.array([\'A\', \'_\', \'D\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'globborderdonor\', numpy.array([\'D\', \'_\', \'A\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'jtype\', numpy.array([\'n\', \'o\', \'m\', \'a\', \'t\', \'c\', \'h\'], dtype=\'S\', order=\'C\'), [],\n                         \'DataArray_t\'],\n                        [\'nomatch_special\', numpy.array([\'n\', \'o\', \'n\', \'e\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'type\', numpy.array([\'j\', \'o\', \'i\', \'n\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'], ],\n                     \'UserDefinedData_t\'], ], \'GridConnectivity_t\'],\n                [\'{CT-A-B}\', numpy.array([\'{\', \'Z\', \'o\', \'n\', \'e\', \'-\', \'B\', \'}\'], dtype=\'S\', order=\'C\'), [\n                    [\'Transform\', numpy.array([1, 2, 3], dtype=\'int32\', order=\'C\'), [], \'""int[IndexDimension]""\'],\n                    [\'PointRange\', numpy.array([[13, 13], [1, 61], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                    [\'PointRangeDonor\', numpy.array([[1, 1], [1, 61], [1, 17]], dtype=\'int32\', order=\'F\'), [],\n                     \'IndexRange_t\'], ], \'GridConnectivity1to1_t\'], ], \'ZoneGridConnectivity_t\'],\n            [\'FlowSolution#EndOfRun\', None, [\n                [\'GridLocation\', numpy.array([\'C\', \'e\', \'l\', \'l\', \'C\', \'e\', \'n\', \'t\', \'e\', \'r\'], dtype=\'S\', order=\'C\'),\n                 [], \'GridLocation_t\'],\n                [\'Density\', None, [], \'DataArray_t\'],\n                [\'MomentumX\', None, [], \'DataArray_t\'],\n                [\'MomentumY\', None, [], \'DataArray_t\'],\n                [\'MomentumZ\', None, [], \'DataArray_t\'],\n                [\'EnergyStagnationDensity\', None, [], \'DataArray_t\'], ], \'FlowSolution_t\'], ], \'Zone_t\'],\n        [\'{Zone-B}\', numpy.array([[31, 30, 0], [61, 60, 0], [17, 16, 0]], dtype=\'int64\', order=\'F\'), [\n            [\'ZoneType\', numpy.array([\'S\', \'t\', \'r\', \'u\', \'c\', \'t\', \'u\', \'r\', \'e\', \'d\'], dtype=\'S\', order=\'C\'), [],\n             \'ZoneType_t\'],\n            [\'GridCoordinates\', None, [\n                [\'CoordinateX\', None, [], \'DataArray_t\'],\n                [\'CoordinateY\', None, [], \'DataArray_t\'],\n                [\'CoordinateZ\', None, [], \'DataArray_t\'], ], \'GridCoordinates_t\'],\n            [\'ZoneBC\', None, [\n                [\'{BC-2}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 31], [1, 1], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'I\', \'n\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'],\n                [\'{BC-1}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 31], [1, 61], [1, 1]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'E\', \'x\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'],\n                [\'{BC-4}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 31], [61, 61], [1, 17]], dtype=\'int32\', order=\'F\'), [],\n                      \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'E\', \'x\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'],\n                [\'{BC-6}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 31], [1, 61], [17, 17]], dtype=\'int32\', order=\'F\'), [],\n                      \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'E\', \'x\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'], ], \'ZoneBC_t\'],\n            [\'ZoneGridConnectivity\', None, [\n                [\'{CT-B-A}\', numpy.array([\'{\', \'Z\', \'o\', \'n\', \'e\', \'-\', \'A\', \'}\'], dtype=\'S\', order=\'C\'), [\n                    [\'Transform\', numpy.array([1, 2, 3], dtype=\'int32\', order=\'C\'), [], \'""int[IndexDimension]""\'],\n                    [\'PointRange\', numpy.array([[1, 1], [1, 61], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                    [\'PointRangeDonor\', numpy.array([[13, 13], [1, 61], [1, 17]], dtype=\'int32\', order=\'F\'), [],\n                     \'IndexRange_t\'], ], \'GridConnectivity1to1_t\'],\n                [\'{CT-B-C}\', numpy.array([\'{\', \'Z\', \'o\', \'n\', \'e\', \'-\', \'C\', \'}\'], dtype=\'S\', order=\'C\'), [\n                    [\'GridConnectivityType\',\n                     numpy.array([\'A\', \'b\', \'u\', \'t\', \'t\', \'i\', \'n\', \'g\'], dtype=\'S\', order=\'C\'), [],\n                     \'GridConnectivityType_t\'],\n                    [\'ConnectivityKeyLocal\', numpy.array([\'B\', \'_\', \'C\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'ConnectivityKeyDonor\', numpy.array([\'C\', \'_\', \'B\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'PointRange\', numpy.array([[31, 31], [1, 61], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                    [\'.Solver#Property\', None, [\n                        [\'globborder\', numpy.array([\'B\', \'_\', \'C\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'globborderdonor\', numpy.array([\'C\', \'_\', \'B\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'jtype\', numpy.array([\'n\', \'o\', \'m\', \'a\', \'t\', \'c\', \'h\'], dtype=\'S\', order=\'C\'), [],\n                         \'DataArray_t\'],\n                        [\'nomatch_special\', numpy.array([\'n\', \'o\', \'n\', \'e\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'type\', numpy.array([\'j\', \'o\', \'i\', \'n\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'], ],\n                     \'UserDefinedData_t\'], ], \'GridConnectivity_t\'], ], \'ZoneGridConnectivity_t\'],\n            [\'FlowSolution#EndOfRun\', None, [\n                [\'GridLocation\', numpy.array([\'C\', \'e\', \'l\', \'l\', \'C\', \'e\', \'n\', \'t\', \'e\', \'r\'], dtype=\'S\', order=\'C\'),\n                 [], \'GridLocation_t\'],\n                [\'Density\', None, [], \'DataArray_t\'],\n                [\'MomentumX\', None, [], \'DataArray_t\'],\n                [\'MomentumY\', None, [], \'DataArray_t\'],\n                [\'MomentumZ\', None, [], \'DataArray_t\'],\n                [\'EnergyStagnationDensity\', None, [], \'DataArray_t\'], ], \'FlowSolution_t\'], ], \'Zone_t\'],\n        [\'{Zone-C1}\', numpy.array([[27, 26, 0], [25, 24, 0], [17, 16, 0]], dtype=\'int64\', order=\'F\'), [\n            [\'ZoneType\', numpy.array([\'S\', \'t\', \'r\', \'u\', \'c\', \'t\', \'u\', \'r\', \'e\', \'d\'], dtype=\'S\', order=\'C\'), [],\n             \'ZoneType_t\'],\n            [\'GridCoordinates\', None, [\n                [\'CoordinateX\', None, [], \'DataArray_t\'],\n                [\'CoordinateY\', None, [], \'DataArray_t\'],\n                [\'CoordinateZ\', None, [], \'DataArray_t\'], ], \'GridCoordinates_t\'],\n            [\'ZoneBC\', None, [\n                [\'{BC-1}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 27], [1, 25], [1, 1]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'E\', \'x\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'],\n                [\'{BC-4}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 27], [25, 25], [1, 17]], dtype=\'int32\', order=\'F\'), [],\n                      \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'E\', \'x\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'],\n                [\'{BC-6}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 27], [1, 25], [17, 17]], dtype=\'int32\', order=\'F\'), [],\n                      \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'E\', \'x\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'], ], \'ZoneBC_t\'],\n            [\'ZoneGridConnectivity\', None, [\n                [\'{CT-C1-C2}\', numpy.array([\'{\', \'Z\', \'o\', \'n\', \'e\', \'-\', \'C\', \'2\', \'}\'], dtype=\'S\', order=\'C\'), [\n                    [\'Transform\', numpy.array([1, 2, 3], dtype=\'int32\', order=\'C\'), [], \'""int[IndexDimension]""\'],\n                    [\'PointRange\', numpy.array([[1, 27], [1, 1], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                    [\'PointRangeDonor\', numpy.array([[1, 27], [37, 37], [1, 17]], dtype=\'int32\', order=\'F\'), [],\n                     \'IndexRange_t\'], ], \'GridConnectivity1to1_t\'],\n                [\'{CT-C1-B}\', numpy.array([\'{\', \'Z\', \'o\', \'n\', \'e\', \'-\', \'B\', \'}\'], dtype=\'S\', order=\'C\'), [\n                    [\'GridConnectivityType\',\n                     numpy.array([\'A\', \'b\', \'u\', \'t\', \'t\', \'i\', \'n\', \'g\'], dtype=\'S\', order=\'C\'), [],\n                     \'GridConnectivityType_t\'],\n                    [\'ConnectivityKeyLocal\', numpy.array([\'C\', \'_\', \'B\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'ConnectivityKeyDonor\', numpy.array([\'B\', \'_\', \'C\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'PointRange\', numpy.array([[1, 1], [1, 25], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                    [\'.Solver#Property\', None, [\n                        [\'globborder\', numpy.array([\'C\', \'_\', \'B\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'globborderdonor\', numpy.array([\'B\', \'_\', \'C\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'jtype\', numpy.array([\'n\', \'o\', \'m\', \'a\', \'t\', \'c\', \'h\'], dtype=\'S\', order=\'C\'), [],\n                         \'DataArray_t\'],\n                        [\'nomatch_special\', numpy.array([\'n\', \'o\', \'n\', \'e\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'type\', numpy.array([\'j\', \'o\', \'i\', \'n\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'], ],\n                     \'UserDefinedData_t\'], ], \'GridConnectivity_t\'],\n                [\'{CT-C1-D}\', numpy.array([\'{\', \'Z\', \'o\', \'n\', \'e\', \'-\', \'D\', \'}\'], dtype=\'S\', order=\'C\'), [\n                    [\'GridConnectivityType\',\n                     numpy.array([\'A\', \'b\', \'u\', \'t\', \'t\', \'i\', \'n\', \'g\'], dtype=\'S\', order=\'C\'), [],\n                     \'GridConnectivityType_t\'],\n                    [\'ConnectivityKeyLocal\', numpy.array([\'C\', \'_\', \'D\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'ConnectivityKeyDonor\', numpy.array([\'D\', \'_\', \'C\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'PointRange\', numpy.array([[27, 27], [1, 25], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                    [\'.Solver#Property\', None, [\n                        [\'globborder\', numpy.array([\'C\', \'_\', \'D\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'globborderdonor\', numpy.array([\'D\', \'_\', \'C\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'jtype\', numpy.array([\'n\', \'o\', \'m\', \'a\', \'t\', \'c\', \'h\'], dtype=\'S\', order=\'C\'), [],\n                         \'DataArray_t\'],\n                        [\'nomatch_special\', numpy.array([\'n\', \'o\', \'n\', \'e\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'type\', numpy.array([\'j\', \'o\', \'i\', \'n\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'], ],\n                     \'UserDefinedData_t\'], ], \'GridConnectivity_t\'], ], \'ZoneGridConnectivity_t\'],\n            [\'FlowSolution#EndOfRun\', None, [\n                [\'GridLocation\', numpy.array([\'C\', \'e\', \'l\', \'l\', \'C\', \'e\', \'n\', \'t\', \'e\', \'r\'], dtype=\'S\', order=\'C\'),\n                 [], \'GridLocation_t\'],\n                [\'Density\', None, [], \'DataArray_t\'],\n                [\'MomentumX\', None, [], \'DataArray_t\'],\n                [\'MomentumY\', None, [], \'DataArray_t\'],\n                [\'MomentumZ\', None, [], \'DataArray_t\'],\n                [\'EnergyStagnationDensity\', None, [], \'DataArray_t\'], ], \'FlowSolution_t\'], ], \'Zone_t\'],\n        [\'{Zone-C2}\', numpy.array([[27, 26, 0], [37, 36, 0], [17, 16, 0]], dtype=\'int64\', order=\'F\'), [\n            [\'ZoneType\', numpy.array([\'S\', \'t\', \'r\', \'u\', \'c\', \'t\', \'u\', \'r\', \'e\', \'d\'], dtype=\'S\', order=\'C\'), [],\n             \'ZoneType_t\'],\n            [\'GridCoordinates\', None, [\n                [\'CoordinateX\', None, [], \'DataArray_t\'],\n                [\'CoordinateY\', None, [], \'DataArray_t\'],\n                [\'CoordinateZ\', None, [], \'DataArray_t\'], ], \'GridCoordinates_t\'],\n            [\'ZoneBC\', None, [\n                [\'{BC-2}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 27], [1, 1], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'I\', \'n\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'],\n                [\'{BC-1}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 27], [1, 37], [1, 1]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'E\', \'x\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'],\n                [\'{BC-6}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 27], [1, 37], [17, 17]], dtype=\'int32\', order=\'F\'), [],\n                      \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'E\', \'x\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'], ], \'ZoneBC_t\'],\n            [\'ZoneGridConnectivity\', None, [\n                [\'{CT-C2-B}\', numpy.array([\'{\', \'Z\', \'o\', \'n\', \'e\', \'-\', \'B\', \'}\'], dtype=\'S\', order=\'C\'), [\n                    [\'GridConnectivityType\',\n                     numpy.array([\'A\', \'b\', \'u\', \'t\', \'t\', \'i\', \'n\', \'g\'], dtype=\'S\', order=\'C\'), [],\n                     \'GridConnectivityType_t\'],\n                    [\'ConnectivityKeyLocal\', numpy.array([\'C\', \'_\', \'B\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'ConnectivityKeyDonor\', numpy.array([\'B\', \'_\', \'C\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'PointRange\', numpy.array([[1, 1], [1, 37], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                    [\'.Solver#Property\', None, [\n                        [\'globborder\', numpy.array([\'C\', \'_\', \'B\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'globborderdonor\', numpy.array([\'B\', \'_\', \'C\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'jtype\', numpy.array([\'n\', \'o\', \'m\', \'a\', \'t\', \'c\', \'h\'], dtype=\'S\', order=\'C\'), [],\n                         \'DataArray_t\'],\n                        [\'nomatch_special\', numpy.array([\'n\', \'o\', \'n\', \'e\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'type\', numpy.array([\'j\', \'o\', \'i\', \'n\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'], ],\n                     \'UserDefinedData_t\'], ], \'GridConnectivity_t\'],\n                [\'{CT-C2-D}\', numpy.array([\'{\', \'Z\', \'o\', \'n\', \'e\', \'-\', \'D\', \'}\'], dtype=\'S\', order=\'C\'), [\n                    [\'GridConnectivityType\',\n                     numpy.array([\'A\', \'b\', \'u\', \'t\', \'t\', \'i\', \'n\', \'g\'], dtype=\'S\', order=\'C\'), [],\n                     \'GridConnectivityType_t\'],\n                    [\'ConnectivityKeyLocal\', numpy.array([\'C\', \'_\', \'D\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'ConnectivityKeyDonor\', numpy.array([\'D\', \'_\', \'C\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'PointRange\', numpy.array([[27, 27], [1, 37], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                    [\'.Solver#Property\', None, [\n                        [\'globborder\', numpy.array([\'C\', \'_\', \'D\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'globborderdonor\', numpy.array([\'D\', \'_\', \'C\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'jtype\', numpy.array([\'n\', \'o\', \'m\', \'a\', \'t\', \'c\', \'h\'], dtype=\'S\', order=\'C\'), [],\n                         \'DataArray_t\'],\n                        [\'nomatch_special\', numpy.array([\'n\', \'o\', \'n\', \'e\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'type\', numpy.array([\'j\', \'o\', \'i\', \'n\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'], ],\n                     \'UserDefinedData_t\'], ], \'GridConnectivity_t\'],\n                [\'{CT-C2-C1}\', numpy.array([\'{\', \'Z\', \'o\', \'n\', \'e\', \'-\', \'C\', \'1\', \'}\'], dtype=\'S\', order=\'C\'), [\n                    [\'Transform\', numpy.array([1, 2, 3], dtype=\'int32\', order=\'C\'), [], \'""int[IndexDimension]""\'],\n                    [\'PointRange\', numpy.array([[1, 27], [37, 37], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                    [\'PointRangeDonor\', numpy.array([[1, 27], [1, 1], [1, 17]], dtype=\'int32\', order=\'F\'), [],\n                     \'IndexRange_t\'], ], \'GridConnectivity1to1_t\'], ], \'ZoneGridConnectivity_t\'],\n            [\'FlowSolution#EndOfRun\', None, [\n                [\'GridLocation\', numpy.array([\'C\', \'e\', \'l\', \'l\', \'C\', \'e\', \'n\', \'t\', \'e\', \'r\'], dtype=\'S\', order=\'C\'),\n                 [], \'GridLocation_t\'],\n                [\'Density\', None, [], \'DataArray_t\'],\n                [\'MomentumX\', None, [], \'DataArray_t\'],\n                [\'MomentumY\', None, [], \'DataArray_t\'],\n                [\'MomentumZ\', None, [], \'DataArray_t\'],\n                [\'EnergyStagnationDensity\', None, [], \'DataArray_t\'], ], \'FlowSolution_t\'], ], \'Zone_t\'],\n        [\'{Zone-D1}\', numpy.array([[41, 40, 0], [61, 60, 0], [17, 16, 0]], dtype=\'int64\', order=\'F\'), [\n            [\'ZoneType\', numpy.array([\'S\', \'t\', \'r\', \'u\', \'c\', \'t\', \'u\', \'r\', \'e\', \'d\'], dtype=\'S\', order=\'C\'), [],\n             \'ZoneType_t\'],\n            [\'GridCoordinates\', None, [\n                [\'CoordinateX\', None, [], \'DataArray_t\'],\n                [\'CoordinateY\', None, [], \'DataArray_t\'],\n                [\'CoordinateZ\', None, [], \'DataArray_t\'], ], \'GridCoordinates_t\'],\n            [\'ZoneBC\', None, [\n                [\'{BC-2}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 41], [1, 1], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'I\', \'n\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'],\n                [\'{BC-4}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 41], [61, 61], [1, 17]], dtype=\'int32\', order=\'F\'), [],\n                      \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'E\', \'x\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'],\n                [\'{BC-6}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 41], [1, 61], [17, 17]], dtype=\'int32\', order=\'F\'), [],\n                      \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'E\', \'x\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'], ], \'ZoneBC_t\'],\n            [\'ZoneGridConnectivity\', None, [\n                [\'{CT-D1-C}\', numpy.array([\'{\', \'Z\', \'o\', \'n\', \'e\', \'-\', \'C\', \'}\'], dtype=\'S\', order=\'C\'), [\n                    [\'GridConnectivityType\',\n                     numpy.array([\'A\', \'b\', \'u\', \'t\', \'t\', \'i\', \'n\', \'g\'], dtype=\'S\', order=\'C\'), [],\n                     \'GridConnectivityType_t\'],\n                    [\'ConnectivityKeyLocal\', numpy.array([\'D\', \'_\', \'C\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'ConnectivityKeyDonor\', numpy.array([\'C\', \'_\', \'D\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'PointRange\', numpy.array([[1, 1], [1, 61], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                    [\'.Solver#Property\', None, [\n                        [\'globborder\', numpy.array([\'D\', \'_\', \'C\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'globborderdonor\', numpy.array([\'C\', \'_\', \'D\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'jtype\', numpy.array([\'n\', \'o\', \'m\', \'a\', \'t\', \'c\', \'h\'], dtype=\'S\', order=\'C\'), [],\n                         \'DataArray_t\'],\n                        [\'nomatch_special\', numpy.array([\'n\', \'o\', \'n\', \'e\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'type\', numpy.array([\'j\', \'o\', \'i\', \'n\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'], ],\n                     \'UserDefinedData_t\'], ], \'GridConnectivity_t\'],\n                [\'{CT-D1-A}\', numpy.array([\'{\', \'Z\', \'o\', \'n\', \'e\', \'-\', \'A\', \'}\'], dtype=\'S\', order=\'C\'), [\n                    [\'GridConnectivityType\',\n                     numpy.array([\'A\', \'b\', \'u\', \'t\', \'t\', \'i\', \'n\', \'g\'], dtype=\'S\', order=\'C\'), [],\n                     \'GridConnectivityType_t\'],\n                    [\'ConnectivityKeyLocal\', numpy.array([\'D\', \'_\', \'A\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'ConnectivityKeyDonor\', numpy.array([\'A\', \'_\', \'D\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'PointRange\', numpy.array([[41, 41], [1, 61], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                    [\'.Solver#Property\', None, [\n                        [\'globborder\', numpy.array([\'D\', \'_\', \'A\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'globborderdonor\', numpy.array([\'A\', \'_\', \'D\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'jtype\', numpy.array([\'n\', \'o\', \'m\', \'a\', \'t\', \'c\', \'h\'], dtype=\'S\', order=\'C\'), [],\n                         \'DataArray_t\'],\n                        [\'nomatch_special\', numpy.array([\'n\', \'o\', \'n\', \'e\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'type\', numpy.array([\'j\', \'o\', \'i\', \'n\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'], ],\n                     \'UserDefinedData_t\'], ], \'GridConnectivity_t\'],\n                [\'{CT-D1-D2}\', numpy.array([\'{\', \'Z\', \'o\', \'n\', \'e\', \'-\', \'D\', \'2\', \'}\'], dtype=\'S\', order=\'C\'), [\n                    [\'Transform\', numpy.array([1, 2, 3], dtype=\'int32\', order=\'C\'), [], \'""int[IndexDimension]""\'],\n                    [\'PointRange\', numpy.array([[1, 41], [1, 61], [1, 1]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                    [\'PointRangeDonor\', numpy.array([[1, 41], [1, 61], [17, 17]], dtype=\'int32\', order=\'F\'), [],\n                     \'IndexRange_t\'], ], \'GridConnectivity1to1_t\'], ], \'ZoneGridConnectivity_t\'],\n            [\'FlowSolution#EndOfRun\', None, [\n                [\'GridLocation\', numpy.array([\'C\', \'e\', \'l\', \'l\', \'C\', \'e\', \'n\', \'t\', \'e\', \'r\'], dtype=\'S\', order=\'C\'),\n                 [], \'GridLocation_t\'],\n                [\'Density\', None, [], \'DataArray_t\'],\n                [\'MomentumX\', None, [], \'DataArray_t\'],\n                [\'MomentumY\', None, [], \'DataArray_t\'],\n                [\'MomentumZ\', None, [], \'DataArray_t\'],\n                [\'EnergyStagnationDensity\', None, [], \'DataArray_t\'], ], \'FlowSolution_t\'], ], \'Zone_t\'],\n        [\'{Zone-D2}\', numpy.array([[41, 40, 0], [61, 60, 0], [17, 16, 0]], dtype=\'int64\', order=\'F\'), [\n            [\'ZoneType\', numpy.array([\'S\', \'t\', \'r\', \'u\', \'c\', \'t\', \'u\', \'r\', \'e\', \'d\'], dtype=\'S\', order=\'C\'), [],\n             \'ZoneType_t\'],\n            [\'GridCoordinates\', None, [\n                [\'CoordinateX\', None, [], \'DataArray_t\'],\n                [\'CoordinateY\', None, [], \'DataArray_t\'],\n                [\'CoordinateZ\', None, [], \'DataArray_t\'], ], \'GridCoordinates_t\'],\n            [\'ZoneBC\', None, [\n                [\'{BC-2}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 41], [1, 1], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'I\', \'n\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'],\n                [\'{BC-1}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 41], [1, 61], [1, 1]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'E\', \'x\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'],\n                [\'{BC-4}\',\n                 numpy.array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\', \'e\', \'d\'], dtype=\'S\',\n                             order=\'C\'), [\n                     [\'PointRange\', numpy.array([[1, 41], [61, 61], [1, 17]], dtype=\'int32\', order=\'F\'), [],\n                      \'IndexRange_t\'],\n                     [\'FamilyName\', numpy.array([\'E\', \'x\', \'t\', \'e\', \'r\', \'i\', \'o\', \'r\'], dtype=\'S\', order=\'C\'), [],\n                      \'FamilyName_t\'], ], \'BC_t\'], ], \'ZoneBC_t\'],\n            [\'ZoneGridConnectivity\', None, [\n                [\'{CT-D2-C}\', numpy.array([\'{\', \'Z\', \'o\', \'n\', \'e\', \'-\', \'C\', \'}\'], dtype=\'S\', order=\'C\'), [\n                    [\'GridConnectivityType\',\n                     numpy.array([\'A\', \'b\', \'u\', \'t\', \'t\', \'i\', \'n\', \'g\'], dtype=\'S\', order=\'C\'), [],\n                     \'GridConnectivityType_t\'],\n                    [\'ConnectivityKeyLocal\', numpy.array([\'D\', \'_\', \'C\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'ConnectivityKeyDonor\', numpy.array([\'C\', \'_\', \'D\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'PointRange\', numpy.array([[1, 1], [1, 61], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                    [\'.Solver#Property\', None, [\n                        [\'globborder\', numpy.array([\'D\', \'_\', \'C\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'globborderdonor\', numpy.array([\'C\', \'_\', \'D\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'jtype\', numpy.array([\'n\', \'o\', \'m\', \'a\', \'t\', \'c\', \'h\'], dtype=\'S\', order=\'C\'), [],\n                         \'DataArray_t\'],\n                        [\'nomatch_special\', numpy.array([\'n\', \'o\', \'n\', \'e\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'type\', numpy.array([\'j\', \'o\', \'i\', \'n\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'], ],\n                     \'UserDefinedData_t\'], ], \'GridConnectivity_t\'],\n                [\'{CT-D2-D1}\', numpy.array([\'{\', \'Z\', \'o\', \'n\', \'e\', \'-\', \'D\', \'1\', \'}\'], dtype=\'S\', order=\'C\'), [\n                    [\'Transform\', numpy.array([1, 2, 3], dtype=\'int32\', order=\'C\'), [], \'""int[IndexDimension]""\'],\n                    [\'PointRange\', numpy.array([[1, 41], [1, 61], [17, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                    [\'PointRangeDonor\', numpy.array([[1, 41], [1, 61], [1, 1]], dtype=\'int32\', order=\'F\'), [],\n                     \'IndexRange_t\'], ], \'GridConnectivity1to1_t\'],\n                [\'{CT-D2-A}\', numpy.array([\'{\', \'Z\', \'o\', \'n\', \'e\', \'-\', \'A\', \'}\'], dtype=\'S\', order=\'C\'), [\n                    [\'GridConnectivityType\',\n                     numpy.array([\'A\', \'b\', \'u\', \'t\', \'t\', \'i\', \'n\', \'g\'], dtype=\'S\', order=\'C\'), [],\n                     \'GridConnectivityType_t\'],\n                    [\'ConnectivityKeyLocal\', numpy.array([\'D\', \'_\', \'A\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'ConnectivityKeyDonor\', numpy.array([\'A\', \'_\', \'D\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                    [\'PointRange\', numpy.array([[41, 41], [1, 61], [1, 17]], dtype=\'int32\', order=\'F\'), [], \'IndexRange_t\'],\n                    [\'.Solver#Property\', None, [\n                        [\'globborder\', numpy.array([\'D\', \'_\', \'A\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'globborderdonor\', numpy.array([\'A\', \'_\', \'D\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'jtype\', numpy.array([\'n\', \'o\', \'m\', \'a\', \'t\', \'c\', \'h\'], dtype=\'S\', order=\'C\'), [],\n                         \'DataArray_t\'],\n                        [\'nomatch_special\', numpy.array([\'n\', \'o\', \'n\', \'e\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n                        [\'type\', numpy.array([\'j\', \'o\', \'i\', \'n\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'], ],\n                     \'UserDefinedData_t\'], ], \'GridConnectivity_t\'], ], \'ZoneGridConnectivity_t\'],\n            [\'FlowSolution#EndOfRun\', None, [\n                [\'GridLocation\', numpy.array([\'C\', \'e\', \'l\', \'l\', \'C\', \'e\', \'n\', \'t\', \'e\', \'r\'], dtype=\'S\', order=\'C\'),\n                 [], \'GridLocation_t\'],\n                [\'Density\', None, [], \'DataArray_t\'],\n                [\'MomentumX\', None, [], \'DataArray_t\'],\n                [\'MomentumY\', None, [], \'DataArray_t\'],\n                [\'MomentumZ\', None, [], \'DataArray_t\'],\n                [\'EnergyStagnationDensity\', None, [], \'DataArray_t\'], ], \'FlowSolution_t\'], ], \'Zone_t\'],\n        [\'ReferenceState\', None, [\n            [\'ReferenceStateDescription\', numpy.array(\n                [\'G\', \'l\', \'o\', \'b\', \'a\', \'l\', \' \', \'r\', \'e\', \'f\', \'e\', \'r\', \'e\', \'n\', \'c\', \'e\', \' \', \'s\', \'t\', \'a\',\n                 \'t\', \'e\'], dtype=\'S\', order=\'C\'), [], \'Descriptor_t\'],\n            [\'AngleofAttack\', numpy.array([7.0], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'BetaAngle\', numpy.array([0.0], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'Coef_Area\', numpy.array([0.25], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'Coef_PressureDynamic\', numpy.array([2837.15315566], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'Density\', numpy.array([1.22524863848], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'EnergyStagnationDensity\', numpy.array([256154.399197], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'LengthReference\', numpy.array([0.5], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'Mach\', numpy.array([0.2], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'MomentumX\', numpy.array([82.7597580354], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'MomentumY\', numpy.array([0.0], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'MomentumZ\', numpy.array([10.1616205508], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'Pressure\', numpy.array([101326.898416], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'PressureStagnation\', numpy.array([104192.536703], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'Reynolds\', numpy.array([2330000.0], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'Temperature\', numpy.array([288.15], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'TemperatureStagnation\', numpy.array([290.4552], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'TurbulentSANuTilde\', numpy.array([1.46035471482e-08], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'VelocityMagnitude\', numpy.array([68.0525297105], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'], ],\n         \'ReferenceState_t\'],\n        [\'.Solver#Compute\', None, [\n            [\'artviscosity\', numpy.array([\'d\', \'i\', \'s\', \'s\', \'c\', \'a\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n            [\'avcoef_k2\', numpy.array([1.0], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'avcoef_k4\', numpy.array([0.032], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'avcoef_sigma\', numpy.array([1.0], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'cfl\', numpy.array([1.0], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'fluid\', numpy.array([\'I\', \'d\', \'e\', \'a\', \'l\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n            [\'flux\', numpy.array([\'j\', \'a\', \'m\', \'e\', \'s\', \'o\', \'n\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n            [\'niter\', numpy.array([1000], dtype=\'int32\', order=\'C\'), [], \'DataArray_t\'],\n            [\'ode\', numpy.array([\'r\', \'k\', \'4\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n            [\'phymod\', numpy.array([\'N\', \'S\', \'T\', \'u\', \'r\', \'b\', \'u\', \'l\', \'e\', \'n\', \'t\'], dtype=\'S\', order=\'C\'), [],\n             \'DataArray_t\'],\n            [\'t_cutvar1\', numpy.array([1.78929762604e-08], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'t_harten\', numpy.array([1e-24], dtype=\'float64\', order=\'C\'), [], \'DataArray_t\'],\n            [\'time_algo\', numpy.array([\'s\', \'t\', \'e\', \'a\', \'d\', \'y\'], dtype=\'S\', order=\'C\'), [], \'DataArray_t\'],\n            [\'turbmod\', numpy.array([10], dtype=\'int32\', order=\'C\'), [], \'DataArray_t\'],\n            [\'visclaw\', numpy.array([\'S\', \'u\', \'t\', \'h\', \'e\', \'r\', \'l\', \'a\', \'n\', \'d\'], dtype=\'S\', order=\'C\'), [],\n             \'DataArray_t\'],\n            [\'walldistcompute\',\n             numpy.array([\'m\', \'i\', \'n\', \'i\', \'i\', \'n\', \'t\', \'e\', \'r\', \'f\', \'_\', \'o\', \'r\', \'t\', \'h\', \'o\'], dtype=\'S\',\n                         order=\'C\'), [], \'DataArray_t\'], ], \'UserDefinedData_t\'], ], \'CGNSBase_t\'], ], \'CGNSTree_t\']\n'"
CGNS/VAL/grammars/CGNS_VAL_USER_DEFAULT.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS.NAV - Python package for CFD General Notation System - NAVigater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnstypes as CGT\nimport CGNS.PAT.cgnskeywords as CGK\nimport CGNS.VAL.parse.messages as CGM\nimport CGNS.VAL.parse.generic\n\nmessagetable = (\n    (\'U0101\', CGM.CHECK_WARN, \'No Zone in this Base\'),\n    (\'U0102\', CGM.CHECK_WARN, \'No Structured Zone found\'),\n    (\'U0105\', CGM.CHECK_FAIL, \'At least one structured Zone is required in the Base\'),\n    (\'U0103\', CGM.CHECK_WARN, \'No ReferenceState found at Base level\'),\n    (\'U0104\', CGM.CHECK_WARN, \'No ReferenceState found at Zone level\'),\n    (\'U0107\', CGM.CHECK_WARN, \'No FlowSolution# found for output definition\'),\n    (\'U0108\', CGM.CHECK_WARN, \'No FlowSolution#Init found for fields initialisation\'),\n    (\'U0106\', CGM.CHECK_FAIL, \'Transform is not right-handed (direct)\'),\n    (\'U0109\', CGM.CHECK_FAIL, \'Cannot handle such GridLocation [%s]\'),\n    (\'U0110\', CGM.CHECK_FAIL, \'Cannot handle such ElementType [%s]\'),\n\n    (\'S0300\', CGM.CHECK_FAIL, \'FamilyName is empty\'),\n    (\'S0301\', CGM.CHECK_FAIL, \'Reference to unknown family [%s]\'),\n    (\'S0302\', CGM.CHECK_FAIL, \'Reference to unknown additional family [%s]\'),\n\n    (\'S0602\', CGM.CHECK_FAIL, \'Zone has no GridCoordinates\'),\n    (\'S0603\', CGM.CHECK_FAIL, \'No GridCoordinates_t of name GridCoordinates in zone\'),\n    (\'S0604\', CGM.CHECK_WARN, \'ZoneBC has no BC\'),\n)\n\nUSER_MESSAGES = {}\nfor (k, l, m) in messagetable:\n    USER_MESSAGES[k] = (l, m)\n\n\n# -----------------------------------------------------------------------------\nclass CGNS_VAL_USER_Checks(CGNS.VAL.parse.generic.GenericParser):\n    def __init__(self, log):\n        CGNS.VAL.parse.generic.GenericParser.__init__(self, log)\n        self.log.addMessages(USER_MESSAGES)\n\n    # --------------------------------------------------------------------\n    def Zone_t(self, pth, node, parent, tree, log):\n        rs = CGM.CHECK_OK\n        zt = CGU.hasChildName(node, CGK.ZoneType_s)\n        zv = []\n        if zt is not None:\n            if CGU.stringValueMatches(zt, CGK.Structured_s):\n                cd = self.context[CGK.CellDimension_s][pth]\n                self.context[CGK.IndexDimension_s][pth] = cd\n            elif CGU.stringValueMatches(zt, CGK.Unstructured_s):\n                self.context[CGK.IndexDimension_s][pth] = 1\n            shp = (self.context[CGK.IndexDimension_s][pth], 3)\n            if CGU.getShape(node) != shp:\n                rs = log.push(pth, \'S0009\', CGU.getShape(node))\n            elif CGU.stringValueMatches(zt, CGK.Structured_s):\n                zd = node[1]\n                for nd in range(self.context[CGK.IndexDimension_s][pth]):\n                    zv.append(zd[nd][0])\n                    if ((zd[nd][1] != zd[nd][0] - 1) or (zd[nd][2] != 0)):\n                        rs = log.push(pth, \'S0010\')\n            else:\n                zv.append(node[1][0][0])\n            self.context[CGK.VertexSize_s][pth] = tuple(zv)\n        if CGU.hasChildNodeOfType(node, CGK.FamilyName_ts):\n            basepath = [CGK.CGNSTree_ts, parent[0], node[0]]\n            searchpath = basepath + [CGK.FamilyName_ts]\n            famlist1 = CGU.getAllNodesByTypeOrNameList(tree, searchpath)\n            searchpath = basepath + [CGK.AdditionalFamilyName_ts]\n            famlist2 = CGU.getAllNodesByTypeOrNameList(tree, searchpath)\n            for (famlist, diagmessage) in ((famlist1, \'S0301\'),\n                                           (famlist2, \'S0302\')):\n                for fampath in famlist:\n                    famdefinition = CGU.getNodeByPath(tree, fampath)\n                    if (famdefinition[1] is None):\n                        rs = log.push(pth, \'S0300\')\n                    else:\n                        famtarget = famdefinition[1].tostring().rstrip()\n                        famtargetpath = ""/%s/%s"" % (parent[0], famtarget)\n                        if (famtargetpath not in self.context):\n                            famtargetnode = CGU.getNodeByPath(tree, famtargetpath)\n                            if (famtargetnode is None):\n                                rs = log.push(pth, diagmessage, famtarget)\n                            else:\n                                self.context[famtargetpath][pth] = True\n        if (not CGU.hasChildType(node, CGK.GridCoordinates_ts)):\n            rs = log.push(pth, \'S0602\')\n        elif (not CGU.hasChildName(node, CGK.GridCoordinates_s)):\n            rs = log.push(pth, \'S0603\')\n        if (not CGU.hasChildType(node, CGK.ZoneBC_ts)):\n            rs = log.push(pth, \'S0604\')\n        return rs\n\n    # --------------------------------------------------------------------\n    def ZoneType_t(self, pth, node, parent, tree, log):\n        rs = CGM.CHECK_OK\n        if (not CGU.stringValueInList(node, CGK.ZoneType_l)):\n            rs = log.push(pth, \'S0101\')\n        return rs\n\n    # --------------------------------------------------------------------\n    def CGNSBase_t(self, pth, node, parent, tree, log):\n        rs = CGM.CHECK_OK\n        (cd, pd) = (0, 0)\n        if not CGU.hasChildNodeOfType(node, CGK.Zone_ts):\n            rs = log.push(pth, \'U0101\')\n        else:\n            target = [CGK.CGNSTree_ts, node[0], CGK.Zone_ts, CGK.ZoneType_s]\n            plist = CGU.getAllNodesByTypeOrNameList(tree, target)\n            found = False\n            for p in plist:\n                if (CGU.stringValueMatches(CGU.getNodeByPath(tree, p),\n                                           CGK.Structured_s)):\n                    found = True\n            if not found:\n                rs = log.push(pth, \'U0102\')\n        if not CGU.hasChildNodeOfType(node, CGK.ReferenceState_ts):\n            rs = log.push(pth, \'U0103\')\n        if CGU.getShape(node) != (2,):\n            rs = log.push(pth, \'S0009\', CGU.getShape(node))\n        else:\n            cd = node[1][0]\n            pd = node[1][1]\n            allowedvalues = ((1, 1), (1, 2), (1, 3), (2, 2), (2, 3), (3, 3))\n            if (cd, pd) not in allowedvalues:\n                rs = log.push(pth, \'S0010\', (cd, pd))\n        self.context[CGK.CellDimension_s] = cd\n        self.context[CGK.PhysicalDimension_s] = pd\n        return rs\n\n    # --------------------------------------------------------------------\n    def GridLocation_t(self, pth, node, parent, tree, log):\n        rs = CGM.CHECK_OK\n        val = node[1].tostring()\n        if val not in [CGK.Vertex_s, CGK.CellCenter_s, CGK.FaceCenter_s]:\n            rs = log.push(pth, \'U0109\', val)\n        return rs\n\n# -----\n'"
CGNS/VAL/grammars/CGNS_VAL_USER_SIDS.py,0,b'from CGNS.VAL.grammars.CGNS_VAL_USER_SIDS_ import *\n'
CGNS/VAL/grammars/__init__.py,0,b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\npass\n'
CGNS/VAL/parse/__init__.py,0,b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\npass\n#\n'
CGNS/VAL/parse/checklinks.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\n# Get a link list and a search path list and check it, return diag list\n#\n# A link entry is (target dir, target file, target node, local node, status)\n#\n# the status is the CHLone (but it is unused by this check):\n# S2P_LKOK          link ok\n# S2P_LKNOFILE      file not found in search path\n# S2P_LKIGNORED     link ignored (unused by this check)\n# S2P_LKFILENOREAD  cannot read target file\n# S2P_LKNONODE      cannot find target node\n#\n# Diagnostics are more detailled in this check, diags are associated with\n# a link entry, the search path or with the link list, both can have more\n# than one diag:\n#\n# -- per-link\n# 100 link is ok\n# 101 link is external to the source file\n# 102 link is internal to the source file\n#\n# 200 no source node parent\n# 201 no destination node\n# 202 cannot have read access to destination arg file\n# 203 arg file doesn\'t exists\n# 204 arg file is not a CGNS/HDF5 file\n# 205 arg file found in search path but doesn\'t match with arg dir\n# 206 file name contains a relative path\n# 207 file name contains an absolute path\n# 208 file name contains dangerous characters\n#\n# -- per-link list\n# 300 link list is ok\n# 301 has links to the same node\n# 302 more than one directory used\n#\n# 400 has duplicated entries\n# 401 has conflicting entries for the same node\n# 402 files have different CGNS versions\n# 403 files have different name extensions\n# 404 some files are found as duplicated in different paths\n# 405 unreasonable link depth (more than 3)\n# 406 creates an internal loop\n# 407 creates an external loop\n# 408 mix of relative and plain file names\n#\n# -- per-search path\n# 500 search path is ok\n# 501 has unreachable directories\n# 502 has duplicated used files in different directories\n#\n# In the case of node masking or inconsistency, for example if the CGNSBase\n# dimensions are not the same, if the ReferenceState is masked... the check\n# has to be performed on the resulting merged tree. No diag related to node\n# scoping is emitted by the link check\n#\n# -- Graph construction\n# The graph representation requires a unique node identifier as an 1 to N\n# index for N nodes. The convention is to start from 1 with CGNSTree_t node\n# and then to count nodes during a width-first parse using an alphabetical\n# order of the children names.\n# Once this index is set a tuple if formed for each node with the file index\n# as the first element. If a link is found, the node index is replaced by\n# the target file node index. The construction algorithm is:\n# * the top file is open and parsed, the node index are set.\n# * an internal link is found, actual local file node index is set\n# * an external link is found, the target file is added into pending files\n#   list, and an entry in with the target path of the node and the node local\n#   node index of its is pushed in the pending linked nodes list\n# * next pending file is open and parsed the same way\n# * when no more pending file exists, all pending linked nodes are processed\n#   by adding the target node index as child of the parent entry\n# * when no mode pending linked node exists, the graph is built\n#\n# -- Loop detection\n# The graph is parsed with a depth-first algo, if a node index already exists\n# in the current node chain of indices, there is a loop...\n#\n#  -------------------------------------------------------------------------\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nimport CGNS.MAP\nimport CGNS.PAT.cgnsutils      as CGU\nimport CGNS.PAT.cgnstypes      as CGT\nimport CGNS.PAT.cgnskeywords   as CGK\nimport math\nimport os\n\n\ndef canonicalName(filename):\n    fn = os.path.expanduser(os.path.expandvars(filename))\n    fn = os.path.realpath(os.path.abspath(fn))\n    fn = os.path.normpath(fn)\n    return fn\n\n\nclass CGNSGraph(object):\n    pending = {}\n    fileindex = []\n    index = []\n\n    def __init__(self, filename=None):\n        if (filename is not None):\n            self.parseOneFile(filename)\n\n    def addCanonicalFilename(self, filename):\n        fn = canonicalName(filename)\n        if (fn not in self.fileindex):\n            self.fileindex += [fn]\n            return True\n        return False\n\n    def filenameIndex(self, filename):\n        fn = canonicalName(filename)\n        return self.fileindex.index(fn) + 1\n\n    def parseOneFile(self, filename):\n        if (not self.addCanonicalFilename(filename)): return\n        flags = CGNS.MAP.S2P_NODATA | CGNS.MAP.S2P_FOLLOWLINKS\n        (t, l, p) = CGNS.MAP.load(filename, flags, lksearch=[\'.\'])\n        idx = self.filenameIndex(filename)\n        self.index += CGU.getAllNodesAsWidthFirstIndex(t, idx)\n        self.fillLinksList(idx, l)\n        for el in l:\n            self.parseOneFile(el[0] + \'/\' + el[1])\n        self.solveLinks()\n\n    def fillLinksList(self, idx, l):\n        for lk in l:\n            fn = canonicalName(lk[0] + os.sep + lk[1])\n            print(\'FILE\', fn)\n        print(len(self.fileindex))\n        for i in self.fileindex:\n            print(i)\n\n    def solveLinks(self):\n        pass\n\n    def showIndex(self, sort=False):\n        if (sort):\n            self.index.sort()\n        sz = int(math.log10(max([i[1] for i in self.index])) + 1)\n        fmt = ""%%.2d %%.%dd %%s"" % sz\n        for e in self.index:\n            print(fmt % (e[0], e[1], e[2]))\n\n\nfor i in range(12):\n    g = CGNSGraph(\'/tmp/CHLone-test-008-%.2d.hdf\' % i)\n    g.showIndex()\n'"
CGNS/VAL/parse/findgrammar.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nimport sys\nimport os\nimport os.path\nimport fnmatch\nimport imp\nimport CGNS.VAL.grammars.etablesids as STB\n\nPROFILENAME = 'grammars'\n\n\n#  -------------------------------------------------------------------------\ndef readProfile():\n    try:\n        hdir = os.environ['HOME']\n    except:\n        return {}\n    pdir = '%s%s.CGNS.NAV' % (hdir, os.path.sep)\n    if not os.path.exists(pdir):\n        return {}\n    sys.path.append(pdir)\n    fp, pth, des = imp.find_module('grammars')\n    try:\n        mod = imp.load_module('grammars', fp, pth, des)\n    finally:\n        if fp:\n            fp.close()\n    return mod.Grammars\n\n\n#  -------------------------------------------------------------------------\ndef findAllUserGrammars(verbose=False):\n    kdict = {}\n    for pth in [p for p in sys.path if p != '']:\n        if verbose:\n            print('### scanning', pth)\n        try:\n            for pthroot, dirs, files in os.walk(pth):\n                for fn in files:\n                    if (fnmatch.fnmatch(fn, 'CGNS_VAL_USER_*.py') or\n                            fnmatch.fnmatch(fn, 'CGNS_VAL_USER_*.so')):\n                        gkey = fn[14:-3]\n                        if (gkey in kdict):\n                            if (verbose):\n                                print('### * found grammar:', )\n                                print(gkey, 'already found, ignore this one')\n                        else:\n                            if (verbose):\n                                print('### * found grammar:', gkey)\n                            kdict[fn[14:-3]] = pthroot\n                        if (verbose):\n                            print('### * found in :', pthroot)\n                            if (pthroot not in sys.path):\n                                print('### * previous path is NOT in PYTHONPATH')\n                            else:\n                                print('### * previous path already is in PYTHONPATH')\n\n        except OSError:\n            pass\n    return kdict\n\n\n#  -------------------------------------------------------------------------\ndef findOneUserGrammar(tag, verbose=False):\n    kdict = {}\n    found = False\n    for pth in sys.path:\n        if verbose:\n            print('### scanning', pth)\n        try:\n            for pthroot, dirs, files in os.walk(pth):\n                for fn in files:\n                    if fnmatch.fnmatch(fn, 'CGNS_VAL_USER_%s.py' % tag):\n                        kdict[fn[14:-3]] = pthroot\n                        found = True\n                        break\n                if found:\n                    break\n        except OSError:\n            pass\n        if found:\n            break\n    return kdict\n\n\n#  -------------------------------------------------------------------------\ndef importUserGrammars(key, recurse=False, verbose=False):\n    mod = None\n    modname = 'CGNS_VAL_USER_%s' % key\n    ipath = os.path.split(STB.__file__)[0]\n    sys.path.append(ipath)\n\n    if (verbose):\n        print('### Looking for grammar [%s]' % key)\n    try:\n        tp = imp.find_module(modname)\n    except ImportError:\n        if (verbose):\n            print('### Error: grammar [%s] not found' % key)\n        if (recurse):\n            dk = findOneUserGrammar(key)\n            if (key in dk):\n                sys.path.append(dk[key])\n                if (verbose):\n                    print('### Warning: not in search path [%s]' % dk[key])\n                try:\n                    tp = imp.find_module(modname)\n                except ImportError:\n                    return None\n            else:\n                return None\n        else:\n            return None\n    try:\n        fp = tp[0]\n        if (tp[2][2] != imp.C_EXTENSION):\n            mod = imp.load_module(modname, *tp)\n        else:\n            # print '### CGNS.VAL [info]: Module info',tp\n            mod = imp.load_dynamic(modname, tp[1], tp[0])\n    except:\n        pass\n    finally:\n        if fp:\n            fp.close()\n    return mod\n\n\n#  -------------------------------------------------------------------------\ndef locateGrammars():\n    glist = []\n    for k in ['SIDS', 'elsA']:\n        mod = importUserGrammars(k)\n        if mod is not None:\n            glist.append((k, mod.__file__))\n    return glist\n\n# ---\n"""
CGNS/VAL/parse/generic.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS.VAL - Python package for CFD General Notation System - VALidater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nimport CGNS.PAT.cgnsutils      as CGU\nimport CGNS.PAT.cgnstypes      as CGT\nimport CGNS.PAT.cgnskeywords   as CGK\nimport CGNS.PAT.cgnserrors     as CGE\nimport CGNS.VAL.parse.messages as CGM\n\nimport inspect\n\ngenericmessages = {\n    \'G0001\': (CGM.CHECK_FAIL, \'CGNSLibraryVersion [%s] is too old wrt check level\'),\n    \'G0002\': (CGM.CHECK_FAIL, \'CGNSLibraryVersion is incorrect\'),\n    \'G0003\': (CGM.CHECK_FAIL, \'Name [%s] is not valid\'),\n    \'G0004\': (CGM.CHECK_FAIL, \'Name [%s] is a duplicated child name\'),\n    \'G0005\': (CGM.CHECK_FAIL, \'PANIC: Cannot find node with path [%s]\'),\n    \'G0006\': (CGM.CHECK_FAIL, \'PANIC: Node data is not numpy.ndarray or None\'),\n    \'G0007\': (CGM.CHECK_FAIL, \'PANIC: Node children is not a list\'),\n    \'G0008\': (CGM.CHECK_FAIL, \'PANIC: Node name is not a string\'),\n    \'G0009\': (CGM.CHECK_FAIL, \'PANIC: Node is not a list of 4 objects\'),\n    \'G0010\': (CGM.CHECK_FAIL, \'PANIC: Node is empty list or None\'),\n    \'G0011\': (CGM.CHECK_FAIL, \'PANIC: Node name is empty string\'),\n    \'G0012\': (CGM.CHECK_FAIL, \'PANIC: Node name has forbidden chars\'),\n    \'G0013\': (CGM.CHECK_FAIL, \'PANIC: Node name is . or ..\'),\n    \'G0014\': (CGM.CHECK_FAIL, \'PANIC: Node name is too long\'),\n    \'G0015\': (CGM.CHECK_FAIL, \'Bad node value data type\'),\n    \'S0001\': (CGM.CHECK_FAIL, \'Unknown SIDS type [%s]\'),\n    \'S0002\': (CGM.CHECK_FAIL, \'SIDS type [%s] not allowed as child of [%s]\'),\n    \'S0003\': (CGM.CHECK_FAIL, \'SIDS type [%s] not allowed for this node\'),\n    \'S0004\': (CGM.CHECK_FAIL, \'DataType [%s] not allowed for this node\'),\n    \'S0005\': (CGM.CHECK_FAIL, \'Node [%s] of type [%s] not allowed as child\'),\n    \'S0006\': (CGM.CHECK_FAIL, \'Node [%s] of type [%s] allowed only once as child\'),\n    \'S0007\': (CGM.CHECK_FAIL, \'Node [%s] of type [%s] is mandatory\'),\n    \'S0008\': (CGM.CHECK_FAIL, \'Child name [%s] reserved for a type in [%s]\'),\n    \'S0009\': (CGM.CHECK_FAIL, \'Bad node shape [%s]\'),\n    \'S0010\': (CGM.CHECK_FAIL, \'Bad node value\'),\n}\n\n\nclass PathContext(dict):\n    def __getitem__(self, path):\n        if path not in self:\n            return self.scope(path)\n        return dict.__getitem__(self, path)\n\n    def scope(self, path):\n        if path in self:\n            return dict.__getitem__(self, path)\n        level = 1\n        while True:\n            apath = CGU.getPathAncestor(path, level)\n            if apath in self:\n                return dict.__getitem__(self, apath)\n            if apath == \'/\':\n                return None\n            level += 1\n\n\nclass GenericContext(dict):\n    def __getitem__(self, key):\n        if (key not in self):\n            dict.__setitem__(self, key, PathContext())\n        return dict.__getitem__(self, key)\n\n    def __setitem__(self, key, value):\n        d = self[key]\n        d[\'/\'] = value\n\n\nclass GenericParser(object):\n    # --------------------------------------------------------------------\n    def __init__(self, log=None):\n        self._stop = False\n        self.keywordlist = CGK.cgnsnames\n        if log is None:\n            self.log = CGM.DiagnosticLog()\n        self.log.addMessages(genericmessages)\n        self.context = GenericContext()\n        self._trace = False\n\n    # --------------------------------------------------------------------\n    def dbg(self, msg, *args):\n        if self._trace:\n            print(\'> %-24s\' % msg, )\n            if args:\n                for a in args:\n                    print(a, )\n            print("""")\n\n    # --------------------------------------------------------------------\n    def listDiagnostics(self):\n        return self.log.listMessages()\n\n    # --------------------------------------------------------------------\n    def checkLeafStructure(self, T, path, node, parent):\n        stt = CGM.CHECK_GOOD\n        try:\n            CGU.checkNode(node, dienow=True)\n            CGU.checkNodeName(node, dienow=True)\n            CGU.checkDuplicatedName(parent, node[0], dienow=True)\n            CGU.checkNodeType(node, dienow=True)\n            if (node[1] is not None):\n                CGU.checkArray(node[1], dienow=True)\n        except CGE.cgnsException as v:\n            if (v.code == 1):\n                stt = self.log.push(path, \'G0010\')\n            if (v.code == 2):\n                stt = self.log.push(path, \'G0009\')\n            if (v.code == 3):\n                stt = self.log.push(path, \'G0008\')\n            if (v.code == 4):\n                stt = self.log.push(path, \'G0007\')\n            if (v.code == 5):\n                stt = self.log.push(path, \'G0006\')\n            if (v.code == 22):\n                stt = self.log.push(path, \'G0008\')\n            if (v.code == 23):\n                stt = self.log.push(path, \'G0011\')\n            if (v.code == 24):\n                stt = self.log.push(path, \'G0012\')\n            if (v.code == 25):\n                stt = self.log.push(path, \'G0014\')\n            if (v.code == 29):\n                stt = self.log.push(path, \'G0013\')\n            if (v.code == 31):\n                stt = self.log.push(path, \'G0011\')\n            if (v.code == 32):\n                stt = self.log.push(path, \'G0011\')\n            if (v.code == 111):\n                stt = self.log.push(path, \'G0015\')\n            if (self._stop):\n                raise CGE.cgnsException(-1)\n        return stt\n\n    # --------------------------------------------------------------------\n    def checkLeaf(self, T, path, node):\n        parent = CGU.getParentFromNode(T, node)\n        status1 = self.checkSingleNode(T, path, node, parent)\n        status2 = status1\n        ntype = CGU.getTypeAsGrammarToken(node[3])\n        if (len(node) == 4) and (ntype in self.methods):\n            status2 = getattr(self, ntype)(*[path, node, parent, T, self.log])\n        else:\n            # if (ntype in CGK.cgnstypes): print \'\\nSKIP \',ntype\n            pass\n        status1 = CGM.getWorst(status1, status2)\n        if self._stop and status1 == CGM.CHECK_FAIL:\n            raise CGE.cgnsException(-1)\n        return status1\n\n    # --------------------------------------------------------------------\n    def checkSingleNode(self, T, path, node, parent):\n        stt = CGM.CHECK_GOOD\n        if (not CGU.checkNodeName(node)):\n            stt = self.log.push(path, \'G0003\', node[0])\n        lchildren = CGU.childNames(parent)\n        if (lchildren):\n            if (node[0] in lchildren):\n                lchildren.remove(node[0])\n            if (node[0] in lchildren):\n                stt = self.log.push(path, \'G0004\', node[0])\n        tlist = CGU.getNodeAllowedChildrenTypes(parent, node)\n        if ((CGU.getTypeAsGrammarToken(node[3]) not in tlist) and\n                (node[3] != CGK.CGNSTree_ts)):\n            if (parent is not None):\n                stt = self.log.push(path, \'S0002\', node[3], parent[3])\n            else:\n                stt = self.log.push(path, \'S0003\', node[3])\n        dlist = CGU.getNodeAllowedDataTypes(node)\n        dt = CGU.getValueDataType(node)\n        if (dt not in dlist):\n            stt = self.log.push(path, \'S0004\', dt)\n        if (node[3] not in CGT.types.keys()):\n            stt = self.log.push(path, \'S0001\', node[3])\n        else:\n            stt = self.checkCardinalityOfChildren(T, path, node, parent)\n            stt = self.checkReservedChildrenNames(T, path, node, parent)\n        return stt\n\n    # --------------------------------------------------------------------\n    def checkTreeStructure(self, T, path=\'\'):\n        status = CGM.CHECK_GOOD\n        status = self.checkLeafStructure(T, path, T, None)\n        if (status == CGM.CHECK_GOOD):\n            path = path + \'/\' + T[0]\n            for c in T[2]:\n                status = self.checkTreeStructure(c, path)\n        return status\n\n    # --------------------------------------------------------------------\n    def checkTree(self, T, trace=False, stop=False):\n        self._stop = stop\n        self._trace = trace\n        status1 = CGM.CHECK_GOOD\n        if (self._trace):\n            print(\'### Parsing node paths...\')\n        status1 = self.checkTreeStructure(T)\n        if (status1 != CGM.CHECK_GOOD):\n            return status1\n        paths = CGU.getPathFullTree(T, width=True)\n        sz = len(paths) + 1\n        ct = 1\n        if (not hasattr(self, \'methods\')):\n            self.methods = []\n            for m in inspect.getmembers(self):\n                if ((m[0][-2:] == \'_t\') or (m[0][-2:] == \'_n\') or (m[0][-3:] == \'_ts\')):\n                    self.methods += [m[0]]\n        for path in [\'/\'] + paths:\n            if (self._trace):\n                print(\'### Check node [%.6d/%.6d]\\r\' % (ct, sz), )\n            node = CGU.getNodeByPath(T, path)\n            status2 = CGM.CHECK_GOOD\n            if (node is None):\n                status2 = self.log.push(path, \'G0005\', path)\n                if (self._stop):\n                    raise CGE.cgnsException(-1)\n            if (status2 == CGM.CHECK_GOOD):\n                status2 = self.checkLeaf(T, path, node)\n            status1 = status2\n            ct += 1\n        if self._trace:\n            print("""")\n        return status1\n\n    # --------------------------------------------------\n    def checkCardinalityOfChildren(self, T, path, node, parent):\n        stt = CGM.CHECK_GOOD\n        for child in node[2]:\n            card = CGT.types[node[3]].cardinality(child[3])\n            if (card == CGT.C_00):\n                if (path == \'/\'):\n                    cpath = \'/%s\' % (child[0])\n                else:\n                    cpath = \'%s/%s\' % (path, child[0])\n                stt = self.log.push(path, \'S0005\', cpath, child[3])\n            if (card in [CGT.C_11, CGT.C_01]):\n                if ([c[3] for c in node[2]].count(child[3]) > 1):\n                    stt = self.log.push(path, \'S0006\', child[0], child[3])\n        for tchild in CGT.types[node[3]].children:\n            card = CGT.types[node[3]].cardinality(tchild[0])\n            if (card in [CGT.C_11, CGT.C_1N]):\n                if ([c[3] for c in node[2]].count(tchild[0]) < 1):\n                    stt = self.log.push(path, \'S0007\', tchild[1][0], tchild[0])\n        return stt\n\n    # --------------------------------------------------\n    def checkReservedChildrenNames(self, T, path, node, parent):\n        stt = CGM.CHECK_GOOD\n        for child in node[2]:\n            rt = CGT.types[node[3]].hasReservedNameType(child[0])\n            if ((rt != []) and (child[3] not in rt)):\n                srt = """"\n                for s in rt:\n                    srt = srt + "","" + s\n                stt = self.log.push(path, \'S0008\', child[0], srt[1:])\n        return stt\n\n    # --------------------------------------------------------------------\n    def CGNSLibraryVersion_t(self, pth, node, parent, tree, log):\n        stt = CGM.CHECK_OK\n        try:\n            version = int(node[1][0] * 1000)\n            if version < 2400:\n                stt = self.log.push(pth, \'G0001\', version)\n            if version > 3400:\n                stt = self.log.push(pth, \'G0002\')\n        except Exception:\n            stt = self.log.push(pth, \'G0002\')\n        return stt\n\n# --- last line\n'"
CGNS/VAL/parse/messages.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport string\n\nCHECK_NONE = 0\nCHECK_OK = CHECK_GOOD = CHECK_PASS = 1\nCHECK_INFO = CHECK_WARN = 2\nCHECK_BAD = CHECK_ERROR = CHECK_FAIL = 3\nCHECK_USER = 4\n\n\n# def sortDiagByKey(d1, d2):\n#     (k1, k2) = (d1.key, d2.key)\n#     return k1 > k2\n\n\ndef getWorst(st1, st2):\n    if (CHECK_FAIL in [st1, st2]):\n        return CHECK_FAIL\n    if (CHECK_USER in [st1, st2]):\n        return CHECK_USER\n    if (CHECK_WARN in [st1, st2]):\n        return CHECK_WARN\n    if (CHECK_GOOD in [st1, st2]):\n        return CHECK_GOOD\n    return CHECK_NONE\n\n\nclass DiagnosticMessagePattern(object):\n    __levelstr = {CHECK_FAIL: \'E\', CHECK_USER: \'U\',\n                  CHECK_WARN: \'W\', CHECK_GOOD: \' \', CHECK_NONE: \'?\'}\n\n    def __init__(self, mkey, mlevel, mstring):\n        self._key = mkey\n        self._lvl = mlevel\n        self._str = mstring\n\n    @property\n    def key(self):\n        return self._key\n\n    @property\n    def level(self):\n        return self._lvl\n\n    @property\n    def message(self):\n        return self._str\n\n    def levelAsStr(self):\n        return self.__levelstr[self._lvl]\n\n    def __str__(self):\n        return \'[%s:%s] %s\' % (self._key, self.levelAsStr(), self._str)\n\n    def notSubst(self):\n        return \'%\' in self._str\n\n    def forceLevel(self, l):\n        self._lvl = l\n\n\nclass DiagnosticMessageInstance(DiagnosticMessagePattern):\n    def __init__(self, pattern):\n        super(DiagnosticMessageInstance, self).__init__(pattern.key, pattern.level, pattern.message)\n\n    def substitute(self, *tp):\n        msg = self._str\n        try:\n            if (tp): msg = msg % tp\n        except TypeError:\n            pass\n        self._str = msg\n        return self\n\n    def __str__(self):\n        return \'(""%s"",""%s"",""""""%s"""""")\' % (self._key, self.levelAsStr(), self._str)\n\n\nclass DiagnosticLog(dict):\n    __messages = {}\n\n    def __init__(self):\n        dict.__init__(self)\n\n    def merge(self, log):\n        self.update(log)\n\n    def listMessages(self):\n        return self.__messages\n\n    def noContextMessage(self, m):\n        if (DiagnosticLog.__messages[m].notSubst()): return None\n        return DiagnosticLog.__messages[m].message\n\n    def addMessage(self, k, m):\n        DiagnosticLog.__messages[k] = DiagnosticMessageInstance(*m)\n\n    def addMessages(self, d):\n        for e in d:\n            DiagnosticLog.__messages[e] = DiagnosticMessagePattern(e, d[e][0], d[e][1])\n\n    def push(self, path, messagekey, *tp):\n        if (path is None): return\n        if (path not in self): self[path] = []\n        if (messagekey not in DiagnosticLog.__messages): return\n        entry = DiagnosticMessageInstance(DiagnosticLog.__messages[messagekey])\n        self[path].append(entry.substitute(*tp))\n        return DiagnosticLog.__messages[messagekey].level\n\n    def __len__(self):\n        return len(self.keys())\n\n    def shift(self, path, shiftstring=\' \'):\n        n = path.split(\'/\')\n        return len(n) * shiftstring\n\n    def getWorst(self, st1, st2):\n        return getWorst(st1, st2)\n\n    def status(self, entry):\n        return entry.level\n\n    def hasOnlyKey(self, path, keylist):\n        k1 = set(keylist)\n        k2 = set([e.key for e in self[path]])\n        return k2.issubset(k1)\n\n    def key(self, entry):\n        return entry.key\n\n    def message(self, entry, path=None):\n        shft = \'\'\n        if (path is not None): shft = self.shift(path)\n        s = \'%s[%s:%s] %s\' % (shft, entry.key, entry.levelAsStr(), entry.message)\n        return s\n\n    def getWorstDiag(self, path):\n        s = set([e.level for e in self[path]])\n        try:\n            r = list(s)[0]\n            for x in s:\n                r = getWorst(r, x)\n        except:\n            r = CHECK_NONE\n        return r\n\n    def diagForPath(self, path):\n        if (path in self): return self[path]\n        return None\n\n    def allMessageKeys(self):\n        r = set()\n        for path in self:\n            for entry in self[path]:\n                r.add(entry.key)\n        mlist = list(r)\n        mlist.sort()\n        return mlist\n\n    def allPathKeys(self):\n        return list(self)\n\n    def diagnosticsByPath(self, path):\n        if (self.diagForPath(path) is not None):\n            dlist = self[path]\n            dlist.sort(key=lambda x: x.key)\n            for diag in dlist:\n                yield (diag, path)\n\n    def diagnosticsByMessage(self, msg):\n        plist = list(self)\n        plist.sort()\n        for path in plist:\n            for diag in self[path]:\n                if (diag.key == msg): yield (diag, path)\n\n    def __str__(self):\n        s = ""{\\n""\n        for path in self:\n            s += ""\'%s\':\\n"" % path\n            for diag in self[path]:\n                s += ""  %s,\\n"" % diag\n        s += ""}\\n""\n        return s\n\n    def forceAsWarning(self, key):\n        if (key in DiagnosticLog.__messages):\n            DiagnosticLog.__messages[key].forceLevel(CHECK_WARN)\n\n    def forceAsFailure(self, key):\n        if (key in DiagnosticLog.__messages):\n            DiagnosticLog.__messages[key].forceLevel(CHECK_FAIL)\n\n# --- last line\n'"
CGNS/VAL/parse/utils.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nimport numpy as NPY\n\n\ndef transformCheckValues(data, cdim):\n    if (int(cdim) not in (1, 2, 3)): return False\n    adata = map(abs, data)\n    if ((cdim == 1) and (1 not in adata)): return False\n    if ((cdim == 2) and (set(adata) != set((1, 2)))): return False\n    if ((cdim == 3) and (set(adata) != set((1, 2, 3)))): return False\n    return True\n\n\ndef transformAsVector(data, cdim):\n    v = [None] * cdim\n    for n in range(cdim):\n        v[n] = [0, 0, 0]\n        v[n][abs(data[n]) - 1] = 1 * NPY.sign(data[n])\n    return v\n\n\ndef transformIsRightHanded(data, cdim):\n    return transformIsDirect(data, cdim)\n\n\ndef transformIsDirect(data, cdim):\n    if (not transformCheckValues(data, cdim)):\n        return False\n    v = transformAsVector(data, cdim)\n    if cdim == 3:\n        return NPY.all(v[2] == NPY.cross(v[0], v[1]))\n    return True\n'"
CGNS/VAL/suite/__init__.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\npass\n# run the whole suite with:\n#\n#   python -c 'import CGNS.VAL.suite.run'\n#\n# To save all tests files in a CGNS/HDF files, set the shell variable\n# CGNS_VAL_SAVE_FILES, create a directory and run the test in this directory.\n#\n#   mkdir files\n#   cd files\n#   export CGNS_VAL_SAVE_FILES=1\n#   python -c 'import CGNS.VAL.suite.run'\n#\n# To run and compare with cgnscheck:\n#\n#   export CGNS_VAL_RUN_CGNSCHECK=1\n#\n# Files *.hdf are results or the CGNS/Python tree creation, *-fail-*\n# trees may be unreadable.\n# Files *.diag are CGNS.VAL output diagnostic\n# Files *.cgnscheck are output files from cgnscheck\n#\n# Do not forget to remove files from one run to another...\n#\n"""
CGNS/VAL/suite/run.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\n#\nfrom __future__ import unicode_literals\nimport CGNS.VAL.simplecheck as CGV\nimport CGNS.MAP\nimport importlib\nimport sys\nimport os\nimport string\n\nKEY = 'SAMPLE'\nFILES = False\nCGNSCHECK = False\nTRACE = False\n\ntry:\n    import CGNS.PRO\n\n    KEY = 'SIDS'\nexcept ImportError:\n    pass\n\ntry:\n    if 'CGNS_VAL_SAVE_FILES' in os.environ:\n        FILES = True\nexcept:\n    pass\n\ntry:\n    if 'CGNS_VAL_RUN_CGNSCHECK' in os.environ:\n        CGNSCHECK = True\nexcept:\n    pass\n\n\ndef cgcheck(filenametag):\n    os.system('cgnscheck %s.hdf 1>%s.cgnscheck 2>&1' % (filenametag, filenametag))\n\n\ndef runSuite(suite, trace, savefile=False, cgnscheck=False):\n    s = importlib.import_module('.%s' % suite, 'CGNS.VAL.suite')\n    tlist = []\n    count = 1\n    if s is not None:\n        p = os.path.split(s.__file__)[0]\n        l = os.listdir(p)\n        for t in l:\n            if ((t[0] != '_') and (t[-3:] == '.py')\n                and (t[0] in string.digits)\n                and (t[1] in string.digits)):\n                tlist.append(t[:-3])\n    for t in tlist:\n        tdlist = loadTree(suite, t)\n        for (tag, T, diag) in tdlist:\n            sr = valTree(suite, t, tag, T, diag, trace, count)\n            if diag:\n                k = 'pass'\n            else:\n                k = 'fail'\n            if (savefile):\n                fname = '%.4d-%s-%s-%s.hdf' % (count, k, suite, t)\n                try:\n                    CGNS.MAP.save(fname, T)\n                except CGNS.MAP.error as e:\n                    sr += '### * CHLone save error %d:%s\\n' % (e[0], e[1])\n                f = open('%.4d-%s-%s-%s.diag' % (count, k, suite, t), 'w+')\n                f.write(sr)\n                f.close()\n                if (cgnscheck):\n                    cgcheck('%.4d-%s-%s-%s' % (count, k, suite, t))\n            count += 1\n\n\ndef loadTree(key, test):\n    m = importlib.import_module('.%s' % test, 'CGNS.VAL.suite.%s' % key)\n    return (m.TESTS)\n\n\ndef valTree(suite, t, tag, T, diag, trace, count):\n    sr = ''\n    r = CGV.compliant(T, False, [KEY])\n    if diag:\n        k = 'pass'\n    else:\n        k = 'fail'\n    if r[0] == diag:\n        (v1, v2) = ('pass', 'expected')\n    else:\n        (v1, v2) = ('FAIL', 'UNEXPECTED')\n    if trace:\n        sr += '###\\n'\n    sr += '### [%s/%s] %.4d-%s-%s-%s (%s)\\n' % (KEY, v1, count, k, suite, t, tag)\n    for m in r[1]:\n        sr += '### > %s error on: %s\\n' % (v2, m[0])\n        sr += '### > %s\\n' % (m[1])\n    if trace:\n        print(sr)\n    return sr\n\n\ndef runall():\n    tlist = ('SIDS',)\n    for s in tlist:\n        KEY = s\n        runSuite(s, TRACE, FILES, CGNSCHECK)\n"""
CGNS/VAL/test/__init__.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\n\n\ndef run():\n    import CGNS.VAL.test.cgu\n\n\ndef run2():\n    print('### pyCGNS TEST: starting VAL tests')\n    import CGNS.VAL.suite.run\n    CGNS.VAL.suite.run.runall()\n\n# --- last line\n"""
CGNS/VAL/test/cgu.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System -\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\n# TESTING VAL\n#\nfrom __future__ import unicode_literals\nfrom __future__ import print_function\nimport unittest\n\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nimport importlib\nimport os\nimport string\nimport subprocess\n\n\nclass VALTestCase(unittest.TestCase):\n    def setUp(self):\n        pass\n\n    def test_001_Base_write_close(self):\n        import CGNS.VAL.suite.run\n        CGNS.VAL.suite.run.runall()\n\n\n# ---\nprint('-' * 70 + '\\nCGNS.VAL test suite')\nsuite = unittest.TestLoader().loadTestsFromTestCase(VALTestCase)\nunittest.TextTestRunner(verbosity=2).run(suite)\n\n# --- last line\n"""
CGNS/APP/examples/MAP/dictionnary.py,0,"b'#!/usr/bin/env python\n# -------------------------------------------------------------------------\n# pyCGNS.MAP - CFD General Notation System - SIDS-to-Python MAPping            \n# See license.txt file in the root directory of this Python module source  \n# -------------------------------------------------------------------------\n#\nimport CGNS.MAP\n\nprint(CGNS.MAP.flags)\n\nfor k in CGNS.MAP.flags:\n    print(k, CGNS.MAP.__dict__[k])\n'"
CGNS/APP/examples/MAP/links.py,0,"b'#!/usr/bin/env python\n#  -------------------------------------------------------------------------\n#  pyCGNS.APP - Python package for CFD General Notation System - APPlicater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import print_function\nimport CGNS.MAP\nimport time\n\nprint(\'CGNS.MAP.load(links)\')\nflags=CGNS.MAP.S2P_DEFAULTS|CGNS.MAP.S2P_FOLLOWLINKS|CGNS.MAP.S2P_TRACE\nstart=time.clock()\n(tree,links,paths)=CGNS.MAP.load(""T1.cgns"",flags=flags)\nprint(links)\nend=time.clock()\nprint(\'time =\',end-start)\n\n'"
CGNS/APP/examples/MAP/load.py,0,"b'#!/usr/bin/env python\n#  -------------------------------------------------------------------------\n#  pyCGNS.APP - Python package for CFD General Notation System - APPlicater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import print_function\nimport CGNS.MAP\n\n(tree,links,paths)=CGNS.MAP.load(""./data/T0.cgns"",flags=CGNS.MAP.S2P_DEFAULT)\n\nprint(tree)\nprint(links)\n\n# --- last line\n'"
CGNS/APP/examples/MAP/nodepernode.py,0,"b'#!/usr/bin/env python\n#  -------------------------------------------------------------------------\n#  pyCGNS.APP - Python package for CFD General Notation System - APPlicater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import print_function\nimport CGNS.MAP\nimport CGNS.PAT.cgnsutils    as CGU\nimport CGNS.PAT.cgnskeywords as CGK\n\nimport time\n\n# - load a single node in a tree\n#   Nothing else but the target node and its ancestors are load\n#   You load what you need, see below to get tree structure without data\n\npath = \'/Disk/zone1/GridCoordinates/CoordinateZ\'\n(tree, lk) = CGNS.MAP.load(""data/T0.cgns"", CGNS.MAP.S2P_DEFAULT, 0, path, [], None)\nprint(tree)\nprint(\'-\' * 50)\n\nupdict = {}\npath = \'/Disk/zone1/GridCoordinates/CoordinateZ\'\nupdict[path] = CGU.getValueByPath(tree, path)\npath = \'/Disk/zone2/GridCoordinates/CoordinateX\'\nupdict[path] = CGU.getValueByPath(tree, path)\n\n(tree, lk) = CGNS.MAP.load(""data/T0.cgns"", CGNS.MAP.S2P_DEFAULT, 0, None, [], updict)\nprint(tree)\nprint(\'-\' * 50)\n\n# - load only up to argument depth\n#   Useful in case you only want the layout of the tree, if you want to\n#   make links to already existing trees\n#   If you set depth to 0 there is no depth limit\n#   A level of 1 means only CGNSTree_t\n#   A level of 2 means CGNSLibraryVersion_t, CGNSBase_t...\n#   and so on\ndepth = 3\n(tree, lk) = CGNS.MAP.load(""data/T0.cgns"", CGNS.MAP.S2P_DEFAULT, depth, None, [], None)\nprint(tree)\nprint(\'-\' * 50)\n\n# - do not load data but only tree skeletton\n#   All data would be MT (no data, no data type)\nflags = CGNS.MAP.S2P_DEFAULT | CGNS.MAP.S2P_NODATA\n(tree, lk) = CGNS.MAP.load(""data/T0.cgns"", flags, 0, None, [], None)\nprint\ntree\n\n# find all zones\nzlist = CGU.getAllNodesByTypeList2([CGK.Zone_ts], tree)\n\n# load zone data\nfor z in zlist:\n    print(\'-\' * 50, z)\n    (tree, lk) = CGNS.MAP.load(""data/T0.cgns"", CGNS.MAP.S2P_DEFAULT, 0, z, [], None)\n    print(tree)\n\n# --- last line\n'"
CGNS/APP/examples/MAP/save.py,0,"b'#!/usr/bin/env python\n#  -------------------------------------------------------------------------\n#  pyCGNS.APP - Python package for CFD General Notation System - APPlicater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nimport CGNS.MAP\nfrom   CGNS.PAT.cgnskeywords import *\nimport numpy\nimport os\n\nfilename=""/tmp/T0.cgns""\n\ntry:\n  os.unlink(filename)\nexcept os.error: pass\n\n# this is a small example, because it\'s quite hard to read!\ntree=[CGNSTree_s, None, [\n       [CGNSLibraryVersion_s,\n        numpy.array([2.4],dtype=numpy.float32),\n        [],\n        CGNSLibraryVersion_ts],\n       [\'Helicopter\',\n        numpy.array([3, 3], dtype=numpy.int32),\n        [\n         [\'ReferenceState\', None,\n          [\n           [\'AngleofAttack\',numpy.array([ 7.]), [], DataArray_ts],\n           [\'BetaAngle\', numpy.array([ 0.]), [], DataArray_ts],\n           [\'Coef_Area\', numpy.array([ 0.025]), [], DataArray_ts]\n          ],\n          ReferenceState_ts\n        ],\n       ],\n        CGNSBase_ts]\n       ],\n       CGNSTree_ts\n      ]\n        \nCGNS.MAP.save(filename,tree,[],CGNS.MAP.S2P_DEFAULT)\n\n# --- last line\n\n'"
CGNS/APP/examples/PAT/utils.py,0,"b""#!/usr/bin/env python\n# -------------------------------------------------------------------------\n# pyCGNS.PAT - CFD General Notation System -\n# See license.txt file in the root directory of this Python module source  \n# -------------------------------------------------------------------------\n#\nfrom __future__ import print_function\nimport CGNS.PAT.cgnslib   as CGL\nimport CGNS.PAT.cgnsutils as CGU\n\nT = CGL.newCGNSTree()\nB = CGL.newBase(T, 'Base', 3, 3)\nZ = CGL.newZone(B, 'Zone1')\nZ = CGL.newZone(B, 'Zone2')\nZ = CGL.newZone(B, 'Zone3')\nZ = CGL.newZone(B, 'Zone4')\n\nl1 = CGU.getAllNodesByTypeList(T, ['CGNSTree_t', 'CGNSBase_t', 'Zone_t'])\nl2 = CGU.getAllNodesByTypeSet(T, ['Zone_t', 'IndexArray_t'])\n\nprint(l1)\nprint(l2)\n\nprint(CGU.getNodeByPath(l1[0], T))\n\nl3 = CGU.getAllNodesByTypeList(B, ['CGNSBase_t', 'Zone_t'])\nl4 = CGU.getAllNodesByTypeSet(B, ['Zone_t'])\n\nprint(l3)\nprint(l4)\n\nprint(CGU.getNodeByPath(B, l3[0]))\n"""
CGNS/VAL/suite/SIDS/00tree.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nTESTS = []\n\n#  -------------------------------------------------------------------------\ntag = 'empty tree'\ndiag = True\nT = CGL.newCGNSTree()\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bad tree #1'\ndiag = False\nT = CGL.newCGNSTree()\nT[2] = []\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bad version #1'\ndiag = False\nT = CGL.newCGNSTree()\nv = CGU.hasChildName(T, CGK.CGNSLibraryVersion_s)\nv[1] = NPY.array([6.8], dtype='float32')\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bad version #2'\ndiag = False\nT = CGL.newCGNSTree()\nv = CGU.hasChildName(T, CGK.CGNSLibraryVersion_s)\nv[1] = NPY.array([3])\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bad struct #1'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base#1}', 3, 3)\nb.append(None)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bad struct #2'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base#1}', 3, 3)\nb[2] = {}\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bad name #1'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nd = CGL.newFamily(b, '{Family#1}')\nd[0] = None\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bad name #2'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nd = CGL.newFamily(b, '{Family#1}')\nd = CGL.newFamily(b, '{Family#2}')\nd[0] = '{Family#1}'\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bad name #3'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nd = CGL.newFamily(b, '{Family#2}')\nd[0] = '/A/B/C'\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bad name #4'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nd = CGL.newFamily(b, '{Family#2}')\nd[0] = 'A' * 33\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bad name #5'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nd = CGL.newFamily(b, '{Family#1}')\nd[0] = ''\nd = CGL.newFamily(b, '{Family#2}')\nd[0] = ' '\nd = CGL.newFamily(b, '{Family#3}')\nd[0] = ' ' * 10\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bad value #1'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nb[1] = 'Oups'\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bad value #2'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nb[1] = NPY.array([True, False], dtype='b')\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bad SIDS type'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nb[3] = None\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\n"""
CGNS/VAL/suite/SIDS/04dataclass.py,0,"b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nTESTS = []\n\n#  -------------------------------------------------------------------------\ntag = \'base dataclass #1\'\ndiag = True\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, \'{Base}\', 3, 3)\nd = CGL.newDataClass(b, CGK.NondimensionalParameter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = \'base dataclass #2\'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, \'{Base}\', 3, 3)\nd = CGL.newDataClass(b, CGK.NormalizedByDimensional_s)\nd[0] = \'dataclass\'\nd = CGL.newDataClass(b, CGK.NormalizedByDimensional_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = \'base dataclass #3\'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, \'{Base}\', 3, 3)\nd = CGL.newDataClass(b, CGK.NormalizedByDimensional_s)\nd[1] = CGU.setStringAsArray(""NormalizedByDimensionnal"")\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = \'all levels dataclass\'\ndiag = True\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, \'{Base}\', 3, 3)\nd = CGL.newFamily(b, \'{Family}\')\nd = CGL.newDataClass(b, CGK.NondimensionalParameter_s)\nz = CGL.newZone(b, \'{Zone}\', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order=\'F\'))\nd = CGL.newDataClass(z, CGK.NondimensionalParameter_s)\ng = CGL.newGridCoordinates(z, CGK.GridCoordinates_s)\nw = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nw = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nw = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nd = CGL.newDataClass(g, CGK.NondimensionalParameter_s)\nf = CGL.newFlowSolution(z)\nd = CGL.newDataClass(f, CGK.NondimensionalParameter_s)\na = CGL.newDataArray(f, \'{DataArray}\', value=NPY.ones((4, 6, 8), dtype=\'float64\', order=\'F\'))\nd = CGL.newDataClass(a, CGK.NondimensionalParameter_s)\nn = CGL.newZoneBC(z)\nd = CGL.newDataClass(n, CGK.NondimensionalParameter_s)\nq = CGL.newBC(n, \'{BC}\', family=\'{Family}\')\nd = CGL.newDataClass(q, CGK.NondimensionalParameter_s)\ns = CGL.newBCDataSet(q, \'{Set#01}\')\nd = CGL.newDataClass(s, CGK.NondimensionalParameter_s)\nc = CGL.newBCData(s, CGK.Dirichlet_s)\nd = CGL.newDataClass(c, CGK.NondimensionalParameter_s)\nr = CGL.newReferenceState(b)\nd = CGL.newDataClass(r, CGK.NondimensionalParameter_s)\na = CGL.newAxisymmetry(b)\nd = CGL.newDataClass(a, CGK.NondimensionalParameter_s)\na = CGL.newRotatingCoordinates(b)\nd = CGL.newDataClass(a, CGK.NondimensionalParameter_s)\na = CGL.newDiscreteData(z, \'{DiscreteData}\')\nd = CGL.newDataClass(a, CGK.NondimensionalParameter_s)\ni = CGL.newBaseIterativeData(b, \'{BaseIterativeData}\')\nd = CGL.newDataClass(i, CGK.NondimensionalParameter_s)\ni = CGL.newZoneIterativeData(z, \'{ZoneIterativeData}\')\nd = CGL.newDataClass(i, CGK.NondimensionalParameter_s)\nm = CGL.newRigidGridMotion(z, \'{RigidGridMotion}\',\n                           vector=NPY.array([[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]]))\nd = CGL.newDataClass(m, CGK.NondimensionalParameter_s)\nm = CGL.newArbitraryGridMotion(z, \'{ArbitraryGridMotion}\')\nd = CGL.newDataClass(m, CGK.NondimensionalParameter_s)\nx = CGL.newZoneGridConnectivity(z)\nx = CGL.newGridConnectivity(x, \'{GridConnectivity}\', z[0])\nCGL.newPointRange(x, value=NPY.array([[1, 1], [1, 1], [1, 1]], dtype=NPY.int32, order=\'Fortran\'))\np = CGL.newGridConnectivityProperty(x)\nm = CGL.newPeriodic(p)\nd = CGL.newDataClass(m, CGK.NondimensionalParameter_s)\nw = CGL.newConvergenceHistory(b)\nd = CGL.newDataClass(w, CGK.NondimensionalParameter_s)\ni = CGL.newIntegralData(b, \'{IntegralData}\')\nd = CGL.newDataClass(i, CGK.NondimensionalParameter_s)\ni = CGL.newUserDefinedData(b, \'{UserDefinedData}\')\nd = CGL.newDataClass(i, CGK.NondimensionalParameter_s)\ni = CGL.newGravity(b)\nd = CGL.newDataClass(i, CGK.NondimensionalParameter_s)\nf = CGL.newFlowEquationSet(b)\nd = CGL.newDataClass(f, CGK.NondimensionalParameter_s)\nm = CGL.newGasModel(f)\nd = CGL.newDataClass(m, CGK.NondimensionalParameter_s)\nm = CGL.newViscosityModel(f)\nd = CGL.newDataClass(m, CGK.NondimensionalParameter_s)\nm = CGL.newThermalConductivityModel(f)\nd = CGL.newDataClass(m, CGK.NondimensionalParameter_s)\nm = CGL.newThermalRelaxationModel(f)\nd = CGL.newDataClass(m, CGK.NondimensionalParameter_s)\nm = CGL.newChemicalKineticsModel(f)\nd = CGL.newDataClass(m, CGK.NondimensionalParameter_s)\nm = CGL.newTurbulenceClosure(f)\nd = CGL.newDataClass(m, CGK.NondimensionalParameter_s)\nm = CGL.newTurbulenceModel(f)\nd = CGL.newDataClass(m, CGK.NondimensionalParameter_s)\nm = CGL.newEMConductivityModel(f)\nd = CGL.newDataClass(m, CGK.NondimensionalParameter_s)\nm = CGL.newEMMagneticFieldModel(f)\nd = CGL.newDataClass(m, CGK.NondimensionalParameter_s)\nm = CGL.newEMElectricFieldModel(f)\nd = CGL.newDataClass(m, CGK.NondimensionalParameter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = \'all levels dataclass/dimensionalunits\'\ndiag = True\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, \'{Base}\', 3, 3)\nd = CGL.newFamily(b, \'{Family}\')\nd = CGL.newDataClass(b, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(b)\nz = CGL.newZone(b, \'{Zone}\', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order=\'F\'))\nd = CGL.newDataClass(z, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(z)\ng = CGL.newGridCoordinates(z, CGK.GridCoordinates_s)\nw = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nw = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nw = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nd = CGL.newDataClass(g, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(g)\nf = CGL.newFlowSolution(z)\nd = CGL.newDataClass(f, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(f)\na = CGL.newDataArray(f, \'{DataArray}\', value=NPY.ones((4, 6, 8), dtype=\'float64\', order=\'F\'))\nd = CGL.newDataClass(a, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(a)\nn = CGL.newZoneBC(z)\nd = CGL.newDataClass(n, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(n)\nq = CGL.newBC(n, \'{BC}\', family=\'{Family}\')\nd = CGL.newDataClass(q, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(q)\ns = CGL.newBCDataSet(q, \'{BCDataSet}\')\nd = CGL.newDataClass(s, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(s)\nc = CGL.newBCData(s, CGK.Neumann_s)\nd = CGL.newDataClass(c, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(c)\nr = CGL.newReferenceState(b)\nd = CGL.newDataClass(r, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(r)\na = CGL.newAxisymmetry(b)\nd = CGL.newDataClass(a, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(a)\na = CGL.newRotatingCoordinates(b)\nd = CGL.newDataClass(a, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(a)\na = CGL.newDiscreteData(z, \'{DiscreteData}\')\nd = CGL.newDataClass(a, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(a)\ni = CGL.newBaseIterativeData(b, \'{BaseIterativeData}\')\nd = CGL.newDataClass(i, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(i)\ni = CGL.newZoneIterativeData(z, \'{ZoneIterativeData}\')\nd = CGL.newDataClass(i, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(i)\nm = CGL.newRigidGridMotion(z, \'{RigidGridMotion}\',\n                           vector=NPY.array([[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]]))\nd = CGL.newDataClass(m, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(m)\nm = CGL.newArbitraryGridMotion(z, \'{ArbitraryGridMotion}\')\nd = CGL.newDataClass(m, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(m)\nx = CGL.newZoneGridConnectivity(z)\nx = CGL.newGridConnectivity(x, \'{GridConnectivity}\', z[0])\nCGL.newPointRange(x, value=NPY.array([[1, 1], [1, 1], [1, 1]], dtype=NPY.int32, order=\'Fortran\'))\np = CGL.newGridConnectivityProperty(x)\nm = CGL.newPeriodic(p)\nd = CGL.newDataClass(m, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(m)\nw = CGL.newConvergenceHistory(b)\nd = CGL.newDataClass(w, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(w)\ni = CGL.newIntegralData(b, \'{IntegralData}\')\nd = CGL.newDataClass(i, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(i)\ni = CGL.newUserDefinedData(b, \'{UserDefinedData}\')\nd = CGL.newDataClass(i, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(i)\ni = CGL.newGravity(b)\nd = CGL.newDataClass(i, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(i)\nf = CGL.newFlowEquationSet(b)\nd = CGL.newDataClass(f, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(f)\nm = CGL.newGasModel(f)\nd = CGL.newDataClass(m, CGK.NormalizedByDimensional_s)\nu = CGL.newDimensionalUnits(m)\nm = CGL.newViscosityModel(f)\nu = CGL.newDimensionalUnits(m)\nd = CGL.newDataClass(m, CGK.NormalizedByDimensional_s)\nm = CGL.newThermalConductivityModel(f)\nu = CGL.newDimensionalUnits(m)\nd = CGL.newDataClass(m, CGK.NormalizedByDimensional_s)\nm = CGL.newThermalRelaxationModel(f)\nu = CGL.newDimensionalUnits(m)\nd = CGL.newDataClass(m, CGK.NormalizedByDimensional_s)\nm = CGL.newChemicalKineticsModel(f)\nu = CGL.newDimensionalUnits(m)\nd = CGL.newDataClass(m, CGK.NormalizedByDimensional_s)\nm = CGL.newTurbulenceClosure(f)\nu = CGL.newDimensionalUnits(m)\nd = CGL.newDataClass(m, CGK.NormalizedByDimensional_s)\nm = CGL.newTurbulenceModel(f)\nu = CGL.newDimensionalUnits(m)\nd = CGL.newDataClass(m, CGK.NormalizedByDimensional_s)\nm = CGL.newEMConductivityModel(f)\nu = CGL.newDimensionalUnits(m)\nd = CGL.newDataClass(m, CGK.NormalizedByDimensional_s)\nm = CGL.newEMMagneticFieldModel(f)\nu = CGL.newDimensionalUnits(m)\nd = CGL.newDataClass(m, CGK.NormalizedByDimensional_s)\nm = CGL.newEMElectricFieldModel(f)\nd = CGL.newDataClass(m, CGK.NormalizedByDimensional_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = \'dataclass dimensional without dimensionalunits\'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, \'{Base}\', 3, 3)\nd = CGL.newFamily(b, \'{Family}\')\nz = CGL.newZone(b, \'{Zone}\', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order=\'F\'))\ng = CGL.newGridCoordinates(z, CGK.GridCoordinates_s)\nw = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nw = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nw = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nf = CGL.newFlowSolution(z)\na = CGL.newDataArray(f, \'{DataArray}\', value=NPY.ones((4, 6, 8), dtype=\'float64\', order=\'F\'))\nd = CGL.newDataClass(a, CGK.NormalizedByDimensional_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = \'exponents without dimensionalunits\'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, \'{Base}\', 3, 3)\nd = CGL.newFamily(b, \'{Family}\')\nz = CGL.newZone(b, \'{Zone}\', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order=\'F\'))\ng = CGL.newGridCoordinates(z, CGK.GridCoordinates_s)\nw = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nw = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nw = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nf = CGL.newFlowSolution(z)\na = CGL.newDataArray(f, \'{DataArray}\', value=NPY.ones((4, 6, 8), dtype=\'float64\', order=\'F\'))\nd = CGL.newDimensionalExponents(a)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = \'dimensionalunits without dataclass\'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, \'{Base}\', 3, 3)\nd = CGL.newFamily(b, \'{Family}\')\nz = CGL.newZone(b, \'{Zone}\', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order=\'F\'))\ng = CGL.newGridCoordinates(z, CGK.GridCoordinates_s)\nw = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nw = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nw = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nf = CGL.newFlowSolution(z)\na = CGL.newDataArray(f, \'{DataArray}\', value=NPY.ones((4, 6, 8), dtype=\'float64\', order=\'F\'))\nd = CGL.newDimensionalUnits(a)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = \'bad dimensionalunits #1\'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, \'{Base}\', 3, 3)\nd = CGL.newFamily(b, \'{Family}\')\nz = CGL.newZone(b, \'{Zone}\', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order=\'F\'))\ng = CGL.newGridCoordinates(z, CGK.GridCoordinates_s)\nw = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nw = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nw = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7, 9), dtype=\'float64\', order=\'F\'))\nf = CGL.newFlowSolution(z)\na = CGL.newDataArray(f, \'{DataArray}\', value=NPY.ones((4, 6, 8), dtype=\'float64\', order=\'F\'))\nd = CGL.newDimensionalUnits(a)\nd[1] = \'Meter\'\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\n'"
CGNS/VAL/suite/SIDS/04indexarray.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS.VAL - Python package for CFD General Notation System - VALidater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nTESTS = []\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray'\ndiag = True\n\n\ndef makeCorrectTree(vertexsize, cellsize):\n    T = CGL.newCGNSTree()\n    b = CGL.newBase(T, 'Base', 3, 3)\n    s = NPY.array([[vertexsize, cellsize, 0]], dtype='int32', order='F')\n    z = CGL.newZone(b, 'Zone', s, CGK.Unstructured_s)\n    g = CGL.newGridCoordinates(z, 'GridCoordinates')\n    d = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    tetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                             NPY.array([[1, cellsize]], 'i', order='F'))\n    zbc = CGL.newZoneBC(z)\n    return (T, b, z, zbc)\n\n\nvertexsize = 20\ncellsize = 7\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nn = CGL.newBoundary(zbc, 'BC', [range(1, cellsize + 1)], btype=CGK.Null_s, family=None, pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray bad parent'\ndiag = False\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nn = CGL.newBoundary(zbc, 'BC', [range(1, cellsize + 1)], btype=CGK.Null_s, family=None, pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\ni = n[2][0]\nz[2].append(CGU.copyNode(i, 'PointList'))  # unauthorized parent node\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray bad name'\ndiag = False\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nn = CGL.newBoundary(zbc, 'BC', [range(1, cellsize + 1)], btype=CGK.Null_s, family=None, pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\ni = n[2][0]\ni[0] = 'ElementList'  # unauthorized name\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray bad data type'\ndiag = False\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nn = CGL.newBoundary(zbc, 'BC', [range(1, cellsize + 1)], btype=CGK.Null_s, family=None, pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\ni = n[2][0]\ni[1] = NPY.ones((1, cellsize), dtype='float64', order='F')  # unauthorized data type\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray bad child'\ndiag = False\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nn = CGL.newBoundary(zbc, 'BC', [range(1, cellsize + 1)], btype=CGK.Null_s, family=None, pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\ni = n[2][0]\nCGL.newDataArray(i, '{DataArray}')  # unauthorized child\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray element index out of range'\ndiag = False\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nn = CGL.newBoundary(zbc, 'BC', [range(2, cellsize + 2)], btype=CGK.Null_s, family=None,\n                    pttype=CGK.PointList_s)  # element index out of range\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray element appear several times (Warning)'\ndiag = True\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nn = CGL.newBoundary(zbc, 'BC', [[1, 1, 1, 1, 1, 1, 1]], btype=CGK.Null_s, family=None,\n                    pttype=CGK.PointList_s)  # values appear several times in list\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray gridlocation vertex'\ndiag = True\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nn = CGL.newBoundary(zbc, 'BC', [[1, 2, 3, 4, vertexsize]], btype=CGK.Null_s, family=None,\n                    pttype=CGK.PointList_s)  # element index out of range\ng = CGL.newGridLocation(n, value=CGK.Vertex_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray gridlocation vertex index out of range'\ndiag = False\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nn = CGL.newBoundary(zbc, 'BC', [[1, 2, 0, 4, vertexsize + 1]], btype=CGK.Null_s, family=None,\n                    pttype=CGK.PointList_s)  # element index out of range\ng = CGL.newGridLocation(n, value=CGK.Vertex_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray gridlocation face'\ndiag = True\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nntris = 12\ntris = CGL.newElements(z, 'TRIS', CGK.TRI_3_s, NPY.ones((ntris * 3), dtype='int32'),\n                       NPY.array([[cellsize + 1, cellsize + ntris]], 'i', order='F'))\nn = CGL.newBoundary(zbc, 'BC', [range(cellsize + 1, cellsize + ntris + 1)], btype=CGK.Null_s, family=None,\n                    pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray gridlocation face index out of range #1'\ndiag = False\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nntris = 12\ntris = CGL.newElements(z, 'TRIS', CGK.TRI_3_s, NPY.ones((ntris * 3), dtype='int32'),\n                       NPY.array([[cellsize + 1, cellsize + ntris]], 'i', order='F'))\nn = CGL.newBoundary(zbc, 'BC', [range(cellsize + 1, cellsize + ntris + 2)], btype=CGK.Null_s, family=None,\n                    pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray gridlocation face index out of range #2'\ndiag = False\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nntris = 12\ntris = CGL.newElements(z, 'TRIS', CGK.TRI_3_s, NPY.ones((ntris * 3), dtype='int32'),\n                       NPY.array([[cellsize + 1, cellsize + ntris]], 'i', order='F'))\nn = CGL.newBoundary(zbc, 'BC', [range(cellsize, cellsize + ntris + 1)], btype=CGK.Null_s, family=None,\n                    pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray InwardNormalList'\ndiag = True\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nn = CGL.newBoundary(zbc, 'BC', [range(1, cellsize + 1)], btype=CGK.Null_s, family=None, pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\ninl = CGL.newIndexArray(n, CGK.InwardNormalList_s, value=NPY.ones([3, cellsize]))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray InwardNormalList bad shape #1'\ndiag = False\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nn = CGL.newBoundary(zbc, 'BC', [range(1, cellsize + 1)], btype=CGK.Null_s, family=None, pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\ninl = CGL.newIndexArray(n, CGK.InwardNormalList_s, value=NPY.ones([2, cellsize]))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray InwardNormalList bad shape #2'\ndiag = False\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nn = CGL.newBoundary(zbc, 'BC', [range(1, cellsize + 1)], btype=CGK.Null_s, family=None, pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\ninl = CGL.newIndexArray(n, CGK.InwardNormalList_s, value=NPY.ones([3, cellsize + 1]))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray InwardNormalList bad shape #3'\ndiag = False\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nn = CGL.newBoundary(zbc, 'BC', [range(1, cellsize + 1)], btype=CGK.Null_s, family=None, pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\ninl = CGL.newIndexArray(n, CGK.InwardNormalList_s, value=NPY.ones([cellsize]))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexarray InwardNormalList bad shape #4'\ndiag = False\n(T, b, z, zbc) = makeCorrectTree(vertexsize, cellsize)\nn = CGL.newBoundary(zbc, 'BC', [range(1, cellsize + 1)], btype=CGK.Null_s, family=None, pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\nCGU.nodeDelete(T, CGU.getNodeByPath(n, 'BC/' + CGK.PointList_s))\ninl = CGL.newIndexArray(n, CGK.InwardNormalList_s, value=NPY.ones([2, cellsize]))\nTESTS.append((tag, T, diag))\n"""
CGNS/VAL/suite/SIDS/04indexrange.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS.VAL - Python package for CFD General Notation System - VALidater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nTESTS = []\n\n#  -------------------------------------------------------------------------\ntag = 'indexrange'\ndiag = True\n\n\ndef makeCorrectTree(vertexsize, cellsize):\n    T = CGL.newCGNSTree()\n    b = CGL.newBase(T, 'Base', 3, 3)\n    s = NPY.array([[vertexsize, cellsize, 0]], dtype='int32', order='F')\n    z = CGL.newZone(b, 'Zone', s, CGK.Unstructured_s)\n    g = CGL.newGridCoordinates(z, 'GridCoordinates')\n    d = CGL.newDataArray(g, CGK.CoordinateX_s,\n                         NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateY_s,\n                         NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateZ_s,\n                         NPY.ones((vertexsize), dtype='float64', order='F'))\n    return (T, b, z)\n\n\nvertexsize = 20\ncellsize = 7\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexrange index bad ordered'  # this raises a warning, not an error\ndiag = True\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s,\n                         NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[cellsize, 1]], 'i', order='F'))\n# element range not ordered\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexrange bad node shape'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s,\n                         NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([1, cellsize], 'i', order='F'))\n# ElementRange bad node shape\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexrange on BC_t'\ndiag = True\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\nntris = 11\ntris = CGL.newElements(z, 'TRIS', CGK.TRI_3_s, NPY.ones((ntris * 3), dtype='int32'),\n                       NPY.array([[cellsize + 1, cellsize + ntris]], 'i', order='F'))\nn = CGL.newBoundary(z, 'BC', [range(cellsize + 1, cellsize + ntris + 1)], btype=CGK.Null_s, family=None,\n                    pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\nCGU.removeChildByName(n, CGK.PointList_s)\nCGU.newNode(CGK.PointRange_s, NPY.array([[cellsize + 1, cellsize + ntris]], dtype=NPY.int32, order='Fortran'), [],\n            CGK.IndexRange_ts, parent=n)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexrange on BC_t PointRange index out of range #1'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s,\n                         NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\nntris = 11\ntris = CGL.newElements(z, 'TRIS', CGK.TRI_3_s,\n                       NPY.ones((ntris * 3), dtype='int32'),\n                       NPY.array([[cellsize + 1, cellsize + ntris]], 'i', order='F'))\nn = CGL.newBoundary(z, 'BC', [range(cellsize + 1, cellsize + ntris + 1)],\n                    btype=CGK.Null_s, family=None, pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\nCGU.removeChildByName(n, CGK.PointList_s)\nCGU.newNode(CGK.PointRange_s,\n            NPY.array([[cellsize + 1, cellsize + ntris + 1]], dtype=NPY.int32, order='F'), [], CGK.IndexRange_ts,\n            parent=n)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexrange on BC_t PointRange index out of range #2'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\nntris = 11\ntris = CGL.newElements(z, 'TRIS', CGK.TRI_3_s, NPY.ones((ntris * 3), dtype='int32'),\n                       NPY.array([[cellsize + 1, cellsize + ntris]], 'i', order='F'))\nn = CGL.newBoundary(z, 'BC', [range(cellsize + 1, cellsize + ntris + 1)], btype=CGK.Null_s, family=None,\n                    pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\nCGU.removeChildByName(n, CGK.PointList_s)\nCGU.newNode(CGK.PointRange_s, NPY.array([[cellsize, cellsize + ntris]], dtype=NPY.int32, order='Fortran'), [],\n            CGK.IndexRange_ts, parent=n)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'indexrange on BC_t ElementRange index out of range'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\nntris = 11\ntris = CGL.newElements(z, 'TRIS', CGK.TRI_3_s, NPY.ones((ntris * 3), dtype='int32'),\n                       NPY.array([[cellsize + 1, cellsize + ntris]], 'i', order='F'))\nn = CGL.newBoundary(z, 'BC', [range(cellsize, cellsize + ntris + 1)], btype=CGK.Null_s, family=None,\n                    pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\nCGU.removeChildByName(n, CGK.PointList_s)\nCGU.newNode(CGK.ElementRange_s, NPY.array([[cellsize + 1, cellsize + ntris + 1]], dtype=NPY.int32, order='Fortran'), [],\n            CGK.IndexRange_ts, parent=n)\nTESTS.append((tag, T, diag))\n"""
CGNS/VAL/suite/SIDS/06base.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nTESTS = []\n\n#  -------------------------------------------------------------------------\ntag = 'multi bases'\ndiag = True\nT = CGL.newCGNSTree()\nfor i in range(10):\n    CGL.newBase(T, '{Base#%.2d}' % i, 3, 3)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bad base dims #1'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nb[1] = None\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bad base dims #2'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base#1}', 3, 3)\nb[1] = NPY.array([0, 0], dtype='int32')\nb = CGL.newBase(T, '{Base#2}', 3, 3)\nb[1] = NPY.array([-2, 0], dtype='int32')\nb = CGL.newBase(T, '{Base#3}', 3, 3)\nb[1] = NPY.array([2, 2], dtype='float32')\nb = CGL.newBase(T, '{Base#4}', 3, 3)\nb[1] = NPY.array([1, 2], dtype='int32')\nb = CGL.newBase(T, '{Base#5}', 3, 3)\nb[1] = NPY.array([[1, 2]], dtype='int32')\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\n"""
CGNS/VAL/suite/SIDS/06zone.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nTESTS = []\n\n#  -------------------------------------------------------------------------\ntag = 'zone structured'\ndiag = True\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nz = CGL.newZone(b, '{Zone}', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\ng = CGL.newGridCoordinates(z, 'GridCoordinates')\nd = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zone bad zonetype'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nz = CGL.newZone(b, '{Zone}', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\ng = CGL.newGridCoordinates(z, 'GridCoordinates')\nd = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\nzt = CGU.hasChildName(z, CGK.ZoneType_s)\nzt[1] = CGU.setStringAsArray('Untruscutred')\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zone bad zone size'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nz = CGL.newZone(b, '{Zone}', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\ng = CGL.newGridCoordinates(z, 'GridCoordinates')\nd = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones(5, dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones(5, dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones(5, dtype='float64', order='F'))\nzt = CGU.hasChildName(z, CGK.ZoneType_s)\nzt[1] = CGU.setStringAsArray(CGK.Unstructured_s)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((4 * 4), dtype='int32'), NPY.array([[1, 4]], 'i', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zone unstructured bad dims'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nz = CGL.newZone(b, '{Zone}', NPY.array([[4, 5, 0]], order='F'))\ng = CGL.newGridCoordinates(z, 'GridCoordinates')\nd = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones(4, dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones(4, dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones(4, dtype='float64', order='F'))\nzt = CGU.hasChildName(z, CGK.ZoneType_s)\nzt[1] = CGU.setStringAsArray(CGK.Unstructured_s)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((5 * 4), dtype='int32'), NPY.array([[1, 5]], 'i', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zone structured bad dims'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nz = CGL.newZone(b, '{Zone}', NPY.array([[5, 4, 0], [7, 7, 0], [9, 8, 0]], order='F'))\ng = CGL.newGridCoordinates(z, 'GridCoordinates')\nd = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zone structured bad numpy array order'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nz = CGL.newZone(b, '{Zone}', NPY.array([[5, 7, 9], [4, 6, 8], [0, 0, 0]], order='F'))\ng = CGL.newGridCoordinates(z, 'GridCoordinates')\nd = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 4, 0), dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 4, 0), dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 4, 0), dtype='float64', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zone unstructured no elements'\ndiag = False\n\n\ndef makeUnstTree(vertexsize, cellsize):\n    T = CGL.newCGNSTree()\n    b = CGL.newBase(T, 'Base', 3, 3)\n    s = NPY.array([[vertexsize, cellsize, 0]], dtype='int32', order='F')\n    z = CGL.newZone(b, 'Zone', s, CGK.Unstructured_s)\n    g = CGL.newGridCoordinates(z, 'GridCoordinates')\n    d = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    return (T, b, z)\n\n\nvertexsize = 20\ncellsize = 7\n(T, b, z) = makeUnstTree(vertexsize, cellsize)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zone unstructured correct ElementRange combination'\ndiag = True\n(T, b, z) = makeUnstTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((3 * 4), dtype='int32'), NPY.array([[1, 3]], 'i', order='F'))\nhexas = CGL.newElements(z, 'HEXAS', CGK.HEXA_8_s, NPY.ones((4 * 8), dtype='int32'),\n                        NPY.array([[4, cellsize]], 'i', order='F'))\nelement = CGL.newElements(z, 'NGON', CGK.NGON_n_s,\n                          NPY.array([4, 9, 9, 9, 9,\n                                     5, 9, 9, 9, 9, 9,\n                                     3, 9, 9, 9,\n                                     5, 9, 9, 9, 9, 9,\n                                     3, 9, 9, 9,\n                                     4, 9, 9, 9, 9], dtype='int32', order='F'),\n                          NPY.array([[cellsize + 1, cellsize + 6]], 'i', order='F'))\nhexas2 = CGL.newElements(z, 'HEXAS2', CGK.HEXA_8_s, NPY.ones((2 * 8), dtype='int32'),\n                         NPY.array([[cellsize + 7, cellsize + 8]], 'i', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zone unstructured bad ElementRange combination #1'\ndiag = False\n(T, b, z) = makeUnstTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((3 * 4), dtype='int32'), NPY.array([[1, 3]], 'i', order='F'))\nhexas = CGL.newElements(z, 'HEXAS', CGK.HEXA_8_s, NPY.ones((5 * 8), dtype='int32'),\n                        NPY.array([[3, 7]], 'i', order='F'))  # Bad combination of ElementRange\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zone unstructured bad ElementRange combination #2'\ndiag = False\n(T, b, z) = makeUnstTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\nelement = CGL.newElements(z, 'NGON', CGK.NGON_n_s,\n                          NPY.array([4, 9, 9, 9, 9,\n                                     5, 9, 9, 9, 9, 9,\n                                     3, 9, 9, 9,\n                                     5, 9, 9, 9, 9, 9,\n                                     3, 9, 9, 9,\n                                     5, 9, 9, 9, 9, 9,\n                                     4, 9, 9, 9, 9], dtype='int32', order='F'),\n                          NPY.array([[cellsize + 1 + 1, cellsize + 7 + 1]], 'i',\n                                    order='F'))  # should be cellsize+1,cellsize+7\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zone unstructured bad ElementRange combination #3'\ndiag = False\n(T, b, z) = makeUnstTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\nelement = CGL.newElements(z, 'NGON', CGK.NGON_n_s,\n                          NPY.array([4, 9, 9, 9, 9,\n                                     5, 9, 9, 9, 9, 9,\n                                     3, 9, 9, 9,\n                                     5, 9, 9, 9, 9, 9,\n                                     3, 9, 9, 9,\n                                     5, 9, 9, 9, 9, 9,\n                                     4, 9, 9, 9, 9], dtype='int32', order='F'),\n                          NPY.array([[cellsize, cellsize + 7 - 1]], 'i', order='F'))  # should be cellsize+1,cellsize+7\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zone unstructured NFACE without NGON'\ndiag = False\n(T, b, z) = makeUnstTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\nelement = CGL.newElements(z, 'NFACE', CGK.NFACE_n_s,\n                          NPY.array([4, 9, 9, 9, 9,\n                                     5, 9, 9, 9, 9, 9,\n                                     3, 9, 9, 9,\n                                     5, 9, 9, 9, 9, 9,\n                                     4, 9, 9, 9, 9], dtype='int32', order='F'),\n                          NPY.array([[cellsize + 1, cellsize + 5]], 'i', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zone structured full BC and GridConnect'\ndiag = True\n\n\ndef makeStTree():\n    T = CGL.newCGNSTree()\n    b = CGL.newBase(T, '{Base}', 3, 3)\n    z1 = CGL.newZone(b, '{Zone1}', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n    g = CGL.newGridCoordinates(z1, 'GridCoordinates')\n    d = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\n    z2 = CGU.copyNode(z1, '{Zone2}')\n    b[2].append(z2)\n    zgc = CGL.newZoneGridConnectivity(z1)\n    gc = CGL.newGridConnectivity1to1(zgc, 'join1_2', '{Zone2}', NPY.array([[1, 1], [1, 4], [1, 9]]),\n                                     NPY.array([[5, 5], [3, 7], [1, 9]]), NPY.array([-1, +2, +3]))\n    zgc = CGL.newZoneGridConnectivity(z2)\n    gc = CGL.newGridConnectivity1to1(zgc, 'join2_1', '{Zone1}', NPY.array([[5, 5], [3, 7], [1, 9]]),\n                                     NPY.array([[1, 1], [1, 4], [1, 9]]), NPY.array([-1, +2, +3]))\n    zbc = CGL.newZoneBC(z1)\n    n = CGL.newBoundary(zbc, '{BC1_1}', [[5, 5], [1, 7], [1, 9]], btype=CGK.Null_s, family=None,\n                        pttype=CGK.PointRange_s)\n    g = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\n    n = CGL.newBoundary(zbc, '{BC1_2}', [[1, 5], [1, 1], [1, 9]], btype=CGK.Null_s, family=None,\n                        pttype=CGK.PointRange_s)\n    g = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\n    n = CGL.newBoundary(zbc, '{BC1_3}', [[1, 5], [7, 7], [1, 9]], btype=CGK.Null_s, family=None,\n                        pttype=CGK.PointRange_s)\n    g = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\n    n = CGL.newBoundary(zbc, '{BC1_4}', [[1, 5], [1, 7], [1, 1]], btype=CGK.Null_s, family=None,\n                        pttype=CGK.PointRange_s)\n    g = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\n    n = CGL.newBoundary(zbc, '{BC1_5}', [[1, 5], [1, 7], [9, 9]], btype=CGK.Null_s, family=None,\n                        pttype=CGK.PointRange_s)\n    g = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\n    n = CGL.newBoundary(zbc, '{BC1_6}', [[1, 1], [4, 7], [1, 9]], btype=CGK.Null_s, family=None,\n                        pttype=CGK.PointRange_s)\n    g = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\n    zbc = CGL.newZoneBC(z2)\n    n = CGL.newBoundary(zbc, '{BC2_1}', [[1, 1], [1, 7], [1, 9]], btype=CGK.Null_s, family=None,\n                        pttype=CGK.PointRange_s)\n    g = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\n    n = CGL.newBoundary(zbc, '{BC2_2}', [[1, 5], [1, 1], [1, 9]], btype=CGK.Null_s, family=None,\n                        pttype=CGK.PointRange_s)\n    g = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\n    n = CGL.newBoundary(zbc, '{BC2_3}', [[1, 5], [7, 7], [1, 9]], btype=CGK.Null_s, family=None,\n                        pttype=CGK.PointRange_s)\n    g = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\n    n = CGL.newBoundary(zbc, '{BC2_4}', [[1, 5], [1, 7], [1, 1]], btype=CGK.Null_s, family=None,\n                        pttype=CGK.PointRange_s)\n    g = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\n    n = CGL.newBoundary(zbc, '{BC2_5}', [[1, 5], [1, 7], [9, 9]], btype=CGK.Null_s, family=None,\n                        pttype=CGK.PointRange_s)\n    g = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\n    n = CGL.newBoundary(zbc, '{BC2_6}', [[5, 5], [1, 3], [1, 9]], btype=CGK.Null_s, family=None,\n                        pttype=CGK.PointRange_s)\n    g = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\n    z = [z1, z2]\n    return (T, b, z)\n\n\n(T, b, z) = makeStTree()\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zone structured uncomplete BC and GridConnect (warning)'\ndiag = False\n(T, b, z) = makeStTree()\npth = CGU.getAllNodesByTypeOrNameList(z[0], ['Zone_t', 'ZoneBC_t', '{BC1_1}'])[0]\nCGU.removeChildByName(CGU.getNodeByPath(z[0], CGU.getPathAncestor(pth)), '{BC1_1}')\npth = CGU.getAllNodesByTypeOrNameList(z[1], ['Zone_t', 'ZoneGridConnectivity_t', 'join2_1'])[0]\nCGU.removeChildByName(CGU.getNodeByPath(z[1], CGU.getPathAncestor(pth)), 'join2_1')\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zone structured doubly defined BC and GridConnect (warning)'\ndiag = False\n(T, b, z) = makeStTree()\npth = CGU.getAllNodesByTypeOrNameList(z[0], ['Zone_t', 'ZoneBC_t'])[0]\nzbc = CGU.getNodeByPath(z[0], pth)\nn = CGL.newBoundary(zbc, '{BC1_1b}', [[5, 5], [1, 2], [1, 2]], btype=CGK.Null_s, family=None, pttype=CGK.PointRange_s)\ng = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\npth = CGU.getAllNodesByTypeOrNameList(z[1], ['Zone_t', 'ZoneGridConnectivity_t'])[0]\nzgc = CGU.getNodeByPath(z[1], pth)\ngc = CGL.newGridConnectivity1to1(zgc, 'join2_1b', '{Zone1}', NPY.array([[1, 1], [1, 2], [1, 2]]),\n                                 NPY.array([[1, 1], [1, 4], [1, 9]]), NPY.array([-1, +2, +3]))\nTESTS.append((tag, T, diag))\n"""
CGNS/VAL/suite/SIDS/07elements.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS.VAL - Python package for CFD General Notation System - VALidater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nTESTS = []\n\n#  -------------------------------------------------------------------------\ntag = 'elements'\ndiag = True\n\n\ndef makeCorrectTree(vertexsize, cellsize):\n    T = CGL.newCGNSTree()\n    b = CGL.newBase(T, 'Base', 3, 3)\n    s = NPY.array([[vertexsize, cellsize, 0]], dtype='int32', order='F')\n    z = CGL.newZone(b, 'Zone', s, CGK.Unstructured_s)\n    g = CGL.newGridCoordinates(z, 'GridCoordinates')\n    d = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    return (T, b, z)\n\n\nvertexsize = 20\ncellsize = 7\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements bad elementsizeboundary'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\ntetras[1][1] = cellsize\nzbc = CGL.newZoneBC(z)\nn = CGL.newBoundary(zbc, 'BC', [range(1, cellsize + 1)], btype=CGK.Null_s, family=None, pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements elementsizeboundary BC correctly defined'\ndiag = True\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\ntetras[1][1] = cellsize - 1\nzbc = CGL.newZoneBC(z)\nn = CGL.newBoundary(zbc, 'BC', [range(1, cellsize)], btype=CGK.Null_s, family=None, pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements elementsizeboundary faces not on BC/GC (Warning)'\ndiag = True\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\ntetras[1][1] = cellsize - 1\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements elementsizeboundary bndfaces multiply defined on BC (Warning)'\ndiag = True\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\ntetras[1][1] = cellsize - 1\nzbc = CGL.newZoneBC(z)\nn = CGL.newBoundary(zbc, 'BC1', [range(1, cellsize)], btype=CGK.Null_s, family=None, pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\nn = CGL.newBoundary(zbc, 'BC2', [range(2, cellsize - 1)], btype=CGK.Null_s, family=None, pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements elementsizeboundary bndfaces multiply defined on BC/GC (Warning)'\ndiag = True\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nntris = 12\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\ntris = CGL.newElements(z, 'TRIS', CGK.TRI_3_s, NPY.ones((ntris * 3), dtype='int32'),\n                       NPY.array([[cellsize + 1, cellsize + ntris]], 'i', order='F'))\ntris[1][1] = ntris\nzbc = CGL.newZoneBC(z)\nn = CGL.newBoundary(zbc, 'BC', [range(cellsize + 1, cellsize + ntris + 1)], btype=CGK.Null_s, family=None,\n                    pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\nz2 = CGU.copyNode(z, 'Zone2')\nb[2].append(z2)\nzgc = CGL.newZoneGridConnectivity(z)\ngc = CGL.newGridConnectivity(zgc, 'join1_2', 'Zone2', ctype=CGK.Abutting1to1_s)\nCGL.newIndexArray(gc, CGK.PointList_s, value=NPY.array([range(cellsize + 2, cellsize + ntris)], order='F'))\nCGL.newIndexArray(gc, CGK.PointListDonor_s, value=NPY.array([range(cellsize + 2, cellsize + ntris)], order='F'))\nCGL.newGridLocation(gc, value=CGK.FaceCenter_s)\nzgc = CGL.newZoneGridConnectivity(z2)\ngc = CGL.newGridConnectivity(zgc, 'join2_1', 'Zone', ctype=CGK.Abutting1to1_s)\nCGL.newIndexArray(gc, CGK.PointList_s, value=NPY.array([range(cellsize + 2, cellsize + ntris)], order='F'))\nCGL.newIndexArray(gc, CGK.PointListDonor_s, value=NPY.array([range(cellsize + 2, cellsize + ntris)], order='F'))\nCGL.newGridLocation(gc, value=CGK.FaceCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements absent children'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\nCGU.removeChildByName(tetras, CGK.ElementRange_s)  # ElementRange child absent\nCGU.removeChildByName(tetras, CGK.ElementConnectivity_s)  # ElementConnectivity child absent\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements out of range'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\ntetras[2][0][1][0] = vertexsize + 1  # ElementConnectity element out of range\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements bad child shape'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones(((cellsize - 1) * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))  # bad ElementConnectivity node shape\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements correct NGON shape'\ndiag = True\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\nelement = CGL.newElements(z, 'NGON', CGK.NGON_n_s,\n                          NPY.array([4, 9, 9, 9, 9,\n                                     5, 9, 9, 9, 9, 9,\n                                     3, 9, 9, 9,\n                                     5, 9, 9, 9, 9, 9,\n                                     3, 9, 9, 9,\n                                     5, 9, 9, 9, 9, 9,\n                                     4, 9, 9, 9, 9], dtype='int32', order='F'),\n                          NPY.array([[cellsize + 1, cellsize + cellsize]], 'i', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements uncorrect NGON shape'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                         NPY.array([[1, cellsize]], 'i', order='F'))\nelement = CGL.newElements(z, 'NGON', CGK.NGON_n_s,\n                          NPY.array([4, 9, 9, 9, 9,\n                                     5, 9, 9, 9, 9, 9,\n                                     3, 9, 9, 9,\n                                     5, 9, 9, 9, 9, 9,\n                                     4, 9, 9, 9, 9], dtype='int32', order='F'),\n                          NPY.array([[cellsize + 1, cellsize + cellsize]], 'i', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements correct MIXED shape'\ndiag = True\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nelement = CGL.newElements(z, 'MIXED', CGK.MIXED_s,\n                          NPY.array([CGK.ElementType[CGK.QUAD_4_s], 9, 9, 9, 9,\n                                     CGK.ElementType[CGK.PYRA_5_s], 9, 9, 9, 9, 9,\n                                     CGK.ElementType[CGK.TRI_3_s], 9, 9, 9,\n                                     CGK.ElementType[CGK.PYRA_5_s], 9, 9, 9, 9, 9,\n                                     CGK.ElementType[CGK.TRI_3_s], 9, 9, 9,\n                                     CGK.ElementType[CGK.PYRA_5_s], 9, 9, 9, 9, 9,\n                                     CGK.ElementType[CGK.QUAD_4_s], 9, 9, 9, 9], dtype='int32', order='F'),\n                          NPY.array([[1, cellsize]], 'i', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements uncorrect MIXED shape #1'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nelement = CGL.newElements(z, 'MIXED', CGK.MIXED_s,\n                          NPY.array([CGK.ElementType[CGK.QUAD_4_s], 9, 9, 9, 9,\n                                     CGK.ElementType[CGK.PYRA_5_s], 9, 9, 9, 9, 9,\n                                     CGK.ElementType[CGK.TRI_3_s], 9, 9, 9,\n                                     CGK.ElementType[CGK.PYRA_5_s], 9, 9, 9, 9, 9,\n                                     CGK.ElementType[CGK.QUAD_4_s], 9, 9, 9, 9], dtype='int32', order='F'),\n                          NPY.array([[1, cellsize]], 'i', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements uncorrect MIXED shape #2'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nelement = CGL.newElements(z, 'MIXED', CGK.MIXED_s,\n                          NPY.array([CGK.ElementType[CGK.QUAD_4_s], 9, 9, 9, 9,\n                                     CGK.ElementType[CGK.PYRA_5_s], 9, 9, 9, 9, 9, 999,\n                                     CGK.ElementType[CGK.TRI_3_s], 9, 9, 9,\n                                     CGK.ElementType[CGK.PYRA_5_s], 9, 9, 9, 9, 9,\n                                     CGK.ElementType[CGK.QUAD_4_s], 9, 9, 9, 9], dtype='int32', order='F'),\n                          NPY.array([[1, cellsize]], 'i', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements uncorrect element within MIXED'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nelement = CGL.newElements(z, 'MIXED', CGK.MIXED_s,\n                          NPY.array([CGK.ElementType[CGK.QUAD_4_s], 9, 9, 9, 9,\n                                     999, 9, 9, 9, 9, 9,\n                                     CGK.ElementType[CGK.TRI_3_s], 9, 9, 9,\n                                     CGK.ElementType[CGK.PYRA_5_s], 9, 9, 9, 9, 9,\n                                     CGK.ElementType[CGK.QUAD_4_s], 9, 9, 9, 9], dtype='int32', order='F'),\n                          NPY.array([[1, cellsize]], 'i', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements FACE'\ndiag = True\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nnface = CGL.newElements(z, 'NFACE', CGK.NFACE_n_s,\n                        NPY.array([4, cellsize + 1, cellsize + 2, -cellsize - 3, cellsize + 4,\n                                   5, cellsize + 1, cellsize + 2, cellsize + 3, cellsize + 4, cellsize + 5,\n                                   3, cellsize + 1, -cellsize - 2, cellsize + 3,\n                                   5, cellsize + 1, cellsize + 2, cellsize + 3, cellsize + 4, -cellsize - 5,\n                                   3, cellsize + 1, cellsize + 2, cellsize + 3,\n                                   5, cellsize + 1, cellsize + 2, cellsize + 3, cellsize + 4, cellsize + 5,\n                                   4, cellsize + 1, cellsize + 2, -cellsize - 3, cellsize + 4], dtype='int32', order='F'),\n                        NPY.array([[1, cellsize]], 'i', order='F'))\nngon = CGL.newElements(z, 'NGON', CGK.NGON_n_s,\n                       NPY.array([4, 9, 9, 9, 9,\n                                  5, 9, 9, 9, 9, 9,\n                                  3, 9, 9, 9,\n                                  5, 9, 9, 9, 9, 9,\n                                  4, 9, 9, 9, 9], dtype='int32', order='F'),\n                       NPY.array([[cellsize + 1, cellsize + 5]], 'i', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements FACE inconsistent dataarray'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nnface = CGL.newElements(z, 'NFACE', CGK.NFACE_n_s,\n                        NPY.array([4, cellsize + 1, cellsize + 2, -cellsize - 3, cellsize + 4,\n                                   9999999, cellsize + 1, cellsize + 2, cellsize + 3, cellsize + 4, cellsize + 5,\n                                   3, cellsize + 1, -cellsize - 2, cellsize + 3,\n                                   5, cellsize + 1, cellsize + 2, cellsize + 3, cellsize + 4, -cellsize - 5,\n                                   3, cellsize + 1, cellsize + 2, cellsize + 3,\n                                   5, cellsize + 1, cellsize + 2, cellsize + 3, cellsize + 4, cellsize + 5,\n                                   4, cellsize + 1, cellsize + 2, -cellsize - 3, cellsize + 4], dtype='int32', order='F'),\n                        NPY.array([[1, cellsize]], 'i', order='F'))\nngon = CGL.newElements(z, 'NGON', CGK.NGON_n_s,\n                       NPY.array([4, 9, 9, 9, 9,\n                                  5, 9, 9, 9, 9, 9,\n                                  3, 9, 9, 9,\n                                  5, 9, 9, 9, 9, 9,\n                                  4, 9, 9, 9, 9], dtype='int32', order='F'),\n                       NPY.array([[cellsize + 1, cellsize + 5]], 'i', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements FACE bad node shape'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nnface = CGL.newElements(z, 'NFACE', CGK.NFACE_n_s,\n                        NPY.array([4, cellsize + 1, cellsize + 2, -cellsize - 3, cellsize + 4,\n                                   5, cellsize + 1, cellsize + 2, cellsize + 3, cellsize + 4, cellsize + 5,\n                                   3, cellsize + 1, -cellsize - 2, cellsize + 3,\n                                   5, cellsize + 1, cellsize + 2, cellsize + 3, cellsize + 4, -cellsize - 5,\n                                   3, cellsize + 1, cellsize + 2, cellsize + 3,\n                                   5, cellsize + 1, cellsize + 2, cellsize + 3, cellsize + 4, cellsize + 5,\n                                   4, cellsize + 1, cellsize + 2, -cellsize - 3, cellsize + 4], dtype='int32', order='F'),\n                        NPY.array([[1, cellsize - 1]], 'i', order='F'))\nngon = CGL.newElements(z, 'NGON', CGK.NGON_n_s,\n                       NPY.array([4, 9, 9, 9, 9,\n                                  5, 9, 9, 9, 9, 9,\n                                  3, 9, 9, 9,\n                                  5, 9, 9, 9, 9, 9,\n                                  4, 9, 9, 9, 9], dtype='int32', order='F'),\n                       NPY.array([[cellsize + 1, cellsize + 5]], 'i', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements FACE face index out of range'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nnface = CGL.newElements(z, 'NFACE', CGK.NFACE_n_s,\n                        NPY.array([4, cellsize + 1, cellsize + 2, -cellsize - 3, cellsize + 4,\n                                   5, cellsize + 1, cellsize + 2, 999999, cellsize + 4, cellsize + 5,\n                                   3, cellsize + 1, -cellsize - 2, cellsize + 3,\n                                   5, cellsize + 1, cellsize + 2, cellsize + 3, cellsize + 4, -cellsize - 5,\n                                   3, cellsize + 1, cellsize + 2, cellsize + 3,\n                                   5, cellsize + 1, cellsize + 2, cellsize + 3, cellsize + 4, cellsize + 5,\n                                   4, cellsize + 1, cellsize + 2, -cellsize - 3, cellsize + 4], dtype='int32', order='F'),\n                        NPY.array([[1, cellsize]], 'i', order='F'))\nngon = CGL.newElements(z, 'NGON', CGK.NGON_n_s,\n                       NPY.array([4, 9, 9, 9, 9,\n                                  5, 9, 9, 9, 9, 9,\n                                  3, 9, 9, 9,\n                                  5, 9, 9, 9, 9, 9,\n                                  4, 9, 9, 9, 9], dtype='int32', order='F'),\n                       NPY.array([[cellsize + 1, cellsize + 5]], 'i', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements parentelements and parentelementsposition'\ndiag = True\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nhexas = CGL.newElements(z, 'HEXAS', CGK.HEXA_8_s, NPY.ones((cellsize * 8), dtype='int32'),\n                        NPY.array([[1, cellsize]], 'i', order='F'))\nnquads = 3\nquads = CGL.newElements(z, 'QUADS', CGK.QUAD_4_s, NPY.ones((nquads * 4), dtype='int32'),\n                        NPY.array([[cellsize + 1, cellsize + nquads]], 'i', order='F'))\npe = CGL.newParentElements(quads, NPY.ones((nquads, 2), dtype='int32', order='F'))\npp = CGL.newParentElementsPosition(quads, NPY.ones((nquads, 2), dtype='int32', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements parentelementsposition without parentelements'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nhexas = CGL.newElements(z, 'HEXAS', CGK.HEXA_8_s, NPY.ones((cellsize * 8), dtype='int32'),\n                        NPY.array([[1, cellsize]], 'i', order='F'))\nnquads = 3\nquads = CGL.newElements(z, 'QUADS', CGK.QUAD_4_s, NPY.ones((nquads * 4), dtype='int32'),\n                        NPY.array([[cellsize + 1, cellsize + nquads]], 'i', order='F'))\npp = CGL.newParentElementsPosition(quads, NPY.ones((nquads, 2), dtype='int32', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements bad parentelements shape and parentelementsposition datatype'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nhexas = CGL.newElements(z, 'HEXAS', CGK.HEXA_8_s, NPY.ones((cellsize * 8), dtype='int32'),\n                        NPY.array([[1, cellsize]], 'i', order='F'))\nnquads = 3\nquads = CGL.newElements(z, 'QUADS', CGK.QUAD_4_s, NPY.ones((nquads * 4), dtype='int32'),\n                        NPY.array([[cellsize + 1, cellsize + nquads]], 'i', order='F'))\npe = CGL.newParentElements(quads, NPY.ones((nquads - 1, 2), dtype='int32', order='F'))\npp = CGL.newParentElementsPosition(quads, NPY.ones((nquads, 2), dtype='float64', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements parentelements and parentelementsposition on bad element type (Warning)'\ndiag = True\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nhexas = CGL.newElements(z, 'HEXAS', CGK.HEXA_8_s, NPY.ones((cellsize * 8), dtype='int32'),\n                        NPY.array([[1, cellsize]], 'i', order='F'))\npe = CGL.newParentElements(tetras, NPY.ones((cellsize, 2), dtype='int32', order='F'))\npp = CGL.newParentElementsPosition(tetras, NPY.ones((cellsize, 2), dtype='int32', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements parentelements bad values #1'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nhexas = CGL.newElements(z, 'HEXAS', CGK.HEXA_8_s, NPY.ones((cellsize * 8), dtype='int32'),\n                        NPY.array([[1, cellsize]], 'i', order='F'))\nnquads = 3\nquads = CGL.newElements(z, 'QUADS', CGK.QUAD_4_s, NPY.ones((nquads * 4), dtype='int32'),\n                        NPY.array([[cellsize + 1, cellsize + nquads]], 'i', order='F'))\npe = CGL.newParentElements(quads, NPY.array([[1, 2], [1, cellsize + 1], [1, 2]], dtype='int32', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements parentelements bad values #2'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nnhexa = 2\nhexas = CGL.newElements(z, 'HEXAS', CGK.HEXA_8_s, NPY.ones((nhexa * 8), dtype='int32'),\n                        NPY.array([[1, nhexa]], 'i', order='F'))\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones(((cellsize - nhexa) * 4), dtype='int32'),\n                         NPY.array([[nhexa + 1, cellsize]], 'i', order='F'))\nnquads = 3\nquads = CGL.newElements(z, 'QUADS', CGK.QUAD_4_s, NPY.ones((nquads * 4), dtype='int32'),\n                        NPY.array([[cellsize + 1, cellsize + nquads]], 'i', order='F'))\npe = CGL.newParentElements(quads, NPY.ones((nquads, 2), dtype='int32', order='F'))\npe[1][0][1] = nhexa + 1\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements parentelements with boundary faces'\ndiag = True\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nnhexa = 2\nhexas = CGL.newElements(z, 'HEXAS', CGK.HEXA_8_s, NPY.ones((nhexa * 8), dtype='int32'),\n                        NPY.array([[1, nhexa]], 'i', order='F'))\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones(((cellsize - nhexa) * 4), dtype='int32'),\n                         NPY.array([[nhexa + 1, cellsize]], 'i', order='F'))\nnquads = 3\nquads = CGL.newElements(z, 'QUADS', CGK.QUAD_4_s, NPY.ones((nquads * 4), dtype='int32'),\n                        NPY.array([[cellsize + 1, cellsize + nquads]], 'i', order='F'))\npe = CGL.newParentElements(quads, NPY.array([[1, 0], [2, 0], [2, 0]], dtype='int32', order='F'))\nzbc = CGL.newZoneBC(z)\nn = CGL.newBoundary(zbc, 'BC', [range(cellsize + 1, cellsize + nquads + 1)], btype=CGK.Null_s, family=None,\n                    pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements parentelements with boundary faces but no BC or GC (warning)'\ndiag = True\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nnhexa = 2\nhexas = CGL.newElements(z, 'HEXAS', CGK.HEXA_8_s, NPY.ones((nhexa * 8), dtype='int32'),\n                        NPY.array([[1, nhexa]], 'i', order='F'))\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones(((cellsize - nhexa) * 4), dtype='int32'),\n                         NPY.array([[nhexa + 1, cellsize]], 'i', order='F'))\nnquads = 3\nquads = CGL.newElements(z, 'QUADS', CGK.QUAD_4_s, NPY.ones((nquads * 4), dtype='int32'),\n                        NPY.array([[cellsize + 1, cellsize + nquads]], 'i', order='F'))\npe = CGL.newParentElements(quads, NPY.array([[1, 0], [2, 0], [2, 0]], dtype='int32', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements parentelements with boundary faces but badly defined'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nnhexa = 2\nhexas = CGL.newElements(z, 'HEXAS', CGK.HEXA_8_s, NPY.ones((nhexa * 8), dtype='int32'),\n                        NPY.array([[1, nhexa]], 'i', order='F'))\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones(((cellsize - nhexa) * 4), dtype='int32'),\n                         NPY.array([[nhexa + 1, cellsize]], 'i', order='F'))\nnquads = 3\nquads = CGL.newElements(z, 'QUADS', CGK.QUAD_4_s, NPY.ones((nquads * 4), dtype='int32'),\n                        NPY.array([[cellsize + 1, cellsize + nquads]], 'i', order='F'))\npe = CGL.newParentElements(quads, NPY.zeros((nquads, 2), dtype='int32', order='F'))\nzbc = CGL.newZoneBC(z)\nn = CGL.newBoundary(zbc, 'BC', [range(cellsize + 1, cellsize + nquads + 1)], btype=CGK.Null_s, family=None,\n                    pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements parentelements and elementsizeboundary compatible'\ndiag = True\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nnhexa = 2\nhexas = CGL.newElements(z, 'HEXAS', CGK.HEXA_8_s, NPY.ones((nhexa * 8), dtype='int32'),\n                        NPY.array([[1, nhexa]], 'i', order='F'))\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones(((cellsize - nhexa) * 4), dtype='int32'),\n                         NPY.array([[nhexa + 1, cellsize]], 'i', order='F'))\nnquads = 3\nquads = CGL.newElements(z, 'QUADS', CGK.QUAD_4_s, NPY.ones((nquads * 4), dtype='int32'),\n                        NPY.array([[cellsize + 1, cellsize + nquads]], 'i', order='F'))\nquads[1][1] = nquads\npe = CGL.newParentElements(quads, NPY.array([[1, 0], [2, 0], [2, 0]], dtype='int32', order='F'))\nzbc = CGL.newZoneBC(z)\nn = CGL.newBoundary(zbc, 'BC', [range(cellsize + 1, cellsize + nquads + 1)], btype=CGK.Null_s, family=None,\n                    pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements parentelements and elementsizeboundary not compatible'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nnhexa = 2\nhexas = CGL.newElements(z, 'HEXAS', CGK.HEXA_8_s, NPY.ones((nhexa * 8), dtype='int32'),\n                        NPY.array([[1, nhexa]], 'i', order='F'))\ntetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones(((cellsize - nhexa) * 4), dtype='int32'),\n                         NPY.array([[nhexa + 1, cellsize]], 'i', order='F'))\nnquads = 3\nquads = CGL.newElements(z, 'QUADS', CGK.QUAD_4_s, NPY.ones((nquads * 4), dtype='int32'),\n                        NPY.array([[cellsize + 1, cellsize + nquads]], 'i', order='F'))\nquads[1][1] = nquads\npe = CGL.newParentElements(quads, NPY.ones((nquads, 2), dtype='int32', order='F'))\nzbc = CGL.newZoneBC(z)\nn = CGL.newBoundary(zbc, 'BC', [range(cellsize + 1, cellsize + nquads + 1)], btype=CGK.Null_s, family=None,\n                    pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'elements parentelementsposition bad face position'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize)\nhexas = CGL.newElements(z, 'HEXAS', CGK.HEXA_8_s, NPY.ones((cellsize * 8), dtype='int32'),\n                        NPY.array([[1, cellsize]], 'i', order='F'))\nnquads = 3\nquads = CGL.newElements(z, 'QUADS', CGK.QUAD_4_s, NPY.ones((nquads * 4), dtype='int32'),\n                        NPY.array([[cellsize + 1, cellsize + nquads]], 'i', order='F'))\npe = CGL.newParentElements(quads, NPY.ones((nquads, 2), dtype='int32', order='F'))\npp = CGL.newParentElementsPosition(quads, NPY.ones((nquads, 2), dtype='int32', order='F') * 7)  # 7 > 6 faces for hexas\nTESTS.append((tag, T, diag))\n"""
CGNS/VAL/suite/SIDS/07flowsolution.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS.VAL - Python package for CFD General Notation System - VALidater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nTESTS = []\n\n#  -------------------------------------------------------------------------\ntag = 'flowsolution unstructured'\ndiag = True\n\n\ndef makeUnstTree(vertexsize, cellsize):\n    T = CGL.newCGNSTree()\n    b = CGL.newBase(T, 'Base', 3, 3)\n    s = NPY.array([[vertexsize, cellsize, 0]], dtype='int32', order='F')\n    z = CGL.newZone(b, 'Zone', s, CGK.Unstructured_s)\n    g = CGL.newGridCoordinates(z, 'GridCoordinates')\n    d = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    tetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                             NPY.array([[1, cellsize]], 'i', order='F'))\n    return (T, b, z)\n\n\nvertexsize = 20\ncellsize = 7\n(T, b, z) = makeUnstTree(vertexsize, cellsize)\nsol1 = CGL.newFlowSolution(z, name='sol1', gridlocation=CGK.Vertex_s)\nCGL.newDataArray(sol1, 'var', value=NPY.ones(vertexsize, dtype='float64', order='Fortran'))\nsol2 = CGL.newFlowSolution(z, name='sol2', gridlocation=CGK.CellCenter_s)\nCGL.newDataArray(sol2, 'var', value=NPY.ones(cellsize, dtype='float64', order='Fortran'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'flowsolution bad dataarray dim'\ndiag = False\n(T, b, z) = makeUnstTree(vertexsize, cellsize)\nsol1 = CGL.newFlowSolution(z, name='sol1', gridlocation=CGK.Vertex_s)\nCGL.newDataArray(sol1, 'var', value=NPY.ones(vertexsize + 1, dtype='float64', order='Fortran'))\nsol2 = CGL.newFlowSolution(z, name='sol2', gridlocation=CGK.CellCenter_s)\nCGL.newDataArray(sol2, 'var', value=NPY.ones(cellsize + 1, dtype='float64', order='Fortran'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'flowsolution structured'\ndiag = True\n\n\ndef makeStTree(vertexsize, cellsize):\n    T = CGL.newCGNSTree()\n    b = CGL.newBase(T, '{Base}', 3, 3)\n    z = CGL.newZone(b, '{Zone}', NPY.array(\n        [[vertexsize[0], cellsize[0], 0], [vertexsize[1], cellsize[1], 0], [vertexsize[2], cellsize[2], 0]], order='F'))\n    g = CGL.newGridCoordinates(z, 'GridCoordinates')\n    d = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones(tuple(vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones(tuple(vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones(tuple(vertexsize), dtype='float64', order='F'))\n    return (T, b, z)\n\n\nvertexsize = [5, 7, 9]\ncellsize = [i - 1 for i in vertexsize]\n(T, b, z) = makeStTree(vertexsize, cellsize)\nsol1 = CGL.newFlowSolution(z, name='sol1', gridlocation=CGK.Vertex_s)\nCGL.newDataArray(sol1, 'var', value=NPY.ones(tuple(vertexsize), dtype='float64', order='Fortran'))\nsol2 = CGL.newFlowSolution(z, name='sol2', gridlocation=CGK.CellCenter_s)\nCGL.newDataArray(sol2, 'var', value=NPY.ones(tuple(cellsize), dtype='float64', order='Fortran'))\nsol3 = CGL.newFlowSolution(z, name='sol3', gridlocation=CGK.Vertex_s)\nCGL.newRind(sol3, NPY.ones(2 * 3, dtype='int32', order='Fortran'))\ndsize = [i + 1 + 1 for i in vertexsize]\nCGL.newDataArray(sol3, 'var', value=NPY.ones(tuple(dsize), dtype='float64', order='Fortran'))\nsol4 = CGL.newFlowSolution(z, name='sol4', gridlocation=CGK.CellCenter_s)\nCGL.newRind(sol4, NPY.ones(2 * 3, dtype='int32', order='Fortran'))\ndsize = [i + 1 + 1 for i in cellsize]\nCGL.newDataArray(sol4, 'var', value=NPY.ones(tuple(dsize), dtype='float64', order='Fortran'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'flowsolution bad dataarray dim'\ndiag = False\n(T, b, z) = makeStTree(vertexsize, cellsize)\nsol1 = CGL.newFlowSolution(z, name='sol1', gridlocation=CGK.Vertex_s)\ndsize = [i + 1 for i in vertexsize]\nCGL.newDataArray(sol1, 'var', value=NPY.ones(tuple(dsize), dtype='float64', order='Fortran'))\nsol2 = CGL.newFlowSolution(z, name='sol2', gridlocation=CGK.CellCenter_s)\ndsize = [i + 1 for i in cellsize]\nCGL.newDataArray(sol2, 'var', value=NPY.ones(tuple(dsize), dtype='float64', order='Fortran'))\nsol3 = CGL.newFlowSolution(z, name='sol3', gridlocation=CGK.Vertex_s)\nCGL.newRind(sol3, NPY.ones(2 * 3, dtype='int32', order='Fortran'))\ndsize = [i for i in vertexsize]\nCGL.newDataArray(sol3, 'var', value=NPY.ones(tuple(dsize), dtype='float64', order='Fortran'))\nsol4 = CGL.newFlowSolution(z, name='sol4', gridlocation=CGK.CellCenter_s)\nCGL.newRind(sol4, NPY.ones(2 * 3, dtype='int32', order='Fortran'))\ndsize = [i for i in cellsize]\nCGL.newDataArray(sol4, 'var', value=NPY.ones(tuple(dsize), dtype='float64', order='Fortran'))\nTESTS.append((tag, T, diag))\n"""
CGNS/VAL/suite/SIDS/07grid.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nTESTS = []\n\n#  -------------------------------------------------------------------------\ntag = 'grid 1D'\ndiag = True\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 1, 1)\nz = CGL.newZone(b, '{Zone}', NPY.array([[5, 4, 0]], order='F'))\ng = CGL.newGridCoordinates(z, 'GridCoordinates')\nd = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5,), dtype='float64', order='F'))\ng = CGL.newGridCoordinates(z, '{Grid#002}')\nd = CGL.newDataArray(g, CGK.CoordinateR_s, NPY.ones((5,), dtype='float64', order='F'))\ng = CGL.newGridCoordinates(z, '{Grid#003}')\nd = CGL.newDataArray(g, CGK.CoordinateXi_s, NPY.ones((5,), dtype='float64', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'grid 2D'\ndiag = True\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 2, 2)\nz = CGL.newZone(b, '{Zone}', NPY.array([[5, 4, 0], [7, 6, 0]], order='F'))\ng = CGL.newGridCoordinates(z, 'GridCoordinates')\nd = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7), dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7), dtype='float64', order='F'))\ng = CGL.newGridCoordinates(z, '{Grid#002}')\nd = CGL.newDataArray(g, CGK.CoordinateXi_s, NPY.ones((5, 7), dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateEta_s, NPY.ones((5, 7), dtype='float64', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'grid 3D #1'\ndiag = True\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nz = CGL.newZone(b, '{Zone}', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\ng = CGL.newGridCoordinates(z, 'GridCoordinates')\nd = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'grid 3D #2'\ndiag = True\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 2, 3)\nz = CGL.newZone(b, '{Zone}', NPY.array([[5, 4, 0], [7, 6, 0]], order='F'))\ng = CGL.newGridCoordinates(z, 'GridCoordinates')\nd = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7), dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7), dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7), dtype='float64', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'grid empty #1'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nz = CGL.newZone(b, '{Zone}', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\ng = CGL.newGridCoordinates(z, 'GridCoordinates')\ng = CGL.newGridCoordinates(z, '{Grid#002}')\ng = CGL.newGridCoordinates(z, '{Grid#003}')\ng = CGL.newGridCoordinates(z, '{Grid#004}')\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'grid empty #2'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nz = CGL.newZone(b, '{Zone}', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\ng = CGL.newGridCoordinates(z, 'GridCoordinates')\nr = CGL.newUserDefinedData(g, '{UserDefinedData}')\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'grid bad dims #1'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base}', 3, 3)\nz = CGL.newZone(b, '{Zone}', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\ng = CGL.newGridCoordinates(z, 'GridCoordinates')\nd = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((4, 7, 9), dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\nd = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\n"""
CGNS/VAL/suite/SIDS/07zonesubregion.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS.VAL - Python package for CFD General Notation System - VALidater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nTESTS = []\n\n#  -------------------------------------------------------------------------\ntag = 'zonesubregion'\ndiag = True\n\n\ndef makeCorrectTree(vertexsize, cellsize, ntris):\n    T = CGL.newCGNSTree()\n    b = CGL.newBase(T, 'Base', 3, 3)\n    s = NPY.array([[vertexsize, cellsize, 0]], dtype='int32', order='F')\n    z = CGL.newZone(b, 'Zone', s, CGK.Unstructured_s)\n    g = CGL.newGridCoordinates(z, 'GridCoordinates')\n    d = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    tetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                             NPY.array([[1, cellsize]], 'i', order='F'))\n    tris = CGL.newElements(z, 'TRIS', CGK.TRI_3_s, NPY.ones((ntris * 3), dtype='int32'),\n                           NPY.array([[cellsize + 1, cellsize + ntris]], 'i', order='F'))\n    zbc = CGL.newZoneBC(z)\n    n = CGL.newBoundary(zbc, 'BC', [range(cellsize + 1, cellsize + ntris + 1)], btype=CGK.Null_s, family=None,\n                        pttype=CGK.PointList_s)\n    g = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\n    return (T, b, z)\n\n\nvertexsize = 20\ncellsize = 7\nntris = 11\n(T, b, z) = makeCorrectTree(vertexsize, cellsize, ntris)\nzsr1 = CGU.newNode('SubRegion1', NPY.array([3], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.PointRange_s, NPY.array([[1, vertexsize]], dtype=NPY.int32, order='Fortran'), [], CGK.IndexRange_ts,\n            parent=zsr1)\nCGL.newDataArray(zsr1, 'var', value=NPY.ones(vertexsize, dtype='float64', order='Fortran'))\nzsr2 = CGU.newNode('SubRegion2', NPY.array([3], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.PointList_s, NPY.array([range(1, vertexsize + 1)], dtype=NPY.int32, order='Fortran'), [],\n            CGK.IndexArray_ts, parent=zsr2)\nCGL.newDataArray(zsr2, 'var', value=NPY.ones(vertexsize, dtype='float64', order='Fortran'))\nzsr3 = CGU.newNode('SubRegion3', NPY.array([2], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.BCRegionName_s, CGU.setStringAsArray('BC'), [], CGK.Descriptor_ts, parent=zsr3)\nCGL.newDataArray(zsr3, 'var', value=NPY.ones(ntris, dtype='float64', order='Fortran'))\nzsr5 = CGU.newNode('SubRegion5', NPY.array([3], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.PointRange_s, NPY.array([[1, cellsize]], dtype=NPY.int32, order='Fortran'), [], CGK.IndexRange_ts,\n            parent=zsr5)\nCGL.newGridLocation(zsr5, value=CGK.CellCenter_s)\nCGL.newDataArray(zsr5, 'var', value=NPY.ones(cellsize, dtype='float64', order='Fortran'))\nzsr6 = CGU.newNode('SubRegion6', NPY.array([3], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.PointList_s, NPY.array([range(1, cellsize + 1)], dtype=NPY.int32, order='Fortran'), [],\n            CGK.IndexArray_ts, parent=zsr6)\nCGL.newGridLocation(zsr6, value=CGK.CellCenter_s)\nCGL.newDataArray(zsr6, 'var', value=NPY.ones(cellsize, dtype='float64', order='Fortran'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zonesubregion bad node value'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize, ntris)\nzsr1 = CGU.newNode('SubRegion1', NPY.array([4], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.PointRange_s, NPY.array([[1, vertexsize]], dtype=NPY.int32, order='Fortran'), [], CGK.IndexRange_ts,\n            parent=zsr1)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zonesubregion bad Grid Location'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize, ntris)\nzsr1 = CGU.newNode('SubRegion1', NPY.array([2], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.PointRange_s, NPY.array([[1, cellsize]], dtype=NPY.int32, order='Fortran'), [], CGK.IndexRange_ts,\n            parent=zsr1)\nCGL.newGridLocation(zsr1, value=CGK.CellCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zonesubregion bad children'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize, ntris)\nzsr1 = CGU.newNode('SubRegion1', NPY.array([3], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.PointRange_s, NPY.array([[1, vertexsize]], dtype=NPY.int32, order='Fortran'), [], CGK.IndexRange_ts,\n            parent=zsr1)\nCGU.newNode(CGK.PointList_s, NPY.array([range(1, vertexsize + 1)], dtype=NPY.int32, order='Fortran'), [],\n            CGK.IndexArray_ts, parent=zsr1)\nCGU.newNode(CGK.BCRegionName_s, CGU.setStringAsArray('bc'), [], CGK.Descriptor_ts, parent=zsr1)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zonesubregion bad regionname'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize, ntris)\nzsr1 = CGU.newNode('SubRegion1', NPY.array([2], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.BCRegionName_s, CGU.setStringAsArray('bc'), [], CGK.Descriptor_ts, parent=zsr1)\nzsr4 = CGU.newNode('SubRegion4', NPY.array([2], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.GridConnectivityRegionName_s, CGU.setStringAsArray('GC'), [], CGK.Descriptor_ts, parent=zsr4)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zonesubregion bad dataarray shapes'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize, ntris)\nzsr1 = CGU.newNode('SubRegion1', NPY.array([3], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.PointRange_s, NPY.array([[1, vertexsize]], dtype=NPY.int32, order='Fortran'), [], CGK.IndexRange_ts,\n            parent=zsr1)\nCGL.newDataArray(zsr1, 'var', value=NPY.ones(vertexsize + 1, dtype='float64', order='Fortran'))\nzsr2 = CGU.newNode('SubRegion2', NPY.array([3], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.PointList_s, NPY.array([range(1, vertexsize + 1)], dtype=NPY.int32, order='Fortran'), [],\n            CGK.IndexArray_ts, parent=zsr2)\nCGL.newDataArray(zsr2, 'var', value=NPY.ones(vertexsize + 1, dtype='float64', order='Fortran'))\nzsr3 = CGU.newNode('SubRegion3', NPY.array([2], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.BCRegionName_s, CGU.setStringAsArray('BC'), [], CGK.Descriptor_ts, parent=zsr3)\nCGL.newDataArray(zsr3, 'var', value=NPY.ones(cellsize, dtype='float64', order='Fortran'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zonesubregion bad point list on cell and face subregions'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize, ntris)\nzsr6 = CGU.newNode('SubRegion6', NPY.array([3], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.PointList_s, NPY.array([range(1, cellsize + 2)], dtype=NPY.int32, order='Fortran'), [],\n            CGK.IndexArray_ts, parent=zsr6)\nCGL.newGridLocation(zsr6, value=CGK.CellCenter_s)\nzsr7 = CGU.newNode('SubRegion7', NPY.array([3], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.PointList_s, NPY.array([range(cellsize, cellsize + ntris)], dtype=NPY.int32, order='Fortran'), [],\n            CGK.IndexArray_ts, parent=zsr7)\nCGL.newGridLocation(zsr7, value=CGK.FaceCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'zonesubregion bad point range on cell and face subregions'\ndiag = False\n(T, b, z) = makeCorrectTree(vertexsize, cellsize, ntris)\nzsr5 = CGU.newNode('SubRegion5', NPY.array([3], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.PointRange_s, NPY.array([[1, cellsize + 1]], dtype=NPY.int32, order='Fortran'), [], CGK.IndexRange_ts,\n            parent=zsr5)\nCGL.newGridLocation(zsr5, value=CGK.CellCenter_s)\nzsr8 = CGU.newNode('SubRegion8', NPY.array([3], dtype=NPY.int32, order='Fortran'), [], CGK.ZoneSubRegion_ts, parent=z)\nCGU.newNode(CGK.PointRange_s, NPY.array([[cellsize, cellsize + ntris]], dtype=NPY.int32, order='Fortran'), [],\n            CGK.IndexRange_ts, parent=zsr8)\nCGL.newGridLocation(zsr8, value=CGK.FaceCenter_s)\nTESTS.append((tag, T, diag))\n"""
CGNS/VAL/suite/SIDS/08gridconnectivity.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS.VAL - Python package for CFD General Notation System - VALidater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nTESTS = []\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity'\ndiag = True\nvertexsize = 20\ncellsize = 7\nntris = 12\n\n\ndef makeCorrectTree():\n    T = CGL.newCGNSTree()\n    b = CGL.newBase(T, 'Base', 3, 3)\n    z1 = CGL.newZone(b, 'Zone1', NPY.array([[5, 4, 0], [7, 6, 0], [9, 8, 0]], order='F'))\n    g = CGL.newGridCoordinates(z1, 'GridCoordinates')\n    d = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7, 9), dtype='float64', order='F'))\n    s = NPY.array([[vertexsize, cellsize, 0]], dtype='int32', order='F')\n    z2 = CGL.newZone(b, 'Zone2', s, CGK.Unstructured_s)\n    g = CGL.newGridCoordinates(z2, 'GridCoordinates')\n    d = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    tetras = CGL.newElements(z2, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                             NPY.array([[1, cellsize]], 'i', order='F'))\n    tris = CGL.newElements(z2, 'TRIS', CGK.TRI_3_s, NPY.ones((ntris * 3), dtype='int32'),\n                           NPY.array([[cellsize + 1, cellsize + ntris]], 'i', order='F'))\n    z3 = CGU.copyNode(z1, 'Zone3')\n    b[2].append(z3)\n    z4 = CGU.copyNode(z2, 'Zone4')\n    b[2].append(z4)\n    z = [z1, z2, z3, z4]\n    return (T, b, z)\n\n\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity(zgc, 'join1_3', 'Zone3', ctype=CGK.Abutting1to1_s)\nCGL.newPointRange(gc, value=NPY.array([[1, 1], [1, 7], [1, 9]], order='F'))\nCGL.newPointRange(gc, name=CGK.PointRangeDonor_s, value=NPY.array([[1, 1], [1, 7], [1, 9]], order='F'))\ngc = CGL.newGridConnectivity(zgc, 'join1_2', 'Zone2', ctype=CGK.Abutting1to1_s)\nCGL.newPointRange(gc, value=NPY.array([[1, 5], [1, 1], [1, 9]], order='F'))\nCGL.newIndexArray(gc, CGK.PointListDonor_s, value=NPY.array([range(cellsize + 1, cellsize + ntris + 1)], order='F'))\nCGL.newGridLocation(gc, value=CGK.FaceCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity bad datatype'\ndiag = False\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity(zgc, 'join1_2', 'Zone2', ctype=CGK.Abutting1to1_s)\nCGL.newPointRange(gc, value=NPY.array([[1, 5], [1, 1], [1, 9]], order='F'))\nCGL.newIndexArray(gc, CGK.PointListDonor_s, value=NPY.array([range(cellsize + 1, cellsize + ntris + 1)], order='F'))\nCGL.newGridLocation(gc, value=CGK.FaceCenter_s)\ngc[1] = NPY.array([1], order='F')\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity unfound zonedonor'\ndiag = False\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity(zgc, 'join1_2', 'Zone6', ctype=CGK.Abutting1to1_s)\nCGL.newPointRange(gc, value=NPY.array([[1, 5], [1, 1], [1, 9]], order='F'))\nCGL.newIndexArray(gc, CGK.PointListDonor_s, value=NPY.array([range(cellsize + 1, cellsize + ntris + 1)], order='F'))\nCGL.newGridLocation(gc, value=CGK.FaceCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity bad pointrange/list'\ndiag = False\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity(zgc, 'join1_2', 'Zone2', ctype=CGK.Abutting1to1_s)\nCGL.newPointRange(gc, value=NPY.array([[1, 5], [1, 1], [1, 9]], order='F'))\nCGL.newIndexArray(gc, CGK.PointList_s, value=NPY.array([[1, 5], [1, 1], [1, 9]], order='F'))\nCGL.newIndexArray(gc, CGK.PointListDonor_s, value=NPY.array([range(cellsize + 1, cellsize + ntris + 1)], order='F'))\nCGL.newGridLocation(gc, value=CGK.FaceCenter_s)\ngc = CGL.newGridConnectivity(zgc, 'join1_3', 'Zone3', ctype=CGK.Abutting1to1_s)\nCGL.newPointRange(gc, name=CGK.PointRangeDonor_s, value=NPY.array([[1, 1], [1, 7], [1, 9]], order='F'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity bad gridlocation'\ndiag = False\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity(zgc, 'join1_2a', 'Zone2', ctype=CGK.Abutting1to1_s)\nCGL.newPointRange(gc, value=NPY.array([[1, 4], [1, 1], [1, 8]], order='F'))\nCGL.newIndexArray(gc, CGK.PointListDonor_s, value=NPY.array([range(1, cellsize)], order='F'))\nCGL.newGridLocation(gc, value=CGK.CellCenter_s)\ngc = CGL.newGridConnectivity(zgc, 'join1_2b', 'Zone2', ctype=CGK.Overset_s)\nCGL.newPointRange(gc, value=NPY.array([[1, 5], [1, 7], [1, 1]], order='F'))\nCGL.newIndexArray(gc, CGK.PointListDonor_s, value=NPY.array([range(cellsize + 1, cellsize + ntris + 1)], order='F'))\nCGL.newGridLocation(gc, value=CGK.FaceCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity bad range on zonedonor #1'\ndiag = False\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity(zgc, 'join1_2', 'Zone2', ctype=CGK.Abutting1to1_s)\nCGL.newPointRange(gc, value=NPY.array([[1, 5], [1, 1], [1, 9]], order='F'))\nCGL.newIndexArray(gc, CGK.PointListDonor_s, value=NPY.array([range(cellsize - 1, cellsize + ntris + 1)], order='F'))\nCGL.newGridLocation(gc, value=CGK.FaceCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity bad range on zonedonor #2'\ndiag = False\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity(zgc, 'join1_2', 'Zone2', ctype=CGK.Abutting1to1_s)\nCGL.newPointRange(gc, value=NPY.array([[1, 5], [1, 1], [1, 9]], order='F'))\nCGL.newIndexArray(gc, CGK.PointListDonor_s, value=NPY.array([range(cellsize + 2, cellsize + ntris + 2)], order='F'))\nCGL.newGridLocation(gc, value=CGK.FaceCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity bad range on zonedonor #3'\ndiag = False\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity(zgc, 'join1_3', 'Zone3', ctype=CGK.Overset_s)\nCGL.newPointRange(gc, value=NPY.array([[1, 1], [1, 7], [1, 9]], order='F'))\nCGL.newPointRange(gc, name=CGK.PointRangeDonor_s, value=NPY.array([[1, 1], [1, 7], [1, 9]], order='F'))\nCGL.newGridLocation(gc, value=CGK.CellCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity abutting not a face'\ndiag = False\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity(zgc, 'join1_3', 'Zone3', ctype=CGK.Abutting1to1_s)\nCGL.newPointRange(gc, value=NPY.array([[1, 5], [1, 7], [1, 9]], order='F'))\nCGL.newPointRange(gc, name=CGK.PointRangeDonor_s, value=NPY.array([[1, 5], [1, 7], [1, 9]], order='F'))\nTESTS.append((tag, T, diag))\n"""
CGNS/VAL/suite/SIDS/08gridconnectivity1to1.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS.VAL - Python package for CFD General Notation System - VALidater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nTESTS = []\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity1to1'\ndiag = True\nvertexsize = 20\ncellsize = 7\nntris = 12\n\n\ndef makeCorrectTree():\n    T = CGL.newCGNSTree()\n    b = CGL.newBase(T, 'Base', 3, 3)\n    z1 = CGL.newZone(b, 'Zone1', NPY.array([[5, 4, 0], [7, 6, 0], [5, 4, 0]], order='F'))\n    g = CGL.newGridCoordinates(z1, 'GridCoordinates')\n    d = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((5, 7, 5), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((5, 7, 5), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((5, 7, 5), dtype='float64', order='F'))\n    s = NPY.array([[vertexsize, cellsize, 0]], dtype='int32', order='F')\n    z2 = CGU.copyNode(z1, 'Zone2')\n    b[2].append(z2)\n    z = [z1, z2]\n    return (T, b, z)\n\n\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity1to1(zgc, 'join1_2', 'Zone2', NPY.array([[1, 1], [1, 7], [1, 5]]),\n                                 NPY.array([[1, 5], [1, 7], [5, 5]]), NPY.array([+1, +2, +3]))\nzgc = CGL.newZoneGridConnectivity(z[1])\ngc = CGL.newGridConnectivity1to1(zgc, 'join2_1', 'Zone1', NPY.array([[1, 5], [1, 7], [5, 5]]),\n                                 NPY.array([[1, 1], [1, 7], [1, 5]]), NPY.array([+1, +2, +3]))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity1to1 bad datatype'\ndiag = False\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity1to1(zgc, 'join1_2', 'Zone2', NPY.array([[1, 1], [1, 7], [1, 5]]),\n                                 NPY.array([[1, 1], [1, 7], [5, 5]]), NPY.array([+1, +2, +3]))\ngc[1] = NPY.array([1], order='F')\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity1to1 absent opposite GridConnectivity'\ndiag = False\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity1to1(zgc, 'join1_2', 'Zone2', NPY.array([[1, 1], [1, 7], [1, 5]]),\n                                 NPY.array([[1, 5], [1, 7], [5, 5]]), NPY.array([+1, +2, +3]))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity1to1 unvalid opposite GridConnectivity'\ndiag = False\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity1to1(zgc, 'join1_2', 'Zone2', NPY.array([[1, 1], [1, 7], [1, 5]]),\n                                 NPY.array([[1, 5], [1, 7], [5, 5]]), NPY.array([+1, +2, +3]))\nzgc = CGL.newZoneGridConnectivity(z[1])\ngc = CGL.newGridConnectivity1to1(zgc, 'join2_1', 'Zone1', NPY.array([[1, 5], [1, 7], [5, 5]]),\n                                 NPY.array([[1, 1], [1, 7], [1, 5]]), NPY.array([+1, +2, +3]))\nCGU.removeChildByName(gc, CGK.PointRangeDonor_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity1to1 bad shape on Transform'\ndiag = False\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity1to1(zgc, 'join1_2', 'Zone2', NPY.array([[1, 1], [1, 7], [1, 5]]),\n                                 NPY.array([[1, 5], [1, 7], [5, 5]]), NPY.array([[+1, +2, +3]]))\nzgc = CGL.newZoneGridConnectivity(z[1])\ngc = CGL.newGridConnectivity1to1(zgc, 'join2_1', 'Zone1', NPY.array([[1, 5], [1, 7], [5, 5]]),\n                                 NPY.array([[1, 1], [1, 7], [1, 5]]), NPY.array([+1, +2, +3]))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity1to1 bad Transform'\ndiag = False\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity1to1(zgc, 'join1_2', 'Zone2', NPY.array([[1, 1], [1, 7], [1, 5]]),\n                                 NPY.array([[1, 5], [1, 7], [5, 5]]), NPY.array([+1, +2, -4]))\nzgc = CGL.newZoneGridConnectivity(z[1])\ngc = CGL.newGridConnectivity1to1(zgc, 'join2_1', 'Zone1', NPY.array([[1, 5], [1, 7], [5, 5]]),\n                                 NPY.array([[1, 1], [1, 7], [1, 5]]), NPY.array([+1, +2, +4]))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity1to1 several 0 in Transform'\ndiag = False\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity1to1(zgc, 'join1_2', 'Zone2', NPY.array([[1, 1], [1, 7], [1, 5]]),\n                                 NPY.array([[1, 5], [1, 7], [5, 5]]), NPY.array([+1, 0, 0]))\nzgc = CGL.newZoneGridConnectivity(z[1])\ngc = CGL.newGridConnectivity1to1(zgc, 'join2_1', 'Zone1', NPY.array([[1, 5], [1, 7], [5, 5]]),\n                                 NPY.array([[1, 1], [1, 7], [1, 5]]), NPY.array([+1, +2, +3]))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'gridconnectivity1to1 not a face'\ndiag = False\n(T, b, z) = makeCorrectTree()\nzgc = CGL.newZoneGridConnectivity(z[0])\ngc = CGL.newGridConnectivity1to1(zgc, 'join1_2', 'Zone2', NPY.array([[1, 5], [1, 7], [1, 5]]),\n                                 NPY.array([[1, 5], [1, 7], [1, 5]]), NPY.array([+1, +2, +3]))\nzgc = CGL.newZoneGridConnectivity(z[1])\ngc = CGL.newGridConnectivity1to1(zgc, 'join2_1', 'Zone1', NPY.array([[1, 5], [1, 7], [1, 5]]),\n                                 NPY.array([[1, 5], [1, 7], [1, 5]]), NPY.array([+1, +2, +3]))\nTESTS.append((tag, T, diag))\n"""
CGNS/VAL/suite/SIDS/09bc.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS.VAL - Python package for CFD General Notation System - VALidater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nTESTS = []\n\n#  -------------------------------------------------------------------------\ntag = 'bc'\ndiag = True\n\n\ndef makeCorrectTree(vertexsize, cellsize, ntris):\n    T = CGL.newCGNSTree()\n    b = CGL.newBase(T, 'Base', 3, 3)\n    s = NPY.array([[vertexsize, cellsize, 0]], dtype='int32', order='F')\n    z = CGL.newZone(b, 'Zone', s, CGK.Unstructured_s)\n    g = CGL.newGridCoordinates(z, 'GridCoordinates')\n    d = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    tetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                             NPY.array([[1, cellsize]], 'i', order='F'))\n    tris = CGL.newElements(z, 'TRIS', CGK.TRI_3_s, NPY.ones((ntris * 3), dtype='int32'),\n                           NPY.array([[cellsize + 1, cellsize + ntris]], 'i', order='F'))\n    zbc = CGL.newZoneBC(z)\n    n = CGL.newBoundary(zbc, 'BC', [range(cellsize + 1, cellsize + ntris + 1)], btype=CGK.Null_s, family=None,\n                        pttype=CGK.PointList_s)\n    g = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\n    return (T, b, z, zbc, n, g)\n\n\nvertexsize = 20\ncellsize = 7\nntris = 12\n(T, b, z, zbc, n, g) = makeCorrectTree(vertexsize, cellsize, ntris)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bc bad location'\ndiag = False\n(T, b, z, zbc, n, g) = makeCorrectTree(vertexsize, cellsize, ntris)\nCGL.newPointRange(n, value=NPY.array([[1, cellsize]], 'i'))\nzbc[2] = []\nn = CGL.newBoundary(zbc, 'BC', [range(1, cellsize + 1)], btype=CGK.Null_s, family=None, pttype=CGK.PointList_s)\ng = CGL.newGridLocation(n, value=CGK.CellCenter_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bc both PointList and PointRange'\ndiag = False\n(T, b, z, zbc, n, g) = makeCorrectTree(vertexsize, cellsize, ntris)\nCGL.newPointRange(n, value=NPY.array([[cellsize + 1, cellsize + ntris]], 'i'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bc no PointList or PointRange'\ndiag = False\n(T, b, z, zbc, n, g) = makeCorrectTree(vertexsize, cellsize, ntris)\nCGU.removeChildByName(n, CGK.PointList_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bc FamilySpecified but not FamilyName'\ndiag = False\n(T, b, z, zbc, n, g) = makeCorrectTree(vertexsize, cellsize, ntris)\nn[1] = CGU.setStringAsArray(CGK.FamilySpecified_s)\nTESTS.append((tag, T, diag))\n"""
CGNS/VAL/suite/SIDS/09bcdataset.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS.VAL - Python package for CFD General Notation System - VALidater\n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nTESTS = []\n\n#  -------------------------------------------------------------------------\ntag = 'bc'\ndiag = True\n\n\ndef makeCorrectTree(vertexsize, cellsize, ntris):\n    T = CGL.newCGNSTree()\n    b = CGL.newBase(T, 'Base', 3, 3)\n    s = NPY.array([[vertexsize, cellsize, 0]], dtype='int32', order='F')\n    z = CGL.newZone(b, 'Zone', s, CGK.Unstructured_s)\n    g = CGL.newGridCoordinates(z, 'GridCoordinates')\n    d = CGL.newDataArray(g, CGK.CoordinateX_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateY_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    d = CGL.newDataArray(g, CGK.CoordinateZ_s, NPY.ones((vertexsize), dtype='float64', order='F'))\n    tetras = CGL.newElements(z, 'TETRAS', CGK.TETRA_4_s, NPY.ones((cellsize * 4), dtype='int32'),\n                             NPY.array([[1, cellsize]], 'i', order='F'))\n    tris = CGL.newElements(z, 'TRIS', CGK.TRI_3_s, NPY.ones((ntris * 3), dtype='int32'),\n                           NPY.array([[cellsize + 1, cellsize + ntris]], 'i', order='F'))\n    zbc = CGL.newZoneBC(z)\n    n = CGL.newBoundary(zbc, 'BC', [range(cellsize + 1, cellsize + ntris + 1)], btype=CGK.Null_s, family=None,\n                        pttype=CGK.PointList_s)\n    g = CGL.newGridLocation(n, value=CGK.FaceCenter_s)\n    return (T, b, z, zbc, n)\n\n\nvertexsize = 20\ncellsize = 7\nntris = 11\n(T, b, z, zbc, n) = makeCorrectTree(vertexsize, cellsize, ntris)\nCGL.newBCDataSet(n, 'Data', valueType=CGK.Null_s)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bc both PointList and PointRange'\ndiag = False\n(T, b, z, zbc, n) = makeCorrectTree(vertexsize, cellsize, ntris)\nbcd = CGL.newBCDataSet(n, 'Data', valueType=CGK.Null_s)\nCGL.newPointRange(bcd, value=NPY.array([[cellsize + 1, cellsize + ntris]], 'i'))\nCGL.newPointList(bcd, value=NPY.array([range(cellsize + 1, cellsize + ntris + 1)], 'i'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'bc bad Gridlocation'\ndiag = False\n(T, b, z, zbc, n) = makeCorrectTree(vertexsize, cellsize, ntris)\nbcd = CGL.newBCDataSet(n, 'Data', valueType=CGK.Null_s)\ng = CGL.newGridLocation(bcd, value=CGK.CellCenter_s)\n"""
CGNS/VAL/suite/SIDS/10equations.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nTESTS = []\n\n#  -------------------------------------------------------------------------\ntag = 'flow equation set'\ndiag = True\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base#001}', 3, 3)\nf = CGL.newFlowEquationSet(b)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'governing equations'\ndiag = True\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base#001}', 3, 3)\nf = CGL.newFlowEquationSet(b)\ng = CGL.newGoverningEquations(f)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'diffusion model'\ndiag = True\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base#001}', 3, 3)\nf = CGL.newFlowEquationSet(b)\ng = CGL.newGoverningEquations(f)\nd = CGL.newDiffusionModel(g, NPY.ones(6, dtype='int32'))\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'flow equation set all models #1'\ndiag = True\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base#001}', 3, 3)\nf = CGL.newFlowEquationSet(b)\ng = CGL.newGoverningEquations(f)\nd = CGL.newDiffusionModel(g, NPY.zeros(6, dtype='int32'))\nm = CGL.newGasModel(f)\nm = CGL.newThermalConductivityModel(f)\nm = CGL.newViscosityModel(f)\nm = CGL.newTurbulenceModel(f)\nm = CGL.newTurbulenceClosure(f)\nm = CGL.newThermalRelaxationModel(f)\nm = CGL.newChemicalKineticsModel(f)\nm = CGL.newEMElectricFieldModel(f)\nm = CGL.newEMMagneticFieldModel(f)\nm = CGL.newEMConductivityModel(f)\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\n"""
CGNS/VAL/suite/SIDS/12family.py,0,"b""#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\nfrom __future__ import unicode_literals\nimport CGNS.PAT.cgnslib as CGL\nimport CGNS.PAT.cgnsutils as CGU\nimport CGNS.PAT.cgnskeywords as CGK\nimport numpy as NPY\n\nTESTS = []\n\n#  -------------------------------------------------------------------------\ntag = 'base level family #1'\ndiag = True\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base#001}', 3, 3)\nCGL.newFamily(b, '{Family#001}')\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\ntag = 'family elsewhere than base'\ndiag = False\nT = CGL.newCGNSTree()\nb = CGL.newBase(T, '{Base#001}', 3, 3)\nu = CGL.newUserDefinedData(b, '{UD#001}')\nCGL.newFamily(u, '{Family#001}')\nTESTS.append((tag, T, diag))\n\n#  -------------------------------------------------------------------------\n"""
CGNS/VAL/suite/SIDS/__init__.py,0,b'#  -------------------------------------------------------------------------\n#  pyCGNS - Python package for CFD General Notation System - \n#  See license.txt file in the root directory of this Python module source  \n#  -------------------------------------------------------------------------\n#\npass\n'
CGNS/APP/examples/MAP/data/T0.py,0,"b'from numpy import *\ndata=[\'CGNSTree\', None, [[\'CGNSLibraryVersion\', array([ 2.4000001], dtype=float32), [], \'CGNSLibraryVersion_t\'], [\'Disk\', array([3, 3], dtype=int32), [[\'Ext\', None, [[\'FamilyBC\', array([\'B\', \'C\', \'F\', \'a\', \'r\', \'f\', \'i\', \'e\', \'l\', \'d\'], \n      dtype=\'|S1\'), [], \'FamilyBC_t\']], \'Family_t\'], [\'ReferenceState\', None, [[\'AngleofAttack\', array([ 7.]), [], \'DataArray_t\'], [\'BetaAngle\', array([ 0.]), [], \'DataArray_t\'], [\'Coef_Area\', array([ 0.025]), [], \'DataArray_t\'], [\'Coef_PressureDynamic\', array([ 2837.15315566]), [], \'DataArray_t\'], [\'Density\', array([ 1.22524864]), [], \'DataArray_t\'], [\'EnergyStagnationDensity\', array([ 256154.39919683]), [], \'DataArray_t\'], [\'LengthReference\', array([ 0.5]), [], \'DataArray_t\'], [\'Mach\', array([ 0.2]), [], \'DataArray_t\'], [\'MomentumX\', array([ 82.75975804]), [], \'DataArray_t\'], [\'MomentumY\', array([-0.]), [], \'DataArray_t\'], [\'MomentumZ\', array([ 10.16162055]), [], \'DataArray_t\'], [\'Pressure\', array([ 101326.89841647]), [], \'DataArray_t\'], [\'PressureStagnation\', array([ 104192.53670321]), [], \'DataArray_t\'], [\'ReferenceStateDescription\', array([\'G\', \'l\', \'o\', \'b\', \'a\', \'l\', \' \', \'r\', \'e\', \'f\', \'e\', \'r\', \'e\',\n       \'n\', \'c\', \'e\', \' \', \'s\', \'t\', \'a\', \'t\', \'e\'], \n      dtype=\'|S1\'), [], \'Descriptor_t\'], [\'Reynolds\', array([ 2330000.]), [], \'DataArray_t\'], [\'Temperature\', array([ 288.15]), [], \'DataArray_t\'], [\'TemperatureStagnation\', array([ 290.4552]), [], \'DataArray_t\'], [\'TurbulentSANuTilde\', array([  1.46035471e-08]), [], \'DataArray_t\'], [\'VelocityMagnitude\', array([ 68.05252971]), [], \'DataArray_t\']], \'ReferenceState_t\'], [\'Wall\', None, [[\'FamilyBC\', array([\'B\', \'C\', \'W\', \'a\', \'l\', \'l\'], \n      dtype=\'|S1\'), [], \'FamilyBC_t\']], \'Family_t\'], [\'_Solver#Command\', array([\'#\', \'!\', \'/\', \'b\', \'i\', \'n\', \'/\', \'e\', \'n\', \'v\', \' \', \'p\', \'y\',\n       \'t\', \'h\', \'o\', \'n\', \'\\n\', \'i\', \'m\', \'p\', \'o\', \'r\', \'t\', \' \', \'e\',\n       \'l\', \'s\', \'A\', \'x\', \'d\', \'t\', \'\\n\', \'\\n\', \'p\', \'a\', \'r\', \'s\', \'e\',\n       \'r\', \'=\', \'e\', \'l\', \'s\', \'A\', \'x\', \'d\', \'t\', \'.\', \'X\', \'d\', \'t\',\n       \'C\', \'G\', \'N\', \'S\', \'(\', \'""\', \'.\', \'/\', \'0\', \'0\', \'1\', \'D\', \'i\',\n       \'s\', \'k\', \'.\', \'c\', \'g\', \'n\', \'s\', \'""\', \')\', \'\\n\', \'p\', \'a\', \'r\',\n       \'s\', \'e\', \'r\', \'.\', \'c\', \'o\', \'m\', \'p\', \'u\', \'t\', \'e\', \'(\', \')\',\n       \'\\n\', \'p\', \'a\', \'r\', \'s\', \'e\', \'r\', \'.\', \'s\', \'a\', \'v\', \'e\', \'(\',\n       \'""\', \'.\', \'/\', \'D\', \'i\', \'s\', \'k\', \'O\', \'u\', \'t\', \'p\', \'u\', \'t\',\n       \'.\', \'c\', \'g\', \'n\', \'s\', \'""\', \')\', \'\\n\'], \n      dtype=\'|S1\'), [], \'Descriptor_t\'], [\'_Solver#Compute\', None, [[\'artviscosity\', array([\'d\', \'i\', \'s\', \'s\', \'c\', \'a\'], \n      dtype=\'|S1\'), [], \'DataArray_t\'], [\'avcoef_k2\', array([ 1.]), [], \'DataArray_t\'], [\'avcoef_k4\', array([ 0.032]), [], \'DataArray_t\'], [\'avcoef_sigma\', array([ 1.]), [], \'DataArray_t\'], [\'cfl\', array([ 1.]), [], \'DataArray_t\'], [\'fluid\', array([\'I\', \'d\', \'e\', \'a\', \'l\'], \n      dtype=\'|S1\'), [], \'DataArray_t\'], [\'flux\', array([\'j\', \'a\', \'m\', \'e\', \'s\', \'o\', \'n\'], \n      dtype=\'|S1\'), [], \'DataArray_t\'], [\'niter\', array([1000], dtype=int32), [], \'UserDefinedData_t\'], [\'ode\', array([\'r\', \'k\', \'4\'], \n      dtype=\'|S1\'), [], \'DataArray_t\'], [\'phymod\', array([\'N\', \'S\', \'T\', \'u\', \'r\', \'b\', \'u\', \'l\', \'e\', \'n\', \'t\'], \n      dtype=\'|S1\'), [], \'DataArray_t\'], [\'t_cutvar1\', array([  1.78929763e-08]), [], \'DataArray_t\'], [\'t_harten\', array([  1.00000000e-24]), [], \'DataArray_t\'], [\'time_algo\', array([\'s\', \'t\', \'e\', \'a\', \'d\', \'y\'], \n      dtype=\'|S1\'), [], \'DataArray_t\'], [\'turbmod\', array([10], dtype=int32), [], \'DataArray_t\'], [\'visclaw\', array([\'S\', \'u\', \'t\', \'h\', \'e\', \'r\', \'l\', \'a\', \'n\', \'d\'], \n      dtype=\'|S1\'), [], \'DataArray_t\'], [\'walldistcompute\', array([\'m\', \'i\', \'n\', \'i\', \'n\', \'t\', \'e\', \'r\', \'f\', \'_\', \'o\', \'r\', \'t\',\n       \'h\', \'o\'], \n      dtype=\'|S1\'), [], \'DataArray_t\']], \'UserDefinedData_t\'], [\'_Solver#Title\', array([\'B\', \'a\', \'s\', \'i\', \'c\', \' \', \'g\', \'r\', \'i\', \'d\'], \n      dtype=\'|S1\'), [], \'Descriptor_t\'], [\'zone1\', array([[20, 19,  0],\n       [50, 49,  0],\n       [ 2,  1,  0]], dtype=int32), [[\'FlowSolution#EndOfRun\', None, [[\'Density\', None, [], \'UserDefinedData_t\'], [\'EnergyStagnationDensity\', None, [], \'UserDefinedData_t\'], [\'GridLocation\', array([\'C\', \'e\', \'l\', \'l\', \'C\', \'e\', \'n\', \'t\', \'e\', \'r\'], \n      dtype=\'|S1\'), [], \'GridLocation_t\'], [\'MomentumX\', None, [], \'UserDefinedData_t\'], [\'MomentumY\', None, [], \'UserDefinedData_t\'], [\'MomentumZ\', None, [], \'UserDefinedData_t\'], [\'TurbulentEnergyKineticDensity\', None, [], \'UserDefinedData_t\']], \'FlowSolution_t\'], [\'GridCoordinates\', None, [[\'CoordinateX\', array([[[ 1.        ,  0.99179001,  0.96729486,  0.92691676,  0.8713187 ,\n          0.80141362,  0.71834935,  0.6234898 ,  0.51839257,  0.40478334,\n          0.28452759,  0.1595999 ,  0.03205158, -0.09602303, -0.22252093,\n         -0.34536505, -0.46253829, -0.57211666, -0.67230089, -0.76144596],\n        [ 1.08163265,  1.07275246,  1.04625771,  1.00258343,  0.94244676,\n          0.86683514,  0.77699011,  0.67438693,  0.56071033,  0.43782688,\n          0.30775433,  0.17262846,  0.03466803, -0.10386164, -0.24068591,\n         -0.37355812, -0.50029652, -0.61882006, -0.7271826 , -0.82360481],\n        [ 1.16326531,  1.15371491,  1.12522055,  1.07825011,  1.01357482,\n          0.93225666,  0.83563088,  0.72528406,  0.60302809,  0.47087042,\n          0.33098107,  0.18565702,  0.03728449, -0.11170025, -0.25885088,\n         -0.40175119, -0.53805475, -0.66552346, -0.7820643 , -0.88576367],\n        [ 1.24489796,  1.23467736,  1.2041834 ,  1.15391678,  1.08470288,\n          0.99767818,  0.89427164,  0.77618118,  0.64534585,  0.50391396,\n          0.35420781,  0.19868558,  0.03990094, -0.11953887, -0.27701586,\n         -0.42994425, -0.57581297, -0.71222686, -0.83694601, -0.94792252],\n        [ 1.32653061,  1.31563981,  1.28314625,  1.22958345,  1.15583093,\n          1.0630997 ,  0.9529124 ,  0.82707831,  0.68766361,  0.5369575 ,\n          0.37743455,  0.21171415,  0.0425174 , -0.12737748, -0.29518083,\n         -0.45813732, -0.6135712 , -0.75893026, -0.89182771, -1.01008137],\n        [ 1.40816327,  1.39660226,  1.36210909,  1.30525013,  1.22695899,\n          1.12852122,  1.01155317,  0.87797544,  0.72998137,  0.57000103,\n          0.4006613 ,  0.22474271,  0.04513385, -0.1352161 , -0.3133458 ,\n         -0.48633038, -0.65132943, -0.80563366, -0.94670942, -1.07224023],\n        [ 1.48979592,  1.47756471,  1.44107194,  1.3809168 ,  1.29808705,\n          1.19394274,  1.07019393,  0.92887256,  0.77229913,  0.60304457,\n          0.42388804,  0.23777127,  0.04775031, -0.14305471, -0.33151078,\n         -0.51452345, -0.68908766, -0.85233707, -1.00159112, -1.13439908],\n        [ 1.57142857,  1.55852716,  1.52003478,  1.45658348,  1.36921511,\n          1.25936426,  1.12883469,  0.97976969,  0.81461689,  0.63608811,\n          0.44711478,  0.25079984,  0.05036676, -0.15089333, -0.34967575,\n         -0.54271651, -0.72684588, -0.89904047, -1.05647283, -1.19655793],\n        [ 1.65306122,  1.63948961,  1.59899763,  1.53225015,  1.44034316,\n          1.32478578,  1.18747546,  1.03066682,  0.85693465,  0.66913165,\n          0.47034152,  0.2638284 ,  0.05298322, -0.15873194, -0.36784073,\n         -0.57090958, -0.76460411, -0.94574387, -1.11135453, -1.25871679],\n        [ 1.73469388,  1.72045206,  1.67796048,  1.60791682,  1.51147122,\n          1.3902073 ,  1.24611622,  1.08156394,  0.89925241,  0.70217519,\n          0.49356826,  0.27685696,  0.05559968, -0.16657056, -0.3860057 ,\n         -0.59910265, -0.80236234, -0.99244727, -1.16623624, -1.32087564],\n        [ 1.81632653,  1.80141451,  1.75692332,  1.6835835 ,  1.58259928,\n          1.45562882,  1.30475698,  1.13246107,  0.94157018,  0.73521873,\n          0.516795  ,  0.28988552,  0.05821613, -0.17440917, -0.40417068,\n         -0.62729571, -0.84012057, -1.03915067, -1.22111794, -1.3830345 ],\n        [ 1.89795918,  1.88237697,  1.83588617,  1.75925017,  1.65372734,\n          1.52105034,  1.36339775,  1.1833582 ,  0.98388794,  0.76826226,\n          0.54002175,  0.30291409,  0.06083259, -0.18224778, -0.42233565,\n         -0.65548878, -0.8778788 , -1.08585407, -1.27599965, -1.44519335],\n        [ 1.97959184,  1.96333942,  1.91484901,  1.83491685,  1.72485539,\n          1.58647186,  1.42203851,  1.23425532,  1.0262057 ,  0.8013058 ,\n          0.56324849,  0.31594265,  0.06344904, -0.1900864 , -0.44050062,\n         -0.68368184, -0.91563702, -1.13255747, -1.33088135, -1.5073522 ],\n        [ 2.06122449,  2.04430187,  1.99381186,  1.91058352,  1.79598345,\n          1.65189338,  1.48067927,  1.28515245,  1.06852346,  0.83434934,\n          0.58647523,  0.32897121,  0.0660655 , -0.19792501, -0.4586656 ,\n         -0.71187491, -0.95339525, -1.17926087, -1.38576306, -1.56951106],\n        [ 2.14285714,  2.12526432,  2.07277471,  1.98625019,  1.86711151,\n          1.7173149 ,  1.53932004,  1.33604958,  1.11084122,  0.86739288,\n          0.60970197,  0.34199978,  0.06868195, -0.20576363, -0.47683057,\n         -0.74006797, -0.99115348, -1.22596427, -1.44064476, -1.63166991],\n        [ 2.2244898 ,  2.20622677,  2.15173755,  2.06191687,  1.93823957,\n          1.78273642,  1.5979608 ,  1.3869467 ,  1.15315898,  0.90043642,\n          0.63292871,  0.35502834,  0.07129841, -0.21360224, -0.49499555,\n         -0.76826104, -1.02891171, -1.27266767, -1.49552647, -1.69382876],\n        [ 2.30612245,  2.28718922,  2.2307004 ,  2.13758354,  2.00936762,\n          1.84815794,  1.65660156,  1.43784383,  1.19547674,  0.93347995,\n          0.65615545,  0.3680569 ,  0.07391486, -0.22144086, -0.51316052,\n         -0.79645411, -1.06666993, -1.31937107, -1.55040818, -1.75598762],\n        [ 2.3877551 ,  2.36815167,  2.30966324,  2.21325022,  2.08049568,\n          1.91357946,  1.71524233,  1.48874096,  1.2377945 ,  0.96652349,\n          0.6793822 ,  0.38108546,  0.07653132, -0.22927947, -0.5313255 ,\n         -0.82464717, -1.10442816, -1.36607447, -1.60528988, -1.81814647],\n        [ 2.46938776,  2.44911412,  2.38862609,  2.28891689,  2.15162374,\n          1.97900098,  1.77388309,  1.53963808,  1.28011226,  0.99956703,\n          0.70260894,  0.39411403,  0.07914777, -0.23711808, -0.54949047,\n         -0.85284024, -1.14218639, -1.41277787, -1.66017159, -1.88030533],\n        [ 2.55102041,  2.53007657,  2.46758894,  2.36458356,  2.2227518 ,\n          2.0444225 ,  1.83252385,  1.59053521,  1.32243002,  1.03261057,\n          0.72583568,  0.40714259,  0.08176423, -0.2449567 , -0.56765544,\n         -0.8810333 , -1.17994462, -1.45948128, -1.71505329, -1.94246418],\n        [ 2.63265306,  2.61103902,  2.54655178,  2.44025024,  2.29387985,\n          2.10984402,  1.89116462,  1.64143234,  1.36474778,  1.06565411,\n          0.74906242,  0.42017115,  0.08438068, -0.25279531, -0.58582042,\n         -0.90922637, -1.21770285, -1.50618468, -1.769935  , -2.00462303],\n        [ 2.71428571,  2.69200147,  2.62551463,  2.51591691,  2.36500791,\n          2.17526555,  1.94980538,  1.69232946,  1.40706554,  1.09869765,\n          0.77228916,  0.43319972,  0.08699714, -0.26063393, -0.60398539,\n         -0.93741943, -1.25546107, -1.55288808, -1.8248167 , -2.06678189],\n        [ 2.79591837,  2.77296392,  2.70447747,  2.59158359,  2.43613597,\n          2.24068707,  2.00844614,  1.74322659,  1.4493833 ,  1.13174118,\n          0.79551591,  0.44622828,  0.08961359, -0.26847254, -0.62215037,\n         -0.9656125 , -1.2932193 , -1.59959148, -1.87969841, -2.12894074],\n        [ 2.87755102,  2.85392637,  2.78344032,  2.66725026,  2.50726403,\n          2.30610859,  2.06708691,  1.79412372,  1.49170106,  1.16478472,\n          0.81874265,  0.45925684,  0.09223005, -0.27631116, -0.64031534,\n         -0.99380556, -1.33097753, -1.64629488, -1.93458011, -2.19109959],\n        [ 2.95918367,  2.93488882,  2.86240317,  2.74291694,  2.57839208,\n          2.37153011,  2.12572767,  1.84502084,  1.53401882,  1.19782826,\n          0.84196939,  0.4722854 ,  0.09484651, -0.28414977, -0.65848031,\n         -1.02199863, -1.36873576, -1.69299828, -1.98946182, -2.25325845],\n        [ 3.04081633,  3.01585127,  2.94136601,  2.81858361,  2.64952014,\n          2.43695163,  2.18436843,  1.89591797,  1.57633659,  1.2308718 ,\n          0.86519613,  0.48531397,  0.09746296, -0.29198838, -0.67664529,\n         -1.0501917 , -1.40649398, -1.73970168, -2.04434352, -2.3154173 ],\n        [ 3.12244898,  3.09681372,  3.02032886,  2.89425028,  2.7206482 ,\n          2.50237315,  2.2430092 ,  1.9468151 ,  1.61865435,  1.26391534,\n          0.88842287,  0.49834253,  0.10007942, -0.299827  , -0.69481026,\n         -1.07838476, -1.44425221, -1.78640508, -2.09922523, -2.37757616],\n        [ 3.20408163,  3.17777617,  3.0992917 ,  2.96991696,  2.79177626,\n          2.56779467,  2.30164996,  1.99771222,  1.66097211,  1.29695887,\n          0.91164961,  0.51137109,  0.10269587, -0.30766561, -0.71297524,\n         -1.10657783, -1.48201044, -1.83310848, -2.15410693, -2.43973501],\n        [ 3.28571429,  3.25873862,  3.17825455,  3.04558363,  2.86290431,\n          2.63321619,  2.36029072,  2.04860935,  1.70328987,  1.33000241,\n          0.93487636,  0.52439966,  0.10531233, -0.31550423, -0.73114021,\n         -1.13477089, -1.51976867, -1.87981188, -2.20898864, -2.50189386],\n        [ 3.36734694,  3.33970107,  3.2572174 ,  3.12125031,  2.93403237,\n          2.69863771,  2.41893149,  2.09950648,  1.74560763,  1.36304595,\n          0.9581031 ,  0.53742822,  0.10792878, -0.32334284, -0.74930519,\n         -1.16296396, -1.5575269 , -1.92651528, -2.26387034, -2.56405272],\n        [ 3.44897959,  3.42066352,  3.33618024,  3.19691698,  3.00516043,\n          2.76405923,  2.47757225,  2.1504036 ,  1.78792539,  1.39608949,\n          0.98132984,  0.55045678,  0.11054524, -0.33118146, -0.76747016,\n         -1.19115702, -1.59528512, -1.97321868, -2.31875205, -2.62621157],\n        [ 3.53061224,  3.50162597,  3.41514309,  3.27258365,  3.07628849,\n          2.82948075,  2.53621301,  2.20130073,  1.83024315,  1.42913303,\n          1.00455658,  0.56348534,  0.11316169, -0.33902007, -0.78563513,\n         -1.21935009, -1.63304335, -2.01992209, -2.37363376, -2.68837042],\n        [ 3.6122449 ,  3.58258842,  3.49410593,  3.34825033,  3.14741654,\n          2.89490227,  2.59485377,  2.25219786,  1.87256091,  1.46217657,\n          1.02778332,  0.57651391,  0.11577815, -0.34685869, -0.80380011,\n         -1.24754316, -1.67080158, -2.06662549, -2.42851546, -2.75052928],\n        [ 3.69387755,  3.66355087,  3.57306878,  3.423917  ,  3.2185446 ,\n          2.96032379,  2.65349454,  2.30309498,  1.91487867,  1.4952201 ,\n          1.05101006,  0.58954247,  0.1183946 , -0.3546973 , -0.82196508,\n         -1.27573622, -1.70855981, -2.11332889, -2.48339717, -2.81268813],\n        [ 3.7755102 ,  3.74451332,  3.65203163,  3.49958368,  3.28967266,\n          3.02574531,  2.7121353 ,  2.35399211,  1.95719643,  1.52826364,\n          1.07423681,  0.60257103,  0.12101106, -0.36253591, -0.84013006,\n         -1.30392929, -1.74631803, -2.16003229, -2.53827887, -2.87484699],\n        [ 3.85714286,  3.82547577,  3.73099447,  3.57525035,  3.36080072,\n          3.09116683,  2.77077606,  2.40488924,  1.99951419,  1.56130718,\n          1.09746355,  0.6155996 ,  0.12362751, -0.37037453, -0.85829503,\n         -1.33212235, -1.78407626, -2.20673569, -2.59316058, -2.93700584],\n        [ 3.93877551,  3.90643822,  3.80995732,  3.65091702,  3.43192877,\n          3.15658835,  2.82941683,  2.45578636,  2.04183195,  1.59435072,\n          1.12069029,  0.62862816,  0.12624397, -0.37821314, -0.87646001,\n         -1.36031542, -1.82183449, -2.25343909, -2.64804228, -2.99916469],\n        [ 4.02040816,  3.98740067,  3.88892016,  3.7265837 ,  3.50305683,\n          3.22200987,  2.88805759,  2.50668349,  2.08414971,  1.62739426,\n          1.14391703,  0.64165672,  0.12886042, -0.38605176, -0.89462498,\n         -1.38850848, -1.85959272, -2.30014249, -2.70292399, -3.06132355],\n        [ 4.10204082,  4.06836312,  3.96788301,  3.80225037,  3.57418489,\n          3.28743139,  2.94669835,  2.55758062,  2.12646747,  1.6604378 ,\n          1.16714377,  0.65468528,  0.13147688, -0.39389037, -0.91278995,\n         -1.41670155, -1.89735095, -2.34684589, -2.75780569, -3.1234824 ],\n        [ 4.18367347,  4.14932557,  4.04684586,  3.87791705,  3.64531295,\n          3.35285291,  3.00533912,  2.60847774,  2.16878523,  1.69348133,\n          1.19037052,  0.66771385,  0.13409333, -0.40172899, -0.93095493,\n         -1.44489462, -1.93510917, -2.39354929, -2.8126874 , -3.18564125],\n        [ 4.26530612,  4.23028802,  4.1258087 ,  3.95358372,  3.716441  ,\n          3.41827443,  3.06397988,  2.65937487,  2.211103  ,  1.72652487,\n          1.21359726,  0.68074241,  0.13670979, -0.4095676 , -0.9491199 ,\n         -1.47308768, -1.9728674 , -2.44025269, -2.8675691 , -3.24780011],\n        [ 4.34693878,  4.31125047,  4.20477155,  4.02925039,  3.78756906,\n          3.48369595,  3.12262064,  2.710272  ,  2.25342076,  1.75956841,\n          1.236824  ,  0.69377097,  0.13932625, -0.41740621, -0.96728488,\n         -1.50128075, -2.01062563, -2.48695609, -2.92245081, -3.30995896],\n        [ 4.42857143,  4.39221292,  4.28373439,  4.10491707,  3.85869712,\n          3.54911747,  3.18126141,  2.76116912,  2.29573852,  1.79261195,\n          1.26005074,  0.70679954,  0.1419427 , -0.42524483, -0.98544985,\n         -1.52947381, -2.04838386, -2.53365949, -2.97733251, -3.37211782],\n        [ 4.51020408,  4.47317537,  4.36269724,  4.18058374,  3.92982518,\n          3.61453899,  3.23990217,  2.81206625,  2.33805628,  1.82565549,\n          1.28327748,  0.7198281 ,  0.14455916, -0.43308344, -1.00361482,\n         -1.55766688, -2.08614208, -2.5803629 , -3.03221422, -3.43427667],\n        [ 4.59183673,  4.55413782,  4.44166009,  4.25625042,  4.00095323,\n          3.67996051,  3.29854293,  2.86296338,  2.38037404,  1.85869902,\n          1.30650422,  0.73285666,  0.14717561, -0.44092206, -1.0217798 ,\n         -1.58585994, -2.12390031, -2.6270663 , -3.08709592, -3.49643552],\n        [ 4.67346939,  4.63510027,  4.52062293,  4.33191709,  4.07208129,\n          3.74538203,  3.3571837 ,  2.9138605 ,  2.4226918 ,  1.89174256,\n          1.32973097,  0.74588522,  0.14979207, -0.44876067, -1.03994477,\n         -1.61405301, -2.16165854, -2.6737697 , -3.14197763, -3.55859438],\n        [ 4.75510204,  4.71606272,  4.59958578,  4.40758376,  4.14320935,\n          3.81080355,  3.41582446,  2.96475763,  2.46500956,  1.9247861 ,\n          1.35295771,  0.75891379,  0.15240852, -0.45659929, -1.05810975,\n         -1.64224608, -2.19941677, -2.7204731 , -3.19685934, -3.62075323],\n        [ 4.83673469,  4.79702517,  4.67854862,  4.48325044,  4.21433741,\n          3.87622507,  3.47446522,  3.01565476,  2.50732732,  1.95782964,\n          1.37618445,  0.77194235,  0.15502498, -0.4644379 , -1.07627472,\n         -1.67043914, -2.237175  , -2.7671765 , -3.25174104, -3.68291208],\n        [ 4.91836735,  4.87798762,  4.75751147,  4.55891711,  4.28546546,\n          3.94164659,  3.53310599,  3.06655188,  2.54964508,  1.99087318,\n          1.39941119,  0.78497091,  0.15764143, -0.47227652, -1.0944397 ,\n         -1.69863221, -2.27493322, -2.8138799 , -3.30662275, -3.74507094],\n        [ 5.        ,  4.95895007,  4.83647432,  4.63458379,  4.35659352,\n          4.00706811,  3.59174675,  3.11744901,  2.59196284,  2.02391672,\n          1.42263793,  0.79799948,  0.16025789, -0.48011513, -1.11260467,\n         -1.72682527, -2.31269145, -2.8605833 , -3.36150445, -3.80722979]],\n\n       [[ 1.        ,  0.99179001,  0.96729486,  0.92691676,  0.8713187 ,\n          0.80141362,  0.71834935,  0.6234898 ,  0.51839257,  0.40478334,\n          0.28452759,  0.1595999 ,  0.03205158, -0.09602303, -0.22252093,\n         -0.34536505, -0.46253829, -0.57211666, -0.67230089, -0.76144596],\n        [ 1.08163265,  1.07275246,  1.04625771,  1.00258343,  0.94244676,\n          0.86683514,  0.77699011,  0.67438693,  0.56071033,  0.43782688,\n          0.30775433,  0.17262846,  0.03466803, -0.10386164, -0.24068591,\n         -0.37355812, -0.50029652, -0.61882006, -0.7271826 , -0.82360481],\n        [ 1.16326531,  1.15371491,  1.12522055,  1.07825011,  1.01357482,\n          0.93225666,  0.83563088,  0.72528406,  0.60302809,  0.47087042,\n          0.33098107,  0.18565702,  0.03728449, -0.11170025, -0.25885088,\n         -0.40175119, -0.53805475, -0.66552346, -0.7820643 , -0.88576367],\n        [ 1.24489796,  1.23467736,  1.2041834 ,  1.15391678,  1.08470288,\n          0.99767818,  0.89427164,  0.77618118,  0.64534585,  0.50391396,\n          0.35420781,  0.19868558,  0.03990094, -0.11953887, -0.27701586,\n         -0.42994425, -0.57581297, -0.71222686, -0.83694601, -0.94792252],\n        [ 1.32653061,  1.31563981,  1.28314625,  1.22958345,  1.15583093,\n          1.0630997 ,  0.9529124 ,  0.82707831,  0.68766361,  0.5369575 ,\n          0.37743455,  0.21171415,  0.0425174 , -0.12737748, -0.29518083,\n         -0.45813732, -0.6135712 , -0.75893026, -0.89182771, -1.01008137],\n        [ 1.40816327,  1.39660226,  1.36210909,  1.30525013,  1.22695899,\n          1.12852122,  1.01155317,  0.87797544,  0.72998137,  0.57000103,\n          0.4006613 ,  0.22474271,  0.04513385, -0.1352161 , -0.3133458 ,\n         -0.48633038, -0.65132943, -0.80563366, -0.94670942, -1.07224023],\n        [ 1.48979592,  1.47756471,  1.44107194,  1.3809168 ,  1.29808705,\n          1.19394274,  1.07019393,  0.92887256,  0.77229913,  0.60304457,\n          0.42388804,  0.23777127,  0.04775031, -0.14305471, -0.33151078,\n         -0.51452345, -0.68908766, -0.85233707, -1.00159112, -1.13439908],\n        [ 1.57142857,  1.55852716,  1.52003478,  1.45658348,  1.36921511,\n          1.25936426,  1.12883469,  0.97976969,  0.81461689,  0.63608811,\n          0.44711478,  0.25079984,  0.05036676, -0.15089333, -0.34967575,\n         -0.54271651, -0.72684588, -0.89904047, -1.05647283, -1.19655793],\n        [ 1.65306122,  1.63948961,  1.59899763,  1.53225015,  1.44034316,\n          1.32478578,  1.18747546,  1.03066682,  0.85693465,  0.66913165,\n          0.47034152,  0.2638284 ,  0.05298322, -0.15873194, -0.36784073,\n         -0.57090958, -0.76460411, -0.94574387, -1.11135453, -1.25871679],\n        [ 1.73469388,  1.72045206,  1.67796048,  1.60791682,  1.51147122,\n          1.3902073 ,  1.24611622,  1.08156394,  0.89925241,  0.70217519,\n          0.49356826,  0.27685696,  0.05559968, -0.16657056, -0.3860057 ,\n         -0.59910265, -0.80236234, -0.99244727, -1.16623624, -1.32087564],\n        [ 1.81632653,  1.80141451,  1.75692332,  1.6835835 ,  1.58259928,\n          1.45562882,  1.30475698,  1.13246107,  0.94157018,  0.73521873,\n          0.516795  ,  0.28988552,  0.05821613, -0.17440917, -0.40417068,\n         -0.62729571, -0.84012057, -1.03915067, -1.22111794, -1.3830345 ],\n        [ 1.89795918,  1.88237697,  1.83588617,  1.75925017,  1.65372734,\n          1.52105034,  1.36339775,  1.1833582 ,  0.98388794,  0.76826226,\n          0.54002175,  0.30291409,  0.06083259, -0.18224778, -0.42233565,\n         -0.65548878, -0.8778788 , -1.08585407, -1.27599965, -1.44519335],\n        [ 1.97959184,  1.96333942,  1.91484901,  1.83491685,  1.72485539,\n          1.58647186,  1.42203851,  1.23425532,  1.0262057 ,  0.8013058 ,\n          0.56324849,  0.31594265,  0.06344904, -0.1900864 , -0.44050062,\n         -0.68368184, -0.91563702, -1.13255747, -1.33088135, -1.5073522 ],\n        [ 2.06122449,  2.04430187,  1.99381186,  1.91058352,  1.79598345,\n          1.65189338,  1.48067927,  1.28515245,  1.06852346,  0.83434934,\n          0.58647523,  0.32897121,  0.0660655 , -0.19792501, -0.4586656 ,\n         -0.71187491, -0.95339525, -1.17926087, -1.38576306, -1.56951106],\n        [ 2.14285714,  2.12526432,  2.07277471,  1.98625019,  1.86711151,\n          1.7173149 ,  1.53932004,  1.33604958,  1.11084122,  0.86739288,\n          0.60970197,  0.34199978,  0.06868195, -0.20576363, -0.47683057,\n         -0.74006797, -0.99115348, -1.22596427, -1.44064476, -1.63166991],\n        [ 2.2244898 ,  2.20622677,  2.15173755,  2.06191687,  1.93823957,\n          1.78273642,  1.5979608 ,  1.3869467 ,  1.15315898,  0.90043642,\n          0.63292871,  0.35502834,  0.07129841, -0.21360224, -0.49499555,\n         -0.76826104, -1.02891171, -1.27266767, -1.49552647, -1.69382876],\n        [ 2.30612245,  2.28718922,  2.2307004 ,  2.13758354,  2.00936762,\n          1.84815794,  1.65660156,  1.43784383,  1.19547674,  0.93347995,\n          0.65615545,  0.3680569 ,  0.07391486, -0.22144086, -0.51316052,\n         -0.79645411, -1.06666993, -1.31937107, -1.55040818, -1.75598762],\n        [ 2.3877551 ,  2.36815167,  2.30966324,  2.21325022,  2.08049568,\n          1.91357946,  1.71524233,  1.48874096,  1.2377945 ,  0.96652349,\n          0.6793822 ,  0.38108546,  0.07653132, -0.22927947, -0.5313255 ,\n         -0.82464717, -1.10442816, -1.36607447, -1.60528988, -1.81814647],\n        [ 2.46938776,  2.44911412,  2.38862609,  2.28891689,  2.15162374,\n          1.97900098,  1.77388309,  1.53963808,  1.28011226,  0.99956703,\n          0.70260894,  0.39411403,  0.07914777, -0.23711808, -0.54949047,\n         -0.85284024, -1.14218639, -1.41277787, -1.66017159, -1.88030533],\n        [ 2.55102041,  2.53007657,  2.46758894,  2.36458356,  2.2227518 ,\n          2.0444225 ,  1.83252385,  1.59053521,  1.32243002,  1.03261057,\n          0.72583568,  0.40714259,  0.08176423, -0.2449567 , -0.56765544,\n         -0.8810333 , -1.17994462, -1.45948128, -1.71505329, -1.94246418],\n        [ 2.63265306,  2.61103902,  2.54655178,  2.44025024,  2.29387985,\n          2.10984402,  1.89116462,  1.64143234,  1.36474778,  1.06565411,\n          0.74906242,  0.42017115,  0.08438068, -0.25279531, -0.58582042,\n         -0.90922637, -1.21770285, -1.50618468, -1.769935  , -2.00462303],\n        [ 2.71428571,  2.69200147,  2.62551463,  2.51591691,  2.36500791,\n          2.17526555,  1.94980538,  1.69232946,  1.40706554,  1.09869765,\n          0.77228916,  0.43319972,  0.08699714, -0.26063393, -0.60398539,\n         -0.93741943, -1.25546107, -1.55288808, -1.8248167 , -2.06678189],\n        [ 2.79591837,  2.77296392,  2.70447747,  2.59158359,  2.43613597,\n          2.24068707,  2.00844614,  1.74322659,  1.4493833 ,  1.13174118,\n          0.79551591,  0.44622828,  0.08961359, -0.26847254, -0.62215037,\n         -0.9656125 , -1.2932193 , -1.59959148, -1.87969841, -2.12894074],\n        [ 2.87755102,  2.85392637,  2.78344032,  2.66725026,  2.50726403,\n          2.30610859,  2.06708691,  1.79412372,  1.49170106,  1.16478472,\n          0.81874265,  0.45925684,  0.09223005, -0.27631116, -0.64031534,\n         -0.99380556, -1.33097753, -1.64629488, -1.93458011, -2.19109959],\n        [ 2.95918367,  2.93488882,  2.86240317,  2.74291694,  2.57839208,\n          2.37153011,  2.12572767,  1.84502084,  1.53401882,  1.19782826,\n          0.84196939,  0.4722854 ,  0.09484651, -0.28414977, -0.65848031,\n         -1.02199863, -1.36873576, -1.69299828, -1.98946182, -2.25325845],\n        [ 3.04081633,  3.01585127,  2.94136601,  2.81858361,  2.64952014,\n          2.43695163,  2.18436843,  1.89591797,  1.57633659,  1.2308718 ,\n          0.86519613,  0.48531397,  0.09746296, -0.29198838, -0.67664529,\n         -1.0501917 , -1.40649398, -1.73970168, -2.04434352, -2.3154173 ],\n        [ 3.12244898,  3.09681372,  3.02032886,  2.89425028,  2.7206482 ,\n          2.50237315,  2.2430092 ,  1.9468151 ,  1.61865435,  1.26391534,\n          0.88842287,  0.49834253,  0.10007942, -0.299827  , -0.69481026,\n         -1.07838476, -1.44425221, -1.78640508, -2.09922523, -2.37757616],\n        [ 3.20408163,  3.17777617,  3.0992917 ,  2.96991696,  2.79177626,\n          2.56779467,  2.30164996,  1.99771222,  1.66097211,  1.29695887,\n          0.91164961,  0.51137109,  0.10269587, -0.30766561, -0.71297524,\n         -1.10657783, -1.48201044, -1.83310848, -2.15410693, -2.43973501],\n        [ 3.28571429,  3.25873862,  3.17825455,  3.04558363,  2.86290431,\n          2.63321619,  2.36029072,  2.04860935,  1.70328987,  1.33000241,\n          0.93487636,  0.52439966,  0.10531233, -0.31550423, -0.73114021,\n         -1.13477089, -1.51976867, -1.87981188, -2.20898864, -2.50189386],\n        [ 3.36734694,  3.33970107,  3.2572174 ,  3.12125031,  2.93403237,\n          2.69863771,  2.41893149,  2.09950648,  1.74560763,  1.36304595,\n          0.9581031 ,  0.53742822,  0.10792878, -0.32334284, -0.74930519,\n         -1.16296396, -1.5575269 , -1.92651528, -2.26387034, -2.56405272],\n        [ 3.44897959,  3.42066352,  3.33618024,  3.19691698,  3.00516043,\n          2.76405923,  2.47757225,  2.1504036 ,  1.78792539,  1.39608949,\n          0.98132984,  0.55045678,  0.11054524, -0.33118146, -0.76747016,\n         -1.19115702, -1.59528512, -1.97321868, -2.31875205, -2.62621157],\n        [ 3.53061224,  3.50162597,  3.41514309,  3.27258365,  3.07628849,\n          2.82948075,  2.53621301,  2.20130073,  1.83024315,  1.42913303,\n          1.00455658,  0.56348534,  0.11316169, -0.33902007, -0.78563513,\n         -1.21935009, -1.63304335, -2.01992209, -2.37363376, -2.68837042],\n        [ 3.6122449 ,  3.58258842,  3.49410593,  3.34825033,  3.14741654,\n          2.89490227,  2.59485377,  2.25219786,  1.87256091,  1.46217657,\n          1.02778332,  0.57651391,  0.11577815, -0.34685869, -0.80380011,\n         -1.24754316, -1.67080158, -2.06662549, -2.42851546, -2.75052928],\n        [ 3.69387755,  3.66355087,  3.57306878,  3.423917  ,  3.2185446 ,\n          2.96032379,  2.65349454,  2.30309498,  1.91487867,  1.4952201 ,\n          1.05101006,  0.58954247,  0.1183946 , -0.3546973 , -0.82196508,\n         -1.27573622, -1.70855981, -2.11332889, -2.48339717, -2.81268813],\n        [ 3.7755102 ,  3.74451332,  3.65203163,  3.49958368,  3.28967266,\n          3.02574531,  2.7121353 ,  2.35399211,  1.95719643,  1.52826364,\n          1.07423681,  0.60257103,  0.12101106, -0.36253591, -0.84013006,\n         -1.30392929, -1.74631803, -2.16003229, -2.53827887, -2.87484699],\n        [ 3.85714286,  3.82547577,  3.73099447,  3.57525035,  3.36080072,\n          3.09116683,  2.77077606,  2.40488924,  1.99951419,  1.56130718,\n          1.09746355,  0.6155996 ,  0.12362751, -0.37037453, -0.85829503,\n         -1.33212235, -1.78407626, -2.20673569, -2.59316058, -2.93700584],\n        [ 3.93877551,  3.90643822,  3.80995732,  3.65091702,  3.43192877,\n          3.15658835,  2.82941683,  2.45578636,  2.04183195,  1.59435072,\n          1.12069029,  0.62862816,  0.12624397, -0.37821314, -0.87646001,\n         -1.36031542, -1.82183449, -2.25343909, -2.64804228, -2.99916469],\n        [ 4.02040816,  3.98740067,  3.88892016,  3.7265837 ,  3.50305683,\n          3.22200987,  2.88805759,  2.50668349,  2.08414971,  1.62739426,\n          1.14391703,  0.64165672,  0.12886042, -0.38605176, -0.89462498,\n         -1.38850848, -1.85959272, -2.30014249, -2.70292399, -3.06132355],\n        [ 4.10204082,  4.06836312,  3.96788301,  3.80225037,  3.57418489,\n          3.28743139,  2.94669835,  2.55758062,  2.12646747,  1.6604378 ,\n          1.16714377,  0.65468528,  0.13147688, -0.39389037, -0.91278995,\n         -1.41670155, -1.89735095, -2.34684589, -2.75780569, -3.1234824 ],\n        [ 4.18367347,  4.14932557,  4.04684586,  3.87791705,  3.64531295,\n          3.35285291,  3.00533912,  2.60847774,  2.16878523,  1.69348133,\n          1.19037052,  0.66771385,  0.13409333, -0.40172899, -0.93095493,\n         -1.44489462, -1.93510917, -2.39354929, -2.8126874 , -3.18564125],\n        [ 4.26530612,  4.23028802,  4.1258087 ,  3.95358372,  3.716441  ,\n          3.41827443,  3.06397988,  2.65937487,  2.211103  ,  1.72652487,\n          1.21359726,  0.68074241,  0.13670979, -0.4095676 , -0.9491199 ,\n         -1.47308768, -1.9728674 , -2.44025269, -2.8675691 , -3.24780011],\n        [ 4.34693878,  4.31125047,  4.20477155,  4.02925039,  3.78756906,\n          3.48369595,  3.12262064,  2.710272  ,  2.25342076,  1.75956841,\n          1.236824  ,  0.69377097,  0.13932625, -0.41740621, -0.96728488,\n         -1.50128075, -2.01062563, -2.48695609, -2.92245081, -3.30995896],\n        [ 4.42857143,  4.39221292,  4.28373439,  4.10491707,  3.85869712,\n          3.54911747,  3.18126141,  2.76116912,  2.29573852,  1.79261195,\n          1.26005074,  0.70679954,  0.1419427 , -0.42524483, -0.98544985,\n         -1.52947381, -2.04838386, -2.53365949, -2.97733251, -3.37211782],\n        [ 4.51020408,  4.47317537,  4.36269724,  4.18058374,  3.92982518,\n          3.61453899,  3.23990217,  2.81206625,  2.33805628,  1.82565549,\n          1.28327748,  0.7198281 ,  0.14455916, -0.43308344, -1.00361482,\n         -1.55766688, -2.08614208, -2.5803629 , -3.03221422, -3.43427667],\n        [ 4.59183673,  4.55413782,  4.44166009,  4.25625042,  4.00095323,\n          3.67996051,  3.29854293,  2.86296338,  2.38037404,  1.85869902,\n          1.30650422,  0.73285666,  0.14717561, -0.44092206, -1.0217798 ,\n         -1.58585994, -2.12390031, -2.6270663 , -3.08709592, -3.49643552],\n        [ 4.67346939,  4.63510027,  4.52062293,  4.33191709,  4.07208129,\n          3.74538203,  3.3571837 ,  2.9138605 ,  2.4226918 ,  1.89174256,\n          1.32973097,  0.74588522,  0.14979207, -0.44876067, -1.03994477,\n         -1.61405301, -2.16165854, -2.6737697 , -3.14197763, -3.55859438],\n        [ 4.75510204,  4.71606272,  4.59958578,  4.40758376,  4.14320935,\n          3.81080355,  3.41582446,  2.96475763,  2.46500956,  1.9247861 ,\n          1.35295771,  0.75891379,  0.15240852, -0.45659929, -1.05810975,\n         -1.64224608, -2.19941677, -2.7204731 , -3.19685934, -3.62075323],\n        [ 4.83673469,  4.79702517,  4.67854862,  4.48325044,  4.21433741,\n          3.87622507,  3.47446522,  3.01565476,  2.50732732,  1.95782964,\n          1.37618445,  0.77194235,  0.15502498, -0.4644379 , -1.07627472,\n         -1.67043914, -2.237175  , -2.7671765 , -3.25174104, -3.68291208],\n        [ 4.91836735,  4.87798762,  4.75751147,  4.55891711,  4.28546546,\n          3.94164659,  3.53310599,  3.06655188,  2.54964508,  1.99087318,\n          1.39941119,  0.78497091,  0.15764143, -0.47227652, -1.0944397 ,\n         -1.69863221, -2.27493322, -2.8138799 , -3.30662275, -3.74507094],\n        [ 5.        ,  4.95895007,  4.83647432,  4.63458379,  4.35659352,\n          4.00706811,  3.59174675,  3.11744901,  2.59196284,  2.02391672,\n          1.42263793,  0.79799948,  0.16025789, -0.48011513, -1.11260467,\n         -1.72682527, -2.31269145, -2.8605833 , -3.36150445, -3.80722979]]]), [], \'DataArray_t\'], [\'CoordinateY\', array([[[ -2.44929360e-16,  -1.27877162e-01,  -2.53654584e-01,\n          -3.75267005e-01,  -4.90717552e-01,  -5.98110530e-01,\n          -6.95682551e-01,  -7.81831482e-01,  -8.55142763e-01,\n          -9.14412623e-01,  -9.58667853e-01,  -9.87181783e-01,\n          -9.99486216e-01,  -9.95379113e-01,  -9.74927912e-01,\n          -9.38468422e-01,  -8.86599306e-01,  -8.20172255e-01,\n          -7.40277997e-01,  -6.48228395e-01],\n        [ -2.64923593e-16,  -1.38316114e-01,  -2.74361081e-01,\n          -4.05901046e-01,  -5.30776128e-01,  -6.46935880e-01,\n          -7.52472963e-01,  -8.45654461e-01,  -9.24950335e-01,\n          -9.89058551e-01,  -1.03692645e+00,  -1.06776805e+00,\n          -1.08107693e+00,  -1.07663455e+00,  -1.05451386e+00,\n          -1.01507809e+00,  -9.58974760e-01,  -8.87125092e-01,\n          -8.00708854e-01,  -7.01144999e-01],\n        [ -2.84917827e-16,  -1.48755066e-01,  -2.95067577e-01,\n          -4.36535087e-01,  -5.70834703e-01,  -6.95761229e-01,\n          -8.09263375e-01,  -9.09477439e-01,  -9.94757908e-01,\n          -1.06370448e+00,  -1.11518505e+00,  -1.14835432e+00,\n          -1.16266764e+00,  -1.15788999e+00,  -1.13409982e+00,\n          -1.09168776e+00,  -1.03135021e+00,  -9.54077929e-01,\n          -8.61139711e-01,  -7.54061603e-01],\n        [ -3.04912060e-16,  -1.59194018e-01,  -3.15774074e-01,\n          -4.67169129e-01,  -6.10893279e-01,  -7.44586579e-01,\n          -8.66053787e-01,  -9.73300417e-01,  -1.06456548e+00,\n          -1.13835041e+00,  -1.19344365e+00,  -1.22894059e+00,\n          -1.24425835e+00,  -1.23914543e+00,  -1.21368577e+00,\n          -1.16829742e+00,  -1.10372567e+00,  -1.02103077e+00,\n          -9.21570568e-01,  -8.06978206e-01],\n        [ -3.24906294e-16,  -1.69632970e-01,  -3.36480570e-01,\n          -4.97803170e-01,  -6.50951855e-01,  -7.93411928e-01,\n          -9.22844200e-01,  -1.03712340e+00,  -1.13437305e+00,\n          -1.21299634e+00,  -1.27170225e+00,  -1.30952686e+00,\n          -1.32584906e+00,  -1.32040086e+00,  -1.29327172e+00,\n          -1.24490709e+00,  -1.17610112e+00,  -1.08798360e+00,\n          -9.82001425e-01,  -8.59894810e-01],\n        [ -3.44900527e-16,  -1.80071922e-01,  -3.57187067e-01,\n          -5.28437211e-01,  -6.91010430e-01,  -8.42237278e-01,\n          -9.79634612e-01,  -1.10094637e+00,  -1.20418063e+00,\n          -1.28764227e+00,  -1.34996085e+00,  -1.39011312e+00,\n          -1.40743977e+00,  -1.40165630e+00,  -1.37285767e+00,\n          -1.32151676e+00,  -1.24847657e+00,  -1.15493644e+00,\n          -1.04243228e+00,  -9.12811414e-01],\n        [ -3.64894761e-16,  -1.90510874e-01,  -3.77893564e-01,\n          -5.59071252e-01,  -7.31069006e-01,  -8.91062627e-01,\n          -1.03642502e+00,  -1.16476935e+00,  -1.27398820e+00,\n          -1.36228819e+00,  -1.42821945e+00,  -1.47069939e+00,\n          -1.48903049e+00,  -1.48291174e+00,  -1.45244362e+00,\n          -1.39812642e+00,  -1.32085203e+00,  -1.22188928e+00,\n          -1.10286314e+00,  -9.65728017e-01],\n        [ -3.84888994e-16,  -2.00949826e-01,  -3.98600060e-01,\n          -5.89705293e-01,  -7.71127582e-01,  -9.39887976e-01,\n          -1.09321544e+00,  -1.22859233e+00,  -1.34379577e+00,\n          -1.43693412e+00,  -1.50647805e+00,  -1.55128566e+00,\n          -1.57062120e+00,  -1.56416718e+00,  -1.53202958e+00,\n          -1.47473609e+00,  -1.39322748e+00,  -1.28884211e+00,\n          -1.16329400e+00,  -1.01864462e+00],\n        [ -4.04883227e-16,  -2.11388777e-01,  -4.19306557e-01,\n          -6.20339335e-01,  -8.11186157e-01,  -9.88713326e-01,\n          -1.15000585e+00,  -1.29241531e+00,  -1.41360334e+00,\n          -1.51158005e+00,  -1.58473666e+00,  -1.63187193e+00,\n          -1.65221191e+00,  -1.64542262e+00,  -1.61161553e+00,\n          -1.55134576e+00,  -1.46560294e+00,  -1.35579495e+00,\n          -1.22372485e+00,  -1.07156122e+00],\n        [ -4.24877461e-16,  -2.21827729e-01,  -4.40013054e-01,\n          -6.50973376e-01,  -8.51244733e-01,  -1.03753868e+00,\n          -1.20679626e+00,  -1.35623829e+00,  -1.48341092e+00,\n          -1.58622598e+00,  -1.66299526e+00,  -1.71245820e+00,\n          -1.73380262e+00,  -1.72667805e+00,  -1.69120148e+00,\n          -1.62795543e+00,  -1.53797839e+00,  -1.42274779e+00,\n          -1.28415571e+00,  -1.12447783e+00],\n        [ -4.44871694e-16,  -2.32266681e-01,  -4.60719550e-01,\n          -6.81607417e-01,  -8.91303309e-01,  -1.08636402e+00,\n          -1.26358667e+00,  -1.42006126e+00,  -1.55321849e+00,\n          -1.66087191e+00,  -1.74125386e+00,  -1.79304446e+00,\n          -1.81539333e+00,  -1.80793349e+00,  -1.77078743e+00,\n          -1.70456509e+00,  -1.61035384e+00,  -1.48970063e+00,\n          -1.34458657e+00,  -1.17739443e+00],\n        [ -4.64865928e-16,  -2.42705633e-01,  -4.81426047e-01,\n          -7.12241458e-01,  -9.31361884e-01,  -1.13518937e+00,\n          -1.32037709e+00,  -1.48388424e+00,  -1.62302606e+00,\n          -1.73551784e+00,  -1.81951246e+00,  -1.87363073e+00,\n          -1.89698404e+00,  -1.88918893e+00,  -1.85037338e+00,\n          -1.78117476e+00,  -1.68272930e+00,  -1.55665346e+00,\n          -1.40501742e+00,  -1.23031104e+00],\n        [ -4.84860161e-16,  -2.53144585e-01,  -5.02132544e-01,\n          -7.42875499e-01,  -9.71420460e-01,  -1.18401472e+00,\n          -1.37716750e+00,  -1.54770722e+00,  -1.69283363e+00,\n          -1.81016376e+00,  -1.89777106e+00,  -1.95421700e+00,\n          -1.97857475e+00,  -1.97044437e+00,  -1.92995934e+00,\n          -1.85778443e+00,  -1.75510475e+00,  -1.62360630e+00,\n          -1.46544828e+00,  -1.28322764e+00],\n        [ -5.04854395e-16,  -2.63583537e-01,  -5.22839040e-01,\n          -7.73509541e-01,  -1.01147904e+00,  -1.23284007e+00,\n          -1.43395791e+00,  -1.61153020e+00,  -1.76264121e+00,\n          -1.88480969e+00,  -1.97602966e+00,  -2.03480327e+00,\n          -2.06016547e+00,  -2.05169980e+00,  -2.00954529e+00,\n          -1.93439409e+00,  -1.82748020e+00,  -1.69055914e+00,\n          -1.52587914e+00,  -1.33614424e+00],\n        [ -5.24848628e-16,  -2.74022489e-01,  -5.43545537e-01,\n          -8.04143582e-01,  -1.05153761e+00,  -1.28166542e+00,\n          -1.49074832e+00,  -1.67535318e+00,  -1.83244878e+00,\n          -1.95945562e+00,  -2.05428826e+00,  -2.11538954e+00,\n          -2.14175618e+00,  -2.13295524e+00,  -2.08913124e+00,\n          -2.01100376e+00,  -1.89985566e+00,  -1.75751197e+00,\n          -1.58630999e+00,  -1.38906085e+00],\n        [ -5.44842862e-16,  -2.84461441e-01,  -5.64252034e-01,\n          -8.34777623e-01,  -1.09159619e+00,  -1.33049077e+00,\n          -1.54753874e+00,  -1.73917615e+00,  -1.90225635e+00,\n          -2.03410155e+00,  -2.13254686e+00,  -2.19597580e+00,\n          -2.22334689e+00,  -2.21421068e+00,  -2.16871719e+00,\n          -2.08761343e+00,  -1.97223111e+00,  -1.82446481e+00,\n          -1.64674085e+00,  -1.44197745e+00],\n        [ -5.64837095e-16,  -2.94900393e-01,  -5.84958530e-01,\n          -8.65411664e-01,  -1.13165476e+00,  -1.37931612e+00,\n          -1.60432915e+00,  -1.80299913e+00,  -1.97206392e+00,\n          -2.10874748e+00,  -2.21080546e+00,  -2.27656207e+00,\n          -2.30493760e+00,  -2.29546612e+00,  -2.24830314e+00,\n          -2.16422310e+00,  -2.04460656e+00,  -1.89141765e+00,\n          -1.70717171e+00,  -1.49489405e+00],\n        [ -5.84831329e-16,  -3.05339345e-01,  -6.05665027e-01,\n          -8.96045706e-01,  -1.17171334e+00,  -1.42814147e+00,\n          -1.66111956e+00,  -1.86682211e+00,  -2.04187150e+00,\n          -2.18339341e+00,  -2.28906406e+00,  -2.35714834e+00,\n          -2.38652831e+00,  -2.37672156e+00,  -2.32788910e+00,\n          -2.24083276e+00,  -2.11698202e+00,  -1.95837049e+00,\n          -1.76760256e+00,  -1.54781066e+00],\n        [ -6.04825562e-16,  -3.15778297e-01,  -6.26371524e-01,\n          -9.26679747e-01,  -1.21177191e+00,  -1.47696682e+00,\n          -1.71790997e+00,  -1.93064509e+00,  -2.11167907e+00,\n          -2.25803933e+00,  -2.36732266e+00,  -2.43773461e+00,\n          -2.46811902e+00,  -2.45797699e+00,  -2.40747505e+00,\n          -2.31744243e+00,  -2.18935747e+00,  -2.02532332e+00,\n          -1.82803342e+00,  -1.60072726e+00],\n        [ -6.24819795e-16,  -3.26217249e-01,  -6.47078020e-01,\n          -9.57313788e-01,  -1.25183049e+00,  -1.52579217e+00,\n          -1.77470038e+00,  -1.99446807e+00,  -2.18148664e+00,\n          -2.33268526e+00,  -2.44558126e+00,  -2.51832088e+00,\n          -2.54970974e+00,  -2.53923243e+00,  -2.48706100e+00,\n          -2.39405210e+00,  -2.26173292e+00,  -2.09227616e+00,\n          -1.88846428e+00,  -1.65364387e+00],\n        [ -6.44814029e-16,  -3.36656201e-01,  -6.67784517e-01,\n          -9.87947829e-01,  -1.29188907e+00,  -1.57461752e+00,\n          -1.83149080e+00,  -2.05829105e+00,  -2.25129421e+00,\n          -2.40733119e+00,  -2.52383986e+00,  -2.59890714e+00,\n          -2.63130045e+00,  -2.62048787e+00,  -2.56664695e+00,\n          -2.47066176e+00,  -2.33410838e+00,  -2.15922900e+00,\n          -1.94889514e+00,  -1.70656047e+00],\n        [ -6.64808262e-16,  -3.47095153e-01,  -6.88491013e-01,\n          -1.01858187e+00,  -1.33194764e+00,  -1.62344287e+00,\n          -1.88828121e+00,  -2.12211402e+00,  -2.32110179e+00,\n          -2.48197712e+00,  -2.60209846e+00,  -2.67949341e+00,\n          -2.71289116e+00,  -2.70174331e+00,  -2.64623290e+00,\n          -2.54727143e+00,  -2.40648383e+00,  -2.22618183e+00,\n          -2.00932599e+00,  -1.75947707e+00],\n        [ -6.84802496e-16,  -3.57534105e-01,  -7.09197510e-01,\n          -1.04921591e+00,  -1.37200622e+00,  -1.67226822e+00,\n          -1.94507162e+00,  -2.18593700e+00,  -2.39090936e+00,\n          -2.55662305e+00,  -2.68035706e+00,  -2.76007968e+00,\n          -2.79448187e+00,  -2.78299874e+00,  -2.72581886e+00,\n          -2.62388110e+00,  -2.47885929e+00,  -2.29313467e+00,\n          -2.06975685e+00,  -1.81239368e+00],\n        [ -7.04796729e-16,  -3.67973057e-01,  -7.29904007e-01,\n          -1.07984995e+00,  -1.41206479e+00,  -1.72109357e+00,\n          -2.00186203e+00,  -2.24975998e+00,  -2.46071693e+00,\n          -2.63126898e+00,  -2.75861566e+00,  -2.84066595e+00,\n          -2.87607258e+00,  -2.86425418e+00,  -2.80540481e+00,\n          -2.70049077e+00,  -2.55123474e+00,  -2.36008751e+00,\n          -2.13018771e+00,  -1.86531028e+00],\n        [ -7.24790963e-16,  -3.78412009e-01,  -7.50610503e-01,\n          -1.11048399e+00,  -1.45212337e+00,  -1.76991892e+00,\n          -2.05865245e+00,  -2.31358296e+00,  -2.53052450e+00,\n          -2.70591490e+00,  -2.83687426e+00,  -2.92125222e+00,\n          -2.95766329e+00,  -2.94550962e+00,  -2.88499076e+00,\n          -2.77710043e+00,  -2.62361019e+00,  -2.42704035e+00,\n          -2.19061856e+00,  -1.91822688e+00],\n        [ -7.44785196e-16,  -3.88850961e-01,  -7.71317000e-01,\n          -1.14111804e+00,  -1.49218194e+00,  -1.81874427e+00,\n          -2.11544286e+00,  -2.37740594e+00,  -2.60033208e+00,\n          -2.78056083e+00,  -2.91513286e+00,  -3.00183848e+00,\n          -3.03925400e+00,  -3.02676506e+00,  -2.96457671e+00,\n          -2.85371010e+00,  -2.69598565e+00,  -2.49399318e+00,\n          -2.25104942e+00,  -1.97114349e+00],\n        [ -7.64779430e-16,  -3.99289913e-01,  -7.92023497e-01,\n          -1.17175208e+00,  -1.53224052e+00,  -1.86756962e+00,\n          -2.17223327e+00,  -2.44122891e+00,  -2.67013965e+00,\n          -2.85520676e+00,  -2.99339146e+00,  -3.08242475e+00,\n          -3.12084472e+00,  -3.10802050e+00,  -3.04416266e+00,\n          -2.93031977e+00,  -2.76836110e+00,  -2.56094602e+00,\n          -2.31148028e+00,  -2.02406009e+00],\n        [ -7.84773663e-16,  -4.09728865e-01,  -8.12729993e-01,\n          -1.20238612e+00,  -1.57229910e+00,  -1.91639497e+00,\n          -2.22902368e+00,  -2.50505189e+00,  -2.73994722e+00,\n          -2.92985269e+00,  -3.07165006e+00,  -3.16301102e+00,\n          -3.20243543e+00,  -3.18927593e+00,  -3.12374862e+00,\n          -3.00692943e+00,  -2.84073655e+00,  -2.62789886e+00,\n          -2.37191113e+00,  -2.07697670e+00],\n        [ -8.04767897e-16,  -4.20167817e-01,  -8.33436490e-01,\n          -1.23302016e+00,  -1.61235767e+00,  -1.96522031e+00,\n          -2.28581409e+00,  -2.56887487e+00,  -2.80975479e+00,\n          -3.00449862e+00,  -3.14990866e+00,  -3.24359729e+00,\n          -3.28402614e+00,  -3.27053137e+00,  -3.20333457e+00,\n          -3.08353910e+00,  -2.91311201e+00,  -2.69485169e+00,\n          -2.43234199e+00,  -2.12989330e+00],\n        [ -8.24762130e-16,  -4.30606769e-01,  -8.54142987e-01,\n          -1.26365420e+00,  -1.65241625e+00,  -2.01404566e+00,\n          -2.34260451e+00,  -2.63269785e+00,  -2.87956237e+00,\n          -3.07914455e+00,  -3.22816726e+00,  -3.32418356e+00,\n          -3.36561685e+00,  -3.35178681e+00,  -3.28292052e+00,\n          -3.16014877e+00,  -2.98548746e+00,  -2.76180453e+00,\n          -2.49277285e+00,  -2.18280990e+00],\n        [ -8.44756363e-16,  -4.41045721e-01,  -8.74849483e-01,\n          -1.29428824e+00,  -1.69247482e+00,  -2.06287101e+00,\n          -2.39939492e+00,  -2.69652083e+00,  -2.94936994e+00,\n          -3.15379048e+00,  -3.30642586e+00,  -3.40476982e+00,\n          -3.44720756e+00,  -3.43304225e+00,  -3.36250647e+00,\n          -3.23675844e+00,  -3.05786291e+00,  -2.82875737e+00,\n          -2.55320370e+00,  -2.23572651e+00],\n        [ -8.64750597e-16,  -4.51484673e-01,  -8.95555980e-01,\n          -1.32492228e+00,  -1.73253340e+00,  -2.11169636e+00,\n          -2.45618533e+00,  -2.76034381e+00,  -3.01917751e+00,\n          -3.22843640e+00,  -3.38468446e+00,  -3.48535609e+00,\n          -3.52879827e+00,  -3.51429768e+00,  -3.44209242e+00,\n          -3.31336810e+00,  -3.13023837e+00,  -2.89571021e+00,\n          -2.61363456e+00,  -2.28864311e+00],\n        [ -8.84744830e-16,  -4.61923625e-01,  -9.16262477e-01,\n          -1.35555632e+00,  -1.77259197e+00,  -2.16052171e+00,\n          -2.51297574e+00,  -2.82416678e+00,  -3.08898508e+00,\n          -3.30308233e+00,  -3.46294306e+00,  -3.56594236e+00,\n          -3.61038899e+00,  -3.59555312e+00,  -3.52167838e+00,\n          -3.38997777e+00,  -3.20261382e+00,  -2.96266304e+00,\n          -2.67406542e+00,  -2.34155971e+00],\n        [ -9.04739064e-16,  -4.72362577e-01,  -9.36968973e-01,\n          -1.38619036e+00,  -1.81265055e+00,  -2.20934706e+00,\n          -2.56976616e+00,  -2.88798976e+00,  -3.15879266e+00,\n          -3.37772826e+00,  -3.54120166e+00,  -3.64652863e+00,\n          -3.69197970e+00,  -3.67680856e+00,  -3.60126433e+00,\n          -3.46658744e+00,  -3.27498927e+00,  -3.02961588e+00,\n          -2.73449627e+00,  -2.39447632e+00],\n        [ -9.24733297e-16,  -4.82801529e-01,  -9.57675470e-01,\n          -1.41682441e+00,  -1.85270912e+00,  -2.25817241e+00,\n          -2.62655657e+00,  -2.95181274e+00,  -3.22860023e+00,\n          -3.45237419e+00,  -3.61946026e+00,  -3.72711490e+00,\n          -3.77357041e+00,  -3.75806400e+00,  -3.68085028e+00,\n          -3.54319710e+00,  -3.34736473e+00,  -3.09656872e+00,\n          -2.79492713e+00,  -2.44739292e+00],\n        [ -9.44727531e-16,  -4.93240481e-01,  -9.78381967e-01,\n          -1.44745845e+00,  -1.89276770e+00,  -2.30699776e+00,\n          -2.68334698e+00,  -3.01563572e+00,  -3.29840780e+00,\n          -3.52702012e+00,  -3.69771886e+00,  -3.80770116e+00,\n          -3.85516112e+00,  -3.83931944e+00,  -3.76043623e+00,\n          -3.61980677e+00,  -3.41974018e+00,  -3.16352155e+00,\n          -2.85535799e+00,  -2.50030952e+00],\n        [ -9.64721764e-16,  -5.03679433e-01,  -9.99088463e-01,\n          -1.47809249e+00,  -1.93282628e+00,  -2.35582311e+00,\n          -2.74013739e+00,  -3.07945870e+00,  -3.36821537e+00,\n          -3.60166605e+00,  -3.77597746e+00,  -3.88828743e+00,\n          -3.93675183e+00,  -3.92057487e+00,  -3.84002218e+00,\n          -3.69641644e+00,  -3.49211564e+00,  -3.23047439e+00,\n          -2.91578885e+00,  -2.55322613e+00],\n        [ -9.84715998e-16,  -5.14118385e-01,  -1.01979496e+00,\n          -1.50872653e+00,  -1.97288485e+00,  -2.40464846e+00,\n          -2.79692781e+00,  -3.14328167e+00,  -3.43802295e+00,\n          -3.67631197e+00,  -3.85423606e+00,  -3.96887370e+00,\n          -4.01834254e+00,  -4.00183031e+00,  -3.91960814e+00,\n          -3.77302610e+00,  -3.56449109e+00,  -3.29742723e+00,\n          -2.97621970e+00,  -2.60614273e+00],\n        [ -1.00471023e-15,  -5.24557337e-01,  -1.04050146e+00,\n          -1.53936057e+00,  -2.01294343e+00,  -2.45347381e+00,\n          -2.85371822e+00,  -3.20710465e+00,  -3.50783052e+00,\n          -3.75095790e+00,  -3.93249466e+00,  -4.04945997e+00,\n          -4.09993325e+00,  -4.08308575e+00,  -3.99919409e+00,\n          -3.84963577e+00,  -3.63686654e+00,  -3.36438006e+00,\n          -3.03665056e+00,  -2.65905934e+00],\n        [ -1.02470446e-15,  -5.34996289e-01,  -1.06120795e+00,\n          -1.56999461e+00,  -2.05300200e+00,  -2.50229916e+00,\n          -2.91050863e+00,  -3.27092763e+00,  -3.57763809e+00,\n          -3.82560383e+00,  -4.01075326e+00,  -4.13004624e+00,\n          -4.18152397e+00,  -4.16434119e+00,  -4.07878004e+00,\n          -3.92624544e+00,  -3.70924200e+00,  -3.43133290e+00,\n          -3.09708142e+00,  -2.71197594e+00],\n        [ -1.04469870e-15,  -5.45435241e-01,  -1.08191445e+00,\n          -1.60062865e+00,  -2.09306058e+00,  -2.55112451e+00,\n          -2.96729904e+00,  -3.33475061e+00,  -3.64744566e+00,\n          -3.90024976e+00,  -4.08901186e+00,  -4.21063250e+00,\n          -4.26311468e+00,  -4.24559662e+00,  -4.15836599e+00,\n          -4.00285511e+00,  -3.78161745e+00,  -3.49828574e+00,\n          -3.15751227e+00,  -2.76489254e+00],\n        [ -1.06469293e-15,  -5.55874193e-01,  -1.10262095e+00,\n          -1.63126269e+00,  -2.13311915e+00,  -2.59994986e+00,\n          -3.02408945e+00,  -3.39857359e+00,  -3.71725324e+00,\n          -3.97489569e+00,  -4.16727046e+00,  -4.29121877e+00,\n          -4.34470539e+00,  -4.32685206e+00,  -4.23795194e+00,\n          -4.07946477e+00,  -3.85399290e+00,  -3.56523858e+00,\n          -3.21794313e+00,  -2.81780915e+00],\n        [ -1.08468716e-15,  -5.66313145e-01,  -1.12332744e+00,\n          -1.66189674e+00,  -2.17317773e+00,  -2.64877521e+00,\n          -3.08087987e+00,  -3.46239657e+00,  -3.78706081e+00,\n          -4.04954162e+00,  -4.24552906e+00,  -4.37180504e+00,\n          -4.42629610e+00,  -4.40810750e+00,  -4.31753790e+00,\n          -4.15607444e+00,  -3.92636836e+00,  -3.63219141e+00,\n          -3.27837399e+00,  -2.87072575e+00],\n        [ -1.10468140e-15,  -5.76752097e-01,  -1.14403394e+00,\n          -1.69253078e+00,  -2.21323631e+00,  -2.69760056e+00,\n          -3.13767028e+00,  -3.52621954e+00,  -3.85686838e+00,\n          -4.12418754e+00,  -4.32378766e+00,  -4.45239131e+00,\n          -4.50788681e+00,  -4.48936294e+00,  -4.39712385e+00,\n          -4.23268411e+00,  -3.99874381e+00,  -3.69914425e+00,\n          -3.33880484e+00,  -2.92364235e+00],\n        [ -1.12467563e-15,  -5.87191049e-01,  -1.16474044e+00,\n          -1.72316482e+00,  -2.25329488e+00,  -2.74642591e+00,\n          -3.19446069e+00,  -3.59004252e+00,  -3.92667595e+00,\n          -4.19883347e+00,  -4.40204626e+00,  -4.53297758e+00,\n          -4.58947752e+00,  -4.57061838e+00,  -4.47670980e+00,\n          -4.30929377e+00,  -4.07111926e+00,  -3.76609709e+00,\n          -3.39923570e+00,  -2.97655896e+00],\n        [ -1.14466987e-15,  -5.97630001e-01,  -1.18544693e+00,\n          -1.75379886e+00,  -2.29335346e+00,  -2.79525125e+00,\n          -3.25125110e+00,  -3.65386550e+00,  -3.99648353e+00,\n          -4.27347940e+00,  -4.48030486e+00,  -4.61356384e+00,\n          -4.67106823e+00,  -4.65187381e+00,  -4.55629575e+00,\n          -4.38590344e+00,  -4.14349472e+00,  -3.83304992e+00,\n          -3.45966656e+00,  -3.02947556e+00],\n        [ -1.16466410e-15,  -6.08068952e-01,  -1.20615343e+00,\n          -1.78443290e+00,  -2.33341203e+00,  -2.84407660e+00,\n          -3.30804152e+00,  -3.71768848e+00,  -4.06629110e+00,\n          -4.34812533e+00,  -4.55856346e+00,  -4.69415011e+00,\n          -4.75265895e+00,  -4.73312925e+00,  -4.63588170e+00,\n          -4.46251311e+00,  -4.21587017e+00,  -3.90000276e+00,\n          -3.52009741e+00,  -3.08239217e+00],\n        [ -1.18465833e-15,  -6.18507904e-01,  -1.22685993e+00,\n          -1.81506694e+00,  -2.37347061e+00,  -2.89290195e+00,\n          -3.36483193e+00,  -3.78151146e+00,  -4.13609867e+00,\n          -4.42277126e+00,  -4.63682206e+00,  -4.77473638e+00,\n          -4.83424966e+00,  -4.81438469e+00,  -4.71546766e+00,\n          -4.53912278e+00,  -4.28824562e+00,  -3.96695560e+00,\n          -3.58052827e+00,  -3.13530877e+00],\n        [ -1.20465257e-15,  -6.28946856e-01,  -1.24756642e+00,\n          -1.84570098e+00,  -2.41352918e+00,  -2.94172730e+00,\n          -3.42162234e+00,  -3.84533443e+00,  -4.20590624e+00,\n          -4.49741719e+00,  -4.71508066e+00,  -4.85532265e+00,\n          -4.91584037e+00,  -4.89564013e+00,  -4.79505361e+00,\n          -4.61573244e+00,  -4.36062108e+00,  -4.03390844e+00,\n          -3.64095913e+00,  -3.18822537e+00],\n        [ -1.22464680e-15,  -6.39385808e-01,  -1.26827292e+00,\n          -1.87633502e+00,  -2.45358776e+00,  -2.99055265e+00,\n          -3.47841275e+00,  -3.90915741e+00,  -4.27571382e+00,\n          -4.57206312e+00,  -4.79333927e+00,  -4.93590892e+00,\n          -4.99743108e+00,  -4.97689556e+00,  -4.87463956e+00,\n          -4.69234211e+00,  -4.43299653e+00,  -4.10086127e+00,\n          -3.70138999e+00,  -3.24114198e+00]],\n\n       [[ -2.44929360e-16,  -1.27877162e-01,  -2.53654584e-01,\n          -3.75267005e-01,  -4.90717552e-01,  -5.98110530e-01,\n          -6.95682551e-01,  -7.81831482e-01,  -8.55142763e-01,\n          -9.14412623e-01,  -9.58667853e-01,  -9.87181783e-01,\n          -9.99486216e-01,  -9.95379113e-01,  -9.74927912e-01,\n          -9.38468422e-01,  -8.86599306e-01,  -8.20172255e-01,\n          -7.40277997e-01,  -6.48228395e-01],\n        [ -2.64923593e-16,  -1.38316114e-01,  -2.74361081e-01,\n          -4.05901046e-01,  -5.30776128e-01,  -6.46935880e-01,\n          -7.52472963e-01,  -8.45654461e-01,  -9.24950335e-01,\n          -9.89058551e-01,  -1.03692645e+00,  -1.06776805e+00,\n          -1.08107693e+00,  -1.07663455e+00,  -1.05451386e+00,\n          -1.01507809e+00,  -9.58974760e-01,  -8.87125092e-01,\n          -8.00708854e-01,  -7.01144999e-01],\n        [ -2.84917827e-16,  -1.48755066e-01,  -2.95067577e-01,\n          -4.36535087e-01,  -5.70834703e-01,  -6.95761229e-01,\n          -8.09263375e-01,  -9.09477439e-01,  -9.94757908e-01,\n          -1.06370448e+00,  -1.11518505e+00,  -1.14835432e+00,\n          -1.16266764e+00,  -1.15788999e+00,  -1.13409982e+00,\n          -1.09168776e+00,  -1.03135021e+00,  -9.54077929e-01,\n          -8.61139711e-01,  -7.54061603e-01],\n        [ -3.04912060e-16,  -1.59194018e-01,  -3.15774074e-01,\n          -4.67169129e-01,  -6.10893279e-01,  -7.44586579e-01,\n          -8.66053787e-01,  -9.73300417e-01,  -1.06456548e+00,\n          -1.13835041e+00,  -1.19344365e+00,  -1.22894059e+00,\n          -1.24425835e+00,  -1.23914543e+00,  -1.21368577e+00,\n          -1.16829742e+00,  -1.10372567e+00,  -1.02103077e+00,\n          -9.21570568e-01,  -8.06978206e-01],\n        [ -3.24906294e-16,  -1.69632970e-01,  -3.36480570e-01,\n          -4.97803170e-01,  -6.50951855e-01,  -7.93411928e-01,\n          -9.22844200e-01,  -1.03712340e+00,  -1.13437305e+00,\n          -1.21299634e+00,  -1.27170225e+00,  -1.30952686e+00,\n          -1.32584906e+00,  -1.32040086e+00,  -1.29327172e+00,\n          -1.24490709e+00,  -1.17610112e+00,  -1.08798360e+00,\n          -9.82001425e-01,  -8.59894810e-01],\n        [ -3.44900527e-16,  -1.80071922e-01,  -3.57187067e-01,\n          -5.28437211e-01,  -6.91010430e-01,  -8.42237278e-01,\n          -9.79634612e-01,  -1.10094637e+00,  -1.20418063e+00,\n          -1.28764227e+00,  -1.34996085e+00,  -1.39011312e+00,\n          -1.40743977e+00,  -1.40165630e+00,  -1.37285767e+00,\n          -1.32151676e+00,  -1.24847657e+00,  -1.15493644e+00,\n          -1.04243228e+00,  -9.12811414e-01],\n        [ -3.64894761e-16,  -1.90510874e-01,  -3.77893564e-01,\n          -5.59071252e-01,  -7.31069006e-01,  -8.91062627e-01,\n          -1.03642502e+00,  -1.16476935e+00,  -1.27398820e+00,\n          -1.36228819e+00,  -1.42821945e+00,  -1.47069939e+00,\n          -1.48903049e+00,  -1.48291174e+00,  -1.45244362e+00,\n          -1.39812642e+00,  -1.32085203e+00,  -1.22188928e+00,\n          -1.10286314e+00,  -9.65728017e-01],\n        [ -3.84888994e-16,  -2.00949826e-01,  -3.98600060e-01,\n          -5.89705293e-01,  -7.71127582e-01,  -9.39887976e-01,\n          -1.09321544e+00,  -1.22859233e+00,  -1.34379577e+00,\n          -1.43693412e+00,  -1.50647805e+00,  -1.55128566e+00,\n          -1.57062120e+00,  -1.56416718e+00,  -1.53202958e+00,\n          -1.47473609e+00,  -1.39322748e+00,  -1.28884211e+00,\n          -1.16329400e+00,  -1.01864462e+00],\n        [ -4.04883227e-16,  -2.11388777e-01,  -4.19306557e-01,\n          -6.20339335e-01,  -8.11186157e-01,  -9.88713326e-01,\n          -1.15000585e+00,  -1.29241531e+00,  -1.41360334e+00,\n          -1.51158005e+00,  -1.58473666e+00,  -1.63187193e+00,\n          -1.65221191e+00,  -1.64542262e+00,  -1.61161553e+00,\n          -1.55134576e+00,  -1.46560294e+00,  -1.35579495e+00,\n          -1.22372485e+00,  -1.07156122e+00],\n        [ -4.24877461e-16,  -2.21827729e-01,  -4.40013054e-01,\n          -6.50973376e-01,  -8.51244733e-01,  -1.03753868e+00,\n          -1.20679626e+00,  -1.35623829e+00,  -1.48341092e+00,\n          -1.58622598e+00,  -1.66299526e+00,  -1.71245820e+00,\n          -1.73380262e+00,  -1.72667805e+00,  -1.69120148e+00,\n          -1.62795543e+00,  -1.53797839e+00,  -1.42274779e+00,\n          -1.28415571e+00,  -1.12447783e+00],\n        [ -4.44871694e-16,  -2.32266681e-01,  -4.60719550e-01,\n          -6.81607417e-01,  -8.91303309e-01,  -1.08636402e+00,\n          -1.26358667e+00,  -1.42006126e+00,  -1.55321849e+00,\n          -1.66087191e+00,  -1.74125386e+00,  -1.79304446e+00,\n          -1.81539333e+00,  -1.80793349e+00,  -1.77078743e+00,\n          -1.70456509e+00,  -1.61035384e+00,  -1.48970063e+00,\n          -1.34458657e+00,  -1.17739443e+00],\n        [ -4.64865928e-16,  -2.42705633e-01,  -4.81426047e-01,\n          -7.12241458e-01,  -9.31361884e-01,  -1.13518937e+00,\n          -1.32037709e+00,  -1.48388424e+00,  -1.62302606e+00,\n          -1.73551784e+00,  -1.81951246e+00,  -1.87363073e+00,\n          -1.89698404e+00,  -1.88918893e+00,  -1.85037338e+00,\n          -1.78117476e+00,  -1.68272930e+00,  -1.55665346e+00,\n          -1.40501742e+00,  -1.23031104e+00],\n        [ -4.84860161e-16,  -2.53144585e-01,  -5.02132544e-01,\n          -7.42875499e-01,  -9.71420460e-01,  -1.18401472e+00,\n          -1.37716750e+00,  -1.54770722e+00,  -1.69283363e+00,\n          -1.81016376e+00,  -1.89777106e+00,  -1.95421700e+00,\n          -1.97857475e+00,  -1.97044437e+00,  -1.92995934e+00,\n          -1.85778443e+00,  -1.75510475e+00,  -1.62360630e+00,\n          -1.46544828e+00,  -1.28322764e+00],\n        [ -5.04854395e-16,  -2.63583537e-01,  -5.22839040e-01,\n          -7.73509541e-01,  -1.01147904e+00,  -1.23284007e+00,\n          -1.43395791e+00,  -1.61153020e+00,  -1.76264121e+00,\n          -1.88480969e+00,  -1.97602966e+00,  -2.03480327e+00,\n          -2.06016547e+00,  -2.05169980e+00,  -2.00954529e+00,\n          -1.93439409e+00,  -1.82748020e+00,  -1.69055914e+00,\n          -1.52587914e+00,  -1.33614424e+00],\n        [ -5.24848628e-16,  -2.74022489e-01,  -5.43545537e-01,\n          -8.04143582e-01,  -1.05153761e+00,  -1.28166542e+00,\n          -1.49074832e+00,  -1.67535318e+00,  -1.83244878e+00,\n          -1.95945562e+00,  -2.05428826e+00,  -2.11538954e+00,\n          -2.14175618e+00,  -2.13295524e+00,  -2.08913124e+00,\n          -2.01100376e+00,  -1.89985566e+00,  -1.75751197e+00,\n          -1.58630999e+00,  -1.38906085e+00],\n        [ -5.44842862e-16,  -2.84461441e-01,  -5.64252034e-01,\n          -8.34777623e-01,  -1.09159619e+00,  -1.33049077e+00,\n          -1.54753874e+00,  -1.73917615e+00,  -1.90225635e+00,\n          -2.03410155e+00,  -2.13254686e+00,  -2.19597580e+00,\n          -2.22334689e+00,  -2.21421068e+00,  -2.16871719e+00,\n          -2.08761343e+00,  -1.97223111e+00,  -1.82446481e+00,\n          -1.64674085e+00,  -1.44197745e+00],\n        [ -5.64837095e-16,  -2.94900393e-01,  -5.84958530e-01,\n          -8.65411664e-01,  -1.13165476e+00,  -1.37931612e+00,\n          -1.60432915e+00,  -1.80299913e+00,  -1.97206392e+00,\n          -2.10874748e+00,  -2.21080546e+00,  -2.27656207e+00,\n          -2.30493760e+00,  -2.29546612e+00,  -2.24830314e+00,\n          -2.16422310e+00,  -2.04460656e+00,  -1.89141765e+00,\n          -1.70717171e+00,  -1.49489405e+00],\n        [ -5.84831329e-16,  -3.05339345e-01,  -6.05665027e-01,\n          -8.96045706e-01,  -1.17171334e+00,  -1.42814147e+00,\n          -1.66111956e+00,  -1.86682211e+00,  -2.04187150e+00,\n          -2.18339341e+00,  -2.28906406e+00,  -2.35714834e+00,\n          -2.38652831e+00,  -2.37672156e+00,  -2.32788910e+00,\n          -2.24083276e+00,  -2.11698202e+00,  -1.95837049e+00,\n          -1.76760256e+00,  -1.54781066e+00],\n        [ -6.04825562e-16,  -3.15778297e-01,  -6.26371524e-01,\n          -9.26679747e-01,  -1.21177191e+00,  -1.47696682e+00,\n          -1.71790997e+00,  -1.93064509e+00,  -2.11167907e+00,\n          -2.25803933e+00,  -2.36732266e+00,  -2.43773461e+00,\n          -2.46811902e+00,  -2.45797699e+00,  -2.40747505e+00,\n          -2.31744243e+00,  -2.18935747e+00,  -2.02532332e+00,\n          -1.82803342e+00,  -1.60072726e+00],\n        [ -6.24819795e-16,  -3.26217249e-01,  -6.47078020e-01,\n          -9.57313788e-01,  -1.25183049e+00,  -1.52579217e+00,\n          -1.77470038e+00,  -1.99446807e+00,  -2.18148664e+00,\n          -2.33268526e+00,  -2.44558126e+00,  -2.51832088e+00,\n          -2.54970974e+00,  -2.53923243e+00,  -2.48706100e+00,\n          -2.39405210e+00,  -2.26173292e+00,  -2.09227616e+00,\n          -1.88846428e+00,  -1.65364387e+00],\n        [ -6.44814029e-16,  -3.36656201e-01,  -6.67784517e-01,\n          -9.87947829e-01,  -1.29188907e+00,  -1.57461752e+00,\n          -1.83149080e+00,  -2.05829105e+00,  -2.25129421e+00,\n          -2.40733119e+00,  -2.52383986e+00,  -2.59890714e+00,\n          -2.63130045e+00,  -2.62048787e+00,  -2.56664695e+00,\n          -2.47066176e+00,  -2.33410838e+00,  -2.15922900e+00,\n          -1.94889514e+00,  -1.70656047e+00],\n        [ -6.64808262e-16,  -3.47095153e-01,  -6.88491013e-01,\n          -1.01858187e+00,  -1.33194764e+00,  -1.62344287e+00,\n          -1.88828121e+00,  -2.12211402e+00,  -2.32110179e+00,\n          -2.48197712e+00,  -2.60209846e+00,  -2.67949341e+00,\n          -2.71289116e+00,  -2.70174331e+00,  -2.64623290e+00,\n          -2.54727143e+00,  -2.40648383e+00,  -2.22618183e+00,\n          -2.00932599e+00,  -1.75947707e+00],\n        [ -6.84802496e-16,  -3.57534105e-01,  -7.09197510e-01,\n          -1.04921591e+00,  -1.37200622e+00,  -1.67226822e+00,\n          -1.94507162e+00,  -2.18593700e+00,  -2.39090936e+00,\n          -2.55662305e+00,  -2.68035706e+00,  -2.76007968e+00,\n          -2.79448187e+00,  -2.78299874e+00,  -2.72581886e+00,\n          -2.62388110e+00,  -2.47885929e+00,  -2.29313467e+00,\n          -2.06975685e+00,  -1.81239368e+00],\n        [ -7.04796729e-16,  -3.67973057e-01,  -7.29904007e-01,\n          -1.07984995e+00,  -1.41206479e+00,  -1.72109357e+00,\n          -2.00186203e+00,  -2.24975998e+00,  -2.46071693e+00,\n          -2.63126898e+00,  -2.75861566e+00,  -2.84066595e+00,\n          -2.87607258e+00,  -2.86425418e+00,  -2.80540481e+00,\n          -2.70049077e+00,  -2.55123474e+00,  -2.36008751e+00,\n          -2.13018771e+00,  -1.86531028e+00],\n        [ -7.24790963e-16,  -3.78412009e-01,  -7.50610503e-01,\n          -1.11048399e+00,  -1.45212337e+00,  -1.76991892e+00,\n          -2.05865245e+00,  -2.31358296e+00,  -2.53052450e+00,\n          -2.70591490e+00,  -2.83687426e+00,  -2.92125222e+00,\n          -2.95766329e+00,  -2.94550962e+00,  -2.88499076e+00,\n          -2.77710043e+00,  -2.62361019e+00,  -2.42704035e+00,\n          -2.19061856e+00,  -1.91822688e+00],\n        [ -7.44785196e-16,  -3.88850961e-01,  -7.71317000e-01,\n          -1.14111804e+00,  -1.49218194e+00,  -1.81874427e+00,\n          -2.11544286e+00,  -2.37740594e+00,  -2.60033208e+00,\n          -2.78056083e+00,  -2.91513286e+00,  -3.00183848e+00,\n          -3.03925400e+00,  -3.02676506e+00,  -2.96457671e+00,\n          -2.85371010e+00,  -2.69598565e+00,  -2.49399318e+00,\n          -2.25104942e+00,  -1.97114349e+00],\n        [ -7.64779430e-16,  -3.99289913e-01,  -7.92023497e-01,\n          -1.17175208e+00,  -1.53224052e+00,  -1.86756962e+00,\n          -2.17223327e+00,  -2.44122891e+00,  -2.67013965e+00,\n          -2.85520676e+00,  -2.99339146e+00,  -3.08242475e+00,\n          -3.12084472e+00,  -3.10802050e+00,  -3.04416266e+00,\n          -2.93031977e+00,  -2.76836110e+00,  -2.56094602e+00,\n          -2.31148028e+00,  -2.02406009e+00],\n        [ -7.84773663e-16,  -4.09728865e-01,  -8.12729993e-01,\n          -1.20238612e+00,  -1.57229910e+00,  -1.91639497e+00,\n          -2.22902368e+00,  -2.50505189e+00,  -2.73994722e+00,\n          -2.92985269e+00,  -3.07165006e+00,  -3.16301102e+00,\n          -3.20243543e+00,  -3.18927593e+00,  -3.12374862e+00,\n          -3.00692943e+00,  -2.84073655e+00,  -2.62789886e+00,\n          -2.37191113e+00,  -2.07697670e+00],\n        [ -8.04767897e-16,  -4.20167817e-01,  -8.33436490e-01,\n          -1.23302016e+00,  -1.61235767e+00,  -1.96522031e+00,\n          -2.28581409e+00,  -2.56887487e+00,  -2.80975479e+00,\n          -3.00449862e+00,  -3.14990866e+00,  -3.24359729e+00,\n          -3.28402614e+00,  -3.27053137e+00,  -3.20333457e+00,\n          -3.08353910e+00,  -2.91311201e+00,  -2.69485169e+00,\n          -2.43234199e+00,  -2.12989330e+00],\n        [ -8.24762130e-16,  -4.30606769e-01,  -8.54142987e-01,\n          -1.26365420e+00,  -1.65241625e+00,  -2.01404566e+00,\n          -2.34260451e+00,  -2.63269785e+00,  -2.87956237e+00,\n          -3.07914455e+00,  -3.22816726e+00,  -3.32418356e+00,\n          -3.36561685e+00,  -3.35178681e+00,  -3.28292052e+00,\n          -3.16014877e+00,  -2.98548746e+00,  -2.76180453e+00,\n          -2.49277285e+00,  -2.18280990e+00],\n        [ -8.44756363e-16,  -4.41045721e-01,  -8.74849483e-01,\n          -1.29428824e+00,  -1.69247482e+00,  -2.06287101e+00,\n          -2.39939492e+00,  -2.69652083e+00,  -2.94936994e+00,\n          -3.15379048e+00,  -3.30642586e+00,  -3.40476982e+00,\n          -3.44720756e+00,  -3.43304225e+00,  -3.36250647e+00,\n          -3.23675844e+00,  -3.05786291e+00,  -2.82875737e+00,\n          -2.55320370e+00,  -2.23572651e+00],\n        [ -8.64750597e-16,  -4.51484673e-01,  -8.95555980e-01,\n          -1.32492228e+00,  -1.73253340e+00,  -2.11169636e+00,\n          -2.45618533e+00,  -2.76034381e+00,  -3.01917751e+00,\n          -3.22843640e+00,  -3.38468446e+00,  -3.48535609e+00,\n          -3.52879827e+00,  -3.51429768e+00,  -3.44209242e+00,\n          -3.31336810e+00,  -3.13023837e+00,  -2.89571021e+00,\n          -2.61363456e+00,  -2.28864311e+00],\n        [ -8.84744830e-16,  -4.61923625e-01,  -9.16262477e-01,\n          -1.35555632e+00,  -1.77259197e+00,  -2.16052171e+00,\n          -2.51297574e+00,  -2.82416678e+00,  -3.08898508e+00,\n          -3.30308233e+00,  -3.46294306e+00,  -3.56594236e+00,\n          -3.61038899e+00,  -3.59555312e+00,  -3.52167838e+00,\n          -3.38997777e+00,  -3.20261382e+00,  -2.96266304e+00,\n          -2.67406542e+00,  -2.34155971e+00],\n        [ -9.04739064e-16,  -4.72362577e-01,  -9.36968973e-01,\n          -1.38619036e+00,  -1.81265055e+00,  -2.20934706e+00,\n          -2.56976616e+00,  -2.88798976e+00,  -3.15879266e+00,\n          -3.37772826e+00,  -3.54120166e+00,  -3.64652863e+00,\n          -3.69197970e+00,  -3.67680856e+00,  -3.60126433e+00,\n          -3.46658744e+00,  -3.27498927e+00,  -3.02961588e+00,\n          -2.73449627e+00,  -2.39447632e+00],\n        [ -9.24733297e-16,  -4.82801529e-01,  -9.57675470e-01,\n          -1.41682441e+00,  -1.85270912e+00,  -2.25817241e+00,\n          -2.62655657e+00,  -2.95181274e+00,  -3.22860023e+00,\n          -3.45237419e+00,  -3.61946026e+00,  -3.72711490e+00,\n          -3.77357041e+00,  -3.75806400e+00,  -3.68085028e+00,\n          -3.54319710e+00,  -3.34736473e+00,  -3.09656872e+00,\n          -2.79492713e+00,  -2.44739292e+00],\n        [ -9.44727531e-16,  -4.93240481e-01,  -9.78381967e-01,\n          -1.44745845e+00,  -1.89276770e+00,  -2.30699776e+00,\n          -2.68334698e+00,  -3.01563572e+00,  -3.29840780e+00,\n          -3.52702012e+00,  -3.69771886e+00,  -3.80770116e+00,\n          -3.85516112e+00,  -3.83931944e+00,  -3.76043623e+00,\n          -3.61980677e+00,  -3.41974018e+00,  -3.16352155e+00,\n          -2.85535799e+00,  -2.50030952e+00],\n        [ -9.64721764e-16,  -5.03679433e-01,  -9.99088463e-01,\n          -1.47809249e+00,  -1.93282628e+00,  -2.35582311e+00,\n          -2.74013739e+00,  -3.07945870e+00,  -3.36821537e+00,\n          -3.60166605e+00,  -3.77597746e+00,  -3.88828743e+00,\n          -3.93675183e+00,  -3.92057487e+00,  -3.84002218e+00,\n          -3.69641644e+00,  -3.49211564e+00,  -3.23047439e+00,\n          -2.91578885e+00,  -2.55322613e+00],\n        [ -9.84715998e-16,  -5.14118385e-01,  -1.01979496e+00,\n          -1.50872653e+00,  -1.97288485e+00,  -2.40464846e+00,\n          -2.79692781e+00,  -3.14328167e+00,  -3.43802295e+00,\n          -3.67631197e+00,  -3.85423606e+00,  -3.96887370e+00,\n          -4.01834254e+00,  -4.00183031e+00,  -3.91960814e+00,\n          -3.77302610e+00,  -3.56449109e+00,  -3.29742723e+00,\n          -2.97621970e+00,  -2.60614273e+00],\n        [ -1.00471023e-15,  -5.24557337e-01,  -1.04050146e+00,\n          -1.53936057e+00,  -2.01294343e+00,  -2.45347381e+00,\n          -2.85371822e+00,  -3.20710465e+00,  -3.50783052e+00,\n          -3.75095790e+00,  -3.93249466e+00,  -4.04945997e+00,\n          -4.09993325e+00,  -4.08308575e+00,  -3.99919409e+00,\n          -3.84963577e+00,  -3.63686654e+00,  -3.36438006e+00,\n          -3.03665056e+00,  -2.65905934e+00],\n        [ -1.02470446e-15,  -5.34996289e-01,  -1.06120795e+00,\n          -1.56999461e+00,  -2.05300200e+00,  -2.50229916e+00,\n          -2.91050863e+00,  -3.27092763e+00,  -3.57763809e+00,\n          -3.82560383e+00,  -4.01075326e+00,  -4.13004624e+00,\n          -4.18152397e+00,  -4.16434119e+00,  -4.07878004e+00,\n          -3.92624544e+00,  -3.70924200e+00,  -3.43133290e+00,\n          -3.09708142e+00,  -2.71197594e+00],\n        [ -1.04469870e-15,  -5.45435241e-01,  -1.08191445e+00,\n          -1.60062865e+00,  -2.09306058e+00,  -2.55112451e+00,\n          -2.96729904e+00,  -3.33475061e+00,  -3.64744566e+00,\n          -3.90024976e+00,  -4.08901186e+00,  -4.21063250e+00,\n          -4.26311468e+00,  -4.24559662e+00,  -4.15836599e+00,\n          -4.00285511e+00,  -3.78161745e+00,  -3.49828574e+00,\n          -3.15751227e+00,  -2.76489254e+00],\n        [ -1.06469293e-15,  -5.55874193e-01,  -1.10262095e+00,\n          -1.63126269e+00,  -2.13311915e+00,  -2.59994986e+00,\n          -3.02408945e+00,  -3.39857359e+00,  -3.71725324e+00,\n          -3.97489569e+00,  -4.16727046e+00,  -4.29121877e+00,\n          -4.34470539e+00,  -4.32685206e+00,  -4.23795194e+00,\n          -4.07946477e+00,  -3.85399290e+00,  -3.56523858e+00,\n          -3.21794313e+00,  -2.81780915e+00],\n        [ -1.08468716e-15,  -5.66313145e-01,  -1.12332744e+00,\n          -1.66189674e+00,  -2.17317773e+00,  -2.64877521e+00,\n          -3.08087987e+00,  -3.46239657e+00,  -3.78706081e+00,\n          -4.04954162e+00,  -4.24552906e+00,  -4.37180504e+00,\n          -4.42629610e+00,  -4.40810750e+00,  -4.31753790e+00,\n          -4.15607444e+00,  -3.92636836e+00,  -3.63219141e+00,\n          -3.27837399e+00,  -2.87072575e+00],\n        [ -1.10468140e-15,  -5.76752097e-01,  -1.14403394e+00,\n          -1.69253078e+00,  -2.21323631e+00,  -2.69760056e+00,\n          -3.13767028e+00,  -3.52621954e+00,  -3.85686838e+00,\n          -4.12418754e+00,  -4.32378766e+00,  -4.45239131e+00,\n          -4.50788681e+00,  -4.48936294e+00,  -4.39712385e+00,\n          -4.23268411e+00,  -3.99874381e+00,  -3.69914425e+00,\n          -3.33880484e+00,  -2.92364235e+00],\n        [ -1.12467563e-15,  -5.87191049e-01,  -1.16474044e+00,\n          -1.72316482e+00,  -2.25329488e+00,  -2.74642591e+00,\n          -3.19446069e+00,  -3.59004252e+00,  -3.92667595e+00,\n          -4.19883347e+00,  -4.40204626e+00,  -4.53297758e+00,\n          -4.58947752e+00,  -4.57061838e+00,  -4.47670980e+00,\n          -4.30929377e+00,  -4.07111926e+00,  -3.76609709e+00,\n          -3.39923570e+00,  -2.97655896e+00],\n        [ -1.14466987e-15,  -5.97630001e-01,  -1.18544693e+00,\n          -1.75379886e+00,  -2.29335346e+00,  -2.79525125e+00,\n          -3.25125110e+00,  -3.65386550e+00,  -3.99648353e+00,\n          -4.27347940e+00,  -4.48030486e+00,  -4.61356384e+00,\n          -4.67106823e+00,  -4.65187381e+00,  -4.55629575e+00,\n          -4.38590344e+00,  -4.14349472e+00,  -3.83304992e+00,\n          -3.45966656e+00,  -3.02947556e+00],\n        [ -1.16466410e-15,  -6.08068952e-01,  -1.20615343e+00,\n          -1.78443290e+00,  -2.33341203e+00,  -2.84407660e+00,\n          -3.30804152e+00,  -3.71768848e+00,  -4.06629110e+00,\n          -4.34812533e+00,  -4.55856346e+00,  -4.69415011e+00,\n          -4.75265895e+00,  -4.73312925e+00,  -4.63588170e+00,\n          -4.46251311e+00,  -4.21587017e+00,  -3.90000276e+00,\n          -3.52009741e+00,  -3.08239217e+00],\n        [ -1.18465833e-15,  -6.18507904e-01,  -1.22685993e+00,\n          -1.81506694e+00,  -2.37347061e+00,  -2.89290195e+00,\n          -3.36483193e+00,  -3.78151146e+00,  -4.13609867e+00,\n          -4.42277126e+00,  -4.63682206e+00,  -4.77473638e+00,\n          -4.83424966e+00,  -4.81438469e+00,  -4.71546766e+00,\n          -4.53912278e+00,  -4.28824562e+00,  -3.96695560e+00,\n          -3.58052827e+00,  -3.13530877e+00],\n        [ -1.20465257e-15,  -6.28946856e-01,  -1.24756642e+00,\n          -1.84570098e+00,  -2.41352918e+00,  -2.94172730e+00,\n          -3.42162234e+00,  -3.84533443e+00,  -4.20590624e+00,\n          -4.49741719e+00,  -4.71508066e+00,  -4.85532265e+00,\n          -4.91584037e+00,  -4.89564013e+00,  -4.79505361e+00,\n          -4.61573244e+00,  -4.36062108e+00,  -4.03390844e+00,\n          -3.64095913e+00,  -3.18822537e+00],\n        [ -1.22464680e-15,  -6.39385808e-01,  -1.26827292e+00,\n          -1.87633502e+00,  -2.45358776e+00,  -2.99055265e+00,\n          -3.47841275e+00,  -3.90915741e+00,  -4.27571382e+00,\n          -4.57206312e+00,  -4.79333927e+00,  -4.93590892e+00,\n          -4.99743108e+00,  -4.97689556e+00,  -4.87463956e+00,\n          -4.69234211e+00,  -4.43299653e+00,  -4.10086127e+00,\n          -3.70138999e+00,  -3.24114198e+00]]]), [], \'DataArray_t\'], [\'CoordinateZ\', array([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.]],\n\n       [[ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.]]]), [], \'DataArray_t\']], \'GridCoordinates_t\'], [\'ZoneBC\', None, [[\'ext1\', array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\',\n       \'e\', \'d\'], \n      dtype=\'|S1\'), [[\'FamilyName\', array([\'E\', \'x\', \'t\'], \n      dtype=\'|S1\'), [], \'FamilyName_t\'], [\'PointRange\', array([[ 1,  1, 50],\n       [50, 20,  2]], dtype=int32), [], \'IndexRange_t\']], \'BC_t\'], [\'wall1\', array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\',\n       \'e\', \'d\'], \n      dtype=\'|S1\'), [[\'FamilyName\', array([\'W\', \'a\', \'l\', \'l\'], \n      dtype=\'|S1\'), [], \'FamilyName_t\'], [\'PointRange\', array([[ 1,  1,  1],\n       [ 1, 20,  2]], dtype=int32), [], \'IndexRange_t\']], \'BC_t\']], \'ZoneBC_t\'], [\'ZoneGridConnectivity\', None, [[\'match1\', array([\'z\', \'o\', \'n\', \'e\', \'3\'], \n      dtype=\'|S1\'), [[\'PointRange\', array([[ 1,  1, 50],\n       [ 1,  1,  2]], dtype=int32), [], \'IndexRange_t\'], [\'PointRangeDonor\', array([[11,  1, 50],\n       [ 1, 11,  2]], dtype=int32), [], \'IndexRange_t\'], [\'Transform\', array([1, 2, 3], dtype=int32), [], \'""int[IndexDimension]""\']], \'GridConnectivity1to1_t\'], [\'match4\', array([\'z\', \'o\', \'n\', \'e\', \'2\'], \n      dtype=\'|S1\'), [[\'PointRange\', array([[20,  1, 50],\n       [ 1, 20,  2]], dtype=int32), [], \'IndexRange_t\'], [\'PointRangeDonor\', array([[ 1,  1, 50],\n       [ 1,  1,  2]], dtype=int32), [], \'IndexRange_t\'], [\'Transform\', array([1, 2, 3], dtype=int32), [], \'""int[IndexDimension]""\']], \'GridConnectivity1to1_t\']], \'ZoneGridConnectivity_t\'], [\'ZoneType\', array([\'S\', \'t\', \'r\', \'u\', \'c\', \'t\', \'u\', \'r\', \'e\', \'d\'], \n      dtype=\'|S1\'), [], \'ZoneType_t\']], \'Zone_t\'], [\'zone2\', array([[21, 20,  0],\n       [50, 49,  0],\n       [ 2,  1,  0]], dtype=int32), [[\'FlowSolution#EndOfRun\', None, [[\'Density\', None, [], \'UserDefinedData_t\'], [\'EnergyStagnationDensity\', None, [], \'UserDefinedData_t\'], [\'GridLocation\', array([\'C\', \'e\', \'l\', \'l\', \'C\', \'e\', \'n\', \'t\', \'e\', \'r\'], \n      dtype=\'|S1\'), [], \'GridLocation_t\'], [\'MomentumX\', None, [], \'UserDefinedData_t\'], [\'MomentumY\', None, [], \'UserDefinedData_t\'], [\'MomentumZ\', None, [], \'UserDefinedData_t\'], [\'TurbulentEnergyKineticDensity\', None, [], \'UserDefinedData_t\']], \'FlowSolution_t\'], [\'GridCoordinates\', None, [[\'CoordinateX\', array([[[-0.76144596, -0.8380881 , -0.90096887, -0.94905575, -0.98155916,\n         -0.99794539, -0.99794539, -0.98155916, -0.94905575, -0.90096887,\n         -0.8380881 , -0.76144596, -0.67230089, -0.57211666, -0.46253829,\n         -0.34536505, -0.22252093, -0.09602303,  0.03205158,  0.1595999 ,\n          0.28452759],\n        [-0.82360481, -0.90650346, -0.97451735, -1.02652969, -1.06168644,\n         -1.07941032, -1.07941032, -1.06168644, -1.02652969, -0.97451735,\n         -0.90650346, -0.82360481, -0.7271826 , -0.61882006, -0.50029652,\n         -0.37355812, -0.24068591, -0.10386164,  0.03466803,  0.17262846,\n          0.30775433],\n        [-0.88576367, -0.97491882, -1.04806583, -1.10400362, -1.14181371,\n         -1.16087525, -1.16087525, -1.14181371, -1.10400362, -1.04806583,\n         -0.97491882, -0.88576367, -0.7820643 , -0.66552346, -0.53805475,\n         -0.40175119, -0.25885088, -0.11170025,  0.03728449,  0.18565702,\n          0.33098107],\n        [-0.94792252, -1.04333417, -1.1216143 , -1.18147756, -1.22194099,\n         -1.24234018, -1.24234018, -1.22194099, -1.18147756, -1.1216143 ,\n         -1.04333417, -0.94792252, -0.83694601, -0.71222686, -0.57581297,\n         -0.42994425, -0.27701586, -0.11953887,  0.03990094,  0.19868558,\n          0.35420781],\n        [-1.01008137, -1.11174953, -1.19516278, -1.2589515 , -1.30206827,\n         -1.32380511, -1.32380511, -1.30206827, -1.2589515 , -1.19516278,\n         -1.11174953, -1.01008137, -0.89182771, -0.75893026, -0.6135712 ,\n         -0.45813732, -0.29518083, -0.12737748,  0.0425174 ,  0.21171415,\n          0.37743455],\n        [-1.07224023, -1.18016488, -1.26871126, -1.33642544, -1.38219555,\n         -1.40527004, -1.40527004, -1.38219555, -1.33642544, -1.26871126,\n         -1.18016488, -1.07224023, -0.94670942, -0.80563366, -0.65132943,\n         -0.48633038, -0.3133458 , -0.1352161 ,  0.04513385,  0.22474271,\n          0.4006613 ],\n        [-1.13439908, -1.24858024, -1.34225974, -1.41389938, -1.46232283,\n         -1.48673497, -1.48673497, -1.46232283, -1.41389938, -1.34225974,\n         -1.24858024, -1.13439908, -1.00159112, -0.85233707, -0.68908766,\n         -0.51452345, -0.33151078, -0.14305471,  0.04775031,  0.23777127,\n          0.42388804],\n        [-1.19655793, -1.31699559, -1.41580822, -1.49137332, -1.5424501 ,\n         -1.5681999 , -1.5681999 , -1.5424501 , -1.49137332, -1.41580822,\n         -1.31699559, -1.19655793, -1.05647283, -0.89904047, -0.72684588,\n         -0.54271651, -0.34967575, -0.15089333,  0.05036676,  0.25079984,\n          0.44711478],\n        [-1.25871679, -1.38541095, -1.4893567 , -1.56884726, -1.62257738,\n         -1.64966483, -1.64966483, -1.62257738, -1.56884726, -1.4893567 ,\n         -1.38541095, -1.25871679, -1.11135453, -0.94574387, -0.76460411,\n         -0.57090958, -0.36784073, -0.15873194,  0.05298322,  0.2638284 ,\n          0.47034152],\n        [-1.32087564, -1.4538263 , -1.56290518, -1.64632119, -1.70270466,\n         -1.73112976, -1.73112976, -1.70270466, -1.64632119, -1.56290518,\n         -1.4538263 , -1.32087564, -1.16623624, -0.99244727, -0.80236234,\n         -0.59910265, -0.3860057 , -0.16657056,  0.05559968,  0.27685696,\n          0.49356826],\n        [-1.3830345 , -1.52224166, -1.63645366, -1.72379513, -1.78283194,\n         -1.81259469, -1.81259469, -1.78283194, -1.72379513, -1.63645366,\n         -1.52224166, -1.3830345 , -1.22111794, -1.03915067, -0.84012057,\n         -0.62729571, -0.40417068, -0.17440917,  0.05821613,  0.28988552,\n          0.516795  ],\n        [-1.44519335, -1.59065702, -1.71000214, -1.80126907, -1.86295922,\n         -1.89405962, -1.89405962, -1.86295922, -1.80126907, -1.71000214,\n         -1.59065702, -1.44519335, -1.27599965, -1.08585407, -0.8778788 ,\n         -0.65548878, -0.42233565, -0.18224778,  0.06083259,  0.30291409,\n          0.54002175],\n        [-1.5073522 , -1.65907237, -1.78355062, -1.87874301, -1.94308649,\n         -1.97552455, -1.97552455, -1.94308649, -1.87874301, -1.78355062,\n         -1.65907237, -1.5073522 , -1.33088135, -1.13255747, -0.91563702,\n         -0.68368184, -0.44050062, -0.1900864 ,  0.06344904,  0.31594265,\n          0.56324849],\n        [-1.56951106, -1.72748773, -1.8570991 , -1.95621695, -2.02321377,\n         -2.05698948, -2.05698948, -2.02321377, -1.95621695, -1.8570991 ,\n         -1.72748773, -1.56951106, -1.38576306, -1.17926087, -0.95339525,\n         -0.71187491, -0.4586656 , -0.19792501,  0.0660655 ,  0.32897121,\n          0.58647523],\n        [-1.63166991, -1.79590308, -1.93064757, -2.03369089, -2.10334105,\n         -2.13845441, -2.13845441, -2.10334105, -2.03369089, -1.93064757,\n         -1.79590308, -1.63166991, -1.44064476, -1.22596427, -0.99115348,\n         -0.74006797, -0.47683057, -0.20576363,  0.06868195,  0.34199978,\n          0.60970197],\n        [-1.69382876, -1.86431844, -2.00419605, -2.11116482, -2.18346833,\n         -2.21991934, -2.21991934, -2.18346833, -2.11116482, -2.00419605,\n         -1.86431844, -1.69382876, -1.49552647, -1.27266767, -1.02891171,\n         -0.76826104, -0.49499555, -0.21360224,  0.07129841,  0.35502834,\n          0.63292871],\n        [-1.75598762, -1.93273379, -2.07774453, -2.18863876, -2.26359561,\n         -2.30138427, -2.30138427, -2.26359561, -2.18863876, -2.07774453,\n         -1.93273379, -1.75598762, -1.55040818, -1.31937107, -1.06666993,\n         -0.79645411, -0.51316052, -0.22144086,  0.07391486,  0.3680569 ,\n          0.65615545],\n        [-1.81814647, -2.00114915, -2.15129301, -2.2661127 , -2.34372289,\n         -2.3828492 , -2.3828492 , -2.34372289, -2.2661127 , -2.15129301,\n         -2.00114915, -1.81814647, -1.60528988, -1.36607447, -1.10442816,\n         -0.82464717, -0.5313255 , -0.22927947,  0.07653132,  0.38108546,\n          0.6793822 ],\n        [-1.88030533, -2.0695645 , -2.22484149, -2.34358664, -2.42385016,\n         -2.46431413, -2.46431413, -2.42385016, -2.34358664, -2.22484149,\n         -2.0695645 , -1.88030533, -1.66017159, -1.41277787, -1.14218639,\n         -0.85284024, -0.54949047, -0.23711808,  0.07914777,  0.39411403,\n          0.70260894],\n        [-1.94246418, -2.13797986, -2.29838997, -2.42106058, -2.50397744,\n         -2.54577906, -2.54577906, -2.50397744, -2.42106058, -2.29838997,\n         -2.13797986, -1.94246418, -1.71505329, -1.45948128, -1.17994462,\n         -0.8810333 , -0.56765544, -0.2449567 ,  0.08176423,  0.40714259,\n          0.72583568],\n        [-2.00462303, -2.20639521, -2.37193845, -2.49853452, -2.58410472,\n         -2.62724399, -2.62724399, -2.58410472, -2.49853452, -2.37193845,\n         -2.20639521, -2.00462303, -1.769935  , -1.50618468, -1.21770285,\n         -0.90922637, -0.58582042, -0.25279531,  0.08438068,  0.42017115,\n          0.74906242],\n        [-2.06678189, -2.27481057, -2.44548693, -2.57600846, -2.664232  ,\n         -2.70870892, -2.70870892, -2.664232  , -2.57600846, -2.44548693,\n         -2.27481057, -2.06678189, -1.8248167 , -1.55288808, -1.25546107,\n         -0.93741943, -0.60398539, -0.26063393,  0.08699714,  0.43319972,\n          0.77228916],\n        [-2.12894074, -2.34322593, -2.51903541, -2.65348239, -2.74435928,\n         -2.79017385, -2.79017385, -2.74435928, -2.65348239, -2.51903541,\n         -2.34322593, -2.12894074, -1.87969841, -1.59959148, -1.2932193 ,\n         -0.9656125 , -0.62215037, -0.26847254,  0.08961359,  0.44622828,\n          0.79551591],\n        [-2.19109959, -2.41164128, -2.59258389, -2.73095633, -2.82448655,\n         -2.87163878, -2.87163878, -2.82448655, -2.73095633, -2.59258389,\n         -2.41164128, -2.19109959, -1.93458011, -1.64629488, -1.33097753,\n         -0.99380556, -0.64031534, -0.27631116,  0.09223005,  0.45925684,\n          0.81874265],\n        [-2.25325845, -2.48005664, -2.66613236, -2.80843027, -2.90461383,\n         -2.95310371, -2.95310371, -2.90461383, -2.80843027, -2.66613236,\n         -2.48005664, -2.25325845, -1.98946182, -1.69299828, -1.36873576,\n         -1.02199863, -0.65848031, -0.28414977,  0.09484651,  0.4722854 ,\n          0.84196939],\n        [-2.3154173 , -2.54847199, -2.73968084, -2.88590421, -2.98474111,\n         -3.03456864, -3.03456864, -2.98474111, -2.88590421, -2.73968084,\n         -2.54847199, -2.3154173 , -2.04434352, -1.73970168, -1.40649398,\n         -1.0501917 , -0.67664529, -0.29198838,  0.09746296,  0.48531397,\n          0.86519613],\n        [-2.37757616, -2.61688735, -2.81322932, -2.96337815, -3.06486839,\n         -3.11603357, -3.11603357, -3.06486839, -2.96337815, -2.81322932,\n         -2.61688735, -2.37757616, -2.09922523, -1.78640508, -1.44425221,\n         -1.07838476, -0.69481026, -0.299827  ,  0.10007942,  0.49834253,\n          0.88842287],\n        [-2.43973501, -2.6853027 , -2.8867778 , -3.04085209, -3.14499567,\n         -3.1974985 , -3.1974985 , -3.14499567, -3.04085209, -2.8867778 ,\n         -2.6853027 , -2.43973501, -2.15410693, -1.83310848, -1.48201044,\n         -1.10657783, -0.71297524, -0.30766561,  0.10269587,  0.51137109,\n          0.91164961],\n        [-2.50189386, -2.75371806, -2.96032628, -3.11832603, -3.22512294,\n         -3.27896343, -3.27896343, -3.22512294, -3.11832603, -2.96032628,\n         -2.75371806, -2.50189386, -2.20898864, -1.87981188, -1.51976867,\n         -1.13477089, -0.73114021, -0.31550423,  0.10531233,  0.52439966,\n          0.93487636],\n        [-2.56405272, -2.82213341, -3.03387476, -3.19579996, -3.30525022,\n         -3.36042836, -3.36042836, -3.30525022, -3.19579996, -3.03387476,\n         -2.82213341, -2.56405272, -2.26387034, -1.92651528, -1.5575269 ,\n         -1.16296396, -0.74930519, -0.32334284,  0.10792878,  0.53742822,\n          0.9581031 ],\n        [-2.62621157, -2.89054877, -3.10742324, -3.2732739 , -3.3853775 ,\n         -3.44189329, -3.44189329, -3.3853775 , -3.2732739 , -3.10742324,\n         -2.89054877, -2.62621157, -2.31875205, -1.97321868, -1.59528512,\n         -1.19115702, -0.76747016, -0.33118146,  0.11054524,  0.55045678,\n          0.98132984],\n        [-2.68837042, -2.95896413, -3.18097172, -3.35074784, -3.46550478,\n         -3.52335822, -3.52335822, -3.46550478, -3.35074784, -3.18097172,\n         -2.95896413, -2.68837042, -2.37363376, -2.01992209, -1.63304335,\n         -1.21935009, -0.78563513, -0.33902007,  0.11316169,  0.56348534,\n          1.00455658],\n        [-2.75052928, -3.02737948, -3.2545202 , -3.42822178, -3.54563206,\n         -3.60482315, -3.60482315, -3.54563206, -3.42822178, -3.2545202 ,\n         -3.02737948, -2.75052928, -2.42851546, -2.06662549, -1.67080158,\n         -1.24754316, -0.80380011, -0.34685869,  0.11577815,  0.57651391,\n          1.02778332],\n        [-2.81268813, -3.09579484, -3.32806868, -3.50569572, -3.62575934,\n         -3.68628808, -3.68628808, -3.62575934, -3.50569572, -3.32806868,\n         -3.09579484, -2.81268813, -2.48339717, -2.11332889, -1.70855981,\n         -1.27573622, -0.82196508, -0.3546973 ,  0.1183946 ,  0.58954247,\n          1.05101006],\n        [-2.87484699, -3.16421019, -3.40161715, -3.58316966, -3.70588661,\n         -3.76775301, -3.76775301, -3.70588661, -3.58316966, -3.40161715,\n         -3.16421019, -2.87484699, -2.53827887, -2.16003229, -1.74631803,\n         -1.30392929, -0.84013006, -0.36253591,  0.12101106,  0.60257103,\n          1.07423681],\n        [-2.93700584, -3.23262555, -3.47516563, -3.6606436 , -3.78601389,\n         -3.84921794, -3.84921794, -3.78601389, -3.6606436 , -3.47516563,\n         -3.23262555, -2.93700584, -2.59316058, -2.20673569, -1.78407626,\n         -1.33212235, -0.85829503, -0.37037453,  0.12362751,  0.6155996 ,\n          1.09746355],\n        [-2.99916469, -3.3010409 , -3.54871411, -3.73811753, -3.86614117,\n         -3.93068287, -3.93068287, -3.86614117, -3.73811753, -3.54871411,\n         -3.3010409 , -2.99916469, -2.64804228, -2.25343909, -1.82183449,\n         -1.36031542, -0.87646001, -0.37821314,  0.12624397,  0.62862816,\n          1.12069029],\n        [-3.06132355, -3.36945626, -3.62226259, -3.81559147, -3.94626845,\n         -4.0121478 , -4.0121478 , -3.94626845, -3.81559147, -3.62226259,\n         -3.36945626, -3.06132355, -2.70292399, -2.30014249, -1.85959272,\n         -1.38850848, -0.89462498, -0.38605176,  0.12886042,  0.64165672,\n          1.14391703],\n        [-3.1234824 , -3.43787161, -3.69581107, -3.89306541, -4.02639573,\n         -4.09361273, -4.09361273, -4.02639573, -3.89306541, -3.69581107,\n         -3.43787161, -3.1234824 , -2.75780569, -2.34684589, -1.89735095,\n         -1.41670155, -0.91278995, -0.39389037,  0.13147688,  0.65468528,\n          1.16714377],\n        [-3.18564125, -3.50628697, -3.76935955, -3.97053935, -4.106523  ,\n         -4.17507766, -4.17507766, -4.106523  , -3.97053935, -3.76935955,\n         -3.50628697, -3.18564125, -2.8126874 , -2.39354929, -1.93510917,\n         -1.44489462, -0.93095493, -0.40172899,  0.13409333,  0.66771385,\n          1.19037052],\n        [-3.24780011, -3.57470232, -3.84290803, -4.04801329, -4.18665028,\n         -4.25654259, -4.25654259, -4.18665028, -4.04801329, -3.84290803,\n         -3.57470232, -3.24780011, -2.8675691 , -2.44025269, -1.9728674 ,\n         -1.47308768, -0.9491199 , -0.4095676 ,  0.13670979,  0.68074241,\n          1.21359726],\n        [-3.30995896, -3.64311768, -3.91645651, -4.12548723, -4.26677756,\n         -4.33800752, -4.33800752, -4.26677756, -4.12548723, -3.91645651,\n         -3.64311768, -3.30995896, -2.92245081, -2.48695609, -2.01062563,\n         -1.50128075, -0.96728488, -0.41740621,  0.13932625,  0.69377097,\n          1.236824  ],\n        [-3.37211782, -3.71153304, -3.99000499, -4.20296117, -4.34690484,\n         -4.41947245, -4.41947245, -4.34690484, -4.20296117, -3.99000499,\n         -3.71153304, -3.37211782, -2.97733251, -2.53365949, -2.04838386,\n         -1.52947381, -0.98544985, -0.42524483,  0.1419427 ,  0.70679954,\n          1.26005074],\n        [-3.43427667, -3.77994839, -4.06355347, -4.2804351 , -4.42703212,\n         -4.50093738, -4.50093738, -4.42703212, -4.2804351 , -4.06355347,\n         -3.77994839, -3.43427667, -3.03221422, -2.5803629 , -2.08614208,\n         -1.55766688, -1.00361482, -0.43308344,  0.14455916,  0.7198281 ,\n          1.28327748],\n        [-3.49643552, -3.84836375, -4.13710194, -4.35790904, -4.50715939,\n         -4.58240231, -4.58240231, -4.50715939, -4.35790904, -4.13710194,\n         -3.84836375, -3.49643552, -3.08709592, -2.6270663 , -2.12390031,\n         -1.58585994, -1.0217798 , -0.44092206,  0.14717561,  0.73285666,\n          1.30650422],\n        [-3.55859438, -3.9167791 , -4.21065042, -4.43538298, -4.58728667,\n         -4.66386724, -4.66386724, -4.58728667, -4.43538298, -4.21065042,\n         -3.9167791 , -3.55859438, -3.14197763, -2.6737697 , -2.16165854,\n         -1.61405301, -1.03994477, -0.44876067,  0.14979207,  0.74588522,\n          1.32973097],\n        [-3.62075323, -3.98519446, -4.2841989 , -4.51285692, -4.66741395,\n         -4.74533217, -4.74533217, -4.66741395, -4.51285692, -4.2841989 ,\n         -3.98519446, -3.62075323, -3.19685934, -2.7204731 , -2.19941677,\n         -1.64224608, -1.05810975, -0.45659929,  0.15240852,  0.75891379,\n          1.35295771],\n        [-3.68291208, -4.05360981, -4.35774738, -4.59033086, -4.74754123,\n         -4.8267971 , -4.8267971 , -4.74754123, -4.59033086, -4.35774738,\n         -4.05360981, -3.68291208, -3.25174104, -2.7671765 , -2.237175  ,\n         -1.67043914, -1.07627472, -0.4644379 ,  0.15502498,  0.77194235,\n          1.37618445],\n        [-3.74507094, -4.12202517, -4.43129586, -4.6678048 , -4.82766851,\n         -4.90826203, -4.90826203, -4.82766851, -4.6678048 , -4.43129586,\n         -4.12202517, -3.74507094, -3.30662275, -2.8138799 , -2.27493322,\n         -1.69863221, -1.0944397 , -0.47227652,  0.15764143,  0.78497091,\n          1.39941119],\n        [-3.80722979, -4.19044052, -4.50484434, -4.74527874, -4.90779578,\n         -4.98972696, -4.98972696, -4.90779578, -4.74527874, -4.50484434,\n         -4.19044052, -3.80722979, -3.36150445, -2.8605833 , -2.31269145,\n         -1.72682527, -1.11260467, -0.48011513,  0.16025789,  0.79799948,\n          1.42263793]],\n\n       [[-0.76144596, -0.8380881 , -0.90096887, -0.94905575, -0.98155916,\n         -0.99794539, -0.99794539, -0.98155916, -0.94905575, -0.90096887,\n         -0.8380881 , -0.76144596, -0.67230089, -0.57211666, -0.46253829,\n         -0.34536505, -0.22252093, -0.09602303,  0.03205158,  0.1595999 ,\n          0.28452759],\n        [-0.82360481, -0.90650346, -0.97451735, -1.02652969, -1.06168644,\n         -1.07941032, -1.07941032, -1.06168644, -1.02652969, -0.97451735,\n         -0.90650346, -0.82360481, -0.7271826 , -0.61882006, -0.50029652,\n         -0.37355812, -0.24068591, -0.10386164,  0.03466803,  0.17262846,\n          0.30775433],\n        [-0.88576367, -0.97491882, -1.04806583, -1.10400362, -1.14181371,\n         -1.16087525, -1.16087525, -1.14181371, -1.10400362, -1.04806583,\n         -0.97491882, -0.88576367, -0.7820643 , -0.66552346, -0.53805475,\n         -0.40175119, -0.25885088, -0.11170025,  0.03728449,  0.18565702,\n          0.33098107],\n        [-0.94792252, -1.04333417, -1.1216143 , -1.18147756, -1.22194099,\n         -1.24234018, -1.24234018, -1.22194099, -1.18147756, -1.1216143 ,\n         -1.04333417, -0.94792252, -0.83694601, -0.71222686, -0.57581297,\n         -0.42994425, -0.27701586, -0.11953887,  0.03990094,  0.19868558,\n          0.35420781],\n        [-1.01008137, -1.11174953, -1.19516278, -1.2589515 , -1.30206827,\n         -1.32380511, -1.32380511, -1.30206827, -1.2589515 , -1.19516278,\n         -1.11174953, -1.01008137, -0.89182771, -0.75893026, -0.6135712 ,\n         -0.45813732, -0.29518083, -0.12737748,  0.0425174 ,  0.21171415,\n          0.37743455],\n        [-1.07224023, -1.18016488, -1.26871126, -1.33642544, -1.38219555,\n         -1.40527004, -1.40527004, -1.38219555, -1.33642544, -1.26871126,\n         -1.18016488, -1.07224023, -0.94670942, -0.80563366, -0.65132943,\n         -0.48633038, -0.3133458 , -0.1352161 ,  0.04513385,  0.22474271,\n          0.4006613 ],\n        [-1.13439908, -1.24858024, -1.34225974, -1.41389938, -1.46232283,\n         -1.48673497, -1.48673497, -1.46232283, -1.41389938, -1.34225974,\n         -1.24858024, -1.13439908, -1.00159112, -0.85233707, -0.68908766,\n         -0.51452345, -0.33151078, -0.14305471,  0.04775031,  0.23777127,\n          0.42388804],\n        [-1.19655793, -1.31699559, -1.41580822, -1.49137332, -1.5424501 ,\n         -1.5681999 , -1.5681999 , -1.5424501 , -1.49137332, -1.41580822,\n         -1.31699559, -1.19655793, -1.05647283, -0.89904047, -0.72684588,\n         -0.54271651, -0.34967575, -0.15089333,  0.05036676,  0.25079984,\n          0.44711478],\n        [-1.25871679, -1.38541095, -1.4893567 , -1.56884726, -1.62257738,\n         -1.64966483, -1.64966483, -1.62257738, -1.56884726, -1.4893567 ,\n         -1.38541095, -1.25871679, -1.11135453, -0.94574387, -0.76460411,\n         -0.57090958, -0.36784073, -0.15873194,  0.05298322,  0.2638284 ,\n          0.47034152],\n        [-1.32087564, -1.4538263 , -1.56290518, -1.64632119, -1.70270466,\n         -1.73112976, -1.73112976, -1.70270466, -1.64632119, -1.56290518,\n         -1.4538263 , -1.32087564, -1.16623624, -0.99244727, -0.80236234,\n         -0.59910265, -0.3860057 , -0.16657056,  0.05559968,  0.27685696,\n          0.49356826],\n        [-1.3830345 , -1.52224166, -1.63645366, -1.72379513, -1.78283194,\n         -1.81259469, -1.81259469, -1.78283194, -1.72379513, -1.63645366,\n         -1.52224166, -1.3830345 , -1.22111794, -1.03915067, -0.84012057,\n         -0.62729571, -0.40417068, -0.17440917,  0.05821613,  0.28988552,\n          0.516795  ],\n        [-1.44519335, -1.59065702, -1.71000214, -1.80126907, -1.86295922,\n         -1.89405962, -1.89405962, -1.86295922, -1.80126907, -1.71000214,\n         -1.59065702, -1.44519335, -1.27599965, -1.08585407, -0.8778788 ,\n         -0.65548878, -0.42233565, -0.18224778,  0.06083259,  0.30291409,\n          0.54002175],\n        [-1.5073522 , -1.65907237, -1.78355062, -1.87874301, -1.94308649,\n         -1.97552455, -1.97552455, -1.94308649, -1.87874301, -1.78355062,\n         -1.65907237, -1.5073522 , -1.33088135, -1.13255747, -0.91563702,\n         -0.68368184, -0.44050062, -0.1900864 ,  0.06344904,  0.31594265,\n          0.56324849],\n        [-1.56951106, -1.72748773, -1.8570991 , -1.95621695, -2.02321377,\n         -2.05698948, -2.05698948, -2.02321377, -1.95621695, -1.8570991 ,\n         -1.72748773, -1.56951106, -1.38576306, -1.17926087, -0.95339525,\n         -0.71187491, -0.4586656 , -0.19792501,  0.0660655 ,  0.32897121,\n          0.58647523],\n        [-1.63166991, -1.79590308, -1.93064757, -2.03369089, -2.10334105,\n         -2.13845441, -2.13845441, -2.10334105, -2.03369089, -1.93064757,\n         -1.79590308, -1.63166991, -1.44064476, -1.22596427, -0.99115348,\n         -0.74006797, -0.47683057, -0.20576363,  0.06868195,  0.34199978,\n          0.60970197],\n        [-1.69382876, -1.86431844, -2.00419605, -2.11116482, -2.18346833,\n         -2.21991934, -2.21991934, -2.18346833, -2.11116482, -2.00419605,\n         -1.86431844, -1.69382876, -1.49552647, -1.27266767, -1.02891171,\n         -0.76826104, -0.49499555, -0.21360224,  0.07129841,  0.35502834,\n          0.63292871],\n        [-1.75598762, -1.93273379, -2.07774453, -2.18863876, -2.26359561,\n         -2.30138427, -2.30138427, -2.26359561, -2.18863876, -2.07774453,\n         -1.93273379, -1.75598762, -1.55040818, -1.31937107, -1.06666993,\n         -0.79645411, -0.51316052, -0.22144086,  0.07391486,  0.3680569 ,\n          0.65615545],\n        [-1.81814647, -2.00114915, -2.15129301, -2.2661127 , -2.34372289,\n         -2.3828492 , -2.3828492 , -2.34372289, -2.2661127 , -2.15129301,\n         -2.00114915, -1.81814647, -1.60528988, -1.36607447, -1.10442816,\n         -0.82464717, -0.5313255 , -0.22927947,  0.07653132,  0.38108546,\n          0.6793822 ],\n        [-1.88030533, -2.0695645 , -2.22484149, -2.34358664, -2.42385016,\n         -2.46431413, -2.46431413, -2.42385016, -2.34358664, -2.22484149,\n         -2.0695645 , -1.88030533, -1.66017159, -1.41277787, -1.14218639,\n         -0.85284024, -0.54949047, -0.23711808,  0.07914777,  0.39411403,\n          0.70260894],\n        [-1.94246418, -2.13797986, -2.29838997, -2.42106058, -2.50397744,\n         -2.54577906, -2.54577906, -2.50397744, -2.42106058, -2.29838997,\n         -2.13797986, -1.94246418, -1.71505329, -1.45948128, -1.17994462,\n         -0.8810333 , -0.56765544, -0.2449567 ,  0.08176423,  0.40714259,\n          0.72583568],\n        [-2.00462303, -2.20639521, -2.37193845, -2.49853452, -2.58410472,\n         -2.62724399, -2.62724399, -2.58410472, -2.49853452, -2.37193845,\n         -2.20639521, -2.00462303, -1.769935  , -1.50618468, -1.21770285,\n         -0.90922637, -0.58582042, -0.25279531,  0.08438068,  0.42017115,\n          0.74906242],\n        [-2.06678189, -2.27481057, -2.44548693, -2.57600846, -2.664232  ,\n         -2.70870892, -2.70870892, -2.664232  , -2.57600846, -2.44548693,\n         -2.27481057, -2.06678189, -1.8248167 , -1.55288808, -1.25546107,\n         -0.93741943, -0.60398539, -0.26063393,  0.08699714,  0.43319972,\n          0.77228916],\n        [-2.12894074, -2.34322593, -2.51903541, -2.65348239, -2.74435928,\n         -2.79017385, -2.79017385, -2.74435928, -2.65348239, -2.51903541,\n         -2.34322593, -2.12894074, -1.87969841, -1.59959148, -1.2932193 ,\n         -0.9656125 , -0.62215037, -0.26847254,  0.08961359,  0.44622828,\n          0.79551591],\n        [-2.19109959, -2.41164128, -2.59258389, -2.73095633, -2.82448655,\n         -2.87163878, -2.87163878, -2.82448655, -2.73095633, -2.59258389,\n         -2.41164128, -2.19109959, -1.93458011, -1.64629488, -1.33097753,\n         -0.99380556, -0.64031534, -0.27631116,  0.09223005,  0.45925684,\n          0.81874265],\n        [-2.25325845, -2.48005664, -2.66613236, -2.80843027, -2.90461383,\n         -2.95310371, -2.95310371, -2.90461383, -2.80843027, -2.66613236,\n         -2.48005664, -2.25325845, -1.98946182, -1.69299828, -1.36873576,\n         -1.02199863, -0.65848031, -0.28414977,  0.09484651,  0.4722854 ,\n          0.84196939],\n        [-2.3154173 , -2.54847199, -2.73968084, -2.88590421, -2.98474111,\n         -3.03456864, -3.03456864, -2.98474111, -2.88590421, -2.73968084,\n         -2.54847199, -2.3154173 , -2.04434352, -1.73970168, -1.40649398,\n         -1.0501917 , -0.67664529, -0.29198838,  0.09746296,  0.48531397,\n          0.86519613],\n        [-2.37757616, -2.61688735, -2.81322932, -2.96337815, -3.06486839,\n         -3.11603357, -3.11603357, -3.06486839, -2.96337815, -2.81322932,\n         -2.61688735, -2.37757616, -2.09922523, -1.78640508, -1.44425221,\n         -1.07838476, -0.69481026, -0.299827  ,  0.10007942,  0.49834253,\n          0.88842287],\n        [-2.43973501, -2.6853027 , -2.8867778 , -3.04085209, -3.14499567,\n         -3.1974985 , -3.1974985 , -3.14499567, -3.04085209, -2.8867778 ,\n         -2.6853027 , -2.43973501, -2.15410693, -1.83310848, -1.48201044,\n         -1.10657783, -0.71297524, -0.30766561,  0.10269587,  0.51137109,\n          0.91164961],\n        [-2.50189386, -2.75371806, -2.96032628, -3.11832603, -3.22512294,\n         -3.27896343, -3.27896343, -3.22512294, -3.11832603, -2.96032628,\n         -2.75371806, -2.50189386, -2.20898864, -1.87981188, -1.51976867,\n         -1.13477089, -0.73114021, -0.31550423,  0.10531233,  0.52439966,\n          0.93487636],\n        [-2.56405272, -2.82213341, -3.03387476, -3.19579996, -3.30525022,\n         -3.36042836, -3.36042836, -3.30525022, -3.19579996, -3.03387476,\n         -2.82213341, -2.56405272, -2.26387034, -1.92651528, -1.5575269 ,\n         -1.16296396, -0.74930519, -0.32334284,  0.10792878,  0.53742822,\n          0.9581031 ],\n        [-2.62621157, -2.89054877, -3.10742324, -3.2732739 , -3.3853775 ,\n         -3.44189329, -3.44189329, -3.3853775 , -3.2732739 , -3.10742324,\n         -2.89054877, -2.62621157, -2.31875205, -1.97321868, -1.59528512,\n         -1.19115702, -0.76747016, -0.33118146,  0.11054524,  0.55045678,\n          0.98132984],\n        [-2.68837042, -2.95896413, -3.18097172, -3.35074784, -3.46550478,\n         -3.52335822, -3.52335822, -3.46550478, -3.35074784, -3.18097172,\n         -2.95896413, -2.68837042, -2.37363376, -2.01992209, -1.63304335,\n         -1.21935009, -0.78563513, -0.33902007,  0.11316169,  0.56348534,\n          1.00455658],\n        [-2.75052928, -3.02737948, -3.2545202 , -3.42822178, -3.54563206,\n         -3.60482315, -3.60482315, -3.54563206, -3.42822178, -3.2545202 ,\n         -3.02737948, -2.75052928, -2.42851546, -2.06662549, -1.67080158,\n         -1.24754316, -0.80380011, -0.34685869,  0.11577815,  0.57651391,\n          1.02778332],\n        [-2.81268813, -3.09579484, -3.32806868, -3.50569572, -3.62575934,\n         -3.68628808, -3.68628808, -3.62575934, -3.50569572, -3.32806868,\n         -3.09579484, -2.81268813, -2.48339717, -2.11332889, -1.70855981,\n         -1.27573622, -0.82196508, -0.3546973 ,  0.1183946 ,  0.58954247,\n          1.05101006],\n        [-2.87484699, -3.16421019, -3.40161715, -3.58316966, -3.70588661,\n         -3.76775301, -3.76775301, -3.70588661, -3.58316966, -3.40161715,\n         -3.16421019, -2.87484699, -2.53827887, -2.16003229, -1.74631803,\n         -1.30392929, -0.84013006, -0.36253591,  0.12101106,  0.60257103,\n          1.07423681],\n        [-2.93700584, -3.23262555, -3.47516563, -3.6606436 , -3.78601389,\n         -3.84921794, -3.84921794, -3.78601389, -3.6606436 , -3.47516563,\n         -3.23262555, -2.93700584, -2.59316058, -2.20673569, -1.78407626,\n         -1.33212235, -0.85829503, -0.37037453,  0.12362751,  0.6155996 ,\n          1.09746355],\n        [-2.99916469, -3.3010409 , -3.54871411, -3.73811753, -3.86614117,\n         -3.93068287, -3.93068287, -3.86614117, -3.73811753, -3.54871411,\n         -3.3010409 , -2.99916469, -2.64804228, -2.25343909, -1.82183449,\n         -1.36031542, -0.87646001, -0.37821314,  0.12624397,  0.62862816,\n          1.12069029],\n        [-3.06132355, -3.36945626, -3.62226259, -3.81559147, -3.94626845,\n         -4.0121478 , -4.0121478 , -3.94626845, -3.81559147, -3.62226259,\n         -3.36945626, -3.06132355, -2.70292399, -2.30014249, -1.85959272,\n         -1.38850848, -0.89462498, -0.38605176,  0.12886042,  0.64165672,\n          1.14391703],\n        [-3.1234824 , -3.43787161, -3.69581107, -3.89306541, -4.02639573,\n         -4.09361273, -4.09361273, -4.02639573, -3.89306541, -3.69581107,\n         -3.43787161, -3.1234824 , -2.75780569, -2.34684589, -1.89735095,\n         -1.41670155, -0.91278995, -0.39389037,  0.13147688,  0.65468528,\n          1.16714377],\n        [-3.18564125, -3.50628697, -3.76935955, -3.97053935, -4.106523  ,\n         -4.17507766, -4.17507766, -4.106523  , -3.97053935, -3.76935955,\n         -3.50628697, -3.18564125, -2.8126874 , -2.39354929, -1.93510917,\n         -1.44489462, -0.93095493, -0.40172899,  0.13409333,  0.66771385,\n          1.19037052],\n        [-3.24780011, -3.57470232, -3.84290803, -4.04801329, -4.18665028,\n         -4.25654259, -4.25654259, -4.18665028, -4.04801329, -3.84290803,\n         -3.57470232, -3.24780011, -2.8675691 , -2.44025269, -1.9728674 ,\n         -1.47308768, -0.9491199 , -0.4095676 ,  0.13670979,  0.68074241,\n          1.21359726],\n        [-3.30995896, -3.64311768, -3.91645651, -4.12548723, -4.26677756,\n         -4.33800752, -4.33800752, -4.26677756, -4.12548723, -3.91645651,\n         -3.64311768, -3.30995896, -2.92245081, -2.48695609, -2.01062563,\n         -1.50128075, -0.96728488, -0.41740621,  0.13932625,  0.69377097,\n          1.236824  ],\n        [-3.37211782, -3.71153304, -3.99000499, -4.20296117, -4.34690484,\n         -4.41947245, -4.41947245, -4.34690484, -4.20296117, -3.99000499,\n         -3.71153304, -3.37211782, -2.97733251, -2.53365949, -2.04838386,\n         -1.52947381, -0.98544985, -0.42524483,  0.1419427 ,  0.70679954,\n          1.26005074],\n        [-3.43427667, -3.77994839, -4.06355347, -4.2804351 , -4.42703212,\n         -4.50093738, -4.50093738, -4.42703212, -4.2804351 , -4.06355347,\n         -3.77994839, -3.43427667, -3.03221422, -2.5803629 , -2.08614208,\n         -1.55766688, -1.00361482, -0.43308344,  0.14455916,  0.7198281 ,\n          1.28327748],\n        [-3.49643552, -3.84836375, -4.13710194, -4.35790904, -4.50715939,\n         -4.58240231, -4.58240231, -4.50715939, -4.35790904, -4.13710194,\n         -3.84836375, -3.49643552, -3.08709592, -2.6270663 , -2.12390031,\n         -1.58585994, -1.0217798 , -0.44092206,  0.14717561,  0.73285666,\n          1.30650422],\n        [-3.55859438, -3.9167791 , -4.21065042, -4.43538298, -4.58728667,\n         -4.66386724, -4.66386724, -4.58728667, -4.43538298, -4.21065042,\n         -3.9167791 , -3.55859438, -3.14197763, -2.6737697 , -2.16165854,\n         -1.61405301, -1.03994477, -0.44876067,  0.14979207,  0.74588522,\n          1.32973097],\n        [-3.62075323, -3.98519446, -4.2841989 , -4.51285692, -4.66741395,\n         -4.74533217, -4.74533217, -4.66741395, -4.51285692, -4.2841989 ,\n         -3.98519446, -3.62075323, -3.19685934, -2.7204731 , -2.19941677,\n         -1.64224608, -1.05810975, -0.45659929,  0.15240852,  0.75891379,\n          1.35295771],\n        [-3.68291208, -4.05360981, -4.35774738, -4.59033086, -4.74754123,\n         -4.8267971 , -4.8267971 , -4.74754123, -4.59033086, -4.35774738,\n         -4.05360981, -3.68291208, -3.25174104, -2.7671765 , -2.237175  ,\n         -1.67043914, -1.07627472, -0.4644379 ,  0.15502498,  0.77194235,\n          1.37618445],\n        [-3.74507094, -4.12202517, -4.43129586, -4.6678048 , -4.82766851,\n         -4.90826203, -4.90826203, -4.82766851, -4.6678048 , -4.43129586,\n         -4.12202517, -3.74507094, -3.30662275, -2.8138799 , -2.27493322,\n         -1.69863221, -1.0944397 , -0.47227652,  0.15764143,  0.78497091,\n          1.39941119],\n        [-3.80722979, -4.19044052, -4.50484434, -4.74527874, -4.90779578,\n         -4.98972696, -4.98972696, -4.90779578, -4.74527874, -4.50484434,\n         -4.19044052, -3.80722979, -3.36150445, -2.8605833 , -2.31269145,\n         -1.72682527, -1.11260467, -0.48011513,  0.16025789,  0.79799948,\n          1.42263793]]]), [], \'DataArray_t\'], [\'CoordinateY\', array([[[-0.6482284 , -0.5455349 , -0.43388374, -0.31510822, -0.19115863,\n         -0.06407022,  0.06407022,  0.19115863,  0.31510822,  0.43388374,\n          0.5455349 ,  0.6482284 ,  0.740278  ,  0.82017225,  0.88659931,\n          0.93846842,  0.97492791,  0.99537911,  0.99948622,  0.98718178,\n          0.95866785],\n        [-0.701145  , -0.59006836, -0.46930282, -0.34083134, -0.20676341,\n         -0.06930044,  0.06930044,  0.20676341,  0.34083134,  0.46930282,\n          0.59006836,  0.701145  ,  0.80070885,  0.88712509,  0.95897476,\n          1.01507809,  1.05451386,  1.07663455,  1.08107693,  1.06776805,\n          1.03692645],\n        [-0.7540616 , -0.63460182, -0.5047219 , -0.36655446, -0.2223682 ,\n         -0.07453066,  0.07453066,  0.2223682 ,  0.36655446,  0.5047219 ,\n          0.63460182,  0.7540616 ,  0.86113971,  0.95407793,  1.03135021,\n          1.09168776,  1.13409982,  1.15788999,  1.16266764,  1.14835432,\n          1.11518505],\n        [-0.80697821, -0.67913529, -0.54014098, -0.39227758, -0.23797299,\n         -0.07976089,  0.07976089,  0.23797299,  0.39227758,  0.54014098,\n          0.67913529,  0.80697821,  0.92157057,  1.02103077,  1.10372567,\n          1.16829742,  1.21368577,  1.23914543,  1.24425835,  1.22894059,\n          1.19344365],\n        [-0.85989481, -0.72366875, -0.57556006, -0.4180007 , -0.25357777,\n         -0.08499111,  0.08499111,  0.25357777,  0.4180007 ,  0.57556006,\n          0.72366875,  0.85989481,  0.98200142,  1.0879836 ,  1.17610112,\n          1.24490709,  1.29327172,  1.32040086,  1.32584906,  1.30952686,\n          1.27170225],\n        [-0.91281141, -0.76820221, -0.61097914, -0.44372382, -0.26918256,\n         -0.09022133,  0.09022133,  0.26918256,  0.44372382,  0.61097914,\n          0.76820221,  0.91281141,  1.04243228,  1.15493644,  1.24847657,\n          1.32151676,  1.37285767,  1.4016563 ,  1.40743977,  1.39011312,\n          1.34996085],\n        [-0.96572802, -0.81273567, -0.64639822, -0.46944694, -0.28478734,\n         -0.09545155,  0.09545155,  0.28478734,  0.46944694,  0.64639822,\n          0.81273567,  0.96572802,  1.10286314,  1.22188928,  1.32085203,\n          1.39812642,  1.45244362,  1.48291174,  1.48903049,  1.47069939,\n          1.42821945],\n        [-1.01864462, -0.85726913, -0.6818173 , -0.49517006, -0.30039213,\n         -0.10068177,  0.10068177,  0.30039213,  0.49517006,  0.6818173 ,\n          0.85726913,  1.01864462,  1.163294  ,  1.28884211,  1.39322748,\n          1.47473609,  1.53202958,  1.56416718,  1.5706212 ,  1.55128566,\n          1.50647805],\n        [-1.07156122, -0.90180259, -0.71723639, -0.52089318, -0.31599692,\n         -0.105912  ,  0.105912  ,  0.31599692,  0.52089318,  0.71723639,\n          0.90180259,  1.07156122,  1.22372485,  1.35579495,  1.46560294,\n          1.55134576,  1.61161553,  1.64542262,  1.65221191,  1.63187193,\n          1.58473666],\n        [-1.12447783, -0.94633605, -0.75265547, -0.5466163 , -0.3316017 ,\n         -0.11114222,  0.11114222,  0.3316017 ,  0.5466163 ,  0.75265547,\n          0.94633605,  1.12447783,  1.28415571,  1.42274779,  1.53797839,\n          1.62795543,  1.69120148,  1.72667805,  1.73380262,  1.7124582 ,\n          1.66299526],\n        [-1.17739443, -0.99086951, -0.78807455, -0.57233942, -0.34720649,\n         -0.11637244,  0.11637244,  0.34720649,  0.57233942,  0.78807455,\n          0.99086951,  1.17739443,  1.34458657,  1.48970063,  1.61035384,\n          1.70456509,  1.77078743,  1.80793349,  1.81539333,  1.79304446,\n          1.74125386],\n        [-1.23031104, -1.03540298, -0.82349363, -0.59806254, -0.36281127,\n         -0.12160266,  0.12160266,  0.36281127,  0.59806254,  0.82349363,\n          1.03540298,  1.23031104,  1.40501742,  1.55665346,  1.6827293 ,\n          1.78117476,  1.85037338,  1.88918893,  1.89698404,  1.87363073,\n          1.81951246],\n        [-1.28322764, -1.07993644, -0.85891271, -0.62378566, -0.37841606,\n         -0.12683288,  0.12683288,  0.37841606,  0.62378566,  0.85891271,\n          1.07993644,  1.28322764,  1.46544828,  1.6236063 ,  1.75510475,\n          1.85778443,  1.92995934,  1.97044437,  1.97857475,  1.954217  ,\n          1.89777106],\n        [-1.33614424, -1.1244699 , -0.89433179, -0.64950878, -0.39402085,\n         -0.13206311,  0.13206311,  0.39402085,  0.64950878,  0.89433179,\n          1.1244699 ,  1.33614424,  1.52587914,  1.69055914,  1.8274802 ,\n          1.93439409,  2.00954529,  2.0516998 ,  2.06016547,  2.03480327,\n          1.97602966],\n        [-1.38906085, -1.16900336, -0.92975087, -0.6752319 , -0.40962563,\n         -0.13729333,  0.13729333,  0.40962563,  0.6752319 ,  0.92975087,\n          1.16900336,  1.38906085,  1.58630999,  1.75751197,  1.89985566,\n          2.01100376,  2.08913124,  2.13295524,  2.14175618,  2.11538954,\n          2.05428826],\n        [-1.44197745, -1.21353682, -0.96516995, -0.70095502, -0.42523042,\n         -0.14252355,  0.14252355,  0.42523042,  0.70095502,  0.96516995,\n          1.21353682,  1.44197745,  1.64674085,  1.82446481,  1.97223111,\n          2.08761343,  2.16871719,  2.21421068,  2.22334689,  2.1959758 ,\n          2.13254686],\n        [-1.49489405, -1.25807028, -1.00058903, -0.72667814, -0.4408352 ,\n         -0.14775377,  0.14775377,  0.4408352 ,  0.72667814,  1.00058903,\n          1.25807028,  1.49489405,  1.70717171,  1.89141765,  2.04460656,\n          2.1642231 ,  2.24830314,  2.29546612,  2.3049376 ,  2.27656207,\n          2.21080546],\n        [-1.54781066, -1.30260374, -1.03600811, -0.75240126, -0.45643999,\n         -0.15298399,  0.15298399,  0.45643999,  0.75240126,  1.03600811,\n          1.30260374,  1.54781066,  1.76760256,  1.95837049,  2.11698202,\n          2.24083276,  2.3278891 ,  2.37672156,  2.38652831,  2.35714834,\n          2.28906406],\n        [-1.60072726, -1.34713721, -1.07142719, -0.77812438, -0.47204478,\n         -0.15821422,  0.15821422,  0.47204478,  0.77812438,  1.07142719,\n          1.34713721,  1.60072726,  1.82803342,  2.02532332,  2.18935747,\n          2.31744243,  2.40747505,  2.45797699,  2.46811902,  2.43773461,\n          2.36732266],\n        [-1.65364387, -1.39167067, -1.10684627, -0.80384749, -0.48764956,\n         -0.16344444,  0.16344444,  0.48764956,  0.80384749,  1.10684627,\n          1.39167067,  1.65364387,  1.88846428,  2.09227616,  2.26173292,\n          2.3940521 ,  2.487061  ,  2.53923243,  2.54970974,  2.51832088,\n          2.44558126],\n        [-1.70656047, -1.43620413, -1.14226535, -0.82957061, -0.50325435,\n         -0.16867466,  0.16867466,  0.50325435,  0.82957061,  1.14226535,\n          1.43620413,  1.70656047,  1.94889514,  2.159229  ,  2.33410838,\n          2.47066176,  2.56664695,  2.62048787,  2.63130045,  2.59890714,\n          2.52383986],\n        [-1.75947707, -1.48073759, -1.17768443, -0.85529373, -0.51885914,\n         -0.17390488,  0.17390488,  0.51885914,  0.85529373,  1.17768443,\n          1.48073759,  1.75947707,  2.00932599,  2.22618183,  2.40648383,\n          2.54727143,  2.6462329 ,  2.70174331,  2.71289116,  2.67949341,\n          2.60209846],\n        [-1.81239368, -1.52527105, -1.21310352, -0.88101685, -0.53446392,\n         -0.1791351 ,  0.1791351 ,  0.53446392,  0.88101685,  1.21310352,\n          1.52527105,  1.81239368,  2.06975685,  2.29313467,  2.47885929,\n          2.6238811 ,  2.72581886,  2.78299874,  2.79448187,  2.76007968,\n          2.68035706],\n        [-1.86531028, -1.56980451, -1.2485226 , -0.90673997, -0.55006871,\n         -0.18436533,  0.18436533,  0.55006871,  0.90673997,  1.2485226 ,\n          1.56980451,  1.86531028,  2.13018771,  2.36008751,  2.55123474,\n          2.70049077,  2.80540481,  2.86425418,  2.87607258,  2.84066595,\n          2.75861566],\n        [-1.91822688, -1.61433797, -1.28394168, -0.93246309, -0.56567349,\n         -0.18959555,  0.18959555,  0.56567349,  0.93246309,  1.28394168,\n          1.61433797,  1.91822688,  2.19061856,  2.42704035,  2.62361019,\n          2.77710043,  2.88499076,  2.94550962,  2.95766329,  2.92125222,\n          2.83687426],\n        [-1.97114349, -1.65887143, -1.31936076, -0.95818621, -0.58127828,\n         -0.19482577,  0.19482577,  0.58127828,  0.95818621,  1.31936076,\n          1.65887143,  1.97114349,  2.25104942,  2.49399318,  2.69598565,\n          2.8537101 ,  2.96457671,  3.02676506,  3.039254  ,  3.00183848,\n          2.91513286],\n        [-2.02406009, -1.7034049 , -1.35477984, -0.98390933, -0.59688307,\n         -0.20005599,  0.20005599,  0.59688307,  0.98390933,  1.35477984,\n          1.7034049 ,  2.02406009,  2.31148028,  2.56094602,  2.7683611 ,\n          2.93031977,  3.04416266,  3.1080205 ,  3.12084472,  3.08242475,\n          2.99339146],\n        [-2.0769767 , -1.74793836, -1.39019892, -1.00963245, -0.61248785,\n         -0.20528622,  0.20528622,  0.61248785,  1.00963245,  1.39019892,\n          1.74793836,  2.0769767 ,  2.37191113,  2.62789886,  2.84073655,\n          3.00692943,  3.12374862,  3.18927593,  3.20243543,  3.16301102,\n          3.07165006],\n        [-2.1298933 , -1.79247182, -1.425618  , -1.03535557, -0.62809264,\n         -0.21051644,  0.21051644,  0.62809264,  1.03535557,  1.425618  ,\n          1.79247182,  2.1298933 ,  2.43234199,  2.69485169,  2.91311201,\n          3.0835391 ,  3.20333457,  3.27053137,  3.28402614,  3.24359729,\n          3.14990866],\n        [-2.1828099 , -1.83700528, -1.46103708, -1.06107869, -0.64369742,\n         -0.21574666,  0.21574666,  0.64369742,  1.06107869,  1.46103708,\n          1.83700528,  2.1828099 ,  2.49277285,  2.76180453,  2.98548746,\n          3.16014877,  3.28292052,  3.35178681,  3.36561685,  3.32418356,\n          3.22816726],\n        [-2.23572651, -1.88153874, -1.49645616, -1.08680181, -0.65930221,\n         -0.22097688,  0.22097688,  0.65930221,  1.08680181,  1.49645616,\n          1.88153874,  2.23572651,  2.5532037 ,  2.82875737,  3.05786291,\n          3.23675844,  3.36250647,  3.43304225,  3.44720756,  3.40476982,\n          3.30642586],\n        [-2.28864311, -1.9260722 , -1.53187524, -1.11252493, -0.674907  ,\n         -0.2262071 ,  0.2262071 ,  0.674907  ,  1.11252493,  1.53187524,\n          1.9260722 ,  2.28864311,  2.61363456,  2.89571021,  3.13023837,\n          3.3133681 ,  3.44209242,  3.51429768,  3.52879827,  3.48535609,\n          3.38468446],\n        [-2.34155971, -1.97060566, -1.56729432, -1.13824805, -0.69051178,\n         -0.23143733,  0.23143733,  0.69051178,  1.13824805,  1.56729432,\n          1.97060566,  2.34155971,  2.67406542,  2.96266304,  3.20261382,\n          3.38997777,  3.52167838,  3.59555312,  3.61038899,  3.56594236,\n          3.46294306],\n        [-2.39447632, -2.01513912, -1.6027134 , -1.16397117, -0.70611657,\n         -0.23666755,  0.23666755,  0.70611657,  1.16397117,  1.6027134 ,\n          2.01513912,  2.39447632,  2.73449627,  3.02961588,  3.27498927,\n          3.46658744,  3.60126433,  3.67680856,  3.6919797 ,  3.64652863,\n          3.54120166],\n        [-2.44739292, -2.05967259, -1.63813248, -1.18969429, -0.72172135,\n         -0.24189777,  0.24189777,  0.72172135,  1.18969429,  1.63813248,\n          2.05967259,  2.44739292,  2.79492713,  3.09656872,  3.34736473,\n          3.5431971 ,  3.68085028,  3.758064  ,  3.77357041,  3.7271149 ,\n          3.61946026],\n        [-2.50030952, -2.10420605, -1.67355157, -1.21541741, -0.73732614,\n         -0.24712799,  0.24712799,  0.73732614,  1.21541741,  1.67355157,\n          2.10420605,  2.50030952,  2.85535799,  3.16352155,  3.41974018,\n          3.61980677,  3.76043623,  3.83931944,  3.85516112,  3.80770116,\n          3.69771886],\n        [-2.55322613, -2.14873951, -1.70897065, -1.24114053, -0.75293093,\n         -0.25235821,  0.25235821,  0.75293093,  1.24114053,  1.70897065,\n          2.14873951,  2.55322613,  2.91578885,  3.23047439,  3.49211564,\n          3.69641644,  3.84002218,  3.92057487,  3.93675183,  3.88828743,\n          3.77597746],\n        [-2.60614273, -2.19327297, -1.74438973, -1.26686365, -0.76853571,\n         -0.25758844,  0.25758844,  0.76853571,  1.26686365,  1.74438973,\n          2.19327297,  2.60614273,  2.9762197 ,  3.29742723,  3.56449109,\n          3.7730261 ,  3.91960814,  4.00183031,  4.01834254,  3.9688737 ,\n          3.85423606],\n        [-2.65905934, -2.23780643, -1.77980881, -1.29258677, -0.7841405 ,\n         -0.26281866,  0.26281866,  0.7841405 ,  1.29258677,  1.77980881,\n          2.23780643,  2.65905934,  3.03665056,  3.36438006,  3.63686654,\n          3.84963577,  3.99919409,  4.08308575,  4.09993325,  4.04945997,\n          3.93249466],\n        [-2.71197594, -2.28233989, -1.81522789, -1.31830989, -0.79974528,\n         -0.26804888,  0.26804888,  0.79974528,  1.31830989,  1.81522789,\n          2.28233989,  2.71197594,  3.09708142,  3.4313329 ,  3.709242  ,\n          3.92624544,  4.07878004,  4.16434119,  4.18152397,  4.13004624,\n          4.01075326],\n        [-2.76489254, -2.32687335, -1.85064697, -1.34403301, -0.81535007,\n         -0.2732791 ,  0.2732791 ,  0.81535007,  1.34403301,  1.85064697,\n          2.32687335,  2.76489254,  3.15751227,  3.49828574,  3.78161745,\n          4.00285511,  4.15836599,  4.24559662,  4.26311468,  4.2106325 ,\n          4.08901186],\n        [-2.81780915, -2.37140682, -1.88606605, -1.36975613, -0.83095486,\n         -0.27850932,  0.27850932,  0.83095486,  1.36975613,  1.88606605,\n          2.37140682,  2.81780915,  3.21794313,  3.56523858,  3.8539929 ,\n          4.07946477,  4.23795194,  4.32685206,  4.34470539,  4.29121877,\n          4.16727046],\n        [-2.87072575, -2.41594028, -1.92148513, -1.39547925, -0.84655964,\n         -0.28373955,  0.28373955,  0.84655964,  1.39547925,  1.92148513,\n          2.41594028,  2.87072575,  3.27837399,  3.63219141,  3.92636836,\n          4.15607444,  4.3175379 ,  4.4081075 ,  4.4262961 ,  4.37180504,\n          4.24552906],\n        [-2.92364235, -2.46047374, -1.95690421, -1.42120237, -0.86216443,\n         -0.28896977,  0.28896977,  0.86216443,  1.42120237,  1.95690421,\n          2.46047374,  2.92364235,  3.33880484,  3.69914425,  3.99874381,\n          4.23268411,  4.39712385,  4.48936294,  4.50788681,  4.45239131,\n          4.32378766],\n        [-2.97655896, -2.5050072 , -1.99232329, -1.44692549, -0.87776921,\n         -0.29419999,  0.29419999,  0.87776921,  1.44692549,  1.99232329,\n          2.5050072 ,  2.97655896,  3.3992357 ,  3.76609709,  4.07111926,\n          4.30929377,  4.4767098 ,  4.57061838,  4.58947752,  4.53297758,\n          4.40204626],\n        [-3.02947556, -2.54954066, -2.02774237, -1.47264861, -0.893374  ,\n         -0.29943021,  0.29943021,  0.893374  ,  1.47264861,  2.02774237,\n          2.54954066,  3.02947556,  3.45966656,  3.83304992,  4.14349472,\n          4.38590344,  4.55629575,  4.65187381,  4.67106823,  4.61356384,\n          4.48030486],\n        [-3.08239217, -2.59407412, -2.06316145, -1.49837173, -0.90897879,\n         -0.30466043,  0.30466043,  0.90897879,  1.49837173,  2.06316145,\n          2.59407412,  3.08239217,  3.52009741,  3.90000276,  4.21587017,\n          4.46251311,  4.6358817 ,  4.73312925,  4.75265895,  4.69415011,\n          4.55856346],\n        [-3.13530877, -2.63860758, -2.09858053, -1.52409485, -0.92458357,\n         -0.30989066,  0.30989066,  0.92458357,  1.52409485,  2.09858053,\n          2.63860758,  3.13530877,  3.58052827,  3.9669556 ,  4.28824562,\n          4.53912278,  4.71546766,  4.81438469,  4.83424966,  4.77473638,\n          4.63682206],\n        [-3.18822537, -2.68314104, -2.13399961, -1.54981797, -0.94018836,\n         -0.31512088,  0.31512088,  0.94018836,  1.54981797,  2.13399961,\n          2.68314104,  3.18822537,  3.64095913,  4.03390844,  4.36062108,\n          4.61573244,  4.79505361,  4.89564013,  4.91584037,  4.85532265,\n          4.71508066],\n        [-3.24114198, -2.72767451, -2.1694187 , -1.57554109, -0.95579314,\n         -0.3203511 ,  0.3203511 ,  0.95579314,  1.57554109,  2.1694187 ,\n          2.72767451,  3.24114198,  3.70138999,  4.10086127,  4.43299653,\n          4.69234211,  4.87463956,  4.97689556,  4.99743108,  4.93590892,\n          4.79333927]],\n\n       [[-0.6482284 , -0.5455349 , -0.43388374, -0.31510822, -0.19115863,\n         -0.06407022,  0.06407022,  0.19115863,  0.31510822,  0.43388374,\n          0.5455349 ,  0.6482284 ,  0.740278  ,  0.82017225,  0.88659931,\n          0.93846842,  0.97492791,  0.99537911,  0.99948622,  0.98718178,\n          0.95866785],\n        [-0.701145  , -0.59006836, -0.46930282, -0.34083134, -0.20676341,\n         -0.06930044,  0.06930044,  0.20676341,  0.34083134,  0.46930282,\n          0.59006836,  0.701145  ,  0.80070885,  0.88712509,  0.95897476,\n          1.01507809,  1.05451386,  1.07663455,  1.08107693,  1.06776805,\n          1.03692645],\n        [-0.7540616 , -0.63460182, -0.5047219 , -0.36655446, -0.2223682 ,\n         -0.07453066,  0.07453066,  0.2223682 ,  0.36655446,  0.5047219 ,\n          0.63460182,  0.7540616 ,  0.86113971,  0.95407793,  1.03135021,\n          1.09168776,  1.13409982,  1.15788999,  1.16266764,  1.14835432,\n          1.11518505],\n        [-0.80697821, -0.67913529, -0.54014098, -0.39227758, -0.23797299,\n         -0.07976089,  0.07976089,  0.23797299,  0.39227758,  0.54014098,\n          0.67913529,  0.80697821,  0.92157057,  1.02103077,  1.10372567,\n          1.16829742,  1.21368577,  1.23914543,  1.24425835,  1.22894059,\n          1.19344365],\n        [-0.85989481, -0.72366875, -0.57556006, -0.4180007 , -0.25357777,\n         -0.08499111,  0.08499111,  0.25357777,  0.4180007 ,  0.57556006,\n          0.72366875,  0.85989481,  0.98200142,  1.0879836 ,  1.17610112,\n          1.24490709,  1.29327172,  1.32040086,  1.32584906,  1.30952686,\n          1.27170225],\n        [-0.91281141, -0.76820221, -0.61097914, -0.44372382, -0.26918256,\n         -0.09022133,  0.09022133,  0.26918256,  0.44372382,  0.61097914,\n          0.76820221,  0.91281141,  1.04243228,  1.15493644,  1.24847657,\n          1.32151676,  1.37285767,  1.4016563 ,  1.40743977,  1.39011312,\n          1.34996085],\n        [-0.96572802, -0.81273567, -0.64639822, -0.46944694, -0.28478734,\n         -0.09545155,  0.09545155,  0.28478734,  0.46944694,  0.64639822,\n          0.81273567,  0.96572802,  1.10286314,  1.22188928,  1.32085203,\n          1.39812642,  1.45244362,  1.48291174,  1.48903049,  1.47069939,\n          1.42821945],\n        [-1.01864462, -0.85726913, -0.6818173 , -0.49517006, -0.30039213,\n         -0.10068177,  0.10068177,  0.30039213,  0.49517006,  0.6818173 ,\n          0.85726913,  1.01864462,  1.163294  ,  1.28884211,  1.39322748,\n          1.47473609,  1.53202958,  1.56416718,  1.5706212 ,  1.55128566,\n          1.50647805],\n        [-1.07156122, -0.90180259, -0.71723639, -0.52089318, -0.31599692,\n         -0.105912  ,  0.105912  ,  0.31599692,  0.52089318,  0.71723639,\n          0.90180259,  1.07156122,  1.22372485,  1.35579495,  1.46560294,\n          1.55134576,  1.61161553,  1.64542262,  1.65221191,  1.63187193,\n          1.58473666],\n        [-1.12447783, -0.94633605, -0.75265547, -0.5466163 , -0.3316017 ,\n         -0.11114222,  0.11114222,  0.3316017 ,  0.5466163 ,  0.75265547,\n          0.94633605,  1.12447783,  1.28415571,  1.42274779,  1.53797839,\n          1.62795543,  1.69120148,  1.72667805,  1.73380262,  1.7124582 ,\n          1.66299526],\n        [-1.17739443, -0.99086951, -0.78807455, -0.57233942, -0.34720649,\n         -0.11637244,  0.11637244,  0.34720649,  0.57233942,  0.78807455,\n          0.99086951,  1.17739443,  1.34458657,  1.48970063,  1.61035384,\n          1.70456509,  1.77078743,  1.80793349,  1.81539333,  1.79304446,\n          1.74125386],\n        [-1.23031104, -1.03540298, -0.82349363, -0.59806254, -0.36281127,\n         -0.12160266,  0.12160266,  0.36281127,  0.59806254,  0.82349363,\n          1.03540298,  1.23031104,  1.40501742,  1.55665346,  1.6827293 ,\n          1.78117476,  1.85037338,  1.88918893,  1.89698404,  1.87363073,\n          1.81951246],\n        [-1.28322764, -1.07993644, -0.85891271, -0.62378566, -0.37841606,\n         -0.12683288,  0.12683288,  0.37841606,  0.62378566,  0.85891271,\n          1.07993644,  1.28322764,  1.46544828,  1.6236063 ,  1.75510475,\n          1.85778443,  1.92995934,  1.97044437,  1.97857475,  1.954217  ,\n          1.89777106],\n        [-1.33614424, -1.1244699 , -0.89433179, -0.64950878, -0.39402085,\n         -0.13206311,  0.13206311,  0.39402085,  0.64950878,  0.89433179,\n          1.1244699 ,  1.33614424,  1.52587914,  1.69055914,  1.8274802 ,\n          1.93439409,  2.00954529,  2.0516998 ,  2.06016547,  2.03480327,\n          1.97602966],\n        [-1.38906085, -1.16900336, -0.92975087, -0.6752319 , -0.40962563,\n         -0.13729333,  0.13729333,  0.40962563,  0.6752319 ,  0.92975087,\n          1.16900336,  1.38906085,  1.58630999,  1.75751197,  1.89985566,\n          2.01100376,  2.08913124,  2.13295524,  2.14175618,  2.11538954,\n          2.05428826],\n        [-1.44197745, -1.21353682, -0.96516995, -0.70095502, -0.42523042,\n         -0.14252355,  0.14252355,  0.42523042,  0.70095502,  0.96516995,\n          1.21353682,  1.44197745,  1.64674085,  1.82446481,  1.97223111,\n          2.08761343,  2.16871719,  2.21421068,  2.22334689,  2.1959758 ,\n          2.13254686],\n        [-1.49489405, -1.25807028, -1.00058903, -0.72667814, -0.4408352 ,\n         -0.14775377,  0.14775377,  0.4408352 ,  0.72667814,  1.00058903,\n          1.25807028,  1.49489405,  1.70717171,  1.89141765,  2.04460656,\n          2.1642231 ,  2.24830314,  2.29546612,  2.3049376 ,  2.27656207,\n          2.21080546],\n        [-1.54781066, -1.30260374, -1.03600811, -0.75240126, -0.45643999,\n         -0.15298399,  0.15298399,  0.45643999,  0.75240126,  1.03600811,\n          1.30260374,  1.54781066,  1.76760256,  1.95837049,  2.11698202,\n          2.24083276,  2.3278891 ,  2.37672156,  2.38652831,  2.35714834,\n          2.28906406],\n        [-1.60072726, -1.34713721, -1.07142719, -0.77812438, -0.47204478,\n         -0.15821422,  0.15821422,  0.47204478,  0.77812438,  1.07142719,\n          1.34713721,  1.60072726,  1.82803342,  2.02532332,  2.18935747,\n          2.31744243,  2.40747505,  2.45797699,  2.46811902,  2.43773461,\n          2.36732266],\n        [-1.65364387, -1.39167067, -1.10684627, -0.80384749, -0.48764956,\n         -0.16344444,  0.16344444,  0.48764956,  0.80384749,  1.10684627,\n          1.39167067,  1.65364387,  1.88846428,  2.09227616,  2.26173292,\n          2.3940521 ,  2.487061  ,  2.53923243,  2.54970974,  2.51832088,\n          2.44558126],\n        [-1.70656047, -1.43620413, -1.14226535, -0.82957061, -0.50325435,\n         -0.16867466,  0.16867466,  0.50325435,  0.82957061,  1.14226535,\n          1.43620413,  1.70656047,  1.94889514,  2.159229  ,  2.33410838,\n          2.47066176,  2.56664695,  2.62048787,  2.63130045,  2.59890714,\n          2.52383986],\n        [-1.75947707, -1.48073759, -1.17768443, -0.85529373, -0.51885914,\n         -0.17390488,  0.17390488,  0.51885914,  0.85529373,  1.17768443,\n          1.48073759,  1.75947707,  2.00932599,  2.22618183,  2.40648383,\n          2.54727143,  2.6462329 ,  2.70174331,  2.71289116,  2.67949341,\n          2.60209846],\n        [-1.81239368, -1.52527105, -1.21310352, -0.88101685, -0.53446392,\n         -0.1791351 ,  0.1791351 ,  0.53446392,  0.88101685,  1.21310352,\n          1.52527105,  1.81239368,  2.06975685,  2.29313467,  2.47885929,\n          2.6238811 ,  2.72581886,  2.78299874,  2.79448187,  2.76007968,\n          2.68035706],\n        [-1.86531028, -1.56980451, -1.2485226 , -0.90673997, -0.55006871,\n         -0.18436533,  0.18436533,  0.55006871,  0.90673997,  1.2485226 ,\n          1.56980451,  1.86531028,  2.13018771,  2.36008751,  2.55123474,\n          2.70049077,  2.80540481,  2.86425418,  2.87607258,  2.84066595,\n          2.75861566],\n        [-1.91822688, -1.61433797, -1.28394168, -0.93246309, -0.56567349,\n         -0.18959555,  0.18959555,  0.56567349,  0.93246309,  1.28394168,\n          1.61433797,  1.91822688,  2.19061856,  2.42704035,  2.62361019,\n          2.77710043,  2.88499076,  2.94550962,  2.95766329,  2.92125222,\n          2.83687426],\n        [-1.97114349, -1.65887143, -1.31936076, -0.95818621, -0.58127828,\n         -0.19482577,  0.19482577,  0.58127828,  0.95818621,  1.31936076,\n          1.65887143,  1.97114349,  2.25104942,  2.49399318,  2.69598565,\n          2.8537101 ,  2.96457671,  3.02676506,  3.039254  ,  3.00183848,\n          2.91513286],\n        [-2.02406009, -1.7034049 , -1.35477984, -0.98390933, -0.59688307,\n         -0.20005599,  0.20005599,  0.59688307,  0.98390933,  1.35477984,\n          1.7034049 ,  2.02406009,  2.31148028,  2.56094602,  2.7683611 ,\n          2.93031977,  3.04416266,  3.1080205 ,  3.12084472,  3.08242475,\n          2.99339146],\n        [-2.0769767 , -1.74793836, -1.39019892, -1.00963245, -0.61248785,\n         -0.20528622,  0.20528622,  0.61248785,  1.00963245,  1.39019892,\n          1.74793836,  2.0769767 ,  2.37191113,  2.62789886,  2.84073655,\n          3.00692943,  3.12374862,  3.18927593,  3.20243543,  3.16301102,\n          3.07165006],\n        [-2.1298933 , -1.79247182, -1.425618  , -1.03535557, -0.62809264,\n         -0.21051644,  0.21051644,  0.62809264,  1.03535557,  1.425618  ,\n          1.79247182,  2.1298933 ,  2.43234199,  2.69485169,  2.91311201,\n          3.0835391 ,  3.20333457,  3.27053137,  3.28402614,  3.24359729,\n          3.14990866],\n        [-2.1828099 , -1.83700528, -1.46103708, -1.06107869, -0.64369742,\n         -0.21574666,  0.21574666,  0.64369742,  1.06107869,  1.46103708,\n          1.83700528,  2.1828099 ,  2.49277285,  2.76180453,  2.98548746,\n          3.16014877,  3.28292052,  3.35178681,  3.36561685,  3.32418356,\n          3.22816726],\n        [-2.23572651, -1.88153874, -1.49645616, -1.08680181, -0.65930221,\n         -0.22097688,  0.22097688,  0.65930221,  1.08680181,  1.49645616,\n          1.88153874,  2.23572651,  2.5532037 ,  2.82875737,  3.05786291,\n          3.23675844,  3.36250647,  3.43304225,  3.44720756,  3.40476982,\n          3.30642586],\n        [-2.28864311, -1.9260722 , -1.53187524, -1.11252493, -0.674907  ,\n         -0.2262071 ,  0.2262071 ,  0.674907  ,  1.11252493,  1.53187524,\n          1.9260722 ,  2.28864311,  2.61363456,  2.89571021,  3.13023837,\n          3.3133681 ,  3.44209242,  3.51429768,  3.52879827,  3.48535609,\n          3.38468446],\n        [-2.34155971, -1.97060566, -1.56729432, -1.13824805, -0.69051178,\n         -0.23143733,  0.23143733,  0.69051178,  1.13824805,  1.56729432,\n          1.97060566,  2.34155971,  2.67406542,  2.96266304,  3.20261382,\n          3.38997777,  3.52167838,  3.59555312,  3.61038899,  3.56594236,\n          3.46294306],\n        [-2.39447632, -2.01513912, -1.6027134 , -1.16397117, -0.70611657,\n         -0.23666755,  0.23666755,  0.70611657,  1.16397117,  1.6027134 ,\n          2.01513912,  2.39447632,  2.73449627,  3.02961588,  3.27498927,\n          3.46658744,  3.60126433,  3.67680856,  3.6919797 ,  3.64652863,\n          3.54120166],\n        [-2.44739292, -2.05967259, -1.63813248, -1.18969429, -0.72172135,\n         -0.24189777,  0.24189777,  0.72172135,  1.18969429,  1.63813248,\n          2.05967259,  2.44739292,  2.79492713,  3.09656872,  3.34736473,\n          3.5431971 ,  3.68085028,  3.758064  ,  3.77357041,  3.7271149 ,\n          3.61946026],\n        [-2.50030952, -2.10420605, -1.67355157, -1.21541741, -0.73732614,\n         -0.24712799,  0.24712799,  0.73732614,  1.21541741,  1.67355157,\n          2.10420605,  2.50030952,  2.85535799,  3.16352155,  3.41974018,\n          3.61980677,  3.76043623,  3.83931944,  3.85516112,  3.80770116,\n          3.69771886],\n        [-2.55322613, -2.14873951, -1.70897065, -1.24114053, -0.75293093,\n         -0.25235821,  0.25235821,  0.75293093,  1.24114053,  1.70897065,\n          2.14873951,  2.55322613,  2.91578885,  3.23047439,  3.49211564,\n          3.69641644,  3.84002218,  3.92057487,  3.93675183,  3.88828743,\n          3.77597746],\n        [-2.60614273, -2.19327297, -1.74438973, -1.26686365, -0.76853571,\n         -0.25758844,  0.25758844,  0.76853571,  1.26686365,  1.74438973,\n          2.19327297,  2.60614273,  2.9762197 ,  3.29742723,  3.56449109,\n          3.7730261 ,  3.91960814,  4.00183031,  4.01834254,  3.9688737 ,\n          3.85423606],\n        [-2.65905934, -2.23780643, -1.77980881, -1.29258677, -0.7841405 ,\n         -0.26281866,  0.26281866,  0.7841405 ,  1.29258677,  1.77980881,\n          2.23780643,  2.65905934,  3.03665056,  3.36438006,  3.63686654,\n          3.84963577,  3.99919409,  4.08308575,  4.09993325,  4.04945997,\n          3.93249466],\n        [-2.71197594, -2.28233989, -1.81522789, -1.31830989, -0.79974528,\n         -0.26804888,  0.26804888,  0.79974528,  1.31830989,  1.81522789,\n          2.28233989,  2.71197594,  3.09708142,  3.4313329 ,  3.709242  ,\n          3.92624544,  4.07878004,  4.16434119,  4.18152397,  4.13004624,\n          4.01075326],\n        [-2.76489254, -2.32687335, -1.85064697, -1.34403301, -0.81535007,\n         -0.2732791 ,  0.2732791 ,  0.81535007,  1.34403301,  1.85064697,\n          2.32687335,  2.76489254,  3.15751227,  3.49828574,  3.78161745,\n          4.00285511,  4.15836599,  4.24559662,  4.26311468,  4.2106325 ,\n          4.08901186],\n        [-2.81780915, -2.37140682, -1.88606605, -1.36975613, -0.83095486,\n         -0.27850932,  0.27850932,  0.83095486,  1.36975613,  1.88606605,\n          2.37140682,  2.81780915,  3.21794313,  3.56523858,  3.8539929 ,\n          4.07946477,  4.23795194,  4.32685206,  4.34470539,  4.29121877,\n          4.16727046],\n        [-2.87072575, -2.41594028, -1.92148513, -1.39547925, -0.84655964,\n         -0.28373955,  0.28373955,  0.84655964,  1.39547925,  1.92148513,\n          2.41594028,  2.87072575,  3.27837399,  3.63219141,  3.92636836,\n          4.15607444,  4.3175379 ,  4.4081075 ,  4.4262961 ,  4.37180504,\n          4.24552906],\n        [-2.92364235, -2.46047374, -1.95690421, -1.42120237, -0.86216443,\n         -0.28896977,  0.28896977,  0.86216443,  1.42120237,  1.95690421,\n          2.46047374,  2.92364235,  3.33880484,  3.69914425,  3.99874381,\n          4.23268411,  4.39712385,  4.48936294,  4.50788681,  4.45239131,\n          4.32378766],\n        [-2.97655896, -2.5050072 , -1.99232329, -1.44692549, -0.87776921,\n         -0.29419999,  0.29419999,  0.87776921,  1.44692549,  1.99232329,\n          2.5050072 ,  2.97655896,  3.3992357 ,  3.76609709,  4.07111926,\n          4.30929377,  4.4767098 ,  4.57061838,  4.58947752,  4.53297758,\n          4.40204626],\n        [-3.02947556, -2.54954066, -2.02774237, -1.47264861, -0.893374  ,\n         -0.29943021,  0.29943021,  0.893374  ,  1.47264861,  2.02774237,\n          2.54954066,  3.02947556,  3.45966656,  3.83304992,  4.14349472,\n          4.38590344,  4.55629575,  4.65187381,  4.67106823,  4.61356384,\n          4.48030486],\n        [-3.08239217, -2.59407412, -2.06316145, -1.49837173, -0.90897879,\n         -0.30466043,  0.30466043,  0.90897879,  1.49837173,  2.06316145,\n          2.59407412,  3.08239217,  3.52009741,  3.90000276,  4.21587017,\n          4.46251311,  4.6358817 ,  4.73312925,  4.75265895,  4.69415011,\n          4.55856346],\n        [-3.13530877, -2.63860758, -2.09858053, -1.52409485, -0.92458357,\n         -0.30989066,  0.30989066,  0.92458357,  1.52409485,  2.09858053,\n          2.63860758,  3.13530877,  3.58052827,  3.9669556 ,  4.28824562,\n          4.53912278,  4.71546766,  4.81438469,  4.83424966,  4.77473638,\n          4.63682206],\n        [-3.18822537, -2.68314104, -2.13399961, -1.54981797, -0.94018836,\n         -0.31512088,  0.31512088,  0.94018836,  1.54981797,  2.13399961,\n          2.68314104,  3.18822537,  3.64095913,  4.03390844,  4.36062108,\n          4.61573244,  4.79505361,  4.89564013,  4.91584037,  4.85532265,\n          4.71508066],\n        [-3.24114198, -2.72767451, -2.1694187 , -1.57554109, -0.95579314,\n         -0.3203511 ,  0.3203511 ,  0.95579314,  1.57554109,  2.1694187 ,\n          2.72767451,  3.24114198,  3.70138999,  4.10086127,  4.43299653,\n          4.69234211,  4.87463956,  4.97689556,  4.99743108,  4.93590892,\n          4.79333927]]]), [], \'DataArray_t\'], [\'CoordinateZ\', array([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n          0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]],\n\n       [[ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,\n          1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.]]]), [], \'DataArray_t\']], \'GridCoordinates_t\'], [\'ZoneBC\', None, [[\'ext2\', array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\',\n       \'e\', \'d\'], \n      dtype=\'|S1\'), [[\'FamilyName\', array([\'E\', \'x\', \'t\'], \n      dtype=\'|S1\'), [], \'FamilyName_t\'], [\'PointRange\', array([[ 1,  1, 50],\n       [50, 21,  2]], dtype=int32), [], \'IndexRange_t\']], \'BC_t\'], [\'wall2\', array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\',\n       \'e\', \'d\'], \n      dtype=\'|S1\'), [[\'FamilyName\', array([\'W\', \'a\', \'l\', \'l\'], \n      dtype=\'|S1\'), [], \'FamilyName_t\'], [\'PointRange\', array([[ 1,  1,  1],\n       [ 1, 21,  2]], dtype=int32), [], \'IndexRange_t\']], \'BC_t\']], \'ZoneBC_t\'], [\'ZoneGridConnectivity\', None, [[\'match2\', array([\'z\', \'o\', \'n\', \'e\', \'1\'], \n      dtype=\'|S1\'), [[\'PointRange\', array([[ 1,  1, 50],\n       [ 1,  1,  2]], dtype=int32), [], \'IndexRange_t\'], [\'PointRangeDonor\', array([[20,  1, 50],\n       [ 1, 20,  2]], dtype=int32), [], \'IndexRange_t\'], [\'Transform\', array([1, 2, 3], dtype=int32), [], \'""int[IndexDimension]""\']], \'GridConnectivity1to1_t\'], [\'match5\', array([\'z\', \'o\', \'n\', \'e\', \'3\'], \n      dtype=\'|S1\'), [[\'PointRange\', array([[21,  1, 50],\n       [ 1, 21,  2]], dtype=int32), [], \'IndexRange_t\'], [\'PointRangeDonor\', array([[ 1,  1, 50],\n       [ 1,  1,  2]], dtype=int32), [], \'IndexRange_t\'], [\'Transform\', array([1, 2, 3], dtype=int32), [], \'""int[IndexDimension]""\']], \'GridConnectivity1to1_t\']], \'ZoneGridConnectivity_t\'], [\'ZoneType\', array([\'S\', \'t\', \'r\', \'u\', \'c\', \'t\', \'u\', \'r\', \'e\', \'d\'], \n      dtype=\'|S1\'), [], \'ZoneType_t\']], \'Zone_t\'], [\'zone3\', array([[11, 10,  0],\n       [50, 49,  0],\n       [ 2,  1,  0]], dtype=int32), [[\'FlowSolution#EndOfRun\', None, [[\'Density\', None, [], \'UserDefinedData_t\'], [\'EnergyStagnationDensity\', None, [], \'UserDefinedData_t\'], [\'GridLocation\', array([\'C\', \'e\', \'l\', \'l\', \'C\', \'e\', \'n\', \'t\', \'e\', \'r\'], \n      dtype=\'|S1\'), [], \'GridLocation_t\'], [\'MomentumX\', None, [], \'UserDefinedData_t\'], [\'MomentumY\', None, [], \'UserDefinedData_t\'], [\'MomentumZ\', None, [], \'UserDefinedData_t\'], [\'TurbulentEnergyKineticDensity\', None, [], \'UserDefinedData_t\']], \'FlowSolution_t\'], [\'GridCoordinates\', None, [[\'CoordinateX\', array([[[ 0.28452759,  0.40478334,  0.51839257,  0.6234898 ,  0.71834935,\n          0.80141362,  0.8713187 ,  0.92691676,  0.96729486,  0.99179001,\n          1.        ],\n        [ 0.30775433,  0.43782688,  0.56071033,  0.67438693,  0.77699011,\n          0.86683514,  0.94244676,  1.00258343,  1.04625771,  1.07275246,\n          1.08163265],\n        [ 0.33098107,  0.47087042,  0.60302809,  0.72528406,  0.83563088,\n          0.93225666,  1.01357482,  1.07825011,  1.12522055,  1.15371491,\n          1.16326531],\n        [ 0.35420781,  0.50391396,  0.64534585,  0.77618118,  0.89427164,\n          0.99767818,  1.08470288,  1.15391678,  1.2041834 ,  1.23467736,\n          1.24489796],\n        [ 0.37743455,  0.5369575 ,  0.68766361,  0.82707831,  0.9529124 ,\n          1.0630997 ,  1.15583093,  1.22958345,  1.28314625,  1.31563981,\n          1.32653061],\n        [ 0.4006613 ,  0.57000103,  0.72998137,  0.87797544,  1.01155317,\n          1.12852122,  1.22695899,  1.30525013,  1.36210909,  1.39660226,\n          1.40816327],\n        [ 0.42388804,  0.60304457,  0.77229913,  0.92887256,  1.07019393,\n          1.19394274,  1.29808705,  1.3809168 ,  1.44107194,  1.47756471,\n          1.48979592],\n        [ 0.44711478,  0.63608811,  0.81461689,  0.97976969,  1.12883469,\n          1.25936426,  1.36921511,  1.45658348,  1.52003478,  1.55852716,\n          1.57142857],\n        [ 0.47034152,  0.66913165,  0.85693465,  1.03066682,  1.18747546,\n          1.32478578,  1.44034316,  1.53225015,  1.59899763,  1.63948961,\n          1.65306122],\n        [ 0.49356826,  0.70217519,  0.89925241,  1.08156394,  1.24611622,\n          1.3902073 ,  1.51147122,  1.60791682,  1.67796048,  1.72045206,\n          1.73469388],\n        [ 0.516795  ,  0.73521873,  0.94157018,  1.13246107,  1.30475698,\n          1.45562882,  1.58259928,  1.6835835 ,  1.75692332,  1.80141451,\n          1.81632653],\n        [ 0.54002175,  0.76826226,  0.98388794,  1.1833582 ,  1.36339775,\n          1.52105034,  1.65372734,  1.75925017,  1.83588617,  1.88237697,\n          1.89795918],\n        [ 0.56324849,  0.8013058 ,  1.0262057 ,  1.23425532,  1.42203851,\n          1.58647186,  1.72485539,  1.83491685,  1.91484901,  1.96333942,\n          1.97959184],\n        [ 0.58647523,  0.83434934,  1.06852346,  1.28515245,  1.48067927,\n          1.65189338,  1.79598345,  1.91058352,  1.99381186,  2.04430187,\n          2.06122449],\n        [ 0.60970197,  0.86739288,  1.11084122,  1.33604958,  1.53932004,\n          1.7173149 ,  1.86711151,  1.98625019,  2.07277471,  2.12526432,\n          2.14285714],\n        [ 0.63292871,  0.90043642,  1.15315898,  1.3869467 ,  1.5979608 ,\n          1.78273642,  1.93823957,  2.06191687,  2.15173755,  2.20622677,\n          2.2244898 ],\n        [ 0.65615545,  0.93347995,  1.19547674,  1.43784383,  1.65660156,\n          1.84815794,  2.00936762,  2.13758354,  2.2307004 ,  2.28718922,\n          2.30612245],\n        [ 0.6793822 ,  0.96652349,  1.2377945 ,  1.48874096,  1.71524233,\n          1.91357946,  2.08049568,  2.21325022,  2.30966324,  2.36815167,\n          2.3877551 ],\n        [ 0.70260894,  0.99956703,  1.28011226,  1.53963808,  1.77388309,\n          1.97900098,  2.15162374,  2.28891689,  2.38862609,  2.44911412,\n          2.46938776],\n        [ 0.72583568,  1.03261057,  1.32243002,  1.59053521,  1.83252385,\n          2.0444225 ,  2.2227518 ,  2.36458356,  2.46758894,  2.53007657,\n          2.55102041],\n        [ 0.74906242,  1.06565411,  1.36474778,  1.64143234,  1.89116462,\n          2.10984402,  2.29387985,  2.44025024,  2.54655178,  2.61103902,\n          2.63265306],\n        [ 0.77228916,  1.09869765,  1.40706554,  1.69232946,  1.94980538,\n          2.17526555,  2.36500791,  2.51591691,  2.62551463,  2.69200147,\n          2.71428571],\n        [ 0.79551591,  1.13174118,  1.4493833 ,  1.74322659,  2.00844614,\n          2.24068707,  2.43613597,  2.59158359,  2.70447747,  2.77296392,\n          2.79591837],\n        [ 0.81874265,  1.16478472,  1.49170106,  1.79412372,  2.06708691,\n          2.30610859,  2.50726403,  2.66725026,  2.78344032,  2.85392637,\n          2.87755102],\n        [ 0.84196939,  1.19782826,  1.53401882,  1.84502084,  2.12572767,\n          2.37153011,  2.57839208,  2.74291694,  2.86240317,  2.93488882,\n          2.95918367],\n        [ 0.86519613,  1.2308718 ,  1.57633659,  1.89591797,  2.18436843,\n          2.43695163,  2.64952014,  2.81858361,  2.94136601,  3.01585127,\n          3.04081633],\n        [ 0.88842287,  1.26391534,  1.61865435,  1.9468151 ,  2.2430092 ,\n          2.50237315,  2.7206482 ,  2.89425028,  3.02032886,  3.09681372,\n          3.12244898],\n        [ 0.91164961,  1.29695887,  1.66097211,  1.99771222,  2.30164996,\n          2.56779467,  2.79177626,  2.96991696,  3.0992917 ,  3.17777617,\n          3.20408163],\n        [ 0.93487636,  1.33000241,  1.70328987,  2.04860935,  2.36029072,\n          2.63321619,  2.86290431,  3.04558363,  3.17825455,  3.25873862,\n          3.28571429],\n        [ 0.9581031 ,  1.36304595,  1.74560763,  2.09950648,  2.41893149,\n          2.69863771,  2.93403237,  3.12125031,  3.2572174 ,  3.33970107,\n          3.36734694],\n        [ 0.98132984,  1.39608949,  1.78792539,  2.1504036 ,  2.47757225,\n          2.76405923,  3.00516043,  3.19691698,  3.33618024,  3.42066352,\n          3.44897959],\n        [ 1.00455658,  1.42913303,  1.83024315,  2.20130073,  2.53621301,\n          2.82948075,  3.07628849,  3.27258365,  3.41514309,  3.50162597,\n          3.53061224],\n        [ 1.02778332,  1.46217657,  1.87256091,  2.25219786,  2.59485377,\n          2.89490227,  3.14741654,  3.34825033,  3.49410593,  3.58258842,\n          3.6122449 ],\n        [ 1.05101006,  1.4952201 ,  1.91487867,  2.30309498,  2.65349454,\n          2.96032379,  3.2185446 ,  3.423917  ,  3.57306878,  3.66355087,\n          3.69387755],\n        [ 1.07423681,  1.52826364,  1.95719643,  2.35399211,  2.7121353 ,\n          3.02574531,  3.28967266,  3.49958368,  3.65203163,  3.74451332,\n          3.7755102 ],\n        [ 1.09746355,  1.56130718,  1.99951419,  2.40488924,  2.77077606,\n          3.09116683,  3.36080072,  3.57525035,  3.73099447,  3.82547577,\n          3.85714286],\n        [ 1.12069029,  1.59435072,  2.04183195,  2.45578636,  2.82941683,\n          3.15658835,  3.43192877,  3.65091702,  3.80995732,  3.90643822,\n          3.93877551],\n        [ 1.14391703,  1.62739426,  2.08414971,  2.50668349,  2.88805759,\n          3.22200987,  3.50305683,  3.7265837 ,  3.88892016,  3.98740067,\n          4.02040816],\n        [ 1.16714377,  1.6604378 ,  2.12646747,  2.55758062,  2.94669835,\n          3.28743139,  3.57418489,  3.80225037,  3.96788301,  4.06836312,\n          4.10204082],\n        [ 1.19037052,  1.69348133,  2.16878523,  2.60847774,  3.00533912,\n          3.35285291,  3.64531295,  3.87791705,  4.04684586,  4.14932557,\n          4.18367347],\n        [ 1.21359726,  1.72652487,  2.211103  ,  2.65937487,  3.06397988,\n          3.41827443,  3.716441  ,  3.95358372,  4.1258087 ,  4.23028802,\n          4.26530612],\n        [ 1.236824  ,  1.75956841,  2.25342076,  2.710272  ,  3.12262064,\n          3.48369595,  3.78756906,  4.02925039,  4.20477155,  4.31125047,\n          4.34693878],\n        [ 1.26005074,  1.79261195,  2.29573852,  2.76116912,  3.18126141,\n          3.54911747,  3.85869712,  4.10491707,  4.28373439,  4.39221292,\n          4.42857143],\n        [ 1.28327748,  1.82565549,  2.33805628,  2.81206625,  3.23990217,\n          3.61453899,  3.92982518,  4.18058374,  4.36269724,  4.47317537,\n          4.51020408],\n        [ 1.30650422,  1.85869902,  2.38037404,  2.86296338,  3.29854293,\n          3.67996051,  4.00095323,  4.25625042,  4.44166009,  4.55413782,\n          4.59183673],\n        [ 1.32973097,  1.89174256,  2.4226918 ,  2.9138605 ,  3.3571837 ,\n          3.74538203,  4.07208129,  4.33191709,  4.52062293,  4.63510027,\n          4.67346939],\n        [ 1.35295771,  1.9247861 ,  2.46500956,  2.96475763,  3.41582446,\n          3.81080355,  4.14320935,  4.40758376,  4.59958578,  4.71606272,\n          4.75510204],\n        [ 1.37618445,  1.95782964,  2.50732732,  3.01565476,  3.47446522,\n          3.87622507,  4.21433741,  4.48325044,  4.67854862,  4.79702517,\n          4.83673469],\n        [ 1.39941119,  1.99087318,  2.54964508,  3.06655188,  3.53310599,\n          3.94164659,  4.28546546,  4.55891711,  4.75751147,  4.87798762,\n          4.91836735],\n        [ 1.42263793,  2.02391672,  2.59196284,  3.11744901,  3.59174675,\n          4.00706811,  4.35659352,  4.63458379,  4.83647432,  4.95895007,\n          5.        ]],\n\n       [[ 0.28452759,  0.40478334,  0.51839257,  0.6234898 ,  0.71834935,\n          0.80141362,  0.8713187 ,  0.92691676,  0.96729486,  0.99179001,\n          1.        ],\n        [ 0.30775433,  0.43782688,  0.56071033,  0.67438693,  0.77699011,\n          0.86683514,  0.94244676,  1.00258343,  1.04625771,  1.07275246,\n          1.08163265],\n        [ 0.33098107,  0.47087042,  0.60302809,  0.72528406,  0.83563088,\n          0.93225666,  1.01357482,  1.07825011,  1.12522055,  1.15371491,\n          1.16326531],\n        [ 0.35420781,  0.50391396,  0.64534585,  0.77618118,  0.89427164,\n          0.99767818,  1.08470288,  1.15391678,  1.2041834 ,  1.23467736,\n          1.24489796],\n        [ 0.37743455,  0.5369575 ,  0.68766361,  0.82707831,  0.9529124 ,\n          1.0630997 ,  1.15583093,  1.22958345,  1.28314625,  1.31563981,\n          1.32653061],\n        [ 0.4006613 ,  0.57000103,  0.72998137,  0.87797544,  1.01155317,\n          1.12852122,  1.22695899,  1.30525013,  1.36210909,  1.39660226,\n          1.40816327],\n        [ 0.42388804,  0.60304457,  0.77229913,  0.92887256,  1.07019393,\n          1.19394274,  1.29808705,  1.3809168 ,  1.44107194,  1.47756471,\n          1.48979592],\n        [ 0.44711478,  0.63608811,  0.81461689,  0.97976969,  1.12883469,\n          1.25936426,  1.36921511,  1.45658348,  1.52003478,  1.55852716,\n          1.57142857],\n        [ 0.47034152,  0.66913165,  0.85693465,  1.03066682,  1.18747546,\n          1.32478578,  1.44034316,  1.53225015,  1.59899763,  1.63948961,\n          1.65306122],\n        [ 0.49356826,  0.70217519,  0.89925241,  1.08156394,  1.24611622,\n          1.3902073 ,  1.51147122,  1.60791682,  1.67796048,  1.72045206,\n          1.73469388],\n        [ 0.516795  ,  0.73521873,  0.94157018,  1.13246107,  1.30475698,\n          1.45562882,  1.58259928,  1.6835835 ,  1.75692332,  1.80141451,\n          1.81632653],\n        [ 0.54002175,  0.76826226,  0.98388794,  1.1833582 ,  1.36339775,\n          1.52105034,  1.65372734,  1.75925017,  1.83588617,  1.88237697,\n          1.89795918],\n        [ 0.56324849,  0.8013058 ,  1.0262057 ,  1.23425532,  1.42203851,\n          1.58647186,  1.72485539,  1.83491685,  1.91484901,  1.96333942,\n          1.97959184],\n        [ 0.58647523,  0.83434934,  1.06852346,  1.28515245,  1.48067927,\n          1.65189338,  1.79598345,  1.91058352,  1.99381186,  2.04430187,\n          2.06122449],\n        [ 0.60970197,  0.86739288,  1.11084122,  1.33604958,  1.53932004,\n          1.7173149 ,  1.86711151,  1.98625019,  2.07277471,  2.12526432,\n          2.14285714],\n        [ 0.63292871,  0.90043642,  1.15315898,  1.3869467 ,  1.5979608 ,\n          1.78273642,  1.93823957,  2.06191687,  2.15173755,  2.20622677,\n          2.2244898 ],\n        [ 0.65615545,  0.93347995,  1.19547674,  1.43784383,  1.65660156,\n          1.84815794,  2.00936762,  2.13758354,  2.2307004 ,  2.28718922,\n          2.30612245],\n        [ 0.6793822 ,  0.96652349,  1.2377945 ,  1.48874096,  1.71524233,\n          1.91357946,  2.08049568,  2.21325022,  2.30966324,  2.36815167,\n          2.3877551 ],\n        [ 0.70260894,  0.99956703,  1.28011226,  1.53963808,  1.77388309,\n          1.97900098,  2.15162374,  2.28891689,  2.38862609,  2.44911412,\n          2.46938776],\n        [ 0.72583568,  1.03261057,  1.32243002,  1.59053521,  1.83252385,\n          2.0444225 ,  2.2227518 ,  2.36458356,  2.46758894,  2.53007657,\n          2.55102041],\n        [ 0.74906242,  1.06565411,  1.36474778,  1.64143234,  1.89116462,\n          2.10984402,  2.29387985,  2.44025024,  2.54655178,  2.61103902,\n          2.63265306],\n        [ 0.77228916,  1.09869765,  1.40706554,  1.69232946,  1.94980538,\n          2.17526555,  2.36500791,  2.51591691,  2.62551463,  2.69200147,\n          2.71428571],\n        [ 0.79551591,  1.13174118,  1.4493833 ,  1.74322659,  2.00844614,\n          2.24068707,  2.43613597,  2.59158359,  2.70447747,  2.77296392,\n          2.79591837],\n        [ 0.81874265,  1.16478472,  1.49170106,  1.79412372,  2.06708691,\n          2.30610859,  2.50726403,  2.66725026,  2.78344032,  2.85392637,\n          2.87755102],\n        [ 0.84196939,  1.19782826,  1.53401882,  1.84502084,  2.12572767,\n          2.37153011,  2.57839208,  2.74291694,  2.86240317,  2.93488882,\n          2.95918367],\n        [ 0.86519613,  1.2308718 ,  1.57633659,  1.89591797,  2.18436843,\n          2.43695163,  2.64952014,  2.81858361,  2.94136601,  3.01585127,\n          3.04081633],\n        [ 0.88842287,  1.26391534,  1.61865435,  1.9468151 ,  2.2430092 ,\n          2.50237315,  2.7206482 ,  2.89425028,  3.02032886,  3.09681372,\n          3.12244898],\n        [ 0.91164961,  1.29695887,  1.66097211,  1.99771222,  2.30164996,\n          2.56779467,  2.79177626,  2.96991696,  3.0992917 ,  3.17777617,\n          3.20408163],\n        [ 0.93487636,  1.33000241,  1.70328987,  2.04860935,  2.36029072,\n          2.63321619,  2.86290431,  3.04558363,  3.17825455,  3.25873862,\n          3.28571429],\n        [ 0.9581031 ,  1.36304595,  1.74560763,  2.09950648,  2.41893149,\n          2.69863771,  2.93403237,  3.12125031,  3.2572174 ,  3.33970107,\n          3.36734694],\n        [ 0.98132984,  1.39608949,  1.78792539,  2.1504036 ,  2.47757225,\n          2.76405923,  3.00516043,  3.19691698,  3.33618024,  3.42066352,\n          3.44897959],\n        [ 1.00455658,  1.42913303,  1.83024315,  2.20130073,  2.53621301,\n          2.82948075,  3.07628849,  3.27258365,  3.41514309,  3.50162597,\n          3.53061224],\n        [ 1.02778332,  1.46217657,  1.87256091,  2.25219786,  2.59485377,\n          2.89490227,  3.14741654,  3.34825033,  3.49410593,  3.58258842,\n          3.6122449 ],\n        [ 1.05101006,  1.4952201 ,  1.91487867,  2.30309498,  2.65349454,\n          2.96032379,  3.2185446 ,  3.423917  ,  3.57306878,  3.66355087,\n          3.69387755],\n        [ 1.07423681,  1.52826364,  1.95719643,  2.35399211,  2.7121353 ,\n          3.02574531,  3.28967266,  3.49958368,  3.65203163,  3.74451332,\n          3.7755102 ],\n        [ 1.09746355,  1.56130718,  1.99951419,  2.40488924,  2.77077606,\n          3.09116683,  3.36080072,  3.57525035,  3.73099447,  3.82547577,\n          3.85714286],\n        [ 1.12069029,  1.59435072,  2.04183195,  2.45578636,  2.82941683,\n          3.15658835,  3.43192877,  3.65091702,  3.80995732,  3.90643822,\n          3.93877551],\n        [ 1.14391703,  1.62739426,  2.08414971,  2.50668349,  2.88805759,\n          3.22200987,  3.50305683,  3.7265837 ,  3.88892016,  3.98740067,\n          4.02040816],\n        [ 1.16714377,  1.6604378 ,  2.12646747,  2.55758062,  2.94669835,\n          3.28743139,  3.57418489,  3.80225037,  3.96788301,  4.06836312,\n          4.10204082],\n        [ 1.19037052,  1.69348133,  2.16878523,  2.60847774,  3.00533912,\n          3.35285291,  3.64531295,  3.87791705,  4.04684586,  4.14932557,\n          4.18367347],\n        [ 1.21359726,  1.72652487,  2.211103  ,  2.65937487,  3.06397988,\n          3.41827443,  3.716441  ,  3.95358372,  4.1258087 ,  4.23028802,\n          4.26530612],\n        [ 1.236824  ,  1.75956841,  2.25342076,  2.710272  ,  3.12262064,\n          3.48369595,  3.78756906,  4.02925039,  4.20477155,  4.31125047,\n          4.34693878],\n        [ 1.26005074,  1.79261195,  2.29573852,  2.76116912,  3.18126141,\n          3.54911747,  3.85869712,  4.10491707,  4.28373439,  4.39221292,\n          4.42857143],\n        [ 1.28327748,  1.82565549,  2.33805628,  2.81206625,  3.23990217,\n          3.61453899,  3.92982518,  4.18058374,  4.36269724,  4.47317537,\n          4.51020408],\n        [ 1.30650422,  1.85869902,  2.38037404,  2.86296338,  3.29854293,\n          3.67996051,  4.00095323,  4.25625042,  4.44166009,  4.55413782,\n          4.59183673],\n        [ 1.32973097,  1.89174256,  2.4226918 ,  2.9138605 ,  3.3571837 ,\n          3.74538203,  4.07208129,  4.33191709,  4.52062293,  4.63510027,\n          4.67346939],\n        [ 1.35295771,  1.9247861 ,  2.46500956,  2.96475763,  3.41582446,\n          3.81080355,  4.14320935,  4.40758376,  4.59958578,  4.71606272,\n          4.75510204],\n        [ 1.37618445,  1.95782964,  2.50732732,  3.01565476,  3.47446522,\n          3.87622507,  4.21433741,  4.48325044,  4.67854862,  4.79702517,\n          4.83673469],\n        [ 1.39941119,  1.99087318,  2.54964508,  3.06655188,  3.53310599,\n          3.94164659,  4.28546546,  4.55891711,  4.75751147,  4.87798762,\n          4.91836735],\n        [ 1.42263793,  2.02391672,  2.59196284,  3.11744901,  3.59174675,\n          4.00706811,  4.35659352,  4.63458379,  4.83647432,  4.95895007,\n          5.        ]]]), [], \'DataArray_t\'], [\'CoordinateY\', array([[[ 0.95866785,  0.91441262,  0.85514276,  0.78183148,  0.69568255,\n          0.59811053,  0.49071755,  0.375267  ,  0.25365458,  0.12787716,\n          0.        ],\n        [ 1.03692645,  0.98905855,  0.92495034,  0.84565446,  0.75247296,\n          0.64693588,  0.53077613,  0.40590105,  0.27436108,  0.13831611,\n          0.        ],\n        [ 1.11518505,  1.06370448,  0.99475791,  0.90947744,  0.80926338,\n          0.69576123,  0.5708347 ,  0.43653509,  0.29506758,  0.14875507,\n          0.        ],\n        [ 1.19344365,  1.13835041,  1.06456548,  0.97330042,  0.86605379,\n          0.74458658,  0.61089328,  0.46716913,  0.31577407,  0.15919402,\n          0.        ],\n        [ 1.27170225,  1.21299634,  1.13437305,  1.0371234 ,  0.9228442 ,\n          0.79341193,  0.65095185,  0.49780317,  0.33648057,  0.16963297,\n          0.        ],\n        [ 1.34996085,  1.28764227,  1.20418063,  1.10094637,  0.97963461,\n          0.84223728,  0.69101043,  0.52843721,  0.35718707,  0.18007192,\n          0.        ],\n        [ 1.42821945,  1.36228819,  1.2739882 ,  1.16476935,  1.03642502,\n          0.89106263,  0.73106901,  0.55907125,  0.37789356,  0.19051087,\n          0.        ],\n        [ 1.50647805,  1.43693412,  1.34379577,  1.22859233,  1.09321544,\n          0.93988798,  0.77112758,  0.58970529,  0.39860006,  0.20094983,\n          0.        ],\n        [ 1.58473666,  1.51158005,  1.41360334,  1.29241531,  1.15000585,\n          0.98871333,  0.81118616,  0.62033933,  0.41930656,  0.21138878,\n          0.        ],\n        [ 1.66299526,  1.58622598,  1.48341092,  1.35623829,  1.20679626,\n          1.03753868,  0.85124473,  0.65097338,  0.44001305,  0.22182773,\n          0.        ],\n        [ 1.74125386,  1.66087191,  1.55321849,  1.42006126,  1.26358667,\n          1.08636402,  0.89130331,  0.68160742,  0.46071955,  0.23226668,\n          0.        ],\n        [ 1.81951246,  1.73551784,  1.62302606,  1.48388424,  1.32037709,\n          1.13518937,  0.93136188,  0.71224146,  0.48142605,  0.24270563,\n          0.        ],\n        [ 1.89777106,  1.81016376,  1.69283363,  1.54770722,  1.3771675 ,\n          1.18401472,  0.97142046,  0.7428755 ,  0.50213254,  0.25314459,\n          0.        ],\n        [ 1.97602966,  1.88480969,  1.76264121,  1.6115302 ,  1.43395791,\n          1.23284007,  1.01147904,  0.77350954,  0.52283904,  0.26358354,\n          0.        ],\n        [ 2.05428826,  1.95945562,  1.83244878,  1.67535318,  1.49074832,\n          1.28166542,  1.05153761,  0.80414358,  0.54354554,  0.27402249,\n          0.        ],\n        [ 2.13254686,  2.03410155,  1.90225635,  1.73917615,  1.54753874,\n          1.33049077,  1.09159619,  0.83477762,  0.56425203,  0.28446144,\n          0.        ],\n        [ 2.21080546,  2.10874748,  1.97206392,  1.80299913,  1.60432915,\n          1.37931612,  1.13165476,  0.86541166,  0.58495853,  0.29490039,\n          0.        ],\n        [ 2.28906406,  2.18339341,  2.0418715 ,  1.86682211,  1.66111956,\n          1.42814147,  1.17171334,  0.89604571,  0.60566503,  0.30533935,\n          0.        ],\n        [ 2.36732266,  2.25803933,  2.11167907,  1.93064509,  1.71790997,\n          1.47696682,  1.21177191,  0.92667975,  0.62637152,  0.3157783 ,\n          0.        ],\n        [ 2.44558126,  2.33268526,  2.18148664,  1.99446807,  1.77470038,\n          1.52579217,  1.25183049,  0.95731379,  0.64707802,  0.32621725,\n          0.        ],\n        [ 2.52383986,  2.40733119,  2.25129421,  2.05829105,  1.8314908 ,\n          1.57461752,  1.29188907,  0.98794783,  0.66778452,  0.3366562 ,\n          0.        ],\n        [ 2.60209846,  2.48197712,  2.32110179,  2.12211402,  1.88828121,\n          1.62344287,  1.33194764,  1.01858187,  0.68849101,  0.34709515,\n          0.        ],\n        [ 2.68035706,  2.55662305,  2.39090936,  2.185937  ,  1.94507162,\n          1.67226822,  1.37200622,  1.04921591,  0.70919751,  0.35753411,\n          0.        ],\n        [ 2.75861566,  2.63126898,  2.46071693,  2.24975998,  2.00186203,\n          1.72109357,  1.41206479,  1.07984995,  0.72990401,  0.36797306,\n          0.        ],\n        [ 2.83687426,  2.7059149 ,  2.5305245 ,  2.31358296,  2.05865245,\n          1.76991892,  1.45212337,  1.11048399,  0.7506105 ,  0.37841201,\n          0.        ],\n        [ 2.91513286,  2.78056083,  2.60033208,  2.37740594,  2.11544286,\n          1.81874427,  1.49218194,  1.14111804,  0.771317  ,  0.38885096,\n          0.        ],\n        [ 2.99339146,  2.85520676,  2.67013965,  2.44122891,  2.17223327,\n          1.86756962,  1.53224052,  1.17175208,  0.7920235 ,  0.39928991,\n          0.        ],\n        [ 3.07165006,  2.92985269,  2.73994722,  2.50505189,  2.22902368,\n          1.91639497,  1.5722991 ,  1.20238612,  0.81272999,  0.40972886,\n          0.        ],\n        [ 3.14990866,  3.00449862,  2.80975479,  2.56887487,  2.28581409,\n          1.96522031,  1.61235767,  1.23302016,  0.83343649,  0.42016782,\n          0.        ],\n        [ 3.22816726,  3.07914455,  2.87956237,  2.63269785,  2.34260451,\n          2.01404566,  1.65241625,  1.2636542 ,  0.85414299,  0.43060677,\n          0.        ],\n        [ 3.30642586,  3.15379048,  2.94936994,  2.69652083,  2.39939492,\n          2.06287101,  1.69247482,  1.29428824,  0.87484948,  0.44104572,\n          0.        ],\n        [ 3.38468446,  3.2284364 ,  3.01917751,  2.76034381,  2.45618533,\n          2.11169636,  1.7325334 ,  1.32492228,  0.89555598,  0.45148467,\n          0.        ],\n        [ 3.46294306,  3.30308233,  3.08898508,  2.82416678,  2.51297574,\n          2.16052171,  1.77259197,  1.35555632,  0.91626248,  0.46192362,\n          0.        ],\n        [ 3.54120166,  3.37772826,  3.15879266,  2.88798976,  2.56976616,\n          2.20934706,  1.81265055,  1.38619036,  0.93696897,  0.47236258,\n          0.        ],\n        [ 3.61946026,  3.45237419,  3.22860023,  2.95181274,  2.62655657,\n          2.25817241,  1.85270912,  1.41682441,  0.95767547,  0.48280153,\n          0.        ],\n        [ 3.69771886,  3.52702012,  3.2984078 ,  3.01563572,  2.68334698,\n          2.30699776,  1.8927677 ,  1.44745845,  0.97838197,  0.49324048,\n          0.        ],\n        [ 3.77597746,  3.60166605,  3.36821537,  3.0794587 ,  2.74013739,\n          2.35582311,  1.93282628,  1.47809249,  0.99908846,  0.50367943,\n          0.        ],\n        [ 3.85423606,  3.67631197,  3.43802295,  3.14328167,  2.79692781,\n          2.40464846,  1.97288485,  1.50872653,  1.01979496,  0.51411838,\n          0.        ],\n        [ 3.93249466,  3.7509579 ,  3.50783052,  3.20710465,  2.85371822,\n          2.45347381,  2.01294343,  1.53936057,  1.04050146,  0.52455734,\n          0.        ],\n        [ 4.01075326,  3.82560383,  3.57763809,  3.27092763,  2.91050863,\n          2.50229916,  2.053002  ,  1.56999461,  1.06120795,  0.53499629,\n          0.        ],\n        [ 4.08901186,  3.90024976,  3.64744566,  3.33475061,  2.96729904,\n          2.55112451,  2.09306058,  1.60062865,  1.08191445,  0.54543524,\n          0.        ],\n        [ 4.16727046,  3.97489569,  3.71725324,  3.39857359,  3.02408945,\n          2.59994986,  2.13311915,  1.63126269,  1.10262095,  0.55587419,\n          0.        ],\n        [ 4.24552906,  4.04954162,  3.78706081,  3.46239657,  3.08087987,\n          2.64877521,  2.17317773,  1.66189674,  1.12332744,  0.56631314,\n          0.        ],\n        [ 4.32378766,  4.12418754,  3.85686838,  3.52621954,  3.13767028,\n          2.69760056,  2.21323631,  1.69253078,  1.14403394,  0.5767521 ,\n          0.        ],\n        [ 4.40204626,  4.19883347,  3.92667595,  3.59004252,  3.19446069,\n          2.74642591,  2.25329488,  1.72316482,  1.16474044,  0.58719105,\n          0.        ],\n        [ 4.48030486,  4.2734794 ,  3.99648353,  3.6538655 ,  3.2512511 ,\n          2.79525125,  2.29335346,  1.75379886,  1.18544693,  0.59763   ,\n          0.        ],\n        [ 4.55856346,  4.34812533,  4.0662911 ,  3.71768848,  3.30804152,\n          2.8440766 ,  2.33341203,  1.7844329 ,  1.20615343,  0.60806895,\n          0.        ],\n        [ 4.63682206,  4.42277126,  4.13609867,  3.78151146,  3.36483193,\n          2.89290195,  2.37347061,  1.81506694,  1.22685993,  0.6185079 ,\n          0.        ],\n        [ 4.71508066,  4.49741719,  4.20590624,  3.84533443,  3.42162234,\n          2.9417273 ,  2.41352918,  1.84570098,  1.24756642,  0.62894686,\n          0.        ],\n        [ 4.79333927,  4.57206312,  4.27571382,  3.90915741,  3.47841275,\n          2.99055265,  2.45358776,  1.87633502,  1.26827292,  0.63938581,\n          0.        ]],\n\n       [[ 0.95866785,  0.91441262,  0.85514276,  0.78183148,  0.69568255,\n          0.59811053,  0.49071755,  0.375267  ,  0.25365458,  0.12787716,\n          0.        ],\n        [ 1.03692645,  0.98905855,  0.92495034,  0.84565446,  0.75247296,\n          0.64693588,  0.53077613,  0.40590105,  0.27436108,  0.13831611,\n          0.        ],\n        [ 1.11518505,  1.06370448,  0.99475791,  0.90947744,  0.80926338,\n          0.69576123,  0.5708347 ,  0.43653509,  0.29506758,  0.14875507,\n          0.        ],\n        [ 1.19344365,  1.13835041,  1.06456548,  0.97330042,  0.86605379,\n          0.74458658,  0.61089328,  0.46716913,  0.31577407,  0.15919402,\n          0.        ],\n        [ 1.27170225,  1.21299634,  1.13437305,  1.0371234 ,  0.9228442 ,\n          0.79341193,  0.65095185,  0.49780317,  0.33648057,  0.16963297,\n          0.        ],\n        [ 1.34996085,  1.28764227,  1.20418063,  1.10094637,  0.97963461,\n          0.84223728,  0.69101043,  0.52843721,  0.35718707,  0.18007192,\n          0.        ],\n        [ 1.42821945,  1.36228819,  1.2739882 ,  1.16476935,  1.03642502,\n          0.89106263,  0.73106901,  0.55907125,  0.37789356,  0.19051087,\n          0.        ],\n        [ 1.50647805,  1.43693412,  1.34379577,  1.22859233,  1.09321544,\n          0.93988798,  0.77112758,  0.58970529,  0.39860006,  0.20094983,\n          0.        ],\n        [ 1.58473666,  1.51158005,  1.41360334,  1.29241531,  1.15000585,\n          0.98871333,  0.81118616,  0.62033933,  0.41930656,  0.21138878,\n          0.        ],\n        [ 1.66299526,  1.58622598,  1.48341092,  1.35623829,  1.20679626,\n          1.03753868,  0.85124473,  0.65097338,  0.44001305,  0.22182773,\n          0.        ],\n        [ 1.74125386,  1.66087191,  1.55321849,  1.42006126,  1.26358667,\n          1.08636402,  0.89130331,  0.68160742,  0.46071955,  0.23226668,\n          0.        ],\n        [ 1.81951246,  1.73551784,  1.62302606,  1.48388424,  1.32037709,\n          1.13518937,  0.93136188,  0.71224146,  0.48142605,  0.24270563,\n          0.        ],\n        [ 1.89777106,  1.81016376,  1.69283363,  1.54770722,  1.3771675 ,\n          1.18401472,  0.97142046,  0.7428755 ,  0.50213254,  0.25314459,\n          0.        ],\n        [ 1.97602966,  1.88480969,  1.76264121,  1.6115302 ,  1.43395791,\n          1.23284007,  1.01147904,  0.77350954,  0.52283904,  0.26358354,\n          0.        ],\n        [ 2.05428826,  1.95945562,  1.83244878,  1.67535318,  1.49074832,\n          1.28166542,  1.05153761,  0.80414358,  0.54354554,  0.27402249,\n          0.        ],\n        [ 2.13254686,  2.03410155,  1.90225635,  1.73917615,  1.54753874,\n          1.33049077,  1.09159619,  0.83477762,  0.56425203,  0.28446144,\n          0.        ],\n        [ 2.21080546,  2.10874748,  1.97206392,  1.80299913,  1.60432915,\n          1.37931612,  1.13165476,  0.86541166,  0.58495853,  0.29490039,\n          0.        ],\n        [ 2.28906406,  2.18339341,  2.0418715 ,  1.86682211,  1.66111956,\n          1.42814147,  1.17171334,  0.89604571,  0.60566503,  0.30533935,\n          0.        ],\n        [ 2.36732266,  2.25803933,  2.11167907,  1.93064509,  1.71790997,\n          1.47696682,  1.21177191,  0.92667975,  0.62637152,  0.3157783 ,\n          0.        ],\n        [ 2.44558126,  2.33268526,  2.18148664,  1.99446807,  1.77470038,\n          1.52579217,  1.25183049,  0.95731379,  0.64707802,  0.32621725,\n          0.        ],\n        [ 2.52383986,  2.40733119,  2.25129421,  2.05829105,  1.8314908 ,\n          1.57461752,  1.29188907,  0.98794783,  0.66778452,  0.3366562 ,\n          0.        ],\n        [ 2.60209846,  2.48197712,  2.32110179,  2.12211402,  1.88828121,\n          1.62344287,  1.33194764,  1.01858187,  0.68849101,  0.34709515,\n          0.        ],\n        [ 2.68035706,  2.55662305,  2.39090936,  2.185937  ,  1.94507162,\n          1.67226822,  1.37200622,  1.04921591,  0.70919751,  0.35753411,\n          0.        ],\n        [ 2.75861566,  2.63126898,  2.46071693,  2.24975998,  2.00186203,\n          1.72109357,  1.41206479,  1.07984995,  0.72990401,  0.36797306,\n          0.        ],\n        [ 2.83687426,  2.7059149 ,  2.5305245 ,  2.31358296,  2.05865245,\n          1.76991892,  1.45212337,  1.11048399,  0.7506105 ,  0.37841201,\n          0.        ],\n        [ 2.91513286,  2.78056083,  2.60033208,  2.37740594,  2.11544286,\n          1.81874427,  1.49218194,  1.14111804,  0.771317  ,  0.38885096,\n          0.        ],\n        [ 2.99339146,  2.85520676,  2.67013965,  2.44122891,  2.17223327,\n          1.86756962,  1.53224052,  1.17175208,  0.7920235 ,  0.39928991,\n          0.        ],\n        [ 3.07165006,  2.92985269,  2.73994722,  2.50505189,  2.22902368,\n          1.91639497,  1.5722991 ,  1.20238612,  0.81272999,  0.40972886,\n          0.        ],\n        [ 3.14990866,  3.00449862,  2.80975479,  2.56887487,  2.28581409,\n          1.96522031,  1.61235767,  1.23302016,  0.83343649,  0.42016782,\n          0.        ],\n        [ 3.22816726,  3.07914455,  2.87956237,  2.63269785,  2.34260451,\n          2.01404566,  1.65241625,  1.2636542 ,  0.85414299,  0.43060677,\n          0.        ],\n        [ 3.30642586,  3.15379048,  2.94936994,  2.69652083,  2.39939492,\n          2.06287101,  1.69247482,  1.29428824,  0.87484948,  0.44104572,\n          0.        ],\n        [ 3.38468446,  3.2284364 ,  3.01917751,  2.76034381,  2.45618533,\n          2.11169636,  1.7325334 ,  1.32492228,  0.89555598,  0.45148467,\n          0.        ],\n        [ 3.46294306,  3.30308233,  3.08898508,  2.82416678,  2.51297574,\n          2.16052171,  1.77259197,  1.35555632,  0.91626248,  0.46192362,\n          0.        ],\n        [ 3.54120166,  3.37772826,  3.15879266,  2.88798976,  2.56976616,\n          2.20934706,  1.81265055,  1.38619036,  0.93696897,  0.47236258,\n          0.        ],\n        [ 3.61946026,  3.45237419,  3.22860023,  2.95181274,  2.62655657,\n          2.25817241,  1.85270912,  1.41682441,  0.95767547,  0.48280153,\n          0.        ],\n        [ 3.69771886,  3.52702012,  3.2984078 ,  3.01563572,  2.68334698,\n          2.30699776,  1.8927677 ,  1.44745845,  0.97838197,  0.49324048,\n          0.        ],\n        [ 3.77597746,  3.60166605,  3.36821537,  3.0794587 ,  2.74013739,\n          2.35582311,  1.93282628,  1.47809249,  0.99908846,  0.50367943,\n          0.        ],\n        [ 3.85423606,  3.67631197,  3.43802295,  3.14328167,  2.79692781,\n          2.40464846,  1.97288485,  1.50872653,  1.01979496,  0.51411838,\n          0.        ],\n        [ 3.93249466,  3.7509579 ,  3.50783052,  3.20710465,  2.85371822,\n          2.45347381,  2.01294343,  1.53936057,  1.04050146,  0.52455734,\n          0.        ],\n        [ 4.01075326,  3.82560383,  3.57763809,  3.27092763,  2.91050863,\n          2.50229916,  2.053002  ,  1.56999461,  1.06120795,  0.53499629,\n          0.        ],\n        [ 4.08901186,  3.90024976,  3.64744566,  3.33475061,  2.96729904,\n          2.55112451,  2.09306058,  1.60062865,  1.08191445,  0.54543524,\n          0.        ],\n        [ 4.16727046,  3.97489569,  3.71725324,  3.39857359,  3.02408945,\n          2.59994986,  2.13311915,  1.63126269,  1.10262095,  0.55587419,\n          0.        ],\n        [ 4.24552906,  4.04954162,  3.78706081,  3.46239657,  3.08087987,\n          2.64877521,  2.17317773,  1.66189674,  1.12332744,  0.56631314,\n          0.        ],\n        [ 4.32378766,  4.12418754,  3.85686838,  3.52621954,  3.13767028,\n          2.69760056,  2.21323631,  1.69253078,  1.14403394,  0.5767521 ,\n          0.        ],\n        [ 4.40204626,  4.19883347,  3.92667595,  3.59004252,  3.19446069,\n          2.74642591,  2.25329488,  1.72316482,  1.16474044,  0.58719105,\n          0.        ],\n        [ 4.48030486,  4.2734794 ,  3.99648353,  3.6538655 ,  3.2512511 ,\n          2.79525125,  2.29335346,  1.75379886,  1.18544693,  0.59763   ,\n          0.        ],\n        [ 4.55856346,  4.34812533,  4.0662911 ,  3.71768848,  3.30804152,\n          2.8440766 ,  2.33341203,  1.7844329 ,  1.20615343,  0.60806895,\n          0.        ],\n        [ 4.63682206,  4.42277126,  4.13609867,  3.78151146,  3.36483193,\n          2.89290195,  2.37347061,  1.81506694,  1.22685993,  0.6185079 ,\n          0.        ],\n        [ 4.71508066,  4.49741719,  4.20590624,  3.84533443,  3.42162234,\n          2.9417273 ,  2.41352918,  1.84570098,  1.24756642,  0.62894686,\n          0.        ],\n        [ 4.79333927,  4.57206312,  4.27571382,  3.90915741,  3.47841275,\n          2.99055265,  2.45358776,  1.87633502,  1.26827292,  0.63938581,\n          0.        ]]]), [], \'DataArray_t\'], [\'CoordinateZ\', array([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n        [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]],\n\n       [[ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.],\n        [ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.]]]), [], \'DataArray_t\']], \'GridCoordinates_t\'], [\'ZoneBC\', None, [[\'ext3\', array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\',\n       \'e\', \'d\'], \n      dtype=\'|S1\'), [[\'FamilyName\', array([\'E\', \'x\', \'t\'], \n      dtype=\'|S1\'), [], \'FamilyName_t\'], [\'PointRange\', array([[ 1,  1, 50],\n       [50, 11,  2]], dtype=int32), [], \'IndexRange_t\']], \'BC_t\'], [\'wall3\', array([\'F\', \'a\', \'m\', \'i\', \'l\', \'y\', \'S\', \'p\', \'e\', \'c\', \'i\', \'f\', \'i\',\n       \'e\', \'d\'], \n      dtype=\'|S1\'), [[\'FamilyName\', array([\'W\', \'a\', \'l\', \'l\'], \n      dtype=\'|S1\'), [], \'FamilyName_t\'], [\'PointRange\', array([[ 1,  1,  1],\n       [ 1, 11,  2]], dtype=int32), [], \'IndexRange_t\']], \'BC_t\']], \'ZoneBC_t\'], [\'ZoneGridConnectivity\', None, [[\'match3\', array([\'z\', \'o\', \'n\', \'e\', \'2\'], \n      dtype=\'|S1\'), [[\'PointRange\', array([[ 1,  1, 50],\n       [ 1,  1,  2]], dtype=int32), [], \'IndexRange_t\'], [\'PointRangeDonor\', array([[21,  1, 50],\n       [ 1, 21,  2]], dtype=int32), [], \'IndexRange_t\'], [\'Transform\', array([1, 2, 3], dtype=int32), [], \'""int[IndexDimension]""\']], \'GridConnectivity1to1_t\'], [\'match6\', array([\'z\', \'o\', \'n\', \'e\', \'1\'], \n      dtype=\'|S1\'), [[\'PointRange\', array([[11,  1, 50],\n       [ 1, 11,  2]], dtype=int32), [], \'IndexRange_t\'], [\'PointRangeDonor\', array([[ 1,  1, 50],\n       [ 1,  1,  2]], dtype=int32), [], \'IndexRange_t\'], [\'Transform\', array([1, 2, 3], dtype=int32), [], \'""int[IndexDimension]""\']], \'GridConnectivity1to1_t\']], \'ZoneGridConnectivity_t\'], [\'ZoneType\', array([\'S\', \'t\', \'r\', \'u\', \'c\', \'t\', \'u\', \'r\', \'e\', \'d\'], \n      dtype=\'|S1\'), [], \'ZoneType_t\']], \'Zone_t\']], \'CGNSBase_t\']], \'CGNSTree_t\']\nlinks=[]\n'"
