file_path,api_count,code
Rdbms_sqlite3.py,0,"b'#\xe7\x94\xa8sqlite3\xe8\xaf\xbb\xe5\x8f\x96\xe6\x95\xb0\xe6\x8d\xae\nimport sqlite3\ncon=sqlite3.connect(""iris.db"")\n\ncursor=con.execute(""SELECT * FROM iris WHERE Species = \'virginica\'"")\nfor row in cursor:\n\tprint(rwo[0],rwo[1],rwo[2],rwo[3],rwo[4])'"
Read_csv_by_pandas.py,0,"b'#\xe7\x94\xa8pandas\xe8\xaf\xbb\xe5\x8f\x96\xe6\x95\xb0\xe6\x8d\xae\nimport pandas as pd\n\niris_data=pd.read_csv(""iris.csv"")\nprint(iris_data.head(5))'"
Read_csv_by_python.py,0,"b'#\xe7\x94\xa8\xe5\x8e\x9f\xe7\x94\x9fPython\xe8\xaf\xbb\xe5\x8f\x96\xe6\x95\xb0\xe6\x8d\xae\nfp=open(""iris.csv"",""r"")\nnext(fp)\niris_data=[]\nfor line in fp:\n\trecord = line.strip().split(""."")\n\tiris_data.append(record)\nprint(iris_data[:5])'"
Read_data_by_SQLAlchemy.py,0,"b'#\xe7\x94\xa8sqlalchemy \xe8\xaf\xbb\xe5\x8f\x96\xe6\x95\xb0\xe6\x8d\xae\nimport sqlalchemy\n\nengine=sqlalchemy.create_engine(""sqlite:///iris.db"")\n\niris_data=pd.read_sql(""SELECT * FROM iris"",engine)\nprint(iris_data)'"
group_mean_bar_plt.py,0,"b'#\xe6\x9d\xa1\xe7\x8a\xb6\xe5\x9b\xbe\xe6\x98\xbe\xe7\xa4\xba\xe7\xbb\x84\xe5\xb9\xb3\xe5\x9d\x87\xe6\x95\xb0\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xbb\x8e\xe5\x9b\xbe\xe4\xb8\x8a\xe7\x9c\x8b\xe5\x87\xba\xe4\xb8\x8d\xe5\x90\x8c\xe7\x9a\x84\xe8\x8a\xb1\xe7\xa7\x8d\xe7\xb1\xbb\xe4\xb8\xad\xef\xbc\x8c\xe4\xbb\x96\xe4\xbb\xac\xe7\x9a\x84\xe5\xb1\x9e\xe6\x80\xa7\xe7\x89\xb9\xe7\x82\xb9\xe3\x80\x82\nimport pandas as pd\nfrom matplotlib import pyplot as plt\n\niris_data=pd.read_csv(""iris.csv"")\n#\xe8\xaf\xbb\xe5\x8f\x96\xe6\x95\xb0\xe6\x8d\xae\ngrouped_data=iris_data.groupby(""species"")\n#\xe7\x94\xa8\xe4\xb8\x8d\xe5\x90\x8c\xe7\x9a\x84\xe8\x8a\xb1\xe7\x9a\x84\xe7\xb1\xbb\xe5\x88\xab\xe5\x88\x86\xe6\x88\x90\xe4\xb8\x8d\xe5\x90\x8c\xe7\x9a\x84\xe7\xbb\x84\xef\xbc\x8c\xe6\xad\xa4\xe6\x95\xb0\xe6\x8d\xae\xe4\xb8\xba\xe4\xb8\x89\xe7\xbb\x84\ngroup_mean=grouped_data.mean()\n#\xe6\xb1\x82\xe7\xbb\x84\xe5\xb9\xb3\xe5\x9d\x87\xe5\x80\xbc\ngroup_mean.plot(kind=""bar"")\nplt.legend(loc=""upper center"",bbox_to_anchor=(0.5,1.2),ncol=2)\nplt.show()\n#\xe7\x94\xbb\xe5\x9b\xbe'"
kde_plt.py,0,"b'#\xe7\x94\xbbkde\xe5\x9b\xbe\nimport pandas as pd\nfrom matplotlib import pyplot as plt\n\niris_data=pd.read_csv(""iris.csv"")\niris_data.plot(kind=""kde"",subplots=True,figsize=(10,6))\nplt.show()'"
mean_and_bar_plt.py,0,"b'#\xe5\x9b\x9b\xe7\xa7\x8d\xe5\xb1\x9e\xe6\x80\xa7\xe7\x89\xb9\xe5\xbe\x81\xe7\x9a\x84\xe5\xb9\xb3\xe5\x9d\x87\xe5\x80\xbc \xe6\x9d\xa1\xe7\x8a\xb6\xe5\x9b\xbe\nimport pandas as pd\nfrom matplotlib import pyplot as plt\n\niris_data=pd.read_csv(""iris.csv"")\niris_mean=iris_data.mean()\niris_mean.plot(kind=""bar"",rot=45)\nplt.show()'"
numpy_test_random.py,1,"b'#\xe7\x94\xa8numpy\xe5\x88\x9b\xe5\xbb\xba\xe9\x9a\x8f\xe6\x9c\xba\xe5\x80\xbc\xef\xbc\x8c\xe6\xb5\x8b\xe8\xaf\x95\xef\xbc\x8c\xe4\xb8\x8e\xe6\x95\xb0\xe6\x8d\xae\xe9\xa1\xb9\xe7\x9b\xae\xe6\x97\xa0\xe5\x85\xb3\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\nn,m,s=40,160,10\ndata=np.random.random(n)*s+m\n#print(data)\nc,x,_=plt.hist(data,10)\nprint(c)\nprint(x)\nplt.show()\n'"
plt_00.py,0,"b'#\xe7\xbb\x98\xe5\x88\xb6\xe6\xa0\xb7\xe6\x9c\xac\xe5\x9b\xbe\nimport pandas as pd\nfrom matplotlib import pyplot as plt\n\niris_data=pd.read_csv(""iris.csv"")\nfor name,symbol in zip((""setosa"",""versicolor"",""virginica""),(""o"",""s"",""*"")):\n\tdata=iris_data[iris_data[""species""]==name]\nplt.plot(data[""petal_length""],data[""petal_width""],symbol)\nplt.show()\n'"
sklearn_cross_validation.py,0,"b'#\xe7\x94\xa8sklearn\xe7\x9a\x84\xe4\xba\xa4\xe5\x8f\x89\xe9\xaa\x8c\xe8\xaf\x81 \xe8\xae\xad\xe7\xbb\x83\xe6\x95\xb0\xe6\x8d\xae\xe9\x9b\x86\nimport pandas as pd\nfrom sklearn import cross_validation\nfrom sklearn.neighbors import KNeighborsClassifier\n\nx=pd.read_csv(""iris.csv"")\ny=x.pop(""species"")\nx_train,x_test,y_train,y_test=cross_validation.train_test_split(x.values,y.values,test_size=0.1)\n\nscores=cross_validation.cross_val_score(KNeighborsClassifier(3),x,y,cv=5)\nmean_score=scores.mean()\nprint(mean_score)'"
sklearn_knn.py,0,"b'#\xe7\x94\xa8sklearn\xe7\x9a\x84KNN \xe8\xae\xad\xe7\xbb\x83\xe6\x95\xb0\xe6\x8d\xae\xe9\x9b\x86\nimport pandas as pd\nfrom sklearn import cross_validation\nfrom sklearn.neighbors import KNeighborsClassifier\n\nx=pd.read_csv(""iris.csv"")\ny=x.pop(""species"")\nx_train,x_test,y_train,y_test=cross_validation.train_test_split(x.values,y.values,test_size=0.1)\n\nknn=KNeighborsClassifier(3).fit(x_train,y_train)\nfor y_pred,y_true in zip(knn.predict(x_test),y_test):\n\tprint(y_pred,y_true)\nprint(knn.score(x_test,y_test))\n'"
sklearn_logistic_regression.py,0,"b'#\xe7\x94\xa8sklearn\xe7\x9a\x84\xe9\x80\xbb\xe8\xbe\x91\xe6\x96\xaf\xe8\x92\x82\xe5\x9b\x9e\xe5\xbd\x92 \xe8\xae\xad\xe7\xbb\x83\xe6\x95\xb0\xe6\x8d\xae\xe9\x9b\x86\nimport pandas as pd\nfrom sklearn import cross_validation\nfrom sklearn.linear_model import LogisticRegression\n\nx=pd.read_csv(""iris.csv"")\ny=x.pop(""species"")\nx_train,x_test,y_train,y_test=cross_validation.train_test_split(x.values,y.values,test_size=0.1)\n\nlr=LogisticRegression(multi_class=""multinomial"",solver=""lbfgs"").fit(x_train,y_train)\nprint(lr.predict_proba(x_test))'"
sklearn_naive_bayes.py,0,"b'#\xe7\x94\xa8sklearn\xe7\x9a\x84\xe6\x9c\xb4\xe7\xb4\xa0\xe8\xb4\x9d\xe5\x8f\xb6\xe6\x96\xaf \xe8\xae\xad\xe7\xbb\x83\xe6\x95\xb0\xe6\x8d\xae\xe9\x9b\x86\nimport pandas as pd\nfrom sklearn import cross_validation\nfrom sklearn.naive_bayes import GaussianNB\n\nx=pd.read_csv(""iris.csv"")\ny=x.pop(""species"")\nx_train,x_test,y_train,y_test=cross_validation.train_test_split(x.values,y.values,test_size=0.1)\n\ngnb=GaussianNB().fit(x_train,y_train)\nprint(gnb.predict_proba(x_test))\nprint(gnb.class_prior_)'"
sklearn_svm.py,0,"b'import pandas as pd \nfrom sklearn import svm,metrics,cross_validation\n\niris_data=pd.read_csv(""iris.csv"")\n\nx=iris_data[[""sepal_length"",""sepal_width"",""petal_length"",""petal_width""]]\ny=iris_data[""species""]\n\nx_train,x_test,y_train,y_test=cross_validation.train_test_split(x.values,y.values,test_size=0.1)\nclf=svm.SVC()\nclf.fit(x_train,y_train)\npre=clf.predict(x_test)\n\nscore=metrics.accuracy_score(y_test,pre)\nprint(score)\n'"
three_alg_rank.py,0,"b'#\xe7\x94\xa8sklearn\xe7\x9a\x84\xe4\xba\xa4\xe5\x8f\x89\xe9\xaa\x8c\xe8\xaf\x81 KNN \xe9\x80\xbb\xe8\xbe\x91\xe8\x92\x82\xe6\x96\xaf\xe5\x9b\x9e\xe5\xbd\x92 \xe4\xb8\x89\xe7\xa7\x8d\xe6\x96\xb9\xe5\xbc\x8f \xe8\xae\xad\xe7\xbb\x83\xe6\x95\xb0\xe6\x8d\xae\xe9\x9b\x86 \xe5\xb9\xb6\xe5\xaf\xb9\xe6\xaf\x94\nimport pandas as pd\nfrom sklearn import cross_validation\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression\n\nx=pd.read_csv(""iris.csv"")\ny=x.pop(""species"")\nx_train,x_test,y_train,y_test=cross_validation.train_test_split(x.values,y.values,test_size=0.1)\n\nmodels={\n\t""knn"":KNeighborsClassifier(6),\n\t""gnb"":GaussianNB(),\n\t""lr"":LogisticRegression(multi_class=""multinomial"",solver=""lbfgs"")\n}\n\nfor name,model in models.items():\n\tscore=cross_validation.cross_val_score(model,x,y,cv=5).mean()\n\tprint(name,score)'"
