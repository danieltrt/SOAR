file_path,api_count,code
bar_graph.py,0,"b'import matplotlib.pyplot as pt\nimport numpy as np\n\ndivisions = [""Div-A"", ""Div-B"", ""Div-C"", ""Div-D"", ""Div-E""]\ndivision_avg_marks = [70, 82, 73, 65, 68]\npt.bar(divisions, division_avg_marks, color=""green"")\npt.title(""Bar Graph"")\npt.xlabel(""Divisions"")\npt.ylabel(""Marks"")\npt.show()\n'"
histogram_demo.py,1,"b'import numpy as np\nimport matplotlib.pyplot as pt\n\ndata = np.random.randn(1000)\npt.title(""Histogram Title"")\npt.xlabel(""Random Data"")\npt.ylabel(""Frequency"")\npt.hist(data, 10)\npt.show()\n'"
horizontal_stack_bar_graph.py,1,"b'import numpy as np\nimport matplotlib.pyplot as pt\n\ndivision = [""Div-A"", ""Div-B"", ""Div-C"", ""Div-D"", ""Div-E""]\ndivision_marks = [35, 40, 95, 50, 60]\nboy_marks = [55, 65, 75, 85, 95]\n\nindex = np.arange(5)\nwidth = .30\n\nfig, ax = pt.subplots(nrows=1, ncols=1)\n\nax.bar(index, division_marks, width, color=""green"", label=""Division Marks"")\n# ax.bar(index, boy_marks, width, color=""blue"", label=""Boy Marks"", bottom=division_marks)\nax.bar(index + width, boy_marks, width, color=""blue"", label=""Boy Marks"")\n\npt.title(""Comparison Bar"")\npt.xlabel(""Divisions"")\npt.ylabel(""Marks"")\npt.xticks(index + width / 2, division)\npt.legend(loc=""best"")\npt.show()\n'"
main.py,1,"b'import numpy as np\nimport matplotlib.pyplot as pt\n\nx = np.arange(1, 5)\ny = x ** 3\n\npt.figure(figsize=(5, 5))\npt.plot([1, 2, 3, 4], [1, 4, 9, 16], ""go"", x, y, \'r^\')\n# pt.plot([1, 2, 3, 4], [1, 4, 9, 16], ""go"")\npt.title(""Sample Graph Plot"")\npt.xlabel(\'X Label\')\npt.ylabel(\'Y Label\')\npt.show()\n'"
pie_chart.py,0,"b'import matplotlib.pyplot as pt\nimport numpy as np\n\nfirms = [""Firm A"", ""Firm B"", ""Firm C"", ""Firm D"", ""Firm E""]\nmarket_share = [20, 25, 10, 20, 50]\nExplode = [0, 0, 0, 0, 0]\n\npt.pie(market_share, explode=Explode, labels=firms, shadow=False, startangle=45,\n       colors=[""green"", ""blue"", ""red"", ""yellow"", ""pink""])\npt.axis(\'equal\')\npt.legend(title=""Firms"")\npt.show()\n'"
scatter_3d_graph.py,2,"b'import mpl_toolkits.mplot3d as pt3d\nimport matplotlib.pyplot as pt\nimport numpy as np\n\nheight = np.array([167, 170, 149, 165, 155, 180, 166, 146, 159, 185, 145, 168, 172, 181, 169])\nweight = np.array([86, 74, 66, 78, 68, 79, 90, 73, 70, 88, 66, 84, 67, 84, 77])\naxes = pt.axes(projection=""3d"")\n# axes.plot3D(height, weight)\naxes.scatter3D(height,weight)\naxes.set_xlabel(""Height"")\naxes.set_ylabel(""Weight"")\npt.show()\n'"
scatter_graph.py,2,"b'import matplotlib.pyplot as pt\nimport numpy as np\n\nheight = np.array([167, 170, 149, 165, 155, 180, 166, 146, 159, 185, 145, 168, 172, 181, 169])\nweight = np.array([86, 74, 66, 78, 68, 79, 90, 73, 70, 88, 66, 84, 67, 84, 77])\npt.xlim(140, 200)\npt.ylim(60, 100)\npt.scatter(height, weight)\npt.title(""Scatter Plot"")\npt.xlabel(""Height"")\npt.ylabel(""Weight"")\npt.show()\n'"
sub_plot.py,1,"b'import matplotlib.pyplot as pt\nimport numpy as np\n\nx = np.arange(1, 5)\ny = x ** 3\n\n# Row wise plot\n# pt.subplot(1, 2, 1)\n# pt.plot([1, 2, 3, 4], [1, 4, 9, 16], ""go"")\n# pt.title(""First Plot"")\n#\n# pt.subplot(1, 2, 2)\n# pt.plot(x, y, ""r^"")\n# pt.title(""Second Plot"")\n#\n# pt.suptitle(""My Sub Plots"")\n# pt.show()\n\n\n# Column wise plot\npt.subplot(3, 1, 1)\npt.plot([1, 2, 3, 4], [1, 4, 9, 16], ""go"")\npt.title(""First Plot"")\n\npt.subplot(3, 1, 2)\npt.plot(x, y, ""r^"")\npt.title(""Second Plot"")\n\npt.suptitle(""My Sub Plots"")\npt.show()\n'"
sub_plots.py,1,"b'import matplotlib.pyplot as pt\nimport numpy as np\n\nx = np.arange(1, 5)\ny = x ** 3\n\nfig, ax = pt.subplots(nrows=2, ncols=2, figsize=(6, 6))\nax[0, 1].plot([1, 2, 3, 4], [1, 4, 9, 16], ""go"")\nax[1, 0].plot(x, y, ""r^"")\nax[0, 1].set_title(""Square"")\nax[1, 0].set_title(""Cube"")\npt.show()\n'"
