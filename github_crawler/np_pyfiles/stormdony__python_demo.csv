file_path,api_count,code
GaokaoLine/gao_kao_score.py,0,"b'from multiprocessing.pool import Pool\n\nimport requests\nfrom bs4 import BeautifulSoup\nimport pymongo\nimport re\n\nclient = pymongo.MongoClient(\'localhost\', 27017)\ngaokao = client[\'gaokao\']\nprovice_href = gaokao[\'provice_href\']\nscore_detail = gaokao[\'score_detail\']\n\n\n# \xe8\x8e\xb7\xe5\x8f\x96\xe7\x9c\x81\xe4\xbb\xbd\xe5\x8f\x8a\xe9\x93\xbe\xe6\x8e\xa5\npro_link = []\ndef get_provice(url):\n    web_data = requests.get(url, headers=header)\n    soup = BeautifulSoup(web_data.content, \'lxml\')\n    provice_link = soup.select(\'.area_box > a\')\n    for link in provice_link:\n        href = link[\'href\']\n        provice = link.select(\'span\')[0].text\n        data = {\n            \'href\': href,\n            \'provice\': provice\n        }\n        provice_href.insert_one(data)\n        pro_link.append(href)\n    print(\'OK\')\n\n\n# \xe8\x8e\xb7\xe5\x8f\x96\xe5\x88\x86\xe6\x95\xb0\xe7\xba\xbf\ndef get_score(url):\n    web_data = requests.get(url, headers=header)\n    soup = BeautifulSoup(web_data.content, \'lxml\')\n    # \xe8\x8e\xb7\xe5\x8f\x96\xe7\x9c\x81\xe4\xbb\xbd\xe4\xbf\xa1\xe6\x81\xaf\n    provice = soup.select(\'.col-nav span\')[0].text[0:-5]\n    # \xe8\x8e\xb7\xe5\x8f\x96\xe6\x96\x87\xe7\x90\x86\xe7\xa7\x91\n    categories = soup.select(\'h3.ft14\')\n    category_list = []\n    for item in categories:\n        category_list.append(item.text.strip().replace(\' \', \'\'))\n    # \xe8\x8e\xb7\xe5\x8f\x96\xe5\x88\x86\xe6\x95\xb0\n    tables = soup.select(\'h3 ~ table\')\n    for index, table in enumerate(tables):\n        tr = table.find_all(\'tr\', attrs={\'class\': re.compile(\'^c_\\S*\')})\n        for j in tr:\n            td = j.select(\'td\')\n            score_list = []\n            for k in td:\n                # \xe8\x8e\xb7\xe5\x8f\x96\xe6\xaf\x8f\xe5\xb9\xb4\xe7\x9a\x84\xe5\x88\x86\xe6\x95\xb0\n                if \'class\' not in k.attrs:\n                    score = k.text.strip()\n                    score_list.append(score)\n\n                # \xe8\x8e\xb7\xe5\x8f\x96\xe5\x88\x86\xe6\x95\xb0\xe7\xba\xbf\xe7\xb1\xbb\xe5\x88\xab\n                elif \'class\' in k.attrs:\n                    score_line = k.text.strip()\n\n                score_data = {\n                    \'provice\': provice.strip(),#\xe7\x9c\x81\xe4\xbb\xbd\n                    \'category\': category_list[index],#\xe6\x96\x87\xe7\x90\x86\xe7\xa7\x91\xe5\x88\x86\xe7\xb1\xbb\n                    \'score_line\': score_line,#\xe5\x88\x86\xe6\x95\xb0\xe7\xba\xbf\xe7\xb1\xbb\xe5\x88\xab\n                    \'score_list\': score_list#\xe5\x88\x86\xe6\x95\xb0\xe5\x88\x97\xe8\xa1\xa8\n                }\n            score_detail.insert_one(score_data)\n        print(""detail insert ok"")\n\n\n\n\nif __name__ == \'__main__\':\n\n    header = {\n        \'User-Agent\': \'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0\',\n        \'Connection\': \'keep - alive\'}\n    url = \'http://www.gaokao.com/guangdong/fsx/\'\n\n    get_provice(url)\n    pool = Pool()\n    pool.map(get_score, [i for i in pro_link])#\xe4\xbd\xbf\xe7\x94\xa8\xe5\xa4\x9a\xe7\xba\xbf\xe7\xa8\x8b\n'"
LiePin/liepin.py,0,"b'# coding: utf-8\n\'\'\'\n\xe7\x8c\x8e\xe8\x81\x98\xe7\xbd\x91\n\'\'\'\nimport re\nimport os\nimport jieba\nimport logging\nimport pymongo\nimport requests\nimport webbrowser\nimport collections\nfrom pyecharts import Bar\nfrom bs4 import BeautifulSoup\nfrom functools import partial\nfrom pyecharts import WordCloud\nfrom multiprocessing.pool import Pool\n\n\n\nclient = pymongo.MongoClient(\'localhost\', 27017)\nzhaopin = client[\'zhaopin\']\npywork = zhaopin[\'pywork\']\n\n\nheader = {\n    \'User-Agent\': \'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36\',\n    \'Connection\': \'keep - alive\'\n}\n\n\ndef getLink(seachname, pagenum):\n    \'\'\'\n    \xe8\x8e\xb7\xe5\x8f\x96\xe6\x89\x80\xe6\x9c\x89\xe5\xb2\x97\xe4\xbd\x8d\xe7\x9a\x84\xe4\xbf\xa1\xe6\x81\xaf\n    :param seachname:\n    :param pagenum:\n    :return:\n    \'\'\'\n    for i in range(pagenum):\n        url = ""https://www.liepin.com/zhaopin/?init=-1&key={}&curPage={}"".format(\n            seachname, i)\n        web_data = requests.get(url=url, headers=header)\n        soup = BeautifulSoup(web_data.content, \'lxml\')\n        job_list = soup.select("".sojob-list > li"")\n        for item in job_list:\n            name = item.select("".job-info > h3"")[0][\'title\']\n            link = item.select("".job-info > h3 > a"")[0][\'href\']\n            company = item.select("".company-name > a"")[0].text\n            salary = item.select("".text-warning"")[0].text\n            location = item.select("".area"")[0].text\n            education = item.select("".edu"")[0].text\n            data = {\n                ""title"": name,\n                ""link"": link,\n                ""company"": company,\n                ""salary"": salary,\n                ""location"": location,\n                ""education"": education,\n            }\n            pywork.insert_one(data)\n            print(data)\n\n\ndef getDetailUrl():\n    \'\'\'\n    \xe8\x8e\xb7\xe5\x8f\x96\xe8\xaf\xa6\xe7\xbb\x86\xe6\x8b\x9b\xe8\x81\x98\xe8\xa6\x81\xe6\xb1\x82\xe7\x9a\x84\xe9\xa1\xb5\xe9\x9d\xa2\xe9\x93\xbe\xe6\x8e\xa5\n    :return:\n    \'\'\'\n    collection_set = pywork.find().limit(500)\n    URLList = []\n    formerStr = ""https://www.liepin.com""\n    for item in collection_set:\n        if formerStr in item[\'link\']:\n            URLList.append(item[""link""])\n        else:\n            URLList.append(formerStr + item[""link""])\n\n    print(""-"" * 20)\n    print(len(URLList))\n    print(""-"" * 20)\n    return URLList\n\n\ndef getInfo(url, demands_text):\n    \'\'\'\n    \xe6\x8f\x90\xe5\x8f\x96\xe8\xaf\xa6\xe7\xbb\x86\xe9\xa1\xb5\xe9\x9d\xa2\xe7\x9a\x84\xe4\xbf\xa1\xe6\x81\xaf\n    :param url:\n    :param demands_text:\n    :return:\n    \'\'\'\n    web_data = requests.get(url, headers=header)\n    soup = BeautifulSoup(web_data.content, \'lxml\')\n    try:\n        demands = soup.select("".content-word"")[0].contents\n        demands = sorted(set(demands), key=demands.index)\n        # \xe5\x88\xa0\xe9\x99\xa4<br/>\n        delete_str = ""<br/>""\n        br_tag = BeautifulSoup(delete_str, ""lxml"").br\n        demands.remove(br_tag)\n        # \xe6\x8b\xbc\xe6\x8e\xa5\xe6\x89\x80\xe6\x9c\x89\xe8\xa6\x81\xe6\xb1\x82\n        for item in demands:\n            demands_text += item.replace(""\\r"", """")\n        f = open(\'demands.txt\', mode=\'a+\', encoding=\'UTF-8\')\n        f.write(demands_text + ""\\n"")\n        f.close()\n    except:\n        logging.warning(""warning..."")\n\n\ndef CutWordByJieBa(txt, seachname):\n    \'\'\'\n    \xe5\x88\xa9\xe7\x94\xa8jieba\xe5\x88\x86\xe8\xaf\x8d\xe6\x8f\x90\xe5\x8f\x96\n    :param txt:\n    :param seachname:\n    :return:\n    \'\'\'\n    seg_list = jieba.cut(txt, cut_all=True)\n    w1 = ""/ "".join(seg_list)  # \xe5\x85\xa8\xe6\xa8\xa1\xe5\xbc\x8f\n    # \xe6\x8f\x90\xe5\x8f\x96\xe8\x8b\xb1\xe6\x96\x87\n    fil = re.findall(\'[a-zA-Z]{1,}/\', w1)\n    strl = """"\n    for i in fil:\n        strl += i\n    strl = strl.lower()\n    result_dic = countfeq(strl)\n    showInBar(seachname=seachname, result=result_dic)\n    showInWordCount(seachname=seachname, result=result_dic)\n    showInBrowser(seachname)\n\n\ndef countfeq(s):  # \xe8\xaf\x8d\xe9\xa2\x91\xe7\xbb\x9f\xe8\xae\xa1\xe5\x87\xbd\xe6\x95\xb0\n    s_list = s.split(\'/\')  # \xe4\xbb\xa5""/""\xe4\xb8\xba\xe5\x88\x86\xe7\x95\x8c\xe5\xb0\x86\xe5\xad\x97\xe7\xac\xa6\xe4\xb8\xb2\xe5\x8f\x98\xe6\x88\x90\xe5\x88\x97\xe8\xa1\xa8\n    #[s_list.remove(item) for item in s_list if item in \',.\']  # \xe5\xb0\x86\',.\'\xe5\x8e\xbb\xe9\x99\xa4\n    dic = collections.Counter(s_list)  # \xe5\x88\xa9\xe7\x94\xa8Counter\xe5\x87\xbd\xe6\x95\xb0\xe7\xbb\x9f\xe8\xae\xa1\xe4\xb8\xaa\xe6\x95\xb0\n    return dic  # \xe8\xbf\x94\xe5\x9b\x9e\xe5\xad\x97\xe5\x85\xb8\n\n\ndef showInBar(seachname, result):\n    \'\'\'\n    \xe5\x88\xb6\xe4\xbd\x9c\xe6\x9f\xb1\xe7\x8a\xb6\xe5\x9b\xbe\n    :param seachname:\n    :param result:\n    :return:\n    \'\'\'\n    result = dict(result)\n    attr = list(result.keys())[:10]\n    v1 = list(result.values())[:10]\n    bar = Bar(""{}\xe5\xb2\x97\xe4\xbd\x8d"".format(seachname), ""\xe9\x9c\x80\xe8\xa6\x81\xe6\x8e\x8c\xe6\x8f\xa1\xe7\x9a\x84\xe8\xaf\xad\xe8\xa8\x80/\xe5\xb7\xa5\xe5\x85\xb7"")\n    bar.add(\n        ""\xe8\xaf\xad\xe8\xa8\x80/\xe5\xb7\xa5\xe5\x85\xb7"",\n        attr,\n        v1,\n        mark_line=[""average""],\n        mark_point=[\n            ""max"",\n            ""min""],\n        xaxis_rotate=30)\n    bar.render(""{}.html"".format(seachname))\n\n\ndef showInWordCount(seachname, result):\n    \'\'\'\n    \xe5\x88\xb6\xe4\xbd\x9c\xe8\xaf\x8d\xe4\xba\x91\n    :param seachname:\n    :param result:\n    :return:\n    \'\'\'\n    result = dict(result)\n    name = list(result.keys())[:30]\n    value = list(result.values())[:30]\n    wordcloud = WordCloud(width=1300, height=620)\n    wordcloud.add("""", name, value, word_size_range=[20, 100])\n    wordcloud.render(""{}wordcloud.html"".format(seachname))\n\n\ndef showInBrowser(seachname):\n    \'\'\'\n    \xe6\x89\x93\xe5\xbc\x80\xe6\xb5\x8f\xe8\xa7\x88\xe5\x99\xa8\xe6\x98\xbe\xe7\xa4\xba\n    :param seachname:\n    :return:\n    \'\'\'\n    webbrowser.open(""{}wordcloud.html"".format(seachname))\n    webbrowser.open(""{}.html"".format(seachname))\n\n\nif __name__ == \'__main__\':\n    pywork.drop()\n    seachname = input(""\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe9\x9c\x80\xe8\xa6\x81\xe6\x9f\xa5\xe8\xaf\xa2\xe7\x9a\x84\xe5\xb2\x97\xe4\xbd\x8d\xef\xbc\x9a"")\n    print(""\xe6\xad\xa3\xe5\x9c\xa8\xe6\x90\x9c\xe7\xb4\xa2{}..."".format(seachname))\n    getLink(seachname,20)\n    URLList = getDetailUrl()\n    pool = Pool()\n\n    demands_text = """"\n    pool.map(partial(getInfo, demands_text=demands_text), URLList)\n    print(demands_text)\n    input = open(\'demands.txt\',\'rb\').read()\n    CutWordByJieBa(txt=input, seachname=seachname)\n    os.remove(\'demands.txt\')\n'"
MaoYan_Alita_Battle_Angel/Comments.py,0,"b'# -*- coding: utf-8 -*-\n# @Time    : 2019/2/24 13:50\n# @Author  : donlex\n# @Email   : donlex@qq.com\n# @Software: PyCharm 2018.1.4 (Professional Edition)\n\nimport requests\nimport json\n\nimport time\nimport random\nfrom wordcloud import WordCloud\nimport jieba\nfrom matplotlib import pyplot as plt\n\nfrom pyecharts import Bar, Pie\n\n\nclass MaoYan(object):\n\n    def __init__(self, url, header):\n        self.url = url\n        self.header = header\n\n    def get_comments(self):\n        \'\'\'\n        \xe7\x88\xac\xe5\x8f\x96\xe8\xaf\x84\xe8\xae\xba\xe4\xbf\xa1\xe6\x81\xaf\n        :return:\n        \'\'\'\n        for i in range(0, 14352, 15):\n            URL = self.url.format(i)\n            data = requests.get(url=URL, headers=self.header)\n            time.sleep(random.random() * 3)\n            com = json.loads(data.text)\n            comments = com[\'data\'][\'comments\']\n            if comments:\n                for item in comments:\n                    data = {\n                        \'content\': item[\'content\'],\n                        \'score\': item[\'score\'],\n                        \'nick\': item[\'nick\'],\n                        \'gender\': item[\'gender\'],\n                    }\n                    print(data)\n                    # \xe5\xad\x98\xe5\x85\xa5\xe6\x96\x87\xe6\x9c\xac\xe4\xb8\xad\n                    with open(\'comments.txt\', \'a+\', encoding=\'UTF-8\') as file:\n                        file.writelines(\n                            json.dumps(data, ensure_ascii=False) + \'\\n\')\n            else:\n                break\n\n    def readFile(self):\n        \'\'\'\n        \xe8\xaf\xbb\xe5\x8f\x96\xe8\xaf\x84\xe8\xae\xba\xe4\xbf\xa1\xe6\x81\xaf\xe6\x96\x87\xe4\xbb\xb6\n        :return:\n        \'\'\'\n        with open(\'comments.txt\', \'r+\', encoding=\'UTF-8\') as file:\n            lists = file.readlines()\n        return lists\n\n    def get_context(self):\n        \'\'\'\xe8\x8e\xb7\xe5\x8f\x96\xe5\xb9\xb6\xe6\x8b\xbc\xe6\x8e\xa5\xe6\x89\x80\xe6\x9c\x89\xe7\x9a\x84\xe8\xaf\x84\xe8\xae\xba\'\'\'\n        lists = self.readFile()\n        text = """"\n        for item in lists:\n            line = json.loads(item)\n            content = line[\'content\']\n            text += content\n        return text\n\n    def get_wordcloud(self):\n        \'\'\'\n        \xe5\x88\xb6\xe4\xbd\x9c\xe8\xaf\x8d\xe4\xba\x91\xe5\x9b\xbe\n        :return:\n        \'\'\'\n        text = self.get_context()\n        seg_list = jieba.cut(text, cut_all=True)\n        wc = WordCloud(background_color=""#CCC"",  # \xe8\xae\xbe\xe7\xbd\xae\xe8\x83\x8c\xe6\x99\xaf\xe9\xa2\x9c\xe8\x89\xb2\n                       # mask = pic , #\xe8\xae\xbe\xe7\xbd\xae\xe8\x83\x8c\xe6\x99\xaf\xe5\x9b\xbe\xe7\x89\x87\n                       max_words=2000,  # \xe8\xae\xbe\xe7\xbd\xae\xe6\x9c\x80\xe5\xa4\xa7\xe6\x98\xbe\xe7\xa4\xba\xe7\x9a\x84\xe5\xad\x97\xe6\x95\xb0\n                       margin=5,\n                       font_path=""C:\\\\Windows\\\\Fonts\\\\STFANGSO.ttf"",  # \xe4\xb8\x8d\xe5\x8a\xa0\xe8\xbf\x99\xe4\xb8\x80\xe5\x8f\xa5\xe6\x98\xbe\xe7\xa4\xba\xe5\x8f\xa3\xe5\xad\x97\xe5\xbd\xa2\xe4\xb9\xb1\xe7\xa0\x81\n                       max_font_size=80,  # \xe8\xae\xbe\xe7\xbd\xae\xe5\xad\x97\xe4\xbd\x93\xe6\x9c\x80\xe5\xa4\xa7\xe5\x80\xbc\n                       random_state=40,  # \xe8\xae\xbe\xe7\xbd\xae\xe6\x9c\x89\xe5\xa4\x9a\xe5\xb0\x91\xe7\xa7\x8d\xe9\x9a\x8f\xe6\x9c\xba\xe7\x94\x9f\xe6\x88\x90\xe7\x8a\xb6\xe6\x80\x81\xef\xbc\x8c\xe5\x8d\xb3\xe6\x9c\x89\xe5\xa4\x9a\xe5\xb0\x91\xe7\xa7\x8d\xe9\x85\x8d\xe8\x89\xb2\xe6\x96\xb9\xe6\xa1\x88\n                       )\n        w1 = ""/ "".join(seg_list)  # \xe5\x85\xa8\xe6\xa8\xa1\xe5\xbc\x8f\n        mword = wc.generate(w1)\n        plt.imshow(mword)\n        plt.axis(""off"")\n        plt.savefig(\'wordcloud.png\')  # \xe4\xbf\x9d\xe5\xad\x98\xe5\x9b\xbe\xe7\x89\x87\n        plt.show()\n\n    def get_single_attribute(self, word):\n        \'\'\'\n        \xe6\xa0\xb9\xe6\x8d\xae\xe4\xbc\xa0\xe5\x85\xa5\xe7\x9a\x84\xe5\xb1\x9e\xe6\x80\xa7\xef\xbc\x8c\xe8\xbf\x94\xe5\x9b\x9e\xe7\x9b\xb8\xe5\xba\x94\xe7\x9a\x84\xe5\xad\x97\xe5\x85\xb8\xef\xbc\x8c\xe4\xbe\xbf\xe4\xba\x8e\xe4\xbd\xbf\xe7\x94\xa8pyecharts\n        :param word: \xe5\xb1\x9e\xe6\x80\xa7\xe5\x80\xbc\n        :return: dict\n        \'\'\'\n        lists = self.readFile()\n        list = []\n        for line in lists:\n            item = json.loads(line)\n            list.append(item[word])\n        list_to_set = set(list)\n        dict = {}\n        for gender in list_to_set:\n            dict[gender] = list.count(gender)\n        return dict\n\n    def draw_score_bar(self):\n        bar = Bar(\'\xe8\xaf\x84\xe5\x88\x86\xe6\x9f\xb1\xe7\x8a\xb6\xe5\x9b\xbe\', \'\xe6\x9d\xa5\xe8\x87\xaa:\xe7\x8c\xab\xe7\x9c\xbc\xe7\x94\xb5\xe5\xbd\xb1\')\n        data = self.get_single_attribute(\'score\')\n        bar.add(\'\xe5\x88\x86\xe6\x95\xb0\',\n                list(data.keys()),\n                list(data.values()),\n                is_more_utils=True  # \xe8\xae\xbe\xe7\xbd\xae\xe6\x9c\x80\xe5\x8f\xb3\xe4\xbe\xa7\xe5\xb7\xa5\xe5\x85\xb7\xe6\xa0\x8f\n                )\n        bar.render(\'./score.html\')\n\n    def draw_gender_Pie(self):\n        data = self.get_single_attribute(\'gender\')\n        attr = list(data.keys())\n        v1 = list(data.values())\n        pie = Pie(\'\xe6\x80\xa7\xe5\x88\xab\xe7\x8e\xaf\xe5\xbd\xa2\xe5\x9b\xbe\', title_pos=\'center\')\n        pie.add(\n            \'\', attr, v1,  # \'\'\xef\xbc\x9a\xe5\x9b\xbe\xe4\xbe\x8b\xe5\x90\x8d\xef\xbc\x88\xe4\xb8\x8d\xe4\xbd\xbf\xe7\x94\xa8\xe5\x9b\xbe\xe4\xbe\x8b\xef\xbc\x89\n            radius=[40, 75],  # \xe7\x8e\xaf\xe5\xbd\xa2\xe5\x86\x85\xe5\xa4\x96\xe5\x9c\x86\xe7\x9a\x84\xe5\x8d\x8a\xe5\xbe\x84\n            is_label_show=True,  # \xe6\x98\xaf\xe5\x90\xa6\xe6\x98\xbe\xe7\xa4\xba\xe6\xa0\x87\xe7\xad\xbe\n            label_text_color=None,  # \xe6\xa0\x87\xe7\xad\xbe\xe9\xa2\x9c\xe8\x89\xb2\n            legend_orient=\'vertical\',  # \xe5\x9b\xbe\xe4\xbe\x8b\xe5\x9e\x82\xe7\x9b\xb4\n            legend_pos=\'left\'\n        )\n        pie.render(\'./gender.html\')\n\n    def crawel(self):\n        self.get_comments()\n        self.get_wordcloud()\n        self.draw_score_bar()\n        self.draw_gender_Pie()\n\n\nif __name__ == \'__main__\':\n    url = \'http://m.maoyan.com/review/v2/comments.json?movieId=410629&userId=-1&offset={}&limit=15&ts=1550987272364&type=3\'\n    header = {\n        \'User-Agent\': \'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0\',\n        \'Connection\': \'keep - alive\'}\n    spyder = MaoYan(url, header)\n    spyder.crawel()\n'"
Netease_Lyrics/lyrics_spyder.py,0,"b'\'\'\'\n@ Auther : Don Lex\nsite: https://donlex.cn\n\xe6\xa0\xb9\xe6\x8d\xae\xe7\xbd\x91\xe6\x98\x93\xe4\xba\x91\xe6\xad\x8c\xe6\x9b\xb2\xe9\x93\xbe\xe6\x8e\xa5\xef\xbc\x8c\xe8\x8e\xb7\xe5\x8f\x96\xe6\xad\x8c\xe8\xaf\x8dlyric\n\'\'\'\nimport re\nimport requests\nimport json\n\nclass neteasse:\n    def __init__(self, url):\n        self.url = url\n        self.link = \'http://music.163.com/api/song/media?id=\'\n        self.headers = {\n            \'User-Agent\': \'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0\'}\n\n    def get_song_id(self):\n        \'\'\'\n        \xe6\xa0\xb9\xe6\x8d\xae\xe4\xbc\xa0\xe5\x85\xa5\xe7\x9a\x84\xe9\x93\xbe\xe6\x8e\xa5\xef\xbc\x8c\xe6\x88\xaa\xe5\x8f\x96\xe5\x87\xba\xe6\xad\x8c\xe6\x9b\xb2\xe7\x9a\x84id\n        :param url: str\n        :return: str\n        \'\'\'\n        # \'https://music.163.com/#/song?id=863046037\'\n        if self.url != """":\n            id = re.split(\'id=\', self.url)[1]\n            return id\n        else:\n            return """"\n\n    def get_lyrics(self):\n        \'\'\'\n        \xe6\xa0\xb9\xe6\x8d\xae\xe6\xad\x8c\xe6\x9b\xb2id\xef\xbc\x8c\xe8\xaf\xb7\xe6\xb1\x82\xe8\x8e\xb7\xe5\x8f\x96\xe6\xad\x8c\xe8\xaf\x8d\n        :param id: str\n        :return: str\n        \'\'\'\n        id = self.get_song_id()\n        if id != """":\n            self.link += id\n            web_data = requests.get(url=self.link, headers=self.headers).text\n            json_data = json.loads(web_data)\n            try:\n                return json_data[\'lyric\']\n            except BaseException:\n                return ""\xe6\xad\x8c\xe6\x9b\xb2id\xe9\x94\x99\xe8\xaf\xaf,\xe8\xaf\xb7\xe6\xa3\x80\xe6\x9f\xa5\xe5\x90\x8e\xe9\x87\x8d\xe8\xaf\x95\xef\xbc\x81\xef\xbc\x81\xef\xbc\x81""\n        else:\n            return ""\xe9\x93\xbe\xe6\x8e\xa5\xe9\x94\x99\xe8\xaf\xaf,\xe8\xaf\xb7\xe6\xa3\x80\xe6\x9f\xa5\xe5\x90\x8e\xe9\x87\x8d\xe8\xaf\x95\xef\xbc\x81\xef\xbc\x81\xef\xbc\x81""\n\n\nif __name__ == \'__main__\':\n    url = \'https://music.163.com/#/song?id=863046037\'\n    net = neteasse(url)\n    lyric = net.get_lyrics()\n    print(lyric)\n'"
Novel_Download_Tool/text_spider.py,0,"b'import requests\nfrom bs4 import BeautifulSoup\nimport codecs\nfrom requests.adapters import HTTPAdapter\n\ns = requests.Session()\ns.mount(\'http://\', HTTPAdapter(max_retries=3))\n\n\nheader = {\n    \'User-Agent\': \'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0\',\n    \'Connection\': \'close\'}\n\ndef get_link(url):\n    \'\'\'\xe8\x8e\xb7\xe5\x8f\x96\xe5\x85\xa8\xe9\x83\xa8\xe7\xab\xa0\xe8\x8a\x82\xe7\x9a\x84\xe9\x93\xbe\xe6\x8e\xa5\'\'\'\n    html = s.get(url)\n    soup = BeautifulSoup(html.content, \'lxml\')  # content\xe5\xa6\x82\xe6\x9e\x9c\xe6\x8d\xa2\xe6\x88\x90text\xe4\xbc\x9a\xe6\x9c\x89\xe4\xb9\xb1\xe7\xa0\x81\n    url_list = []\n    list = soup.select(""#list > dl > dd > a"")\n    for i in list:\n        i = i.get(""href"")\n        i = \'http://www.biqugecom.com\' + i\n        url_list.append(i)\n    url_list = url_list[9:-1]\n    return url_list\n\ndef get_data(url):\n    \'\'\'\xe8\x8e\xb7\xe5\x8f\x96\xe8\xaf\xa6\xe7\xbb\x86\xe6\x96\x87\xe6\x9c\xac\'\'\'\n    html = s.get(url)\n    soup = BeautifulSoup(html.content, \'lxml\')\n    f = codecs.open(\'output.txt\', \'a+\', \'utf-8\')\n    # \xe4\xbb\xa5\xe4\xba\x8c\xe8\xbf\x9b\xe5\x88\xb6\xe5\x86\x99\xe5\x85\xa5\xe7\xab\xa0\xe8\x8a\x82\xe9\xa2\x98\xe7\x9b\xae \xe9\x9c\x80\xe8\xa6\x81\xe8\xbd\xac\xe6\x8d\xa2\xe4\xb8\xbautf-8\xe7\xbc\x96\xe7\xa0\x81\xef\xbc\x8c\xe5\x90\xa6\xe5\x88\x99\xe4\xbc\x9a\xe5\x87\xba\xe7\x8e\xb0\xe4\xb9\xb1\xe7\xa0\x81\n    section_name = soup.select(""#wrapper > div.content_read > div > div.bookname > h1"")[0].text\n    print(section_name)\n    f.write((\'\\r\\n\' + section_name + \'\\r\\n\'))\n    section_text = soup.select(""#content"")\n    for x in section_text:\n        a = x.text.replace(\'readx();\', \'\').replace(\'www.biqugecom.com/27/27204/\', \'\')\n        # \xe4\xbb\xa5\xe4\xba\x8c\xe8\xbf\x9b\xe5\x88\xb6\xe5\x86\x99\xe5\x85\xa5\xe7\xab\xa0\xe8\x8a\x82\xe5\x86\x85\xe5\xae\xb9\n        f.write((a)+ \'\\r\\n\')\n    f.close()  # \xe5\x85\xb3\xe9\x97\xad\xe5\xb0\x8f\xe8\xaf\xb4\xe6\x96\x87\xe4\xbb\xb6\n\nif __name__ == \'__main__\':\n    url = \'http://www.biqugecom.com/27/27204/\'\n    url_list = get_link(url)\n    for i in url_list:\n        get_data(i)'"
Pic_to_ascaii/pic.py,0,"b'from PIL import Image\n\ncodeLib = \'\'\'@B%8&WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\|()1{}[]?-_+~<>i!lI;:,""^`\'. \'\'\'  # \xe7\x94\x9f\xe6\x88\x90\xe5\xad\x97\xe7\xac\xa6\xe7\x94\xbb\xe6\x89\x80\xe9\x9c\x80\xe7\x9a\x84\xe5\xad\x97\xe7\xac\xa6\xe9\x9b\x86\ncount = len(codeLib)\n\ndef transform1(image_file):\n    image_file = image_file.convert(""L"")  # \xe8\xbd\xac\xe6\x8d\xa2\xe4\xb8\xba\xe9\xbb\x91\xe7\x99\xbd\xe5\x9b\xbe\xe7\x89\x87\xef\xbc\x8c\xe5\x8f\x82\xe6\x95\xb0""L""\xe8\xa1\xa8\xe7\xa4\xba\xe9\xbb\x91\xe7\x99\xbd\xe6\xa8\xa1\xe5\xbc\x8f\n    codePic = \'\'\n    for h in range(0, image_file.size[1]):  # size\xe5\xb1\x9e\xe6\x80\xa7\xe8\xa1\xa8\xe7\xa4\xba\xe5\x9b\xbe\xe7\x89\x87\xe7\x9a\x84\xe5\x88\x86\xe8\xbe\xa8\xe7\x8e\x87\xef\xbc\x8c\'0\'\xe4\xb8\xba\xe6\xa8\xaa\xe5\x90\x91\xe5\xa4\xa7\xe5\xb0\x8f\xef\xbc\x8c\'1\'\xe4\xb8\xba\xe7\xba\xb5\xe5\x90\x91\n        for w in range(0, image_file.size[0]):\n            gray = image_file.getpixel((w, h))  # \xe8\xbf\x94\xe5\x9b\x9e\xe6\x8c\x87\xe5\xae\x9a\xe4\xbd\x8d\xe7\xbd\xae\xe7\x9a\x84\xe5\x83\x8f\xe7\xb4\xa0\xef\xbc\x8c\xe5\xa6\x82\xe6\x9e\x9c\xe6\x89\x80\xe6\x89\x93\xe5\xbc\x80\xe7\x9a\x84\xe5\x9b\xbe\xe5\x83\x8f\xe6\x98\xaf\xe5\xa4\x9a\xe5\xb1\x82\xe6\xac\xa1\xe7\x9a\x84\xe5\x9b\xbe\xe7\x89\x87\xef\xbc\x8c\xe9\x82\xa3\xe8\xbf\x99\xe4\xb8\xaa\xe6\x96\xb9\xe6\xb3\x95\xe5\xb0\xb1\xe8\xbf\x94\xe5\x9b\x9e\xe4\xb8\x80\xe4\xb8\xaa\xe5\x85\x83\xe7\xbb\x84\n            codePic = codePic + codeLib[int(((count - 1) * gray) / 256)]  # \xe5\xbb\xba\xe7\xab\x8b\xe7\x81\xb0\xe5\xba\xa6\xe4\xb8\x8e\xe5\xad\x97\xe7\xac\xa6\xe9\x9b\x86\xe7\x9a\x84\xe6\x98\xa0\xe5\xb0\x84\n        codePic = codePic + \'\\r\\n\'\n    return codePic\n\n\nfp = open(u\'blue_cat.jpg\', \'rb\')\nimage_file = Image.open(fp)\nimage_file = image_file.resize((int(image_file.size[0] * 0.75), int(image_file.size[1] * 0.5)))  # \xe8\xb0\x83\xe6\x95\xb4\xe5\x9b\xbe\xe7\x89\x87\xe5\xa4\xa7\xe5\xb0\x8f\nprint(u\'Info:\', image_file.size[0], \' \', image_file.size[1], \' \', count)\n\ntmp = open(\'pa.txt\', \'w\')\ntmp.write(transform1(image_file))\ntmp.close()\n'"
Pic_to_sketch/test.py,8,"b""from PIL import Image\nimport numpy as np\n\na = np.asarray(Image.open('ha.png').convert('L')).astype('float')\n\ndepth = 10.  # (0-100)\ngrad = np.gradient(a)  # \xe5\x8f\x96\xe5\x9b\xbe\xe5\x83\x8f\xe7\x81\xb0\xe5\xba\xa6\xe7\x9a\x84\xe6\xa2\xaf\xe5\xba\xa6\xe5\x80\xbc\ngrad_x, grad_y = grad  # \xe5\x88\x86\xe5\x88\xab\xe5\x8f\x96\xe6\xa8\xaa\xe7\xba\xb5\xe5\x9b\xbe\xe5\x83\x8f\xe6\xa2\xaf\xe5\xba\xa6\xe5\x80\xbc\ngrad_x = grad_x * depth / 100.\ngrad_y = grad_y * depth / 100.\nA = np.sqrt(grad_x ** 2 + grad_y ** 2 + 1.)\nuni_x = grad_x / A\nuni_y = grad_y / A\nuni_z = 1. / A\n\nvec_el = np.pi / 2.2  # \xe5\x85\x89\xe6\xba\x90\xe7\x9a\x84\xe4\xbf\xaf\xe8\xa7\x86\xe8\xa7\x92\xe5\xba\xa6\xef\xbc\x8c\xe5\xbc\xa7\xe5\xba\xa6\xe5\x80\xbc\nvec_az = np.pi / 4.  # \xe5\x85\x89\xe6\xba\x90\xe7\x9a\x84\xe6\x96\xb9\xe4\xbd\x8d\xe8\xa7\x92\xe5\xba\xa6\xef\xbc\x8c\xe5\xbc\xa7\xe5\xba\xa6\xe5\x80\xbc\ndx = np.cos(vec_el) * np.cos(vec_az)  # \xe5\x85\x89\xe6\xba\x90\xe5\xaf\xb9x \xe8\xbd\xb4\xe7\x9a\x84\xe5\xbd\xb1\xe5\x93\x8d\ndy = np.cos(vec_el) * np.sin(vec_az)  # \xe5\x85\x89\xe6\xba\x90\xe5\xaf\xb9y \xe8\xbd\xb4\xe7\x9a\x84\xe5\xbd\xb1\xe5\x93\x8d\ndz = np.sin(vec_el)  # \xe5\x85\x89\xe6\xba\x90\xe5\xaf\xb9z \xe8\xbd\xb4\xe7\x9a\x84\xe5\xbd\xb1\xe5\x93\x8d\n\nb = 255 * (dx * uni_x + dy * uni_y + dz * uni_z)  # \xe5\x85\x89\xe6\xba\x90\xe5\xbd\x92\xe4\xb8\x80\xe5\x8c\x96\nb = b.clip(0, 255)\n\nim = Image.fromarray(b.astype('uint8'))  # \xe9\x87\x8d\xe6\x9e\x84\xe5\x9b\xbe\xe5\x83\x8f\nim.save('haHD.jpg')\n"""
Pic_to_sketch/test2.py,0,"b'from PIL import Image\nimport os\n\ndef transform(imgName):\n# \xe5\x9b\xbe\xe5\x83\x8f\xe7\xbb\x84\xe6\x88\x90\xef\xbc\x9a\xe7\xba\xa2\xe7\xbb\xbf\xe8\x93\x9d  \xef\xbc\x88RGB\xef\xbc\x89\xe4\xb8\x89\xe5\x8e\x9f\xe8\x89\xb2\xe7\xbb\x84\xe6\x88\x90    \xe4\xba\xae\xe5\xba\xa6\xef\xbc\x88255,255,255\xef\xbc\x89\n    image = imgName\n    img = Image.open(image)\n    img_all = ""\xe7\xb4\xa0\xe6\x8f\x8f"" + image\n    new = Image.new(""L"", img.size, 255)\n    width, height = img.size\n    img = img.convert(""L"")\n\n    print(img.size)\n    print(img.mode) #RBG\n\n    img_get = img.getpixel((0, 0))\n    print(img_get) #\xe4\xb8\x89\xe5\x8e\x9f\xe8\x89\xb2\xe9\x80\x9a\xe9\x81\x93\n\n    img_L=img.convert(\'L\')\n    print(img_L)\n    img_get_L=img_L.getpixel((0,0))    #\xe6\x8d\xa2\xe7\xae\x97 \xe5\xbe\x97\xe5\x88\xb0\xe7\x81\xb0\xe5\xba\xa6\xe5\x80\xbc\n    print(img_get_L)\n\n    # \xe5\xae\x9a\xe4\xb9\x89\xe7\x94\xbb\xe7\xac\x94\xe7\x9a\x84\xe5\xa4\xa7\xe5\xb0\x8f\n    Pen_size = 3\n    # \xe8\x89\xb2\xe5\xb7\xae\xe6\x89\xa9\xe6\x95\xa3\xe5\x99\xa8\n    Color_Diff = 6\n    for i in range(Pen_size + 1, width - Pen_size - 1):\n        for j in range(Pen_size + 1, height - Pen_size - 1):\n            # \xe5\x8e\x9f\xe5\xa7\x8b\xe7\x9a\x84\xe9\xa2\x9c\xe8\x89\xb2\n            originalColor = 255\n            lcolor = sum([img.getpixel((i - r, j)) for r in range(Pen_size)]) // Pen_size\n            rcolor = sum([img.getpixel((i + r, j)) for r in range(Pen_size)]) // Pen_size\n\n            # \xe9\x80\x9a\xe9\x81\x93----\xe9\xa2\x9c\xe6\x96\x99\n            if abs(lcolor - rcolor) > Color_Diff:\n                originalColor -= (255 - img.getpixel((i, j))) // 4\n                new.putpixel((i, j), originalColor)\n\n            ucolor = sum([img.getpixel((i, j - r)) for r in range(Pen_size)]) // Pen_size\n            dcolor = sum([img.getpixel((i, j + r)) for r in range(Pen_size)]) // Pen_size\n\n            # \xe9\x80\x9a\xe9\x81\x93----\xe9\xa2\x9c\xe6\x96\x99\n            if abs(ucolor - dcolor) > Color_Diff:\n                originalColor -= (255 - img.getpixel((i, j))) // 4\n                new.putpixel((i, j), originalColor)\n\n            acolor = sum([img.getpixel((i - r, j - r)) for r in range(Pen_size)]) // Pen_size\n            bcolor = sum([img.getpixel((i + r, j + r)) for r in range(Pen_size)]) // Pen_size\n\n            # \xe9\x80\x9a\xe9\x81\x93----\xe9\xa2\x9c\xe6\x96\x99\n            if abs(acolor - bcolor) > Color_Diff:\n                originalColor -= (255 - img.getpixel((i, j))) // 4\n                new.putpixel((i, j), originalColor)\n\n            qcolor = sum([img.getpixel((i + r, j - r)) for r in range(Pen_size)]) // Pen_size\n            wcolor = sum([img.getpixel((i - r, j + r)) for r in range(Pen_size)]) // Pen_size\n\n            # \xe9\x80\x9a\xe9\x81\x93----\xe9\xa2\x9c\xe6\x96\x99\n            if abs(qcolor - wcolor) > Color_Diff:\n                originalColor -= (255 - img.getpixel((i, j))) // 4\n                new.putpixel((i, j), originalColor)\n\n    new.save(img_all)\n\n    # \xe6\x89\x93\xe5\xbc\x80\xe8\xbd\xac\xe6\x8d\xa2\xe5\x90\x8e\xe7\x9a\x84\xe5\x9b\xbe\xe7\x89\x87\n    os.system(img_all)\n\nif __name__ == \'__main__\':\n    imageName = ""ha.png""\n    transform(imageName)'"
QQ_Pet_Fight/QQPetFight.py,0,"b'\xef\xbb\xbf\'\'\'\nAuthor: Don Lex\n\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7\xef\xbc\x9aPython\xe7\xbb\xbf\xe6\xb4\xb2\n\n\xe6\x9c\xac\xe7\xa8\x8b\xe5\xba\x8f\xe4\xb8\x8d\xe6\x98\xaf\xe6\x89\x80\xe6\x9c\x89\xe7\x9a\x84\xe8\xb4\xa6\xe5\x8f\xb7\xe9\x83\xbd\xe9\x80\x82\xe7\x94\xa8\xef\xbc\x8c\xe8\xaf\xb7\xe6\xa0\xb9\xe6\x8d\xae\xe5\xae\x9e\xe9\x99\x85\xe6\x83\x85\xe5\x86\xb5\xe4\xbf\xae\xe6\x94\xb9\xe7\x9b\xb8\xe5\xba\x94\xe7\x9a\x84\xe4\xbb\xa3\xe7\xa0\x81\n\n\'\'\'\n\n\nfrom time import sleep\nfrom selenium import webdriver\nfrom selenium.common.exceptions import NoSuchElementException\nfrom selenium.webdriver.common.by import By\n\nURL = \'http://ui.ptlogin2.qq.com/cgi-bin/login?appid=614038002&style=9&s_url=http%3A%2F%2Fdld.qzapp.z.qq.com%2Fqpet%2Fcgi-bin%2Fphonepk%3Fcmd%3Dindex%26channel%3D0\'\nusername = \'\xe8\xb4\xa6\xe5\x8f\xb7\'\npwd = \'\xe5\xaf\x86\xe7\xa0\x81\'\n\ndriver = webdriver.Chrome()\ndriver.implicitly_wait(5)\n\n\ndef login(url, username, pwd):\n    driver.get(url)\n    driver.find_element_by_id(\'u\').clear()\n    driver.find_element_by_id(\'u\').send_keys(username)\n    driver.find_element_by_id(\'p\').clear()\n    driver.find_element_by_id(\'p\').send_keys(pwd)\n    driver.find_element_by_id(\'go\').click()\n    sleep(2)\n\n# \xe9\xa2\x86\xe5\x8f\x96\xe5\xbe\x92\xe5\xbc\x9f\xe7\xbb\x8f\xe9\xaa\x8c\ndef ling_qu_tu_di():\n    try:\n        driver.find_element_by_link_text(\'\xe9\xa2\x86\xe5\x8f\x96\xe5\xbe\x92\xe5\xbc\x9f\xe7\xbb\x8f\xe9\xaa\x8c\').click()\n        sleep(1)\n    except NoSuchElementException:\n        print(""meiyou_tu_di"")\n\n\n# \xe6\xaf\x8f\xe6\x97\xa5\xe5\xa5\x96\xe5\x8a\xb1\ndef mei_ri_jing_yan():\n    try:\n        driver.find_element_by_link_text(\'\xe6\xaf\x8f\xe6\x97\xa5\xe5\xa5\x96\xe5\x8a\xb1\').click()\n    except NoSuchElementException:\n        print(\'\xe6\xb2\xa1\xe6\x9c\x89\xe6\x89\xbe\xe5\x88\xb0\xe6\xaf\x8f\xe6\x97\xa5\xe5\xa5\x96\xe5\x8a\xb1\')\n    sleep(1)\n    try:\n        for i in range(0, 2):\n            driver.find_element_by_xpath(\'//*[@id=""id""]/p[1]/a[2]\').click()\n            sleep(1)\n    except NoSuchElementException:\n        print(\'\xe6\xb2\xa1\xe6\x9c\x89\xe6\x89\xbe\xe5\x88\xb0\xe6\xaf\x8f\xe6\x97\xa5\xe5\xa5\x96\xe5\x8a\xb1\xe9\xa2\x86\xe5\x8f\x96\xe6\x8c\x89\xe9\x92\xae\')\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe4\xb9\x90\xe6\x96\x97\xe5\xa5\xbd\xe5\x8f\x8b\ndef flight():\n    for i in range(6, 16):\n        myfriend = driver.find_element_by_link_text(\'\xe5\xa5\xbd\xe5\x8f\x8b\')\n        myfriend.click()\n        driver.find_element_by_link_text(""\xe4\xb8\x8b\xe9\xa1\xb5"").click()\n        sleep(1)\n        driver.find_element_by_xpath(\n            \' // *[ @ id = ""id""] / a[{}]\'.format(i)).click()\n        sleep(1)\n        driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n#     \xe5\x8e\x86\xe7\xbb\x83\ndef lilian():\n    driver.find_element_by_link_text(\'\xe5\x8e\x86\xe7\xbb\x83\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe9\xb9\x85\xe7\x8e\x8b\xe7\x9a\x84\xe8\xaf\x95\xe7\x82\xbc\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe4\xb8\x8b\xe4\xb8\x80\xe9\xa1\xb5\').click()\n    sleep(1)\n    for i in range(0, 5):\n        driver.find_element_by_xpath(\'//*[@id=""id""]/a[10]\').click()\n        sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe9\x87\x8d\xe5\x87\xba\xe6\xb1\x9f\xe6\xb9\x96\ndef call_back():\n    driver.find_element_by_link_text(\'\xe9\x87\x8d\xe5\x87\xba\xe6\xb1\x9f\xe6\xb9\x96\').click()\n    sleep(1)\n    for i in range(0, 3):\n        driver.find_element_by_xpath(\'//*[@id=""id""]/p[1]/a[5]\').click()\n        sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe6\x8a\xa2\xe5\x9c\xb0\xe7\x9b\x98\ndef dipan():\n    driver.find_element_by_link_text(\'\xe6\x8a\xa2\xe5\x9c\xb0\xe7\x9b\x98\').click()\n    driver.find_element_by_xpath(\'//*[@id=""id""]/a[17]\').click()\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe8\xae\xb8\xe6\x84\xbf\ndef xuyuan():\n    driver.find_element_by_link_text(\'\xe8\xae\xb8\xe6\x84\xbf\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe9\xa2\x86\xe5\x8f\x96\xe8\xae\xb8\xe6\x84\xbf\xe5\xa5\x96\xe5\x8a\xb1\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xae\xb8\xe6\x84\xbf\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe5\x90\x91\xe6\x9c\x88\xe6\x95\x8f\xe4\xb8\x8a\xe9\xa6\x99\xe8\xae\xb8\xe6\x84\xbf\').click()\n    sleep(1)\n    driver.find_element_by_xpath(\'//*[@id=""id""]/a[1]\').click()  # \xe9\xa2\x86\xe5\x8f\x96\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n#     \xe6\x96\x97\xe7\xa5\x9e\xe5\xa1\x94\ndef flight_ta():\n    driver.find_element_by_link_text(\'\xe6\x96\x97\xe7\xa5\x9e\xe5\xa1\x94\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe7\xbb\x93\xe6\x9d\x9f\xe6\x8c\x91\xe6\x88\x98\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe5\x8f\x96\xe6\xb6\x88\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\x87\xaa\xe5\x8a\xa8\xe6\x8c\x91\xe6\x88\x98\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe5\x8d\x81\xe4\xba\x8c\xe5\xae\xab\ndef gong():\n    driver.find_element_by_link_text(\'\xe5\x8d\x81\xe4\xba\x8c\xe5\xae\xab\').click()\n    sleep(1)\n    driver.find_element_by_xpath(\'//*[@id=""id""]/p[1]/a[25]\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xaf\xb7\xe7\x8c\xb4\xe7\x8e\x8b\xe6\x89\xab\xe8\x8d\xa1\').click()\n    sleep(1)\n    driver.find_element_by_xpath(\'//*[@id=""id""]/p[1]/a\').click()  # \xe5\xa4\x8d\xe6\xb4\xbb\n    sleep(1)\n    driver.find_element_by_xpath(\'//*[@id=""id""]/p[1]/a[3]\').click()  # \xe9\x80\x89\xe6\x8b\xa9\xe5\x89\x91\xe5\x90\x9b\xe5\xa4\x8d\xe6\xb4\xbb\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe7\xa1\xae\xe8\xae\xa4\xe5\xa4\x8d\xe6\xb4\xbb\').click()  # \xe7\xa1\xae\xe8\xae\xa4\xe5\xa4\x8d\xe6\xb4\xbb\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\x8d\x81\xe4\xba\x8c\xe5\xae\xab\').click()  # \xe8\xbf\x94\xe5\x9b\x9e\xe5\x8d\x81\xe4\xba\x8c\xe5\xae\xab\n    sleep(1)\n    driver.find_element_by_xpath(\'//*[@id=""id""]/p[1]/a[25]\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xaf\xb7\xe7\x8c\xb4\xe7\x8e\x8b\xe6\x89\xab\xe8\x8d\xa1\').click()\n    sleep(1)\n    driver.find_element_by_xpath(\'//*[@id=""id""]/p[1]/a\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe7\x9b\xb4\xe6\x8e\xa5\xe7\xbb\x93\xe6\x9d\x9f\')\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n#     \xe9\x97\xae\xe9\xbc\x8e\xe5\xa4\xa9\xe4\xb8\x8b\ndef tian_xia():\n    driver.find_element_by_link_text(\'\xe9\x97\xae\xe9\xbc\x8e\xe5\xa4\xa9\xe4\xb8\x8b\').click()\n    sleep(1)\n    for i in range(0, 5):\n        driver.find_element_by_xpath(\'//*[@id=""id""]/p[1]/a[18]\').click()  # \xe6\x94\xbb\xe5\x8d\xa0\n        sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n# \xe7\xab\x9e\xe6\x8a\x80\xe5\x9c\xba\ndef jin_ji_chang():\n    driver.find_element_by_link_text(\'\xe7\xab\x9e\xe6\x8a\x80\xe5\x9c\xba\').click()\n    sleep(1)\n    for i in range(0, 5):\n        driver.find_element_by_xpath(\'//*[@id=""id""]/p[1]/a[3]\').click()  # \xe5\x85\x8d\xe8\xb4\xb9\xe6\x8c\x91\xe6\x88\x98\n        sleep(1)\n    driver.find_element_by_link_text(\'\xe9\xa2\x86\xe5\x8f\x96\xe5\xa5\x96\xe5\x8a\xb1\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe9\x95\x96\xe8\xa1\x8c\xe5\xa4\xa9\xe4\xb8\x8b\ndef biao_xing_tian_xia():\n    driver.find_element_by_link_text(\'\xe9\x95\x96\xe8\xa1\x8c\xe5\xa4\xa9\xe4\xb8\x8b\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe6\x8a\xa4\xe9\x80\x81\xe5\xae\x8c\xe6\x88\x90\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe9\xa2\x86\xe5\x8f\x96\xe5\xa5\x96\xe5\x8a\xb1\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe6\x8a\xa4\xe9\x80\x81\xe6\x8a\xbc\xe9\x95\x96\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe5\x88\xb7\xe6\x96\xb0\xe6\x8a\xbc\xe9\x95\x96\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe5\x90\xaf\xe7\xa8\x8b\xe6\x8a\xa4\xe9\x80\x81\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe5\x88\xb7\xe6\x96\xb0\').click()\n    sleep(1)\n    for i in range(6, 12, 2):\n        driver.find_element_by_xpath(\n            \'//*[@id=""id""]/p/a[{}]\'.format(i)).click()  # \xe6\x8b\xa6\xe6\x88\xaa\n        sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe5\xb9\xbb\xe5\xa2\x83\ndef huan_jing():\n    driver.find_element_by_link_text(\'\xe5\xb9\xbb\xe5\xa2\x83\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe4\xb9\x90\xe6\x96\x97\xe6\x9d\x91\').click()\n    sleep(1)\n    for i in range(0, 5):\n        driver.find_element_by_xpath(\'//*[@id=""id""]/p/a[4]\').click()  # \xe6\x8b\xa6\xe6\x88\xaa\n        sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe9\xa3\x98\xe6\xb8\xba\xe5\xb9\xbb\xe5\xa2\x83\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe7\x94\xbb\xe5\x8d\xb7\xe8\xbf\xb7\xe8\xb8\xaa\ndef hua_juan_mi_zong():\n    driver.find_element_by_link_text(\'\xe7\x94\xbb\xe5\x8d\xb7\xe8\xbf\xb7\xe8\xb8\xaa\').click()\n    sleep(1)\n    for i in range(0, 5):\n        driver.find_element_by_link_text(\'\xe5\x87\x86\xe5\xa4\x87\xe5\xae\x8c\xe6\x88\x90\xe8\xbf\x9b\xe5\x85\xa5\xe6\x88\x98\xe6\x96\x97\').click()\n        sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe9\x97\xa8\xe6\xb4\xbe\xe9\x82\x80\xe8\xaf\xb7\xe8\xb5\x9b\ndef men_pai_yao_qing_sai():\n    driver.find_element_by_link_text(\'\xe9\x97\xa8\xe6\xb4\xbe\xe9\x82\x80\xe8\xaf\xb7\xe8\xb5\x9b\').click()\n    sleep(1)\n    for i in range(0, 5):\n        driver.find_element_by_link_text(\'\xe5\xbc\x80\xe5\xa7\x8b\xe6\x8c\x91\xe6\x88\x98\').click()\n        sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe9\x97\xa8\xe6\xb4\xbe\ndef men_pai():\n    driver.find_element_by_link_text(""\xe9\x97\xa8\xe6\xb4\xbe"").click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe9\xbe\x99\xe5\xa4\xb4\xe9\xa6\x99\').click()\n    sleep(1)\n    driver.find_element_by_xpath(\'//*[@id=""id""]/p[1]/a[1]\').click()  # \xe7\x82\xb9\xe7\x87\x83\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe9\x97\xa8\xe6\xb4\xbe\xe9\xa6\x96\xe9\xa1\xb5\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe7\x90\xbc\xe5\x8f\xb0\xe8\xa7\x82\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x9b\xe5\x85\xa5\xe6\x9c\xa8\xe6\xa1\xa9\xe8\xae\xad\xe7\xbb\x83\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x9b\xe5\x85\xa5\xe5\x90\x8c\xe9\x97\xa8\xe5\x88\x87\xe7\xa3\x8b\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe9\x97\xa8\xe6\xb4\xbe\xe9\xa6\x96\xe9\xa1\xb5\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe9\x87\x91\xe6\xae\xbf\').click()\n    sleep(1)\n    driver.find_element_by_xpath(\'//*[@id=""id""]/p[1]/a[1]\').click()\n    sleep(1)\n    driver.find_element_by_xpath(\'//*[@id=""id""]/p[1]/a[2]\').click()\n    sleep(1)\n    driver.find_element_by_xpath(\'//*[@id=""id""]/p[1]/a[4]\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe9\x97\xa8\xe6\xb4\xbe\xe9\xa6\x96\xe9\xa1\xb5\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe7\x8e\x89\xe8\x99\x9a\xe5\xae\xab\').click()\n    sleep(1)\n    try:\n        driver.find_element_by_link_text(\'\xe5\xae\x8c\xe6\x88\x90\').click()\n    except BaseException:\n        pass\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe6\xa2\xa6\xe6\x83\xb3\xe4\xb9\x8b\xe6\x97\x85\ndef meng_xiang_zhi_lv():\n    driver.find_element_by_link_text(\'\xe6\xa2\xa6\xe6\x83\xb3\xe4\xb9\x8b\xe6\x97\x85\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe6\x99\xae\xe9\x80\x9a\xe6\x97\x85\xe8\xa1\x8c\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe6\xa2\xa6\xe5\xb9\xbb\xe6\x97\x85\xe8\xa1\x8c\').click()\n    sleep(1)\n    driver.find_element_by_xpath(\'//*[@id=""id""]/p[1]/a[5]\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe4\xbb\xbb\xe5\x8a\xa1\ndef ren_wu():\n    driver.find_element_by_link_text(\'\xe4\xbb\xbb\xe5\x8a\xa1\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe4\xb8\x80\xe9\x94\xae\xe5\xae\x8c\xe6\x88\x90\xe4\xbb\xbb\xe5\x8a\xa1\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe6\xad\xa6\xe6\x9e\x97\xe5\xa4\xa7\xe4\xbc\x9a\ndef wu_lin_da_hui():\n    driver.find_element(\n        By.XPATH,\n        ""//a[contains(@href,\'fastSignWulin\')]"").click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe5\x88\x86\xe4\xba\xab\ndef share():\n    driver.find_element_by_link_text(\'\xe5\x88\x86\xe4\xba\xab\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe4\xb8\x80\xe9\x94\xae\xe5\x88\x86\xe4\xba\xab\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe9\xa2\x86\xe5\xa5\x96\ndef ling_jiang():\n    driver.find_element_by_link_text(\'\xe9\xa2\x86\xe5\xa5\x96\').click()\n    sleep(1)\n    for i in range(0, 2):\n        driver.find_element_by_xpath(\'//*[@id=""id""]/p[1]/a[1]\').click()\n        sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe7\xbe\xa4\xe9\x9b\x84\xe9\x80\x90\xe9\xb9\xbf\ndef qun_xiong_zhu_lu():\n    driver.find_element_by_link_text(\'\xe7\xbe\xa4\xe9\x9b\x84\xe9\x80\x90\xe9\xb9\xbf\').click()\n    sleep(1)\n    driver.find_element_by_xpath(\'//*[@id=""id""]/p[1]/a[1]\').click()  # \xe6\x8a\xa5\xe5\x90\x8d\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe9\xa2\x86\xe5\xa5\x96\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# # \xe4\xbc\x9a\xe6\xad\xa6\ndef hui_wu():\n    driver.find_element_by_link_text(\'\xe4\xbc\x9a\xe6\xad\xa6\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe5\x88\x9d\xe7\xba\xa7\xe8\xaf\x95\xe7\x82\xbc\xe5\x9c\xba\').click()\n    sleep(1)\n    for i in range(0, 6):\n        driver.find_element_by_link_text(\'\xe6\x8c\x91\xe6\x88\x98\').click()\n        sleep(1)\n    driver.find_element_by_link_text(\'\xe5\x86\xa0\xe5\x86\x9b\xe5\x8a\xa9\xe5\xa8\x81\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe6\x8c\x91\xe6\x88\x98\xe9\x99\x8c\xe7\x94\x9f\xe4\xba\xba\ndef mo_sheng_ren():\n    driver.find_element_by_link_text(\'\xe6\x96\x97\xe5\x8f\x8b\').click()\n    sleep(1)\n    driver.find_element_by_xpath(\'//*[@id=""id""]/a[7]\').click()\n    sleep(1)\n    driver.find_element_by_xpath(\' //*[@id=""id""]/a[13]\').click()\n    sleep(1)\n    driver.find_element_by_xpath(\' //*[@id=""id""]/a[14]\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe6\x89\xbe\xe8\x8f\x9c\xe8\x8f\x9c\xe5\x81\x9a\xe8\x8f\x9c\ndef zhao_cai_cai_zuo_cai():\n    driver.find_element_by_link_text(\'\xe6\x88\x91\xe7\x9a\x84\xe5\xb8\xae\xe6\xb4\xbe\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe5\xb8\xae\xe6\xb4\xbe\xe5\xae\x88\xe6\x8a\xa4\xe7\xa5\x9e\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe4\xba\xab\xe5\x8f\x97\xe8\x8f\x9c\xe8\x8f\x9c\xe5\xa4\xa7\xe9\xa4\x90\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe5\xb8\xae\xe6\xb4\xbe\xe5\xae\x88\xe6\x8a\xa4\xe7\xa5\x9e\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe6\x89\xbe\xe8\x8f\x9c\xe8\x8f\x9c\xe5\x81\x9a\xe8\x8f\x9c\').click()\n    sleep(1)\n    driver.find_element_by_link_text(\'\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xa7\xe4\xb9\x90\xe6\x96\x97\xe9\xa6\x96\xe9\xa1\xb5\').click()\n\n\n# \xe4\xb9\x90\xe6\x96\x97\xe5\xb8\xae\xe5\x8f\x8b\ndef flightBangYou():\n    driver.find_element_by_link_text(\'\xe5\xb8\xae\xe5\x8f\x8b\').click()\n    for i in range(6, 11):\n        driver.find_element_by_xpath(\'//*[@id=""id""]/a[{}]\'.format(i)).click()\n        sleep(1)\n\n\n# \xe6\x89\x80\xe6\x9c\x89\xe4\xbb\xbb\xe5\x8a\xa1\ndef All_Task():\n    login(URL, username, pwd)  # \xe7\x99\xbb\xe5\xbd\x95\n    sleep(1)\n    ling_qu_tu_di()  # \xe9\xa2\x86\xe5\x8f\x96\xe5\xbe\x92\xe5\xbc\x9f\xe7\xbb\x8f\xe9\xaa\x8c\n    mei_ri_jing_yan()  # \xe9\xa2\x86\xe5\x8f\x96\xe7\xbb\x8f\xe9\xaa\x8c\n    wu_lin_da_hui()  # \xe6\xad\xa6\xe6\x9e\x97\xe5\xa4\xa7\xe4\xbc\x9a\n    men_pai()  # \xe9\x97\xa8\xe6\xb4\xbe   \xe5\xae\x8c\xe6\x88\x90\xe4\xbb\xbb\xe5\x8a\xa1\n    flight()  # \xe4\xb9\x90\xe6\x96\x97\xe5\xa5\xbd\xe5\x8f\x8b\n    flightBangYou()  # \xe4\xb9\x90\xe6\x96\x97\xe5\xb8\xae\xe5\x8f\x8b\n    call_back()  # \xe9\x87\x8d\xe5\x9b\x9e\xe4\xb9\x90\xe6\x96\x97\n    dipan()  # \xe6\x8a\xa2\xe5\x9c\xb0\xe7\x9b\x98\n    xuyuan()  # \xe8\xae\xb8\xe6\x84\xbf\n    qun_xiong_zhu_lu()  # \xe7\xbe\xa4\xe9\x9b\x84\xe9\x80\x90\xe9\xb9\xbf\n    lilian()  # \xe5\x8e\x86\xe7\xbb\x83\n    gong()  # \xe5\x8d\x81\xe4\xba\x8c\xe5\xae\xab  \xe7\xbb\x93\xe6\x9d\x9f\n    flight_ta()  # \xe6\x96\x97\xe7\xa5\x9e\xe5\xa1\x94\n    tian_xia()  # \xe9\x97\xae\xe9\xbc\x8e\xe5\xa4\xa9\xe4\xb8\x8b\n    jin_ji_chang()  # \xe7\xab\x9e\xe6\x8a\x80\xe5\x9c\xba   #TODO \xe5\xbe\x85\xe8\xb0\x83\xe8\xaf\x95\n    biao_xing_tian_xia()  # \xe9\x95\x96\xe8\xa1\x8c\xe5\xa4\xa9\xe4\xb8\x8b\n    zhao_cai_cai_zuo_cai()  # \xe6\x89\xbe\xe8\x8f\x9c\xe8\x8f\x9c\xe5\x81\x9a\xe8\x8f\x9c\n    mo_sheng_ren()  # \xe6\x8c\x91\xe6\x88\x98\xe9\x99\x8c\xe7\x94\x9f\xe4\xba\xba\n    meng_xiang_zhi_lv()  # \xe6\xa2\xa6\xe6\x83\xb3\xe4\xb9\x8b\xe6\x97\x85\n    hua_juan_mi_zong()  # \xe7\x94\xbb\xe5\x8d\xb7\xe8\xbf\xb7\xe8\xb8\xaa\n    huan_jing()  # \xe5\xb9\xbb\xe5\xa2\x83\n    share()  # \xe5\x88\x86\xe4\xba\xab\n    ren_wu()  # \xe4\xbb\xbb\xe5\x8a\xa1\n    ling_jiang()  # \xe6\xb4\xbb\xe8\xb7\x83\xe5\xba\xa6\xe9\xa2\x86\xe5\xa5\x96\n\n\nif __name__ == ""__main__"":\n    All_Task()\n'"
TaoBao_Login/scan_login.py,0,"b""# -*- coding: utf-8 -*-\n# @Time    : 2019/4/24 13:48\n# @Author  : donlex\n# @Email   : donlex@qq.com\n# @Software: PyCharm 2018.1.4 (Professional Edition)\nfrom time import sleep\n\nfrom selenium import webdriver\ndriver = webdriver.Chrome()\ndriver.implicitly_wait(5)\ndef scan_login(url):\n    driver.get(url)\n    # \xe7\xad\x89\xe5\xbe\x85\xe6\x89\xab\xe7\xa0\x81\xe7\x99\xbb\xe5\xbd\x95\n    sleep(15)\n    # \xe8\xbf\x9b\xe5\x85\xa5\xe4\xb9\x8b\xe5\x90\x8e\xe5\xbc\x80\xe5\xa7\x8b\xe5\x85\xb6\xe4\xbb\x96\xe6\x93\x8d\xe4\xbd\x9c\n\nif __name__ == '__main__':\n    url = 'https://login.taobao.com/member/login.jhtml'\n    scan_login(url)"""
TaoBao_Login/selenium_login.py,0,"b""# -*- coding: utf-8 -*-\n# @Time    : 2019/4/24 12:11\n# @Author  : donlex\n# @Email   : donlex@qq.com\n# @Software: PyCharm 2018.1.4 (Professional Edition)\nimport re\nfrom selenium import webdriver\nfrom selenium.common.exceptions import TimeoutException\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\n\nimport datetime\nimport time\n\nKEYWORD = '\xe8\xb4\xa6\xe5\x8f\xb7'\nKEYWORD2 = '\xe5\xaf\x86\xe7\xa0\x81'\n\n\nclass taobao_spyder:\n    def __init__(self, url):\n        self.url = url\n        options = webdriver.ChromeOptions()\n        # \xe6\xad\xa4\xe6\xad\xa5\xe9\xaa\xa4\xe5\xbe\x88\xe9\x87\x8d\xe8\xa6\x81\xef\xbc\x8c\xe8\xae\xbe\xe7\xbd\xae\xe4\xb8\xba\xe5\xbc\x80\xe5\x8f\x91\xe8\x80\x85\xe6\xa8\xa1\xe5\xbc\x8f\xef\xbc\x8c\xe9\x98\xb2\xe6\xad\xa2\xe8\xa2\xab\xe7\xbd\x91\xe7\xab\x99\xe8\xaf\x86\xe5\x88\xab\xe5\x87\xba\xe6\x9d\xa5\xe4\xbd\xbf\xe7\x94\xa8\xe4\xba\x86Selenium\n        options.add_experimental_option(\n            'excludeSwitches', ['enable-automation'])\n        self.browser = webdriver.Chrome(options=options)\n        self.wait = WebDriverWait(self.browser, 10)\n\n    def login(self):\n        print('\xe5\x87\x86\xe5\xa4\x87\xe7\x99\xbb\xe9\x99\x86')\n        time.sleep(1)\n        self.browser.get(self.url)\n        # \xe7\x82\xb9\xe5\x87\xbb\xe5\xaf\x86\xe7\xa0\x81\xe7\x99\xbb\xe5\xbd\x95\n        self.browser.find_element_by_css_selector('.J_Quick2Static').click()\n        input = self.wait.until(\n            EC.presence_of_element_located(\n                (By.CSS_SELECTOR, '#TPL_username_1')))\n        input2 = self.wait.until(\n            EC.presence_of_element_located(\n                (By.CSS_SELECTOR, '#TPL_password_1')))\n        submit = self.wait.until(\n            EC.element_to_be_clickable(\n                (By.CSS_SELECTOR, '#J_SubmitStatic')))\n        submit.click()  # J_SelectAll1\n        input.send_keys(KEYWORD)  # J_SelectAll1 > div > label\n        input2.send_keys(KEYWORD2)\n        submit.click()\n        time.sleep(1)\n        input2 = self.wait.until(\n            EC.presence_of_element_located(\n                (By.CSS_SELECTOR, '#TPL_password_1')))\n        input2.send_keys(KEYWORD2)\n\n\nif __name__ == '__main__':\n    url = 'https://login.taobao.com/member/login.jhtml'\n    a = taobao_spyder(url)\n    a.login()\n"""
TaoBao_Login/weibo_login.py,0,"b'# -*- coding: utf-8 -*-\n# @Time    : 2019/4/24 12:26\n# @Author  : donlex\n# @Email   : donlex@qq.com\n# @Software: PyCharm 2018.1.4 (Professional Edition)\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\n\n#\xe5\xae\x9a\xe4\xb9\x89\xe4\xb8\x80\xe4\xb8\xaataobao\xe7\xb1\xbb\nclass taobao_infos:\n\n    #\xe5\xaf\xb9\xe8\xb1\xa1\xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\n    def __init__(self):\n        url = \'https://login.taobao.com/member/login.jhtml\'\n        self.url = url\n\n        options = webdriver.ChromeOptions()\n        options.add_experimental_option(""prefs"", {""profile.managed_default_content_settings.images"": 2}) # \xe4\xb8\x8d\xe5\x8a\xa0\xe8\xbd\xbd\xe5\x9b\xbe\xe7\x89\x87,\xe5\x8a\xa0\xe5\xbf\xab\xe8\xae\xbf\xe9\x97\xae\xe9\x80\x9f\xe5\xba\xa6\n        options.add_experimental_option(\'excludeSwitches\', [\'enable-automation\']) # \xe6\xad\xa4\xe6\xad\xa5\xe9\xaa\xa4\xe5\xbe\x88\xe9\x87\x8d\xe8\xa6\x81\xef\xbc\x8c\xe8\xae\xbe\xe7\xbd\xae\xe4\xb8\xba\xe5\xbc\x80\xe5\x8f\x91\xe8\x80\x85\xe6\xa8\xa1\xe5\xbc\x8f\xef\xbc\x8c\xe9\x98\xb2\xe6\xad\xa2\xe8\xa2\xab\xe5\x90\x84\xe5\xa4\xa7\xe7\xbd\x91\xe7\xab\x99\xe8\xaf\x86\xe5\x88\xab\xe5\x87\xba\xe6\x9d\xa5\xe4\xbd\xbf\xe7\x94\xa8\xe4\xba\x86Selenium\n\n        # self.browser = webdriver.Chrome(executable_path=chromedriver_path, options=options)\n        self.browser = webdriver.Chrome(options=options)\n        self.wait = WebDriverWait(self.browser, 10) #\xe8\xb6\x85\xe6\x97\xb6\xe6\x97\xb6\xe9\x95\xbf\xe4\xb8\xba10s\n\n\n    #\xe7\x99\xbb\xe5\xbd\x95\xe6\xb7\x98\xe5\xae\x9d\n    def login(self):\n\n        # \xe6\x89\x93\xe5\xbc\x80\xe7\xbd\x91\xe9\xa1\xb5\n        self.browser.get(self.url)\n\n        # \xe7\xad\x89\xe5\xbe\x85 \xe5\xaf\x86\xe7\xa0\x81\xe7\x99\xbb\xe5\xbd\x95\xe9\x80\x89\xe9\xa1\xb9 \xe5\x87\xba\xe7\x8e\xb0\n        password_login = self.wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, \'.qrcode-login > .login-links > .forget-pwd\')))\n        password_login.click()\n\n        # \xe7\xad\x89\xe5\xbe\x85 \xe5\xbe\xae\xe5\x8d\x9a\xe7\x99\xbb\xe5\xbd\x95\xe9\x80\x89\xe9\xa1\xb9 \xe5\x87\xba\xe7\x8e\xb0\n        weibo_login = self.wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, \'.weibo-login\')))\n        weibo_login.click()\n\n        # \xe7\xad\x89\xe5\xbe\x85 \xe5\xbe\xae\xe5\x8d\x9a\xe8\xb4\xa6\xe5\x8f\xb7 \xe5\x87\xba\xe7\x8e\xb0\n        weibo_user = self.wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, \'.username > .W_input\')))\n        weibo_user.send_keys(weibo_username)\n\n        # \xe7\xad\x89\xe5\xbe\x85 \xe5\xbe\xae\xe5\x8d\x9a\xe5\xaf\x86\xe7\xa0\x81 \xe5\x87\xba\xe7\x8e\xb0\n        weibo_pwd = self.wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, \'.password > .W_input\')))\n        weibo_pwd.send_keys(weibo_password)\n\n        # \xe7\xad\x89\xe5\xbe\x85 \xe7\x99\xbb\xe5\xbd\x95\xe6\x8c\x89\xe9\x92\xae \xe5\x87\xba\xe7\x8e\xb0\n        submit = self.wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, \'.btn_tip > a > span\')))\n        submit.click()\n\n        # \xe7\x9b\xb4\xe5\x88\xb0\xe8\x8e\xb7\xe5\x8f\x96\xe5\x88\xb0\xe6\xb7\x98\xe5\xae\x9d\xe4\xbc\x9a\xe5\x91\x98\xe6\x98\xb5\xe7\xa7\xb0\xe6\x89\x8d\xe8\x83\xbd\xe7\xa1\xae\xe5\xae\x9a\xe6\x98\xaf\xe7\x99\xbb\xe5\xbd\x95\xe6\x88\x90\xe5\x8a\x9f\n        taobao_name = self.wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, \'.site-nav-bd > ul.site-nav-bd-l > li#J_SiteNavLogin > div.site-nav-menu-hd > div.site-nav-user > a.site-nav-login-info-nick \')))\n        # \xe8\xbe\x93\xe5\x87\xba\xe6\xb7\x98\xe5\xae\x9d\xe6\x98\xb5\xe7\xa7\xb0\n        print(taobao_name.text)\n\n\n\n\n# \xe4\xbd\xbf\xe7\x94\xa8\xe6\x95\x99\xe7\xa8\x8b\xef\xbc\x9a\n# 1.\xe4\xb8\x8b\xe8\xbd\xbdchrome\xe6\xb5\x8f\xe8\xa7\x88\xe5\x99\xa8:https://www.google.com/chrome/\n# 2.\xe6\x9f\xa5\xe7\x9c\x8bchrome\xe6\xb5\x8f\xe8\xa7\x88\xe5\x99\xa8\xe7\x9a\x84\xe7\x89\x88\xe6\x9c\xac\xe5\x8f\xb7\xef\xbc\x8c\xe4\xb8\x8b\xe8\xbd\xbd\xe5\xaf\xb9\xe5\xba\x94\xe7\x89\x88\xe6\x9c\xac\xe5\x8f\xb7\xe7\x9a\x84chromedriver\xe9\xa9\xb1\xe5\x8a\xa8:http://chromedriver.storage.googleapis.com/index.html\n# 3.\xe5\xa1\xab\xe5\x86\x99chromedriver\xe7\x9a\x84\xe7\xbb\x9d\xe5\xaf\xb9\xe8\xb7\xaf\xe5\xbe\x84\n# 4.\xe6\x89\xa7\xe8\xa1\x8c\xe5\x91\xbd\xe4\xbb\xa4pip install selenium\n# 5.\xe6\x89\x93\xe5\xbc\x80https://account.weibo.com/set/bindsns/bindtaobao\xe5\xb9\xb6\xe9\x80\x9a\xe8\xbf\x87\xe5\xbe\xae\xe5\x8d\x9a\xe7\xbb\x91\xe5\xae\x9a\xe6\xb7\x98\xe5\xae\x9d\xe8\xb4\xa6\xe5\x8f\xb7\xe5\xaf\x86\xe7\xa0\x81\n\nif __name__ == ""__main__"":\n\n    chromedriver_path = ""/Users/bird/Desktop/chromedriver"" #\xe6\x94\xb9\xe6\x88\x90\xe4\xbd\xa0\xe7\x9a\x84chromedriver\xe7\x9a\x84\xe5\xae\x8c\xe6\x95\xb4\xe8\xb7\xaf\xe5\xbe\x84\xe5\x9c\xb0\xe5\x9d\x80\n    weibo_username = ""\xe8\xb4\xa6\xe5\x8f\xb7"" #\xe6\x94\xb9\xe6\x88\x90\xe4\xbd\xa0\xe7\x9a\x84\xe5\xbe\xae\xe5\x8d\x9a\xe8\xb4\xa6\xe5\x8f\xb7\n    weibo_password = ""\xe5\xaf\x86\xe7\xa0\x81"" #\xe6\x94\xb9\xe6\x88\x90\xe4\xbd\xa0\xe7\x9a\x84\xe5\xbe\xae\xe5\x8d\x9a\xe5\xaf\x86\xe7\xa0\x81\n\n    a = taobao_infos()\n    a.login() #\xe7\x99\xbb\xe5\xbd\x95'"
TouNaoWangZhe/TouNao.py,0,"b'\xef\xbb\xbfimport json\nimport time\nimport requests\nfrom bs4 import BeautifulSoup as BS\nfrom urllib import parse\n\n\ndef get_appinf(filename):\n    f = open(filename, \'r\', encoding=\'utf-8\')\n    try:\n        j = json.loads(f.read())\n        #\xe5\x88\xa4\xe6\x96\xad\xe6\x95\xb0\xe6\x8d\xae\xe6\x96\x87\xe4\xbb\xb6\xe6\x98\xaf\xe5\x90\xa6\xe6\x9c\x89\xe9\xa2\x98\xe7\x9b\xae\xe5\x92\x8c\xe9\x80\x89\xe9\xa1\xb9\n        if \'quiz\' in j[\'data\'] and \'options\' in j[\'data\']:\n            num = j[\'data\'][\'num\']\n            quiz = j[\'data\'][\'quiz\']\n            print((\'\xe7\xac\xac\'+str(num)+\'\xe9\xa2\x98\xef\xbc\x9a\'+quiz).center(50,\'*\')+\'\\n\')\n            cho = j[\'data\'][\'options\']\n        else:\n            pass\n        return quiz,cho\n    except:\n        pass\n        print(\'\xe8\xbf\x98\xe6\xb2\xa1\xe5\xbc\x80\xe5\xa7\x8b\xe5\x91\xa2**********\')\n    f.close()\n\n\n\n\ndef begin(filename):\n    f = open(filename, \'r\', encoding=\'utf-8\')\n    try:\n        j = json.loads(f.read())\n        # \xe5\x88\xa4\xe6\x96\xad\xe6\x95\xb0\xe6\x8d\xae\xe6\x96\x87\xe4\xbb\xb6\xe6\x98\xaf\xe5\x90\xa6\xe6\x9c\x89\xe9\xa2\x98\xe7\x9b\xae\xe5\x92\x8c\xe9\x80\x89\xe9\xa1\xb9\n        if \'quiz\' in j[\'data\'] and \'options\' in j[\'data\']:\n            num = j[\'data\'][\'num\']\n            quiz = j[\'data\'][\'quiz\']\n            print((\'\xe7\xac\xac\' + str(num) + \'\xe9\xa2\x98\xef\xbc\x9a\' + quiz).center(50, \'*\') + \'\\n\')\n            cho = j[\'data\'][\'options\']\n            pagenum = [0, 10, 20]\n            ans = []\n            A = 0\n            B = 0\n            C = 0\n            D = 0\n            for i in pagenum:\n                url = \'http://www.baidu.com/s?ie=utf-8&f=8&rsv_bp=0&rsv_idx=1&tn=baidu&wd=\' + quiz[:-1] + \'&pn={}\'.format(i)\n                wb_data = requests.get(url)\n                wb_data.encoding = \'utf-8\'\n                content = wb_data.text\n                for index,choice in enumerate(cho):\n                    strnum = content.count(choice)\n                    # print(choice + "" : {}"".format(strnum))\n                    ans.append(strnum)\n            for index,selection in enumerate(ans):\n                index = (index % 4)\n                if index == 0:\n                    D += selection\n                elif index == 1:\n                    C += selection\n                elif index == 2:\n                    B += selection\n                elif index == 3:\n                    A += selection\n            number = [D, C, B, A]\n            for name, count in zip(cho, number):\n                print(name, count)\n            index = number.index(max(number))\n            print(\'\\033[32;0m\')\n            print((""    \xe5\xba\x94\xe8\xaf\xa5\xe9\x80\x89\xe7\xac\xac    "" + str((index + 1)) + ""  \xe4\xb8\xaa     "" + str(cho[index])).center(50, \'*\'))\n            print(\'\\033[0m \')\n        else:\n            pass\n            print(\'  -  \'*15)\n    except:\n        pass\n    f.close()\n\nif __name__ == \'__main__\':\n    while True:\n        begin(\'D:/quiz/body.txt\')\n        time.sleep(1)'"
WeChat_Robot/qingyunke.py,0,"b""# -*- coding: utf-8 -*-\n# @Time    : 2019/7/3 14:23\n# @Author  : donlex\n# @Email   : donlex@qq.com\n# @Software: PyCharm 2018.1.4 (Professional Edition)\nimport itchat\nimport requests\n\n\ndef get_response(msg):\n    apiUrl = 'http://api.qingyunke.com/api.php?key=free&appid=0&msg={}'.format(\n        msg)\n    # \xe5\x8f\x91\xe9\x80\x81post\xe8\xaf\xb7\xe6\xb1\x82\n    r = requests.post(apiUrl).json()\n    # \xe6\x9b\xbf\xe6\x8d\xa2br\xe5\xad\x97\xe7\xac\xa6\xe4\xb8\xb2\n    response = r.get('content').replace('{br}', '\\n')\n    return response\n\n# \xe7\x94\xa8\xe4\xba\x8e\xe6\x8e\xa5\xe6\x94\xb6\xe6\x9d\xa5\xe8\x87\xaa\xe6\x9c\x8b\xe5\x8f\x8b\xe9\x97\xb4\xe7\x9a\x84\xe5\xaf\xb9\xe8\xaf\x9d\xe6\xb6\x88\xe6\x81\xaf\n# \xe5\xa6\x82\xe6\x9e\x9c\xe4\xb8\x8d\xe7\x94\xa8\xe8\xbf\x99\xe4\xb8\xaa\xef\xbc\x8c\xe6\x9c\x8b\xe5\x8f\x8b\xe5\x8f\x91\xe7\x9a\x84\xe6\xb6\x88\xe6\x81\xaf\xe4\xbe\xbf\xe4\xb8\x8d\xe4\xbc\x9a\xe8\x87\xaa\xe5\x8a\xa8\xe5\x9b\x9e\xe5\xa4\x8d\n\n\n@itchat.msg_register(itchat.content.TEXT)\ndef print_content(msg):\n    return get_response(msg['Text'])\n\n\nif __name__ == '__main__':\n    itchat.auto_login(True)\n    itchat.run()\n"""
numpy_calc/calc.py,0,"b'# -*- coding: utf-8 -*-\n\n# Form implementation generated from reading ui file \'calc.ui\'\n#\n# Created by: PyQt5 UI code generator 5.11.3\n#\n# WARNING! All changes made in this file will be lost!\n\nfrom PyQt5 import QtCore, QtGui, QtWidgets\n\nclass Ui_MainWindow(object):\n    def setupUi(self, MainWindow):\n        MainWindow.setObjectName(""MainWindow"")\n        MainWindow.resize(800, 600)\n        MainWindow.setMaximumSize(QtCore.QSize(800, 635))\n        font = QtGui.QFont()\n        font.setPointSize(14)\n        font.setBold(False)\n        font.setWeight(50)\n        MainWindow.setFont(font)\n        self.centralwidget = QtWidgets.QWidget(MainWindow)\n        self.centralwidget.setObjectName(""centralwidget"")\n        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)\n        self.gridLayoutWidget.setGeometry(QtCore.QRect(60, 140, 431, 381))\n        self.gridLayoutWidget.setObjectName(""gridLayoutWidget"")\n        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)\n        self.gridLayout.setContentsMargins(0, 0, 0, 0)\n        self.gridLayout.setObjectName(""gridLayout"")\n        self.lineEdit_row1 = QtWidgets.QLineEdit(self.gridLayoutWidget)\n        self.lineEdit_row1.setObjectName(""lineEdit_row1"")\n        self.gridLayout.addWidget(self.lineEdit_row1, 1, 1, 1, 1)\n        self.lineEdit_2 = QtWidgets.QLineEdit(self.gridLayoutWidget)\n        self.lineEdit_2.setObjectName(""lineEdit_2"")\n        self.gridLayout.addWidget(self.lineEdit_2, 2, 1, 1, 1)\n        self.label_4 = QtWidgets.QLabel(self.gridLayoutWidget)\n        self.label_4.setObjectName(""label_4"")\n        self.gridLayout.addWidget(self.label_4, 3, 0, 1, 1)\n        self.label_2 = QtWidgets.QLabel(self.gridLayoutWidget)\n        self.label_2.setObjectName(""label_2"")\n        self.gridLayout.addWidget(self.label_2, 1, 0, 1, 1)\n        self.label = QtWidgets.QLabel(self.gridLayoutWidget)\n        self.label.setObjectName(""label"")\n        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)\n        self.label_3 = QtWidgets.QLabel(self.gridLayoutWidget)\n        self.label_3.setObjectName(""label_3"")\n        self.gridLayout.addWidget(self.label_3, 2, 0, 1, 1)\n        self.lineEdit_1 = QtWidgets.QLineEdit(self.gridLayoutWidget)\n        self.lineEdit_1.setObjectName(""lineEdit_1"")\n        self.gridLayout.addWidget(self.lineEdit_1, 0, 1, 1, 1)\n        self.lineEdit_row2 = QtWidgets.QLineEdit(self.gridLayoutWidget)\n        self.lineEdit_row2.setObjectName(""lineEdit_row2"")\n        self.gridLayout.addWidget(self.lineEdit_row2, 3, 1, 1, 1)\n        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)\n        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(520, 140, 221, 381))\n        self.gridLayoutWidget_2.setObjectName(""gridLayoutWidget_2"")\n        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)\n        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)\n        self.gridLayout_2.setObjectName(""gridLayout_2"")\n        self.btn_clear = QtWidgets.QPushButton(self.gridLayoutWidget_2)\n        self.btn_clear.setObjectName(""btn_clear"")\n        self.gridLayout_2.addWidget(self.btn_clear, 0, 0, 1, 1)\n        self.btn_dot = QtWidgets.QPushButton(self.gridLayoutWidget_2)\n        self.btn_dot.setObjectName(""btn_dot"")\n        self.gridLayout_2.addWidget(self.btn_dot, 4, 0, 1, 1)\n        self.btn_t = QtWidgets.QPushButton(self.gridLayoutWidget_2)\n        self.btn_t.setObjectName(""btn_t"")\n        self.gridLayout_2.addWidget(self.btn_t, 3, 0, 1, 1)\n        self.btn_det = QtWidgets.QPushButton(self.gridLayoutWidget_2)\n        self.btn_det.setObjectName(""btn_det"")\n        self.gridLayout_2.addWidget(self.btn_det, 1, 0, 1, 1)\n        self.btn_inv = QtWidgets.QPushButton(self.gridLayoutWidget_2)\n        self.btn_inv.setObjectName(""btn_inv"")\n        self.gridLayout_2.addWidget(self.btn_inv, 2, 0, 1, 1)\n        self.btn_eigvalue = QtWidgets.QPushButton(self.gridLayoutWidget_2)\n        self.btn_eigvalue.setObjectName(""btn_eigvalue"")\n        self.gridLayout_2.addWidget(self.btn_eigvalue, 6, 0, 1, 1)\n        self.btn_solve = QtWidgets.QPushButton(self.gridLayoutWidget_2)\n        self.btn_solve.setObjectName(""btn_solve"")\n        self.gridLayout_2.addWidget(self.btn_solve, 5, 0, 1, 1)\n        self.btn_var = QtWidgets.QPushButton(self.gridLayoutWidget_2)\n        self.btn_var.setObjectName(""btn_var"")\n        self.gridLayout_2.addWidget(self.btn_var, 7, 0, 1, 1)\n        self.label_5 = QtWidgets.QLabel(self.centralwidget)\n        self.label_5.setGeometry(QtCore.QRect(60, 480, 351, 61))\n        self.label_5.setObjectName(""label_5"")\n        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)\n        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(60, 10, 681, 131))\n        self.horizontalLayoutWidget.setObjectName(""horizontalLayoutWidget"")\n        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)\n        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)\n        self.horizontalLayout.setObjectName(""horizontalLayout"")\n        self.textEdit_result1 = QtWidgets.QTextEdit(self.horizontalLayoutWidget)\n        self.textEdit_result1.setObjectName(""textEdit_result1"")\n        self.horizontalLayout.addWidget(self.textEdit_result1)\n        self.textEdit_result2 = QtWidgets.QTextEdit(self.horizontalLayoutWidget)\n        self.textEdit_result2.setObjectName(""textEdit_result2"")\n        self.horizontalLayout.addWidget(self.textEdit_result2)\n        self.label_6 = QtWidgets.QLabel(self.centralwidget)\n        self.label_6.setGeometry(QtCore.QRect(540, 560, 54, 12))\n        self.label_6.setObjectName(""label_6"")\n        MainWindow.setCentralWidget(self.centralwidget)\n        self.menubar = QtWidgets.QMenuBar(MainWindow)\n        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 23))\n        self.menubar.setObjectName(""menubar"")\n        self.menuHelp = QtWidgets.QMenu(self.menubar)\n        self.menuHelp.setObjectName(""menuHelp"")\n        MainWindow.setMenuBar(self.menubar)\n        self.statusbar = QtWidgets.QStatusBar(MainWindow)\n        self.statusbar.setObjectName(""statusbar"")\n        MainWindow.setStatusBar(self.statusbar)\n        self.actionAbout = QtWidgets.QAction(MainWindow)\n        self.actionAbout.setObjectName(""actionAbout"")\n        self.menuHelp.addAction(self.actionAbout)\n        self.menubar.addAction(self.menuHelp.menuAction())\n\n        self.retranslateUi(MainWindow)\n        QtCore.QMetaObject.connectSlotsByName(MainWindow)\n\n    def retranslateUi(self, MainWindow):\n        _translate = QtCore.QCoreApplication.translate\n        MainWindow.setWindowTitle(_translate(""MainWindow"", ""MainWindow""))\n        self.label_4.setText(_translate(""MainWindow"", ""\xe8\xa1\x8c,\xe5\x88\x97""))\n        self.label_2.setText(_translate(""MainWindow"", ""\xe8\xa1\x8c,\xe5\x88\x97""))\n        self.label.setText(_translate(""MainWindow"", ""\xe7\x9f\xa9\xe9\x98\xb5\xe4\xb8\x80""))\n        self.label_3.setText(_translate(""MainWindow"", ""\xe7\x9f\xa9\xe9\x98\xb5\xe4\xba\x8c""))\n        self.btn_clear.setText(_translate(""MainWindow"", ""\xe5\xbd\x92\xe9\x9b\xb6""))\n        self.btn_dot.setText(_translate(""MainWindow"", ""\xe7\x9f\xa9\xe9\x98\xb5\xe4\xb9\x98\xe6\xb3\x95""))\n        self.btn_t.setText(_translate(""MainWindow"", ""\xe8\xbd\xac\xe7\xbd\xae""))\n        self.btn_det.setText(_translate(""MainWindow"", ""\xe8\xa1\x8c\xe5\x88\x97\xe5\xbc\x8f""))\n        self.btn_inv.setText(_translate(""MainWindow"", ""\xe7\x9f\xa9\xe9\x98\xb5\xe7\x9a\x84\xe9\x80\x86""))\n        self.btn_eigvalue.setText(_translate(""MainWindow"", ""\xe7\x89\xb9\xe5\xbe\x81\xe5\x80\xbc""))\n        self.btn_solve.setText(_translate(""MainWindow"", ""\xe8\xa7\xa3\xe7\x9f\xa9\xe9\x98\xb5\xe6\x96\xb9\xe7\xa8\x8b""))\n        self.btn_var.setText(_translate(""MainWindow"", ""\xe6\x96\xb9\xe5\xb7\xae""))\n        self.label_5.setText(_translate(""MainWindow"", ""\xe7\x9f\xa9\xe9\x98\xb5\xef\xbc\x9a\xe4\xbb\x8e\xe5\xb7\xa6\xe5\x88\xb0\xe5\x8f\xb3\xe4\xbe\x9d\xe6\xac\xa1\xe8\xbe\x93\xe5\x85\xa5,\xe9\x80\x97\xe5\x8f\xb7\xe9\x9a\x94\xe5\xbc\x80\\n""\n""\xe8\xa1\x8c\xe5\x88\x97\xef\xbc\x9a\xe7\x94\xa8\xe9\x80\x97\xe5\x8f\xb7\xe9\x9a\x94\xe5\xbc\x80,\xe4\xbe\x8b\xe5\xa6\x82:3,4""))\n        self.textEdit_result1.setHtml(_translate(""MainWindow"", ""<!DOCTYPE HTML PUBLIC \\""-//W3C//DTD HTML 4.0//EN\\"" \\""http://www.w3.org/TR/REC-html40/strict.dtd\\"">\\n""\n""<html><head><meta name=\\""qrichtext\\"" content=\\""1\\"" /><style type=\\""text/css\\"">\\n""\n""p, li { white-space: pre-wrap; }\\n""\n""</style></head><body style=\\"" font-family:\\\'SimSun\\\'; font-size:14pt; font-weight:400; font-style:normal;\\"">\\n""\n""<p align=\\""center\\"" style=\\"" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\\"">\xe7\x9f\xa9\xe9\x98\xb5\xe4\xb8\x80\xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x9c</p></body></html>""))\n        self.textEdit_result2.setHtml(_translate(""MainWindow"", ""<!DOCTYPE HTML PUBLIC \\""-//W3C//DTD HTML 4.0//EN\\"" \\""http://www.w3.org/TR/REC-html40/strict.dtd\\"">\\n""\n""<html><head><meta name=\\""qrichtext\\"" content=\\""1\\"" /><style type=\\""text/css\\"">\\n""\n""p, li { white-space: pre-wrap; }\\n""\n""</style></head><body style=\\"" font-family:\\\'SimSun\\\'; font-size:14pt; font-weight:400; font-style:normal;\\"">\\n""\n""<p align=\\""center\\"" style=\\"" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\\"">\xe7\x9f\xa9\xe9\x98\xb5\xe4\xba\x8c\xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x9c</p></body></html>""))\n        self.label_6.setText(_translate(""MainWindow"", ""TextLabel""))\n        self.menuHelp.setTitle(_translate(""MainWindow"", ""Help""))\n        self.actionAbout.setText(_translate(""MainWindow"", ""About""))\n\n'"
numpy_calc/numpy_calc.py,14,"b'# -*- coding: utf-8 -*-\n#\n# Form implementation generated from reading ui file \'calc.ui\'\n#\n# Created by: PyQt5 UI code generator 5.10.1\n#\n# WARNING! All changes made in this file will be lost!\n#\n#\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n# Author: Don Lex\n# \xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\x8f\xb7:Python\xe7\xbb\xbf\xe6\xb4\xb2\n# \xe6\xac\xa2\xe8\xbf\x8e\xe4\xba\xa4\xe6\xb5\x81\xe8\xae\xa8\xe8\xae\xba\n# \xe5\xbc\x95\xe7\x94\xa8\xe4\xbb\xa3\xe7\xa0\x81\xe8\xaf\xb7\xe6\xb3\xa8\xe6\x98\x8e\xe5\x87\xba\xe5\xa4\x84,\xe8\xb0\xa2\xe8\xb0\xa2\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n# \xe7\xbc\x96\xe8\xaf\x91\xe7\x8e\xaf\xe5\xa2\x83:\n# python       3.5.4\n# numpy        1.14.2\n# PyQt5        5.10.1\n# PyInstaller  3.3.1\n# PyQt5-sip    4.19.12\n# pyqt5-tools  5.9.0\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\nimport sys\n\nfrom PyQt5 import QtCore, QtGui, QtWidgets\nfrom PyQt5.QtWidgets import QMessageBox, QApplication\nimport numpy as np\nfrom numpy.linalg import det, inv, solve\n\n\nclass Ui_MainWindow(object):\n    def setupUi(self, MainWindow):\n        MainWindow.setObjectName(""MainWindow"")\n        MainWindow.resize(800, 600)\n        MainWindow.setMaximumSize(QtCore.QSize(800, 635))\n        font = QtGui.QFont()\n        font.setPointSize(14)\n        font.setBold(False)\n        font.setWeight(50)\n        MainWindow.setFont(font)\n        self.centralwidget = QtWidgets.QWidget(MainWindow)\n        self.centralwidget.setObjectName(""centralwidget"")\n        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)\n        self.gridLayoutWidget.setGeometry(QtCore.QRect(60, 140, 431, 381))\n        self.gridLayoutWidget.setObjectName(""gridLayoutWidget"")\n        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)\n        self.gridLayout.setContentsMargins(0, 0, 0, 0)\n        self.gridLayout.setObjectName(""gridLayout"")\n        self.lineEdit_row1 = QtWidgets.QLineEdit(self.gridLayoutWidget)\n        self.lineEdit_row1.setObjectName(""lineEdit_row1"")\n        self.gridLayout.addWidget(self.lineEdit_row1, 1, 1, 1, 1)\n        self.lineEdit_2 = QtWidgets.QLineEdit(self.gridLayoutWidget)\n        self.lineEdit_2.setObjectName(""lineEdit_2"")\n        self.gridLayout.addWidget(self.lineEdit_2, 2, 1, 1, 1)\n        self.label_4 = QtWidgets.QLabel(self.gridLayoutWidget)\n        self.label_4.setObjectName(""label_4"")\n        self.gridLayout.addWidget(self.label_4, 3, 0, 1, 1)\n        self.label_2 = QtWidgets.QLabel(self.gridLayoutWidget)\n        self.label_2.setObjectName(""label_2"")\n        self.gridLayout.addWidget(self.label_2, 1, 0, 1, 1)\n        self.label = QtWidgets.QLabel(self.gridLayoutWidget)\n        self.label.setObjectName(""label"")\n        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)\n        self.label_3 = QtWidgets.QLabel(self.gridLayoutWidget)\n        self.label_3.setObjectName(""label_3"")\n        self.gridLayout.addWidget(self.label_3, 2, 0, 1, 1)\n        self.lineEdit_1 = QtWidgets.QLineEdit(self.gridLayoutWidget)\n        self.lineEdit_1.setObjectName(""lineEdit_1"")\n        self.gridLayout.addWidget(self.lineEdit_1, 0, 1, 1, 1)\n        self.lineEdit_row2 = QtWidgets.QLineEdit(self.gridLayoutWidget)\n        self.lineEdit_row2.setObjectName(""lineEdit_row2"")\n        self.gridLayout.addWidget(self.lineEdit_row2, 3, 1, 1, 1)\n        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)\n        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(520, 140, 221, 381))\n        self.gridLayoutWidget_2.setObjectName(""gridLayoutWidget_2"")\n        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)\n        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)\n        self.gridLayout_2.setObjectName(""gridLayout_2"")\n        self.btn_clear = QtWidgets.QPushButton(self.gridLayoutWidget_2)\n        self.btn_clear.setObjectName(""btn_clear"")\n        self.gridLayout_2.addWidget(self.btn_clear, 0, 0, 1, 1)\n        self.btn_dot = QtWidgets.QPushButton(self.gridLayoutWidget_2)\n        self.btn_dot.setObjectName(""btn_dot"")\n        self.gridLayout_2.addWidget(self.btn_dot, 4, 0, 1, 1)\n        self.btn_t = QtWidgets.QPushButton(self.gridLayoutWidget_2)\n        self.btn_t.setObjectName(""btn_t"")\n        self.gridLayout_2.addWidget(self.btn_t, 3, 0, 1, 1)\n        self.btn_det = QtWidgets.QPushButton(self.gridLayoutWidget_2)\n        self.btn_det.setObjectName(""btn_det"")\n        self.gridLayout_2.addWidget(self.btn_det, 1, 0, 1, 1)\n        self.btn_inv = QtWidgets.QPushButton(self.gridLayoutWidget_2)\n        self.btn_inv.setObjectName(""btn_inv"")\n        self.gridLayout_2.addWidget(self.btn_inv, 2, 0, 1, 1)\n        self.btn_eigvalue = QtWidgets.QPushButton(self.gridLayoutWidget_2)\n        self.btn_eigvalue.setObjectName(""btn_eigvalue"")\n        self.gridLayout_2.addWidget(self.btn_eigvalue, 6, 0, 1, 1)\n        self.btn_solve = QtWidgets.QPushButton(self.gridLayoutWidget_2)\n        self.btn_solve.setObjectName(""btn_solve"")\n        self.gridLayout_2.addWidget(self.btn_solve, 5, 0, 1, 1)\n        self.btn_var = QtWidgets.QPushButton(self.gridLayoutWidget_2)\n        self.btn_var.setObjectName(""btn_var"")\n        self.gridLayout_2.addWidget(self.btn_var, 7, 0, 1, 1)\n        self.label_5 = QtWidgets.QLabel(self.centralwidget)\n        self.label_5.setGeometry(QtCore.QRect(60, 480, 351, 61))\n        self.label_5.setObjectName(""label_5"")\n        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)\n        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(60, 10, 681, 131))\n        self.horizontalLayoutWidget.setObjectName(""horizontalLayoutWidget"")\n        self.horizontalLayout = QtWidgets.QHBoxLayout(\n            self.horizontalLayoutWidget)\n        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)\n        self.horizontalLayout.setObjectName(""horizontalLayout"")\n        self.textEdit_result1 = QtWidgets.QTextEdit(\n            self.horizontalLayoutWidget)\n        self.textEdit_result1.setObjectName(""textEdit_result1"")\n        self.horizontalLayout.addWidget(self.textEdit_result1)\n        self.textEdit_result2 = QtWidgets.QTextEdit(\n            self.horizontalLayoutWidget)\n        self.textEdit_result2.setObjectName(""textEdit_result2"")\n        self.horizontalLayout.addWidget(self.textEdit_result2)\n        self.label_6 = QtWidgets.QLabel(self.centralwidget)\n        self.label_6.setGeometry(QtCore.QRect(540, 560, 54, 12))\n        self.label_6.setObjectName(""label_6"")\n        MainWindow.setCentralWidget(self.centralwidget)\n        self.menubar = QtWidgets.QMenuBar(MainWindow)\n        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 23))\n        self.menubar.setObjectName(""menubar"")\n        self.menuHelp = QtWidgets.QMenu(self.menubar)\n        self.menuHelp.setObjectName(""menuHelp"")\n        MainWindow.setMenuBar(self.menubar)\n        self.statusbar = QtWidgets.QStatusBar(MainWindow)\n        self.statusbar.setObjectName(""statusbar"")\n        MainWindow.setStatusBar(self.statusbar)\n        self.actionAbout = QtWidgets.QAction(MainWindow)\n        self.actionAbout.setObjectName(""actionAbout"")\n        self.menuHelp.addAction(self.actionAbout)\n        self.menubar.addAction(self.menuHelp.menuAction())\n\n        self.retranslateUi(MainWindow)\n        QtCore.QMetaObject.connectSlotsByName(MainWindow)\n\n    def retranslateUi(self, MainWindow):\n        _translate = QtCore.QCoreApplication.translate\n        MainWindow.setWindowTitle(_translate(""MainWindow"", ""MainWindow""))\n        self.label_4.setText(_translate(""MainWindow"", ""\xe8\xa1\x8c,\xe5\x88\x97""))\n        self.label_2.setText(_translate(""MainWindow"", ""\xe8\xa1\x8c,\xe5\x88\x97""))\n        self.label.setText(_translate(""MainWindow"", ""\xe7\x9f\xa9\xe9\x98\xb5\xe4\xb8\x80""))\n        self.label_3.setText(_translate(""MainWindow"", ""\xe7\x9f\xa9\xe9\x98\xb5\xe4\xba\x8c""))\n        self.btn_clear.setText(_translate(""MainWindow"", ""\xe5\xbd\x92\xe9\x9b\xb6""))\n        self.btn_dot.setText(_translate(""MainWindow"", ""\xe7\x9f\xa9\xe9\x98\xb5\xe4\xb9\x98\xe6\xb3\x95""))\n        self.btn_t.setText(_translate(""MainWindow"", ""\xe8\xbd\xac\xe7\xbd\xae""))\n        self.btn_det.setText(_translate(""MainWindow"", ""\xe8\xa1\x8c\xe5\x88\x97\xe5\xbc\x8f""))\n        self.btn_inv.setText(_translate(""MainWindow"", ""\xe7\x9f\xa9\xe9\x98\xb5\xe7\x9a\x84\xe9\x80\x86""))\n        self.btn_eigvalue.setText(_translate(""MainWindow"", ""\xe7\x89\xb9\xe5\xbe\x81\xe5\x80\xbc""))\n        self.btn_solve.setText(_translate(""MainWindow"", ""\xe8\xa7\xa3\xe7\x9f\xa9\xe9\x98\xb5\xe6\x96\xb9\xe7\xa8\x8b""))\n        self.btn_var.setText(_translate(""MainWindow"", ""\xe6\x96\xb9\xe5\xb7\xae""))\n        self.label_5.setText(_translate(""MainWindow"", ""\xe7\x9f\xa9\xe9\x98\xb5\xef\xbc\x9a\xe4\xbb\x8e\xe5\xb7\xa6\xe5\x88\xb0\xe5\x8f\xb3\xe4\xbe\x9d\xe6\xac\xa1\xe8\xbe\x93\xe5\x85\xa5,\xe9\x80\x97\xe5\x8f\xb7\xe9\x9a\x94\xe5\xbc\x80\\n""\n                                                      ""\xe8\xa1\x8c\xe5\x88\x97\xef\xbc\x9a\xe7\x94\xa8\xe9\x80\x97\xe5\x8f\xb7\xe9\x9a\x94\xe5\xbc\x80,\xe4\xbe\x8b\xe5\xa6\x82:3,4""))\n        self.textEdit_result1.setHtml(\n            _translate(\n                ""MainWindow"", ""<!DOCTYPE HTML PUBLIC \\""-//W3C//DTD HTML 4.0//EN\\"" \\""http://www.w3.org/TR/REC-html40/strict.dtd\\"">\\n""\n                ""<html><head><meta name=\\""qrichtext\\"" content=\\""1\\"" /><style type=\\""text/css\\"">\\n""\n                ""p, li { white-space: pre-wrap; }\\n""\n                ""</style></head><body style=\\"" font-family:\\\'SimSun\\\'; font-size:14pt; font-weight:400; font-style:normal;\\"">\\n""\n                ""<p align=\\""center\\"" style=\\"" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\\"">\xe7\x9f\xa9\xe9\x98\xb5\xe4\xb8\x80\xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x9c</p></body></html>""))\n        self.textEdit_result2.setHtml(\n            _translate(\n                ""MainWindow"", ""<!DOCTYPE HTML PUBLIC \\""-//W3C//DTD HTML 4.0//EN\\"" \\""http://www.w3.org/TR/REC-html40/strict.dtd\\"">\\n""\n                ""<html><head><meta name=\\""qrichtext\\"" content=\\""1\\"" /><style type=\\""text/css\\"">\\n""\n                ""p, li { white-space: pre-wrap; }\\n""\n                ""</style></head><body style=\\"" font-family:\\\'SimSun\\\'; font-size:14pt; font-weight:400; font-style:normal;\\"">\\n""\n                ""<p align=\\""center\\"" style=\\"" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\\"">\xe7\x9f\xa9\xe9\x98\xb5\xe4\xba\x8c\xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x9c</p></body></html>""))\n        self.label_6.setText(_translate(""MainWindow"", ""TextLabel""))\n        self.menuHelp.setTitle(_translate(""MainWindow"", ""Help""))\n        self.actionAbout.setText(_translate(""MainWindow"", ""About""))\n        #\n        # \xe4\xbb\xa5\xe4\xb8\x8a\xe4\xb8\xbaUI\xe6\x96\x87\xe4\xbb\xb6\xe8\xbd\xac\xe6\x8d\xa2\xe5\x86\x85\xe5\xae\xb9\n        # \xe4\xbb\xa5\xe4\xb8\x8b\xe4\xb8\xba\xe6\xb7\xbb\xe5\x8a\xa0\xe5\x86\x85\xe5\xae\xb9\n        #\n        self.actionAbout.triggered.connect(self.show_my_window)  # \xe7\xbb\x91\xe5\xae\x9a\xe4\xba\x8b\xe4\xbb\xb6\n    def show_my_window(self):\n        \'\'\'\n        \xe5\xb8\xae\xe5\x8a\xa9\xe5\xbc\xb9\xe5\x87\xba\xe9\xa1\xb5\xe9\x9d\xa2\n        :return:\n        \'\'\'\n        QMessageBox.about(self, ""About"", \'\'\'<html>\n        <style>\n        h3{\n        margin:20px;\n        font-size:18px;\n        font-weight:800\n        }\n        p{\n        margin:20px;\n        font-size:12px;\n        font-weight:500\n        }\n        </style>\n        <body>\n        <h3>\xe7\x9f\xa9\xe9\x98\xb5\xe8\xae\xa1\xe7\xae\x97\xe5\x99\xa8</h3>\n        <p>\xe7\xae\x80\xe4\xbb\x8b:  \xe4\xb8\x80\xe4\xb8\xaa\xe5\x9f\xba\xe4\xba\x8eNumpy\xe5\x92\x8cPyQt\xe7\xbc\x96\xe5\x86\x99\xe7\x9a\x84\xe8\xbd\xbb\xe9\x87\x8f\xe7\xba\xa7\xe7\x9f\xa9\xe9\x98\xb5\xe8\xae\xa1\xe7\xae\x97\xe5\x99\xa8,\xe5\x8f\xaf\xe4\xbb\xa5\xe5\xbf\xab\xe9\x80\x9f\xe7\x9a\x84\xe8\xae\xa1\xe7\xae\x97\xe5\x87\xba\xe7\x9f\xa9\xe9\x98\xb5\xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x9c</p>\n        <p>\xe7\x89\x88\xe6\x9c\xac:  1.2.0</p>\n        <p>\xe4\xbd\x9c\xe8\x80\x85:   <a href=""https://donlex.cn"">Don Lex </a></p>\n        <p>\xe5\x8f\x8d\xe9\xa6\x88\xe9\x82\xae\xe7\xae\xb1: donlex@qq.com</p>\n        <p>\xe9\xa1\xb9\xe7\x9b\xae\xe5\x9c\xb0\xe5\x9d\x80:  <a href=""https://github.com/stormdony/python_demo"">https://github.com/stormdony/python_demo/numpy_demo</a></p>\n        </body>\n        </html>\n\n        \'\'\')\n\n\nclass MainWindow(QtWidgets.QMainWindow, Ui_MainWindow):\n\n    def __init__(self, parent=None):\n        super(MainWindow, self).__init__(parent)\n        self.setupUi(self)\n        self.btn_dot.clicked.connect(self.dot_func)  # \xe7\x9f\xa9\xe9\x98\xb5\xe4\xb9\x98\xe7\xa7\xaf\xe6\x8c\x89\xe9\x92\xae\xe7\xbb\x91\xe5\xae\x9a\xe4\xba\x8b\xe4\xbb\xb6\n        self.btn_solve.clicked.connect(self.solve_func)  # \xe8\xa7\xa3\xe7\x9f\xa9\xe9\x98\xb5\xe6\x96\xb9\xe7\xa8\x8b\xe6\x8c\x89\xe9\x92\xae\xe7\xbb\x91\xe5\xae\x9a\xe4\xba\x8b\xe4\xbb\xb6\n        self.btn_t.clicked.connect(self.t_func)  # \xe7\x9f\xa9\xe9\x98\xb5\xe8\xbd\xac\xe7\xbd\xae\xe6\x8c\x89\xe9\x92\xae\xe7\xbb\x91\xe5\xae\x9a\xe4\xba\x8b\xe4\xbb\xb6\n        self.btn_inv.clicked.connect(self.inv_func)  # \xe7\x9f\xa9\xe9\x98\xb5\xe7\x9a\x84\xe9\x80\x86\xe6\x8c\x89\xe9\x92\xae\xe7\xbb\x91\xe5\xae\x9a\xe4\xba\x8b\xe4\xbb\xb6\n        self.btn_det.clicked.connect(self.det_func)  # \xe7\x9f\xa9\xe9\x98\xb5\xe7\x9a\x84\xe8\xa1\x8c\xe5\x88\x97\xe5\xbc\x8f\xe6\x8c\x89\xe9\x92\xae\xe7\xbb\x91\xe5\xae\x9a\xe4\xba\x8b\xe4\xbb\xb6\n        self.btn_clear.clicked.connect(self.clear_func)  # \xe5\xbd\x92\xe9\x9b\xb6\xe6\x8c\x89\xe9\x92\xae\xe7\xbb\x91\xe5\xae\x9a\xe4\xba\x8b\xe4\xbb\xb6\n        self.btn_eigvalue.clicked.connect(self.eigvalue_func)  # \xe7\x89\xb9\xe5\xbe\x81\xe5\x80\xbc\xe6\x8c\x89\xe9\x92\xae\xe7\xbb\x91\xe5\xae\x9a\xe4\xba\x8b\xe4\xbb\xb6\n        self.btn_var.clicked.connect(self.var_func)  # \xe6\x96\xb9\xe5\xb7\xae\xe6\x8c\x89\xe9\x92\xae\xe7\xbb\x91\xe5\xae\x9a\xe4\xba\x8b\xe4\xbb\xb6\n\n    def var_func(self):\n        \'\'\'\n        \xe6\xb1\x82\xe7\x9f\xa9\xe9\x98\xb5\xe6\x96\xb9\xe5\xb7\xae\n        \'\'\'\n        line1 = self.lineEdit_1.text()\n        line2 = self.lineEdit_2.text()\n        row1 = self.lineEdit_row1.text()\n        row2 = self.lineEdit_row2.text()\n        try:\n            linelist1, rowlist1 = to_array(line1, row1)\n            # \xe4\xbf\xae\xe6\xad\xa3\xe9\x94\x99\xe8\xaf\xaf\xe7\x9a\x84\xe8\xbe\x93\xe5\x85\xa5\n            self.lineEdit_1.setText(str(linelist1)[1:-1])\n            self.lineEdit_row1.setText(str(rowlist1)[1:-1])\n\n            A = np.array(linelist1).reshape(rowlist1)\n            result_a = np.var(A)\n            txt = \'\xe7\x9f\xa9\xe9\x98\xb5\xe7\x9a\x84\xe6\x96\xb9\xe5\xb7\xae:\\n\' + str(result_a)\n            self.textEdit_result1.setText(txt)\n        except BaseException:\n            A_text = \'\xe8\xaf\xb7\xe6\xa3\x80\xe6\x9f\xa5\xe7\x9f\xa9\xe9\x98\xb5\'\n            self.textEdit_result1.setText(A_text)\n            self.textEdit_result2.setText(A_text)\n\n    def eigvalue_func(self):\n        \'\'\'\n        \xe6\xb1\x82\xe7\x9f\xa9\xe9\x98\xb5\xe7\x89\xb9\xe5\xbe\x81\xe5\x80\xbc\n        \'\'\'\n        line1 = self.lineEdit_1.text()\n        line2 = self.lineEdit_2.text()\n        row1 = self.lineEdit_row1.text()\n        row2 = self.lineEdit_row2.text()\n        try:\n            linelist1, rowlist1 = to_array(line1, row1)\n            # \xe4\xbf\xae\xe6\xad\xa3\xe9\x94\x99\xe8\xaf\xaf\xe7\x9a\x84\xe8\xbe\x93\xe5\x85\xa5\n            self.lineEdit_1.setText(str(linelist1)[1:-1])\n            self.lineEdit_row1.setText(str(rowlist1)[1:-1])\n\n            A = np.array(linelist1).reshape(rowlist1)\n            eigvalue_a, eigvector_a = np.linalg.eig(A)\n            txt = \'\xe7\x9f\xa9\xe9\x98\xb5\xe7\x9a\x84\xe7\x89\xb9\xe5\xbe\x81\xe5\x80\xbc:\\n\' + str(eigvalue_a)\n            txt2 = \'\xe7\x9f\xa9\xe9\x98\xb5\xe7\x9a\x84\xe7\x89\xb9\xe5\xbe\x81\xe5\x90\x91\xe9\x87\x8f:\\n\' + str(eigvector_a)\n            self.textEdit_result1.setText(txt)\n            self.textEdit_result2.setText(txt2)\n        except BaseException:\n            A_text = \'\xe8\xaf\xb7\xe6\xa3\x80\xe6\x9f\xa5\xe7\x9f\xa9\xe9\x98\xb5\'\n            self.textEdit_result1.setText(A_text)\n            self.textEdit_result2.setText(A_text)\n\n    def dot_func(self):\n        \'\'\'\'\n        \xe7\x9f\xa9\xe9\x98\xb5\xe7\x9a\x84\xe4\xb9\x98\xe7\xa7\xaf\n        \'\'\'\n        line1 = self.lineEdit_1.text()\n        line2 = self.lineEdit_2.text()\n        row1 = self.lineEdit_row1.text()\n        row2 = self.lineEdit_row2.text()\n        try:\n            linelist1, rowlist1 = to_array(line1, row1)\n            linelist2, rowlist2 = to_array(line2, row2)\n            # \xe4\xbf\xae\xe6\xad\xa3\xe9\x94\x99\xe8\xaf\xaf\xe7\x9a\x84\xe8\xbe\x93\xe5\x85\xa5\n            self.lineEdit_1.setText(str(linelist1)[1:-1])\n            self.lineEdit_row1.setText(str(rowlist1)[1:-1])\n            self.lineEdit_2.setText(str(linelist2)[1:-1])\n            self.lineEdit_row2.setText(str(rowlist2)[1:-1])\n\n            A = np.array(linelist1).reshape(rowlist1)\n            B = np.array(linelist2).reshape(rowlist2)\n            txt = \'\xe7\x9f\xa9\xe9\x98\xb5\xe7\x9a\x84\xe4\xb9\x98\xe7\xa7\xaf:\\n\' + str(A.dot(B))\n            self.textEdit_result1.setText(txt)\n        except BaseException:\n            A_text = \'\xe8\xaf\xb7\xe6\xa3\x80\xe6\x9f\xa5\xe7\x9f\xa9\xe9\x98\xb5\'\n            self.textEdit_result1.setText(A_text)\n            self.textEdit_result2.setText(A_text)\n\n    def solve_func(self):\n        \'\'\'\'\n        \xe8\xa7\xa3\xe7\x9f\xa9\xe9\x98\xb5\xe6\x96\xb9\xe7\xa8\x8b\n        \'\'\'\n        line1 = self.lineEdit_1.text()\n        line2 = self.lineEdit_2.text()\n        row1 = self.lineEdit_row1.text()\n        row2 = self.lineEdit_row2.text()\n        try:\n            linelist1, rowlist1 = to_array(line1, row1)\n            linelist2, rowlist2 = to_array(line2, row2)\n            # \xe4\xbf\xae\xe6\xad\xa3\xe9\x94\x99\xe8\xaf\xaf\xe7\x9a\x84\xe8\xbe\x93\xe5\x85\xa5\n            self.lineEdit_1.setText(str(linelist1)[1:-1])\n            self.lineEdit_row1.setText(str(rowlist1)[1:-1])\n            self.lineEdit_2.setText(str(linelist2)[1:-1])\n            self.lineEdit_row2.setText(str(rowlist2)[1:-1])\n\n            A = np.array(linelist1).reshape(rowlist1)\n            B = np.array(linelist2).reshape(rowlist2)\n            txt = \'\xe7\x9f\xa9\xe9\x98\xb5\xe7\x9a\x84\xe8\xa7\xa3:\\n\' + str(solve(A, B))\n            self.textEdit_result1.setText(txt)\n        except BaseException:\n            A_text = \'\xe7\x9f\xa9\xe9\x98\xb5\xe9\x94\x99\xe8\xaf\xaf\xe6\x88\x96\xe6\x97\xa0\xe8\xa7\xa3\'\n            self.textEdit_result1.setText(A_text)\n            self.textEdit_result2.setText(A_text)\n\n    def t_func(self):\n        \'\'\'\n        \xe7\x9f\xa9\xe9\x98\xb5\xe8\xbd\xac\xe7\xbd\xae\n        \'\'\'\n        line1 = self.lineEdit_1.text()\n        line2 = self.lineEdit_2.text()\n        row1 = self.lineEdit_row1.text()\n        row2 = self.lineEdit_row2.text()\n        try:\n            linelist1, rowlist1 = to_array(line1, row1)\n            # \xe4\xbf\xae\xe6\xad\xa3\xe9\x94\x99\xe8\xaf\xaf\n            self.lineEdit_1.setText(str(linelist1)[1:-1])\n            self.lineEdit_row1.setText(str(rowlist1)[1:-1])\n\n            A = np.array(linelist1).reshape(rowlist1)\n            txt = \'\xe7\x9f\xa9\xe9\x98\xb5\xe4\xb8\x80\xe7\x9a\x84\xe8\xbd\xac\xe7\xbd\xae:\\n\' + str(A.T)\n            self.textEdit_result1.setText(txt)\n        except BaseException:\n            A_text = \'\xe8\xaf\xb7\xe6\xa3\x80\xe6\x9f\xa5\xe7\x9f\xa9\xe9\x98\xb5\xe4\xb8\x80\'\n            self.textEdit_result1.setText(A_text)\n        try:\n            linelist2, rowlist2 = to_array(line2, row2)\n            # \xe4\xbf\xae\xe6\xad\xa3\xe9\x94\x99\xe8\xaf\xaf\n            self.lineEdit_2.setText(str(linelist2)[1:-1])\n            self.lineEdit_row2.setText(str(rowlist2)[1:-1])\n            B = np.array(linelist2).reshape(rowlist2)\n            txt = \'\xe7\x9f\xa9\xe9\x98\xb5\xe4\xba\x8c\xe7\x9a\x84\xe8\xbd\xac\xe7\xbd\xae:\\n\' + str(B.T)\n            self.textEdit_result2.setText(txt)\n        except BaseException:\n            self.textEdit_result2.setText(""\xe8\xaf\xb7\xe6\xa3\x80\xe6\x9f\xa5\xe7\x9f\xa9\xe9\x98\xb5\xe4\xba\x8c"")\n\n    def inv_func(self):\n        \'\'\'\n        \xe7\x9f\xa9\xe9\x98\xb5\xe7\x9a\x84\xe9\x80\x86\n        \'\'\'\n        line1 = self.lineEdit_1.text()\n        line2 = self.lineEdit_2.text()\n        row1 = self.lineEdit_row1.text()\n        row2 = self.lineEdit_row2.text()\n        try:\n            linelist1, rowlist1 = to_array(line1, row1)\n            # \xe4\xbf\xae\xe6\xad\xa3\xe9\x94\x99\xe8\xaf\xaf\n            self.lineEdit_1.setText(str(linelist1)[1:-1])\n            self.lineEdit_row1.setText(str(rowlist1)[1:-1])\n            A = np.array(linelist1).reshape(rowlist1)\n            txt = \'\xe7\x9f\xa9\xe9\x98\xb5\xe4\xb8\x80\xe7\x9a\x84\xe9\x80\x86:\\n\' + str(inv(A))\n            self.textEdit_result1.setText(txt)\n        except BaseException:\n            A_text = \'\xe7\x9f\xa9\xe9\x98\xb5\xe4\xb8\x80\xe9\x94\x99\xe8\xaf\xaf\xe6\x88\x96\xe6\x97\xa0\xe8\xa7\xa3\'\n            self.textEdit_result1.setText(A_text)\n        try:\n            linelist2, rowlist2 = to_array(line2, row2)\n            # \xe4\xbf\xae\xe6\xad\xa3\xe9\x94\x99\xe8\xaf\xaf\n            self.lineEdit_2.setText(str(linelist2)[1:-1])\n            self.lineEdit_row2.setText(str(rowlist2)[1:-1])\n            B = np.array(linelist2).reshape(rowlist2)\n            txt = \'\xe7\x9f\xa9\xe9\x98\xb5\xe4\xba\x8c\xe7\x9a\x84\xe9\x80\x86:\\n\' + str(inv(B))\n            self.textEdit_result2.setText(txt)\n        except BaseException:\n            self.textEdit_result2.setText(""\xe7\x9f\xa9\xe9\x98\xb5\xe4\xba\x8c\xe9\x94\x99\xe8\xaf\xaf\xe6\x88\x96\xe6\x97\xa0\xe8\xa7\xa3"")\n\n    def det_func(self):\n        \'\'\'\n        \xe7\x9f\xa9\xe9\x98\xb5\xe7\x9a\x84\xe8\xa1\x8c\xe5\x88\x97\xe5\xbc\x8f\n        \'\'\'\n        line1 = self.lineEdit_1.text()\n        line2 = self.lineEdit_2.text()\n        row1 = self.lineEdit_row1.text()\n        row2 = self.lineEdit_row2.text()\n        try:\n            linelist1, rowlist1 = to_array(line1, row1)\n            # \xe4\xbf\xae\xe6\xad\xa3\xe9\x94\x99\xe8\xaf\xaf\n            self.lineEdit_1.setText(str(linelist1)[1:-1])\n            self.lineEdit_row1.setText(str(rowlist1)[1:-1])\n\n            A = np.array(linelist1).reshape(rowlist1)\n            txt = \'\xe7\x9f\xa9\xe9\x98\xb5\xe4\xb8\x80\xe7\x9a\x84\xe8\xa1\x8c\xe5\x88\x97\xe5\xbc\x8f:\\n\' + str(det(A))[:4]\n            self.textEdit_result1.setText(txt)\n        except BaseException:\n            A_text = \'\xe7\x9f\xa9\xe9\x98\xb5\xe4\xb8\x80\xe9\x94\x99\xe8\xaf\xaf\xe6\x88\x96\xe6\x97\xa0\xe8\xa7\xa3\'\n            self.textEdit_result1.setText(A_text)\n        try:\n            linelist2, rowlist2 = to_array(line2, row2)\n            # \xe4\xbf\xae\xe6\xad\xa3\xe9\x94\x99\xe8\xaf\xaf\n            self.lineEdit_2.setText(str(linelist2)[1:-1])\n            self.lineEdit_row2.setText(str(rowlist2)[1:-1])\n            B = np.array(linelist2).reshape(rowlist2)\n            txt = \'\xe7\x9f\xa9\xe9\x98\xb5\xe4\xba\x8c\xe7\x9a\x84\xe8\xa1\x8c\xe5\x88\x97\xe5\xbc\x8f:\\n\' + str(det(B))[:4]\n            self.textEdit_result2.setText(txt)\n        except BaseException:\n            self.textEdit_result2.setText(""\xe7\x9f\xa9\xe9\x98\xb5\xe4\xba\x8c\xe9\x94\x99\xe8\xaf\xaf\xe6\x88\x96\xe6\x97\xa0\xe8\xa7\xa3"")\n\n    def clear_func(self):\n        \'\'\'\n        \xe5\xbd\x92\xe9\x9b\xb6,\xe6\xb8\x85\xe9\x99\xa4\xe6\x96\x87\xe6\x9c\xac\xe5\x86\x85\xe5\xae\xb9\n        \'\'\'\n        self.lineEdit_1.clear()\n        self.lineEdit_2.clear()\n        self.lineEdit_row1.clear()\n        self.lineEdit_row2.clear()\n\n\ndef to_array(text, row):\n    \'\'\'\n    \xe5\xb0\x86\xe8\xbe\x93\xe5\x85\xa5\xe7\x9a\x84\xe6\x95\xb0\xe5\xad\x97\xe8\xbd\xac\xe4\xb8\xba\xe7\x9f\xa9\xe9\x98\xb5\n    :param text: \xe7\x9f\xa9\xe9\x98\xb5\xe5\x85\x83\xe7\xb4\xa0\xe5\xad\x97\xe7\xac\xa6\xe4\xb8\xb2\n    :param row: \xe7\x9f\xa9\xe9\x98\xb5\xe5\xbd\xa2\xe6\x80\x81\xe5\xad\x97\xe7\xac\xa6\xe4\xb8\xb2\n    :return: \xe5\x85\x83\xe7\xb4\xa0\xe5\x88\x97\xe8\xa1\xa8,\xe5\xbd\xa2\xe6\x80\x81\xe5\x88\x97\xe8\xa1\xa8\n    \'\'\'\n    # \xe5\xb0\x86\xe4\xb8\xad\xe6\x96\x87\xe9\x80\x97\xe5\x8f\xb7\xe6\x9b\xbf\xe6\x8d\xa2\xe4\xb8\xba\xe8\x8b\xb1\xe6\x96\x87\xe9\x80\x97\xe5\x8f\xb7\n    text = text.replace(\'\xef\xbc\x8c\', \',\')\n    row = row.replace(\'\xef\xbc\x8c\', \',\')\n\n    # \xe5\x88\x87\xe9\x99\xa4\xe7\x9f\xa9\xe9\x98\xb5\xe5\x85\x83\xe7\xb4\xa0\xe5\x89\x8d\xe5\x90\x8e\xe7\x9a\x84\xe9\x80\x97\xe5\x8f\xb7\n    if text[-1] == \',\':\n        text = text[:-1]\n    if text[0] == \',\':\n        text = text[1:]\n\n    # \xe5\x88\x87\xe9\x99\xa4\xe7\x9f\xa9\xe9\x98\xb5\xe5\xbd\xa2\xe6\x80\x81\xe5\x89\x8d\xe5\x90\x8e\xe7\x9a\x84\xe9\x80\x97\xe5\x8f\xb7\n    if row[-1] == \',\':\n        row = row[:-1]\n    if row[0] == \',\':\n        row = row[1:]\n\n    new = []\n    rowlis = []\n    numlist = text.split(\',\')\n    # \xe5\xb0\x86\xe5\xad\x97\xe7\xac\xa6\xe4\xb8\xb2\xe8\xbd\xac\xe6\x8d\xa2\xe4\xb8\xba\xe5\x88\x97\xe8\xa1\xa8\n    for i in range(len(numlist)):\n        new.append(int(numlist[i]))\n    rowlist = row.split(\',\')\n    for i in range(len(rowlist)):\n        rowlis.append(int(rowlist[i]))\n    return new, rowlis\n\n\nif __name__ == \'__main__\':\n    app = QApplication(sys.argv)\n    MainWindow = MainWindow()\n    MainWindow.show()\n    sys.exit(app.exec_())\n'"
pyquery_jihaoba/jihaoba.py,0,"b""\nfrom multiprocessing.pool import Pool\n\nfrom pyquery import PyQuery as pq\nimport pymongo\nimport logging\nclient = pymongo.MongoClient('localhost', 27017)\njihaoba = client['pyquery_jihaoba']\ndetail = jihaoba['detail']\n\n\nheader = {\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0',\n    'Connection': 'close'}\n\n# \xe8\x8e\xb7\xe5\x8f\x96\xe6\x95\xb0\xe6\x8d\xae\xef\xbc\x8c\xe5\x8f\x82\xe6\x95\xb0\xe4\xb8\xba\xe9\xa1\xb5\xe6\x95\xb0\ndef get_phone(page):\n    url = 'http://www.jihaoba.com/escrow/?&page={}'.format(page)\n    try:\n        web_data = pq(url=url, headers=header)\n        phone_lis = web_data('.numbershow')\n        for item in phone_lis.items():\n            phone = item.find('.number').text()\n            price = item.find('.price span').text()\n            brand = item.find('.brand').text()\n            law = item.find('.law').text()\n            data = {\n                'phone': phone,#\xe6\x89\x8b\xe6\x9c\xba\xe5\x8f\xb7\n                'price': price[1:],#\xe4\xbb\xb7\xe6\xa0\xbc\n                'band': brand,#\xe8\xbf\x90\xe8\x90\xa5\xe5\x95\x86\n                'law': law,#\xe7\xae\x80\xe4\xbb\x8b\n            }\n            print(data)\n            detail.insert(data)\n    except:\n        logging.warning('\xe8\xbf\x9e\xe6\x8e\xa5\xe7\x9a\x84\xe4\xb8\xbb\xe6\x9c\xba\xe6\xb2\xa1\xe6\x9c\x89\xe5\x8f\x8d\xe5\xba\x94')\n        pass\n\n\nif __name__ == '__main__':\n    pool = Pool()\n    pool.map(get_phone, [i for i in range(1, 1001)])\n"""
zhipin/BossZhiPinSpider.py,0,"b""from bs4 import BeautifulSoup\nimport requests\nimport pymongo\n\nclient = pymongo.MongoClient('localhost', 27017)\nzhipin = client['zhipin']\nzhipin_java = zhipin['zhipin_java']\nzhipin_python = zhipin['zhipin_python']\n\n\nheaders = {\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.78 Safari/537.36',\n    'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n}\n\ntotal_page = 11\n\n\ndef get_info(param, data_table):\n    '''\n    \xe6\xa0\xb9\xe6\x8d\xae\xe6\x8b\x9b\xe8\x81\x98\xe6\x96\xb9\xe5\x90\x91(java\xe6\x88\x96python..)\xe7\x88\xac\xe5\x8f\x96\xe4\xbf\xa1\xe6\x81\xaf\xe5\xad\x98\xe8\xbf\x9b\xe6\x95\xb0\xe6\x8d\xae\xe5\xba\x93\n    :param param: \xe6\x8b\x9b\xe8\x81\x98\xe6\x96\xb9\xe5\x90\x91\n    :param data_table: \xe6\x95\xb0\xe6\x8d\xae\xe5\xba\x93\xe8\xa1\xa8\xe6\x98\x8e\n    :return:\n    '''\n    for i in range(1, total_page):\n        url = 'https://www.zhipin.com/c101280100/d_203-h_101280100/?query={0}&page={1}'.format(\n            param, i)\n        web_data = requests.get(url, headers=headers)\n        soup = BeautifulSoup(web_data.content, 'lxml')\n        for item in soup.select('#main > div > div.job-list > ul > li'):\n            # \xe6\x8b\x9b\xe8\x81\x98\xe8\xa6\x81\xe6\xb1\x82\n            job_title = item.select('.job-title')[0].text  # \xe5\xb2\x97\xe4\xbd\x8d\n            salary = item.select('.red')[0].text  # \xe8\x96\xaa\xe8\xb5\x84\n            person_info = item.select('.info-primary p')[0].text  # \xe5\xba\x94\xe8\x81\x98\xe8\xa6\x81\xe6\xb1\x82\n            # \xe8\x8e\xb7\xe5\x8f\x96\xe5\x85\xac\xe5\x8f\xb8\xe4\xbf\xa1\xe6\x81\xaf\n            company = item.select('.info-company h3 a')[0].text  # \xe5\x85\xac\xe5\x8f\xb8\n            company_info = item.select('.info-company p')[0].text  # \xe5\x85\xac\xe5\x8f\xb8\xe4\xbf\xa1\xe6\x81\xaf\n\n            data = {\n                'job_title': job_title,\n                'salary': salary,\n                'person_info': person_info,\n                'company': company,\n                'company_info': company_info,\n            }\n            # \xe6\x8f\x92\xe5\x85\xa5\xe6\x95\xb0\xe6\x8d\xae\xe5\xba\x93\n            data_table.insert(data)\n            print(data)\n        print('*' * 100)\n    print('\\n' * 5)\n\n\nif __name__ == '__main__':\n    param_list = ['java', 'python']\n    table_list = [zhipin_java, zhipin_python]\n    for param, table in zip(param_list, table_list):\n        get_info(param, table)\n\n"""
