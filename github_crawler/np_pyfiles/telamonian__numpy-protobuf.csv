file_path,api_count,code
setup.py,0,"b'#!/usr/bin/env python\n\nfrom distutils.errors import DistutilsExecError\nfrom glob import glob\nimport os\nimport setuptools.command\nimport setuptools.command.develop\nfrom setuptools import find_packages, setup\nimport shutil\nfrom subprocess import check_call\n\n# discover the path to this setup.py file\nthisScriptDir = os.path.dirname(os.path.realpath(__file__))\n\nclass ProtocCommand(setuptools.Command):\n    user_options = [\n        (\'protoc=\', \'p\', ""(default: \'protoc\') path to protoc compiler. The default value can be set via the PROTOC environment variable""),\n        (\'raises=\', \'r\', \'(default: True) if true, raise error on protobuf compilation error\'),\n    ]\n\n    def initialize_options(self):\n        self.protoc = os.environ[\'PROTOC\'] if \'PROTOC\' in os.environ else \'protoc\'\n        self.raises = True\n\n    def finalize_options(self):\n        print(f\'searching for protoc executable at: {self.protoc}...\')\n        self.protoc = shutil.which(self.protoc)\n        if self.protoc is None:\n            if self.raises:\n                raise DistutilsExecError(\'Could not find protoc executable.\')\n            else:\n                print(\'Could not find protoc executable. Skipping protobuf compilation.\')\n        else:\n            print(f\'Found. Using protoc at: {self.protoc}\')\n\n    def run(self):\n        if self.protoc is None:\n            # bail if self.raises is False and protoc isn\'t found\n            return\n\n        protoDir = os.path.join(thisScriptDir, \'protobuf\')\n        protoSrcs = glob(os.path.join(protoDir, \'npbuf\', \'type\', \'*.proto\'))\n\n        protoOutRoot = thisScriptDir\n        protoOutDir = os.path.join(protoOutRoot, \'npbuf\', \'type\')\n\n        # clean up any existing compiled protobufs\n        shutil.rmtree(protoOutDir, ignore_errors=True)\n\n        # create a new module for the compiled protobufs, including an `__init__.py`\n        os.mkdir(protoOutDir)\n        with open(os.path.join(protoOutDir, \'__init__.py\'), \'w\') as f: pass\n\n        # compile protobuf files to .py python modules\n        protoc_python_cmd = [\n            self.protoc,\n            \'--proto_path=%s\' % protoDir,\n            \'--python_out=%s\' % protoOutRoot,\n            ]\n        protoc_python_cmd.extend(protoSrcs)\n\n        check_call(protoc_python_cmd)\n\nclass DevelopCommand(setuptools.command.develop.develop):\n    def run(self):\n        # pass options to the protoc command and run it\n        # protocCommand = self.distribution.get_command_obj(\'protoc\')\n        # protocCommand.database = self.database\n        self.run_command(\'protoc\')\n\n        # run the normal develop command\n        super().run()\n\nsetup(\n    author = \'Max Klein\',\n    cmdclass = {\n        \'develop\': DevelopCommand,\n        \'protoc\': ProtocCommand\n    },\n    description = \'provides Python protobuf types that can be used to serialize/deserialize Numpy arrays\',\n    license = \'Apache License, Version 2.0\',\n    name = \'numpy-protobuf\',\n    packages = find_packages(where=\'.\', exclude=(\'protobuf\',))\n)\n'"
npbuf/__init__.py,0,b'from npbuf.type.dtype_pb2 import dtype\nfrom npbuf.type.ndarray_pb2 import ndarray\n'
npbuf/type/__init__.py,0,b''
npbuf/type/dtype_pb2.py,0,"b'# -*- coding: utf-8 -*-\n# Generated by the protocol buffer compiler.  DO NOT EDIT!\n# source: npbuf/type/dtype.proto\n\nimport sys\n_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode(\'latin1\'))\nfrom google.protobuf import descriptor as _descriptor\nfrom google.protobuf import message as _message\nfrom google.protobuf import reflection as _reflection\nfrom google.protobuf import symbol_database as _symbol_database\n# @@protoc_insertion_point(imports)\n\n_sym_db = _symbol_database.Default()\n\n\n\n\nDESCRIPTOR = _descriptor.FileDescriptor(\n  name=\'npbuf/type/dtype.proto\',\n  package=\'\',\n  syntax=\'proto3\',\n  serialized_options=None,\n  serialized_pb=_b(\'\\n\\x16npbuf/type/dtype.proto\\""\\xec\\x03\\n\\x05\\x64type\\x12\\x19\\n\\x04type\\x18\\x01 \\x01(\\x0e\\x32\\x0b.dtype.Type\\x12$\\n\\nbyte_order\\x18\\x65 \\x01(\\x0e\\x32\\x10.dtype.ByteOrder\\x12\\x0e\\n\\x05names\\x18\\xc9\\x01 \\x03(\\t\\x12#\\n\\x06\\x66ields\\x18\\xad\\x02 \\x03(\\x0b\\x32\\x12.dtype.FieldsEntry\\x12\\x1c\\n\\x08subdtype\\x18\\xe9\\x07 \\x01(\\x0b\\x32\\t.subdtype\\x1a\\x35\\n\\x0b\\x46ieldsEntry\\x12\\x0b\\n\\x03key\\x18\\x01 \\x01(\\t\\x12\\x15\\n\\x05value\\x18\\x02 \\x01(\\x0b\\x32\\x06.dtype:\\x02\\x38\\x01\\""B\\n\\tByteOrder\\x12\\x11\\n\\rLITTLE_ENDIAN\\x10\\x00\\x12\\x0e\\n\\nBIG_ENDIAN\\x10\\x01\\x12\\n\\n\\x06NATIVE\\x10\\x02\\x12\\x06\\n\\x02NA\\x10\\x03\\""\\xd3\\x01\\n\\x04Type\\x12\\x0b\\n\\x07\\x66loat64\\x10\\x00\\x12\\x0b\\n\\x07\\x66loat32\\x10\\x01\\x12\\x0b\\n\\x07\\x66loat16\\x10\\x02\\x12\\x0e\\n\\ncomplex128\\x10\\x03\\x12\\r\\n\\tcomplex64\\x10\\x04\\x12\\n\\n\\x06uint64\\x10\\x05\\x12\\n\\n\\x06uint32\\x10\\x06\\x12\\n\\n\\x06uint16\\x10\\x07\\x12\\t\\n\\x05uint8\\x10\\x08\\x12\\t\\n\\x05int64\\x10\\t\\x12\\t\\n\\x05int32\\x10\\n\\x12\\t\\n\\x05int16\\x10\\x0b\\x12\\x08\\n\\x04int8\\x10\\x0c\\x12\\x08\\n\\x04S128\\x10\\r\\x12\\x07\\n\\x03S64\\x10\\x0e\\x12\\x07\\n\\x03S32\\x10\\x0f\\x12\\x07\\n\\x03S16\\x10\\x10\\x12\\x06\\n\\x02S8\\x10\\x11\\""4\\n\\x08subdtype\\x12\\x19\\n\\x04type\\x18\\x01 \\x01(\\x0e\\x32\\x0b.dtype.Type\\x12\\r\\n\\x05shape\\x18\\x65 \\x03(\\x03\\x62\\x06proto3\')\n)\n\n\n\n_DTYPE_BYTEORDER = _descriptor.EnumDescriptor(\n  name=\'ByteOrder\',\n  full_name=\'dtype.ByteOrder\',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name=\'LITTLE_ENDIAN\', index=0, number=0,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'BIG_ENDIAN\', index=1, number=1,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'NATIVE\', index=2, number=2,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'NA\', index=3, number=3,\n      serialized_options=None,\n      type=None),\n  ],\n  containing_type=None,\n  serialized_options=None,\n  serialized_start=239,\n  serialized_end=305,\n)\n_sym_db.RegisterEnumDescriptor(_DTYPE_BYTEORDER)\n\n_DTYPE_TYPE = _descriptor.EnumDescriptor(\n  name=\'Type\',\n  full_name=\'dtype.Type\',\n  filename=None,\n  file=DESCRIPTOR,\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name=\'float64\', index=0, number=0,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'float32\', index=1, number=1,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'float16\', index=2, number=2,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'complex128\', index=3, number=3,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'complex64\', index=4, number=4,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'uint64\', index=5, number=5,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'uint32\', index=6, number=6,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'uint16\', index=7, number=7,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'uint8\', index=8, number=8,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'int64\', index=9, number=9,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'int32\', index=10, number=10,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'int16\', index=11, number=11,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'int8\', index=12, number=12,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'S128\', index=13, number=13,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'S64\', index=14, number=14,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'S32\', index=15, number=15,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'S16\', index=16, number=16,\n      serialized_options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name=\'S8\', index=17, number=17,\n      serialized_options=None,\n      type=None),\n  ],\n  containing_type=None,\n  serialized_options=None,\n  serialized_start=308,\n  serialized_end=519,\n)\n_sym_db.RegisterEnumDescriptor(_DTYPE_TYPE)\n\n\n_DTYPE_FIELDSENTRY = _descriptor.Descriptor(\n  name=\'FieldsEntry\',\n  full_name=\'dtype.FieldsEntry\',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name=\'key\', full_name=\'dtype.FieldsEntry.key\', index=0,\n      number=1, type=9, cpp_type=9, label=1,\n      has_default_value=False, default_value=_b("""").decode(\'utf-8\'),\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      serialized_options=None, file=DESCRIPTOR),\n    _descriptor.FieldDescriptor(\n      name=\'value\', full_name=\'dtype.FieldsEntry.value\', index=1,\n      number=2, type=11, cpp_type=10, label=1,\n      has_default_value=False, default_value=None,\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      serialized_options=None, file=DESCRIPTOR),\n  ],\n  extensions=[\n  ],\n  nested_types=[],\n  enum_types=[\n  ],\n  serialized_options=_b(\'8\\001\'),\n  is_extendable=False,\n  syntax=\'proto3\',\n  extension_ranges=[],\n  oneofs=[\n  ],\n  serialized_start=184,\n  serialized_end=237,\n)\n\n_DTYPE = _descriptor.Descriptor(\n  name=\'dtype\',\n  full_name=\'dtype\',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name=\'type\', full_name=\'dtype.type\', index=0,\n      number=1, type=14, cpp_type=8, label=1,\n      has_default_value=False, default_value=0,\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      serialized_options=None, file=DESCRIPTOR),\n    _descriptor.FieldDescriptor(\n      name=\'byte_order\', full_name=\'dtype.byte_order\', index=1,\n      number=101, type=14, cpp_type=8, label=1,\n      has_default_value=False, default_value=0,\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      serialized_options=None, file=DESCRIPTOR),\n    _descriptor.FieldDescriptor(\n      name=\'names\', full_name=\'dtype.names\', index=2,\n      number=201, type=9, cpp_type=9, label=3,\n      has_default_value=False, default_value=[],\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      serialized_options=None, file=DESCRIPTOR),\n    _descriptor.FieldDescriptor(\n      name=\'fields\', full_name=\'dtype.fields\', index=3,\n      number=301, type=11, cpp_type=10, label=3,\n      has_default_value=False, default_value=[],\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      serialized_options=None, file=DESCRIPTOR),\n    _descriptor.FieldDescriptor(\n      name=\'subdtype\', full_name=\'dtype.subdtype\', index=4,\n      number=1001, type=11, cpp_type=10, label=1,\n      has_default_value=False, default_value=None,\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      serialized_options=None, file=DESCRIPTOR),\n  ],\n  extensions=[\n  ],\n  nested_types=[_DTYPE_FIELDSENTRY, ],\n  enum_types=[\n    _DTYPE_BYTEORDER,\n    _DTYPE_TYPE,\n  ],\n  serialized_options=None,\n  is_extendable=False,\n  syntax=\'proto3\',\n  extension_ranges=[],\n  oneofs=[\n  ],\n  serialized_start=27,\n  serialized_end=519,\n)\n\n\n_SUBDTYPE = _descriptor.Descriptor(\n  name=\'subdtype\',\n  full_name=\'subdtype\',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name=\'type\', full_name=\'subdtype.type\', index=0,\n      number=1, type=14, cpp_type=8, label=1,\n      has_default_value=False, default_value=0,\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      serialized_options=None, file=DESCRIPTOR),\n    _descriptor.FieldDescriptor(\n      name=\'shape\', full_name=\'subdtype.shape\', index=1,\n      number=101, type=3, cpp_type=2, label=3,\n      has_default_value=False, default_value=[],\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      serialized_options=None, file=DESCRIPTOR),\n  ],\n  extensions=[\n  ],\n  nested_types=[],\n  enum_types=[\n  ],\n  serialized_options=None,\n  is_extendable=False,\n  syntax=\'proto3\',\n  extension_ranges=[],\n  oneofs=[\n  ],\n  serialized_start=521,\n  serialized_end=573,\n)\n\n_DTYPE_FIELDSENTRY.fields_by_name[\'value\'].message_type = _DTYPE\n_DTYPE_FIELDSENTRY.containing_type = _DTYPE\n_DTYPE.fields_by_name[\'type\'].enum_type = _DTYPE_TYPE\n_DTYPE.fields_by_name[\'byte_order\'].enum_type = _DTYPE_BYTEORDER\n_DTYPE.fields_by_name[\'fields\'].message_type = _DTYPE_FIELDSENTRY\n_DTYPE.fields_by_name[\'subdtype\'].message_type = _SUBDTYPE\n_DTYPE_BYTEORDER.containing_type = _DTYPE\n_DTYPE_TYPE.containing_type = _DTYPE\n_SUBDTYPE.fields_by_name[\'type\'].enum_type = _DTYPE_TYPE\nDESCRIPTOR.message_types_by_name[\'dtype\'] = _DTYPE\nDESCRIPTOR.message_types_by_name[\'subdtype\'] = _SUBDTYPE\n_sym_db.RegisterFileDescriptor(DESCRIPTOR)\n\ndtype = _reflection.GeneratedProtocolMessageType(\'dtype\', (_message.Message,), dict(\n\n  FieldsEntry = _reflection.GeneratedProtocolMessageType(\'FieldsEntry\', (_message.Message,), dict(\n    DESCRIPTOR = _DTYPE_FIELDSENTRY,\n    __module__ = \'npbuf.type.dtype_pb2\'\n    # @@protoc_insertion_point(class_scope:dtype.FieldsEntry)\n    ))\n  ,\n  DESCRIPTOR = _DTYPE,\n  __module__ = \'npbuf.type.dtype_pb2\'\n  # @@protoc_insertion_point(class_scope:dtype)\n  ))\n_sym_db.RegisterMessage(dtype)\n_sym_db.RegisterMessage(dtype.FieldsEntry)\n\nsubdtype = _reflection.GeneratedProtocolMessageType(\'subdtype\', (_message.Message,), dict(\n  DESCRIPTOR = _SUBDTYPE,\n  __module__ = \'npbuf.type.dtype_pb2\'\n  # @@protoc_insertion_point(class_scope:subdtype)\n  ))\n_sym_db.RegisterMessage(subdtype)\n\n\n_DTYPE_FIELDSENTRY._options = None\n# @@protoc_insertion_point(module_scope)\n'"
npbuf/type/ndarray_pb2.py,0,"b'# -*- coding: utf-8 -*-\n# Generated by the protocol buffer compiler.  DO NOT EDIT!\n# source: npbuf/type/ndarray.proto\n\nimport sys\n_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode(\'latin1\'))\nfrom google.protobuf import descriptor as _descriptor\nfrom google.protobuf import message as _message\nfrom google.protobuf import reflection as _reflection\nfrom google.protobuf import symbol_database as _symbol_database\n# @@protoc_insertion_point(imports)\n\n_sym_db = _symbol_database.Default()\n\n\nfrom npbuf.type import dtype_pb2 as npbuf_dot_type_dot_dtype__pb2\n\n\nDESCRIPTOR = _descriptor.FileDescriptor(\n  name=\'npbuf/type/ndarray.proto\',\n  package=\'\',\n  syntax=\'proto3\',\n  serialized_options=None,\n  serialized_pb=_b(\'\\n\\x18npbuf/type/ndarray.proto\\x1a\\x16npbuf/type/dtype.proto\\""P\\n\\x07ndarray\\x12\\r\\n\\x05shape\\x18\\x01 \\x03(\\x03\\x12\\x15\\n\\x05\\x64type\\x18\\x65 \\x01(\\x0b\\x32\\x06.dtype\\x12\\r\\n\\x04\\x64\\x61ta\\x18\\xc9\\x01 \\x01(\\x0c\\x12\\x10\\n\\x07strides\\x18\\xad\\x02 \\x03(\\x03\\x62\\x06proto3\')\n  ,\n  dependencies=[npbuf_dot_type_dot_dtype__pb2.DESCRIPTOR,])\n\n\n\n\n_NDARRAY = _descriptor.Descriptor(\n  name=\'ndarray\',\n  full_name=\'ndarray\',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name=\'shape\', full_name=\'ndarray.shape\', index=0,\n      number=1, type=3, cpp_type=2, label=3,\n      has_default_value=False, default_value=[],\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      serialized_options=None, file=DESCRIPTOR),\n    _descriptor.FieldDescriptor(\n      name=\'dtype\', full_name=\'ndarray.dtype\', index=1,\n      number=101, type=11, cpp_type=10, label=1,\n      has_default_value=False, default_value=None,\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      serialized_options=None, file=DESCRIPTOR),\n    _descriptor.FieldDescriptor(\n      name=\'data\', full_name=\'ndarray.data\', index=2,\n      number=201, type=12, cpp_type=9, label=1,\n      has_default_value=False, default_value=_b(""""),\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      serialized_options=None, file=DESCRIPTOR),\n    _descriptor.FieldDescriptor(\n      name=\'strides\', full_name=\'ndarray.strides\', index=3,\n      number=301, type=3, cpp_type=2, label=3,\n      has_default_value=False, default_value=[],\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      serialized_options=None, file=DESCRIPTOR),\n  ],\n  extensions=[\n  ],\n  nested_types=[],\n  enum_types=[\n  ],\n  serialized_options=None,\n  is_extendable=False,\n  syntax=\'proto3\',\n  extension_ranges=[],\n  oneofs=[\n  ],\n  serialized_start=52,\n  serialized_end=132,\n)\n\n_NDARRAY.fields_by_name[\'dtype\'].message_type = npbuf_dot_type_dot_dtype__pb2._DTYPE\nDESCRIPTOR.message_types_by_name[\'ndarray\'] = _NDARRAY\n_sym_db.RegisterFileDescriptor(DESCRIPTOR)\n\nndarray = _reflection.GeneratedProtocolMessageType(\'ndarray\', (_message.Message,), dict(\n  DESCRIPTOR = _NDARRAY,\n  __module__ = \'npbuf.type.ndarray_pb2\'\n  # @@protoc_insertion_point(class_scope:ndarray)\n  ))\n_sym_db.RegisterMessage(ndarray)\n\n\n# @@protoc_insertion_point(module_scope)\n'"
