file_path,api_count,code
run.py,0,"b'from darkflow.darkflow.defaults import argHandler #Import the default arguments\nimport os\nfrom darkflow.darkflow.net.build import TFNet\n\n\nFLAGS = argHandler()\nFLAGS.setDefaults()\n\nFLAGS.demo = ""camera"" # video file to use, or if camera just put ""camera""\nFLAGS.model = ""darkflow/cfg/yolo.cfg"" # tensorflow model\nFLAGS.load = ""darkflow/bin/yolo.weights"" # tensorflow weights\n# FLAGS.pbLoad = ""tiny-yolo-voc-traffic.pb"" # tensorflow model\n# FLAGS.metaLoad = ""tiny-yolo-voc-traffic.meta"" # tensorflow weights\nFLAGS.threshold = 0.7 # threshold of decetion confidance (detection if confidance > threshold )\nFLAGS.gpu = 0.8 #how much of the GPU to use (between 0 and 1) 0 means use cpu\nFLAGS.track = False # wheither to activate tracking or not\nFLAGS.trackObj = [\'Bicyclist\',\'Pedestrian\',\'Skateboarder\',\'Cart\',\'Car\',\'Bus\'] # the object to be tracked\n#FLAGS.trackObj = [""person""]\nFLAGS.saveVideo = True  #whether to save the video or not\nFLAGS.BK_MOG = True # activate background substraction using cv2 MOG substraction,\n                        #to help in worst case scenarion when YOLO cannor predict(able to detect mouvement, it\'s not ideal but well)\n                        # helps only when number of detection < 3, as it is still better than no detection.\nFLAGS.tracker = ""sort"" # wich algorithm to use for tracking deep_sort/sort (NOTE : deep_sort only trained for people detection )\nFLAGS.skip = 0 # how many frames to skipp between each detection to speed up the network\nFLAGS.csv = False #whether to write csv file or not(only when tracking is set to True)\nFLAGS.display = True # display the tracking or not\n\ntfnet = TFNet(FLAGS)\n\ntfnet.camera()\nexit(\'Demo stopped, exit.\')\n'"
