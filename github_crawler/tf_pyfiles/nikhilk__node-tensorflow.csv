file_path,api_count,code
samples/graphs/basic/graph.py,6,"b""# graph.py\n# Builds a trivial graph for most basic example of loading/running TensorFlow.\n#\n# Run with the following command:\n# python graph.py\n#\n# This should produce graph.proto (which is used from node.js) along with graph.proto.txt and\n# graph.proto.json for readable versions.\n\nimport google.protobuf.json_format as json\nimport tensorflow as tf\n\ndef save_graph(graph, name='graph'):\n  tf.train.write_graph(graph, '.', name + '.proto', as_text=False)\n  tf.train.write_graph(graph, '.', name + '.proto.txt', as_text=True)\n\n  data = json.MessageToJson(graph.as_graph_def())\n  with open(name + '.proto.json', 'w') as f:\n    f.write(data)\n\n\ndef build_graph():\n  with tf.Graph().as_default() as graph:\n    c1 = tf.constant(1, name='c1')\n    c2 = tf.constant(41, name='c2')\n    result = tf.add(c1, c2, name='result')\n\n    return graph\n\nsave_graph(build_graph())\n"""
samples/graphs/matrix/graph.py,9,"b""# graph.py\n# Builds a trivial graph for most basic example of loading/running TensorFlow.\n#\n# Run with the following command:\n# python graph.py\n#\n# This should produce graph.proto (which is used from node.js) along with graph.proto.txt and\n# graph.proto.json for readable versions.\n\nimport google.protobuf.json_format as json\nimport tensorflow as tf\n\ndef save_graph(graph, name='graph'):\n  tf.train.write_graph(graph, '.', name + '.proto', as_text=False)\n  tf.train.write_graph(graph, '.', name + '.proto.txt', as_text=True)\n\n  data = json.MessageToJson(graph.as_graph_def())\n  with open(name + '.proto.json', 'w') as f:\n    f.write(data)\n\n\ndef build_graph():\n  with tf.Graph().as_default() as graph:\n    var1 = tf.placeholder(dtype=tf.int32, shape=[2,2], name='var1')\n    var2 = tf.placeholder(dtype=tf.int32, shape=[2,1], name='var2')\n    var3 = tf.Variable(initial_value=[[1],[1]], dtype=tf.int32, name='var3')\n\n    tf.variables_initializer(tf.global_variables(), name='init')\n\n    with tf.name_scope('computation'):\n      tf.add(tf.matmul(var1, var2), var3, name='result')\n\n    return graph\n\nsave_graph(build_graph())\n"""
samples/graphs/strings/graph.py,5,"b""# graph.py\n# Builds a graph that operates over string tensors.\n#\n# Run with the following command:\n# python graph.py\n#\n# This should produce graph.proto (which is used from node.js) along with graph.proto.txt and\n# graph.proto.json for readable versions.\n\nimport google.protobuf.json_format as json\nimport tensorflow as tf\n\ndef save_graph(graph, name='graph'):\n  tf.train.write_graph(graph, '.', name + '.proto', as_text=False)\n  tf.train.write_graph(graph, '.', name + '.proto.txt', as_text=True)\n\n  data = json.MessageToJson(graph.as_graph_def())\n  with open(name + '.proto.json', 'w') as f:\n    f.write(data)\n\n\ndef build_graph():\n  with tf.Graph().as_default() as graph:\n    strings = tf.placeholder(dtype=tf.string, shape=[None,1], name='input')\n    tf.identity(strings, name='output')\n\n    return graph\n\nsave_graph(build_graph())\n"""
