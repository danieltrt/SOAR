file_path,api_count,code
label_image.py,6,"b'import tensorflow as tf, sys\n\nimage_path = sys.argv[1]\n\n# Read in the image_data\nimage_data = tf.gfile.FastGFile(image_path, \'rb\').read()\n\n# Loads label file, strips off carriage return\nlabel_lines = [line.rstrip() for line \n                   in tf.gfile.GFile(""/tf_files/retrained_labels.txt"")]\n\n# Unpersists graph from file\nwith tf.gfile.FastGFile(""/tf_files/retrained_graph.pb"", \'rb\') as f:\n    graph_def = tf.GraphDef()\n    graph_def.ParseFromString(f.read())\n    _ = tf.import_graph_def(graph_def, name=\'\')\n\nwith tf.Session() as sess:\n    # Feed the image_data as input to the graph and get first prediction\n    softmax_tensor = sess.graph.get_tensor_by_name(\'final_result:0\')\n    \n    predictions = sess.run(softmax_tensor, \\\n             {\'DecodeJpeg/contents:0\': image_data})\n    \n    # Sort to show labels of first prediction in order of confidence\n    top_k = predictions[0].argsort()[-len(predictions[0]):][::-1]\n    \n    for node_id in top_k:\n        human_string = label_lines[node_id]\n        score = predictions[0][node_id]\n        print(\'%s (score = %.5f)\' % (human_string, score))\n'"
