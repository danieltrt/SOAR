file_path,api_count,code
python/encoder.py,0,"b'#!/usr/bin/env python\n\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nimport os\nimport h5py\nimport numpy as np\nimport argparse\nimport uuid\nimport model_pb2\n\n\ndef quantize_arr(arr):\n    """"""Quantization based on linear rescaling over min/max range.\n    """"""\n    min_val, max_val = np.min(arr), np.max(arr)\n    if max_val - min_val > 0:\n        quantized = np.round(255 * (arr - min_val) / (max_val - min_val))\n    else:\n        quantized = np.zeros(arr.shape)\n    quantized = quantized.astype(np.uint8)\n    min_val = min_val.astype(np.float32)\n    max_val = max_val.astype(np.float32)\n    return quantized, min_val, max_val\n\n\nclass Encoder:\n    """"""Encoder class.\n\n    Takes as input a Keras model saved in hdf5 format that includes the model architecture with the weights.\n    This is the resulting file from running the command:\n\n    ```\n    model.save(\'my_model.h5\')\n    ```\n\n    See https://keras.io/getting-started/faq/#savingloading-whole-models-architecture-weights-optimizer-state\n    """"""\n\n    def __init__(self, hdf5_model_filepath, name, quantize):\n        if not hdf5_model_filepath:\n            raise Exception(\'hdf5_model_filepath must be provided.\')\n        self.hdf5_model_filepath = hdf5_model_filepath\n        self.name = name\n        self.quantize = quantize\n\n        self.create_model()\n\n    def create_model(self):\n        """"""Initializes a model from the protobuf definition.\n        """"""\n        self.model = model_pb2.Model()\n        self.model.id = str(uuid.uuid4())\n        self.model.name = self.name\n\n    def serialize(self):\n        """"""serialize method.\n        Strategy for extracting the weights is adapted from the\n        load_weights_from_hdf5_group method of the Container class:\n        see https://github.com/keras-team/keras/blob/master/keras/engine/topology.py#L2505-L2585\n        """"""\n        hdf5_file = h5py.File(self.hdf5_model_filepath, mode=\'r\')\n\n        self.model.keras_version = hdf5_file.attrs[\'keras_version\']\n        self.model.backend = hdf5_file.attrs[\'backend\']\n        self.model.model_config = hdf5_file.attrs[\'model_config\']\n\n        f = hdf5_file[\'model_weights\']\n        for layer_name in f.attrs[\'layer_names\']:\n            g = f[layer_name]\n            for weight_name in g.attrs[\'weight_names\']:\n                weight_value = g[weight_name].value\n                w = self.model.model_weights.add()\n                w.layer_name = layer_name\n                w.weight_name = weight_name\n                w.shape.extend(list(weight_value.shape))\n                if self.quantize:\n                    w.type = \'uint8\'\n                    quantized, min_val, max_val = quantize_arr(weight_value)\n                    w.data = quantized.astype(np.uint8).tobytes()\n                    w.quantize_min = min_val\n                    w.quantize_max = max_val\n                else:\n                    w.type = \'float32\'\n                    w.data = weight_value.astype(np.float32).tobytes()\n\n        hdf5_file.close()\n\n    def save(self):\n        """"""Saves as binary protobuf message\n        """"""\n        pb_model_filepath = os.path.join(os.path.dirname(self.hdf5_model_filepath),\n                                         \'{}.bin\'.format(self.name))\n        with open(pb_model_filepath, \'wb\') as f:\n            f.write(self.model.SerializeToString())\n        print(\'Saved to binary file {}\'.format(os.path.abspath(pb_model_filepath)))\n\n\nif __name__ == \'__main__\':\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\'hdf5_model_filepath\')\n    parser.add_argument(\'-n\', \'--name\', type=str, required=False,\n                        help=\'model name (defaults to filename without extension if not provided)\')\n    parser.add_argument(\'-q\', \'--quantize\', action=\'store_true\', required=False,\n                        help=\'quantize weights to 8-bit unsigned int\')\n    args = parser.parse_args()\n\n    hdf5_model_filepath = args.hdf5_model_filepath\n\n    if args.name is not None:\n        name = args.name\n    else:\n        name = os.path.splitext(os.path.basename(hdf5_model_filepath))[0]\n\n    quantize = args.quantize\n\n    encoder = Encoder(hdf5_model_filepath, name, quantize)\n    encoder.serialize()\n    encoder.save()\n'"
python/model_pb2.py,0,"b'# Generated by the protocol buffer compiler.  DO NOT EDIT!\n# source: model.proto\n\nimport sys\n_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode(\'latin1\'))\nfrom google.protobuf import descriptor as _descriptor\nfrom google.protobuf import message as _message\nfrom google.protobuf import reflection as _reflection\nfrom google.protobuf import symbol_database as _symbol_database\nfrom google.protobuf import descriptor_pb2\n# @@protoc_insertion_point(imports)\n\n_sym_db = _symbol_database.Default()\n\n\n\n\nDESCRIPTOR = _descriptor.FileDescriptor(\n  name=\'model.proto\',\n  package=\'\',\n  syntax=\'proto3\',\n  serialized_pb=_b(\'\\n\\x0bmodel.proto\\""\\x89\\x01\\n\\x07Weights\\x12\\x12\\n\\nlayer_name\\x18\\x01 \\x01(\\t\\x12\\x13\\n\\x0bweight_name\\x18\\x02 \\x01(\\t\\x12\\r\\n\\x05shape\\x18\\x03 \\x03(\\r\\x12\\x0c\\n\\x04type\\x18\\x04 \\x01(\\t\\x12\\x0c\\n\\x04\\x64\\x61ta\\x18\\x05 \\x01(\\x0c\\x12\\x14\\n\\x0cquantize_min\\x18\\x06 \\x01(\\x02\\x12\\x14\\n\\x0cquantize_max\\x18\\x07 \\x01(\\x02\\""\\x80\\x01\\n\\x05Model\\x12\\n\\n\\x02id\\x18\\x01 \\x01(\\t\\x12\\x0c\\n\\x04name\\x18\\x02 \\x01(\\t\\x12\\x15\\n\\rkeras_version\\x18\\x03 \\x01(\\t\\x12\\x0f\\n\\x07\\x62\\x61\\x63kend\\x18\\x04 \\x01(\\t\\x12\\x14\\n\\x0cmodel_config\\x18\\x05 \\x01(\\t\\x12\\x1f\\n\\rmodel_weights\\x18\\x06 \\x03(\\x0b\\x32\\x08.Weightsb\\x06proto3\')\n)\n\n\n\n\n_WEIGHTS = _descriptor.Descriptor(\n  name=\'Weights\',\n  full_name=\'Weights\',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name=\'layer_name\', full_name=\'Weights.layer_name\', index=0,\n      number=1, type=9, cpp_type=9, label=1,\n      has_default_value=False, default_value=_b("""").decode(\'utf-8\'),\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      options=None),\n    _descriptor.FieldDescriptor(\n      name=\'weight_name\', full_name=\'Weights.weight_name\', index=1,\n      number=2, type=9, cpp_type=9, label=1,\n      has_default_value=False, default_value=_b("""").decode(\'utf-8\'),\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      options=None),\n    _descriptor.FieldDescriptor(\n      name=\'shape\', full_name=\'Weights.shape\', index=2,\n      number=3, type=13, cpp_type=3, label=3,\n      has_default_value=False, default_value=[],\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      options=None),\n    _descriptor.FieldDescriptor(\n      name=\'type\', full_name=\'Weights.type\', index=3,\n      number=4, type=9, cpp_type=9, label=1,\n      has_default_value=False, default_value=_b("""").decode(\'utf-8\'),\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      options=None),\n    _descriptor.FieldDescriptor(\n      name=\'data\', full_name=\'Weights.data\', index=4,\n      number=5, type=12, cpp_type=9, label=1,\n      has_default_value=False, default_value=_b(""""),\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      options=None),\n    _descriptor.FieldDescriptor(\n      name=\'quantize_min\', full_name=\'Weights.quantize_min\', index=5,\n      number=6, type=2, cpp_type=6, label=1,\n      has_default_value=False, default_value=float(0),\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      options=None),\n    _descriptor.FieldDescriptor(\n      name=\'quantize_max\', full_name=\'Weights.quantize_max\', index=6,\n      number=7, type=2, cpp_type=6, label=1,\n      has_default_value=False, default_value=float(0),\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      options=None),\n  ],\n  extensions=[\n  ],\n  nested_types=[],\n  enum_types=[\n  ],\n  options=None,\n  is_extendable=False,\n  syntax=\'proto3\',\n  extension_ranges=[],\n  oneofs=[\n  ],\n  serialized_start=16,\n  serialized_end=153,\n)\n\n\n_MODEL = _descriptor.Descriptor(\n  name=\'Model\',\n  full_name=\'Model\',\n  filename=None,\n  file=DESCRIPTOR,\n  containing_type=None,\n  fields=[\n    _descriptor.FieldDescriptor(\n      name=\'id\', full_name=\'Model.id\', index=0,\n      number=1, type=9, cpp_type=9, label=1,\n      has_default_value=False, default_value=_b("""").decode(\'utf-8\'),\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      options=None),\n    _descriptor.FieldDescriptor(\n      name=\'name\', full_name=\'Model.name\', index=1,\n      number=2, type=9, cpp_type=9, label=1,\n      has_default_value=False, default_value=_b("""").decode(\'utf-8\'),\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      options=None),\n    _descriptor.FieldDescriptor(\n      name=\'keras_version\', full_name=\'Model.keras_version\', index=2,\n      number=3, type=9, cpp_type=9, label=1,\n      has_default_value=False, default_value=_b("""").decode(\'utf-8\'),\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      options=None),\n    _descriptor.FieldDescriptor(\n      name=\'backend\', full_name=\'Model.backend\', index=3,\n      number=4, type=9, cpp_type=9, label=1,\n      has_default_value=False, default_value=_b("""").decode(\'utf-8\'),\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      options=None),\n    _descriptor.FieldDescriptor(\n      name=\'model_config\', full_name=\'Model.model_config\', index=4,\n      number=5, type=9, cpp_type=9, label=1,\n      has_default_value=False, default_value=_b("""").decode(\'utf-8\'),\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      options=None),\n    _descriptor.FieldDescriptor(\n      name=\'model_weights\', full_name=\'Model.model_weights\', index=5,\n      number=6, type=11, cpp_type=10, label=3,\n      has_default_value=False, default_value=[],\n      message_type=None, enum_type=None, containing_type=None,\n      is_extension=False, extension_scope=None,\n      options=None),\n  ],\n  extensions=[\n  ],\n  nested_types=[],\n  enum_types=[\n  ],\n  options=None,\n  is_extendable=False,\n  syntax=\'proto3\',\n  extension_ranges=[],\n  oneofs=[\n  ],\n  serialized_start=156,\n  serialized_end=284,\n)\n\n_MODEL.fields_by_name[\'model_weights\'].message_type = _WEIGHTS\nDESCRIPTOR.message_types_by_name[\'Weights\'] = _WEIGHTS\nDESCRIPTOR.message_types_by_name[\'Model\'] = _MODEL\n_sym_db.RegisterFileDescriptor(DESCRIPTOR)\n\nWeights = _reflection.GeneratedProtocolMessageType(\'Weights\', (_message.Message,), dict(\n  DESCRIPTOR = _WEIGHTS,\n  __module__ = \'model_pb2\'\n  # @@protoc_insertion_point(class_scope:Weights)\n  ))\n_sym_db.RegisterMessage(Weights)\n\nModel = _reflection.GeneratedProtocolMessageType(\'Model\', (_message.Message,), dict(\n  DESCRIPTOR = _MODEL,\n  __module__ = \'model_pb2\'\n  # @@protoc_insertion_point(class_scope:Model)\n  ))\n_sym_db.RegisterMessage(Model)\n\n\n# @@protoc_insertion_point(module_scope)\n'"
