file_path,api_count,code
demo.py,5,"b'import numpy as np\nimport time\nimport cv2\nimport torch\nfrom torch.autograd import Variable\nimport lib.utils.utils as utils\nimport lib.models.crnn as crnn\nimport lib.config.alphabets as alphabets\nimport yaml\nfrom easydict import EasyDict as edict\nimport argparse\n \ndef parse_arg():\n    parser = argparse.ArgumentParser(description=""demo"")\n\n    parser.add_argument(\'--cfg\', help=\'experiment configuration filename\', type=str, default=\'lib/config/360CC_config.yaml\')\n    parser.add_argument(\'--image_path\', type=str, default=\'images/test.png\', help=\'the path to your image\')\n    parser.add_argument(\'--checkpoint\', type=str, default=\'output/checkpoints/mixed_second_finetune_acc_97P7.pth\',\n                        help=\'the path to your checkpoints\')\n\n    args = parser.parse_args()\n\n    with open(args.cfg, \'r\') as f:\n        config = yaml.load(f)\n        config = edict(config)\n\n    config.DATASET.ALPHABETS = alphabets.alphabet\n    config.MODEL.NUM_CLASSES = len(config.DATASET.ALPHABETS)\n\n    return config, args\n\ndef recognition(config, img, model, converter, device):\n\n    # ratio resize\n    w_cur = int(img.shape[1] / (config.MODEL.IMAGE_SIZE.OW / config.MODEL.IMAGE_SIZE.W))\n    h, w = img.shape\n    img = cv2.resize(img, (0, 0), fx=w_cur / w, fy=config.MODEL.IMAGE_SIZE.H / h, interpolation=cv2.INTER_CUBIC)\n    img = np.reshape(img, (config.MODEL.IMAGE_SIZE.H, w_cur, 1))\n\n    # normalize\n    img = img.astype(np.float32)\n    img = (img / 255. - config.DATASET.MEAN) / config.DATASET.STD\n    img = img.transpose([2, 0, 1])\n    img = torch.from_numpy(img)\n\n    img = img.to(device)\n    img = img.view(1, *img.size())\n    model.eval()\n    preds = model(img)\n\n    _, preds = preds.max(2)\n    preds = preds.transpose(1, 0).contiguous().view(-1)\n\n    preds_size = Variable(torch.IntTensor([preds.size(0)]))\n    sim_pred = converter.decode(preds.data, preds_size.data, raw=False)\n    print(\'results: {0}\'.format(sim_pred))\n\n\nif __name__ == \'__main__\':\n\n    config, args = parse_arg()\n    device = torch.device(\'cuda:0\') if torch.cuda.is_available() else torch.device(\'cpu\')\n\n    model = crnn.get_crnn(config).to(device)\n    print(\'loading pretrained model from {0}\'.format(args.checkpoint))\n    model.load_state_dict(torch.load(args.checkpoint))\n\n    started = time.time()\n\n    img = cv2.imread(args.image_path)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n    converter = utils.strLabelConverter(config.DATASET.ALPHABETS)\n\n    recognition(config, img, model, converter, device)\n\n    finished = time.time()\n    print(\'elapsed time: {0}\'.format(finished - started))\n\n'"
train.py,10,"b'import argparse\nfrom easydict import EasyDict as edict\nimport yaml\nimport os\nimport torch\nimport torch.backends.cudnn as cudnn\nfrom torch.utils.data import DataLoader\nimport lib.models.crnn as crnn\nimport lib.utils.utils as utils\nfrom lib.dataset import get_dataset\nfrom lib.core import function\nimport lib.config.alphabets as alphabets\n\nfrom tensorboardX import SummaryWriter\n\ndef parse_arg():\n    parser = argparse.ArgumentParser(description=""train crnn"")\n\n    parser.add_argument(\'--cfg\', help=\'experiment configuration filename\', required=True, type=str)\n\n    args = parser.parse_args()\n\n    with open(args.cfg, \'r\') as f:\n        # config = yaml.load(f, Loader=yaml.FullLoader)\n        config = yaml.load(f)\n        config = edict(config)\n\n    config.DATASET.ALPHABETS = alphabets.alphabet\n    config.MODEL.NUM_CLASSES = len(config.DATASET.ALPHABETS)\n\n    return config\n\ndef main():\n\n    # load config\n    config = parse_arg()\n\n    # create output folder\n    output_dict = utils.create_log_folder(config, phase=\'train\')\n\n    # cudnn\n    cudnn.benchmark = config.CUDNN.BENCHMARK\n    cudnn.deterministic = config.CUDNN.DETERMINISTIC\n    cudnn.enabled = config.CUDNN.ENABLED\n\n    # writer dict\n    writer_dict = {\n        \'writer\': SummaryWriter(log_dir=output_dict[\'tb_dir\']),\n        \'train_global_steps\': 0,\n        \'valid_global_steps\': 0,\n    }\n\n    # construct face related neural networks\n    model = crnn.get_crnn(config)\n\n    # get device\n    if torch.cuda.is_available():\n        device = torch.device(""cuda:{}"".format(config.GPUID))\n    else:\n        device = torch.device(""cpu:0"")\n\n    model = model.to(device)\n\n    # define loss function\n    criterion = torch.nn.CTCLoss()\n\n    optimizer = utils.get_optimizer(config, model)\n\n    last_epoch = config.TRAIN.BEGIN_EPOCH\n    if config.TRAIN.RESUME.IS_RESUME:\n        model_state_file = config.TRAIN.RESUME.FILE\n        if model_state_file == \'\':\n            print("" => no checkpoint found"")\n        checkpoint = torch.load(model_state_file, map_location=\'cpu\')\n        model.load_state_dict(checkpoint[\'state_dict\'])\n        last_epoch = checkpoint[\'epoch\']\n\n    if isinstance(config.TRAIN.LR_STEP, list):\n        lr_scheduler = torch.optim.lr_scheduler.MultiStepLR(\n            optimizer, config.TRAIN.LR_STEP,\n            config.TRAIN.LR_FACTOR, last_epoch-1\n        )\n    else:\n        lr_scheduler = torch.optim.lr_scheduler.StepLR(\n            optimizer, config.TRAIN.LR_STEP,\n            config.TRAIN.LR_FACTOR, last_epoch - 1\n        )\n\n    train_dataset = get_dataset(config)(config, is_train=True)\n    train_loader = DataLoader(\n        dataset=train_dataset,\n        batch_size=config.TRAIN.BATCH_SIZE_PER_GPU,\n        shuffle=config.TRAIN.SHUFFLE,\n        num_workers=config.WORKERS,\n        pin_memory=config.PIN_MEMORY,\n    )\n\n    val_dataset = get_dataset(config)(config, is_train=False)\n    val_loader = DataLoader(\n        dataset=val_dataset,\n        batch_size=config.TEST.BATCH_SIZE_PER_GPU,\n        shuffle=config.TEST.SHUFFLE,\n        num_workers=config.WORKERS,\n        pin_memory=config.PIN_MEMORY,\n    )\n\n    best_acc = 0.5\n    converter = utils.strLabelConverter(config.DATASET.ALPHABETS)\n    for epoch in range(last_epoch, config.TRAIN.END_EPOCH):\n\n        function.train(config, train_loader, train_dataset, converter, model, criterion, optimizer, device, epoch, writer_dict, output_dict)\n        lr_scheduler.step()\n\n        acc = function.validate(config, val_loader, val_dataset, converter, model, criterion, device, epoch, writer_dict, output_dict)\n\n        is_best = acc > best_acc\n        best_acc = max(acc, best_acc)\n\n        print(""is best:"", is_best)\n        print(""best acc is:"", best_acc)\n        # save checkpoint\n        torch.save(\n            {\n                ""state_dict"": model.state_dict(),\n                ""epoch"": epoch + 1,\n                ""best_acc"": best_acc,\n            },  os.path.join(output_dict[\'chs_dir\'], ""checkpoint_{}_acc_{:.4f}.pth"".format(epoch, acc))\n        )\n\n    writer_dict[\'writer\'].close()\n\nif __name__ == \'__main__\':\n\n    main()'"
lib/config/alphabets.py,0,"b'alphabet = """"""\xe6\x9f\x90\xe4\xb9\x83\xe8\x8f\xbd\xe8\xb5\x85\xe9\xb2\x8d\xe5\xa0\x8c\xe7\xaa\x9f\xe5\x8d\x83\xe5\x97\xa1\xe6\x8c\x81\xe8\xa1\xa5\xe5\x9a\x85\xe5\x8e\x8d\xe7\x8f\xaa\xe9\x83\x88\xe8\xb4\xb1\xe8\xb0\x85\xe9\x82\xbb\xe5\xac\x97\xe7\xb5\xb7\xe5\xa1\xa9\xe6\x88\x8a\xe9\x87\x9c\xe7\x8e\x8a\xe5\x88\xa8\xe6\x95\xac\xe5\x8c\x80\xe5\xa1\xbe\xe8\x8c\x9e\xe5\xb0\xbe\xe5\xae\x9c\xe6\xa2\x97\xe7\x9a\xa4\xe6\xb0\x94\xe7\xa9\xb9\xef\xbc\xa1\xe9\xb9\xa7\xe9\x81\x81\xe6\x99\xaf\xe5\x87\xaf\xe8\x87\xbe\xe8\xa7\x8a\xe5\xbb\x9b\xe9\x9d\x93\xe8\x8a\x8b\xe5\xb6\x8b\xe6\xaf\x90\\\n\xe9\xb8\xaa\xe8\x8b\xbb\xe6\x85\xb0\xe6\xaa\x91\xe7\x99\xb8\xe5\x96\x82\xe6\x95\x91\xe6\x80\xb5\xe5\xbd\xb0\xe7\x9c\xa2\xe5\xad\x90\xe5\x86\xb3\xe6\xbf\xa0\xe6\xba\x8f\xe6\xa8\xa8\xe8\x82\xb1\xe8\xb7\xba\xe4\xbd\xba\xe8\x85\xbf\xe5\x9b\xba\xe9\x82\x93\xe7\x9a\x9e\xe8\x9f\xad\xe5\xad\x95\xe9\xa6\x8e\xe8\xb6\x8a\xe9\x82\xb0\xe4\xbc\xa0\xe5\x9e\xa9\xe5\x88\xa0\xe7\xab\xa9\xe7\x96\xb9\xe6\x9d\xad\xe8\x9a\x81\xe5\xb4\xae\xe6\x92\xad\xe5\x86\xbb\xe9\x9b\xaf\xe9\x94\xb5\xe8\x8d\xa7\xe5\xb0\x86\xe7\x95\x8f\xe8\xb0\x8f\xe8\x89\xae\xe9\x9d\xb6\xe9\x81\xb9\xe7\x85\xb2\xe7\x9e\xbe\xe6\xb3\xa0\xe8\xaf\xad\xe6\xb2\xad\xe7\xbb\xa1\xe7\xae\x80\xe8\x94\x91\xe6\x92\xba\\\n\xe9\xad\x82\xe5\xa7\x9a\xe5\xbf\x9d\xe5\x89\x8e\xe8\xb9\xac\xef\xbc\xa0\xe8\x91\xb3\xe8\xaf\x80\xe9\x92\x9c\xe7\xa5\x81\xe6\x96\x97\xe5\xbd\xb9y\xe7\x8a\xb8\xe7\x99\x8c\xe9\x92\xb4\xe5\x8d\x85\xe7\xbb\xa3\xe5\x85\xb6\xe6\xa2\xad\xe8\xbf\x82\xe4\xba\x9a\xe6\x8b\x88\xe8\x86\xa6\xe9\x98\xaa\xe5\x83\xae\xe7\x9b\x90\xe8\xb8\xaf\xe9\xaa\x98\xe5\xbe\xa9\xe5\xb0\x98\xe9\x99\xa2\xe5\xb0\xac\xe8\x8e\xb1\xe4\xbf\xb8\xe6\x90\x94\xe5\x9d\x90\xe7\x9e\xad\xe7\x89\x9b\xe4\xb9\x8f\xe5\x86\xbd\xe5\xa8\xb1\xe6\x9a\x98\xe7\xbb\xb0\xe8\x9b\x9f\xe5\xb3\xa1\xe5\x8a\x88\xe7\x83\xab\xe5\x95\x8a\xe5\x89\x91\xe5\xa5\xb6\xe6\x8b\xad\xe6\x9a\x84\xe9\x9c\xb2\xe9\xb9\x9c\xe8\xa8\xb8\\\n\xe8\xb4\xb4\xe5\xad\xb3\xe6\xbf\xaf\xe9\x99\xa1\xe5\xa6\x83\xe8\xa1\x8d\xe4\xbb\xbfD\xe8\x8d\x89\xe6\x89\xae\xe6\x80\xa7\xe8\x85\xbc\xe8\xbe\x91\xe5\xba\xa7\xe7\x85\x8a\xe6\x9f\x9e\xe6\x89\x81\xe7\xbc\x81\xe8\xb1\xa8\xe8\xbe\xb9\xe5\x9d\x9d\xe7\x93\xbb\xe5\xae\xb6\xe8\xb4\xa6\xe9\x94\x97\xe9\xab\xad\xe9\x9d\x9e\xe6\x9c\x8d\xe5\xbe\x85\xe6\xb5\x87\xe5\xac\xb4\xe9\x9c\x81\xe5\xae\xb8\xe5\x90\x9e\xe9\x85\x8a\xe8\x82\x83\xe3\x81\xb4\xe5\x89\xaa\xe7\x8e\xb7\xe5\x89\xbf\xe7\xa3\x8b\xe7\xa5\x96\xe8\x8d\x92\xe5\xb7\xa1\xe7\xbc\xb8\xe8\x94\xab\xe5\x92\x95\xe4\xba\xb7\xe3\x80\x87\xe6\xb1\xbe\xe5\x99\x8c\xe7\x9a\x8a\xe6\xb2\xbf\xe5\x8c\xa3\xe8\x8e\x8a\xe9\x85\x8c\xe7\x86\x8a\\\n\xe7\x91\x9a\xe9\xa5\xb7\xe9\x92\x95\xe7\x8a\xb7\xe9\xb9\x96\xe7\x93\xa3\xe8\x80\x8e\xe5\xa9\xbf\xe8\x9d\x99\xe7\x81\xab\xe8\x87\x8a\xef\xbc\x82\xc3\xb7\xe8\x97\x93\xef\xbd\x8b\xe7\xaf\xae\xe8\xb0\x80\xe8\xb0\xa5\xe8\xa3\x9f\xe5\x84\xa3\xe9\xa5\xb1\xe6\x88\xbe\xe5\xbe\x87\xe9\x9e\x91\xe7\x95\x99\xe6\x84\xab\xe7\x9b\x85\xe8\x9b\xa4\xe6\x95\x9d\xe7\x97\x87\xe8\xaf\xbd\xe5\x95\x89\xe6\xa0\x93\xef\xbc\xbd\xe5\xa7\x9e\xe8\x89\xaf\xe8\xaf\x98\xe6\xb4\xbb\xe5\x94\xa2\xe8\x8a\x97\xe8\x9a\xac\xe7\x8b\xae\xe4\xb8\xb0\xe5\x88\x8d\xe6\x93\x80\xe8\x93\x84\xe6\xa7\x8a\xe5\xbd\x95\xe6\x9c\xac\xe6\xa9\x87\xe6\x98\xa0\xe4\xba\x86\xe8\x9a\x80\xe7\x90\x96\xe8\xb5\xb0\xe8\xa1\x85\\\n\xe6\xbe\x9b\xe8\xbe\x90\xef\xbc\x84\xe8\x95\xa8\xe7\xaf\xbe\xe7\x8b\xad\xe9\xb2\x8b\xe7\x89\x87\xe8\x94\xb8\xe5\xb3\xaa\xe5\x8a\x9f\xe5\x88\xba\xe9\x85\x82\xe8\xa4\xb4\xe5\xa3\x8e\xe9\xaa\x96\xe9\x99\x8c\xe5\xbc\xa2\xe8\xbd\xb8\xe8\xbf\x81\xe6\x8f\xb6\xe6\xaa\x80\xe7\xbb\xaa\xe6\x9a\xb4\xe8\x8b\x8f\xe9\x9f\xac\xe8\x86\xb3\xe5\xaa\xb3\xe9\x93\x9c\xe9\xb2\x87\xe5\xb2\x97c\xe8\x84\x8a\xe9\xb9\xad\xe7\xad\xb0\xe7\xbf\xa9\xe8\xa1\xb7\xe7\x94\xa5\xe7\x83\x9b\xe5\x80\xaa\xe9\xad\xad\xe6\x80\x95\xe6\x9c\xa8\xe5\x87\x84\xe9\x95\x96\xe7\xa0\x8c\xc2\xb1\xe5\x8d\xa7\xe7\xa2\xb3\xe5\xab\xa3\xe7\xb2\xb1\xe5\xa5\x96\xe6\x8d\x9f\xe7\x96\xb8\xe5\x97\xb3\xe5\x8f\xb9\xe5\xaf\x86\\\n\xe5\x90\xae\xe8\x81\x8a\xe7\x92\x81\xe6\xa5\xa6\xe6\x9c\xafY\xe6\x88\x8e\xe8\x96\xae\xe9\x93\xa3\xe5\x94\xaf\xe6\xa3\x80\xe5\xa9\x8a\xe6\x93\x8e\xe7\x95\xbf\xe7\xb5\x9c\xe8\xbe\x84\xe9\xaa\x80\xe7\x86\xb9\xe6\xa3\xa3\xe7\xbc\xae\xe9\x98\x89\xe8\x91\x9b\xe6\x99\x83\xe8\xaf\x81\xe8\xa3\xa4\xe5\xa8\x88\xe6\x9a\xb99\xe6\x9f\x88\xe4\xbc\x91\xe4\xbc\x8d\xe6\x9c\x80\xe6\x97\xae\xe7\xa0\x81\xe6\x88\xa1\xe9\x93\x90\xe6\xa9\xa6\xe7\x92\x9f\xe6\x88\x9f\xe9\xa6\x84\xe4\xba\x8c\xe6\x89\x88\xe7\x9c\xb7\xc2\xb0\xe7\x9b\xb2\xe6\xa3\xa0\xe7\x9f\xb3\xe8\x8e\xb7\xe8\x96\xb0\xe3\x80\x82\xe7\x86\xac\xe7\xa2\xb0\xe5\xa4\xaa\xe5\xb7\xa7\xe6\x8b\x99\xe8\x93\xbc\xe8\x84\x8f\\\n\xe5\xbf\xb1\xe5\x9c\xaf\xe7\x8f\x8f\xe6\x8b\x92\xe7\xa6\xb3\xe9\x92\xaf\xe5\xae\x9b\xe7\x98\xa9\xe6\x8a\x9f\xe9\x85\xa5\xe9\x99\x95\xe8\x8c\xab\xe6\x9d\x8c\xe3\x80\x8f\xe8\xb8\xaa\xe6\x9f\xa0\xe6\xbb\xa8\xe6\xb7\xae\xe8\xae\xb7\xe6\x9f\xa5\xe6\x89\xa3\xe4\xb9\x94\xe5\xad\xa2\xe9\xb2\xb6\xe7\x85\x8c\xe6\xbe\xb9\xe5\xba\xb9\xe4\xbb\xa3\xe6\x84\x9b\xe8\xaf\x95\xe6\xa8\xaf\xe7\x96\xa1\xe2\x80\x93\xe8\x8e\x89\xe7\xa0\x9a\xe6\xaf\x92\xe8\xb8\xb1\xe5\xb9\xbd\xe5\xac\xbf\xe7\xa0\xa6\xe7\x83\xb9\xe9\x94\xaf\xe8\xa7\x92\xe9\x85\xb6\xe6\x9e\xaa\xe8\x90\x8c\xe8\x9c\x9c\xe7\x87\xb9\xe8\xbe\xbde\xe7\x9e\xa9\xe5\x9f\xa0\xe2\x92\x80\xe9\x82\xb9\xe6\x84\x81\xe5\xa8\x9c\xe7\x9d\xab\\\n\xe5\x9e\x82\xe5\xba\x8a\xe7\xbf\x95\xe6\xb2\x82\xe6\x98\x87\xe6\x9a\xb2\xe5\x85\xa8\xe7\xba\xbd\xe9\x92\x97\xe4\xbe\x9b\xe6\x8b\xa6\xe7\x81\x8a\xe7\xbc\xaf\xe5\x99\xb6\xe2\x91\xa7\xe7\x95\x8e\xe8\xb0\x88\xe6\xa9\x84\xe6\xae\x82\xe5\xb9\x95\xe6\xa3\x82\xe9\x83\x93\xe7\x84\x89\xe6\xb1\x97\xce\xb2\xe6\xb5\x92\xe2\x91\xa4\xe7\x87\xa5\xe7\x94\xb3\xe9\x82\xaa\xe5\x96\x8b\xe4\xbf\x8a\xe4\xb9\xa6\xe5\x80\xbe\xe9\xab\xa6\xe8\x93\x90\xe4\xbf\x8e\xe9\x97\xab\xe8\x9b\x8a\xe7\x9f\xa5\xe7\x8b\xb1\xe5\x91\x9b\xe9\x8c\xa1\xe7\xa7\xa7\xe5\x83\xa6\xe8\x8b\x8c\xe4\xbd\xa3\xe9\x81\x93\xe7\x9e\xbf\xe6\x8d\xba\xe6\xb5\x9a\xe8\x8c\x80\xe5\x98\x8c\xe6\x96\xa5\xe5\xbd\x9d\xe6\x9e\xaf\\\n\xe6\xb1\xb6\xe8\x82\xae\xe8\x90\xbd\xe8\xaf\x91\xe9\x82\x9b\xe6\x81\x9a\xe9\x80\xa1\xe5\x96\x9f\xef\xb9\xa4\xe5\xa7\x9c\xe7\x95\xa5\xe6\x9f\xb5\xe9\x80\x8d\xe6\x9f\x98\xe9\xa2\xa4\xe7\xbb\xb5\xe6\x8e\x88\xe8\x9a\x9c\xe5\xa4\xa1\xe5\x9a\xbc\xe6\x87\x8a\xe5\xb8\x9a\xe9\x9c\x9c\xe6\xac\xb7\xe6\x86\xa8\xe8\x9c\xbe\xe9\xa2\x8c\xe5\x80\xac\xe8\xa4\xa5\xe8\xb4\xb7\xe5\x8e\x8b\xe7\x92\x8b\xe5\xbf\x98\xe9\x89\x8d\xe7\x8e\xb1\xe6\xa6\xad\xe7\x8d\xad\xe5\xaf\xbb\xe2\x85\xa4\xe6\x81\xbf\xe9\xb8\xa8\xe5\xb2\xb7\xe8\xae\xb5\xe9\x92\x93\xe6\x99\xa7\xe9\xa1\x92\xe5\xbc\xb1\xe8\xb0\x91\xe6\x89\xaa\xe5\x8e\x89\xe6\xa2\x81\xe5\x88\x83\xe7\x88\xb5\xe7\x91\x9f\xe8\xa2\x8b\xe5\x8f\xb5\xe9\x93\xb8\\\n\xe7\x99\x94\xe5\xa6\xb3\xe8\xaf\xbb\xe5\x90\xbb\xe7\x91\x84\xe6\xa3\x93\xe7\x98\xb5\xe8\x99\x93\xe6\x88\xb7\xe5\x85\x80\xe2\x92\x82\xe8\x87\xb1\xe6\x81\xad\xe6\xa7\xbf\xe6\xae\x89\xe7\xa5\x9c\xe7\x8a\xb6\xe5\xb9\xbc\xe7\x93\x9c\xe6\x87\xb50\xe7\x8a\x8d\xe8\x93\x89\xe6\x9e\xa2\xe9\x92\x96\xe5\x90\xb2\xe7\x8e\x8b\xe9\xbb\x98\xe9\x94\xa6\xe7\x99\x9e\xef\xbc\xb1\xe9\x80\x90\xe8\xaf\x9a\xe7\xaa\xb4\xe4\xbf\xb1\xe5\x86\x8f\xe6\x85\x88\xe6\xb0\xb2\xe8\xa0\xa2\xe9\x80\x9e,\xe5\x8d\x8a\xe7\x8c\x9c\xe8\xaf\xa3\xe7\x8f\x91\xe6\xbf\xa9\xe6\xb3\xbd\xe6\xb0\x90\xe6\xb3\x8a\xe6\x8a\xb9\xe4\xb8\x8b\xe8\xb0\x81\xe7\x9a\x99\xe6\x94\xb8\xe8\x9b\xb9\xe5\xa8\x91\xe6\x9c\xab\xe9\x83\xa1\\\n\xe6\x96\x93\xe8\xaf\xb6\xe7\xbc\xb2\xe7\x96\x9f\xe6\xae\x83\xe5\xba\x93\xe5\x8d\xbf\xe8\x85\xb1\xe7\xa2\xa3\xe5\xb3\x84\xe8\x8d\xa4\xe6\x97\xb6\xe2\x88\xb6\xe8\x90\xb8\xe5\x97\xb7\xe5\x8c\x99\xe4\xbd\xa0\xe6\x92\xb7\xe5\xb8\x90\xe6\xb0\xa8\xe8\x8c\x81\xd0\xb8\xe6\xa8\xb5\xe5\x86\x95\xe9\xb5\xbe\xe6\xa0\x8c\xe8\x88\x82\xe6\xad\xa4\xe5\xa3\x96\xe5\x96\xbe\xe7\xa7\xa3\xe8\x95\x8a\xe9\xb8\xad\xe6\x83\xab\xe6\x85\x8c\xe5\x9b\x97\xe8\xbe\xa9\xe5\xa9\xb4\xe6\x8b\xbd\xe9\x94\xba\xe2\x95\xb1\xe5\x88\xae\xe6\xba\x8d\xe8\xba\x8f\xe5\xbe\x98\xe6\x8f\x84\xe4\xb8\x9a\xe5\xa6\xa8\xe2\x88\xb5\xe6\xb1\xa7\xe5\x9c\xb0\xe7\x97\xabn\xe5\xbd\x92_\xe7\xb2\x9f\xe9\x85\xae\xe5\xb8\x95\\\n\xe4\xbc\x9f\xe9\x92\xb5\xe5\xbf\x90\xe9\x9e\x92\xe5\x88\x92\xe9\x81\xbd\xe4\xba\x94\xe7\x91\x9e\xe6\x91\x84\xe8\xb9\x88\xe8\xb2\x8b\xe6\xa2\xaf\xe9\xaa\x91\xe8\x8a\xb8\xe9\x93\x86\xe5\xb8\x87\xe9\x94\x92\xe9\x93\xad\xe5\xaa\x9a\xe6\x84\xa0\xe7\x99\x9c\xe8\x8c\xb1\xe9\x94\x81\xe6\x9b\xaa\xe6\x92\xb0\xe6\xb3\xbc\xe5\x80\xa9\xe5\x8f\x9f\xe6\x92\x9e\xe5\x91\x95\xe8\x91\x86\xe5\xba\x94\xe4\xbd\x95\xe7\x8b\xb0\xe8\x8d\xb7\xe5\x93\x9a\xe5\x85\xa2\xe5\x98\xad\xe6\xbb\x9a\xe6\xb6\x95\xe9\x85\xb5\xe5\xb7\xa8\xe5\x86\x85\xe7\xa7\xb0\xe5\x93\x91\xe6\x8e\xbe\xe7\x86\x94\xe8\x9c\x98\xe8\x9e\x82\xe6\xa8\x91\xe8\xa3\x80\xe8\x8c\xb9\xe9\xb3\x9c\xe6\x91\xb8\xe9\x93\xb0\xe4\xbc\x9e\xe9\x94\x85\\\n\xe8\x8f\xb2\xe6\x89\xb6\xe8\xb5\x91\xe5\x82\x85\xe2\x84\x83\xe6\xb3\x98\xe7\xa3\x95\xe5\x85\x88\xe5\xb0\xb1\xe5\x8f\xb7\xe6\xa3\xb9\xe5\x8f\xa0\xe5\x85\x8b\xe8\xa7\xa3\xe6\xb1\x82\xe9\x93\x81\xe7\xaa\x83\xe8\x8b\x94\xe6\xb6\xb5\xe5\x8c\x9d\xe9\xa9\xa9\xe8\x8a\x9d\xe9\xba\x83\xe5\xb8\x96\xe8\x8e\xb2\xe7\xba\xb8\xe7\xa8\x9a\xe8\xa4\x9b\xe2\x97\x87\xe7\xa5\x9e\xe5\x89\x82\xe5\xa4\xb4\xe7\x8b\xa0\xe5\x92\x82\xe8\x85\x8c\xe5\x88\x9d\xe6\x92\xbc\xe5\x86\x91\xe6\xa0\xa2\xe5\xb9\x94\xe7\x95\xaa\xe6\xa7\x81\xe6\xb8\xaf\xe8\xa4\x92\xe9\x80\x97\xe7\xbd\xb9\xe8\xa8\x80\xe8\x93\x91\xe7\xbb\x9f\xe9\x85\x8e\xe6\x88\x97\xe8\xb0\x9b\xe7\x87\x94\xe7\x9b\xb9\xe7\x89\x88\xe5\x9e\xb1\xe8\xb2\x9f\\\n\xe5\xb4\x99\xe8\x92\x82\xe7\xbd\x90\xe8\x9c\x83\xe9\x85\xbf\xe7\x9a\xbf\xe6\x93\xa2\xe7\x81\xb8\xe6\xbd\x8f\xe5\xbc\x9f\xe4\xba\x9f\xe6\x84\xa3\xe5\xac\x9b\xe6\xb2\x95\xe7\xaf\x83\xe6\xb5\xbc\xe7\x86\x84\xe7\x81\xb6\xe5\xae\x85\xe9\x83\x85\xe9\x82\x98\xe6\x97\xad\xe5\xbf\x99\xe4\xbb\xb7\xe8\xb8\xbd\xe7\xbc\x88\xe9\x92\xa0\xe8\x8d\xa0\xe5\xb0\xa2\xe6\xaa\x87\xef\xbc\x83\xe7\x99\xab\xe8\xbd\xad\xe4\xb8\x95\xe5\x93\x9d\xe5\xaa\xbe\xe8\x85\xad\xe7\xb3\x9f\xe5\x83\xb0\xe6\x8f\xa9\xe8\x93\xba\xe7\x8d\x97\xe6\xb2\x84\xe9\x94\x88\xe5\xb3\xa4\xe7\x8e\x95\xe7\x9b\x8d\xe5\xb4\x94\xe6\xa3\xb5\xe9\xb3\x9e\xe9\x80\x91\xe8\xb8\x89\xe6\xb6\xa4\xe6\x81\x99\xe4\xbe\xaa\xe7\xa2\x8cR\xe6\x8e\xac\\\n\xe9\xaa\xa0\xe7\xa9\x97\xe6\x96\x87\xe7\xb4\xa0\xe4\xba\xa1\xe5\x9c\x86\xe5\xbb\xbc\xe9\xb2\x96\xe8\xb1\xb8\xe5\x9b\xa2\xe7\xbc\x80\xe7\xb2\xb9\xe7\xa4\xbe\xe9\x94\x8f\xe8\x8a\xb9\xe4\xbc\xbc\xe6\x8c\x9e\xe5\x95\x9f\xe7\xb3\xa0\xe9\x93\x91\xe5\xb2\xa2\xe8\x8c\xaf\xe6\x8a\xbd\xe5\xa4\xbc\xe6\xb0\xa1\xe7\xa6\xbe\xe4\xbb\xa5\xe5\xa7\xa5\xe5\x93\xad\xe7\x89\xa1\xe5\x96\x8a\xe7\x8b\x9e\xe8\x87\xac\xe6\xb5\xa0\xe4\xbf\xae\xe8\x94\xbc\xe6\xbd\xae\xe6\x97\x85\xe5\x9e\x8b\xe8\x83\xad\xe9\x84\xaf\xe5\xa4\x95\xe6\x8c\x9f\xe9\x83\x91\xe6\x9b\xb0\xe6\x9b\xb9\xe5\x91\x9c\xe5\xa7\x91\xe8\x82\xbc\xe8\x9e\xa8\xe8\x90\x98\xe4\xb9\x9c\xe6\x8f\x86\xe6\x82\xa6\xe5\xa0\x95\xe4\xbb\xa8\xe6\xa1\xa2\\\n\xe8\xb5\x9b\xe8\x85\xbb\xe7\xbe\x9a\xe7\xbc\xa0\xe7\xa3\x94\xe8\x95\xbe\xe7\xa0\xa3\xe6\xb8\xb2\xe5\xb9\xba\xe5\x89\x94\xe6\x85\xa8\xe5\x9c\x88\xe7\x94\xb5\xe9\x92\x8c\xe5\x87\xab\xe7\x97\xa3\xe8\x8e\x9e\xe7\xb3\x9c\xe9\xb2\xb8\xe7\xa8\xbb\xef\xbd\x9e\xe5\xbc\x8d\xe6\x93\x96\xe4\xba\x95\xe5\xbd\xa9\xe6\xb2\x99\xe6\x97\x92\xe7\x9f\xb8\xe6\xa3\xbb\xe5\x9b\xa1\xe8\xaf\xae\xe9\xa5\xba\xe9\x80\xa6\xe7\xa5\x93\xe8\xb5\x9c\xef\xbc\x85\xe5\x91\xbd\xe9\x84\x84\xe6\x83\xb6\xe6\x97\xa9\xe9\xa5\xb0\xe6\x85\x91\xe5\xb9\xbf\xe9\xaa\x8a\xe5\x90\xb1\xe9\x9b\xb6\xe6\x97\xaf\xe6\x9b\xb7\xe8\xa8\x87\xe2\x94\x94\xe8\x8f\x82\xe7\xba\xab\xe5\x93\x8e\xe7\x82\xb3\xe7\x92\x87\xe6\x88\x88\xe8\x90\x8e\\\n\xef\xb9\x90\xe4\xb8\xa4\xe7\x8f\xa3\xe6\xbe\x9c\xe5\x95\x84\xe7\x8d\x98\xe8\x99\xae\xe8\xb8\x8f\xe5\x97\x92\xe5\xb2\x8c\xe7\xa2\xb4\xe6\xa5\x82\xe7\xb4\xa7\xe8\xa2\x96\xe5\xbc\x88\xe8\xba\xab\xe4\xbf\x9b\xe5\x80\xad\xe6\xa1\x85\xe5\x9b\xbf\xe6\x91\x98\xe7\xb3\x85\xe6\xb7\x8f\xe7\xa7\xb8\xe8\xb5\x94\xe6\x83\xb4\xe6\x94\xaf\xe5\xba\x9c\xe6\xa4\x9f\xe8\xba\xaf\xe8\xb6\xb9\xe7\xaa\x92\xe7\xa7\x98\xe6\x9d\xb0\xe7\x82\xbc\xe9\xad\x8d\xe4\xb8\xb2\xe7\xb2\xaa\xe9\x9b\x89\xe6\xb9\xb2\xe7\x93\xb7\xe4\xb8\xb4\xe6\x99\x99\xe5\x8b\x90\xe9\xb8\xbd\xe5\x91\xb6\xe8\xb5\x82\xe8\xb5\xaa\xe7\xa4\xb6\xe5\xa6\xbb\xe8\xb0\x8e\xe9\xb8\xa2\xe9\x9c\x8e\xe7\xad\x92\xe7\x96\xb2\xe5\xb1\x81\\\n\xe6\xbc\xa9\xe6\xbf\x80\xe9\x82\x83\xe6\xb7\xb3\xe6\x99\xa8\xe6\x81\xaa\xe7\xb1\x8d|\xe6\xb2\xa3\xe6\x89\xa2\xe9\xb6\x84P\xe6\xb1\x95\xe9\x97\xb0\xe5\x84\xa1\xe3\x80\x8d\xe7\xac\x94\xe4\xbe\x84\xe7\x88\xbb\xe6\x9c\x90\xe8\xb5\x9d\xe8\x8e\xb3\xe8\xbf\x87\xe6\xa4\x80\xe6\xb6\xae\xe8\xa2\x9c\xe5\xa7\x97\xe9\xbe\x8c\xe8\x82\xa9\xe6\xbd\x86\xe5\xb8\xb7\xe6\x8f\xaa\xe6\xae\x86\xe5\x92\x86\xe7\xae\x85\xe7\xae\xb8\xe5\x87\x8c\xe7\x94\xa1\xe8\xa3\xa8\xe7\xab\x8b\xe6\xa1\xa6\xe7\x99\x96\xe8\x8f\x8c\xe8\x81\x92\xe4\xbd\x9b\xe7\x84\xb0\xe8\x8f\x91\xe7\x82\x98\xe9\xa0\xab\xe8\x99\xa2\xe6\xba\xa6N\xe6\x97\xa7\xe5\x96\xbb\xef\xbc\xb9\xe9\x85\x86\xe4\xbb\x81\xe4\xbb\xbd\\\n\xe7\xbd\xb2\xe5\xb4\x91\xe7\x97\xaa\xe9\x86\x9a\xe5\xae\x8b\xe5\x8d\xb1\xe7\xb1\xb3\xe5\x92\xa4\xe5\x85\x95\xe8\xa5\x84\xe7\xb8\xa0\xe5\x8a\x99\xe9\x9b\x84\xe8\xbd\xbf\xe6\x80\xa8\xe7\xbb\x97\xe5\x8f\xac\xe9\xa6\x96\xe8\xbe\x96\xe7\x81\xaf\xe4\xb8\x91\xe8\xb7\xb5\xe7\xa2\xbe\xe6\x8e\xb8\xe8\x9b\x8e\xe5\xad\x91\xe9\x93\x93\xe8\xb7\xaa\xe6\x89\xaf\xe6\x95\xb7\xe9\x98\xbf\xe7\xaf\x93\xe5\x92\x84\xe9\x9f\xaa\xe5\x8f\xaf\xe5\xb3\x92\xe6\xb4\xb1\xe5\x88\x96\xe8\x82\xa5\xe5\x8d\x97\xe9\xb9\x9a\xe5\x8c\xbe\xe9\xb2\xb5\xe6\xb2\x9f\xe7\xbb\xa8\xe8\x8a\x8f\xe4\xb8\xbe\xe9\xae\xbc\xe7\x84\x99\xe6\xb1\x89\xe6\xb9\xbf\xe8\xa2\x8d\xe5\x93\xb2\xe5\xbd\x98\xe6\xb7\x91\xe5\xa5\xa1\\\n\xe8\x91\xa9\xe4\xbb\x95\xe9\x95\x8c\xe5\xb2\x99\xe8\x88\xb7\xe8\xa2\xad&\xe6\xa6\x9e\xe7\x9b\xbc\xe5\x8b\x9d\xe7\xb2\x95\xe9\x83\xbe\xe6\xb8\x91\xe9\xbb\x9b\xe7\xb0\xb8\xe8\xbf\xb9\xe9\xb9\xa6\xe7\xba\xbf\xe5\x93\x99\xe7\x98\xb3\xe5\xbd\x80\xe5\xbe\x8b\xe5\xad\x97\xe5\x83\xb9\xe9\x98\x82\xe8\xa3\x94\xe9\x99\x82\xe8\xb9\x8b\xe7\xaa\x9d\xe7\x8b\xa1\xe6\xb6\x89\xe3\x80\x89\xe6\xa7\x8c\xe6\x8e\x87\xe9\xb3\x90\xe8\x8e\x9c\xe7\x9b\xb8\xe8\xaf\x8f\xe9\x9a\x90\xe7\x9e\x8e\xe6\xb3\xb7\xe6\x8a\x95\xe7\x88\xb7\xe9\x94\xad\xe5\x91\x90\xe8\x80\x80\xe4\xb9\x98\xe5\xb1\x88\xe7\xa8\xa0\xe6\xbc\xb3\xe7\xb2\x9c\xe4\xbd\x8e\xe8\xb7\x9f\xe5\x8c\xb3\xe6\xb3\xb3\xe7\xaf\x81\\\n\xe5\x9c\x9c\xe9\xbb\x91\xe5\x8e\x9a\xe6\xb2\x85\xe9\xa2\x8b\xe8\x9f\xbe\xe8\xa1\xab\xe8\xbf\xb0\xe9\xa5\xa6\xe8\x93\x9d\xe9\xab\x80\xe5\x93\x81\xe9\x9c\xa3\xe9\x93\xbe\xe5\xaa\xa2\xe6\xad\x99\xe5\xb5\xaf\xe8\xb8\x9e\xe7\xa7\x8b\xe6\x8b\x93\xe6\x8b\x82\xe6\xa1\x8c\xe5\x96\x8f\xe8\xb7\xa4\xe5\xae\xbd\xe9\x90\x98\xe7\xb4\xac\xe9\x83\x84\xe8\x9a\xa8\xe6\x9d\x82\xe8\x88\xb9\xe6\x96\x8c\xe7\x89\x8d\xe6\x89\x8b\xe9\xac\xbb\xe4\xbd\x98\xe7\xbb\x81\xe8\xb9\x89\xef\xbc\x90\xe9\xa1\xbc\xe8\x99\xb1\xe6\x9d\x90\xe5\x95\xaa\xe8\xaf\xb1\xe9\x80\xb6\xe7\x83\xbd\xe5\xa8\xb22\xe6\xb1\x8a\xe5\x9a\x93\xe8\x93\x9f\xe5\x82\xa8\xe6\xb8\x9a\xe8\xa7\x88\xe7\x81\xb5\xe7\xa5\xbc\\\n\xe5\x8f\x8d\xe9\x99\x8d\xe5\xa0\x99\xe7\x82\x95\xe6\xa1\x90\xe5\xaf\xa1\xe8\xba\x9e\xe6\xa6\xbc\xe7\x9e\xa5\xe5\x99\x97\xe5\x86\xa4\xe4\xbd\xa4\xe8\xb4\xbc\xe9\x92\xb2\xe8\x80\x9c\xe8\xb0\xa4\xe6\xb8\x90\xe8\x81\xa9\xe5\xb7\xb7*\xe7\xb9\xbb\xe9\xaa\xa5\xe6\xbb\x9e\xe8\xb8\x8c\xe8\x8d\xaf\xe9\x95\x87\xe8\x99\x91\xe6\x8c\xa0\xe9\xb7\xaa\xe4\xbc\x8f\xe6\x85\x9d\xe8\x9a\xa3\xe8\x87\xad\xe5\x94\xa0\xe8\xae\xa6\xe8\xb9\xa9\xe5\xbe\x8a\xe6\x96\xaf\xe5\x9f\x94\xe6\x99\x94\xe6\xa7\x9f\xe4\xbd\xac\xe6\x83\xaf\xe8\x9c\x95\xe9\x85\xb9\xe5\x8d\x95\xe5\xa6\x96\xe5\xae\x97\xe7\x82\xb7\xe7\x9e\x8b\xe9\xa3\x8f\xe4\xbf\xa3\xe7\xa8\xb3\xe6\xb0\x85\xe7\x90\xb2\xe5\xb1\x82\\\n\xe9\x80\x85\xe8\xae\xb9\xe5\xbb\xb6\xe6\x88\x98\xe9\xa6\x8f\xe6\xa7\x90\xe8\x8d\x9a\xe6\xb2\xac\xe6\xb2\xa1\xe6\xb9\xaf\xe5\x88\x99\xe5\xb7\xab\xe6\x9c\xba\xe9\x83\xab\xe7\x90\xa5\xe5\xbe\x92\xe4\xb8\xa2\xe6\x90\xad\xe9\x96\x93\xe8\x86\x88\xe5\xbe\x89\xe6\xb4\xbd\xe8\xb4\xad\xe8\x83\xba\xe7\x9c\x89\xe7\x90\x86\xe8\x8b\x93\xe5\xa9\xa7\xe6\x9e\xb7\xe8\x89\x98\xe7\xa0\xbb\xe5\x90\xaf\xe8\xbd\xa6\xe6\x95\x85\xe5\xa5\x8e\xe6\x85\xb5\xe8\x85\x90\xe9\x8e\x94\xe5\x87\x8f\xe7\x82\x8e\xe5\x98\x8e\xe5\xb9\xa2\xe8\x8b\x92\xe8\xbf\x93\xe6\xbd\xb4\xe9\x82\xa0\xe3\x80\x96\xe9\xb9\x86\xe3\x80\x97\xe6\x9d\x86\xe8\xb4\xb8\xe8\x8c\xb5\xe6\xb1\x9f\xe8\x88\x9f\xe5\x8a\xb3\\\n\xe5\x90\x93\xe6\x9c\xad\xe8\xaa\x8a\xe5\xb2\xbf\xe7\xad\x9b\xe6\xb1\x80\xe5\x86\xb0\xe7\xa7\x88\xe8\xb4\xa4\xe6\xa2\xb5\xe5\x9e\x92\xe7\xa8\x8b\xe8\xaf\xb3\xe5\xbc\x8f\xe6\x91\x92\xe8\x80\x8b\xe9\x9e\x85\xe7\xaa\x96\xe5\xa2\x83!\xe5\x90\xb5\xe7\x97\x82\xe9\x92\x92\xe7\xa7\x92\xe6\xaf\x97\xe9\xa2\x86\xe8\xb4\xbe\xe7\x90\xac\xe6\x83\x8a\xe5\x9b\xb4\xe6\x92\xae\xe6\xa8\x8a\xe6\xbd\x98\xe8\xb4\xae\xe9\xa5\xae\xe9\x9e\x8b\xe5\x82\x92\xe5\xb3\x99\xe5\xa2\xa9\xe5\x8a\xa1\xe5\xb4\x82\xe8\xaf\xa5\xe9\xa1\xba\xe9\xb2\xa8\xe7\x82\xac\xe9\x95\xb5\xe9\x93\xa7\xe5\x90\x97\xe5\xa6\x92\xe8\x99\xb9\xe5\xb9\xa4\xe8\xaf\x8d\xe8\xb5\xb6\xe6\x81\x9d\xe8\xb1\xa1\\\n\xe5\x8d\x87\xe8\x82\xb8\xe8\xa3\x81\xe7\xad\xb2\xe9\x9a\xa7\xe6\x84\xbf\xe8\x84\xb2\xe7\xa3\x81\xe8\xa1\xa2\xe6\xb5\x81\xe6\xa2\xa6\xe9\x84\xb3\xce\xb4\xe4\xba\x8b\xe5\xba\x9f\xe7\xb4\xab\xe5\x95\xa1\xe6\xb5\x83\xe8\x81\xbf\xe9\x92\x87\xe5\xa5\x9a\xe5\x94\x90\xe9\x93\x96\xe5\x8f\xb8\xe6\x80\xbb\xe8\x80\x96\xe5\x85\x89\xe4\xb9\x8c\xe6\x9d\x89\xe7\xa6\x8f\xe5\x96\xb7\xe8\x90\x9d\xe5\x87\xad\xe5\xb6\xba\xe5\x9e\x84\xe4\xb9\x82\xe7\x93\xaf\xe7\xac\xa6\xe8\x8c\xa7\xe4\xb9\xa9\xe8\x8c\x9c\xe5\x95\xb8\xe5\xa8\x84\xe8\xb5\x84\xe9\xa9\xb6\xe8\xa5\xa6\xe8\x81\x9a\xe8\x82\xa3\xe9\xbc\x8b\xe5\xa3\xa4\xe6\xae\xa1\xe6\xaa\xa0\xe2\x91\xa5\xe6\xb3\xb1\xe8\xb5\xa7\\\n\xe8\x99\x8f\xe6\x9f\x9f\xe9\x80\xaf\xe6\x92\x82\xe7\x8e\xb0\xe9\x99\xa9\xe5\x88\xb3\xe5\xbc\x82\xe9\x9b\x8e\xe6\x8d\xbb\xe5\x91\x98\xe8\xa5\x9c\xe5\x88\xb7\xe9\x98\x99\xe7\x8e\xa2\xe6\xb4\x8b\xe5\xae\xbe\xe4\xbb\x98\xe8\x8a\xb7\xe6\x8b\xa5\xe8\x88\xac\xe4\xbd\x8f\xe7\x88\x86\xe9\x85\xa1\xe5\x99\x89\xe5\x8f\xb2\xe5\xab\x9c\xe6\x8f\x92\xe8\x95\x83\xe8\x9b\xb0\xe8\xa4\xaa\xe6\xb6\xaa\xe8\x88\x8c\xe6\x96\xa1\xe9\xa2\xa0\xe7\xab\xbd\xef\xbc\x98""\xe9\x99\xa8\xef\xbc\xbf\xe8\xbd\xae\xe6\xbc\xa6\xe7\xa2\xb1\xe9\xa2\x90\xe9\x9c\x9e\xe8\x9d\x97\xe6\xb4\x91\xe6\x80\x81\xe9\x81\xa5\xe6\x99\x81\xe6\xae\xb7\xe8\xb0\x86\xe5\x95\xac\xe5\x9f\x87\\\n\xe7\xba\xac\xe6\x9d\x91\xe5\x92\xb8\xe3\x81\xaa\xe9\x98\x8e\xe8\xb4\x9d\xe6\x8a\x84\xe7\xb1\xbb\xe9\xbb\x9f\xe8\xba\xac\xe5\x90\xbc\xe7\x90\xa4\xe7\x91\x81\xe7\x96\xbc\xe6\xa1\xaf\xe5\xbe\x80\xe6\xb8\x8d\xe6\x8d\x85\xe5\xb9\xbb\xe7\x97\x92\xe9\x92\x89\xe5\xad\x80\xe7\x88\xbd\xe8\xad\x84\xe4\xbd\x9e\xe5\xbe\x97\xe6\x8b\xa2\xe6\x81\xa4\xe7\x83\x98\xe6\x98\xa8\xe8\x9d\x87\xe6\x91\x81\xe8\x8a\xa5\xe2\x98\x85\xe8\x9c\xa5\xe6\xa1\xa0\xe7\x95\x9c\xe8\xb4\xbf\xe6\x84\xa4\xe7\xaa\x8d\xe8\x92\x97\xe5\x88\xa9\xe6\xb4\xa7\xe9\xad\x91\xe6\xb9\x9c\xe6\xb7\xa4\xe6\xb0\xa6\xe6\xb8\x97\xe9\x98\xa1\xe5\x85\x915\xe6\x9e\xa7\xe8\xb0\xa8\xe5\xa5\x82\xe5\x97\x85\\\n\xe7\x9b\x91\xe6\x8d\xa2\xe9\x82\x9d\xe8\x87\x86\xe8\xae\xbf\xe8\x83\xab\xe7\xb4\x98\xe9\x82\x91\xe7\x9c\xa9\xe7\x99\xa3\xe8\xa1\xa9\xe4\xbc\xad\xe6\x8a\x9a\xe4\xba\xae\xe9\x95\xad\xe7\xbb\x8c\xe5\x8d\xa0\xe8\x83\x86\xe9\x97\xbc\xe8\xbe\x9c\xe9\x98\x9f\xe7\xba\xbb\xe6\xa6\xae\xe8\x8c\xad\xe5\x88\xad\xe9\xa2\x94\xe7\x9a\xae\xe4\xbc\xba\xe6\x83\xb9\xe9\x93\xa0\xe4\xba\x8f\xe3\x80\x88\xe8\x8f\xb1\xe5\x96\xb3\xe5\x85\x81\xe5\xa8\xa1\xe8\x81\x8c\xe6\xb2\x8c\xe9\x99\xb5\xe7\x94\x84\xe7\xbb\x8a\xe5\x8f\x89\xe5\x92\x8e\xe8\xb5\x96\xe9\xa7\x86\xe6\x9b\xbc\xe5\x90\x84\xe4\xbc\x8b\xe5\xa5\x8b\xe5\xae\x9a\xe7\xaf\xa1\xe9\x9c\x96\xe5\xb8\x94\xe9\x9d\x96\xe7\x92\x80\\\n\xe2\x94\x82\xe6\x99\x9e\xe8\xae\xb3\xe5\xa4\xaf\xe6\x8b\xb3\xe7\x83\x9f\xe9\x99\x9b\xe8\x8c\x85\xe6\xae\x9a\xe9\xb9\x98\xe8\xb7\x8b\xe7\x8f\xb2\xe8\xa7\x81X\xe8\xaa\x93\xe5\xb2\xba\xe7\xbc\x9d\xe7\xa0\xa7\xe7\x9f\xa9\xe8\xa1\x8c\xe6\x98\x9f\xe5\x88\xb0\xe6\x8e\x8c\xe6\x9a\xa7\xe8\xa4\x94\xe5\xa3\x81\xe7\xb9\x87\xe6\x94\xab\xe7\xbd\xa5\xe5\xa8\x98\xe9\xa2\xa6\xe6\x8a\xac\xe6\x8b\x90\xe5\x98\xb4\xe5\x8f\xa1\xe5\x8d\x8f\xe8\x83\xa5\xe8\x9b\x8b\xef\xbc\x9a\xe5\xad\xa6\xe5\x91\x8a\xe5\xa5\x84\xe6\xa2\x93\xe7\x8c\xab\xe7\x94\xb8\xe7\xa6\x84\xe8\xa2\xa4\xe8\xbf\x88\xe5\x82\x88\xe6\xb9\x96\xe5\xb8\x85\xe9\xb2\xa0\xe8\x85\x93\xe7\xbb\xbc\xe5\xa8\xbc\\\n\xe9\xa3\x92\xe8\xb5\x8b\xe5\x80\xa5\xe6\x82\xbb\xe5\xbe\xb9\xe4\xbc\xb4\xe6\xb6\xaf\xe9\x9b\xa9\xe5\xb5\x8a\xe8\x91\x97\xe7\x9e\xb3\xe7\xae\xb4\xe7\x85\xa6\xe5\xb9\xb6\xe3\x80\x8c\xe9\x86\xb3\xe6\xb8\xb4\xe8\x8d\x90\xe8\xa7\x87\xe9\x83\x83\xe6\x9e\xab\xe5\xaf\x9f\xe8\xa1\xa1\xe8\xb4\xbd\xe9\x94\x9f\xe7\xac\xa8\xe6\xa6\x82\xe6\x9b\xbf\xe7\x82\xbd\xe9\x86\xb5\xe6\xb2\xaa\xe9\x86\x87\xe7\xbc\x89\xe5\x86\xa0\xe7\x92\x83\xe6\x9b\xb8\xe6\x8b\x98\xe9\xa9\xb9\xe7\x9b\x86\xe9\x83\x87\xe7\x88\xb1\xe5\xa4\x84\xe6\xb5\xbf\xe9\x95\xab\xe8\xb7\x9b\xe6\xaf\xaf\xe5\xab\xb1\xe5\x90\xab\xe5\x91\xa8\xe6\xa1\x81\xe6\xa3\x92\xe7\x95\x8c\xe8\xb4\xa1\xe7\x9c\xa6\xe6\x80\xab\\\n\xe8\xb4\xaa\xe5\xb9\xb8\xe7\x8f\x89\xe6\xb6\xb8\xe9\xab\x85\xe8\xae\xb6\xe8\xa2\x82\xe6\xbf\xa1\xe7\xa0\xbe\xe7\x8f\x90\xe7\x8c\xb4\xe7\x9e\xb0\xe9\xb2\xa4\xe6\x81\xbd\xe7\x83\xb7\xe5\x86\x81\xe9\x87\x8e\xe8\x9b\xad\xe5\xae\xbf\xe9\x9d\xa9\xe5\x97\xb2\xe7\x97\x94\xe6\xaf\x99\xe6\x90\x92\xe6\x8e\xa3\xe8\xa3\xb4\xe7\x88\xb8\xe6\x99\xa1\xe7\x84\x98\xe7\x9b\x88\xe5\xa0\x89\xe9\x95\xbf\xe6\x90\x82\xe9\x97\xaf\xe4\xbf\x9f\xe5\x9f\xb8\xe3\x81\xa6\xe6\x9e\x8b\xe6\xad\xa3\xe6\xbf\x9e\xe9\x9b\xa8\xe7\x9d\xaa\xe6\x8b\x8a\xe9\x94\xa8\xe8\x85\xbe\xe6\x91\xba\xe2\x94\x80\xe9\x97\xb1\xe6\x84\x86\xe9\x80\xbc\xe5\x9c\xa8\xe6\x89\x92\xe8\x96\x87\xe9\x99\x84\xe5\x9f\x83\\\n\xe6\xa1\x86\xe4\xb9\x9e\xe8\x8e\x8e\xe6\x9d\xa1\xe8\xba\xb2\xe7\x84\xb1\xe7\x95\x88\xe6\xae\xbd\xe9\x94\x8b\xe9\xa5\xaf\xe4\xbc\xbd\xe7\xbb\x9e\xe5\x9e\xa1\xef\xbd\x83\xe7\x8b\xb2\xe8\xaf\xaf\xe7\x9e\xaa\xe7\xbf\x9f\xe5\x86\x89\xe7\x9e\x9f\xe8\xb7\x84\xe5\xa8\xa9\xe4\xbd\xbb\xe7\xaa\xba\xe6\x9f\xb1\xe6\xa0\x80\xe7\x94\x9c\xe7\xa7\x80\xe7\xb2\x97\xe9\x95\xb0\xe6\xb3\x9e\xe8\xbd\xb2\xe8\xbf\x8e\xe4\xbc\xa4\xe5\xbd\xa2\xe8\x9c\x87\xe9\x9a\x99\xe9\xa2\x98\xe9\xb9\x8a\xe6\x8d\xa9\xe9\x99\xb2\xe6\xbd\x81\xe5\x8f\xb0\xe8\x95\xa4\xe6\xb5\xa3\xe5\xac\x96\xe2\x92\x8c\xe9\xbe\x84\xe9\x9e\xa3\xe8\xbe\x83\xe6\x8e\xbc\xe7\xac\x86\xe5\x96\x86\xe7\xb2\xbd\xe4\xb8\xba\\\n\xe8\x90\xa5\xe8\x83\xa7\xe8\x8a\xb1\xe6\x9d\x80\xe6\xb9\x84\xe9\xb2\xa2\xe7\x88\xac\xe6\x84\xb7\xe7\xae\xa9\xe7\xa2\x8e\xe7\x90\x9b\xe2\x96\xb3\xe6\x80\xa53\xe6\xb7\xb1\xe7\xbf\x8e\xe7\xaf\xa6\xe9\x83\x95\xe6\x9f\x9c\xe7\x97\x8a\xe5\xbd\x93\xe8\xb0\xa2\xe8\xb9\xb4\xe7\x97\x9b\xe6\xa3\x8b\xe6\xbe\xa1\xe6\x90\xba\xe6\x95\x99\xe6\xa4\xb0\xe9\xa9\xbd\xe6\x9d\xb5\xe7\x9c\xb8\xe5\xb1\xa0\xe8\x88\xb6\xe6\xb4\x9b\xe5\xaa\xaa\xe5\x88\x87\xe8\xb7\x9d\xe6\xa9\xb9\xe8\xb4\xa8\xe8\xb8\xa2\xe5\x88\xb9\xe7\x98\xa2\xe8\xae\xa7\xe6\x9d\x83\xe6\x8a\x91\xe5\x90\x8d\xe5\xae\xb0\xe5\xab\x81\xe9\x9d\xa2\xe9\x93\x83\xe9\x95\x80\xe6\xb0\xab\xe9\x81\x9b\xe5\x8d\xb2\\\n\xe7\xbb\xa9\xe7\x8b\x82\xe7\x99\xbe\xe5\xb4\x87\xe6\xb4\xba\xe7\x8d\xa0\xe7\xbc\xb6\xe5\x85\x92\xe5\x90\xac\xe6\xb2\xae\xe7\x9a\xb1\xe9\xa1\xbb\xe6\x8e\x8f\xe5\x8c\xae\xe6\x91\x9e\xe9\xba\xb8\xe6\x9c\x97\xe5\x93\x80\xe8\x87\xb4\xe8\x82\xa0\xe5\xa7\x94\xe5\xa0\x83\xe5\x9f\x9a\xe7\xab\xaf\xe9\x93\xb4\xe6\xb8\x8e\xe3\x80\x91\xe6\xa6\xb7\xe9\xb3\x83\xe7\xbb\x9d\xe9\x81\x87\xe8\x8e\xb4\xe7\xb8\xa2\xe5\xb0\xbd\xe4\xb8\x83\xe9\xa5\xb2\xe7\x82\xb8\xe7\x84\xa6\xe7\x97\xb0\xe7\x97\xb9\xe5\x93\x88\xe8\x98\xb8\xe8\x86\x9c\xe6\xb6\xa9\xe6\x97\xa8\xe6\xa1\x8e\xe6\xaa\xac\xe8\xb0\xaa\xe2\x86\x93\xe5\x84\x8b\xe9\xbc\xbb\xe7\xba\xb2\xe7\xa6\x81\xe6\x89\x83\xe6\x8d\xa3\\\n\xe8\x9e\x83\xe6\xb0\x9f\xe8\xb8\xa3\xe7\xa3\x90QC\xe8\xb4\xb3\xe5\xa8\x87\xe5\x96\x83\xe9\x9c\x82\xe8\x96\xa4\xe9\x92\x9f\xe9\x98\x8a\xe9\x80\xb8\xe6\x9c\x89\xe4\xba\x93\xe8\x83\xbd\xe5\x9e\x9b\xe8\xa3\x82\xe4\xbf\x98\xe7\x98\x9f\xe9\x98\x8c\xe6\xaa\xa9\xe7\xbf\x94\xe5\xaf\x87\xe5\x86\xb7\xe8\xb6\x85\xe6\xa8\xad\xe6\x9f\xaf\xe6\x99\x93\xe8\xb0\xb8\xe9\xaa\x87\xe9\x92\xbc\xe6\x99\xbe\xe9\x80\xb5\xe8\xaf\xa1\xe6\x90\x9e\xe6\xaa\x90\xe8\x8c\xa8\xe9\xb9\x9e\xe5\xa6\xb2\xe5\x9d\xa6\xe9\x9f\x9c\xe5\x8f\xb6\xe5\xbb\xb7\xe5\x9e\x83\xe9\x81\x92\xe7\x97\xbf\xe5\x9d\xad\xe7\x8e\x93\xe4\xba\xb5\xe6\xbc\xab\xe8\x84\x8d\xe6\x84\x89\xe8\x8c\x9a\xe5\x8d\x8e\\\n\xe5\xa4\xa5\xe8\x86\x8a\xe6\x96\x9f\xe6\x8d\x95\xe6\x90\xbd\xe8\x8b\x95\xe2\x96\xa1\xe5\xa8\xa5\xe8\x8f\x96\xe5\x9b\xa0\xe7\x8b\xa9\xe9\x9b\xaa\xe6\x8e\x92\xe5\x93\x9f\xe5\x89\xbd\xe8\x9c\x93\xe4\xb8\x8a\xe5\xa0\xaa\xe5\x8b\x96\xe5\x9a\x8b\xe6\x81\x95\xe2\x92\x9a\xe5\x96\x89\xe4\xbb\x82p`\xe5\x8e\x98m\xe5\x85\x86\xe9\x98\x86\xe9\xa9\xad\xe9\xa9\xaf\xe5\x85\x83\xe4\xbc\xab\xe8\x90\x8a\xe8\xa1\x80\xe7\x98\xa4\xe7\x8c\x96\xe5\xae\xa6\xe6\x92\x92\xe7\xaf\x87\xe4\xba\x8d\xe7\xbc\xba\xe4\xbb\x87\xe6\x90\x9c\xe6\x89\x8d\xe5\xa4\x9c\xe8\xb4\x9e\xe5\xb2\x96Z\xe7\xad\x96\xe9\x9e\x8d\xe8\x8c\xb8\xe8\x86\x80\xe6\xb8\xa4\xe5\x9c\xa3\xe6\x91\x94\\\n\xe5\x96\x80\xe7\xae\x90\xe9\xa9\xb7\xe4\xb9\x92\xe5\x8b\xbf8\xe5\xb1\x91\xe8\x8a\xae\xe8\xbe\x9e\xe6\x8c\x87\xe7\x9c\xbc\xe5\xbc\xb5\xe8\xa4\xb0\xe5\x8d\x88\xe9\x93\x9d\xe5\xb8\x82\xef\xbc\xaa\xe6\xbb\x8f\xe6\xb6\x9e\xe7\x86\x99\xe9\xba\x82\xe6\x84\x8e\xef\xbf\xa5\xe8\x95\x88\xe8\xb1\x87\xe5\x86\xbe\xe5\x96\xa7\xe9\x92\xb8\xe8\xaf\xb2\xe7\xac\xbc\xe6\xb6\x85\xe6\xb0\x99\xe8\x80\xbf\xe9\xb8\xb5\xe9\x93\xa9\xe5\xb0\xb4\xe8\xb0\x8b\xe7\xa7\x8f\xe8\xbe\xab\xe5\x8f\x97\xe6\x8d\xb6\xe6\x9f\xa2\xe4\xb8\x80\xe8\x97\xa9\xe7\x97\x8d\xe6\xb3\xaa\xe9\xba\x9d\xe8\xa1\x99\xe9\xa5\xbf1\xe6\x8b\xb1\xe5\xb7\xa6\xe7\x9d\x91\xe5\x82\xa3\xe7\xab\x9e\xe8\x92\xba\\\n\xe5\xa6\x99\xe8\xa4\x99\xe9\x9d\xb3\xe7\xab\x99\xe9\x93\xaa\xe6\xa0\x87\xe9\x9b\xa0\xe9\x9a\x97\xe8\xa1\xbf\xe9\x92\x9e\xe5\xab\xaa\xe6\xa4\x8e\xe9\xaa\x90\xe7\xa2\x97\xe6\x94\xb9\xe5\xad\x99\xe8\xb7\xac\xe8\x80\xb6\xe8\x85\xae\xe5\x86\x80\xe5\xb8\xbd\xe7\xa1\x8b\xe5\xb6\x82\xe7\x8a\xb4\xe9\xbc\xbe\xe6\xa1\x88\xe9\x97\xae\xe9\x9c\x93\xe9\x8e\xae\xe9\x93\xa2\xe7\x9e\xbb\xe6\x96\x91\xe7\xaa\x8b\xe9\x99\xaa\xe9\xbe\x91\xe9\x83\xa8\xe6\x89\xbc\xe8\x9a\x82\xe5\x86\x9b\xe8\x98\x8b\xe7\xa9\xbf\xe9\x9a\x94\xe7\x97\x9e\xe6\x82\xaf\xe5\x8d\xbb\xe5\x91\x8b\xe8\xb5\x9f\xe6\x86\xa9\xe7\xa6\xa7\xe8\x88\x90\xef\xbc\xb2\xe6\xb3\x95\xe5\xa0\x80\xe5\x8e\xa9\xe8\xaf\x86\\\n\xe7\x94\x81\xe7\xa8\x97\xe7\xbd\x9a\xe5\x95\x95\xe8\xa8\x9a\xe6\xa5\x97\xe6\x97\xa2\xe9\x93\x8b\xe7\x8c\xac\xe5\xaf\x96\xe6\x81\x92\xe6\x92\xb8\xe6\xb1\x87\xe8\x82\x9d\xe6\xb0\xaa\xe6\x82\x89\xe6\xb0\xa4\xe6\xa6\xab\xe7\x9d\x9a\xe5\xbc\x95\xe8\x83\xa4\xe5\x96\xb1\xe7\xa5\xb8\xe6\x89\x80\xe9\x85\x87\xe6\xa1\xa3\xe7\xb8\xaf\xe7\xa1\x8a\xe5\xbb\x8a\xe4\xbb\x80\xe9\xb2\x9c\xe9\x99\x87\xe5\xbc\xa5\xe5\x9c\xbe\xe7\x8f\xa9\xe7\xa0\x92\xe8\x81\x96\xe7\xaa\x84\xe5\x8e\xa6g\xe7\x9f\xac\xe5\xb8\x98\xe6\x8a\x92\xe9\xb2\x81\xe7\xb1\xbd\xe6\xb0\xb8\xe6\x97\x8b\xe5\xa0\xa8\xe5\xae\x98\xe7\xae\xa1\xe9\x81\x97\xe4\xbc\x8a\xe5\x90\xa6\xe5\xb2\x91\xe9\x95\x99\\\n\xe6\x84\x80\xe8\x8b\xb1\xe5\xae\xb3\xe9\xa3\xa7\xef\xbc\x93\xe5\x8f\x96\xe8\xbf\x85\xe4\xbd\x91\xe7\x81\x8c\xe7\xad\x89\xe7\x86\x9b\xe8\x9e\x8d\xe7\xa5\xb7\xe5\x81\x8c\xe5\x80\xa6\xe8\x8e\x93\xe7\x82\xa4\xe9\xa6\x95\xe8\xb1\xb9\xe8\xae\xab\xe5\xb0\x89\xe7\xbd\x94\xe7\xbb\xb6\xe5\x90\x95\xe7\xbc\x9f\xe9\x85\xac\xe5\x87\xb0\xe6\x9d\x93\xe7\x84\x9a\xe7\x89\xa9\xe5\xbe\x99\xe7\x96\x8f\xe7\x9e\xac\xe5\x94\x87\xe9\x9d\xa0\xe7\x81\xad\xe9\x95\x8d\xe7\x8b\x92\xe7\x90\xae\xe8\x9c\x8d\xe8\xa3\x99\xe8\xb7\x83\xe9\x94\xb6\xe9\xbb\x89\xe9\xa5\xa8\xe6\x97\xbb\xe7\x9e\xa7\xe8\x88\xab\xe8\xbd\xbb\xe8\x8b\xa3\xe9\x9a\x8b\xe5\x87\xbd\xe7\x87\x80\xe5\x8b\xba\xe6\xb4\x99\\\n\xe8\xb4\xab\xe5\x92\xa3\xe5\x98\xb6\xe7\x94\x91\xe6\x8d\xb1\xe6\xb5\x8f\xe8\xb7\x82\xe7\x91\x9c\xe4\xbb\xb6\xe7\xa8\xa3\xe8\x8c\x95\xe7\x96\x97\xe8\xa3\xb3\xe8\x95\xb2\xe9\xb2\x94\xe8\xae\xa9\xe8\xaf\x83\xe5\xb2\xab\xe8\xae\xaa\xe6\xb0\x8f\xe5\x9d\xa0\xe4\xbc\xbb\xe5\xaa\x9b\xe6\x9d\x88\xe5\xbf\xa7\xe7\xbf\x8c\xe6\x8e\xb3\xef\xbc\x8d\xe6\x9c\x8b\xe5\xb0\x95\xe6\xbb\x94\xe7\xb6\xa6\xe8\xb0\xaf\xe9\x89\xb4\xe6\x83\x91\xe6\x8d\x89\xe6\x8d\xa7\xe8\xba\x85\xe6\xa1\x89\xe4\xb9\xa1\xe6\x92\x95\xe7\xbd\xa2$\xe8\xb6\x9f\xe5\xb7\xae\xe6\x8b\xae\xe7\xba\xa5\xe5\x9e\x93\xe9\xa2\x9b\xe8\x88\xaa\xe7\x93\x92\xe7\xad\x91\xe9\xba\x8b\xe6\xb3\x97\xe6\x8b\xaf\\\n\xe7\x9b\x8f\xe7\xbb\x94\xe7\x9e\x91~\xe8\x92\xbf\xe9\x92\xbd\xe6\x8c\x89\xe6\x8b\x9f\xe6\x86\xa7\xe7\x94\xab\xe7\x95\xb2\xe7\x8c\xbf\xe9\xa2\x97\xe5\x81\xbf\xe8\x8a\x99\xe7\xba\xa8\xe7\x82\x96\xe6\xa4\xad\xe6\xba\x9c\xe5\x92\xa7\xe7\xa7\xa6\xe5\x87\xb9\xe8\xa2\x88\xe5\x8d\xac\xe6\xb1\x9e\xe2\x94\x8c\xe5\x91\xbb\xe9\xbc\x8d\xe5\xae\x99\xe7\x9e\x85\xe7\xbb\xb2\xe5\xbd\xac\xe8\x9d\xae\xe7\xa7\x86\xe9\xa5\xb9\xe6\x8d\xad\xe5\xbd\xbb\xe5\x8e\xae\xe9\xa2\x82\xe8\x95\x99\xe8\x84\x9a\xe6\x89\xb3\xe8\xb6\xb4\xe9\xac\x83\xe5\xb9\x9b\xe6\xb4\xaa\xe7\x9e\xbd\xe6\xae\x84\xe9\x9f\xad\xe6\x90\x90\xe7\xa7\xad\xe4\xb9\xb3\xe8\xb0\xb2\xe5\xa9\x86\xe7\xaa\x8e\\\n\xe9\x92\xa5\xe8\xbe\x8a\xe5\xb0\x8a\xe8\x80\xbd\xe6\x9a\x82\xe5\xa6\x87q\xe5\x92\x90\xe6\xb4\xb2\xe6\xa6\x9c\xe6\x80\xbf\xe6\xa7\xbd\xe5\x98\x9b\xe6\x9c\x95\xe8\xa7\x8c\xe5\xaf\xbc\xe5\xb8\xb8\xe9\xaa\x8b\xe7\x94\xb1\xe6\x95\xa6\xe8\x85\x8a\xe4\xbc\x9a\xe6\xb7\xa6\xe6\x82\xbc\xe6\x82\xa3\xe8\x9b\xb3\xe5\x86\xb2\xe7\xaa\xa5\xe8\xa7\x85\xe8\x82\xaa\xe5\x97\xa3\xe6\x8d\x83\xe5\xb1\xb9\xe7\xaa\xbf\xe5\xa5\x97\xe9\xbe\x9a\xe5\xa8\x92\xef\xbc\xa2\xe2\x97\x8b\xe6\xa8\xbd\xe5\x9f\x92\xe9\xa5\x9f\xe9\x97\xb7\xe9\x81\xb6\xe8\xb7\x8c\xe9\x97\xad\xe6\xb2\x9a\xe7\x82\x85\xe2\x91\xa6\xe8\x8a\xaf\xe7\x8d\xac\xe8\x82\x98\xe8\x9b\x87<\xe7\xaf\xb1\xe6\x8b\x8e\\\n\xe5\xa0\xb0\xe5\x90\xad>\xe4\xbf\x85\xe9\xa2\x8a\xe5\x8d\xaf\xe9\x99\x9f\xe4\xb8\xa7\xe7\x8d\xbe\xe6\xae\x8b\xe6\x9f\x93\xe8\x9c\x92\xe6\x8b\x9c\xe6\xa8\xa1\xe5\xbc\x9b\xe5\xaf\x8c\xe4\xb9\x85\xe8\x8f\xa9\xe4\xba\x88\xe5\xa9\xa2\xe7\xbb\xbb\xe8\x92\x8d\xe8\x88\xb5\xe5\xab\xa1\xe5\x97\x93\xe5\x81\x95\xe6\x9b\xb4\xe4\xbf\xa8\xe7\x8b\xbb\xe9\x80\x8a\xe7\xbc\x96/\xe7\x9e\x84\xe6\xa2\x85\xef\xbc\xac\xe7\xa1\xae\xe8\x85\x88\xe8\xb5\xad\xe6\xb2\xab\xe6\xa0\xbe\xe9\xb9\x84\xe6\xb7\xac\xe6\xba\x89\xe9\x97\xbb\xe5\xa4\xb7\xef\xbc\xb8\xe9\x97\x87\xe8\xa6\x83\xe5\xa4\xa4\xe5\x93\xa6\xe7\xa9\xb7\xe7\xa6\x80\xe5\xa2\x97\xe8\xa5\x86\xe6\x8e\x96\xe6\x9d\xaf\\\n\xe6\x82\xac\xe8\xb4\xa5\xe8\x9a\xaf\xe6\x89\x93\xe9\x80\x89\xe7\xbb\x84\xe5\x9f\xb9\xe8\x82\x8c\xe5\xab\x9a\xe4\xbb\x96\xe9\x93\x97\xe5\x87\xa4\xe9\x81\xad\xe6\xa2\xa8\xe6\xb0\x96\xe5\x83\xbb\xe8\x84\x94\xe7\xaa\x98\xe8\x9e\xb3\xe7\xae\xa7\xe9\x99\xb8\xe5\x97\x94\xe5\x80\x9f\xe6\x9b\x9d\xe8\x8e\x85\xe8\xa3\x98\xe9\x93\xb6\xe6\xa9\x90\xe5\x92\x96\xe8\x99\xba\xe6\x8c\xaa\xe7\x9a\x91\xe6\x97\xb7\xe6\xb9\x83\xe9\xa5\xaa\xe9\x98\x9d\xe6\x9e\x9a\xe8\x84\x82\xe8\xb5\x8f\xe5\xbe\xa1\xe5\x9a\xac\xe5\xa9\x95\xe7\xb2\x91\xe7\x87\x8e\xe8\x8b\x8b\xe9\x94\xa5\xe2\x94\x95\xe2\x92\x88\xe5\xa3\xb3b\xe5\x8f\xa5\xe5\xad\x9f\xe4\xb9\x99\xe6\x83\x86\xe5\xaf\x84\\\n\xe9\x9a\x8f\xe6\xb5\x91\xe6\x8b\xbf\xe6\x9f\x92\xe5\xbe\x9c\xe4\xba\xa8\xe5\x90\x89\xe7\x9f\xbe\xe5\x8c\x88\xe8\x97\x9c\xe5\x80\x94\xe6\xb3\xb5\xe9\xb2\x82\xe5\x94\xbf\xe5\xb3\xa8\xe6\xb1\x90\xe5\xb7\xa2\xef\xbd\x96\xef\xbc\x8e\xe5\xa6\x9e\xe8\xbd\xb9\xe9\xbc\xa0\xe6\xa8\xb1\xe6\x8f\xad\xe6\x9c\xb4\xe8\x9f\xa0\xe6\xac\x83\xe5\x91\xb1\xe5\x9e\xbe\xe6\xb6\x9b\xe5\x8a\xa3\xe7\x9b\xb1\xe6\x99\xa6\xe9\xb8\xb1\xe9\x93\x9b\xe9\x86\xb4\xe9\x81\x94\xe9\x95\xb6\xe7\xbb\x93\xe4\xba\xa6\xe9\xa5\xad\xe5\xa7\x86K\xe5\xbd\xad\xe6\xbc\x8f\xe5\x98\x88\xe4\xbb\x9e\xe5\x8a\xb1\xe6\x8a\x80\xe7\x9b\xa5\xe5\x82\x80O\xe8\x85\x86\xe6\xb4\xae\xe9\x93\xb2\xe7\x8c\xa9\\\n\xe6\x9c\x9f\xe5\x81\x8e\xe6\x8b\x86\xe8\x8b\x88\xe5\xbd\xb7\xe6\x81\xac\xe5\xa3\xae\xe5\x96\x87\xe6\xa9\xbc\xe9\xa6\x8b\xe7\xa0\x80\xe5\x95\x81\xe5\x94\xbe\xe7\xad\xb1\xe8\xb9\xbb\xe8\x9a\xb1\xe7\x93\xae\xe5\x85\xac\xe7\xba\xa3\xe8\xb1\xb3\xe8\x87\x83\xe8\xbf\xb3\xe9\x94\xa1\xe7\xaf\x99\xe8\x8d\x94\xe5\xa9\xba\xe8\xae\xbc\xe6\x8c\xaf\xe5\x90\x9b\xe7\xb2\x9d\xe7\xb1\xbc\xe7\x94\x9f\xe7\xb5\xa8\xe7\xb4\xa2\xe4\xbd\xbf\xe6\x8f\x8f\xe6\xae\xb5\xe6\x84\x9f\xe9\x83\x9c\xe8\xb4\xa7\xe7\xb3\xaf\xe5\x85\xad\xe7\x93\xb4\xe9\x8f\xae\xe5\x9d\xb7\xe5\xa5\xb9\xe6\x92\xb5\xe8\x80\xa6\xe6\xa0\xbc\xe8\x89\xb2\xe5\x9d\xb3\xe9\x86\x8b\xe8\x9b\xa9\xe6\xb5\xa9\xe5\x87\x87\\\n\xe5\xa6\x81\xe5\xa2\x89\xe4\xbc\xa7v\xef\xbc\xbb\xe8\x9a\x9d\xe5\xae\x9e\xe7\x8e\xba\xe6\xba\xb4\xe6\xbd\xa6\xe6\x9e\xb5\xe8\xa7\xa6\xe6\x83\x98\xe8\xb4\x9f\xe4\xb9\xbe\xe6\x99\x9a\xe6\xbf\x91\xe9\xac\xbc\xe4\xbc\x98\xe9\xb2\xa9\xe9\x9c\x8d\xe6\x99\xae\xe5\x97\x9f\xe8\xbd\xb6\xe8\x85\xa5\xe9\x94\xa3\xe6\x9e\xb8\xe8\xb4\xba\xe5\x9b\xb9\xe6\xa2\xa2\xe5\x89\x96\xe2\x91\xb4\xe8\x8c\xb3\xe9\xa2\x8d\xe8\xb0\x95\xe6\xb2\xb1\xe7\xbb\xbf\xe5\x91\xa6\xe5\xbc\x83\xe6\x99\x95\xe8\xaf\xb7\xe4\xb8\x9b\xe5\xbb\xaa\xe9\xba\xa6\xe6\xb1\xb2\xe9\x95\x89\xe6\x98\x99\xe8\x96\xa8\xe8\x8f\x80\xe7\xbc\xaa\xe6\x9f\x91\xe6\x8e\xa9\xe8\xbe\x89\xe5\xbc\xad\xe8\xbe\xbb\\\n\xe9\xb2\x91\xe8\xb9\xb0\xe6\x90\xa4\xe6\x8b\x89\xe2\x91\xbc\xe9\x83\xb4\xe7\xbd\x91\xe4\xb8\x94\xe6\x8f\x90\xe5\x82\xa5\xe9\x83\x90\xe6\xb7\x99\xe4\xbb\xb5\xe7\x96\x83\xe6\xbe\x94\xe8\x80\xb3\xe4\xb9\x93\xe2\x91\xb6\xe7\xbb\x87\xe7\x9a\x88\xe5\x85\x94\xe8\xbd\xb0\xe7\x81\xbe\xe9\x85\x97\xe6\xa1\x80\xe9\xbd\x90\xe5\x8d\xb8\xe8\x8c\x83\xe5\xbc\xa6\xe8\x88\x92\xe7\x96\xbd\xe8\xb7\xbd\xe7\x9b\x94\xe6\xaf\xab\xe5\x88\x8a\xe9\x94\xb1\xe6\x9e\x9c\xe8\xb0\x90\xe8\x83\xa8\xe9\x80\xa0\xe2\x88\x95\xe7\xa7\x8d\xe5\xab\x84\xe5\xbf\x92\xe6\x9c\x9b\xe6\x87\x88\xe5\xa4\xb1\xe7\x8e\x84\xe4\xb9\x9d\xe7\x87\x89\xe9\x9a\x85\xe4\xb8\x8e\xe6\xb5\xac\xe9\x9a\xbe\xe8\x92\xb8\\\n\xe8\xa2\xab\xe9\xad\x84\xe9\x93\x80\xe6\xa0\x8b\xe7\xbd\x82\xe6\xbb\x81\xe5\xb7\xb2\xe6\x8e\x82\xe9\xb9\x97\xe5\x92\xb3\xe8\xaf\xbe\xe8\xbe\x85\xe6\x9b\xb2\xef\xb9\x91\xe7\xbf\xa0\xe5\xa6\xa4\xe6\xbc\x94\xe6\xb3\x84\xe8\xb0\xae\xe9\xa2\x96\xe6\xa2\xa7\xe9\xa1\xb6\xe7\x9b\x82\xe8\x84\x90\xe9\xa2\x9c\xe8\x8f\x81\xe9\x91\x91\xe8\x8f\x9c\xe9\x81\x8d\xe8\xbd\xb3\xe6\x8e\x98\xe7\xa0\x9c\xe8\x94\xbb\xe8\xa1\xb0\xe8\xb0\xa9\xe7\xab\xa0\xe7\x89\xae\xe7\x82\x89\xe8\xae\xa1\xe5\x8f\x8c\xe9\x99\xb7\xe6\xaf\x93\xe6\xb7\x96\xe6\xa6\x94\xe9\x83\x8a\xe4\xbf\x9a\xe5\x94\x8f\xe7\x9f\x9c\xe8\xa2\xb7\xe9\x99\xb6\xe7\x82\xbb\xe9\xb8\xb3\xe5\xba\x97\xe5\xb2\x9a\xe9\x82\xae\\\n\xe8\xaf\xab\xe9\xa2\x9d\xe7\x87\x8a\xe9\xaa\x88\xe5\x8f\xaa\xe5\x86\xa2\xe7\x8a\x92\xe6\xbd\xad\xe7\x89\x9d\xe9\xa3\xa8\xe5\x8b\xa4\xe5\xa4\x8d\xe7\x85\xa8\xe4\xbd\xa9\xe5\xae\xa5\xe7\xbb\x86\xe6\x9b\xb3\xe5\x9d\x8f\xe8\xa7\x8e\xe5\x8e\xa8\xe6\xb5\x99\xe9\xba\x9f\xe5\x99\xa2\xe5\x95\x96\xe2\x85\xb0\xe8\xbe\xb0\xe8\xb9\x92\xe9\x82\xaf\xe9\x9c\x88\xe5\x82\xb2\xe7\xbf\x85\xe8\x83\xb1\xe6\xbc\xaa\xe6\xb3\x8c\xe9\xad\x81\xe8\x83\x9c\xe7\x90\xb6\xe9\x83\x9d\xe6\xa3\xb1\xe8\xb8\x94\xe7\xbe\x81\xe6\x97\x96\xe2\x88\xa9\xe6\xaf\x9b\xe9\xa1\xbd\xe5\x8a\x9b\xe6\x98\xb1\xe8\x9d\x84\xe6\xbb\x93\xe7\xa4\x81\xe4\xbc\xb0\xe7\x92\x9e\xe8\xb8\x9f\xe5\x9e\xb5\xd0\x9e\\\n\xe5\x92\xbb\xe9\x9c\x87\xe5\x9b\x9a\xe9\xa6\xa5\xe6\xa0\xb7\xe9\x80\x86\xe5\xab\xa9\xe4\xba\x89\xe5\x92\x9b\xe5\x89\xa9\xe9\xbb\x9c\xe8\xae\xba\xe9\x86\x8c\xe9\x82\xac\xe4\xbf\x8f\xe5\x9c\xad\xe4\xbf\xafj\xe5\xb7\x89\xe5\x9e\x85\xe5\x85\x9c\xe7\xaa\x9c\xe6\x81\xba\xe6\xbf\x9b\xe5\x89\x8d\xe4\xbd\x90\xe5\x8f\x91\xe8\x8b\x9b\xe8\xaf\x99\xe5\x9c\xa9\xe7\x98\xa0\xe5\xa6\xaa\xe9\xba\x92\xe5\xbf\x86\xe7\xbb\x8e\xe5\x84\x86\xe9\x95\x95\xe2\x80\xbb\xe6\xa7\x9b\xe5\x9d\x82\xe6\xb5\x8d\xe8\xb5\xab\xe8\xb7\xb9\xe7\xbc\x99\xe7\x9a\x82\xe8\xb7\xbb\xe8\x92\x8b\xe7\xbc\x94\xe8\xb5\x88\xe8\xaf\x9b\xe9\x93\xb3\xe9\x93\x99\xe5\xbe\x82\xe6\x95\xb2\xe9\x81\xb4\xe8\x8c\x84\xe6\x9f\xac\\\n\xe7\xa5\x8e\xe9\xad\x87\xe6\x90\xa2\xe5\x81\xa5\xe8\x83\xb0\xe4\xbd\xa7\xe4\xbb\xab\xe5\x8c\x85\xe6\xad\x89\xe9\xab\x99\'\xe6\x89\x9b\xe5\x86\xac\xe5\xb4\x8e\xe6\x81\x81\xe9\x92\x88\xe5\x94\xa7\xe8\xbf\x98\xe7\xa9\xb0\xe6\x80\x99\xe4\xb8\x88\xe6\xb2\xa5\xe8\x8e\xa0\xe7\xa5\x8a\xe5\x92\xb1\xe8\xb2\x8a\xe8\xa3\xa2\xe6\x89\x94\xe7\x89\xaf\xe6\x91\x8a\xe6\xae\xbf\xe7\xbb\x98\xe7\xa3\x9b\xe4\xba\x9b\xe6\x90\x80\xe5\x82\xa2\xe8\x91\xad\xe5\x80\x96\xe2\x92\x81\xe6\xb8\xa9\xe9\x83\xaa\xe4\xbb\xb0\xe9\xa4\x8d\xe5\xa7\xb9\xe8\x9b\xb2\xe9\xa0\x89\xe7\x8e\xbb\xe5\x8f\xae\xe5\xaf\x92\xe6\x97\xa6\xe8\xbd\xb4\xe8\x9c\x97\xe4\xbd\x99\xe5\x9f\x8b\xe9\x92\xa7\xe7\x8c\x83\\\n\xe5\xa6\xae\xe6\xba\xaf\xe7\xbf\x98\xe5\xa7\xbb\xe5\xaf\x9d\xe8\xa4\x90\xe7\x9b\x9b\xe7\xa8\xbd\xe4\xbb\x8b\xe9\xa1\xb7\xe7\x8a\x8a\xe6\xb7\x84\xe9\xbb\x8f\xe8\xb2\xae\xe7\x82\x99\xe5\xb7\xbe\xe9\x95\x94\xe6\x8a\xb5\xe5\xab\xa6\xe5\x86\x88\xe6\xa0\x8e\xe8\xb9\xa6\xe5\xa4\x9a\xe7\x89\xb5\xe7\xbf\xbc\xe6\xa0\x85\xe6\xbd\xba\xe5\x99\x99\xe6\x89\x89\xe6\xad\x98\xe6\x98\x9d\xe8\x99\x9a\xe7\xb2\xa5\xe4\xbe\xa8\xe8\xbe\x97\xe6\xa5\x9a\xe8\x82\xaf\xe7\x83\xa7\xe5\x84\x87\xe5\x8a\x93\xe8\xbd\xa7\xe7\x9d\x9b\xe5\x97\xa5\xe5\x92\x99\xe7\x89\x82\xe7\x94\x9a\xe7\xba\xa0\xe9\xb3\x97\xe7\xa7\xa9\xe7\x89\xa6\xe5\xb3\x8b\xe7\xbb\x9a\xe9\xb3\x85\xe5\xb1\xbf\xe2\x91\xa0\xe9\xa6\x99\\\n\xe6\xa8\xbe\xe9\x80\x83\xe6\xbf\x92\xe6\xbe\x8d\xe6\xb9\x8e\xe9\xab\xab\xe7\xa2\x9f\xe5\xb2\x82\xe9\x99\xacA\xe7\xbb\xbd\xe9\x92\xb1\xe6\x8b\xa3\xe5\xbc\xa0\xe7\x83\x82\xe6\xa6\x87\xe4\xbe\xbf\xe5\x90\xa1\xe6\xb1\x9d\xe7\x81\xbf\xe8\xaf\xb5\xe5\xb1\xa3\xef\xbf\xa0\xe8\xaf\x8b\xe8\xbf\x9f\xe7\x84\xb6\xe4\xb9\xb0\xe8\xb6\xb1\xe9\xa6\x93\xe8\x81\x98\xe6\x95\xb4\xe8\x85\xb9\xe7\x91\x80\xe6\xa3\xae\xe7\xab\x9f\xe8\xb2\x94\xe5\x94\x81\xe7\xa2\x8d\xe8\x8f\x93\xe6\x83\x8b\xe8\xae\xb8\xe7\xbb\x88\xe6\xb5\x85\xe5\xbf\xbd\xe6\xb5\x9e[\xe5\x85\x84\xe6\xa6\x88\xe9\xac\x93\xe7\x9d\xa2\xe8\x8c\x8e\xe5\xaa\xb8\xe8\xa1\xbd\xe7\x82\x9f\xe8\x92\xb2\xe8\x8a\xa8\xe5\xb0\xa7\\\n\xe6\xa1\xa8\xe4\xba\xab\xe7\x94\xa3\xe9\xad\x8f\xe2\x92\x83\xe9\x85\xa2\xe2\x88\x9a\xef\xbc\xae\xe9\x87\x82\xe6\x80\x9c\xe5\x9d\xbc\xe8\x84\x89\xe5\xbd\x8a\xe6\x96\x9b\xe5\x9f\x8e\xe4\xb9\x88\xe6\x89\xb0\xe7\x99\xbb\xe5\x8d\x81\xe7\xb3\x81\xe6\x83\xa9\xe5\x94\x86\xe7\x95\xa6\xe7\x98\xb4\xe8\x8b\xb7\xe6\xb5\x89\xe9\xbb\x8e\xe8\x9d\xa0\xe7\xbc\xb1\xe8\x90\xb1\xe4\xbf\x91\xe7\x8f\x85\xe5\x90\xb8\xe6\x89\xa9\xe7\xbe\xbf4\xe9\x97\xbe\xe8\xb5\x83\xe5\xa6\x82\xe8\xbd\xa9\xe5\xa6\xab\xe4\xb8\xa5\xe8\x8d\x8f\xe7\x96\xa5\xe6\x89\xa6\xe5\xa3\x91\xe9\xaa\xb6\xe5\x87\xb8\xe9\x95\x81\xe7\xb0\x87\xe7\xa7\xaf\xe9\x81\xa2\xe7\xa6\xba\xe7\x92\x86\xe5\xbc\x93U\xef\xbc\x9c\\\n\xe5\x8d\xa4\xe6\x96\xa9\xe9\x87\x89\xe7\xbe\x8a\xe9\x98\x8f\xe6\x8f\x96\xef\xbc\x9e\xe6\xba\xba\xe6\xbc\xa0\xe7\xbb\xba\xe7\xae\xa6\xe5\xa0\x87\xe7\x96\xa4\xe5\x86\xbc\xe5\x8c\xb9\xe5\x97\xaf\xe5\xab\x96\xe9\x93\xa8\xe8\xb5\xa6\xe9\xb2\x9b\xe7\xab\xb6\xe8\x82\x89\xe5\xbc\xa9\xe5\xa3\x85\xe9\x8a\xae\xe6\xbb\x91\xe5\xaf\xb8\xe8\x9b\xae\xe8\xb1\x86\xe4\xbc\x8e\xe6\xb6\x92\xe9\x82\x82\xe8\xa3\xb8]\xef\xbc\xa7\xe7\x86\xa8\xe7\x8e\x96\xe8\xb2\x89\xe6\xb0\xb0\xe9\x9c\xb8\xe9\xaa\x84\xe6\xb6\x82\xe8\xbd\x98\xe5\x90\xa9\xe5\x91\x83\xe9\x95\x9b\xe7\xa8\xbc\xe5\x91\xbc\xe7\x90\xb0\xe6\x96\xb0\xe6\x9f\xa9z\xe8\x83\x9a\xe5\x99\x8e\xe9\x9f\xa9\xe7\xae\x8d\xe8\xb5\x89\\\n\xe8\x9d\xb6\xe8\x9f\x80\xe6\x9d\x96\xe9\xb9\xbf\xe7\x94\xac\xe6\xa8\x9f\xe2\x96\xa0\xe9\x9a\xb6\xe4\xbc\x9b\xe9\xaa\x9a\xe9\xa9\xb1\xe9\x97\xb6\xe6\x83\x9a\xe6\x96\xb2\xe9\x9b\x85\xe9\x87\x8f\xe5\x88\x9a\xef\xbd\x81\xe5\x89\x8a\xe5\x87\xa0\xe7\x8e\x91\xe9\x9b\x80\xef\xbc\xb7\xe9\xb8\xac\xe6\xbb\x9f\xe5\xa5\x94\xe7\x98\xab\xe7\x9d\xbf\xe5\x82\xac\xe5\xa1\x91\xe5\x8c\xbf\xe7\xa1\x80\xe7\x9b\xaf\xe6\xa7\x83\xe8\x8a\xab\xe9\xa8\xb3\xe9\x86\x92\xe7\xa8\xbf\xe7\x9a\x86\xe6\xb5\x90\xe7\xac\xab\xe9\xa2\xa2S\xe5\x99\xaa\xe5\x93\x93\xe5\xbc\x92\xe5\xaf\xb0\xe8\x88\x9b\xe5\x83\xad\xe9\x81\xbf\xe9\x80\x80\xe9\x84\xa0\xe8\x8d\xab\xe9\xb3\x96\xe9\xba\xbe\xe5\xbe\x90\xef\xbc\x95\\\n\xe6\x9d\xbc\xe7\xbf\xa1\xe6\x9e\xa3\xe7\x80\xb9\xe7\xa0\x9d\xe6\x99\x92\xe9\xa9\xb4\xe5\xa5\xad\xe5\x91\xb3\xe6\x82\x9f\xe2\x91\xb5\xe6\xbb\x88\xe2\x80\x9d\xe9\x85\xb8\xe9\x95\x9d\xe6\xb0\x9a\xe9\xb2\xb2\xe9\xb3\xa2\xe8\x9c\x80\xe8\x99\x8e\xe7\xbc\xb5\xe5\xae\xa1\xe8\xb6\xa3\xe9\xa6\x88\xe9\x9f\x82\xe9\x87\x8d\xef\xbc\x8a\xe4\xbb\xaa\xe6\x92\xa9\xe7\x83\xa9\xe4\xb8\xab\xe9\x85\x89\xe8\x9d\xbc\xe9\xa5\xb6\xe5\xbc\x81\xe8\xaf\xbf\xe9\xab\x91\xe8\x89\x87\xe5\xa6\x8d\xe8\x87\x82\xe5\x90\x9d\xe7\x9d\xa1\xe7\x82\x9c\xe7\xb3\x8d\xe8\x87\x9b\xe5\x85\xa5\xe5\x8f\xb3\xe8\x92\x9c\xe7\xbc\xa5\xe8\x89\xbe\xe8\xb5\x9e\xe5\x93\xa7\xe7\xa0\xa9\xe5\xa2\x80\xe5\xaf\x90\xe6\xa0\xb8\xe5\xb1\xa1\\\n\xe6\x93\x98\xe9\xa5\xac\xe6\x87\xbf\xe8\xbf\xa5\xe7\x9a\x93\xe7\xbb\x95\xe9\x93\xbc\xe9\x85\x90\xe8\x91\xab\xe5\x99\x9c\xe4\xbe\xa3\xe5\xa4\x87\xe5\x9c\xb3\xe6\xa4\xb9\xe6\xb3\x9b\xe8\x82\xa4\xe7\x83\xa6\xef\xbc\xad\xe8\xba\x87\xe5\xb4\x9b\xe2\x89\xa5\xe5\xb6\xbd\xe5\xb9\x85\xe7\x97\xbc\xe5\x9d\xaf\xe5\x94\x89\xe9\x89\x8f\xe8\xa7\xb3\xe5\x88\xbd\xe5\x9d\x8e\xe4\xb8\x90\xe7\xac\x8b\xe7\x96\x99\xe9\xaa\x8c\xe9\x99\x85\xe5\xb7\xb1\xe8\x97\x95\xe5\xba\x95\xe6\xbf\x82\xe5\x95\xa5\xe5\xb1\xa6\xe8\xa3\xb0\xe5\xb9\xa1\xe9\xa9\xb0\xe7\xbd\x83\xe8\x9b\x80\xe7\x8b\x90\xe8\xa1\xa3\xe6\x9d\x9f\xe5\xa6\x8a\xe9\x93\x82\xe6\x84\x95\xe6\x81\x82\xe7\x81\x9e\xe5\x8d\x89\xe8\x8a\x88\xe5\x9b\xad\\\n\xe7\xa0\xb4\xe6\xad\xbc\xe9\x86\xae\xe9\xa1\xb9.\xe6\x8a\x8a\xe9\xab\x8b\xe6\xb0\xa9\xe5\x8d\xa2\xe5\x85\xb0\xe8\x96\x9b\xe7\x90\xbc\xe5\x93\x8f\xe9\x98\x91\xe5\x94\x94\xe8\x88\xb1\xe6\x93\x8d\xe7\xa0\xb0\xe8\x8a\x8e\xe7\xba\xa2\xe7\x9c\xa8\xe5\x80\x8d\xe9\x8f\x90\xe9\x95\xaa\xe8\xbe\x99\xe5\x80\xa1\xe7\xa3\xac\xe7\x9f\xab\xe7\x91\xb6\xe8\x8a\x83\xe2\x97\x8e\xe5\xbe\xa8\xe7\x91\xb8\xe6\x98\xb6\xe8\xa4\x93\xe5\x83\x8a\xe9\x9d\x92\xe6\xa4\x8d\xe7\x89\x9f\xe7\x95\xb4\xe8\x83\x99\xe8\x8d\xa1\xe5\xaf\xba\xe8\x9a\xa9\xe5\xa5\x87\xe7\xbe\xa7\xe5\x96\xb9\xe5\xa4\xb9\xe9\xb2\x90\xe5\x9b\x90\xe6\xb8\x8a\xe7\xad\x98\xe7\x96\xaf\xe6\xb6\x9d\xe9\x83\xa7\xe7\xa2\x9a\xe7\x88\xb9\xe7\xaa\xa8\\\n\xe6\x83\xa0\xe5\xa2\x9f\xe6\xbf\xac\xe5\xb3\xbb\xe9\x9b\x81\xe9\xa9\xb3\xe5\x8c\x90\xe7\xa2\x91\xe4\xbc\xaa\xe6\x99\x8b\xe9\x92\xad\xe5\x8f\xa4\xe5\x87\xbb\xef\xbc\xa6\xe6\x84\x88\xe7\xaf\x84\xe5\x8d\xa1\xe5\x89\xa5\xe8\x9b\x94\xef\xb9\x92\xe9\x82\xb3w\xe9\x9c\x86\xe8\xbf\x99\xe9\x80\x8f\xe8\x8a\x82\xe7\x8b\x97\xe5\xbe\xb5\xe7\x9f\x97\xe7\x9c\x99\xe9\x94\x84\xe5\x8f\x81\xe8\xa1\x97\xe6\x98\x94\xe5\x88\x93\xe7\xbc\xa7\xe7\xbe\x9f\xe7\x89\xb9\xe5\xbd\xaa\xe5\xb9\x84\xe8\x82\x8b\xe7\x90\xad\xe4\xbf\x97\xe6\xb1\xb0\xe6\xac\xa0\xe5\x89\xb2\xe6\xb6\x88\xe5\xbe\xae\xe6\xa1\x83\xe7\xa5\xa8\xe6\x93\x92\xe7\x9b\x92\xe6\xba\xb6\xe6\xb7\x98\xe7\xbb\x80\xe6\xa1\xb6\xe5\x80\x99\xe6\x88\x8c\xe7\xbc\xab\\\n\xe8\xb1\xaa\xe7\xa0\xba\xe5\xad\xa5\xe6\xa9\xb1\xe5\xae\x83\xe5\xbb\x96\xe5\x95\xb0\xe8\x8b\x8e\xe8\xbf\x9b\xe8\xa1\xae\xe8\x96\xaa\xe6\xbb\x95\xe7\xbb\xbe\xe8\x85\x94\xe8\x90\xac\xe9\x87\x87\xe6\x94\xa5\xe7\x89\xa7\xe7\x98\xaa\xe7\xa7\x81\xe7\x9c\xad\xe7\xa9\xb6\xe7\x83\x88\xe7\x8e\xa9\xe7\x8f\x8d\xe6\xb3\xa3\xe7\x82\xab\xe8\x8d\x86\xe5\xba\xad\xe7\x85\x9c\xe6\x95\xa3\xe8\xbf\xb7\xe6\x80\xaf\xe9\xb3\x84\xe5\xa5\xa0\xe4\xba\x98\xe6\xa1\x91\xe6\x9d\xa0\xe7\x96\xbe\xe5\x85\xbd\xe7\xae\xa8\xe6\x98\xab\xe5\xad\x9b\xe9\x84\xa2\xe8\xb7\xaf\xe7\x9f\x9b+\xe8\x8a\xb3\xe7\x9f\xbf\xe6\x96\x84\xe7\xa8\xb7\xe6\xbe\x8e\xe8\xb5\x80\xe7\xba\xa7\xe9\x92\xa6\xe6\xbb\xa4\xe5\x88\xab\xe8\x93\xac\\\n\xe5\xb9\xb4\xe2\x80\x94\xe6\xbd\x8d\xe7\xba\xa4\xe8\x83\x81\xe7\xaa\x91\xe5\xad\xa3\xe5\x83\x8f\xe6\xa5\xbc?\xe7\xb3\xbb\xe9\x83\xbf\xe8\x83\x96\xe6\xb6\x9f\xe5\x8b\x89\xe7\xbb\x8d\xe8\x80\xa9\xe6\x8c\x88\xe8\xbf\x84\xe6\xbc\x82\xe9\xbb\xa1\xe6\x97\xb1\xe8\x86\x98\xe8\xb9\xbf\xe6\x8d\xbd\xe4\xb8\x81\xe8\xbd\xab\xe6\xa4\xbf\xe8\xb7\x86\xe5\x88\x86\xe2\x94\x81\xe5\xa4\xb8\xe9\xa6\x92\xe7\xba\xa1\xe7\xbc\xa1\xe5\x88\xb6\xe5\xb2\xb5\xe6\xb3\xb0\xe8\xa7\x89\xe6\x80\xa6\xe5\xae\xab\xe6\xa2\x8f\xe5\xb5\x87\xe6\xae\xb3\xe8\x8c\x97\xe7\x8f\xba\xe5\x97\xbe\xe5\x87\x8b\xe5\xa2\x9e\xe8\x8e\xbd\xe7\xbb\xab\xe4\xbc\x97\xe9\xa2\x87\xe9\x85\xa4\xe9\x86\xaa\xe8\x91\xac\xe9\x86\xa6\\\n\xe7\xa3\x85\xe5\x86\x8c\xe8\x8b\x8d\xe6\x88\xae\xe9\x81\x8f\xe8\xbf\xba\xe6\x9c\xb1\xe9\x9f\xb3\xe7\xa3\xa8\xe9\x99\x80\xe5\x90\x90\xe4\xbd\x97\xe5\x8f\xa6\xe6\x88\xb4\xe9\x99\x89\xe5\xb0\x9a\xe8\xa4\x9a\xe8\x8b\xa5\xe7\x99\x80\xe8\x99\xbd\xe9\x9c\x8f\xe4\xbf\x9e\xe4\xbe\xae\xe6\x9a\x8e\xe7\xb3\x99\xe9\xb8\xa9\xe5\x8b\x8b\xe6\xbd\x87\xe5\x90\xbe\xe8\xbf\xaa\xe9\xaa\xb7\xe7\x90\x90s\xe8\x9c\x94\xe8\xa0\xa1\xe5\x85\xab\xc2\xb7\xe9\x8e\x8f\xe9\xb9\xa4\xe6\x8d\x86\xe7\xbb\x85\xe4\xbc\xaf\xe5\x81\x83\xe7\xbb\x9b\xe6\xb6\xa8\xe8\x82\x96\xe9\xaa\x9b\xe5\x8e\x84\xe9\x9b\x86\xe8\x94\xb4\xe8\xbd\xbe\xe6\x9f\xbf\xe5\xad\xaa\xe9\x9c\xad\xe8\x86\x9d\xe6\x8e\xa5\xe9\xb8\xaf\\\n\xe6\xb8\x94\xe6\xa8\x97\xe8\xb5\xa2\xe6\x98\xa5\xe7\xbc\x8e\xe9\xb4\x88\xe9\xa6\xa8\xe8\x81\xaa\xe6\x81\xb6\xe6\x83\xa6\xe5\x9b\xbe\xe7\xb3\xb87\xe5\xb3\x81\xe9\xbe\x8f\xe9\xa2\x89\xe5\x8d\x9a\xe5\xba\x99\xe9\x9b\xb3\xe4\xbe\xa0\xe6\xa3\x9a\xe4\xb8\xb8\xe5\x81\xbb\xe8\xaf\x92\xe8\xaf\x85\xe5\x92\x8f\xe5\x86\x97\xe9\x9c\x84\xe6\x81\x83\xe9\x81\x82\xe6\xb1\x9b\xe8\xbf\xa8\xe5\xae\xa2\xe9\x95\x9e\xe5\xa6\x88\xe8\x94\xba\xe8\x99\x9e\xe9\xad\x8b\xe5\xb0\xb9\xe6\x8d\xa1\xe9\xa9\xb8\xe8\x90\xbc\xe5\x90\x83\xe8\x8c\xac\xe5\xa6\xbe\xe8\x9e\xaf\xe6\xb0\xa7\xe7\xa8\x8e\xe7\x8e\xab\xe7\x8c\xa2\xe9\x9e\x9a\xe5\x95\xa6\xe9\xa7\xb9\xe5\xb2\xb8\xe9\x98\xb2\xe6\xbb\xa2\xe5\x85\xb5\xe5\xa1\xa5\\\n\xe8\x86\x8f\xe7\xab\xba\xe8\xbe\x87\xe9\xa6\x87\xe8\x97\x89\xe9\x9a\xbc\xe6\xa6\xb1\xe9\x92\xaeF\xe5\xab\x82\xe5\xb0\xb8\xe5\x9c\x8a\xe7\xa7\xbd\xe7\x84\x92\xe8\x88\x9e\xe8\xb0\x8a\xe5\x95\x83\xe6\xa0\x89\xe5\x81\x88\xe5\x8c\xaa\xe6\xb6\xa3\xe4\xb9\x89\xe5\x9d\x80\xe6\x91\xb9\xe9\x97\xb2\xe7\x9d\xa5\xe6\x8c\xb9\xe7\x83\xa4\xe2\x96\xb2\xe9\xaa\x97\xe9\x97\xb3\xe8\x91\xb5\xe9\x80\xbb\xe9\x88\x8a\xe6\xbd\xa4\xe5\x8d\xabl\xe9\xa6\x94\xe7\x8c\x97\xe9\x93\xab\xe7\x9f\xae\xe7\xb2\xa4\xe9\x80\xa2\xe5\xba\xb5\xe9\xa2\xa1\xe6\xb1\xbd\xe5\xb7\xbd\xe5\xa7\x92\xe6\x92\xa4\xe8\x9e\xba\xe9\x98\x95\xe9\xaa\x82\xe7\xa5\xa5\xe7\x84\x9c\xe5\xbe\x88\xe8\xbe\xa8\xe6\x8a\x97\xe7\x89\xba\\\n\xe9\xb9\x85\xe9\xaa\x9c\xe4\xbf\xa4)\xe9\xaa\xbc\xef\xbc\x86\xe7\xa0\x9f\xe5\x87\x9b\xe5\xa2\xa8\xe8\xbd\xbd\xe8\xaf\xa9\xe8\xa3\x86\xe7\x8a\x9f\xe7\x8b\xac\xe9\xb9\x82\xe8\x84\xb8\xe6\xb1\xa0\xe4\xba\xa9\xe4\xbe\x88\xe5\x94\xae\xe9\xb9\x8f\xe5\x8d\xa6\xe6\x9e\xb3\xe4\xbb\xbb\xe2\x80\xa6\xe6\xb9\x8d\xe9\x92\x8a\xe5\xb8\x81\xe6\xbb\xa6\xe7\xbc\x9e\xe7\x8e\xa5\xe5\x88\x8e\xe5\xbe\x95\xe9\x9f\xa7\xe8\xad\xa6\xe8\x87\xa3\xe7\xae\xb1\xe9\x9f\xa8\xe7\xbc\x90\xe6\x83\x9c\xe7\xa1\x85\xe9\x99\x90\xe5\x93\x82\xe8\xa3\xbe\xe4\xbf\xaa\xe5\x86\xa5\xe8\x92\xbd\xe6\xaf\x95\xe9\xa9\xba\xe7\xa5\x9a\xe4\xbe\x8f\xe8\xb0\xa3\xe9\x81\xae\xe4\xbe\xa9\xe9\x83\xa2\xef\xb9\xaa\xe7\x83\xa8\xe5\xbb\xa8\\\n\xe9\x92\x8f\xe6\x98\xa7\xe2\x91\xa9\xe6\xa4\xb4\xe6\xb2\x9b\xe5\xb1\x8b\xe9\x82\xa6\xe9\xb6\xaf\xe5\xa2\x93\xe6\x88\x8d\xe4\xbf\xa6\xe5\xbe\x8c\xe9\x95\x82\xe5\x8f\x98\xe5\xad\x9d\xe6\x9c\xbd\xe6\xaa\x84\xe5\x9b\xbd\xe7\xaa\x81\xe8\x99\x90\xe5\x8a\xad\xe9\x87\x90\xe7\x9c\xa0\xe5\xa1\x85\xe5\xb0\x8f\xe5\x83\xa7\xe5\xa1\xac\xe7\xbb\xa7\xe9\xba\x93\xe9\x98\xb3\xe8\x8b\xb4\xe8\xb7\xb3\xe7\x8a\x84\xe6\x8f\xbd\xe5\x8f\xa8\xe9\xa2\xa7r\xe9\x97\xba\xe9\x88\x87\xe7\x9f\xbc\xe9\xaa\x89\xe5\xa8\x81\xe8\xb9\x80\xe2\x80\xb3B\xe7\x8f\x8a\xe8\x84\xaf\xe6\x84\x8d\xe6\xa0\xa1\xe5\xbc\x8a\xe8\x8d\x98\xe5\xbf\x96\xe6\x8c\xa3\xe8\x91\xb4\xe2\x85\xa0\xe6\x8f\x89\xe7\x8f\xb0\xe7\xbf\x83\\\n\xe6\x98\x95\xe6\xb7\xb9\xe6\xb6\xa6\xe6\x9d\x9c\xe6\x86\x94\xe9\xa4\x90\xe7\x83\xad\xe5\xa4\xab\xe6\x9a\xbe\xe7\x92\xa0\xe7\x80\x91\xe5\xb3\xb0\xe6\xad\x94\xe9\x94\xa2\xe9\x8b\x86\xe7\xba\xad\xe7\x8b\x83\xe8\xb1\x89\xe8\xa1\xac\xe8\x88\x86\xe7\x89\xa4\xe7\x9d\x87\xe6\xa5\xa0\xe7\x9c\x87\xe9\x82\xbd\xe6\x83\x87\xe5\xb0\x96\xe3\x80\x80\xe7\xbe\x91\xe4\xb8\x89\xe6\xb1\x9c\xe5\x9f\xad\xef\xbc\xb3\xe4\xb9\x8b\xe5\xba\x8f\xe8\x8e\x98\xe5\x8c\x95\xe5\x89\x81\xe6\xbe\x9d\xe6\x89\xad\xe8\xaf\xa8\xe4\xbc\xb6\xe7\x93\xbf\xe6\xbc\xaf\xe7\xb7\x83\xe6\x8c\xa1\xe8\x88\x9c\xef\xb9\x94\xe8\x97\x90\xe6\xb9\xa7\xe5\x9c\xba\xe7\xaa\xa3\xe9\xab\x83\xe4\xba\xb2\xe8\xb0\xad\xe6\x83\xb3\xe8\x8c\x94\\\n\xe7\xb4\x8a\xe5\x86\x92\xe7\x97\xa2\xe8\xae\xbd\xe6\xb5\xa6\xe6\xbb\xa5\xe6\x87\x91\xe5\x80\x8f\xe2\x91\xa2\xe7\x88\x87\xe6\x83\xae\xe6\x87\x82\xe5\xb7\xb4\xe6\x96\x9c\xe9\x80\xae\xe6\x96\xbc\xe6\x8a\x96\xe7\xbd\x98\xe5\xbe\x84\xe6\x90\xac\xe6\xa9\x98\xe6\xba\x83\xe5\x90\xa0\xe6\x9e\xb0\xe6\x8a\x98\xe7\xa6\xbb\xe9\x94\x8c\xe6\x88\x9b\xef\xbc\xb6\xe9\x92\xa9\xe9\xb9\xab\xe7\xa1\x96\xe6\x9d\xb2\xe5\x92\xab\xe9\x92\xbb\xe5\xa4\xa7\xe6\x98\xaf\xe8\xaf\x8a\xe6\xb6\x8c\xe6\xba\xb1\xe7\xbb\xa6\xe6\x98\x82\xe6\x8c\xab\xe8\x8a\x9c\xe7\xaa\xac\xe8\xb0\xb3\xe8\x95\x89\xe5\xb4\x86\xe5\x81\x8f\xe7\xbd\xa9\xe2\x92\x84\xe5\xbf\x97\xe6\xb4\x9f\xe7\x91\xb0\xe8\x8f\x9f\xe7\xa7\x89\xef\xbd\x90\\\n\xe5\x8a\xa2\xe8\x8d\xa3\xe5\x8b\x92\xe6\x97\xba\xe6\x90\x81\xe8\xb5\xa3\xe5\xa1\x98\xe6\x84\x8f\xe5\xa4\x99\xe5\xab\x8c\xe8\x80\x92u\xe4\xbf\x9d\xe7\x98\x90\xe7\x93\xb6\xe6\xb9\xab\xe6\xa5\xb8\xe6\x84\x9a\xe7\x91\xb1\xe5\x9e\xa2\xe5\xb6\xb7\xc3\xa9\xe5\x9c\xac\xe9\x82\x97\xe5\x9d\x8d\xe9\xac\xb2\xef\xbc\x92\xe7\xb5\xae\xe8\x81\x8b\xe6\xb8\xba\xe5\xa2\x85\xe4\xbb\xa1\xe9\xbe\x82\xe6\x98\x80\xe5\xa8\xb4\xe9\xaa\x8d\xe8\xb0\x9c\xe8\xb7\xb8\xe8\x8f\x89\xe9\x95\xa1\xe5\xb4\x9f\xe6\xbe\xb3\xe8\xb4\xb2\xe5\x9b\x9b\xe8\x8a\x98\xe4\xbd\x9d\xe5\x94\xbb\xe8\xb0\x9f\xe8\x86\xba\xe6\xb4\xbc\xe6\xb2\x93\xe7\x9b\xbe\xe8\xaa\x89\xe5\xb3\x87\xe7\x88\xaa\xe5\x96\x91\xe5\xb2\x9b\xe7\x93\xa2\\\n\xe5\xb8\xae\xe5\xb9\xb3\xe5\x93\xa8\xe9\x9d\x99\xe5\xbc\x80\xe7\x81\xb0\xe7\x92\xa9\xe8\xb5\x8e\xe9\x92\xba\xe8\xb5\x93\xe7\x96\xb3\xe5\x8a\xab\xe7\x88\xb6\xe8\x8b\xab\xef\xbc\xb5\xe6\x9f\x84\xe7\x90\x85\xe7\x8b\x84\xe5\x83\x96\xe9\x91\x99\xe6\xa1\x94\xe8\xb9\x91\xe6\x8c\xa5\xef\xbc\xaf6\xe9\x81\xa8\xe6\x96\x8b\xe5\xb0\x91\xe6\x98\x8c\xe5\x9e\x9a\xe6\x96\x90\xe7\x84\xaf\xe5\xb1\xaf\xe9\x95\x90\xe7\xab\xa5\xe5\x84\x92\xe6\xbc\xbe\xe8\x99\xab\xe7\xaf\xaa\xe7\xbf\x81\xe6\xaa\xab\xe8\x80\xa8\xe5\x91\x80\xe5\x92\xbd\xe8\xbf\x90\xe9\x9b\xb9\xe6\xbc\x89\xe6\xb3\x85\xe5\xba\x9e\xe7\xac\xaa\xe9\x92\xa2\xe6\xb3\xaf\xe5\x80\xbc\xe9\x99\x88\xe6\xb1\xa9\xe9\x95\x91\xe8\xbe\x93\\\n\xe8\x8b\xa1\xe8\xae\x99\xe7\x8b\xbc\xe7\xa8\x80\xe6\x92\x91\xe9\xaa\xa1\xe6\xa9\xa1\xe6\x96\xa4\xe8\xb1\x95\xe2\x80\x99\xe6\x95\x9b\xe7\xa0\xb7\xe5\xb4\xa9\xe6\xa3\x98\xe8\x8d\x80\xe5\x9f\xa4\xe5\xa8\x9f\xe6\xa4\xa4\xe5\xbb\x98\xe6\x80\xbc\xe5\x93\xa9\xe7\xbf\xae\xef\xbc\xa4\xe7\xab\x96\xe8\xa7\x96\xe5\x8b\x87\xe6\x83\xb0\xe7\xad\xb4\xe7\x8f\x9e\xe7\xa1\x90\xe5\xa8\x86\xe7\x85\xa7\xe5\xb0\xbb\xef\xbc\x94\xe5\xbb\xbf\xe7\x97\x89\xe7\xba\xae\xe8\xbd\xac\xe5\x94\xa4\xe8\xbe\x9a\xe5\xb8\x8c\xe4\xba\xb3\xe5\x91\x97\xe8\x84\x86\xe8\x88\x85\xe7\x9a\x84\xe5\xb0\x94\xe6\x8f\x8d\xe5\x9b\x9d\xe9\x9b\xb2\xe7\x8f\xa5\xe6\xbb\xb9\xe6\x80\xa0\xe9\x95\x9c\xe8\xb9\xb6\xe7\x8c\xaa\xe9\xad\x94\\\n\xe6\xb6\xbf\xe5\x8d\x9c\xef\xbc\x88\xe6\xad\xb9\xe6\x95\x8f\xe5\x80\xba\xe5\x99\xbb\xe8\xb0\x93\xe7\x89\x96\xe7\x8e\x87\xe5\xbf\xa0\xe6\xbb\x82\xe7\xa1\x92\xe8\xaf\xb0\xe7\xa8\x9e\xe5\x9d\xa8\xe7\x82\x80\xe5\x8e\x85\xe6\xba\xb7\xe5\x88\x9b\xe6\x81\xa8\xe8\xb5\x87\xe6\xb1\xb4\xe6\xbc\xb1\xe8\xbf\x9c\xe8\x83\x83\xe5\x9f\x8f\xe5\x85\xa7\xe6\x83\xba\xe5\xbf\xb5\xe8\x81\x94\xe5\x97\x84\xe9\x9b\x92\xe5\x87\x89\xe6\xa8\xaa\xe6\xbc\x93\xe7\xae\x95\xe4\xbf\x99\xe9\x97\xbd\xe9\x9e\xae\xe7\x82\x92\xe9\x9e\xad\xe5\x85\xb9\xe7\x8e\xb3\xe8\x80\x90\xe5\xba\xb7\xe6\xb7\xbb\xe6\xaf\xb6\xe5\xb2\xb3\xe9\x81\xa3\xe8\x82\xb2\xe8\xae\xae\xe8\xb4\xb0\xe9\xa6\x97\xe8\xb6\xbe\xe9\x9d\xad\xe7\x90\x87\\\n\xe8\x81\xb6\xe7\x96\x9a\xe6\x8a\xb1\xe7\x87\xa0\xe7\x90\x89\xe5\xa3\xb6\xe8\x88\xa1\xe4\xbe\xac\xe7\xad\xb9\xe6\x8c\x9d\xe6\x8b\x9a\xe7\xbc\xa9\xe6\x8b\x96\xe6\xb0\x91\xe6\x8e\xaa\xe8\xaf\x89\xe7\x8a\xac\xe6\x96\xab\xe7\xbd\xa1\xe4\xb8\x9d\xe6\x8b\x97\xe5\x82\xa9\xe8\x80\x95\xe6\xbe\xb4\xe8\x98\x85\xe9\x9d\xa5\xe6\xb5\xb4\xe7\xb2\xae\xe7\xbc\x87\xe8\xa4\xa1\xe7\xae\x97\xe6\xaf\x94\xe6\x8c\x8e\xe7\x8e\x89\xe7\x9b\x8a\xe8\x8a\xbd\xe8\x9b\xbe\xe6\xa4\x90\xe7\xac\xb3\xe6\xa6\x9b\xe6\xae\x9b}\xe6\xb4\x97\xe7\x8c\xa5\xe7\xa6\xa8\xe8\x83\x9d\xe8\xaf\xac\xe5\x90\x88\xe7\x9e\x8c\xe5\xae\x8c\xe5\xb8\x91\xe5\x90\x86\xe6\x95\x9e\xef\xbc\xa3\xe4\xbd\x93\xe7\x92\x9c\xe6\xa1\xab\\\n\xe7\xae\x94\xe6\x98\x93\xe5\x83\x87\xe5\x83\xb3\xe6\xbb\xb4o\xe5\xa0\xa4\xe8\x8b\x9c\xe7\x83\x94\xe5\x95\xbe\xe8\x94\x93\xe7\xba\xaa\xe6\xb0\xae\xe9\xbe\x8a\xe5\xb2\xac\xe7\xb4\xaf\xe8\x91\xba\xe5\x8e\x82\xe6\xb4\xa5\xe7\xa3\x99\xe5\x92\x94\xe9\x95\x93\xe8\xb0\x9a\xe8\x82\x9f\xe6\x8b\xa7\xe7\x95\xa4\xe6\xb0\x9b\xe8\xb5\x8c\xe6\xb1\xa8\xe8\xaf\x96\xe5\x80\x9e\xe5\x93\xba\xe9\x91\xab\xe7\xbb\xb8\xe7\xa3\xb7\xe5\x9f\xba\xe7\xbb\xa5\xe8\xb1\x9a\xe5\xa9\xb7\xe9\x9a\xbdL\xe7\x84\x96\xe5\x9a\xa3\xe6\x9e\xad\xe4\xb9\x9f\xe4\xbe\xb5\xe5\xbe\xb3\xe9\xa2\x85\xe8\xb5\xb5\xe6\xb7\xa9\xef\xbc\x97\xe6\xb5\xb7\xe6\xa6\x95\xe6\xb7\xbc\xe9\x93\x9a\xe9\x9e\xa5\xe9\x95\xaf\\\n\xe5\x89\xaf\xe7\xa3\x8a\xe7\x8c\x8a\xe9\x83\xad\xe6\x87\x8b\xe8\xae\xa8\xe8\x8e\xb9\xe9\xaa\xb0\xe6\x97\x98\xe4\xbb\x86\xe8\xb5\xa1\xe7\x92\x98\xe5\x9d\xa1\xe9\x9a\x86\xe6\xaf\x8b\xe5\x91\xb5\xe7\xb3\x95\xe7\xa2\xa7\xe6\x92\xac\xe6\xb5\x88\xe6\x8c\xbd\xe7\xa4\xbb\xe7\x9d\x90\xe8\xa2\x84\xe5\x87\x9d\xe7\x93\xa6\xe5\x8e\x8c\xe6\xba\x9f\xe6\xa8\x98\xe8\x8b\xa7\xe9\x83\x89\xe5\xa7\x93\xe7\x8d\x92\xe8\xb0\xa1\xe6\x9f\xb0\xe7\xbf\x80\xe6\xb3\xa8\xe5\xac\x89\xe8\x82\x87\xe7\x83\x9c\xe6\x8b\xb4\xe8\x96\x84\xe7\x97\xa7\xe6\x81\xa3\xe6\xba\xaa\xe7\xbd\x97\xc7\x8e\xe7\xbb\x91\xe8\x80\xb7\xe5\xb8\xa8\xe5\xa6\xa9\xe9\xba\xa4\xe9\x93\xb5\xe5\xb2\x90\xe8\x96\x9c\xe6\x9e\x97\xe9\xa2\x80\\\n\xe8\x9a\xa4\xe2\x80\x9c\xe7\xad\x8b\xe6\xa4\x81\xe5\x97\x96\xe9\x85\xb1\xe7\x84\xa9V\xe6\x8f\xa3\xe6\x98\x83\xe8\xbd\xba\xe5\x9e\xa3\xe9\xbb\xa5\xe8\x90\xa4\xe9\x9c\x80\xe8\xb5\xb3\xe2\x97\x86\xe7\x94\xa9\xe9\x85\xb4\xe8\xb6\xb3\xe5\x87\x86\xe5\x8f\xa3\xe7\x82\xaf\xe4\xbd\x9c\xe8\x89\xb3\xef\xbc\xba\xe5\xb1\x9e\xe5\xb0\x84\xe4\xba\xad\xe5\x9b\xb5\xe8\x8f\x8f\xe8\xbf\xad\xe5\xb9\xb2\xe5\x9e\xb8\xe7\x9a\x87\xe8\xb0\x83\xe8\xad\xac\xe5\x8d\xb5\xe8\xbc\x9d\xe6\xa4\x92\xe4\xbe\x9d\xe5\xb8\x9d\xe5\x9d\x9f\xe5\xbe\x81\xe5\x88\x88\xe7\xbd\xaa\xe5\xa4\xa9\xe7\xa8\x94\xe7\x89\x99\xe6\x9b\x8c\xe5\xa4\xbf\xe7\xb8\xbb\xe9\xac\x9f\xe8\x9f\x86\xe6\x9b\x99\xe5\x8a\xbc;\\\n\xe6\x80\x86\xe5\x97\xa6\xe9\x98\xb6\xe5\x87\xb6\xe9\xb9\xb0\xe5\xbf\x83\xe4\xbd\xb6\xe9\xa5\xab\xe9\x94\xb9\xe7\x82\xad\xe6\x88\x86\xe7\x9d\xbd\xe7\x95\x91\xe9\x83\x97\xe8\xbd\xbc\xe5\xb1\x8f\xe6\x8b\xa9\xe9\xbb\x99\xe5\x86\xb6\xe6\x97\x8f\xe7\xad\xa0\xe9\xa3\x9f\xe6\x80\x82\xe9\x9b\x87\xe5\x86\x9c\xe7\xb3\x96\xe9\x84\x82\xe5\xa6\x97\xe6\xb8\x9d\xe9\xbd\xae\xe6\xb3\xa1\xe7\xa7\xbb\xe9\x85\xaa\xe9\x85\xaf\xe9\xba\xbd\xe8\x88\x80\xe8\x85\x91\xe9\xb8\xa3#\xe6\x9d\xbf\xe9\x94\x89\xe5\x8f\x9b\xe7\xaa\xa6\xe7\xa2\x93\xe7\xa0\xbc\xe6\xa5\xb7\xe7\x8b\xb8\xe6\x8e\x9b\xe8\x91\xa3\xe9\x86\x89\xe5\x8a\xb5\xe8\x8d\xbb\xe8\x8a\x8a\xef\xbc\x9b\xe5\x8f\xb1\xe7\x89\xa2\\\n\xe7\x82\xae\xe7\xba\xbe\xe5\xbb\xba\xe9\xbc\x8e\xe8\x86\x91\xe8\xa4\x82\xe8\xa7\x82\xe5\x8e\x95\xe5\xa3\xb0\xe8\x8a\xa9\xe8\xb1\x8c\xc3\xbc\xe5\x90\xa7\xe5\xaf\xb9\xe8\x94\xb5\xe7\x8c\xb7\xe7\x91\x97\xe7\xaa\x97\xe4\xb8\x98\xe7\xba\xb3\xe6\xa5\xa3\xe6\xb3\xb8\xe5\x94\xb1\xe9\x82\x80\xe9\x83\xaf\xe5\xb4\x96\xe8\xb7\xa8\xe6\x9e\x9f\xe8\xaf\xb8\xe5\xae\x88\xe8\x9b\x86\xe6\xb2\xb3\xe7\x94\xb7\xe8\xa1\xbe\xe9\xae\xa6\xe6\x9d\xb1\xe6\x8c\xba\xe9\xb8\xa0\xe5\xb3\xaf\xe9\xa3\x9a\xe7\x9a\x96\xe9\xa5\xa5\xe7\xab\xbf\xe6\xbe\x88\xe6\xad\xa7\xe7\x8f\x80\xe6\x8a\xa5\xe6\xad\xaa\xe6\xb0\xa2\xe6\x94\x80\xe6\x82\x9e\xe6\xa0\x88\xe7\x84\x95\xe6\x9b\x9b\xe5\x8d\xae\xe7\x90\x9a\\\n\xe8\x90\xa8\xe6\x8b\x9b\xe8\x92\x89\xe9\x93\xba\xe5\xaf\x98\xe7\xbf\xa5\xe8\xb8\xa9\xe8\xb8\xb9\xe9\xaa\x86\xe6\x97\xb8\xe8\xa1\xb2\xe9\x83\xa6\xe2\x92\x89\xe9\x82\xa3\xe5\xad\x94\xe8\xb4\xa9\xe6\x94\xbb\xe8\xb5\xa0\xe9\xba\xb4\xe4\xbf\xac\xe9\x9c\xbe\xe6\x9a\x91\xe7\xa1\x9d\xe6\xa5\xab\xe6\xb7\x9d\xe6\x84\xa7\xef\xbc\xa5\xe6\x8c\x82\xe5\xbf\xaa\xe7\xbc\x95\xe7\xa5\x88\xe4\xb8\x8d\xe5\xb0\x81\xe8\xa9\xb9\xe9\x82\xa2\xe5\x98\xb1\xe4\xb9\x96\xe8\xa6\x81\xe7\xb0\xa7\xe5\x88\x80\xe8\x97\xbb\xe8\xa5\xbf\xe6\x98\x8e\xef\xbc\x9d\xe6\x8d\x8b\xe6\xb0\xaf\xe5\xa3\xac\xe3\x80\x8e\xe8\x91\xb1\xe6\xad\x8c\xe9\x94\x82\xe6\xb9\x9b\xe8\xb0\x87\xe5\xbc\xb9\xe5\xb2\xa0\xe8\xa1\xa8\\\n\xe8\x90\xa7\xe2\x85\xb2\xe4\xbb\x8d\xe4\xbf\x83\xe5\x83\x9a\xe6\x99\xb4\xe6\xac\xa1\xe5\x9a\xb0\xe8\xb7\xa3\xe7\xa9\xba\xe7\x95\x85\xe7\x8b\x81\xe9\xa6\x90\xe6\x88\xbf\xe7\x90\xa8\xe5\xae\xa0\xe7\x96\xae\xe5\xb1\x95\xe9\x97\xb9\xe8\xb5\x9a\xe5\x8d\xb3\xe5\xb2\xad\xe6\x85\xb7\xe5\xa5\xa2\xe9\x98\x88\xe4\xbd\x83\xe7\x88\xb0\xe7\x84\x93\xe7\xbc\xb7\xe6\x97\x81\xe8\xae\xb4\xe8\x85\x89\xe5\xa5\xb8\xe5\x90\x92\xe6\xbd\xbc\xe7\xaf\x86\xe6\xb7\x8b\xe8\x98\xa7\xe9\xa7\x9c\xe7\x85\xa4\xe7\x90\xaa\xe6\xb2\xbc\xe7\xba\xb7\xe7\xac\x88\xe6\x88\x9a\xe5\x92\xa6\xe6\x99\x8c\xe7\xb3\x8a\xe4\xb9\x8e\xe8\xa3\x95\xe7\x90\xb5\xe5\xba\xb8\xe9\x98\xb5\xe6\x9e\x95\xe9\x98\x9a\xe7\xac\x9b\\\n\xe6\x95\x88\xe6\xb8\xa3\xe5\xa7\xbf\xe8\x84\x91\xe6\xbc\xb4\xe7\xac\x83\xe5\x89\x9c\xe7\x97\x98\xe8\x82\xb4\xe6\x80\x8e\xe6\xaf\x82\xe8\xbd\xa8\xe6\xb8\xa1\xe5\x97\xa4\xe5\x93\x86\xe2\x92\x8a\xe6\x82\x9a\xe6\x90\xa0\xe5\xb1\x8a\xe5\xb2\xa9\xe4\xba\x92\xe9\x9b\x8d\xe5\x87\xb3\xe7\xbc\xad\xe7\xad\xb5\xe5\x9e\xa6\xe7\xbb\x99\xe6\x9c\x88\xe5\xaf\xa5\xe8\x88\x8dI\xe7\x85\x8e\xe8\x88\xa3\xe5\xad\x9a\xe5\x90\x81\xe5\xae\x93\xe6\x97\xb3\xe8\x8f\x98\xe9\xa3\x99\xe7\xbb\x92\xe7\xbe\xbd\xe5\xbc\xba\xe8\x8a\x8d\xe6\xac\xa7\xe5\x95\xa4\xe6\x97\x8c\xe5\xaf\x9e\xe8\x9b\xb1\xe5\xad\xb1\xe5\x87\x80\xe9\x9b\x95\xe9\x85\xa9\xe9\x92\xa1\xe6\x88\x90\xe8\x84\x96\xe7\xad\xae\xe9\xb3\x8f\\\n\xe6\xaf\x85\xe8\xb2\x85\xe7\xaf\x9d\xe5\x99\xa4\xce\xb1\xe5\xae\xb5\xe7\x9f\xb6\xe6\x98\xbe\xe6\xae\x8a\xe6\x99\x9f\xe6\xbc\x86\xe5\x98\xb2\xe5\x9c\x84\xe6\xbe\xa7\xe5\x9c\xbb\xe6\x80\xaa\xe5\xad\xb0\xe5\x87\x83\xe6\x82\xa0\xe7\xbf\x9a\xe7\x90\x8a\xe8\xbe\xa3\xe7\xbf\x8a\xe5\x9c\x9f\xe9\xaa\x83\xe9\x85\xba\xe8\xbf\x91\xe6\x8d\x90\xe5\x9d\x9b\xe5\xb0\x9d\xe9\x93\x89\xe5\x93\xae\xe8\xa4\xb6\xe5\xa4\x9f\xe8\xa3\xb9\xe6\x8c\x9a\xe7\xbe\x8e\xe5\x96\x9d\xe6\x89\x91\xe6\xb2\xb8\xe6\xa6\xb4\xe4\xb8\x96\xe7\xa2\x81\xe6\xb4\xab\xe6\x81\xab\xe8\x8c\x8f\xe9\xbb\xbe\xe5\x85\xbb\xe9\x98\xbb\xe5\xb3\xa6\xe6\x8d\x8c\xe7\x8c\xb1\xe8\x8f\x85\xe5\xb0\xa4\xe5\x8f\x94\xe9\x92\x9b\xe5\xb4\xa7\\\n\xe5\x8d\x91\xe7\x8f\xa0\xe5\xa8\x93\xe5\xa9\xa5\xe8\xb4\x87\xe7\xaa\x88\xe5\xbf\x8f\xe7\x98\x80\xe8\xa0\x95\xe6\xaf\x81\xe4\xbd\x88\xe8\xb1\x81\xe6\xb5\xb8\xe5\xad\x98\xe5\x87\x91\xe5\x91\x86\xe5\x9b\x8a\xe9\x8a\x9b\xe7\xba\xa6\xe4\xba\xa7\xe6\xb2\xbb\xe5\xb4\x9a\xe7\xa6\x87\xe5\xbc\xa7\xe8\xb4\xb9\xe8\xb0\xb7\xe8\x8d\xa6\xe6\x9f\xb4\xe5\x8a\xa8\xe5\xb7\xbf\xe8\xbf\xa6\xe8\xae\xad\xe9\xa2\x84\xe7\x9b\xae\xe8\x9f\x92\xe4\xbe\x8d\xe5\x93\x87\xe7\xbd\xb4\xe6\x80\x85\xe5\x89\xa7\xe4\xbe\x83\xe8\xb6\x8b\xe9\x81\xab\xe7\xbb\xb4\xe8\xa7\xa5\xe8\xa7\x90\xe7\xa5\x97\xe9\xb3\x8d\xe5\x9f\x9f\xe7\x97\xb4\xe9\xa5\x95\xe7\xa4\xb4\xe5\x9c\xaa\xe6\x82\xb2\xe6\x9f\x83\xe6\x80\x92\xe5\x9e\xae\\\n\xe8\x89\xbd\xe5\xb8\xa6\xe6\x9c\xaa\xe8\xb9\x87\xe5\x8c\x97\xe9\x93\x84\xe7\xbc\xa4\xe7\xbb\xb7\xe5\x92\x8c\xe9\x84\x99\xe5\xba\x87\xe8\x84\x93\xe7\xbd\x95\xe7\x8c\x8e\xe7\xa8\x8d\xe7\xac\xa5\xe5\xae\xa4\xe6\xba\x85\xe9\x92\xb0\xe6\xa3\xb0\xe9\x95\x86\xe5\x85\x96\xe5\x8d\x92\xe6\xb3\x93\xe5\x90\x8e\xe6\xb8\xad\xe9\x83\xb8\xe5\xac\x83\xe4\xba\x8e\xe4\xbb\x97\xe9\xbb\x94\xe7\xbb\x9c\xe8\x9e\xbe\xe6\xae\xb4\xe9\x94\xbb\xe5\xbb\x89\xe8\x9a\x93\xe6\xb4\x81\xe3\x80\x93\xe8\xa9\x88\xe8\xb6\x84\xe6\xa6\x84\xe6\x9e\x87\xe6\xa9\xba\xe5\x90\xa8\xe5\x8f\xbc\xe7\x8f\x82\xe4\xb9\x8d\xe9\xb8\xa6\xe6\xb4\x9e\xe9\x9e\x98\xe9\x87\x8c\xe5\x80\x92\xe5\xba\xa5\xe7\xbd\x84\xe8\xa7\x9a\xe8\x8b\x84\\\n\xe7\xbe\x94\xe5\xbc\xbc\xe5\xb9\x82\xe7\x92\xa7\xe7\xad\xbe\xe8\xa2\x85\xe9\x95\x92\xe9\x9e\x94\xe6\x99\xb6\xe5\xa1\x94\xe6\xa0\x96\xe5\xa8\xa0\xe9\xa2\x91\xe8\x88\xa8\xe5\xa7\x8a\xe5\xa7\xac\xe8\x94\x9f\xe6\xb6\xa7\xe4\xbf\xba\xe5\x8f\x99\xe6\x9d\xaa\xe8\x8d\x83\xe8\x9a\xa1\xe8\xb8\xb0\xef\xbc\xb4\xe8\x9f\xb9\xe9\xb8\x9f\xe4\xbc\x99\xef\xb8\xb0\xe5\x86\xb5\xe6\xb3\xbe\xe9\x98\x96\xef\xbc\x96\xe9\xa9\xbe\xe6\x88\xb3\xe9\x82\x8b\xe6\xa1\xa9\xe9\xa5\xb8\xe7\xa1\xbc\xe7\xbc\x9a\xe8\x93\x96\xe9\xb3\x9d\xe6\x8a\xa0\xe5\x97\x9d\xe7\x9a\x8b\xe7\xbb\xae\xe8\x80\x84\xe7\xaa\xa0\xe9\x9d\xb4\xe5\xbb\x93\xe7\x8a\x80\xe6\x82\xa8\xe7\x85\xae\xe9\x84\x9c\xce\x99\xe7\x88\xb2\xe8\xa2\xb4\\\n\xe6\xb0\x87\xe4\xba\xa4\xe6\x85\xa2\xe6\x8a\xa8\xe5\xa1\xab\xe8\x88\x84\xe9\xa2\x81\xe6\xad\x86\xe3\x81\x81\xe5\xb0\xbf\xe8\xb6\xb8\xe6\xa5\x9e\xe4\xbe\x97\xe6\xa1\x82\xe6\x8c\x9b\xe9\x93\x85\xe9\x98\xb1\xe8\x83\xaa\xef\xbc\x9f\xe5\xa0\xa1\xe8\xbe\x8d\xe8\xb2\x8c\xe9\xa3\x98\xe6\x93\x82\xe9\x8f\x96\xe3\x80\x81\xe9\xb8\xae\xe6\x9a\x87t\xe8\x90\x83\xe6\xb5\xaa\xe6\x89\xac\xe9\xad\x85\xe8\x8f\x8a\xe5\xa7\xae\xe6\x93\xa6\xe5\x87\xba\xe6\xb0\x93\xe9\x85\x9e\xe8\xba\xba\xe8\x8d\x9f\xe6\xa6\x86\xe8\x94\x97=\\\xe8\x90\xa6\xe8\x9c\xbb\xe5\x84\x99\xe6\x8a\xbc\xe8\x8c\xb6\xe7\x91\xad\xe8\xb7\x91\xe7\x9b\xb4\xe5\x9d\x8c\xe8\xaf\x82\xe5\xb8\x9c\xe7\xaa\xb3\xe6\x9e\x90\\\n\xe5\x8e\xa2\xe5\xbd\xa6\xe8\xa7\x9c\xe5\x81\x9a\xe6\x80\x8f\xe5\xb3\xad\xe6\x86\xbe\xe6\xae\x81\xe6\xa0\x91\xe9\x86\x9bd\xe9\x81\x98\xe6\x81\xa9\xe7\xa2\x89\xe8\x83\xaf\xe8\x9d\xa5\xe3\x80\x90\xe5\xba\x9a\xe7\x94\x99\xe6\x9a\xae\xe6\xb5\x8a\xe7\x92\x90\xe7\xaf\x91\xe7\x96\x8b\xe2\x85\xa2\xe9\x81\x90\xe7\xb0\x8c\xe5\x90\x8a\xe5\x9a\xb7\xe4\xba\xbf\xe9\x92\xab\xe6\x97\xa0\xe6\xa2\x83\xe7\x81\xbc\xe9\x96\x8b\xe5\xbf\x91\xe9\x97\xa8\xe8\x83\xbe\xe4\xbe\x94\xe9\x80\x92\xe5\xba\xa0\xe4\xbb\x85\xe6\xa7\x8e\xe8\xae\xb2\xe5\xa2\xa0\xe5\x88\xb8\xe6\x88\xaa\xe4\xbb\xac\xe8\x93\xbf\xe7\xa5\x80\xe7\xae\xad\xe6\x8b\x84\xe9\x9e\xa0\xe7\xa0\x82\xe7\x87\xa7\xe9\x95\x8a\xe6\xb7\x87\xe7\xbc\x97\xe9\x9d\xa1\\\n\xe9\x9b\xb7\xe8\x8d\xa5\xe5\xae\x95\xe8\xaf\x97a\xe5\xa4\xba\xe5\x92\xbf\xe9\xbe\x9f\xe6\x8e\x89\xe9\xbb\xaf\xe2\x91\xa1\xe6\x87\xa6\xe7\xbc\x93\xe8\xaf\x9d\xe8\xb0\x84\xe6\xae\xaa\xe6\xb8\xb8\xe5\xbf\xa4\xe6\x99\xa4\xe6\xb8\xa5\xe6\xbc\x88\xe4\xbb\x91\xe8\x86\xa8\xe8\x82\x9b\xe5\x8d\x93\xe7\xa7\x83\xe8\x8b\xa6\xe7\xbe\xaf\xe6\x8c\x91\xe6\x85\x95\xe5\x9b\xb0\xe6\x9a\x96\xe7\xac\x84\xe8\x93\x8d\xe5\xa5\x81\xe8\x85\x8b\xe6\xb2\xbd\xe7\x9b\x8e\xe9\xb9\xa3\xe9\xab\x93\xe6\x81\xb8\xef\xbc\xb0\xe5\xba\xb3\xe5\xbe\xad\xe7\xa7\xa4\xe5\xa8\x83\xe6\xbd\x9c\xe6\x9b\xa6\xe6\x82\x96\xe9\x84\xa7\xe2\x80\x98\xe5\x9b\xa4\xe8\xaf\xb4\xe7\x98\xa5\xe9\x82\xb4\xe7\x9f\xa3\xe8\xb4\xac\xe7\x8a\x81\xe5\xb9\x8c\\\n\xe7\x8e\x8e\xe5\x94\xb3\xe5\xad\xb5\xe9\xa6\x8d\xe5\x9d\xab\xe5\xb8\xa7\xe7\xa8\xb9\xe6\x97\x97\xe6\x82\x84\xe6\x83\xad\xe5\xa9\xaa\xe9\x92\x9d\xe7\x88\xa8\xe5\xaa\xb5\xe5\x8b\xbe\xe8\x82\xa2\xe4\xbf\xa1\xe6\xb4\xb8\xe5\xa5\xa5\xe8\x9c\x9a\xe4\xbc\x90\xe8\x9a\x95\xe2\x80\xb2\xe6\x8a\xab\xe5\x8a\xaa\xe5\xad\xba\xe7\x97\x88\xe8\xb0\x94\xe7\x94\xba\xe8\x8a\xbe\xe4\xbf\xb3\xe5\xae\xb4\xe9\xa5\xbc\xe5\x96\x84\xe7\xbe\x8c\xe9\xb2\xa7\xe8\x92\xaf\xe6\x98\xad\xe8\xae\xa4\xe8\x92\xa8\xe5\x99\xb1\xe9\xa9\x96\xe7\x9e\x80\xe9\x82\x95\xe7\xac\xac\xe6\x81\xb3\xe8\xb4\xb6\xe5\x9d\xa4\xe5\x93\x97\xe5\xae\x89\xe8\x90\x8d\xe6\xb6\x94\xe7\x9e\xa0\xe9\x94\x90\xe5\x89\x83\xe5\xb5\x8b\xe5\x87\xbf\xe5\x8f\xab\\\n\xe7\xbb\xa2k\xe8\xb0\xa0\xe6\xa0\x97\xe7\xa5\xad\xe6\xb0\x86\xe6\x89\xb9\xe7\xae\xac\xe6\xad\x87\xe6\x83\xa8\xd1\x84\xe6\xb3\xbb\xe6\x94\x98\xe8\x88\xb3\xe8\x92\x94\xe6\xad\xa6\xe8\x8e\xba\xe7\x90\xb3\xe5\xb7\x85\xe4\xba\xa5\xe6\xa4\xbd\xe5\xb4\xb4\xe7\x9c\xba\xe4\xbb\x83\xe7\xbb\xad\xe7\xad\x90\xe6\xa1\xa7\xe5\xba\xb6\xe5\x83\x95\xe6\xa3\xac\xe7\x90\xa2\xe9\x98\x97\xe2\x91\xbf\xe5\xab\x89\xe8\x94\xbd\xe8\x88\x81\xe4\xb8\x9e\xe6\x80\x9d\xe7\x8f\xae\xe7\x96\xb4\xe6\xad\xbb\xe5\x9e\x8c\xe5\x8c\x8f\xe8\x9c\xb4\xe9\x85\x92\xe8\xb7\x9a\xe3\x81\x99\xe6\x8b\x8c\xe8\xb6\xba\xe5\x9f\x95\xe5\x92\x9a\xe9\xb3\x99\xe5\x8c\x96\xe8\xbd\xaf\xe8\x8b\x97\xe5\x82\x95\xe7\x8f\x99\xe5\xa5\x91\xe7\xa0\x96\xe8\xb8\xa7\\\n\xe5\x8e\x86\xe6\xbd\x9e\xe9\xaa\x8f\xe7\xba\xb9\xe6\x80\x94\xe5\xa8\x80\xe4\xbf\x84\xe7\xa5\x90\xe7\x94\xb0\xe9\x99\xa4\xe6\xb5\x94\xe6\x96\x99\xe9\x80\xbe\xe6\x82\x8c\xe5\x81\xb4\xe5\x99\xac\xe5\xa7\x81\xe2\x92\x86\xe8\xaf\xa6\xe9\x94\x9e\xe9\xa9\xb5\xe7\x90\xa6\xe7\x98\x99\xe5\xa5\x98\xe5\x9b\xab\xe5\x8c\xba\xe9\xad\x89\xe6\xa3\xba\xe5\x85\x8d\xe7\xac\xae\xe6\xb8\x85\xe5\x91\x88\xe7\x85\xbd\xe6\x9d\xa5\xe7\x9c\x8b\xe8\x89\xb0\xe6\xa0\xb9\xe7\x8d\x90\xe9\x98\x90\xe6\x8e\x90\xe7\xbe\xb8\xe7\xa2\x98\xe9\xa0\xa3\xe5\x8e\xbf\xe6\x8b\x8d\xe6\x88\x96\xe5\x8f\x88\xe9\x9a\xb0\xe9\x80\x94\xe6\x93\x85\xe7\x91\x95\xe8\x80\x99\xe6\xb1\xb9\xef\xbd\x9b\xe7\xad\x8f\xe8\xbf\xb8\xe6\x8a\x93\xe5\xaf\x85\xe5\x8e\xa5\\\n\xe5\xa5\x89\xe9\xa4\xae\xe5\xb2\x81\xe9\xa3\x8e\xe8\xbe\x86\xe4\xbb\x8a\xe5\xa6\x93\xe8\x8c\x89\xe7\xab\xb9H\xe8\xb7\xb7\xe8\x9f\x9c\xe7\xaf\xb7\xe7\x9c\x9f\xe9\x92\xbe\xe7\x90\x8e\xe8\xaf\xba\xe8\x8a\xac\xe8\x87\xbc\xe9\x94\x8d\xe8\x9a\xb0\xe5\xb4\x83\xe7\xa7\x9f\xe6\x98\xb4\xe8\xb0\x92\xe5\x95\x86\xe7\x86\xa0\xe5\x88\xbb\xe9\xb9\x91\xe5\xae\x8f\xe9\x9c\x89\xe9\xa6\x81\xe7\xbb\x8f\xe8\x91\xa1\xe6\x9e\xa5\xe8\x85\xba\xe7\xab\xa3\xe6\xb6\x93\xe5\x8d\xba\xe9\x89\xae\xe5\xb7\x9d\xe7\x9a\xb4\xe5\x9d\x87\xe5\xb4\xbe\xe8\xb1\xa2\xe6\xbb\xa1\xe6\xb5\x9b\xe6\x87\x9c\xe5\x92\xac\xe6\x99\x8f(\xe6\x95\x8c\xe7\x87\x9a\xe6\xac\xb2\xe8\xb5\x8a\xe5\x88\x81\xe8\x99\xac\xe8\x87\xaa\xe5\xa9\xb6\xe8\x92\x8c\\\n\xe8\x9c\xbf\xe6\x97\xac\xe5\x95\x93\xe9\x82\xa1\xe8\x9a\x8a\xe6\x8e\xb0\xe4\xbc\x81\xe7\xbf\xb0\xe6\xba\xb2\xe6\x9f\x8f\xe5\xbc\x97\xe6\x83\x95\xe7\x95\x80\xe5\x8b\x98\xe6\x8a\x89\xe6\xbd\xa2\xe5\x9f\x9d\xe9\xa9\xbf\xe5\xa9\x80\xe5\xb7\xaf\xe6\xa9\x99\xe9\xba\xbb\xe4\xbc\x89\xe5\x9f\xbd\xe6\x81\xbc\xe4\xb8\xb9\xe8\xaf\xa0\xe9\x82\x99\xe5\x91\xa4\xe9\xa5\xb5\xe9\xaa\xa8\xe5\xa5\xb4\xe9\x94\xbd\xe9\x94\x91G\xe8\x8e\x92\xe9\x92\x9a\xe5\xa5\xb3\xe5\xae\xa3\xe5\x99\xa8\xe9\x98\x94\xe9\xa2\x88\xe8\xbe\x94\xe5\x8f\x8a\xe6\x80\x96\xe5\x9e\xad\xe7\x94\x8d\xef\xb9\xa5\xe7\xac\xba\xe5\xbf\x8c\xe5\xad\xa4\xe7\xa1\x8e\xe8\x8f\xb0\xe7\x8e\xaf\xe5\x85\xb4\xe7\x9b\x9f\xe5\x94\xac\xe8\x93\x81\xe8\xb4\xb5\xe4\xb8\x9c\\\n\xe9\xa9\xae\xe9\xab\xbb\xe9\xaa\x9d\xe5\xaf\xa8\xe6\x99\xba\xe5\xaf\xa4\xe6\xb5\xaf\xe9\x9f\xa1\xe6\xb9\x98\xe5\x9d\x9e\xe5\x93\x8d\xe9\xbe\x88\xe8\x9f\x91\xe8\x8b\xb3\xe6\x9a\x97\xe7\xbd\x85\xef\xbc\xa8\xe9\xbd\xbf\xe7\xbf\xb3\xe7\xbe\x9e\xe5\xb1\x8e\xe8\x9b\x9b\xe5\xad\xa9\xd0\xa0\xe6\x81\xb9\xe7\x90\x83\xe6\x90\x8f\xe7\x94\xa8\xe6\x94\xb6\xe5\x93\x8c\xe6\x9c\xa6\xe7\xbb\x89\xe7\x94\xb2\xe7\xac\xa0\xe7\x8b\x88\xe7\x9d\xa8\xe5\x8e\x9f\xe6\xa3\x89\xe5\x98\xbb\xe7\x9d\xac\xe5\x98\xb9\xe7\xa5\xaf\xe4\xbd\x9a\xe7\x8e\xa6\xe7\x96\xa3\xe5\xb1\x89\xe9\x92\xbf\xe6\x9d\xb3\xe5\x85\xb1\xe5\xb1\x85\xe4\xbf\xa9\xe5\x80\x9c\xe8\xa7\x91\xe5\xba\xa6\xe9\x84\x8f\xe5\x85\xb3\xe4\xbd\x9f\xe4\xbc\xb8\xe7\x9d\xa6\\\n\xe9\x95\xac\xe6\xba\x90\xe7\xbf\xbb\xe7\x8b\x9d\xe8\x83\xa1\xe5\x81\xb6\xe5\x8f\x82\xe9\x82\xbe\xe5\xa4\x8f\xe7\xa1\xad\xe8\x8d\xaa\xe7\xa0\x94\xe5\xba\x86\xe5\x91\xb7\xe5\xae\xaa\xe6\xad\xa2\xe9\x80\x82\xe7\xa0\xad\xe7\xbc\xa8\xe6\xb5\x9c\xe5\xbe\xb7\xe6\xbf\x89\xe5\x8f\xbd\xe9\x8e\xb3\xe5\x94\xb6\xe7\xa5\xa7\xe8\x9d\x89\xe8\xae\xa3\xe5\x8a\xb2\xe4\xbd\xb3\xe5\xb6\xb2\xe7\xa2\x9b\xe9\x87\x8a\xe6\xaf\xa1\xe9\x98\x81\xe7\x9d\x80\xe7\xbc\xb3\xe6\x89\x8e\xe6\xb7\x86\xe7\xbf\xbe\xe5\xbc\x98\xe5\x92\xaa\xe9\xb7\x87\xe8\x94\xa1\xe9\x80\x8b\xe8\x96\x8f\xe5\xa2\x99\xe6\x9d\x85\xe6\x89\xa7\xe5\x99\x94\xe6\xa5\x94\xe6\x8e\xa7\xe6\x8b\xb7\xe8\x93\xa6\xe8\x95\xb4\xe6\x88\x8f\xe7\x90\x8f\xe8\x82\xbe\xe9\x84\xb1\\\n\xe8\xbf\xa2\xe7\x8c\x9d\xe6\xa2\xb0\xe7\xbe\xa4\xe8\xbe\xb1\xe7\x98\xa6\xe8\x8b\x91\xe8\x89\x8b\xe7\x86\x9f\xe9\xbe\x8b\xe5\xbe\xbd\xe6\xa5\x9d\xe5\xa7\xa8\xe9\x98\x83\xe5\xbe\xaa\xe8\xae\xa2\xe8\x97\x81\xe9\x83\x8f\xe8\xb5\xa4\xe7\xaa\x95\xe9\x85\xb0\xe6\x99\xb0\xe9\xb9\x8d\xe6\xb9\xbe\xe5\xb8\x86\xe4\xbe\xa6\xe8\x83\xb6\xe9\x97\xb4\xe5\x8d\x96\xe5\xa7\xa3\xe8\x8a\x92\xe7\xa6\xa2\xe6\xa9\xaa\xe6\x81\xbb\xe5\x96\x94\xe8\xa5\x9f\xe6\x80\x8d\xe8\xaf\x88\xe5\x9f\xb4\xe5\xaf\x93\xe8\x87\x80\xe7\x96\xab\xe8\x82\xbd\xe6\x98\x89\xe5\x90\x91\xe7\x9c\x88\xe8\x9b\x90\xe6\x8e\xba\xe9\x80\x9d\xe7\xa9\x91\xe5\x90\x8c\xe6\xbb\x8b\xe5\xa9\x89\xe7\xbe\xb2\xe6\xb2\xa7\xef\xbc\xab\xe5\xb7\x82\xe8\xbe\x9f\xe8\xae\xb0\\\n\xe7\x8e\xae\xe5\xa0\x86\xe5\x8f\x8b\xe9\xb1\xbf\xe9\x9c\xb9\xe7\xac\x9e\xe5\x98\x9f\xe8\x94\xac\xe6\xac\xbe\xe8\x85\xb4\xe5\x9d\x91\xe7\x8e\xb2f\xe7\xa1\x95\xe9\x9f\xa6\xe9\xb3\x8c\xe7\x91\x99\xe8\x8a\xaa\xe7\xbe\x96\xe6\xb2\x83\xe4\xbb\xa4\xe7\xbb\xaf\xe5\x85\xb7\xe6\xaf\x8f\xe8\xb5\x90\xe8\x8f\xa1\xe9\xbe\x81\xe9\x9d\x9b\xe6\x9d\x8f\xe6\x8d\x8d\xef\xbd\x9d\xe6\xa1\xb4\xe6\x97\x83\xe8\xb0\xb6\xe6\x95\xb0\xe4\xbf\xbe\xe7\x97\xa4\xe8\x93\xa5\xe4\xbb\x94\xe5\x92\x92\xe9\x9f\xab\xe8\xbe\xbe\xe9\x80\x81\xe4\xb8\x99\xe3\x80\x8a\xe9\x9f\xb5\xe5\xb2\x94\xe9\x93\x8e\xe9\x81\xb5\xe9\x94\xb2\xe5\x86\x99\xe6\xb2\xbe\xe6\xb0\xb4\xe7\xa0\xb8\xe7\x83\x81\xe5\xad\x9c\xe6\x82\xad\xe8\x8e\xa8\xe5\x9a\x8e\xe5\x8e\x9d\\\n\xe6\x9c\xb5\xe9\x93\x8c\xe6\xb6\xa1\xe8\xb9\xb2\xe9\x85\x9d\xe8\xbe\x95\xe6\x9f\xbb\xe9\x94\xb0\xe5\x95\xbc\xe6\x89\x87\xe7\x96\x91\xe7\x9d\xb9\xe7\x90\x8d\xe9\x85\x8b\xe8\x97\x8f\xe7\x90\xb4\xef\xbc\x91\xe7\xbb\x96\xe7\x94\xbb\xe5\xaf\xae\xe7\x96\x9d\xe8\x8e\xbc\xe5\xae\x87\xef\xbc\x8c\xe6\x89\xbf\xe8\x90\x84\xe7\x8b\x8e\xe7\xbf\xa6\xe7\xb3\x8c\xe5\x92\x8b\xe5\xa0\x91\xef\xbc\x99\xe6\x82\x92\xe9\x97\xaa\xe8\xb6\x81\xe7\xb2\x92\xe5\xaf\xbf\xe4\xbf\x90\xe6\x94\xbe\xe5\x9e\x90\xe5\xad\xbd\xe9\x9b\x8c\xe9\x93\xb1\xe7\x9d\xa3\xe5\x97\x9c\xe6\x96\xb9\xe8\x86\xbb\xe9\x82\xb1\xe7\x8f\x88\xe6\x88\x95\xe5\xbf\xad\xe6\xb5\x86\xe5\xbf\xbf\xe6\x9e\xa8\xe9\x9b\x8f\xe7\x8e\x83\xe5\x9d\xaa\xe6\x8e\xb7\xe5\x83\xb5\xe9\x98\x80\\\n\xe8\xb0\x8c\xe9\xb1\xbc\xe6\x9e\xb6\xe5\x9e\x9d\xe6\xb8\xa0\xe8\x81\x82\xe6\xb4\x84\xe5\x9b\x9e\xe5\x80\xa8\xe8\x8c\x86\xe8\xb1\xad\xe6\x80\xa1\xe7\x87\x95\xe6\x8b\x85\xe6\x82\xab\xe9\x83\x8e\xe9\xb9\x83\xe5\xa8\x89\xe9\xb3\x9f\xe9\xaa\xa7\xe6\x9e\x84\xe5\xa6\xb9\xe5\x93\x84\xe7\xba\xb1\xe8\xa2\x81\xe9\xbb\x9d\xe6\x8e\xa2\xe5\x96\x98\xe9\x87\xad\xe6\x94\xbf\xe8\xb0\xa6\xe9\x80\x9a\xe7\x96\xb5\xe7\x98\x9b\xc3\xba\xe7\x95\x94\xe8\x8c\xb4\xc3\x97\xe6\x82\x94\xe9\xa3\x95\xe7\x8c\x9b\xe8\xba\x81\xe9\x87\x91\xe7\x99\xbd\xe5\xb8\x88\xe6\x9e\x81\xe6\x8f\xb4\xe8\xb5\x8d\xe6\xb3\x89\xe7\x9c\x81\xe9\x9e\xab\xe2\x92\x85\xe5\xba\xbe\xe8\x82\x93\xe6\x83\x85\xe6\xb7\xa0\xe8\x83\x8c\xe8\xb9\x84\xe8\x88\x94\xe5\x85\xbc\xe9\x92\x8e\\\n\xe6\x9d\xb7\xe6\xb7\x9e\xe7\x9e\x92\xe2\x89\xa4\xe6\xbc\xb7\xe9\x85\xb7\xe7\xa5\x89\xe8\xaf\xa4\xe6\xb3\x83\xe7\xa5\x9f\xe8\xaf\xa2\xe2\x91\xa8\xe9\x80\x9b\xe6\x82\x9d\xe5\x9f\xb6\xe5\x82\x8d\xe7\xa6\xb9\xe8\x9c\xb1\xe8\x85\x95\xe6\x98\x86\xe6\x8e\xa0\xe6\x82\xb4\xe8\x8e\x86\xe5\x91\x99\xe8\xb6\xb5\xe8\x98\x91\xe8\x86\x9b\xe4\xbb\x9f\xe4\xba\x91\xe8\x8b\x9e\xe6\x8e\x80T\xe5\x9d\xa9\xe8\xaf\x9f\xe4\xb8\xbb\xe9\x94\xb4\xe6\x8f\xa1\xe6\xa2\xb3\xe7\x9c\xb6\xe5\x90\xb9\xe6\xb7\xab\xe2\x85\xa3\xe5\x8c\xbb\xe6\x91\x87\xe8\x9a\x88\xe7\xba\xb5\xe7\xb2\xbe\xe5\xba\x96\xe5\xa5\x88W\xe7\x9b\x98\xe7\x85\x85\xe6\x88\xa2\xe8\xa7\x84\xe5\xa5\x95\xe8\xaf\xa7\xe5\x9a\x8f\xe6\xbd\xb8\xe6\x9c\x9d\xe6\x92\x87\\\n\xe6\x84\xa6\xe8\x9f\x8b\xe5\x97\x8c\xe7\xad\x9d\xe6\x84\xac\xe5\x95\xb1\xe5\xb6\xb6\xe5\x8a\x9d\xe7\xba\x94\xe9\x9a\x98\xe6\xb5\xae\xe9\xb8\xb7\xe7\x9f\xbd\xe7\xb2\xbc\xe7\xbc\xb4\xe8\xa8\xbe\xe6\x81\xb0\xe6\x9d\x8e\xe5\xaf\x82\xe7\x95\xb9\xe9\x86\xba\xe7\x98\x81\xc3\xa0\xe7\xb0\xbf\xe6\x98\xbc\xe5\xaa\x92\xe9\x93\xae\xe7\xa0\xa5\xe7\x91\xbe\xe9\x9f\xb6\xe5\x8e\xbb\xe8\xb0\x99\xe8\xa3\xb1\xe6\x8b\xa8\xe5\xa6\x89\xe6\xa0\x8f\xe8\xae\xbe\xe9\xa6\x80\xe6\x83\xa7\xe9\x9a\xb3\xe7\xb0\x8f\xe8\x8a\xa1\xe6\x88\xac\xe6\xb9\x9f\xe5\xa7\x90\xe5\x97\xaa\xe9\xa3\x93\xe8\x88\xbe\xe8\xbf\xa4\xe6\x81\xaf\xe6\x97\x84\xe6\xb4\x92\xe5\x8a\xa0\xe8\x8f\xa0\xe7\x94\xad\xe5\x9d\x8a\xe2\x88\xae\xe6\xa2\x86\xe3\x80\x94\xe6\x82\xb8\xe7\xa5\xa0\\\n\xe7\xa9\xb4\xe7\xbc\x83\xe8\x97\xa4\xe5\xaa\xb2\xe5\x95\xb6\xef\xbc\x8f\xe5\x9c\x83\xe3\x80\x95\xe5\x86\x8d\xe5\xb1\x80\xe6\xad\x83\xe5\x84\xbf\xe4\xb9\x90\xe8\x83\x8e\xe9\xb8\xbe\xe6\x9b\x9c\xe9\xac\xa3\xe6\x8b\x94\xe9\xa9\xac\xe7\xbf\xb1\xe8\xa2\x92\xe7\x8b\x8d\xe6\xae\x87\xe6\xb2\xba\xe5\x8d\xb4\xe5\x90\xb4\xe6\x8c\xa4\xe8\x8b\xb9\xe6\x92\x96\xe5\xb0\xba\xe5\xa0\xb5\xe5\x85\xb8\xe7\xb1\x81\xe7\xba\xb0\xe2\x92\x92\xe2\x86\x92\xd0\x9f\xe5\xa3\xab\xe8\x8f\xad\xe7\x8c\x95\xe6\x9c\x94\xe5\x98\x89\xe6\x9b\xa9\xe6\x9e\x9e\xe9\x82\xb8\xe5\xa5\xa4\xe9\x92\xa8\xe8\x8b\x87\xe5\xbc\x91\xe6\x80\x9b\xe5\x95\xae\xe5\x96\xbd\xe7\x9a\x8e\xe9\x9f\x93\xe5\xab\x94\xe5\xb7\xa9\xe5\xb6\x99\xe5\x97\x9b\xe6\x8b\xbc\xe9\xa8\xa0\xe6\x86\x8e\\\nh\xe6\x9b\xbe\xe7\x8a\xad\xe9\x99\x8b\xe9\x85\x8d\xe8\x84\xb1\xe6\x83\x9f\xe9\xa1\xb5\xe5\x94\x9b\xe5\xa8\xb6\xe7\xa3\xba\xe6\x8c\x96\xe7\xbc\x84\xe8\x8d\xad\xe5\x85\x85\xe2\x97\x8f\xe7\x82\x94\xe6\x9a\xa8\xe6\xae\x92\xe8\xa0\xb9\xe6\x88\x91\xe6\xb3\xa5\xe7\xba\xaf\xe8\x8b\xaf\xe8\xa1\x94\xe4\xbb\x9d\xe7\x8a\xb9\xe6\x99\x97\xe6\xa5\xae\xe6\x96\xa7\xe8\xb4\xa3\xe4\xb8\xbd\xe5\x9a\xad\xe4\xbb\x84\xe4\xbb\x93\xe8\xa3\x9d\xe9\xa5\xbd\xe5\xb8\x83\xe6\xbe\x84\xe4\xba\xb6\xe7\xab\x9d\xe6\xa3\x95\xe5\x92\xafE\xe7\xa9\x86\xe5\x9c\x89\xe6\x90\xaa\xe8\x99\xbe\xe5\x95\xbb\xe6\xba\xa7x\xe9\x80\x84\xe9\xbe\x9b\xe5\x8b\x83\xe8\x94\xb7\xe6\x9f\x9a\xe6\xb8\x8c\xe5\xb6\x93\xe5\x94\x91\xe5\xa7\x8b\xe7\x95\xbc\xe8\x80\xbb\\\n\xe4\xbd\xbc\xe8\x9e\xab\xe6\xb7\xb7\xe8\xaf\x8e\xe6\x89\x8c\xe7\x86\xb3\xe7\x98\x98\xe7\xbc\x91\xe6\xb8\x96\xe9\xaa\xa2\xe5\xa0\x82\xe7\x9c\xaf\xe8\xbd\xb5\xe7\xbe\xa9\xe7\xa5\x87\xe7\xbb\x90\xe6\x89\x98\xe8\xb1\xba\xe5\xbd\x97\xe8\x82\x86\xe6\x8c\xa8\xe2\x88\x88\xe8\xb5\xb7\xe8\xbe\x88\xe8\x80\xb8\xe7\xbd\xae\xe7\xbc\x85\xe7\x83\xac\xe8\x96\xaf\xe8\x8d\x9e\xe7\xb9\x81\xe8\x9c\xb7\xe8\x94\x9a\xe7\xa4\xba\xe5\x90\x8f\xe7\xb0\xaa\xcb\x8a\xe5\xa4\xae\xe9\x98\xb4\xe5\xae\x81\xe6\xb9\x94\xe8\xb0\xb1\xe5\x81\xb7\xe5\x93\xbd\xe7\xab\xad\xe7\xad\x94\xe9\xaa\x81\xe5\x93\xbc\xe6\xa6\x89\xe9\x94\x9c\xe5\xba\x84\xe8\x80\x98\xe5\x97\xab\xe6\xbe\x99\xe5\xab\x92\xe9\xa6\x86\xe7\x98\xbe\xe8\x87\xb3\xe5\xb6\x9d\xe6\xbc\x95\\\n\xe8\xa5\x81\xe7\x83\x99\xe8\xb0\xac\xe9\xbc\x93\xe6\xb2\x90\xe8\x82\x84\xe7\x8b\x99\xe9\x97\xb8\xe6\x8a\xa1\xe7\x85\x9e\xe5\xb2\xb1\xe9\xb8\xbf\xe5\x99\xab\xe5\x9d\x9a\xe5\xa6\xa5\xe8\xa4\xab\xe5\xbd\xb1\xe6\x9d\x9e\xe8\xb0\x8d\xe6\x82\x8d\xe6\x9f\x94\xe6\xa5\xaf\xe6\x8c\x8f\xef\xbc\x89\xe9\x98\x8d\xe8\xae\xa5\xe8\xaf\x9e\xe6\xb5\x8e\xe6\xb2\xa8\xe8\xbe\x9b\xe7\xa6\xbd\xe7\x8a\x87\xe9\xaa\x9e\xe7\xb0\x8b\xe6\xb2\x89\xe5\x8a\x9e\xe8\xb9\x99\xe8\x9c\x88\xe7\xad\xb7\xe8\xb5\x81\xe8\xb5\xb4\xe6\x91\x88\xe7\x8c\xae\xe6\xb1\xa4\xe9\xaa\xa4\xe6\x8e\xa8\xe6\x85\xa7%\xe6\x90\x93\xe6\xa0\xbd\xe7\x96\xb1\xe5\x81\x9c\xe6\x81\x8d\xe8\x95\xbb\xe6\x9c\x8a\xe8\x83\x9e\xe8\x88\xb8\xe5\x8f\xa9\xe6\xac\xa4\xe6\x8b\xbe\xe5\x8c\xa1\\\n\xe7\xbc\x9c\xe4\xbb\x8e\xe5\x97\x91\xe4\xbc\xa6\xe7\xae\xab\xe8\x85\xa9\xe8\x8b\x96\xe4\xbe\x91\xe6\x9e\x98\xe5\xa9\xb5\xe6\xac\xba\xe6\x9d\xa8\xe6\xa6\xbb\xe6\xa0\xa9\xef\xbc\xa9\xe7\xa5\x9b\xe6\x86\x8b\xe7\x86\x8f\xe4\xbe\x8b\xe7\x95\xb8\xe9\x95\xb3\xe5\x88\x98\xe8\x82\x9a\xe5\x8a\xbe\xe4\xbd\xb0\xe7\xa5\xba\xe5\x95\x90\xe6\x96\xbd\xe6\x95\xa2\xe9\xbe\x99\xe5\x86\xaf\xe6\xa2\xb6\xe6\x89\x9e\xef\xbc\x81\xe6\x8d\x9e\xe7\xb2\x98\xe6\xae\x96\xe9\x80\xb7\xe9\x93\xac\xe9\x82\xba\xe5\xbc\x84\xe7\xbe\xb9\xe9\x92\xb3\xe6\xa1\xa1\xe8\xbf\xbd\xe4\xbe\xa5\xe7\xbb\xa0\xe3\x84\x96\xe7\xbb\x83\xe9\xa3\x9e\xe2\x98\x86\xe9\x85\x9a\xe7\x9d\x81\xe8\x8c\x82\xe5\xbd\xa4\xe6\xb4\xb5\xe5\xa5\x8f\xe6\x97\xa5\xe5\x92\xa8\xe5\x98\xa4\xe9\xa1\xb8\\\n\xe8\x80\x81\xe8\xb9\x8a\xe9\x94\xbe\xe5\x89\x8c\xe8\x89\xba\xe6\x98\x8f\xe5\x8c\xa0\xe7\x93\xa0\xe5\xa4\xad\xe6\x83\xac\xe5\xb8\xad\xe9\xbb\xa0\xe8\x97\xbf\xe5\x8d\xb7\xe8\xae\xaf\xe2\x80\xb0\xe5\x8b\x9f\xe6\x8b\xac\xe7\xab\x91\xe8\x82\xba\xe6\xa0\xaa{\xe9\x80\x96\xe9\xab\xaf\xe9\xbb\x8d\xe5\x91\xa2\xe8\xb8\x85\xe5\xbe\xbc\xe8\xaf\x84\xe9\x92\xa4\xe6\x81\x8b\xe8\xbe\x8b\xe4\xbd\xbe\xe5\xb8\xbc\xe6\xb7\x85\xe9\x98\x9c\xe5\x8d\xb0\xe5\x95\xa7\xe7\xbb\xb3\xe7\x8f\xad\xe9\x84\x97\xe8\x80\x83\xe8\x82\xa1\xe7\x91\xa2\xe6\xb5\x8b\xe6\xb1\xaa\xe2\x80\x95\xe6\xbb\x87\xe5\x9d\xbb\xe9\xa6\x85\xe9\x95\x97\xe9\xb9\x81\xe5\x85\xae\xe5\xb5\x98\xe8\x83\x8d\xe5\xbf\xbb\xe7\x89\xb2\xe6\x94\x92\xe5\xb5\xa9\xe6\x91\x86\xe6\xb3\xae\\\n\xe6\x9c\xa3\xe5\x95\x9c\xe7\xaa\xad\xef\xb9\x96\xe6\x91\xa9\xe9\xaa\xb8\xe5\xb7\xb3\xe9\x82\x88\xe7\x9f\xa2\xe6\x9e\x9d\xe8\x83\xb3\xe5\xb1\xba\xe5\xb7\x9e\xe7\xbc\xa2\xe8\x95\xb9\xe7\x83\x83\xe6\xb9\xae\xe7\x82\xb9M\xe6\x86\xac\xe6\xac\xa3\xe5\xa7\x9d\xe6\xa5\xb9\xe6\xba\x8a\xe5\x9e\xab\xe8\x9c\x82\xe7\x96\x86\xe8\x93\x93\xe6\xb2\x87\xe7\x9b\x97\xe8\x9a\x8c\xe9\xa2\x9a\xe8\x8f\x87\xe8\xa3\x85\xe9\x97\xa9\xe6\xbf\xae\xe6\x81\xa2\xe4\xbd\xaf\xe5\xb3\xa3\xe6\xa7\xa0\xe5\xa9\x9a\xe7\x98\x97\xe4\xbe\xaf\xe4\xbb\x99\xe8\x8b\x9f\xe5\xb1\xb1\xe7\x97\x85\xe5\xb7\xa5\xe4\xbe\xa7\xe7\x94\xa6\xe5\x8a\xa9\xe6\x8a\xa4\xe8\xb0\x97\xe5\xbf\x85\xe5\x9b\xb1\xe6\x98\x8a\xe7\x8e\xa0\xe9\x92\xb9\xe5\xbd\xa7\xe7\x98\xb8\xe8\xa7\x9e\\\n\xe9\xa9\xbb\xe7\xac\xa4\xe5\x98\xbf\xe8\x99\x94\xe7\x9c\x9b\xe8\x8e\xab\xe5\x99\xa9\xe9\x83\x81\xe7\x8e\xad\xe8\xb5\x98\xe8\x85\xb0\xe8\xbe\x82\xe5\xb2\x98\xe7\x86\xb5\xe6\xb5\x93\xe5\x8b\x8d\xe6\x8a\xa2\xe5\xbc\xaf\xe6\xad\xa5\xe7\x8e\x9b\xe7\x9f\xad-\xe6\xa1\xa5\xe9\xa1\xbe\xe5\xb0\xbc\xe7\x87\x83\xe5\x88\xa4\xe9\x82\xb5\xe4\xbd\x86\xe2\x91\xa3\xe7\x94\xbe\xe7\x89\x8c\xe5\x97\xa8\xe6\xb3\xa2\xe8\x82\xbf\xe9\xa9\xbc\xe6\x8d\xb7\xe9\x80\x9f\xe4\xba\xac\xe7\x91\x9b\xe8\x8e\xa9\xe5\xb8\x9b\xe7\xbc\x86\xe8\x9a\xa7\xe6\xaf\x8d\xe6\x91\xa7\xe6\xb1\x8e\xe7\x92\xa8\xe8\x80\x8d\xe8\xbf\xb4\xe6\x8d\x8f\xe5\x8e\x90\xe7\xb2\x89\xe8\x80\x85\xe8\x9b\x99\xe9\x93\x95\xe9\x94\x9a\xe7\xa0\x8di\xe8\x8d\xbc\xe7\xbe\xa1\\\n\xe5\x93\xa5J\xe9\xb2\xb0\xe5\x89\x80\xe6\x8a\x9b\xe8\x8d\x9c\xe8\x81\x86\xe9\x81\x91\xe7\x80\x9b\xe6\xae\x93\xe6\xba\xa2\xe9\x94\x86\xe9\xa1\xbf\xe7\xa5\x9d\xe2\x91\xbe\xe8\xbe\x98\xe5\x91\x93\xe8\x8a\xa6\xe9\x9a\xb9\xe5\xa5\xbd\xe8\x83\x93\xe6\x89\xbe\xe4\xb9\xb1\xe9\xa5\xb4\xe2\x94\x90\xe6\xb6\xb2\xe9\x92\x99:\xe8\x9e\xad\xe6\xb2\x81\xe8\x87\xbb\xe9\x98\x85\xe5\x8b\x94\xe7\xbc\x98\xe6\xa6\xa7\xe7\x87\xae\xe6\x8b\x87\xe6\x9d\xbe\xe6\x85\x8e\xe4\xbe\x89\xe6\xbe\xa5\xe6\x8d\x8e\xe6\x99\x96\xe9\x85\xa3\xe8\x83\x84\xe7\xb2\xb3\xe8\xb4\xaf\xe6\x8d\x82\xe4\xb8\xaa\xe5\xa1\x8c\xe8\xb0\xa7\xe7\xb2\xb2\xe9\xb2\x9f\xe4\xb8\x87\xe5\x96\x99\xe9\x94\x80\xe6\x90\x85\xe5\xba\x90^\xe5\x96\x9c\xe5\xa8\x85\xe8\x8a\xad\\\n\xe5\x85\x9a\xe4\xba\xba\xe5\x8c\x8d\xe5\xb7\x8d\xe8\x83\xb8\xe4\xb8\xad\xe6\x88\x92\xe4\xbf\xad\xe9\xb8\xa1\xe7\x9d\xbe\xe7\x9a\x81\xe5\xa6\x84\xe5\x8c\x86\xe5\xa1\x9e\xe9\xaa\x85\xe5\xa4\x96\xe5\x9d\x97\xe5\xa8\xa3\xe7\xac\x99\xe5\xbf\x8d\xe9\x95\xa3\xe7\xb3\x97\xe9\xbc\x90\xe8\x9c\xa1\xe7\x80\x9a\xe5\x9f\x82\xe6\xb2\xa6\xe7\x89\x92\xe8\x83\x80\xe5\x9e\xa0\xe9\xab\x98\xe5\x8f\xad\xe5\x87\xa1\xe5\xbf\xa1\xe9\x97\xb5\xe6\x8d\xae@\xe8\xbf\x95\xe8\xbf\x9e\xe5\x80\x9a\xe8\x80\x8c\xe8\x9d\xb4\xe5\x90\x9f\xe7\xa6\x85\xe6\x85\x99\xe7\xba\xba\xe4\xbd\x8d\xe5\x98\x8f\xe5\xbd\xbc\xe5\xae\xb9\xe9\x92\x85\xe9\xa2\x93\xe9\x98\xae\xe5\x97\xbd\xe7\xa7\x91\xe9\x94\xb7\xe5\x8a\xac\xc9\x91\xe4\xbc\xa2\xe6\xb2\xb9\xe7\x84\xbb\\\n\xe6\x96\xad\xe5\x8d\x9e\xe5\xbc\x8b\xe6\xac\xbb\xe6\xba\xa5\xe8\x87\xa7\xe8\xa7\xbd\xe6\xb4\xbe\xe8\xb9\x82\xe4\xbb\x89\xe5\xb8\x8f\xe8\xb8\xb5\xe6\x95\x95\xe6\xa3\x8d\xe6\x89\xab\xe8\xb8\x8a\xe6\x9f\xbd\xe6\x81\x90\xe9\xab\xa1\xe7\x94\x98\xe6\x98\xb5\xe5\xba\x91\xe5\x8a\xbf\xe9\xb8\xa5\xe9\x93\xa4\xe8\x9d\x8e\xe9\x94\xae\xe8\xb8\x9d\xe5\x82\xbb\xe7\x84\x8a\xe5\x93\x89\xe6\x80\x80\xe6\x9e\x89\xe8\xb0\xb4\xe7\x8a\xaf\xe7\x83\x9d\xe5\xb5\xac\xe8\x80\x86\xe8\xbe\x8e\xe9\x86\x8d\xe5\x9c\xb9\xe5\xb5\x8c\xe7\xba\x82\xe4\xb9\xa0\xe6\xb1\xa1\xe7\x8c\xbe\xe6\xa1\x9e\xe9\x92\xa3\xe5\x81\x87\xe5\xb9\x9e\xe6\x8a\xbf\xe6\x87\x92\xe6\xa4\x85\xe8\xbf\x94\xe5\xa3\xb9\xe9\xb9\x8c\xe5\xa4\x94\xe6\xb7\xa1\xe6\xbe\x82\xe8\xb9\xad\\\n\xe5\xb4\xad\xe5\xb3\xa5\xe5\xa3\x95\xe9\x99\x86\xe7\x83\xaf\xe6\xb1\x81\xe5\x96\x81\xe5\xbf\xab\xe9\xbb\x84\xe5\xa1\x9a\xe5\x92\x80\xe8\xbf\xab\xe8\xbf\xa9\xe5\x9b\x94\xe9\x99\x94\xe5\x98\xa7\xe9\x9f\xbb\xe4\xba\xb9\xe5\xae\x9d\xe9\x9a\x9c\xe2\x85\xa1\xe7\x9b\x96\xe4\xbb\xb2\xe8\x84\x81\xe9\x9b\xbe\xe9\x97\x9f\xe7\xac\x91\xe5\x98\x80\xe5\x80\x98\xe5\xb1\xa5\xe6\x95\x96\xe7\x87\xa6\xe6\xbb\xa9\xe7\xbc\x92\xe8\xa2\xb1\xe5\xa6\x86\xe5\xa0\xbd\xe7\xa1\xab\xe8\x84\xbe\xe4\xb8\x93\xe6\xb2\x94\xe5\x88\x97\xe9\x9a\x8d\xe9\x93\xbf\xe8\x80\x97\xe8\xa4\x8a\xe6\xb7\x80\xef\xbc\x8b\xe4\xbf\xa2\xe6\xb3\xab\xe6\x90\xb4\xe7\x8a\xa8\xe7\xa1\xac\xe7\x8e\x99\xe6\xa1\x93\xe8\xa6\x86\xe5\x88\x91\xe9\x94\xa4\xe8\xb4\xbb\\\n\xe7\xac\x8f\xe6\x8f\x9c\xe6\x9f\xb3\xe9\xb9\xb3\xe6\xac\xa2\xe6\xbb\x98\xe8\x88\xb0\xe9\x94\x99\xe6\xb7\x8c\xe6\xb4\xb9\xe4\xba\xa2\xe9\x86\xa2\xe6\x92\x9d\xe6\x97\x8e\xe7\x9d\x92\xe7\x97\x95\xe9\x84\xa3\xe4\xbc\xb2\xe6\x93\x9e\xe6\xb1\xad\xe9\xb9\x89\xe8\xb2\x82\xe5\x98\x98\xe6\xa6\xa8\xe8\x92\x99\xe6\xb6\x8e\xe8\xb1\xab\xe7\x82\x8a\xe8\xbf\x9d\xe5\x93\xaa\xe9\x83\xbd\xe8\xb7\x96\xe5\x89\x90\xe2\x89\xa0\xe5\x8f\xa2\xe8\xb4\xa2\xe7\xba\xb6\xe7\xbc\xb0\xe7\x81\x8f\xe9\x8b\x89\xe8\xa7\x86\xe3\x80\x8b\xe5\x99\xad\xe7\xa4\xbc\xe6\xb2\x88""""""\n'"
lib/core/function.py,3,"b'from  __future__ import  absolute_import\nimport time\nimport lib.utils.utils as utils\nimport torch\n\nclass AverageMeter(object):\n    """"""Computes and stores the average and current value""""""\n    def __init__(self):\n        self.val = 0\n        self.avg = 0\n        self.sum = 0\n        self.count = 0\n        self.reset()\n\n    def reset(self):\n        self.val = 0\n        self.avg = 0\n        self.sum = 0\n        self.count = 0\n\n    def update(self, val, n=1):\n        self.val = val\n        self.sum += val * n\n        self.count += n\n        self.avg = self.sum / self.count\n\ndef train(config, train_loader, dataset, converter, model, criterion, optimizer, device, epoch, writer_dict=None, output_dict=None):\n\n    batch_time = AverageMeter()\n    data_time = AverageMeter()\n    losses = AverageMeter()\n\n    model.train()\n\n    end = time.time()\n    for i, (inp, idx) in enumerate(train_loader):\n        # measure data time\n        data_time.update(time.time() - end)\n\n        labels = utils.get_batch_label(dataset, idx)\n        inp = inp.to(device)\n\n        # inference\n        preds = model(inp).cpu()\n\n        # compute loss\n        batch_size = inp.size(0)\n        text, length = converter.encode(labels)\n        preds_size = torch.IntTensor([preds.size(0)] * batch_size)\n        loss = criterion(preds, text, preds_size, length)\n\n        optimizer.zero_grad()\n        loss.backward()\n        optimizer.step()\n\n        losses.update(loss.item(), inp.size(0))\n\n        batch_time.update(time.time()-end)\n        if i % config.PRINT_FREQ == 0:\n            msg = \'Epoch: [{0}][{1}/{2}]\\t\' \\\n                  \'Time {batch_time.val:.3f}s ({batch_time.avg:.3f}s)\\t\' \\\n                  \'Speed {speed:.1f} samples/s\\t\' \\\n                  \'Data {data_time.val:.3f}s ({data_time.avg:.3f}s)\\t\' \\\n                  \'Loss {loss.val:.5f} ({loss.avg:.5f})\\t\'.format(\n                      epoch, i, len(train_loader), batch_time=batch_time,\n                      speed=inp.size(0)/batch_time.val,\n                      data_time=data_time, loss=losses)\n            print(msg)\n\n            if writer_dict:\n                writer = writer_dict[\'writer\']\n                global_steps = writer_dict[\'train_global_steps\']\n                writer.add_scalar(\'train_loss\', losses.avg, global_steps)\n                writer_dict[\'train_global_steps\'] = global_steps + 1\n\n        end = time.time()\n\n\ndef validate(config, val_loader, dataset, converter, model, criterion, device, epoch, writer_dict, output_dict):\n\n    losses = AverageMeter()\n    model.eval()\n\n    n_correct = 0\n    with torch.no_grad():\n        for i, (inp, idx) in enumerate(val_loader):\n\n            labels = utils.get_batch_label(dataset, idx)\n            inp = inp.to(device)\n\n            # inference\n            preds = model(inp).cpu()\n\n            # compute loss\n            batch_size = inp.size(0)\n            text, length = converter.encode(labels)\n            preds_size = torch.IntTensor([preds.size(0)] * batch_size)\n            loss = criterion(preds, text, preds_size, length)\n\n            losses.update(loss.item(), inp.size(0))\n\n            _, preds = preds.max(2)\n            preds = preds.transpose(1, 0).contiguous().view(-1)\n            sim_preds = converter.decode(preds.data, preds_size.data, raw=False)\n            for pred, target in zip(sim_preds, labels):\n                if pred == target:\n                    n_correct += 1\n\n            if (i + 1) % config.PRINT_FREQ == 0:\n                print(\'Epoch: [{0}][{1}/{2}]\'.format(epoch, i, len(val_loader)))\n\n            if i == config.TEST.NUM_TEST:\n                break\n\n    raw_preds = converter.decode(preds.data, preds_size.data, raw=True)[:config.TEST.NUM_TEST_DISP]\n    for raw_pred, pred, gt in zip(raw_preds, sim_preds, labels):\n        print(\'%-20s => %-20s, gt: %-20s\' % (raw_pred, pred, gt))\n\n    print(n_correct)\n    print(config.TEST.NUM_TEST* config.TEST.BATCH_SIZE_PER_GPU)\n    accuracy = n_correct / float(config.TEST.NUM_TEST * config.TEST.BATCH_SIZE_PER_GPU)\n    print(\'Test loss: {:.4f}, accuray: {:.4f}\'.format(losses.avg, accuracy))\n\n    if writer_dict:\n        writer = writer_dict[\'writer\']\n        global_steps = writer_dict[\'valid_global_steps\']\n        writer.add_scalar(\'valid_acc\', accuracy, global_steps)\n        writer_dict[\'valid_global_steps\'] = global_steps + 1\n\n    return accuracy'"
lib/dataset/_360cc.py,1,"b'from __future__ import print_function, absolute_import\nimport torch.utils.data as data\nimport os\nimport numpy as np\nimport cv2\n\nclass _360CC(data.Dataset):\n    def __init__(self, config, is_train=True):\n\n        self.root = config.DATASET.ROOT\n        self.is_train = is_train\n        self.inp_h = config.MODEL.IMAGE_SIZE.H\n        self.inp_w = config.MODEL.IMAGE_SIZE.W\n\n        self.dataset_name = config.DATASET.DATASET\n\n        self.mean = np.array(config.DATASET.MEAN, dtype=np.float32)\n        self.std = np.array(config.DATASET.STD, dtype=np.float32)\n\n        char_file = config.DATASET.CHAR_FILE\n        with open(char_file, \'rb\') as file:\n            char_dict = {num: char.strip().decode(\'gbk\', \'ignore\') for num, char in enumerate(file.readlines())}\n\n        txt_file = config.DATASET.JSON_FILE[\'train\'] if is_train else config.DATASET.JSON_FILE[\'val\']\n\n        # convert name:indices to name:string\n        self.labels = []\n        with open(txt_file, \'r\', encoding=\'utf-8\') as file:\n            contents = file.readlines()\n            for c in contents:\n                imgname = c.split(\' \')[0]\n                indices = c.split(\' \')[1:]\n                string = \'\'.join([char_dict[int(idx)] for idx in indices])\n                self.labels.append({imgname: string})\n\n        print(""load {} images!"".format(self.__len__()))\n\n    def __len__(self):\n        return len(self.labels)\n\n    def __getitem__(self, idx):\n\n        img_name = list(self.labels[idx].keys())[0]\n        img = cv2.imread(os.path.join(self.root, img_name))\n        img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\n        img_h, img_w = img.shape\n\n        img = cv2.resize(img, (0,0), fx=self.inp_w / img_w, fy=self.inp_h / img_h, interpolation=cv2.INTER_CUBIC)\n        img = np.reshape(img, (self.inp_h, self.inp_w, 1))\n\n        img = img.astype(np.float32)\n        img = (img/255. - self.mean) / self.std\n        img = img.transpose([2, 0, 1])\n\n        return img, idx\n\n\n\n\n\n\n\n\n'"
lib/dataset/__init__.py,0,"b'from ._360cc import _360CC\nfrom ._own import _OWN\n\ndef get_dataset(config):\n\n    if config.DATASET.DATASET == ""360CC"":\n        return _360CC\n    elif config.DATASET.DATASET == ""OWN"":\n        return _OWN\n    else:\n        raise NotImplemented()'"
lib/dataset/_own.py,1,"b'from __future__ import print_function, absolute_import\nimport torch.utils.data as data\nimport os\nimport numpy as np\nimport cv2\n\nclass _OWN(data.Dataset):\n    def __init__(self, config, is_train=True):\n\n        self.root = config.DATASET.ROOT\n        self.is_train = is_train\n        self.inp_h = config.MODEL.IMAGE_SIZE.H\n        self.inp_w = config.MODEL.IMAGE_SIZE.W\n\n        self.dataset_name = config.DATASET.DATASET\n\n        self.mean = np.array(config.DATASET.MEAN, dtype=np.float32)\n        self.std = np.array(config.DATASET.STD, dtype=np.float32)\n\n        txt_file = config.DATASET.JSON_FILE[\'train\'] if is_train else config.DATASET.JSON_FILE[\'val\']\n\n        # convert name:indices to name:string\n        with open(txt_file, \'r\', encoding=\'utf-8\') as file:\n            self.labels = [{c.split(\' \')[0]: c.split(\' \')[-1][:-1]} for c in file.readlines()]\n\n        print(""load {} images!"".format(self.__len__()))\n\n    def __len__(self):\n        return len(self.labels)\n\n    def __getitem__(self, idx):\n\n        img_name = list(self.labels[idx].keys())[0]\n        img = cv2.imread(os.path.join(self.root, img_name))\n        img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\n        img_h, img_w = img.shape\n\n        img = cv2.resize(img, (0,0), fx=self.inp_w / img_w, fy=self.inp_h / img_h, interpolation=cv2.INTER_CUBIC)\n        img = np.reshape(img, (self.inp_h, self.inp_w, 1))\n\n        img = img.astype(np.float32)\n        img = (img/255. - self.mean) / self.std\n        img = img.transpose([2, 0, 1])\n\n        return img, idx\n\n\n\n\n\n\n\n\n'"
lib/models/crnn.py,2,"b'import torch.nn as nn\nimport torch.nn.functional as F\n\nclass BidirectionalLSTM(nn.Module):\n    # Inputs hidden units Out\n    def __init__(self, nIn, nHidden, nOut):\n        super(BidirectionalLSTM, self).__init__()\n\n        self.rnn = nn.LSTM(nIn, nHidden, bidirectional=True)\n        self.embedding = nn.Linear(nHidden * 2, nOut)\n\n    def forward(self, input):\n        recurrent, _ = self.rnn(input)\n        T, b, h = recurrent.size()\n        t_rec = recurrent.view(T * b, h)\n\n        output = self.embedding(t_rec)  # [T * b, nOut]\n        output = output.view(T, b, -1)\n\n        return output\n\nclass CRNN(nn.Module):\n    def __init__(self, imgH, nc, nclass, nh, n_rnn=2, leakyRelu=False):\n        super(CRNN, self).__init__()\n        assert imgH % 16 == 0, \'imgH has to be a multiple of 16\'\n\n        ks = [3, 3, 3, 3, 3, 3, 2]\n        ps = [1, 1, 1, 1, 1, 1, 0]\n        ss = [1, 1, 1, 1, 1, 1, 1]\n        nm = [64, 128, 256, 256, 512, 512, 512]\n\n        cnn = nn.Sequential()\n\n        def convRelu(i, batchNormalization=False):\n            nIn = nc if i == 0 else nm[i - 1]\n            nOut = nm[i]\n            cnn.add_module(\'conv{0}\'.format(i),\n                           nn.Conv2d(nIn, nOut, ks[i], ss[i], ps[i]))\n            if batchNormalization:\n                cnn.add_module(\'batchnorm{0}\'.format(i), nn.BatchNorm2d(nOut))\n            if leakyRelu:\n                cnn.add_module(\'relu{0}\'.format(i),\n                               nn.LeakyReLU(0.2, inplace=True))\n            else:\n                cnn.add_module(\'relu{0}\'.format(i), nn.ReLU(True))\n\n        convRelu(0)\n        cnn.add_module(\'pooling{0}\'.format(0), nn.MaxPool2d(2, 2))  # 64x16x64\n        convRelu(1)\n        cnn.add_module(\'pooling{0}\'.format(1), nn.MaxPool2d(2, 2))  # 128x8x32\n        convRelu(2, True)\n        convRelu(3)\n        cnn.add_module(\'pooling{0}\'.format(2),\n                       nn.MaxPool2d((2, 2), (2, 1), (0, 1)))  # 256x4x16\n        convRelu(4, True)\n        convRelu(5)\n        cnn.add_module(\'pooling{0}\'.format(3),\n                       nn.MaxPool2d((2, 2), (2, 1), (0, 1)))  # 512x2x16\n        convRelu(6, True)  # 512x1x16\n\n        self.cnn = cnn\n        self.rnn = nn.Sequential(\n            BidirectionalLSTM(512, nh, nh),\n            BidirectionalLSTM(nh, nh, nclass))\n\n    def forward(self, input):\n\n        # conv features\n        conv = self.cnn(input)\n        b, c, h, w = conv.size()\n        assert h == 1, ""the height of conv must be 1""\n        conv = conv.squeeze(2) # b *512 * width\n        conv = conv.permute(2, 0, 1)  # [w, b, c]\n        output = F.log_softmax(self.rnn(conv), dim=2)\n\n        return output\n\ndef weights_init(m):\n    classname = m.__class__.__name__\n    if classname.find(\'Conv\') != -1:\n        m.weight.data.normal_(0.0, 0.02)\n    elif classname.find(\'BatchNorm\') != -1:\n        m.weight.data.normal_(1.0, 0.02)\n        m.bias.data.fill_(0)\n\ndef get_crnn(config):\n\n    model = CRNN(config.MODEL.IMAGE_SIZE.H, 1, config.MODEL.NUM_CLASSES + 1, config.MODEL.NUM_HIDDEN)\n    model.apply(weights_init)\n\n    return model'"
lib/utils/imutils.py,0,"b""import matplotlib\nmatplotlib.use('tkagg')\nimport matplotlib.pyplot as plt\nimport cv2\nimport torch\nimport numpy as np\nfrom mpl_toolkits.mplot3d import Axes3D\n\npairs = [[i, i + 1] for i in range(16)] + \\\n                         [[i, i + 1] for i in range(17, 21)] + \\\n                         [[i, i + 1] for i in range(22, 26)] + \\\n                         [[i, i + 1] for i in range(36, 41)] + [[41, 36]] + \\\n                         [[i, i + 1] for i in range(42, 47)] + [[47, 42]] + \\\n                         [[i, i + 1] for i in range(27, 30)] + \\\n                         [[i, i + 1] for i in range(31, 35)] + \\\n                         [[i, i + 1] for i in range(48, 59)] + [[59, 48]] + \\\n                         [[i, i + 1] for i in range(60, 67)] + [[67, 60]]\n\ndef show_joints(img, pts, show_idx=False, pairs=None):\n\n    fig, ax = plt.subplots()\n    ax.imshow(img)\n\n    for i in range(pts.shape[0]):\n        if pts[i, 2] > 0:\n            ax.scatter(pts[i,0], pts[i,1], s=10, c='c', edgecolors='b', linewidth=0.3)\n            if show_idx:\n                plt.text(pts[i, 0], pts[i, 1], str(i))\n            if pairs is not None:\n                for p in pairs:\n                    ax.plot(pts[p, 0], pts[p, 1], c='b', linewidth=0.3)\n\n    plt.axis('off')\n    plt.show()\n    plt.close()\n\ndef show_joints_heatmap(img, target):\n\n    img = cv2.resize(img, target.shape[1:])\n    for i in range(target.shape[0]):\n        t = target[i, :, :]\n        plt.imshow(img, alpha=0.5)\n        plt.imshow(t, alpha=0.5)\n        plt.axis('off')\n        plt.show()\n    plt.close()\n\ndef show_joints_boundary(img, target):\n\n    img = cv2.resize(img, target.shape[1:])\n    for i in range(target.shape[0]):\n        t = target[i, :, :]\n        plt.imshow(img, alpha=0.5)\n        plt.imshow(t, alpha=0.5)\n        plt.axis('off')\n        plt.show()\n    plt.close()\n\n# def show_joints_3d(img, pts, show_idx=False, pairs=None):\n#\n#     fig = plt.figure()\n#     ax = fig.add_subplot(111, projection='3d')\n#\n#     ax.imshow(img)\n#\n#     for i in range(pts.size(0)):\n#         if pts[i, 2] > 0:\n#             ax.scatter(pts[i,0], pts[i,1], pts[i,2], s=5, c='c', edgecolors='b', linewidth=0.3)\n#             if show_idx:\n#                 plt.text(pts[i, 0], pts[i, 1], str(i))\n#\n#     plt.axis('off')\n#     plt.show()\n#     plt.close()\ndef show_joints_3d(predPts, pairs=None):\n\n    ax = plt.subplot(111, projection='3d')\n\n    view_angle = (-160, 30)\n    if predPts.shape[1] > 2:\n        ax.scatter(predPts[:, 2], predPts[:, 0], predPts[:, 1], s=5, c='c', marker='o', edgecolors='b', linewidths=0.5)\n        # ax_pred.scatter(predPts[0, 2], predPts[0, 0], predPts[0, 1], s=10, c='g', marker='*')\n        if pairs is not None:\n            for p in pairs:\n                ax.plot(predPts[p, 2], predPts[p, 0], predPts[p, 1], c='b',  linewidth=0.5)\n    else:\n        ax.scatter([0] * predPts.shape[0], predPts[:, 0], predPts[:, 1], s=10, marker='*')\n    ax.set_xlabel('z', fontsize=10)\n    ax.set_ylabel('x', fontsize=10)\n    ax.set_zlabel('y', fontsize=10)\n    ax.view_init(*view_angle)\n    plt.show()\n    plt.close()\n\ndef save_plots(config, imgs, ppts_2d, ppts_3d, tpts_2d, tpts_3d, filename, nrows=4, ncols=4):\n\n    # transform images\n    mean = np.array(config.DATASET.MEAN, dtype=np.float32)\n    std = np.array(config.DATASET.STD, dtype=np.float32)\n    imgs = imgs.transpose(0, 2, 3, 1)\n    imgs = (imgs * std + mean) * 255.\n    imgs = imgs.astype(np.uint8)\n\n    # plot 2d\n    fig, axes = plt.subplots(nrows=nrows, ncols=ncols, figsize=(15,15))\n\n    cnt = 0\n    for i in range(nrows):\n        for j in range(ncols):\n            # Output a grid of images\n            axes[i, j].imshow(imgs[cnt])\n            axes[i, j].scatter(ppts_2d[cnt, :, 0]*4, ppts_2d[cnt, :, 1]*4, s=10, c='c', edgecolors='k', linewidth=1)\n            axes[i, j].scatter(tpts_2d[cnt, :, 0] * 4, tpts_2d[cnt, :, 1] * 4, s=10, c='r', edgecolors='k', linewidth=1)\n            axes[i, j].axis('off')\n            if pairs is not None:\n                for p in pairs:\n                    axes[i, j].plot(ppts_2d[cnt, p, 0] * 4, ppts_2d[cnt, p, 1] * 4, c='b', linewidth=0.5)\n                    axes[i, j].plot(tpts_2d[cnt, p, 0] * 4, tpts_2d[cnt, p, 1] * 4, c='r', linewidth=0.5)\n            cnt += 1\n    plt.savefig(filename + '_2d.png')\n    plt.close()\n\n    # plot 3d\n    fig = plt.figure(figsize=(15,15))\n    for i in range(nrows*ncols):\n        ax = fig.add_subplot(nrows, ncols, i+1, projection='3d')\n        ax.scatter(ppts_3d[i, :, 2], ppts_3d[i, :, 0], ppts_3d[i, :, 1], s=10, color='b', edgecolor='k', alpha=0.6)\n        ax.scatter(tpts_3d[i, :, 2], tpts_3d[i, :, 0], tpts_3d[i, :, 1], s=10, color='r', edgecolor='k', alpha=0.6)\n        ax.view_init(elev=205, azim=110)\n        # ax.axis('off')\n        if pairs is not None:\n            for p in pairs:\n                ax.plot(ppts_3d[i, p, 2], ppts_3d[i, p, 0], ppts_3d[i, p, 1], c='b', linewidth=1)\n                ax.plot(tpts_3d[i, p, 2], tpts_3d[i, p, 0], tpts_3d[i, p, 1], c='r', linewidth=1)\n    plt.savefig(filename + '_3d.png')\n    plt.close()\n\n\n\n\n\n"""
lib/utils/preprocessing.py,0,"b""'''\n360\xe4\xb8\x87\xe4\xb8\xad\xe6\x96\x87\xe8\xae\xad\xe7\xbb\x83\xe9\x9b\x86\xe6\xa0\x87\xe7\xad\xbe\xe4\xbf\xae\xe6\x94\xb9\n'''\n\n# chinese characters dictionary for 3.6 million data set.\nwith open('../char_std_5990.txt', 'rb') as file:\n\tchar_dict = {num : char.strip().decode('gbk','ignore') for num, char in enumerate(file.readlines())}\n\n# processing output\nwith open('../test.txt') as file:\n\tvalue_list = ['%s %s'%(segment_list.split(' ')[0], ''.join([char_dict[int(val)] for val in segment_list[:-1].split(' ')[1:]])) for segment_list in file.readlines()]\n\n# final output\nwith open('test.txt', 'w', encoding='utf-8') as file:\n\t[file.write(val+'\\n') for val in value_list]\n\n'''\norginal version\n'''\n\n# with open('../char_std_5990.txt', 'rb') as file:\n# \tchar_dict = {num : char.strip().decode('gbk','ignore') for num, char in enumerate(file.readlines())}\n\n#  value_list = []\n# with open('../test.txt') as file:\n# \tlabel_list = file.readlines()\n# \tfor segment_list in label_list:\n# \t\tkey = segment_list.split(' ')[0]\n# \t\tsegment_list = segment_list[:-1].split(' ')[1:]\n# \t\ttemp = [char_dict[int(val)] for val in segment_list]\n# \t\tvalue_list.append('%s %s'%(key, ''.join(temp)))\n\t\n# with open('test.txt', 'w', encoding='utf-8') as file:\n# \t[ file.write(val+'\\n') for val in value_list]\n"""
lib/utils/utils.py,7,"b'import torch.optim as optim\nimport time\nfrom pathlib import Path\nimport os\nimport torch\n\ndef get_optimizer(config, model):\n\n    optimizer = None\n\n    if config.TRAIN.OPTIMIZER == ""sgd"":\n        optimizer = optim.SGD(\n            filter(lambda p: p.requires_grad, model.parameters()),\n            lr=config.TRAIN.LR,\n            momentum=config.TRAIN.MOMENTUM,\n            weight_decay=config.TRAIN.WD,\n            nesterov=config.TRAIN.NESTEROV\n        )\n    elif config.TRAIN.OPTIMIZER == ""adam"":\n        optimizer = optim.Adam(\n            filter(lambda p: p.requires_grad, model.parameters()),\n            lr=config.TRAIN.LR,\n        )\n    elif config.TRAIN.OPTIMIZER == ""rmsprop"":\n        optimizer = optim.RMSprop(\n            filter(lambda p: p.requires_grad, model.parameters()),\n            lr=config.TRAIN.LR,\n            momentum=config.TRAIN.MOMENTUM,\n            weight_decay=config.TRAIN.WD,\n            # alpha=config.TRAIN.RMSPROP_ALPHA,\n            # centered=config.TRAIN.RMSPROP_CENTERED\n        )\n\n    return optimizer\n\ndef create_log_folder(cfg, phase=\'train\'):\n    root_output_dir = Path(cfg.OUTPUT_DIR)\n    # set up logger\n    if not root_output_dir.exists():\n        print(\'=> creating {}\'.format(root_output_dir))\n        root_output_dir.mkdir()\n\n    dataset = cfg.DATASET.DATASET\n    model = cfg.MODEL.NAME\n\n    time_str = time.strftime(\'%Y-%m-%d-%H-%M\')\n    checkpoints_output_dir = root_output_dir / dataset / model / time_str / \'checkpoints\'\n\n    print(\'=> creating {}\'.format(checkpoints_output_dir))\n    checkpoints_output_dir.mkdir(parents=True, exist_ok=True)\n\n    tensorboard_log_dir = root_output_dir / dataset / model / time_str / \'log\'\n    print(\'=> creating {}\'.format(tensorboard_log_dir))\n    tensorboard_log_dir.mkdir(parents=True, exist_ok=True)\n\n\n    return {\'chs_dir\': str(checkpoints_output_dir), \'tb_dir\': str(tensorboard_log_dir)}\n\n\ndef get_batch_label(d, i):\n    label = []\n    for idx in i:\n        label.append(list(d.labels[idx].values())[0])\n    return label\n\nclass strLabelConverter(object):\n    """"""Convert between str and label.\n\n    NOTE:\n        Insert `blank` to the alphabet for CTC.\n\n    Args:\n        alphabet (str): set of the possible characters.\n        ignore_case (bool, default=True): whether or not to ignore all of the case.\n    """"""\n\n    def __init__(self, alphabet, ignore_case=False):\n        self._ignore_case = ignore_case\n        if self._ignore_case:\n            alphabet = alphabet.lower()\n        self.alphabet = alphabet + \'-\'  # for `-1` index\n\n        self.dict = {}\n        for i, char in enumerate(alphabet):\n            # NOTE: 0 is reserved for \'blank\' required by wrap_ctc\n            self.dict[char] = i + 1\n\n    def encode(self, text):\n        """"""Support batch or single str.\n\n        Args:\n            text (str or list of str): texts to convert.\n\n        Returns:\n            torch.IntTensor [length_0 + length_1 + ... length_{n - 1}]: encoded texts.\n            torch.IntTensor [n]: length of each text.\n        """"""\n\n        length = []\n        result = []\n        decode_flag = True if type(text[0])==bytes else False\n\n        for item in text:\n\n            if decode_flag:\n                item = item.decode(\'utf-8\',\'strict\')\n            length.append(len(item))\n            for char in item:\n                index = self.dict[char]\n                result.append(index)\n        text = result\n        return (torch.IntTensor(text), torch.IntTensor(length))\n\n    def decode(self, t, length, raw=False):\n        """"""Decode encoded texts back into strs.\n\n        Args:\n            torch.IntTensor [length_0 + length_1 + ... length_{n - 1}]: encoded texts.\n            torch.IntTensor [n]: length of each text.\n\n        Raises:\n            AssertionError: when the texts and its length does not match.\n\n        Returns:\n            text (str or list of str): texts to convert.\n        """"""\n        if length.numel() == 1:\n            length = length[0]\n            assert t.numel() == length, ""text with length: {} does not match declared length: {}"".format(t.numel(), length)\n            if raw:\n                return \'\'.join([self.alphabet[i - 1] for i in t])\n            else:\n                char_list = []\n                for i in range(length):\n                    if t[i] != 0 and (not (i > 0 and t[i - 1] == t[i])):\n                        char_list.append(self.alphabet[t[i] - 1])\n                return \'\'.join(char_list)\n        else:\n            # batch mode\n            assert t.numel() == length.sum(), ""texts with length: {} does not match declared length: {}"".format(t.numel(), length.sum())\n            texts = []\n            index = 0\n            for i in range(length.numel()):\n                l = length[i]\n                texts.append(\n                    self.decode(\n                        t[index:index + l], torch.IntTensor([l]), raw=raw))\n                index += l\n            return texts\n\ndef get_char_dict(path):\n    with open(path, \'rb\') as file:\n        char_dict = {num: char.strip().decode(\'gbk\', \'ignore\') for num, char in enumerate(file.readlines())}'"
