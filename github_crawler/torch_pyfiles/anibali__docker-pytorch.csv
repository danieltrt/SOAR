file_path,api_count,code
manager.py,0,"b""#!/usr/bin/env python3\n\nimport jinja2\nimport yaml\nfrom pathlib import Path\n\n\nDOCKER_REPOSITORY = 'anibali/pytorch'\n\n\ndef main():\n  # Directory for GitHub Actions workflow configuration files.\n  workflow_dir = Path('.github', 'workflows')\n  workflow_dir.mkdir(parents=True, exist_ok=True)\n\n  # Delete existing build-and-push workflows.\n  for old_workflow_path in workflow_dir.glob('publish_*.yml'):\n    old_workflow_path.unlink()\n\n  # Template file for Docker build and push workflows.\n  workflow_template_path = Path('publish_workflow.yml.jinja2')\n  workflow_template = jinja2.Template(workflow_template_path.read_text(encoding='utf-8'),\n                                      keep_trailing_newline=True)\n\n  # Read Docker image configurations.\n  images = yaml.safe_load(Path('images.yml').read_text(encoding='utf-8'))\n\n  for image_id, image_opts in images.items():\n    if image_opts.get('deprecated', False):\n      continue\n\n    tags = [image_id] + image_opts.get('extra_tags', [])\n    template_path = Path(image_opts['template']['path'])\n    template_vars = image_opts['template'].get('vars', {})\n\n    template = jinja2.Template(template_path.read_text(encoding='utf-8'),\n                               keep_trailing_newline=True)\n\n    dockerfile_dir = Path('dockerfiles', image_id)\n    dockerfile_dir.mkdir(parents=True, exist_ok=True)\n\n    dockerfile_path = dockerfile_dir.joinpath('Dockerfile')\n    dockerfile_content = template.render(**template_vars)\n    dockerfile_path.write_text(dockerfile_content, encoding='utf-8')\n\n    workflow_path = workflow_dir.joinpath(f'publish_{image_id}.yml')\n    workflow_content = workflow_template.render(\n      image_id=image_id,\n      repository=DOCKER_REPOSITORY,\n      tags=tags,\n      dockerfile_dir=str(dockerfile_dir),\n      workflow_file=str(workflow_path),\n    )\n    workflow_path.write_text(workflow_content, encoding='utf-8')\n\n\nif __name__ == '__main__':\n  main()\n"""
