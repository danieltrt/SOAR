file_path,api_count,code
data/download.py,0,"b'#\n# CREDIT: https://stackoverflow.com/a/39225039\n#\n\nimport requests\n\ndef progress_bar(some_iter):\n    try:\n        from tqdm import tqdm\n        return tqdm(some_iter)\n    except ModuleNotFoundError:\n        return some_iter\n\ndef download_file_from_google_drive(id, destination):\n    print(""Trying to fetch {}"".format(destination))\n\n    def get_confirm_token(response):\n        for key, value in response.cookies.items():\n            if key.startswith(\'download_warning\'):\n                return value\n\n        return None\n\n    def save_response_content(response, destination):\n        CHUNK_SIZE = 32768\n\n        with open(destination, ""wb"") as f:\n            for chunk in progress_bar(response.iter_content(CHUNK_SIZE)):\n                if chunk: # filter out keep-alive new chunks\n                    f.write(chunk)\n\n    URL = ""https://docs.google.com/uc?export=download""\n\n    session = requests.Session()\n\n    response = session.get(URL, params = { \'id\' : id }, stream = True)\n    token = get_confirm_token(response)\n\n    if token:\n        params = { \'id\' : id, \'confirm\' : token }\n        response = session.get(URL, params = params, stream = True)\n\n    save_response_content(response, destination)\n\n\nif __name__ == ""__main__"":\n    import sys\n    if len(sys.argv) is not 3:\n        print(""Usage: python download.py drive_file_id destination_file_path"")\n    else:\n        # TAKE ID FROM SHAREABLE LINK\n        file_id = sys.argv[1]\n        # DESTINATION FILE ON YOUR DISK\n        destination = sys.argv[2]\n        download_file_from_google_drive(file_id, destination)\n'"
chapters/chapter_3/data/download.py,0,"b'#\n# CREDIT: https://stackoverflow.com/a/39225039\n#\n\nimport requests\n\ndef progress_bar(some_iter):\n    try:\n        from tqdm import tqdm\n        return tqdm(some_iter)\n    except ModuleNotFoundError:\n        return some_iter\n\ndef download_file_from_google_drive(id, destination):\n    print(""Trying to fetch {}"".format(destination))\n\n    def get_confirm_token(response):\n        for key, value in response.cookies.items():\n            if key.startswith(\'download_warning\'):\n                return value\n\n        return None\n\n    def save_response_content(response, destination):\n        CHUNK_SIZE = 32768\n\n        with open(destination, ""wb"") as f:\n            for chunk in progress_bar(response.iter_content(CHUNK_SIZE)):\n                if chunk: # filter out keep-alive new chunks\n                    f.write(chunk)\n\n    URL = ""https://docs.google.com/uc?export=download""\n\n    session = requests.Session()\n\n    response = session.get(URL, params = { \'id\' : id }, stream = True)\n    token = get_confirm_token(response)\n\n    if token:\n        params = { \'id\' : id, \'confirm\' : token }\n        response = session.get(URL, params = params, stream = True)\n\n    save_response_content(response, destination)\n\n\nif __name__ == ""__main__"":\n    import sys\n    if len(sys.argv) is not 3:\n        print(""Usage: python download.py drive_file_id destination_file_path"")\n    else:\n        # TAKE ID FROM SHAREABLE LINK\n        file_id = sys.argv[1]\n        # DESTINATION FILE ON YOUR DISK\n        destination = sys.argv[2]\n        download_file_from_google_drive(file_id, destination)\n'"
chapters/chapter_5/data/download.py,0,"b'#\n# CREDIT: https://stackoverflow.com/a/39225039\n#\n\nimport requests\n\ndef progress_bar(some_iter):\n    try:\n        from tqdm import tqdm\n        return tqdm(some_iter)\n    except ModuleNotFoundError:\n        return some_iter\n\ndef download_file_from_google_drive(id, destination):\n    print(""Trying to fetch {}"".format(destination))\n\n    def get_confirm_token(response):\n        for key, value in response.cookies.items():\n            if key.startswith(\'download_warning\'):\n                return value\n\n        return None\n\n    def save_response_content(response, destination):\n        CHUNK_SIZE = 32768\n\n        with open(destination, ""wb"") as f:\n            for chunk in progress_bar(response.iter_content(CHUNK_SIZE)):\n                if chunk: # filter out keep-alive new chunks\n                    f.write(chunk)\n\n    URL = ""https://docs.google.com/uc?export=download""\n\n    session = requests.Session()\n\n    response = session.get(URL, params = { \'id\' : id }, stream = True)\n    token = get_confirm_token(response)\n\n    if token:\n        params = { \'id\' : id, \'confirm\' : token }\n        response = session.get(URL, params = params, stream = True)\n\n    save_response_content(response, destination)\n\n\nif __name__ == ""__main__"":\n    import sys\n    if len(sys.argv) is not 3:\n        print(""Usage: python download.py drive_file_id destination_file_path"")\n    else:\n        # TAKE ID FROM SHAREABLE LINK\n        file_id = sys.argv[1]\n        # DESTINATION FILE ON YOUR DISK\n        destination = sys.argv[2]\n        download_file_from_google_drive(file_id, destination)\n'"
chapters/chapter_4/4_2_mlp_surnames/data/download.py,0,"b'#\n# CREDIT: https://stackoverflow.com/a/39225039\n#\n\nimport requests\n\ndef progress_bar(some_iter):\n    try:\n        from tqdm import tqdm\n        return tqdm(some_iter)\n    except ModuleNotFoundError:\n        return some_iter\n\ndef download_file_from_google_drive(id, destination):\n    print(""Trying to fetch {}"".format(destination))\n\n    def get_confirm_token(response):\n        for key, value in response.cookies.items():\n            if key.startswith(\'download_warning\'):\n                return value\n\n        return None\n\n    def save_response_content(response, destination):\n        CHUNK_SIZE = 32768\n\n        with open(destination, ""wb"") as f:\n            for chunk in progress_bar(response.iter_content(CHUNK_SIZE)):\n                if chunk: # filter out keep-alive new chunks\n                    f.write(chunk)\n\n    URL = ""https://docs.google.com/uc?export=download""\n\n    session = requests.Session()\n\n    response = session.get(URL, params = { \'id\' : id }, stream = True)\n    token = get_confirm_token(response)\n\n    if token:\n        params = { \'id\' : id, \'confirm\' : token }\n        response = session.get(URL, params = params, stream = True)\n\n    save_response_content(response, destination)\n\n\nif __name__ == ""__main__"":\n    import sys\n    if len(sys.argv) is not 3:\n        print(""Usage: python download.py drive_file_id destination_file_path"")\n    else:\n        # TAKE ID FROM SHAREABLE LINK\n        file_id = sys.argv[1]\n        # DESTINATION FILE ON YOUR DISK\n        destination = sys.argv[2]\n        download_file_from_google_drive(file_id, destination)\n'"
chapters/chapter_4/4_4_cnn_surnames/data/download.py,0,"b'#\n# CREDIT: https://stackoverflow.com/a/39225039\n#\n\nimport requests\n\ndef progress_bar(some_iter):\n    try:\n        from tqdm import tqdm\n        return tqdm(some_iter)\n    except ModuleNotFoundError:\n        return some_iter\n\ndef download_file_from_google_drive(id, destination):\n    print(""Trying to fetch {}"".format(destination))\n\n    def get_confirm_token(response):\n        for key, value in response.cookies.items():\n            if key.startswith(\'download_warning\'):\n                return value\n\n        return None\n\n    def save_response_content(response, destination):\n        CHUNK_SIZE = 32768\n\n        with open(destination, ""wb"") as f:\n            for chunk in progress_bar(response.iter_content(CHUNK_SIZE)):\n                if chunk: # filter out keep-alive new chunks\n                    f.write(chunk)\n\n    URL = ""https://docs.google.com/uc?export=download""\n\n    session = requests.Session()\n\n    response = session.get(URL, params = { \'id\' : id }, stream = True)\n    token = get_confirm_token(response)\n\n    if token:\n        params = { \'id\' : id, \'confirm\' : token }\n        response = session.get(URL, params = params, stream = True)\n\n    save_response_content(response, destination)\n\n\nif __name__ == ""__main__"":\n    import sys\n    if len(sys.argv) is not 3:\n        print(""Usage: python download.py drive_file_id destination_file_path"")\n    else:\n        # TAKE ID FROM SHAREABLE LINK\n        file_id = sys.argv[1]\n        # DESTINATION FILE ON YOUR DISK\n        destination = sys.argv[2]\n        download_file_from_google_drive(file_id, destination)\n'"
chapters/chapter_5/5_2_CBOW/data/download.py,0,"b'#\n# CREDIT: https://stackoverflow.com/a/39225039\n#\n\nimport requests\n\ndef progress_bar(some_iter):\n    try:\n        from tqdm import tqdm\n        return tqdm(some_iter)\n    except ModuleNotFoundError:\n        return some_iter\n\ndef download_file_from_google_drive(id, destination):\n    print(""Trying to fetch {}"".format(destination))\n\n    def get_confirm_token(response):\n        for key, value in response.cookies.items():\n            if key.startswith(\'download_warning\'):\n                return value\n\n        return None\n\n    def save_response_content(response, destination):\n        CHUNK_SIZE = 32768\n\n        with open(destination, ""wb"") as f:\n            for chunk in progress_bar(response.iter_content(CHUNK_SIZE)):\n                if chunk: # filter out keep-alive new chunks\n                    f.write(chunk)\n\n    URL = ""https://docs.google.com/uc?export=download""\n\n    session = requests.Session()\n\n    response = session.get(URL, params = { \'id\' : id }, stream = True)\n    token = get_confirm_token(response)\n\n    if token:\n        params = { \'id\' : id, \'confirm\' : token }\n        response = session.get(URL, params = params, stream = True)\n\n    save_response_content(response, destination)\n\n\nif __name__ == ""__main__"":\n    import sys\n    if len(sys.argv) is not 3:\n        print(""Usage: python download.py drive_file_id destination_file_path"")\n    else:\n        # TAKE ID FROM SHAREABLE LINK\n        file_id = sys.argv[1]\n        # DESTINATION FILE ON YOUR DISK\n        destination = sys.argv[2]\n        download_file_from_google_drive(file_id, destination)\n'"
chapters/chapter_5/5_3_doc_classification/data/download.py,0,"b'#\n# CREDIT: https://stackoverflow.com/a/39225039\n#\n\nimport requests\n\ndef progress_bar(some_iter):\n    try:\n        from tqdm import tqdm\n        return tqdm(some_iter)\n    except ModuleNotFoundError:\n        return some_iter\n\ndef download_file_from_google_drive(id, destination):\n    print(""Trying to fetch {}"".format(destination))\n\n    def get_confirm_token(response):\n        for key, value in response.cookies.items():\n            if key.startswith(\'download_warning\'):\n                return value\n\n        return None\n\n    def save_response_content(response, destination):\n        CHUNK_SIZE = 32768\n\n        with open(destination, ""wb"") as f:\n            for chunk in progress_bar(response.iter_content(CHUNK_SIZE)):\n                if chunk: # filter out keep-alive new chunks\n                    f.write(chunk)\n\n    URL = ""https://docs.google.com/uc?export=download""\n\n    session = requests.Session()\n\n    response = session.get(URL, params = { \'id\' : id }, stream = True)\n    token = get_confirm_token(response)\n\n    if token:\n        params = { \'id\' : id, \'confirm\' : token }\n        response = session.get(URL, params = params, stream = True)\n\n    save_response_content(response, destination)\n\n\nif __name__ == ""__main__"":\n    import sys\n    if len(sys.argv) is not 3:\n        print(""Usage: python download.py drive_file_id destination_file_path"")\n    else:\n        # TAKE ID FROM SHAREABLE LINK\n        file_id = sys.argv[1]\n        # DESTINATION FILE ON YOUR DISK\n        destination = sys.argv[2]\n        download_file_from_google_drive(file_id, destination)\n'"
chapters/chapter_6/classifying-surnames/data/download.py,0,"b'#\n# CREDIT: https://stackoverflow.com/a/39225039\n#\n\nimport requests\n\ndef progress_bar(some_iter):\n    try:\n        from tqdm import tqdm\n        return tqdm(some_iter)\n    except ModuleNotFoundError:\n        return some_iter\n\ndef download_file_from_google_drive(id, destination):\n    print(""Trying to fetch {}"".format(destination))\n\n    def get_confirm_token(response):\n        for key, value in response.cookies.items():\n            if key.startswith(\'download_warning\'):\n                return value\n\n        return None\n\n    def save_response_content(response, destination):\n        CHUNK_SIZE = 32768\n\n        with open(destination, ""wb"") as f:\n            for chunk in progress_bar(response.iter_content(CHUNK_SIZE)):\n                if chunk: # filter out keep-alive new chunks\n                    f.write(chunk)\n\n    URL = ""https://docs.google.com/uc?export=download""\n\n    session = requests.Session()\n\n    response = session.get(URL, params = { \'id\' : id }, stream = True)\n    token = get_confirm_token(response)\n\n    if token:\n        params = { \'id\' : id, \'confirm\' : token }\n        response = session.get(URL, params = params, stream = True)\n\n    save_response_content(response, destination)\n\n\nif __name__ == ""__main__"":\n    import sys\n    if len(sys.argv) is not 3:\n        print(""Usage: python download.py drive_file_id destination_file_path"")\n    else:\n        # TAKE ID FROM SHAREABLE LINK\n        file_id = sys.argv[1]\n        # DESTINATION FILE ON YOUR DISK\n        destination = sys.argv[2]\n        download_file_from_google_drive(file_id, destination)\n'"
chapters/chapter_7/7_3_surname_generation/data/download.py,0,"b'#\n# CREDIT: https://stackoverflow.com/a/39225039\n#\n\nimport requests\n\ndef progress_bar(some_iter):\n    try:\n        from tqdm import tqdm\n        return tqdm(some_iter)\n    except ModuleNotFoundError:\n        return some_iter\n\ndef download_file_from_google_drive(id, destination):\n    print(""Trying to fetch {}"".format(destination))\n\n    def get_confirm_token(response):\n        for key, value in response.cookies.items():\n            if key.startswith(\'download_warning\'):\n                return value\n\n        return None\n\n    def save_response_content(response, destination):\n        CHUNK_SIZE = 32768\n\n        with open(destination, ""wb"") as f:\n            for chunk in progress_bar(response.iter_content(CHUNK_SIZE)):\n                if chunk: # filter out keep-alive new chunks\n                    f.write(chunk)\n\n    URL = ""https://docs.google.com/uc?export=download""\n\n    session = requests.Session()\n\n    response = session.get(URL, params = { \'id\' : id }, stream = True)\n    token = get_confirm_token(response)\n\n    if token:\n        params = { \'id\' : id, \'confirm\' : token }\n        response = session.get(URL, params = params, stream = True)\n\n    save_response_content(response, destination)\n\n\nif __name__ == ""__main__"":\n    import sys\n    if len(sys.argv) is not 3:\n        print(""Usage: python download.py drive_file_id destination_file_path"")\n    else:\n        # TAKE ID FROM SHAREABLE LINK\n        file_id = sys.argv[1]\n        # DESTINATION FILE ON YOUR DISK\n        destination = sys.argv[2]\n        download_file_from_google_drive(file_id, destination)\n'"
chapters/chapter_8/8_5_NMT/data/download.py,0,"b'#\n# CREDIT: https://stackoverflow.com/a/39225039\n#\n\nimport requests\n\ndef progress_bar(some_iter):\n    try:\n        from tqdm import tqdm\n        return tqdm(some_iter)\n    except ModuleNotFoundError:\n        return some_iter\n\ndef download_file_from_google_drive(id, destination):\n    print(""Trying to fetch {}"".format(destination))\n\n    def get_confirm_token(response):\n        for key, value in response.cookies.items():\n            if key.startswith(\'download_warning\'):\n                return value\n\n        return None\n\n    def save_response_content(response, destination):\n        CHUNK_SIZE = 32768\n\n        with open(destination, ""wb"") as f:\n            for chunk in progress_bar(response.iter_content(CHUNK_SIZE)):\n                if chunk: # filter out keep-alive new chunks\n                    f.write(chunk)\n\n    URL = ""https://docs.google.com/uc?export=download""\n\n    session = requests.Session()\n\n    response = session.get(URL, params = { \'id\' : id }, stream = True)\n    token = get_confirm_token(response)\n\n    if token:\n        params = { \'id\' : id, \'confirm\' : token }\n        response = session.get(URL, params = params, stream = True)\n\n    save_response_content(response, destination)\n\n\nif __name__ == ""__main__"":\n    import sys\n    if len(sys.argv) is not 3:\n        print(""Usage: python download.py drive_file_id destination_file_path"")\n    else:\n        # TAKE ID FROM SHAREABLE LINK\n        file_id = sys.argv[1]\n        # DESTINATION FILE ON YOUR DISK\n        destination = sys.argv[2]\n        download_file_from_google_drive(file_id, destination)\n'"
